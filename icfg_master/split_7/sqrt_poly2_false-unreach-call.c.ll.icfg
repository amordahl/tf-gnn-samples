[Function: main]
[BB 0x185afa0]
  %1 = alloca i32, align 4
  %2 = alloca double, align 8
  %3 = alloca double, align 8
  store i32 0, i32* %1, align 4
[Caller:   %4 = call double (...) @__VERIFIER_nondet_double()]
[Callee: __VERIFIER_nondet_double]
  store double %4, double* %2, align 8
  %5 = load double, double* %2, align 8
  %6 = fcmp oge double %5, 1.000000e+00
  br i1 %6, label %7, label %10
Successor: 0x185b5f0
Successor: 0x185b680
[BB 0x185b5f0]
  %8 = load double, double* %2, align 8
  %9 = fcmp ole double %8, 1.000000e+10
  br label %10
Successor: 0x185b680
[BB 0x185b680]
  %11 = phi i1 [ false, %0 ], [ %9, %7 ]
  %12 = zext i1 %11 to i32
[Caller:   call void @__VERIFIER_assume(i32 %12)]
[Callee: __VERIFIER_assume]
  %13 = load double, double* %2, align 8
[Caller:   %14 = call double @sqrt(double %13) #3]
[Callee: sqrt]
  store double %14, double* %3, align 8
  %15 = load double, double* %3, align 8
  %16 = fcmp oge double %15, 0.000000e+00
  br i1 %16, label %17, label %20
Successor: 0x185bfe0
Successor: 0x185c070
[BB 0x185bfe0]
  %18 = load double, double* %3, align 8
  %19 = fcmp ole double %18, 1.000000e+06
  br label %20
Successor: 0x185c070
[BB 0x185c070]
  %21 = phi i1 [ false, %10 ], [ %19, %17 ]
  %22 = zext i1 %21 to i32
[Caller:   call void @__VERIFIER_assert(i32 %22)]
[Callee: __VERIFIER_assert]
  ret i32 0
[Function: __VERIFIER_nondet_double]
[Function: __VERIFIER_assume]
[Function: sqrt]
[BB 0x1858130]
  %2 = alloca double, align 8
  %3 = alloca %union.u, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  store double %0, double* %2, align 8
  %6 = load double, double* %2, align 8
  %7 = bitcast %union.u* %3 to double*
  store double %6, double* %7, align 8
  %8 = bitcast %union.u* %3 to [2 x i32]*
  %9 = getelementptr inbounds [2 x i32], [2 x i32]* %8, i64 0, i64 0
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 2146435072
  %12 = ashr i32 %11, 20
  store i32 %12, i32* %5, align 4
  %13 = bitcast %union.u* %3 to [2 x i32]*
  %14 = getelementptr inbounds [2 x i32], [2 x i32]* %13, i64 0, i64 0
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, -2146435073
  %17 = or i32 %16, 1072693248
  %18 = bitcast %union.u* %3 to [2 x i32]*
  %19 = getelementptr inbounds [2 x i32], [2 x i32]* %18, i64 0, i64 0
  store i32 %17, i32* %19, align 8
  %20 = bitcast %union.u* %3 to double*
  %21 = load double, double* %20, align 8
  %22 = fmul double %21, 5.000000e-01
  store double %22, double* %4, align 8
  %23 = load double, double* @C1, align 8
  %24 = load double, double* @C2, align 8
  %25 = fadd double %23, %24
  %26 = load double, double* @C3, align 8
  %27 = load double, double* @C4, align 8
  %28 = load double, double* @C5, align 8
  %29 = load double, double* %4, align 8
  %30 = fmul double %28, %29
  %31 = fadd double %27, %30
  %32 = load double, double* %4, align 8
  %33 = fmul double %31, %32
  %34 = fadd double %26, %33
  %35 = load double, double* %4, align 8
  %36 = fmul double %34, %35
  %37 = fadd double %25, %36
  store double %37, double* %4, align 8
  %38 = load i32, i32* %5, align 4
  %39 = srem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %44
Successor: 0x1858300
Successor: 0x185a110
[BB 0x1858300]
  %42 = load i32, i32* %5, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %5, align 4
  br label %48
Successor: 0x185a3e0
[BB 0x185a110]
  %45 = load double, double* %4, align 8
  %46 = load double, double* @C0, align 8
  %47 = fmul double %45, %46
  store double %47, double* %4, align 8
  br label %48
Successor: 0x185a3e0
[BB 0x185a3e0]
  %49 = load i32, i32* %5, align 4
  %50 = sdiv i32 %49, 2
  %51 = add nsw i32 %50, 511
  %52 = shl i32 %51, 20
  %53 = bitcast %union.u* %3 to [2 x i32]*
  %54 = getelementptr inbounds [2 x i32], [2 x i32]* %53, i64 0, i64 0
  store i32 %52, i32* %54, align 8
  %55 = load double, double* %4, align 8
  %56 = bitcast %union.u* %3 to double*
  %57 = load double, double* %56, align 8
  %58 = fmul double %55, %57
  store double %58, double* %4, align 8
  %59 = load double, double* %4, align 8
  ret double %59
[Function: __VERIFIER_assert]
[BB 0x18573e0]
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %7, label %5
Successor: 0x1857c10
Successor: 0x1857c60
[BB 0x1857c10]
  ret void
[BB 0x1857c60]
  br label %6
Successor: 0x1857da0
[BB 0x1857da0]
[Caller:   call void (...) @__VERIFIER_error() #3]
[Callee: __VERIFIER_error]
  unreachable
[Function: __VERIFIER_error]
