[Function: main]
[BB 0x2314d60]
[Caller:   %1 = call double @llvm.round.f64(double 2.300000e+00)]
[Callee: llvm.round.f64]
  %2 = fcmp oeq double %1, 2.000000e+00
  %3 = zext i1 %2 to i32
[Caller:   call void @__VERIFIER_assert(i32 %3)]
[Callee: __VERIFIER_assert]
[Caller:   %4 = call double @llvm.round.f64(double 3.800000e+00)]
[Callee: llvm.round.f64]
  %5 = fcmp oeq double %4, 4.000000e+00
  %6 = zext i1 %5 to i32
[Caller:   call void @__VERIFIER_assert(i32 %6)]
[Callee: __VERIFIER_assert]
[Caller:   %7 = call double @llvm.round.f64(double 5.500000e+00)]
[Callee: llvm.round.f64]
  %8 = fcmp oeq double %7, 6.000000e+00
  %9 = zext i1 %8 to i32
[Caller:   call void @__VERIFIER_assert(i32 %9)]
[Callee: __VERIFIER_assert]
[Caller:   %10 = call double @llvm.round.f64(double -2.300000e+00)]
[Callee: llvm.round.f64]
  %11 = fcmp oeq double %10, -2.000000e+00
  %12 = zext i1 %11 to i32
[Caller:   call void @__VERIFIER_assert(i32 %12)]
[Callee: __VERIFIER_assert]
[Caller:   %13 = call double @llvm.round.f64(double -3.800000e+00)]
[Callee: llvm.round.f64]
  %14 = fcmp oeq double %13, -4.000000e+00
  %15 = zext i1 %14 to i32
[Caller:   call void @__VERIFIER_assert(i32 %15)]
[Callee: __VERIFIER_assert]
[Caller:   %16 = call double @llvm.round.f64(double -5.500000e+00)]
[Callee: llvm.round.f64]
  %17 = fcmp oeq double %16, -6.000000e+00
  %18 = zext i1 %17 to i32
[Caller:   call void @__VERIFIER_assert(i32 %18)]
[Callee: __VERIFIER_assert]
[Caller:   %19 = call double @llvm.floor.f64(double 2.300000e+00)]
[Callee: llvm.floor.f64]
  %20 = fcmp oeq double %19, 2.000000e+00
  %21 = zext i1 %20 to i32
[Caller:   call void @__VERIFIER_assert(i32 %21)]
[Callee: __VERIFIER_assert]
[Caller:   %22 = call double @llvm.floor.f64(double 3.800000e+00)]
[Callee: llvm.floor.f64]
  %23 = fcmp oeq double %22, 3.000000e+00
  %24 = zext i1 %23 to i32
[Caller:   call void @__VERIFIER_assert(i32 %24)]
[Callee: __VERIFIER_assert]
[Caller:   %25 = call double @llvm.floor.f64(double 5.500000e+00)]
[Callee: llvm.floor.f64]
  %26 = fcmp oeq double %25, 5.000000e+00
  %27 = zext i1 %26 to i32
[Caller:   call void @__VERIFIER_assert(i32 %27)]
[Callee: __VERIFIER_assert]
[Caller:   %28 = call double @llvm.floor.f64(double -2.300000e+00)]
[Callee: llvm.floor.f64]
  %29 = fcmp oeq double %28, -3.000000e+00
  %30 = zext i1 %29 to i32
[Caller:   call void @__VERIFIER_assert(i32 %30)]
[Callee: __VERIFIER_assert]
[Caller:   %31 = call double @llvm.floor.f64(double -3.800000e+00)]
[Callee: llvm.floor.f64]
  %32 = fcmp oeq double %31, -4.000000e+00
  %33 = zext i1 %32 to i32
[Caller:   call void @__VERIFIER_assert(i32 %33)]
[Callee: __VERIFIER_assert]
[Caller:   %34 = call double @llvm.floor.f64(double -5.500000e+00)]
[Callee: llvm.floor.f64]
  %35 = fcmp oeq double %34, -6.000000e+00
  %36 = zext i1 %35 to i32
[Caller:   call void @__VERIFIER_assert(i32 %36)]
[Callee: __VERIFIER_assert]
[Caller:   %37 = call double @llvm.ceil.f64(double 2.300000e+00)]
[Callee: llvm.ceil.f64]
  %38 = fcmp oeq double %37, 3.000000e+00
  %39 = zext i1 %38 to i32
[Caller:   call void @__VERIFIER_assert(i32 %39)]
[Callee: __VERIFIER_assert]
[Caller:   %40 = call double @llvm.ceil.f64(double 3.800000e+00)]
[Callee: llvm.ceil.f64]
  %41 = fcmp oeq double %40, 4.000000e+00
  %42 = zext i1 %41 to i32
[Caller:   call void @__VERIFIER_assert(i32 %42)]
[Callee: __VERIFIER_assert]
[Caller:   %43 = call double @llvm.ceil.f64(double 5.500000e+00)]
[Callee: llvm.ceil.f64]
  %44 = fcmp oeq double %43, 6.000000e+00
  %45 = zext i1 %44 to i32
[Caller:   call void @__VERIFIER_assert(i32 %45)]
[Callee: __VERIFIER_assert]
[Caller:   %46 = call double @llvm.ceil.f64(double -2.300000e+00)]
[Callee: llvm.ceil.f64]
  %47 = fcmp oeq double %46, -2.000000e+00
  %48 = zext i1 %47 to i32
[Caller:   call void @__VERIFIER_assert(i32 %48)]
[Callee: __VERIFIER_assert]
[Caller:   %49 = call double @llvm.ceil.f64(double -3.800000e+00)]
[Callee: llvm.ceil.f64]
  %50 = fcmp oeq double %49, -3.000000e+00
  %51 = zext i1 %50 to i32
[Caller:   call void @__VERIFIER_assert(i32 %51)]
[Callee: __VERIFIER_assert]
[Caller:   %52 = call double @llvm.ceil.f64(double -5.500000e+00)]
[Callee: llvm.ceil.f64]
  %53 = fcmp oeq double %52, -5.000000e+00
  %54 = zext i1 %53 to i32
[Caller:   call void @__VERIFIER_assert(i32 %54)]
[Callee: __VERIFIER_assert]
[Caller:   %55 = call double @llvm.trunc.f64(double 2.300000e+00)]
[Callee: llvm.trunc.f64]
  %56 = fcmp oeq double %55, 2.000000e+00
  %57 = zext i1 %56 to i32
[Caller:   call void @__VERIFIER_assert(i32 %57)]
[Callee: __VERIFIER_assert]
[Caller:   %58 = call double @llvm.trunc.f64(double 3.800000e+00)]
[Callee: llvm.trunc.f64]
  %59 = fcmp oeq double %58, 3.000000e+00
  %60 = zext i1 %59 to i32
[Caller:   call void @__VERIFIER_assert(i32 %60)]
[Callee: __VERIFIER_assert]
[Caller:   %61 = call double @llvm.trunc.f64(double 5.500000e+00)]
[Callee: llvm.trunc.f64]
  %62 = fcmp oeq double %61, 5.000000e+00
  %63 = zext i1 %62 to i32
[Caller:   call void @__VERIFIER_assert(i32 %63)]
[Callee: __VERIFIER_assert]
[Caller:   %64 = call double @llvm.trunc.f64(double -2.300000e+00)]
[Callee: llvm.trunc.f64]
  %65 = fcmp oeq double %64, -2.000000e+00
  %66 = zext i1 %65 to i32
[Caller:   call void @__VERIFIER_assert(i32 %66)]
[Callee: __VERIFIER_assert]
[Caller:   %67 = call double @llvm.trunc.f64(double -3.800000e+00)]
[Callee: llvm.trunc.f64]
  %68 = fcmp oeq double %67, -3.000000e+00
  %69 = zext i1 %68 to i32
[Caller:   call void @__VERIFIER_assert(i32 %69)]
[Callee: __VERIFIER_assert]
[Caller:   %70 = call double @llvm.trunc.f64(double -5.500000e+00)]
[Callee: llvm.trunc.f64]
  %71 = fcmp oeq double %70, -5.000000e+00
  %72 = zext i1 %71 to i32
[Caller:   call void @__VERIFIER_assert(i32 %72)]
[Callee: __VERIFIER_assert]
  ret i32 0
[Function: llvm.round.f64]
[Function: __VERIFIER_assert]
[BB 0x2314030]
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %7, label %5
Successor: 0x2314860
Successor: 0x23148b0
[BB 0x2314860]
  ret void
[BB 0x23148b0]
  br label %6
Successor: 0x23149f0
[BB 0x23149f0]
[Caller:   call void (...) @__VERIFIER_error() #3]
[Callee: __VERIFIER_error]
  unreachable
[Function: llvm.round.f64]
[Function: __VERIFIER_assert]
[Function: llvm.round.f64]
[Function: __VERIFIER_assert]
[Function: llvm.round.f64]
[Function: __VERIFIER_assert]
[Function: llvm.round.f64]
[Function: __VERIFIER_assert]
[Function: llvm.round.f64]
[Function: __VERIFIER_assert]
[Function: llvm.floor.f64]
[Function: __VERIFIER_assert]
[Function: llvm.floor.f64]
[Function: __VERIFIER_assert]
[Function: llvm.floor.f64]
[Function: __VERIFIER_assert]
[Function: llvm.floor.f64]
[Function: __VERIFIER_assert]
[Function: llvm.floor.f64]
[Function: __VERIFIER_assert]
[Function: llvm.floor.f64]
[Function: __VERIFIER_assert]
[Function: llvm.ceil.f64]
[Function: __VERIFIER_assert]
[Function: llvm.ceil.f64]
[Function: __VERIFIER_assert]
[Function: llvm.ceil.f64]
[Function: __VERIFIER_assert]
[Function: llvm.ceil.f64]
[Function: __VERIFIER_assert]
[Function: llvm.ceil.f64]
[Function: __VERIFIER_assert]
[Function: llvm.ceil.f64]
[Function: __VERIFIER_assert]
[Function: llvm.trunc.f64]
[Function: __VERIFIER_assert]
[Function: llvm.trunc.f64]
[Function: __VERIFIER_assert]
[Function: llvm.trunc.f64]
[Function: __VERIFIER_assert]
[Function: llvm.trunc.f64]
[Function: __VERIFIER_assert]
[Function: llvm.trunc.f64]
[Function: __VERIFIER_assert]
[Function: llvm.trunc.f64]
[Function: __VERIFIER_assert]
[Function: __VERIFIER_error]
