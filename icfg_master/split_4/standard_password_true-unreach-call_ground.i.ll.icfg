[Function: main]
[BB 0x241a6b0]
  %1 = alloca i32, align 4
  %2 = alloca [100000 x i32], align 16
  %3 = alloca [100000 x i32], align 16
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  store i32 1, i32* %5, align 4
  store i32 0, i32* %4, align 4
  br label %7
Successor: 0x241b0b0
[BB 0x241b0b0]
  %8 = load i32, i32* %4, align 4
  %9 = icmp slt i32 %8, 100000
  br i1 %9, label %10, label %25
Successor: 0x241aef0
Successor: 0x241b300
[BB 0x241aef0]
  %11 = load i32, i32* %4, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [100000 x i32], [100000 x i32]* %2, i64 0, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = load i32, i32* %4, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [100000 x i32], [100000 x i32]* %3, i64 0, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = icmp ne i32 %14, %18
  br i1 %19, label %20, label %21
Successor: 0x241b850
Successor: 0x241b8a0
[BB 0x241b300]
  %26 = load i32, i32* %5, align 4
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %47
Successor: 0x241bea0
Successor: 0x241bef0
[BB 0x241b850]
  store i32 0, i32* %5, align 4
  br label %21
Successor: 0x241b8a0
[BB 0x241b8a0]
  br label %22
Successor: 0x241bae0
[BB 0x241bea0]
  store i32 0, i32* %6, align 4
  br label %29
Successor: 0x241c080
[BB 0x241bef0]
  ret i32 0
[BB 0x241bae0]
  %23 = load i32, i32* %4, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %4, align 4
  br label %7
Successor: 0x241b0b0
[BB 0x241c080]
  %30 = load i32, i32* %6, align 4
  %31 = icmp slt i32 %30, 100000
  br i1 %31, label %32, label %46
Successor: 0x241c240
Successor: 0x241c290
[BB 0x241c240]
  %33 = load i32, i32* %6, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [100000 x i32], [100000 x i32]* %2, i64 0, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = load i32, i32* %6, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [100000 x i32], [100000 x i32]* %3, i64 0, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %36, %40
  %42 = zext i1 %41 to i32
[Caller:   call void @__VERIFIER_assert(i32 %42)]
[Callee: __VERIFIER_assert]
  br label %43
Successor: 0x241cc10
[BB 0x241c290]
  br label %47
Successor: 0x241bef0
[BB 0x241cc10]
  %44 = load i32, i32* %6, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %6, align 4
  br label %29
Successor: 0x241c080
[Function: __VERIFIER_assert]
[BB 0x2419980]
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %7, label %5
Successor: 0x241a1b0
Successor: 0x241a200
[BB 0x241a1b0]
  ret void
[BB 0x241a200]
  br label %6
Successor: 0x241a340
[BB 0x241a340]
[Caller:   call void (...) @__VERIFIER_error() #2]
[Callee: __VERIFIER_error]
  unreachable
[Function: __VERIFIER_error]
