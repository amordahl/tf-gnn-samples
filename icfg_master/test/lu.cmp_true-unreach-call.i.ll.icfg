[Function: main]
[BB 0xc47010]
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  store i32 0, i32* %1, align 4
  store i32 50, i32* %4, align 4
  store i32 5, i32* %5, align 4
  store double 0x3EB0C6F7A0B5ED8D, double* %7, align 8
  store i32 0, i32* %2, align 4
  br label %9
Successor: 0xc47240
[BB 0xc47240]
  %10 = load i32, i32* %2, align 4
  %11 = load i32, i32* %5, align 4
  %12 = icmp sle i32 %10, %11
  br i1 %12, label %13, label %67
Successor: 0xc482b0
Successor: 0xc48300
[BB 0xc482b0]
  store double 0.000000e+00, double* %8, align 8
  store i32 0, i32* %3, align 4
  br label %14
Successor: 0xc48560
[BB 0xc48300]
  %68 = load i32, i32* %4, align 4
  %69 = load i32, i32* %5, align 4
  %70 = load double, double* %7, align 8
[Caller:   %71 = call i32 @ludcmp(i32 %68, i32 %69, double %70)]
[Callee: ludcmp]
  store i32 %71, i32* %6, align 4
  ret i32 0
[BB 0xc48560]
  %15 = load i32, i32* %3, align 4
  %16 = load i32, i32* %5, align 4
  %17 = icmp sle i32 %15, %16
  br i1 %17, label %18, label %56
Successor: 0xc48740
Successor: 0xc48790
[BB 0xc48740]
  %19 = load i32, i32* %2, align 4
  %20 = add nsw i32 %19, 1
  %21 = load i32, i32* %3, align 4
  %22 = add nsw i32 %21, 1
  %23 = add nsw i32 %20, %22
  %24 = sitofp i32 %23 to double
  %25 = load i32, i32* %2, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [50 x [50 x double]], [50 x [50 x double]]* @a, i64 0, i64 %26
  %28 = load i32, i32* %3, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [50 x double], [50 x double]* %27, i64 0, i64 %29
  store double %24, double* %30, align 8
  %31 = load i32, i32* %2, align 4
  %32 = load i32, i32* %3, align 4
  %33 = icmp eq i32 %31, %32
  br i1 %33, label %34, label %43
Successor: 0xc49350
Successor: 0xc493a0
[BB 0xc48790]
  %57 = load i32, i32* %2, align 4
  %58 = icmp slt i32 %57, 50
  %59 = zext i1 %58 to i32
[Caller:   call void @__VERIFIER_assert(i32 %59)]
[Callee: __VERIFIER_assert]
  %60 = load double, double* %8, align 8
  %61 = load i32, i32* %2, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds [50 x double], [50 x double]* @b, i64 0, i64 %62
  store double %60, double* %63, align 8
  br label %64
Successor: 0xc4a780
[BB 0xc49350]
  %35 = load i32, i32* %2, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [50 x [50 x double]], [50 x [50 x double]]* @a, i64 0, i64 %36
  %38 = load i32, i32* %3, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [50 x double], [50 x double]* %37, i64 0, i64 %39
  %41 = load double, double* %40, align 8
  %42 = fmul double %41, 1.000000e+01
  store double %42, double* %40, align 8
  br label %43
Successor: 0xc493a0
[BB 0xc493a0]
  %44 = load i32, i32* %2, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [50 x [50 x double]], [50 x [50 x double]]* @a, i64 0, i64 %45
  %47 = load i32, i32* %3, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [50 x double], [50 x double]* %46, i64 0, i64 %48
  %50 = load double, double* %49, align 8
  %51 = load double, double* %8, align 8
  %52 = fadd double %51, %50
  store double %52, double* %8, align 8
  br label %53
Successor: 0xc49f60
[BB 0xc4a780]
  %65 = load i32, i32* %2, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %2, align 4
  br label %9
Successor: 0xc47240
[BB 0xc49f60]
  %54 = load i32, i32* %3, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %3, align 4
  br label %14
Successor: 0xc48560
[Function: ludcmp]
[BB 0xc4b290]
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca double, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca double, align 8
  %12 = alloca [100 x double], align 16
  store i32 %0, i32* %5, align 4
  store i32 %1, i32* %6, align 4
  store double %2, double* %7, align 8
  %13 = load i32, i32* %6, align 4
  %14 = icmp sgt i32 %13, 99
  br i1 %14, label %18, label %15
Successor: 0xc4b350
Successor: 0xc4ba60
[BB 0xc4b350]
  store i32 999, i32* %4, align 4
  br label %266
Successor: 0xc4bd90
[BB 0xc4ba60]
  %16 = load double, double* %7, align 8
  %17 = fcmp ole double %16, 0.000000e+00
  br i1 %17, label %18, label %19
Successor: 0xc4b350
Successor: 0xc4bbd0
[BB 0xc4bd90]
  %267 = load i32, i32* %4, align 4
  ret i32 %267
[BB 0xc4bbd0]
  store i32 0, i32* %8, align 4
  br label %20
Successor: 0xc4bee0
[BB 0xc4bee0]
  %21 = load i32, i32* %8, align 4
  %22 = load i32, i32* %6, align 4
  %23 = icmp slt i32 %21, %22
  br i1 %23, label %24, label %157
Successor: 0xc4c110
Successor: 0xc4c160
[BB 0xc4c110]
  %25 = load i32, i32* %8, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [50 x [50 x double]], [50 x [50 x double]]* @a, i64 0, i64 %26
  %28 = load i32, i32* %8, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [50 x double], [50 x double]* %27, i64 0, i64 %29
  %31 = load double, double* %30, align 8
[Caller:   %32 = call double @fabs(double %31)]
[Callee: fabs]
  %33 = load double, double* %7, align 8
  %34 = fcmp ole double %32, %33
  br i1 %34, label %35, label %36
Successor: 0xc4c8c0
Successor: 0xc4c910
[BB 0xc4c160]
  %158 = load double, double* getelementptr inbounds ([50 x double], [50 x double]* @b, i64 0, i64 0), align 16
  %159 = getelementptr inbounds [100 x double], [100 x double]* %12, i64 0, i64 0
  store double %158, double* %159, align 16
  store i32 1, i32* %8, align 4
  br label %160
Successor: 0xc52370
[BB 0xc4c8c0]
  store i32 1, i32* %4, align 4
  br label %266
Successor: 0xc4bd90
[BB 0xc4c910]
  %37 = load i32, i32* %8, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %9, align 4
  br label %39
Successor: 0xc4cce0
[BB 0xc52370]
  %161 = load i32, i32* %8, align 4
  %162 = load i32, i32* %6, align 4
  %163 = icmp sle i32 %161, %162
  br i1 %163, label %164, label %199
Successor: 0xc525a0
Successor: 0xc525f0
[BB 0xc4cce0]
  %40 = load i32, i32* %9, align 4
  %41 = load i32, i32* %6, align 4
  %42 = icmp sle i32 %40, %41
  br i1 %42, label %43, label %99
Successor: 0xc4cf10
Successor: 0xc4cf60
[BB 0xc525a0]
  %165 = load i32, i32* %8, align 4
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds [50 x double], [50 x double]* @b, i64 0, i64 %166
  %168 = load double, double* %167, align 8
  store double %168, double* %11, align 8
  store i32 0, i32* %9, align 4
  br label %169
Successor: 0xc52a20
[BB 0xc525f0]
  %200 = load i32, i32* %6, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds [100 x double], [100 x double]* %12, i64 0, i64 %201
  %203 = load double, double* %202, align 8
  %204 = load i32, i32* %6, align 4
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds [50 x [50 x double]], [50 x [50 x double]]* @a, i64 0, i64 %205
  %207 = load i32, i32* %6, align 4
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds [50 x double], [50 x double]* %206, i64 0, i64 %208
  %210 = load double, double* %209, align 8
  %211 = fdiv double %203, %210
  %212 = load i32, i32* %6, align 4
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds [50 x double], [50 x double]* @x, i64 0, i64 %213
  store double %211, double* %214, align 8
  %215 = load i32, i32* %6, align 4
  %216 = sub nsw i32 %215, 1
  store i32 %216, i32* %8, align 4
  br label %217
Successor: 0xc547b0
[BB 0xc4cf10]
  %44 = load i32, i32* %9, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [50 x [50 x double]], [50 x [50 x double]]* @a, i64 0, i64 %45
  %47 = load i32, i32* %8, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [50 x double], [50 x double]* %46, i64 0, i64 %48
  %50 = load double, double* %49, align 8
  store double %50, double* %11, align 8
  %51 = load i32, i32* %8, align 4
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %80
Successor: 0xc4d5a0
Successor: 0xc4d5f0
[BB 0xc4cf60]
  %100 = load i32, i32* %8, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %9, align 4
  br label %102
Successor: 0xc4f500
[BB 0xc52a20]
  %170 = load i32, i32* %9, align 4
  %171 = load i32, i32* %8, align 4
  %172 = icmp slt i32 %170, %171
  br i1 %172, label %173, label %191
Successor: 0xc52c50
Successor: 0xc52ca0
[BB 0xc547b0]
  %218 = load i32, i32* %8, align 4
  %219 = icmp sge i32 %218, 0
  br i1 %219, label %220, label %265
Successor: 0xc54970
Successor: 0xc549c0
[BB 0xc4d5a0]
  store i32 0, i32* %10, align 4
  br label %54
Successor: 0xc4d7c0
[BB 0xc4d5f0]
  %81 = load double, double* %11, align 8
  %82 = load i32, i32* %8, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds [50 x [50 x double]], [50 x [50 x double]]* @a, i64 0, i64 %83
  %85 = load i32, i32* %8, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [50 x double], [50 x double]* %84, i64 0, i64 %86
  %88 = load double, double* %87, align 8
  %89 = fdiv double %81, %88
  %90 = load i32, i32* %9, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds [50 x [50 x double]], [50 x [50 x double]]* @a, i64 0, i64 %91
  %93 = load i32, i32* %8, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds [50 x double], [50 x double]* %92, i64 0, i64 %94
  store double %89, double* %95, align 8
  br label %96
Successor: 0xc4f0b0
[BB 0xc4f500]
  %103 = load i32, i32* %9, align 4
  %104 = load i32, i32* %6, align 4
  %105 = icmp sle i32 %103, %104
  br i1 %105, label %106, label %153
Successor: 0xc4f730
Successor: 0xc4f780
[BB 0xc52c50]
  %174 = load i32, i32* %8, align 4
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds [50 x [50 x double]], [50 x [50 x double]]* @a, i64 0, i64 %175
  %177 = load i32, i32* %9, align 4
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds [50 x double], [50 x double]* %176, i64 0, i64 %178
  %180 = load double, double* %179, align 8
  %181 = load i32, i32* %9, align 4
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds [100 x double], [100 x double]* %12, i64 0, i64 %182
  %184 = load double, double* %183, align 8
  %185 = fmul double %180, %184
  %186 = load double, double* %11, align 8
  %187 = fsub double %186, %185
  store double %187, double* %11, align 8
  br label %188
Successor: 0xc53580
[BB 0xc52ca0]
  %192 = load double, double* %11, align 8
  %193 = load i32, i32* %8, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds [100 x double], [100 x double]* %12, i64 0, i64 %194
  store double %192, double* %195, align 8
  br label %196
Successor: 0xc53ae0
[BB 0xc54970]
  %221 = load i32, i32* %8, align 4
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds [100 x double], [100 x double]* %12, i64 0, i64 %222
  %224 = load double, double* %223, align 8
  store double %224, double* %11, align 8
  %225 = load i32, i32* %8, align 4
  %226 = add nsw i32 %225, 1
  store i32 %226, i32* %9, align 4
  br label %227
Successor: 0xc54ef0
[BB 0xc549c0]
  store i32 0, i32* %4, align 4
  br label %266
Successor: 0xc4bd90
[BB 0xc4d7c0]
  %55 = load i32, i32* %10, align 4
  %56 = load i32, i32* %8, align 4
  %57 = icmp slt i32 %55, %56
  br i1 %57, label %58, label %79
Successor: 0xc4d9f0
Successor: 0xc4da40
[BB 0xc4f0b0]
  %97 = load i32, i32* %9, align 4
  %98 = add nsw i32 %97, 1
  store i32 %98, i32* %9, align 4
  br label %39
Successor: 0xc4cce0
[BB 0xc4f730]
  %107 = load i32, i32* %8, align 4
  %108 = add nsw i32 %107, 1
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds [50 x [50 x double]], [50 x [50 x double]]* @a, i64 0, i64 %109
  %111 = load i32, i32* %9, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [50 x double], [50 x double]* %110, i64 0, i64 %112
  %114 = load double, double* %113, align 8
  store double %114, double* %11, align 8
  store i32 0, i32* %10, align 4
  br label %115
Successor: 0xc4fde0
[BB 0xc4f780]
  br label %154
Successor: 0xc51dd0
[BB 0xc53580]
  %189 = load i32, i32* %9, align 4
  %190 = add nsw i32 %189, 1
  store i32 %190, i32* %9, align 4
  br label %169
Successor: 0xc52a20
[BB 0xc53ae0]
  %197 = load i32, i32* %8, align 4
  %198 = add nsw i32 %197, 1
  store i32 %198, i32* %8, align 4
  br label %160
Successor: 0xc52370
[BB 0xc54ef0]
  %228 = load i32, i32* %9, align 4
  %229 = load i32, i32* %6, align 4
  %230 = icmp sle i32 %228, %229
  br i1 %230, label %231, label %249
Successor: 0xc55120
Successor: 0xc55170
[BB 0xc4d9f0]
  %59 = load i32, i32* %9, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [50 x [50 x double]], [50 x [50 x double]]* @a, i64 0, i64 %60
  %62 = load i32, i32* %10, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [50 x double], [50 x double]* %61, i64 0, i64 %63
  %65 = load double, double* %64, align 8
  %66 = load i32, i32* %10, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [50 x [50 x double]], [50 x [50 x double]]* @a, i64 0, i64 %67
  %69 = load i32, i32* %8, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [50 x double], [50 x double]* %68, i64 0, i64 %70
  %72 = load double, double* %71, align 8
  %73 = fmul double %65, %72
  %74 = load double, double* %11, align 8
  %75 = fsub double %74, %73
  store double %75, double* %11, align 8
  br label %76
Successor: 0xc4e500
[BB 0xc4da40]
  br label %80
Successor: 0xc4d5f0
[BB 0xc4fde0]
  %116 = load i32, i32* %10, align 4
  %117 = load i32, i32* %8, align 4
  %118 = icmp sle i32 %116, %117
  br i1 %118, label %119, label %141
Successor: 0xc50010
Successor: 0xc50060
[BB 0xc51dd0]
  %155 = load i32, i32* %8, align 4
  %156 = add nsw i32 %155, 1
  store i32 %156, i32* %8, align 4
  br label %20
Successor: 0xc4bee0
[BB 0xc55120]
  %232 = load i32, i32* %8, align 4
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds [50 x [50 x double]], [50 x [50 x double]]* @a, i64 0, i64 %233
  %235 = load i32, i32* %9, align 4
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds [50 x double], [50 x double]* %234, i64 0, i64 %236
  %238 = load double, double* %237, align 8
  %239 = load i32, i32* %9, align 4
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds [50 x double], [50 x double]* @x, i64 0, i64 %240
  %242 = load double, double* %241, align 8
  %243 = fmul double %238, %242
  %244 = load double, double* %11, align 8
  %245 = fsub double %244, %243
  store double %245, double* %11, align 8
  br label %246
Successor: 0xc55a50
[BB 0xc55170]
  %250 = load double, double* %11, align 8
  %251 = load i32, i32* %8, align 4
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds [50 x [50 x double]], [50 x [50 x double]]* @a, i64 0, i64 %252
  %254 = load i32, i32* %8, align 4
  %255 = sext i32 %254 to i64
  %256 = getelementptr inbounds [50 x double], [50 x double]* %253, i64 0, i64 %255
  %257 = load double, double* %256, align 8
  %258 = fdiv double %250, %257
  %259 = load i32, i32* %8, align 4
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds [50 x double], [50 x double]* @x, i64 0, i64 %260
  store double %258, double* %261, align 8
  br label %262
Successor: 0xc50940
[BB 0xc4e500]
  %77 = load i32, i32* %10, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %10, align 4
  br label %54
Successor: 0xc4d7c0
[BB 0xc50010]
  %120 = load i32, i32* %8, align 4
  %121 = add nsw i32 %120, 1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds [50 x [50 x double]], [50 x [50 x double]]* @a, i64 0, i64 %122
  %124 = load i32, i32* %10, align 4
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds [50 x double], [50 x double]* %123, i64 0, i64 %125
  %127 = load double, double* %126, align 8
  %128 = load i32, i32* %10, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds [50 x [50 x double]], [50 x [50 x double]]* @a, i64 0, i64 %129
  %131 = load i32, i32* %9, align 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds [50 x double], [50 x double]* %130, i64 0, i64 %132
  %134 = load double, double* %133, align 8
  %135 = fmul double %127, %134
  %136 = load double, double* %11, align 8
  %137 = fsub double %136, %135
  store double %137, double* %11, align 8
  br label %138
Successor: 0xc51380
[BB 0xc50060]
  %142 = load double, double* %11, align 8
  %143 = load i32, i32* %8, align 4
  %144 = add nsw i32 %143, 1
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds [50 x [50 x double]], [50 x [50 x double]]* @a, i64 0, i64 %145
  %147 = load i32, i32* %9, align 4
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds [50 x double], [50 x double]* %146, i64 0, i64 %148
  store double %142, double* %149, align 8
  br label %150
Successor: 0xc51b10
[BB 0xc55a50]
  %247 = load i32, i32* %9, align 4
  %248 = add nsw i32 %247, 1
  store i32 %248, i32* %9, align 4
  br label %227
Successor: 0xc54ef0
[BB 0xc50940]
  %263 = load i32, i32* %8, align 4
  %264 = add nsw i32 %263, -1
  store i32 %264, i32* %8, align 4
  br label %217
Successor: 0xc547b0
[BB 0xc51380]
  %139 = load i32, i32* %10, align 4
  %140 = add nsw i32 %139, 1
  store i32 %140, i32* %10, align 4
  br label %115
Successor: 0xc4fde0
[BB 0xc51b10]
  %151 = load i32, i32* %9, align 4
  %152 = add nsw i32 %151, 1
  store i32 %152, i32* %9, align 4
  br label %102
Successor: 0xc4f500
[Function: __VERIFIER_assert]
[BB 0xc46280]
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %7, label %5
Successor: 0xc46ab0
Successor: 0xc46b00
[BB 0xc46ab0]
  ret void
[BB 0xc46b00]
  br label %6
Successor: 0xc46c40
[BB 0xc46c40]
[Caller:   call void (...) @__VERIFIER_error() #2]
[Callee: __VERIFIER_error]
  unreachable
[Function: fabs]
[BB 0xc56180]
  %2 = alloca double, align 8
  %3 = alloca double, align 8
  store double %0, double* %2, align 8
  %4 = load double, double* %2, align 8
  %5 = fcmp oge double %4, 0.000000e+00
  br i1 %5, label %6, label %8
Successor: 0xc564c0
Successor: 0xc56510
[BB 0xc564c0]
  %7 = load double, double* %2, align 8
  store double %7, double* %3, align 8
  br label %11
Successor: 0xc56710
[BB 0xc56510]
  %9 = load double, double* %2, align 8
  %10 = fsub double -0.000000e+00, %9
  store double %10, double* %3, align 8
  br label %11
Successor: 0xc56710
[BB 0xc56710]
  %12 = load double, double* %3, align 8
  ret double %12
[Function: __VERIFIER_error]
