[Function: main]
[BB 0xf01220]
  %1 = alloca i32, align 4
  %2 = alloca [3 x [3 x i8]], align 1
  %3 = alloca [3 x [3 x i8*]], align 16
  %4 = alloca [3 x i32], align 4
  %5 = alloca [3 x i32], align 4
  %6 = alloca [3 x i32], align 4
  %7 = alloca [3 x i32], align 4
  %8 = alloca [3 x i32], align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  store i32 0, i32* %9, align 4
  br label %11
Successor: 0xf01450
[BB 0xf01450]
  %12 = load i32, i32* %9, align 4
  %13 = icmp slt i32 %12, 3
  br i1 %13, label %14, label %60
Successor: 0xf01a60
Successor: 0xf01ab0
[BB 0xf01a60]
[Caller:   %15 = call i32 @__VERIFIER_nondet_int()]
[Callee: __VERIFIER_nondet_int]
  %16 = load i32, i32* %9, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [3 x i32], [3 x i32]* %4, i64 0, i64 %17
  store i32 %15, i32* %18, align 4
[Caller:   %19 = call i32 @__VERIFIER_nondet_int()]
[Callee: __VERIFIER_nondet_int]
  %20 = load i32, i32* %9, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [3 x i32], [3 x i32]* %5, i64 0, i64 %21
  store i32 %19, i32* %22, align 4
[Caller:   %23 = call i32 @__VERIFIER_nondet_int()]
[Callee: __VERIFIER_nondet_int]
  %24 = load i32, i32* %9, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 %25
  store i32 %23, i32* %26, align 4
[Caller:   %27 = call i32 @__VERIFIER_nondet_int()]
[Callee: __VERIFIER_nondet_int]
  %28 = load i32, i32* %9, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [3 x i32], [3 x i32]* %7, i64 0, i64 %29
  store i32 %27, i32* %30, align 4
[Caller:   %31 = call i32 @__VERIFIER_nondet_int()]
[Callee: __VERIFIER_nondet_int]
  %32 = load i32, i32* %9, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [3 x i32], [3 x i32]* %8, i64 0, i64 %33
  store i32 %31, i32* %34, align 4
  store i32 0, i32* %10, align 4
  br label %35
Successor: 0xf02ae0
[BB 0xf01ab0]
  %61 = getelementptr inbounds [3 x [3 x i8]], [3 x [3 x i8]]* %2, i64 0, i64 1
  %62 = getelementptr inbounds [3 x i8], [3 x i8]* %61, i64 0, i64 0
  %63 = load i8, i8* %62, align 1
  store i8 %63, i8* getelementptr inbounds ([3 x [3 x i8]], [3 x [3 x i8]]* @__CS_thread_status, i64 0, i64 1, i64 0), align 1
  %64 = getelementptr inbounds [3 x [3 x i8]], [3 x [3 x i8]]* %2, i64 0, i64 2
  %65 = getelementptr inbounds [3 x i8], [3 x i8]* %64, i64 0, i64 0
  %66 = load i8, i8* %65, align 1
  store i8 %66, i8* getelementptr inbounds ([3 x [3 x i8]], [3 x [3 x i8]]* @__CS_thread_status, i64 0, i64 2, i64 0), align 1
  %67 = getelementptr inbounds [3 x [3 x i8]], [3 x [3 x i8]]* %2, i64 0, i64 1
  %68 = getelementptr inbounds [3 x i8], [3 x i8]* %67, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  store i8 %69, i8* getelementptr inbounds ([3 x [3 x i8]], [3 x [3 x i8]]* @__CS_thread_status, i64 0, i64 1, i64 1), align 1
  %70 = getelementptr inbounds [3 x [3 x i8]], [3 x [3 x i8]]* %2, i64 0, i64 2
  %71 = getelementptr inbounds [3 x i8], [3 x i8]* %70, i64 0, i64 1
  %72 = load i8, i8* %71, align 1
  store i8 %72, i8* getelementptr inbounds ([3 x [3 x i8]], [3 x [3 x i8]]* @__CS_thread_status, i64 0, i64 2, i64 1), align 1
  %73 = getelementptr inbounds [3 x [3 x i8]], [3 x [3 x i8]]* %2, i64 0, i64 1
  %74 = getelementptr inbounds [3 x i8], [3 x i8]* %73, i64 0, i64 2
  %75 = load i8, i8* %74, align 1
  store i8 %75, i8* getelementptr inbounds ([3 x [3 x i8]], [3 x [3 x i8]]* @__CS_thread_status, i64 0, i64 1, i64 2), align 1
  %76 = getelementptr inbounds [3 x [3 x i8]], [3 x [3 x i8]]* %2, i64 0, i64 2
  %77 = getelementptr inbounds [3 x i8], [3 x i8]* %76, i64 0, i64 2
  %78 = load i8, i8* %77, align 1
  store i8 %78, i8* getelementptr inbounds ([3 x [3 x i8]], [3 x [3 x i8]]* @__CS_thread_status, i64 0, i64 2, i64 2), align 1
  %79 = getelementptr inbounds [3 x [3 x i8*]], [3 x [3 x i8*]]* %3, i64 0, i64 1
  %80 = getelementptr inbounds [3 x i8*], [3 x i8*]* %79, i64 0, i64 0
  %81 = load i8*, i8** %80, align 8
  store i8* %81, i8** getelementptr inbounds ([3 x [3 x i8*]], [3 x [3 x i8*]]* @__CS_thread_lockedon, i64 0, i64 1, i64 0), align 8
  %82 = getelementptr inbounds [3 x [3 x i8*]], [3 x [3 x i8*]]* %3, i64 0, i64 2
  %83 = getelementptr inbounds [3 x i8*], [3 x i8*]* %82, i64 0, i64 0
  %84 = load i8*, i8** %83, align 16
  store i8* %84, i8** getelementptr inbounds ([3 x [3 x i8*]], [3 x [3 x i8*]]* @__CS_thread_lockedon, i64 0, i64 2, i64 0), align 16
  %85 = getelementptr inbounds [3 x [3 x i8*]], [3 x [3 x i8*]]* %3, i64 0, i64 1
  %86 = getelementptr inbounds [3 x i8*], [3 x i8*]* %85, i64 0, i64 1
  %87 = load i8*, i8** %86, align 8
  store i8* %87, i8** getelementptr inbounds ([3 x [3 x i8*]], [3 x [3 x i8*]]* @__CS_thread_lockedon, i64 0, i64 1, i64 1), align 8
  %88 = getelementptr inbounds [3 x [3 x i8*]], [3 x [3 x i8*]]* %3, i64 0, i64 2
  %89 = getelementptr inbounds [3 x i8*], [3 x i8*]* %88, i64 0, i64 1
  %90 = load i8*, i8** %89, align 8
  store i8* %90, i8** getelementptr inbounds ([3 x [3 x i8*]], [3 x [3 x i8*]]* @__CS_thread_lockedon, i64 0, i64 2, i64 1), align 8
  %91 = getelementptr inbounds [3 x [3 x i8*]], [3 x [3 x i8*]]* %3, i64 0, i64 1
  %92 = getelementptr inbounds [3 x i8*], [3 x i8*]* %91, i64 0, i64 2
  %93 = load i8*, i8** %92, align 8
  store i8* %93, i8** getelementptr inbounds ([3 x [3 x i8*]], [3 x [3 x i8*]]* @__CS_thread_lockedon, i64 0, i64 1, i64 2), align 8
  %94 = getelementptr inbounds [3 x [3 x i8*]], [3 x [3 x i8*]]* %3, i64 0, i64 2
  %95 = getelementptr inbounds [3 x i8*], [3 x i8*]* %94, i64 0, i64 2
  %96 = load i8*, i8** %95, align 16
  store i8* %96, i8** getelementptr inbounds ([3 x [3 x i8*]], [3 x [3 x i8*]]* @__CS_thread_lockedon, i64 0, i64 2, i64 2), align 16
  %97 = getelementptr inbounds [3 x i32], [3 x i32]* %4, i64 0, i64 1
  %98 = load i32, i32* %97, align 4
  store i32 %98, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @x, i64 0, i64 1), align 4
  %99 = getelementptr inbounds [3 x i32], [3 x i32]* %4, i64 0, i64 2
  %100 = load i32, i32* %99, align 4
  store i32 %100, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @x, i64 0, i64 2), align 4
  %101 = getelementptr inbounds [3 x i32], [3 x i32]* %5, i64 0, i64 1
  %102 = load i32, i32* %101, align 4
  store i32 %102, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @y, i64 0, i64 1), align 4
  %103 = getelementptr inbounds [3 x i32], [3 x i32]* %5, i64 0, i64 2
  %104 = load i32, i32* %103, align 4
  store i32 %104, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @y, i64 0, i64 2), align 4
  %105 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 1
  %106 = load i32, i32* %105, align 4
  store i32 %106, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @b1, i64 0, i64 1), align 4
  %107 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 2
  %108 = load i32, i32* %107, align 4
  store i32 %108, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @b1, i64 0, i64 2), align 4
  %109 = getelementptr inbounds [3 x i32], [3 x i32]* %7, i64 0, i64 1
  %110 = load i32, i32* %109, align 4
  store i32 %110, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @b2, i64 0, i64 1), align 4
  %111 = getelementptr inbounds [3 x i32], [3 x i32]* %7, i64 0, i64 2
  %112 = load i32, i32* %111, align 4
  store i32 %112, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @b2, i64 0, i64 2), align 4
  %113 = getelementptr inbounds [3 x i32], [3 x i32]* %8, i64 0, i64 1
  %114 = load i32, i32* %113, align 4
  store i32 %114, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @X, i64 0, i64 1), align 4
  %115 = getelementptr inbounds [3 x i32], [3 x i32]* %8, i64 0, i64 2
  %116 = load i32, i32* %115, align 4
  store i32 %116, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @X, i64 0, i64 2), align 4
  store i8 0, i8* @__CS_round, align 1
  store i8 0, i8* @__CS_thread_index, align 1
  %117 = load i8, i8* @__CS_round, align 1
  store i8 %117, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__CS_thread_born_round, i64 0, i64 0), align 1
  store i8 1, i8* getelementptr inbounds ([3 x [3 x i8]], [3 x [3 x i8]]* @__CS_thread_status, i64 0, i64 0, i64 0), align 1
  store i8* (i8*)* @main_thread, i8* (i8*)** getelementptr inbounds ([3 x i8* (i8*)*], [3 x i8* (i8*)*]* @__CS_thread, i64 0, i64 0), align 16
  store i8 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__CS_thread_allocated, i64 0, i64 0), align 1
  %118 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__CS_thread_allocated, i64 0, i64 0), align 1
  %119 = zext i8 %118 to i32
  %120 = icmp eq i32 %119, 1
  br i1 %120, label %121, label %134
Successor: 0xf08360
Successor: 0xf083b0
[BB 0xf02ae0]
  %36 = load i32, i32* %10, align 4
  %37 = icmp slt i32 %36, 3
  br i1 %37, label %38, label %56
Successor: 0xf02ca0
Successor: 0xf02cf0
[BB 0xf08360]
  %122 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__CS_thread_born_round, i64 0, i64 0), align 1
  store i8 %122, i8* @__CS_round, align 1
  store i8 0, i8* @__CS_ret, align 1
  %123 = load i8* (i8*)*, i8* (i8*)** getelementptr inbounds ([3 x i8* (i8*)*], [3 x i8* (i8*)*]* @__CS_thread, i64 0, i64 0), align 16
[Caller:   %124 = call i8* %123(i8* null)]
  %125 = load i8, i8* @__CS_ret, align 1
  %126 = zext i8 %125 to i32
  %127 = icmp ne i32 %126, 1
  br i1 %127, label %128, label %133
Successor: 0xf08910
Successor: 0xf08960
[BB 0xf083b0]
  %135 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__CS_thread_allocated, i64 0, i64 1), align 1
  %136 = zext i8 %135 to i32
  %137 = icmp eq i32 %136, 1
  br i1 %137, label %138, label %151
Successor: 0xf09840
Successor: 0xf09890
[BB 0xf02ca0]
[Caller:   %39 = call zeroext i8 @__VERIFIER_nondet_uchar()]
[Callee: __VERIFIER_nondet_uchar]
  %40 = load i32, i32* %9, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [3 x [3 x i8]], [3 x [3 x i8]]* %2, i64 0, i64 %41
  %43 = load i32, i32* %10, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [3 x i8], [3 x i8]* %42, i64 0, i64 %44
  store i8 %39, i8* %45, align 1
[Caller:   %46 = call i8* @__VERIFIER_nondet_pointer()]
[Callee: __VERIFIER_nondet_pointer]
  %47 = load i32, i32* %9, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [3 x [3 x i8*]], [3 x [3 x i8*]]* %3, i64 0, i64 %48
  %50 = load i32, i32* %10, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [3 x i8*], [3 x i8*]* %49, i64 0, i64 %51
  store i8* %46, i8** %52, align 8
  br label %53
Successor: 0xf03850
[BB 0xf02cf0]
  br label %57
Successor: 0xf03b10
[BB 0xf08910]
  %129 = load i8, i8* @__CS_round, align 1
  %130 = zext i8 %129 to i64
  %131 = getelementptr inbounds [3 x [3 x i8]], [3 x [3 x i8]]* @__CS_thread_status, i64 0, i64 %130
  %132 = getelementptr inbounds [3 x i8], [3 x i8]* %131, i64 0, i64 0
  store i8 2, i8* %132, align 1
  br label %133
Successor: 0xf08960
[BB 0xf08960]
  br label %134
Successor: 0xf083b0
[BB 0xf09840]
  %139 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__CS_thread_born_round, i64 0, i64 1), align 1
  store i8 %139, i8* @__CS_round, align 1
  store i8 0, i8* @__CS_ret, align 1
  %140 = load i8* (i8*)*, i8* (i8*)** getelementptr inbounds ([3 x i8* (i8*)*], [3 x i8* (i8*)*]* @__CS_thread, i64 0, i64 1), align 8
[Caller:   %141 = call i8* %140(i8* null)]
  %142 = load i8, i8* @__CS_ret, align 1
  %143 = zext i8 %142 to i32
  %144 = icmp ne i32 %143, 1
  br i1 %144, label %145, label %150
Successor: 0xf09f10
Successor: 0xf09f60
[BB 0xf09890]
  %152 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__CS_thread_allocated, i64 0, i64 2), align 1
  %153 = zext i8 %152 to i32
  %154 = icmp eq i32 %153, 1
  br i1 %154, label %155, label %168
Successor: 0xf0a630
Successor: 0xf0a680
[BB 0xf03850]
  %54 = load i32, i32* %10, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %10, align 4
  br label %35
Successor: 0xf02ae0
[BB 0xf03b10]
  %58 = load i32, i32* %9, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %9, align 4
  br label %11
Successor: 0xf01450
[BB 0xf09f10]
  %146 = load i8, i8* @__CS_round, align 1
  %147 = zext i8 %146 to i64
  %148 = getelementptr inbounds [3 x [3 x i8]], [3 x [3 x i8]]* @__CS_thread_status, i64 0, i64 %147
  %149 = getelementptr inbounds [3 x i8], [3 x i8]* %148, i64 0, i64 1
  store i8 2, i8* %149, align 1
  br label %150
Successor: 0xf09f60
[BB 0xf09f60]
  br label %151
Successor: 0xf09890
[BB 0xf0a630]
  %156 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__CS_thread_born_round, i64 0, i64 2), align 1
  store i8 %156, i8* @__CS_round, align 1
  store i8 0, i8* @__CS_ret, align 1
  %157 = load i8* (i8*)*, i8* (i8*)** getelementptr inbounds ([3 x i8* (i8*)*], [3 x i8* (i8*)*]* @__CS_thread, i64 0, i64 2), align 16
[Caller:   %158 = call i8* %157(i8* null)]
  %159 = load i8, i8* @__CS_ret, align 1
  %160 = zext i8 %159 to i32
  %161 = icmp ne i32 %160, 1
  br i1 %161, label %162, label %167
Successor: 0xf0ad00
Successor: 0xf0ad50
[BB 0xf0a680]
  %169 = load i8, i8* getelementptr inbounds ([3 x [3 x i8]], [3 x [3 x i8]]* @__CS_thread_status, i64 0, i64 0, i64 0), align 1
  %170 = zext i8 %169 to i32
  %171 = getelementptr inbounds [3 x [3 x i8]], [3 x [3 x i8]]* %2, i64 0, i64 1
  %172 = getelementptr inbounds [3 x i8], [3 x i8]* %171, i64 0, i64 0
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i32
  %175 = icmp eq i32 %170, %174
  %176 = zext i1 %175 to i32
[Caller:   call void @__VERIFIER_assume(i32 %176)]
[Callee: __VERIFIER_assume]
  %177 = load i8, i8* getelementptr inbounds ([3 x [3 x i8]], [3 x [3 x i8]]* @__CS_thread_status, i64 0, i64 1, i64 0), align 1
  %178 = zext i8 %177 to i32
  %179 = getelementptr inbounds [3 x [3 x i8]], [3 x [3 x i8]]* %2, i64 0, i64 2
  %180 = getelementptr inbounds [3 x i8], [3 x i8]* %179, i64 0, i64 0
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i32
  %183 = icmp eq i32 %178, %182
  %184 = zext i1 %183 to i32
[Caller:   call void @__VERIFIER_assume(i32 %184)]
[Callee: __VERIFIER_assume]
  %185 = load i8, i8* getelementptr inbounds ([3 x [3 x i8]], [3 x [3 x i8]]* @__CS_thread_status, i64 0, i64 0, i64 1), align 1
  %186 = zext i8 %185 to i32
  %187 = getelementptr inbounds [3 x [3 x i8]], [3 x [3 x i8]]* %2, i64 0, i64 1
  %188 = getelementptr inbounds [3 x i8], [3 x i8]* %187, i64 0, i64 1
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i32
  %191 = icmp eq i32 %186, %190
  %192 = zext i1 %191 to i32
[Caller:   call void @__VERIFIER_assume(i32 %192)]
[Callee: __VERIFIER_assume]
  %193 = load i8, i8* getelementptr inbounds ([3 x [3 x i8]], [3 x [3 x i8]]* @__CS_thread_status, i64 0, i64 1, i64 1), align 1
  %194 = zext i8 %193 to i32
  %195 = getelementptr inbounds [3 x [3 x i8]], [3 x [3 x i8]]* %2, i64 0, i64 2
  %196 = getelementptr inbounds [3 x i8], [3 x i8]* %195, i64 0, i64 1
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i32
  %199 = icmp eq i32 %194, %198
  %200 = zext i1 %199 to i32
[Caller:   call void @__VERIFIER_assume(i32 %200)]
[Callee: __VERIFIER_assume]
  %201 = load i8, i8* getelementptr inbounds ([3 x [3 x i8]], [3 x [3 x i8]]* @__CS_thread_status, i64 0, i64 0, i64 2), align 1
  %202 = zext i8 %201 to i32
  %203 = getelementptr inbounds [3 x [3 x i8]], [3 x [3 x i8]]* %2, i64 0, i64 1
  %204 = getelementptr inbounds [3 x i8], [3 x i8]* %203, i64 0, i64 2
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i32
  %207 = icmp eq i32 %202, %206
  %208 = zext i1 %207 to i32
[Caller:   call void @__VERIFIER_assume(i32 %208)]
[Callee: __VERIFIER_assume]
  %209 = load i8, i8* getelementptr inbounds ([3 x [3 x i8]], [3 x [3 x i8]]* @__CS_thread_status, i64 0, i64 1, i64 2), align 1
  %210 = zext i8 %209 to i32
  %211 = getelementptr inbounds [3 x [3 x i8]], [3 x [3 x i8]]* %2, i64 0, i64 2
  %212 = getelementptr inbounds [3 x i8], [3 x i8]* %211, i64 0, i64 2
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i32
  %215 = icmp eq i32 %210, %214
  %216 = zext i1 %215 to i32
[Caller:   call void @__VERIFIER_assume(i32 %216)]
[Callee: __VERIFIER_assume]
  %217 = load i8*, i8** getelementptr inbounds ([3 x [3 x i8*]], [3 x [3 x i8*]]* @__CS_thread_lockedon, i64 0, i64 0, i64 0), align 16
  %218 = getelementptr inbounds [3 x [3 x i8*]], [3 x [3 x i8*]]* %3, i64 0, i64 1
  %219 = getelementptr inbounds [3 x i8*], [3 x i8*]* %218, i64 0, i64 0
  %220 = load i8*, i8** %219, align 8
  %221 = icmp eq i8* %217, %220
  %222 = zext i1 %221 to i32
[Caller:   call void @__VERIFIER_assume(i32 %222)]
[Callee: __VERIFIER_assume]
  %223 = load i8*, i8** getelementptr inbounds ([3 x [3 x i8*]], [3 x [3 x i8*]]* @__CS_thread_lockedon, i64 0, i64 1, i64 0), align 8
  %224 = getelementptr inbounds [3 x [3 x i8*]], [3 x [3 x i8*]]* %3, i64 0, i64 2
  %225 = getelementptr inbounds [3 x i8*], [3 x i8*]* %224, i64 0, i64 0
  %226 = load i8*, i8** %225, align 16
  %227 = icmp eq i8* %223, %226
  %228 = zext i1 %227 to i32
[Caller:   call void @__VERIFIER_assume(i32 %228)]
[Callee: __VERIFIER_assume]
  %229 = load i8*, i8** getelementptr inbounds ([3 x [3 x i8*]], [3 x [3 x i8*]]* @__CS_thread_lockedon, i64 0, i64 0, i64 1), align 8
  %230 = getelementptr inbounds [3 x [3 x i8*]], [3 x [3 x i8*]]* %3, i64 0, i64 1
  %231 = getelementptr inbounds [3 x i8*], [3 x i8*]* %230, i64 0, i64 1
  %232 = load i8*, i8** %231, align 8
  %233 = icmp eq i8* %229, %232
  %234 = zext i1 %233 to i32
[Caller:   call void @__VERIFIER_assume(i32 %234)]
[Callee: __VERIFIER_assume]
  %235 = load i8*, i8** getelementptr inbounds ([3 x [3 x i8*]], [3 x [3 x i8*]]* @__CS_thread_lockedon, i64 0, i64 1, i64 1), align 8
  %236 = getelementptr inbounds [3 x [3 x i8*]], [3 x [3 x i8*]]* %3, i64 0, i64 2
  %237 = getelementptr inbounds [3 x i8*], [3 x i8*]* %236, i64 0, i64 1
  %238 = load i8*, i8** %237, align 8
  %239 = icmp eq i8* %235, %238
  %240 = zext i1 %239 to i32
[Caller:   call void @__VERIFIER_assume(i32 %240)]
[Callee: __VERIFIER_assume]
  %241 = load i8*, i8** getelementptr inbounds ([3 x [3 x i8*]], [3 x [3 x i8*]]* @__CS_thread_lockedon, i64 0, i64 0, i64 2), align 16
  %242 = getelementptr inbounds [3 x [3 x i8*]], [3 x [3 x i8*]]* %3, i64 0, i64 1
  %243 = getelementptr inbounds [3 x i8*], [3 x i8*]* %242, i64 0, i64 2
  %244 = load i8*, i8** %243, align 8
  %245 = icmp eq i8* %241, %244
  %246 = zext i1 %245 to i32
[Caller:   call void @__VERIFIER_assume(i32 %246)]
[Callee: __VERIFIER_assume]
  %247 = load i8*, i8** getelementptr inbounds ([3 x [3 x i8*]], [3 x [3 x i8*]]* @__CS_thread_lockedon, i64 0, i64 1, i64 2), align 8
  %248 = getelementptr inbounds [3 x [3 x i8*]], [3 x [3 x i8*]]* %3, i64 0, i64 2
  %249 = getelementptr inbounds [3 x i8*], [3 x i8*]* %248, i64 0, i64 2
  %250 = load i8*, i8** %249, align 16
  %251 = icmp eq i8* %247, %250
  %252 = zext i1 %251 to i32
[Caller:   call void @__VERIFIER_assume(i32 %252)]
[Callee: __VERIFIER_assume]
  %253 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @x, i64 0, i64 0), align 4
  %254 = getelementptr inbounds [3 x i32], [3 x i32]* %4, i64 0, i64 1
  %255 = load i32, i32* %254, align 4
  %256 = icmp eq i32 %253, %255
  %257 = zext i1 %256 to i32
[Caller:   call void @__VERIFIER_assume(i32 %257)]
[Callee: __VERIFIER_assume]
  %258 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @x, i64 0, i64 1), align 4
  %259 = getelementptr inbounds [3 x i32], [3 x i32]* %4, i64 0, i64 2
  %260 = load i32, i32* %259, align 4
  %261 = icmp eq i32 %258, %260
  %262 = zext i1 %261 to i32
[Caller:   call void @__VERIFIER_assume(i32 %262)]
[Callee: __VERIFIER_assume]
  %263 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @y, i64 0, i64 0), align 4
  %264 = getelementptr inbounds [3 x i32], [3 x i32]* %5, i64 0, i64 1
  %265 = load i32, i32* %264, align 4
  %266 = icmp eq i32 %263, %265
  %267 = zext i1 %266 to i32
[Caller:   call void @__VERIFIER_assume(i32 %267)]
[Callee: __VERIFIER_assume]
  %268 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @y, i64 0, i64 1), align 4
  %269 = getelementptr inbounds [3 x i32], [3 x i32]* %5, i64 0, i64 2
  %270 = load i32, i32* %269, align 4
  %271 = icmp eq i32 %268, %270
  %272 = zext i1 %271 to i32
[Caller:   call void @__VERIFIER_assume(i32 %272)]
[Callee: __VERIFIER_assume]
  %273 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @b1, i64 0, i64 0), align 4
  %274 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 1
  %275 = load i32, i32* %274, align 4
  %276 = icmp eq i32 %273, %275
  %277 = zext i1 %276 to i32
[Caller:   call void @__VERIFIER_assume(i32 %277)]
[Callee: __VERIFIER_assume]
  %278 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @b1, i64 0, i64 1), align 4
  %279 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 2
  %280 = load i32, i32* %279, align 4
  %281 = icmp eq i32 %278, %280
  %282 = zext i1 %281 to i32
[Caller:   call void @__VERIFIER_assume(i32 %282)]
[Callee: __VERIFIER_assume]
  %283 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @b2, i64 0, i64 0), align 4
  %284 = getelementptr inbounds [3 x i32], [3 x i32]* %7, i64 0, i64 1
  %285 = load i32, i32* %284, align 4
  %286 = icmp eq i32 %283, %285
  %287 = zext i1 %286 to i32
[Caller:   call void @__VERIFIER_assume(i32 %287)]
[Callee: __VERIFIER_assume]
  %288 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @b2, i64 0, i64 1), align 4
  %289 = getelementptr inbounds [3 x i32], [3 x i32]* %7, i64 0, i64 2
  %290 = load i32, i32* %289, align 4
  %291 = icmp eq i32 %288, %290
  %292 = zext i1 %291 to i32
[Caller:   call void @__VERIFIER_assume(i32 %292)]
[Callee: __VERIFIER_assume]
  %293 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @X, i64 0, i64 0), align 4
  %294 = getelementptr inbounds [3 x i32], [3 x i32]* %8, i64 0, i64 1
  %295 = load i32, i32* %294, align 4
  %296 = icmp eq i32 %293, %295
  %297 = zext i1 %296 to i32
[Caller:   call void @__VERIFIER_assume(i32 %297)]
[Callee: __VERIFIER_assume]
  %298 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @X, i64 0, i64 1), align 4
  %299 = getelementptr inbounds [3 x i32], [3 x i32]* %8, i64 0, i64 2
  %300 = load i32, i32* %299, align 4
  %301 = icmp eq i32 %298, %300
  %302 = zext i1 %301 to i32
[Caller:   call void @__VERIFIER_assume(i32 %302)]
[Callee: __VERIFIER_assume]
  %303 = load i8, i8* @__CS_error, align 1
  %304 = zext i8 %303 to i32
  %305 = icmp ne i32 %304, 1
  %306 = zext i1 %305 to i32
[Caller:   call void @__VERIFIER_assert(i32 %306)]
[Callee: __VERIFIER_assert]
  %307 = load i32, i32* %1, align 4
  ret i32 %307
[BB 0xf0ad00]
  %163 = load i8, i8* @__CS_round, align 1
  %164 = zext i8 %163 to i64
  %165 = getelementptr inbounds [3 x [3 x i8]], [3 x [3 x i8]]* @__CS_thread_status, i64 0, i64 %164
  %166 = getelementptr inbounds [3 x i8], [3 x i8]* %165, i64 0, i64 2
  store i8 2, i8* %166, align 1
  br label %167
Successor: 0xf0ad50
[BB 0xf0ad50]
  br label %168
Successor: 0xf0a680
[Function: __VERIFIER_nondet_int]
[Function: __VERIFIER_nondet_int]
[Function: __VERIFIER_nondet_int]
[Function: __VERIFIER_nondet_int]
[Function: __VERIFIER_nondet_int]
[Function: __VERIFIER_nondet_uchar]
[Function: __VERIFIER_nondet_pointer]
[Function: __VERIFIER_assume]
[Function: __VERIFIER_assume]
[Function: __VERIFIER_assume]
[Function: __VERIFIER_assume]
[Function: __VERIFIER_assume]
[Function: __VERIFIER_assume]
[Function: __VERIFIER_assume]
[Function: __VERIFIER_assume]
[Function: __VERIFIER_assume]
[Function: __VERIFIER_assume]
[Function: __VERIFIER_assume]
[Function: __VERIFIER_assume]
[Function: __VERIFIER_assume]
[Function: __VERIFIER_assume]
[Function: __VERIFIER_assume]
[Function: __VERIFIER_assume]
[Function: __VERIFIER_assume]
[Function: __VERIFIER_assume]
[Function: __VERIFIER_assume]
[Function: __VERIFIER_assume]
[Function: __VERIFIER_assume]
[Function: __VERIFIER_assume]
[Function: __VERIFIER_assert]
[BB 0xed79c0]
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %7, label %5
Successor: 0xed7be0
Successor: 0xed7c30
[BB 0xed7be0]
  ret void
[BB 0xed7c30]
  br label %6
Successor: 0xed7d70
[BB 0xed7d70]
[Caller:   call void (...) @__VERIFIER_error() #3]
[Callee: __VERIFIER_error]
  unreachable
[Function: __VERIFIER_error]
