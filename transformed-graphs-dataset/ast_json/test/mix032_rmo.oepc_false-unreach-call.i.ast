TranslationUnitDecl 0x5575f72d9f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5575f72da848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5575f72da520 '__int128'
|-TypedefDecl 0x5575f72da8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5575f72da540 'unsigned __int128'
|-TypedefDecl 0x5575f72dabc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5575f72da990 'struct __NSConstantString_tag'
|   `-Record 0x5575f72da910 '__NSConstantString_tag'
|-TypedefDecl 0x5575f72dac68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5575f72dac20 'char *'
|   `-BuiltinType 0x5575f72da020 'char'
|-TypedefDecl 0x5575f7319b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5575f72daf00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5575f72dad40 'struct __va_list_tag'
|     `-Record 0x5575f72dacc0 '__va_list_tag'
|-FunctionDecl 0x5575f7319ca0 <pthread-wmm/mix032_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5575f7319bd0 <col:31> col:34 'int'
|-FunctionDecl 0x5575f7319e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5575f7319f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5575f731a0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5575f731a048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5575f731a308 <col:40, col:99>
|   |-IfStmt 0x5575f731a2d8 <col:42, col:88>
|   | |-UnaryOperator 0x5575f731a1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5575f731a1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5575f731a180 <col:47> 'int' lvalue ParmVar 0x5575f731a048 'expression' 'int'
|   | `-CompoundStmt 0x5575f731a2c0 <col:59, col:88>
|   |   `-LabelStmt 0x5575f731a2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5575f731a238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5575f731a220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5575f731a1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x5575f7319f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5575f731a2f0 <col:89>
|   `-ReturnStmt 0x5575f731a2f8 <col:91>
|-FunctionDecl 0x5575f731a350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5575f731a410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5575f731a790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5575f731a4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5575f731a548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5575f731a5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5575f731a648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5575f731a850 <line:10:22>
|-FunctionDecl 0x5575f73408a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5575f731a8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5575f731a940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5575f731a9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5575f731aa40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5575f7340960 <line:13:22>
|-FunctionDecl 0x5575f7340c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5575f73409d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5575f7340a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5575f7340ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5575f7340cc8 <line:15:22>
|-TypedefDecl 0x5575f7340d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5575f72da0e0 'unsigned char'
|-TypedefDecl 0x5575f7340da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5575f72da100 'unsigned short'
|-TypedefDecl 0x5575f7340e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5575f72da120 'unsigned int'
|-TypedefDecl 0x5575f7340e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5575f72da140 'unsigned long'
|-TypedefDecl 0x5575f7340ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5575f72da040 'signed char'
|-TypedefDecl 0x5575f7340f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5575f72da0e0 'unsigned char'
|-TypedefDecl 0x5575f7340fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5575f72da060 'short'
|-TypedefDecl 0x5575f7341048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5575f72da100 'unsigned short'
|-TypedefDecl 0x5575f73410b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5575f72da080 'int'
|-TypedefDecl 0x5575f7341128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5575f72da120 'unsigned int'
|-TypedefDecl 0x5575f7341198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5575f72da0a0 'long'
|-TypedefDecl 0x5575f7341208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5575f72da140 'unsigned long'
|-TypedefDecl 0x5575f7341278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5575f72da0a0 'long'
|-TypedefDecl 0x5575f73412e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5575f72da140 'unsigned long'
|-TypedefDecl 0x5575f7341358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5575f72da140 'unsigned long'
|-TypedefDecl 0x5575f73413c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5575f72da120 'unsigned int'
|-TypedefDecl 0x5575f7341438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5575f72da120 'unsigned int'
|-TypedefDecl 0x5575f73414a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5575f72da140 'unsigned long'
|-TypedefDecl 0x5575f7341518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5575f72da140 'unsigned long'
|-TypedefDecl 0x5575f7341588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5575f72da120 'unsigned int'
|-TypedefDecl 0x5575f73415f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5575f72da140 'unsigned long'
|-TypedefDecl 0x5575f7341668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5575f72da0a0 'long'
|-TypedefDecl 0x5575f73416d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5575f72da0a0 'long'
|-TypedefDecl 0x5575f7341748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5575f72da080 'int'
|-RecordDecl 0x5575f73417a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5575f7341918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5575f73419d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5575f7341970 'struct __fsid_t' sugar
|   `-RecordType 0x5575f7341820 '__fsid_t'
|     `-Record 0x5575f73417a0 ''
|-TypedefDecl 0x5575f7341a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5575f72da0a0 'long'
|-TypedefDecl 0x5575f7341ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5575f72da140 'unsigned long'
|-TypedefDecl 0x5575f7341b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5575f72da140 'unsigned long'
|-TypedefDecl 0x5575f7341ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5575f72da120 'unsigned int'
|-TypedefDecl 0x5575f7341c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5575f72da0a0 'long'
|-TypedefDecl 0x5575f7341c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5575f72da120 'unsigned int'
|-TypedefDecl 0x5575f7341cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5575f72da0a0 'long'
|-TypedefDecl 0x5575f7341d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5575f72da080 'int'
|-TypedefDecl 0x5575f7341dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5575f72da080 'int'
|-TypedefDecl 0x5575f7341e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5575f72da080 'int'
|-TypedefDecl 0x5575f7341eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5575f72da7a0 'void *'
|   `-BuiltinType 0x5575f72d9fe0 'void'
|-TypedefDecl 0x5575f7341f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5575f72da0a0 'long'
|-TypedefDecl 0x5575f7341f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5575f72da0a0 'long'
|-TypedefDecl 0x5575f7342008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5575f72da0a0 'long'
|-TypedefDecl 0x5575f7342078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5575f72da140 'unsigned long'
|-TypedefDecl 0x5575f73420e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5575f72da140 'unsigned long'
|-TypedefDecl 0x5575f7342158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5575f72da140 'unsigned long'
|-TypedefDecl 0x5575f73421c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5575f72da140 'unsigned long'
|-TypedefDecl 0x5575f7342238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5575f72da0a0 'long'
|-TypedefDecl 0x5575f73422a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5575f72da0a0 'long'
|-TypedefDecl 0x5575f7342318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5575f72da0a0 'long'
|-TypedefDecl 0x5575f7342388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5575f72da140 'unsigned long'
|-TypedefDecl 0x5575f7342418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5575f73423e0 '__off64_t' sugar
|   |-Typedef 0x5575f73416d8 '__off64_t'
|   `-BuiltinType 0x5575f72da0a0 'long'
|-TypedefDecl 0x5575f7342510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5575f73424d0 '__quad_t *'
|   `-TypedefType 0x5575f7342470 '__quad_t' sugar
|     |-Typedef 0x5575f7341278 '__quad_t'
|     `-BuiltinType 0x5575f72da0a0 'long'
|-TypedefDecl 0x5575f7342580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5575f72dac20 'char *'
|   `-BuiltinType 0x5575f72da020 'char'
|-TypedefDecl 0x5575f73425f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5575f72da0a0 'long'
|-TypedefDecl 0x5575f7342660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5575f72da120 'unsigned int'
|-FunctionDecl 0x5575f73427a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5575f73426d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5575f7342ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5575f7342ad8 <line:72:3, col:34>
|     `-CallExpr 0x5575f7342a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5575f7342a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5575f7342a10 <col:10> '<builtin fn type>' Function 0x5575f7342880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5575f7342ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5575f7342a30 <col:29> 'unsigned int' lvalue ParmVar 0x5575f73426d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5575f7342880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5575f7342920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5575f7342990 <col:10> Implicit
| `-ConstAttr 0x5575f73429e8 <col:10> Implicit
|-FunctionDecl 0x5575f7342c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5575f7342b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5575f7342f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5575f7342f48 <line:77:3, col:34>
|     `-CallExpr 0x5575f7342f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5575f7342ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5575f7342e78 <col:10> '<builtin fn type>' Function 0x5575f7342ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5575f7342f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5575f7342e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5575f7342b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5575f7342ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5575f7342d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5575f7342df8 <col:10> Implicit
| `-ConstAttr 0x5575f7342e50 <col:10> Implicit
|-TypedefDecl 0x5575f7342f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5575f72da140 'unsigned long'
|-TypedefDecl 0x5575f7343018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5575f7342fe0 '__time_t' sugar
|   |-Typedef 0x5575f7341c18 '__time_t'
|   `-BuiltinType 0x5575f72da0a0 'long'
|-RecordDecl 0x5575f7343070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5575f7343128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5575f73431b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5575f7343248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5575f7343210 '__pid_t' sugar
|   |-Typedef 0x5575f7341748 '__pid_t'
|   `-BuiltinType 0x5575f72da080 'int'
|-RecordDecl 0x5575f73432a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5575f7343360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5575f73433b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5575f7343470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5575f73434d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5575f72da140 'unsigned long'
|-RecordDecl 0x5575f7343530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5575f73437c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5575f73458b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5575f7343810 'struct cpu_set_t' sugar
|   `-RecordType 0x5575f73435b0 'cpu_set_t'
|     `-Record 0x5575f7343530 ''
|-FunctionDecl 0x5575f7345b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5575f7345958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5575f7345a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5575f7345c38 <line:107:19>
|-FunctionDecl 0x5575f7345e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5575f7345ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5575f7345eb8 <col:69>
|-FunctionDecl 0x5575f7346030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5575f7345f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5575f73460d8 <col:64>
|-FunctionDecl 0x5575f7346398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5575f7346140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5575f7346278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5575f7346448 <line:113:22>
|-FunctionDecl 0x5575f73466c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5575f73464b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5575f73465a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5575f7346778 <col:88>
|-FunctionDecl 0x5575f7346a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5575f73467e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5575f73468c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5575f7346950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5575f7346b50 <col:62>
|-FunctionDecl 0x5575f7346cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5575f7346bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5575f7346d70 <col:63>
|-FunctionDecl 0x5575f7346e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5575f7346f38 <col:47>
|-FunctionDecl 0x5575f7347040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5575f7346fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5575f73470e8 <col:69>
|-FunctionDecl 0x5575f73471f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5575f7347158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5575f7347298 <col:69>
|-FunctionDecl 0x5575f7347558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5575f7347300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5575f7347438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5575f7347608 <col:88>
|-TypedefDecl 0x5575f7347698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5575f7347660 '__clock_t' sugar
|   |-Typedef 0x5575f7341a58 '__clock_t'
|   `-BuiltinType 0x5575f72da0a0 'long'
|-TypedefDecl 0x5575f7347728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5575f73476f0 '__clockid_t' sugar
|   |-Typedef 0x5575f7341e48 '__clockid_t'
|   `-BuiltinType 0x5575f72da080 'int'
|-TypedefDecl 0x5575f73477b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5575f7347780 '__timer_t' sugar
|   |-Typedef 0x5575f7341eb8 '__timer_t'
|   `-PointerType 0x5575f72da7a0 'void *'
|     `-BuiltinType 0x5575f72d9fe0 'void'
|-RecordDecl 0x5575f7347810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5575f73478e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5575f7347950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5575f73479b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5575f7347a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5575f7347a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5575f7347af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5575f7347b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5575f7347bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5575f7347c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5575f7347c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5575f7347cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5575f7347d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5575f7347e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5575f7347e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5575f7347f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5575f7348100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5575f73481a0 <col:45>
|-FunctionDecl 0x5575f7348380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5575f7348270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5575f7348428 <col:54>
|-FunctionDecl 0x5575f7348628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5575f7348490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5575f7348508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5575f73486d8 <line:157:22>
| `-ConstAttr 0x5575f7348730 <col:63>
|-FunctionDecl 0x5575f7349560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5575f7348828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5575f7349608 <col:56>
|-FunctionDecl 0x5575f73499b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5575f7349678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5575f73496f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5575f7349770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5575f7349868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5575f7349a70 <col:54>
|-RecordDecl 0x5575f7349ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5575f7349b78 parent 0x5575f72d9f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5575f7349dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5575f7349e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5575f7349ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5575f7349f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5575f734a038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5575f734a158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5575f734a100 'struct __locale_struct *'
|   `-ElaboratedType 0x5575f734a090 'struct __locale_struct' sugar
|     `-RecordType 0x5575f7349b50 'struct __locale_struct'
|       `-Record 0x5575f7349ac8 '__locale_struct'
|-TypedefDecl 0x5575f734a208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5575f734a1d0 '__locale_t' sugar
|   |-Typedef 0x5575f734a158 '__locale_t'
|   `-PointerType 0x5575f734a100 'struct __locale_struct *'
|     `-ElaboratedType 0x5575f734a090 'struct __locale_struct' sugar
|       `-RecordType 0x5575f7349b50 'struct __locale_struct'
|         `-Record 0x5575f7349ac8 '__locale_struct'
|-FunctionDecl 0x5575f734a610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5575f734a278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5575f734a2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5575f734a370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5575f734a400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5575f734a478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5575f734a6d8 <col:40>
|-FunctionDecl 0x5575f734a8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5575f734a7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5575f734a970 <col:66>
|-FunctionDecl 0x5575f734aa80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5575f734a9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5575f734ab28 <col:69>
|-FunctionDecl 0x5575f734ad58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5575f734ab90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5575f734ac20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5575f734ae08 <col:52>
|-FunctionDecl 0x5575f734afb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5575f734ae70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5575f734af00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5575f734b060 <col:55>
|-FunctionDecl 0x5575f734b1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5575f734b0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5575f734b2a0 <col:62>
|-FunctionDecl 0x5575f734b418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5575f734b308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5575f734b4c0 <col:60>
|-FunctionDecl 0x5575f734b718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5575f734b578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5575f734b5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5575f734b7c8 <col:44>
|-FunctionDecl 0x5575f734b9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5575f734b830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5575f734b8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5575f734ba88 <col:49>
|-VarDecl 0x5575f734bb88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5575f734bc08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5575f734bc88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5575f734bd50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5575f734be80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5575f734bf20 <col:42>
|-VarDecl 0x5575f734bf90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5575f734c010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5575f734c198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5575f734c088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5575f734c240 <col:57>
|-FunctionDecl 0x5575f734c350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5575f734c2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5575f734c3f8 <col:56>
|-FunctionDecl 0x5575f734d540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5575f734c478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5575f734d5e8 <col:59>
|-FunctionDecl 0x5575f734d6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5575f734d658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5575f734d798 <col:48>
| `-ConstAttr 0x5575f734d7f0 <col:89>
|-FunctionDecl 0x5575f734da58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5575f734d8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5575f734d938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5575f734dcb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5575f734db48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5575f734dbd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5575f734dd68 <col:88>
|-FunctionDecl 0x5575f734df00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5575f734ddd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5575f734de60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5575f734dfb0 <col:88>
|-FunctionDecl 0x5575f734e1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5575f734e018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5575f734e0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5575f734e278 <line:208:22>
|-FunctionDecl 0x5575f734e5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5575f734e2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5575f734e360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5575f734e3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5575f734e480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5575f734e8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5575f734e6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5575f734e7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5575f734e998 <col:85>
|-FunctionDecl 0x5575f734ed88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5575f734ea00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5575f734eb38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5575f734ec40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5575f734ee40 <col:52>
|-FunctionDecl 0x5575f734efb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5575f734eea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5575f734f060 <col:61>
|-FunctionDecl 0x5575f734f560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5575f734f0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5575f734f148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5575f734f278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5575f734f368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5575f734f620 <col:62>
|-FunctionDecl 0x5575f734f838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5575f734f688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5575f734f718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5575f734f8e8 <line:221:22>
|-FunctionDecl 0x5575f734f9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5575f734f950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5575f734fa90 <col:65>
|-TypedefDecl 0x5575f734fb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5575f72da140 'unsigned long'
|-RecordDecl 0x5575f734fb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5575f734fca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5575f734fd08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5575f734fdb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5575f734fd60 'union pthread_attr_t' sugar
|   `-RecordType 0x5575f734fbe0 'union pthread_attr_t'
|     `-Record 0x5575f734fb58 'pthread_attr_t'
|-RecordDecl 0x5575f734fe10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5575f734ff88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5575f7350000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5575f73500b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5575f7350050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5575f734fe90 'struct __pthread_internal_list'
|     `-Record 0x5575f734fe10 '__pthread_internal_list'
|-RecordDecl 0x5575f7350120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5575f73501c8 parent 0x5575f72d9f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5575f73502a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5575f7350308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5575f7350370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5575f73503d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5575f7350440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5575f73504a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5575f7354580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5575f7354630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5575f7354720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5575f7354788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5575f7354910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5575f73548b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5575f73501a0 'pthread_mutex_t'
|     `-Record 0x5575f7350120 ''
|-RecordDecl 0x5575f7354980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5575f7354ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5575f7354b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5575f7354be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5575f7354b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5575f7354a00 'pthread_mutexattr_t'
|     `-Record 0x5575f7354980 ''
|-RecordDecl 0x5575f7354c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5575f7354cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5575f7354dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5575f7354e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5575f7354e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5575f7354ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5575f7354f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5575f7354fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5575f7355030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5575f7355098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5575f7355150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix032_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix032_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5575f7355240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5575f73552a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5575f73553e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5575f7355380 'union pthread_cond_t' sugar
|   `-RecordType 0x5575f7354cd0 'pthread_cond_t'
|     `-Record 0x5575f7354c50 ''
|-RecordDecl 0x5575f7355450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5575f7355590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5575f73555f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5575f73556b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5575f7355650 'union pthread_condattr_t' sugar
|   `-RecordType 0x5575f73554d0 'pthread_condattr_t'
|     `-Record 0x5575f7355450 ''
|-TypedefDecl 0x5575f7355738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5575f72da120 'unsigned int'
|-TypedefDecl 0x5575f73557a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5575f72da080 'int'
|-RecordDecl 0x5575f7355800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5575f73558a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5575f7355970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5575f73559d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5575f7355a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5575f7355aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5575f7355b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5575f7355b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5575f7355be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5575f7355c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5575f7355cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5575f7355d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5575f7355d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5575f7355e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix032_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix032_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5575f7355ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5575f7355f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5575f7356090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5575f7356030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5575f7355880 'pthread_rwlock_t'
|     `-Record 0x5575f7355800 ''
|-RecordDecl 0x5575f7356100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5575f7356240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5575f73562a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5575f7356360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5575f7356300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5575f7356180 'pthread_rwlockattr_t'
|     `-Record 0x5575f7356100 ''
|-TypedefDecl 0x5575f73563e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5575f72da084 'volatile int' volatile
|   `-BuiltinType 0x5575f72da080 'int'
|-RecordDecl 0x5575f7356440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5575f73585b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5575f7358618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5575f73586d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5575f7358670 'union pthread_barrier_t' sugar
|   `-RecordType 0x5575f73564c0 'pthread_barrier_t'
|     `-Record 0x5575f7356440 ''
|-RecordDecl 0x5575f7358740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5575f7358840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5575f73588a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5575f7358960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5575f7358900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5575f73587c0 'pthread_barrierattr_t'
|     `-Record 0x5575f7358740 ''
|-TypedefDecl 0x5575f7358a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5575f7358a10 'long [8]' 8 
|   `-BuiltinType 0x5575f72da0a0 'long'
|-EnumDecl 0x5575f7358ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5575f7358b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5575f7358be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5575f7358c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5575f7358d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5575f7358d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5575f7358da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5575f7358df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5575f7358e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5575f7358e68 <col:26> 'int'
| |   `-DeclRefExpr 0x5575f7358e48 <col:26> 'int' EnumConstant 0x5575f7358d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5575f7358f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5575f7358ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x5575f7358ed0 <col:29> 'int' EnumConstant 0x5575f7358d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5575f7358f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5575f7358f78 <col:30> 'int'
| |   `-DeclRefExpr 0x5575f7358f58 <col:30> 'int' EnumConstant 0x5575f7358da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5575f7359018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5575f7359000 <col:27> 'int'
|     `-DeclRefExpr 0x5575f7358fe0 <col:27> 'int' EnumConstant 0x5575f7358e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5575f7359068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5575f7359138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5575f73591c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5575f73591a8 <col:30> 'int'
| |   `-DeclRefExpr 0x5575f7359188 <col:30> 'int' EnumConstant 0x5575f7359138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5575f7359210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5575f7359298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5575f7359280 <col:29> 'int'
|     `-DeclRefExpr 0x5575f7359260 <col:29> 'int' EnumConstant 0x5575f7359210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5575f73592e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5575f73593b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5575f7359408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5575f7359458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5575f73594a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5575f73595c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5575f7359610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5575f7359660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5575f73596e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5575f73596d0 <col:31> 'int'
|     `-DeclRefExpr 0x5575f73596b0 <col:31> 'int' EnumConstant 0x5575f73595c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5575f7359738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5575f7359808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5575f7359858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5575f73598a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5575f7359978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5575f73599c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5575f7359a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5575f7359ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5575f7359b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5575f7359b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5575f7359dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5575f7359e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5575f7359e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5575f7359fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5575f735a008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5575f735a0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5575f735a128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5575f735a178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5575f735a248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5575f735a298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5575f735a8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5575f735a390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5575f735a4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5575f735a6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5575f735a760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5575f735a9b8 <col:47>
| |-NonNullAttr 0x5575f735aa10 <col:77, col:94> 1 3
| `-CallbackAttr 0x5575f735aa48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5575f735ab70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5575f735aaa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5575f735adc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5575f735ac28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5575f735aca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5575f735af98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5575f735ae88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5575f735b040 <col:60>
|-FunctionDecl 0x5575f735b190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5575f735b230 <col:54>
| `-ConstAttr 0x5575f735b288 <col:95>
|-FunctionDecl 0x5575f735b458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5575f735b2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5575f735b338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5575f735b508 <line:394:19>
| `-ConstAttr 0x5575f735b560 <col:60>
|-FunctionDecl 0x5575f735bf68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5575f735be30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5575f735c010 <col:71>
| `-NonNullAttr 0x5575f735c068 <col:112, col:126> 1
|-FunctionDecl 0x5575f735c170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5575f735c0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5575f735c218 <line:397:22>
| `-NonNullAttr 0x5575f735c270 <col:63, col:77> 1
|-FunctionDecl 0x5575f735c498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5575f735c2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5575f735c338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5575f735c548 <line:400:22>
| `-NonNullAttr 0x5575f735c5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5575f735c7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5575f735c5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5575f735c668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5575f735c858 <line:403:22>
| `-NonNullAttr 0x5575f735c8b0 <col:63, col:77> 1
|-FunctionDecl 0x5575f735cb08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5575f735c8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5575f735c9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5575f735cbb8 <line:406:22>
| `-NonNullAttr 0x5575f735cc10 <col:63, col:80> 1 2
|-FunctionDecl 0x5575f735de48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5575f735cc58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5575f735ccd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5575f735def8 <line:409:22>
| `-NonNullAttr 0x5575f735df50 <col:63, col:77> 1
|-FunctionDecl 0x5575f735e188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5575f735df98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5575f735e028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5575f735e238 <line:412:22>
| `-NonNullAttr 0x5575f735e290 <col:63, col:80> 1 2
|-FunctionDecl 0x5575f735e4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5575f735e2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5575f735e368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5575f735e578 <col:37>
| `-NonNullAttr 0x5575f735e5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x5575f735e7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575f735e618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5575f735e698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5575f735e868 <line:418:22>
| `-NonNullAttr 0x5575f735e8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5575f735ea48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5575f735e908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5575f735e988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5575f735eaf8 <line:420:22>
| `-NonNullAttr 0x5575f735eb50 <col:63, col:77> 1
|-FunctionDecl 0x5575f735ecf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575f735eb98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5575f735ec18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5575f735eda8 <line:423:22>
| `-NonNullAttr 0x5575f735fe30 <col:63, col:80> 1 2
|-FunctionDecl 0x5575f735ffb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5575f735fe78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5575f735fef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5575f7360068 <line:426:22>
| `-NonNullAttr 0x5575f73600c0 <col:63, col:77> 1
|-FunctionDecl 0x5575f7360268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575f7360108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5575f7360188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5575f7360318 <line:429:22>
| `-NonNullAttr 0x5575f7360370 <col:63, col:80> 1 2
|-FunctionDecl 0x5575f73604f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5575f73603b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5575f7360438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5575f73605a8 <line:431:22>
| `-NonNullAttr 0x5575f7360600 <col:63, col:77> 1
|-FunctionDecl 0x5575f7360828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5575f7360648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5575f73606c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5575f73608d8 <line:434:22>
| |-NonNullAttr 0x5575f7360930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5575f7360968 <col:100> "" ""
|-FunctionDecl 0x5575f7360b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5575f73609b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5575f7360a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5575f7360c28 <line:437:22>
| |-NonNullAttr 0x5575f7360c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x5575f7360cb8 <col:97> "" ""
|-FunctionDecl 0x5575f7360eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5575f7360d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5575f7360d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5575f7360f68 <line:440:22>
| `-NonNullAttr 0x5575f7360fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x5575f7361140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5575f7361008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5575f7361080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5575f73611f0 <line:443:22>
| `-NonNullAttr 0x5575f7361248 <col:63, col:77> 1
|-FunctionDecl 0x5575f7361538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5575f7361298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5575f7361318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5575f7361390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5575f73615f0 <line:447:22>
| `-NonNullAttr 0x5575f7361648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5575f73618f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5575f73616a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5575f7361720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5575f7361798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5575f73619b0 <col:43>
| `-NonNullAttr 0x5575f7361a08 <col:84, col:98> 1
|-FunctionDecl 0x5575f7361cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5575f7361a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5575f7361ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5575f7361b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5575f7361d80 <line:452:22>
| `-NonNullAttr 0x5575f7361dd8 <col:63, col:77> 3
|-FunctionDecl 0x5575f73620e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5575f7361e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5575f7361ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5575f7361f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5575f73621a0 <line:456:22>
| `-NonNullAttr 0x5575f73621f8 <col:63, col:80> 2 3
|-FunctionDecl 0x5575f73623e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5575f7362248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5575f73622c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5575f7362498 <line:458:22>
|-FunctionDecl 0x5575f7362868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5575f7362560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5575f7362700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5575f7362918 <col:52, col:69> 1 2
|-FunctionDecl 0x5575f7362ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5575f73629a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5575f7362a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5575f7362ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5575f7362b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5575f7362c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5575f7362e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5575f7362d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5575f7362fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5575f7363040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5575f73630e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5575f73631d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5575f7363240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5575f7363410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix032_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5575f7363508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5575f73635c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5575f7363560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5575f73630c0 '__pthread_unwind_buf_t'
| |   `-Record 0x5575f7363040 ''
| `-AlignedAttr 0x5575f7363618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5575f7363690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5575f73637f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5575f7363858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5575f73638c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5575f7363928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5575f7363b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5575f7363a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5575f7363c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5575f7363be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5575f7363e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5575f7363d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5575f7363f18 <line:487:22>
|-RecordDecl 0x5575f7363f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5575f7364288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5575f73640e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5575f7364168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5575f7364338 <col:86>
| `-ReturnsTwiceAttr 0x5575f7364390 <col:12> Implicit
|-FunctionDecl 0x5575f73646b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5575f7364460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5575f7364570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5575f7364768 <line:493:22>
| `-NonNullAttr 0x5575f73647c0 <col:63, col:77> 1
|-FunctionDecl 0x5575f7364938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5575f7364808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5575f73649e0 <line:495:22>
| `-NonNullAttr 0x5575f7364a38 <col:63, col:77> 1
|-FunctionDecl 0x5575f7364b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5575f7364a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5575f7364be8 <line:497:22>
| `-NonNullAttr 0x5575f7364c40 <col:52, col:66> 1
|-FunctionDecl 0x5575f7364d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5575f7364c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5575f7364de8 <line:499:22>
| `-NonNullAttr 0x5575f7364e40 <col:52, col:66> 1
|-FunctionDecl 0x5575f7365088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5575f7364e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5575f7364f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5575f7365138 <col:36>
| `-NonNullAttr 0x5575f7365190 <col:66, col:83> 1 2
|-FunctionDecl 0x5575f7365290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5575f73651d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5575f7365338 <line:504:22>
| `-NonNullAttr 0x5575f7365390 <col:52, col:66> 1
|-FunctionDecl 0x5575f7365628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575f7365440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5575f73654c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5575f73656d8 <line:508:22>
| `-NonNullAttr 0x5575f7365730 <col:63, col:80> 1 2
|-FunctionDecl 0x5575f73659f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5575f7365778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5575f73657f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5575f7365878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5575f7365ab0 <line:512:22>
| `-NonNullAttr 0x5575f7365b08 <col:63, col:80> 1 3
|-FunctionDecl 0x5575f7365c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5575f7365b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5575f7365cb8 <line:514:22>
| `-NonNullAttr 0x5575f7365d10 <col:63, col:77> 1
|-FunctionDecl 0x5575f7365f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5575f7365dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5575f7365fe0 <line:516:22>
| `-NonNullAttr 0x5575f7366038 <col:63, col:77> 1
|-FunctionDecl 0x5575f7366140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5575f7366088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5575f73661e8 <line:518:22>
| `-NonNullAttr 0x5575f7366240 <col:63, col:77> 1
|-FunctionDecl 0x5575f7366468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575f7366288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5575f7366308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5575f7366518 <line:522:22>
| `-NonNullAttr 0x5575f7366570 <col:63, col:80> 1 2
|-FunctionDecl 0x5575f7366778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5575f73665b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5575f7366638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5575f7366828 <line:525:22>
| `-NonNullAttr 0x5575f7366880 <col:63, col:77> 1
|-FunctionDecl 0x5575f7366a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575f73668c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5575f7366948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5575f7366ad8 <line:528:22>
| `-NonNullAttr 0x5575f7366b30 <col:63, col:80> 1 2
|-FunctionDecl 0x5575f7366cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5575f7366b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5575f7366bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5575f7366d68 <line:530:22>
| `-NonNullAttr 0x5575f7366dc0 <col:63, col:77> 1
|-FunctionDecl 0x5575f7367f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575f7366e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5575f7367eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5575f7368040 <line:534:22>
| `-NonNullAttr 0x5575f7368098 <col:63, col:80> 1 2
|-FunctionDecl 0x5575f7368228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5575f73680e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5575f7368168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5575f73682d8 <line:537:22>
| `-NonNullAttr 0x5575f7368330 <col:63, col:77> 1
|-FunctionDecl 0x5575f73684d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575f7368378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5575f73683f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5575f7368588 <line:541:22>
| `-NonNullAttr 0x5575f73685e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5575f7368768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5575f7368628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5575f73686a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5575f7368818 <line:544:22>
| `-NonNullAttr 0x5575f7368870 <col:63, col:77> 1
|-FunctionDecl 0x5575f7368a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5575f73688b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5575f7368938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5575f7368b08 <line:547:22>
| `-NonNullAttr 0x5575f7368b60 <col:63, col:80> 1 2
|-FunctionDecl 0x5575f7368ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5575f7368ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5575f7368c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5575f7368d98 <line:550:22>
| `-NonNullAttr 0x5575f7368df0 <col:63, col:77> 1
|-FunctionDecl 0x5575f736a168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5575f7369f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5575f736a020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5575f736a218 <col:29>
| `-NonNullAttr 0x5575f736a270 <col:70, col:84> 1
|-FunctionDecl 0x5575f736a3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5575f736a2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5575f736a490 <line:555:22>
| `-NonNullAttr 0x5575f736a4e8 <col:63, col:77> 1
|-FunctionDecl 0x5575f736a5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5575f736a538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5575f736a698 <line:557:22>
| `-NonNullAttr 0x5575f736a6f0 <col:52, col:66> 1
|-FunctionDecl 0x5575f736a7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5575f736a738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5575f736a898 <line:559:19>
| `-NonNullAttr 0x5575f736a8f0 <col:49, col:63> 1
|-FunctionDecl 0x5575f736ab28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5575f736a938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5575f736a9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5575f736abd8 <col:39>
| `-NonNullAttr 0x5575f736ac30 <col:69, col:86> 1 2
|-FunctionDecl 0x5575f736ad30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5575f736ac78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5575f736add8 <line:564:22>
| `-NonNullAttr 0x5575f736ae30 <col:52, col:66> 1
|-FunctionDecl 0x5575f736af98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5575f736aee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5575f736b040 <line:566:22>
| `-NonNullAttr 0x5575f736b098 <col:52, col:66> 1
|-FunctionDecl 0x5575f736b258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5575f736b0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5575f736b178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5575f736b308 <col:39>
| `-NonNullAttr 0x5575f736b360 <col:69, col:86> 1 2
|-FunctionDecl 0x5575f736b460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5575f736b3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5575f736b508 <line:571:22>
| `-NonNullAttr 0x5575f736b560 <col:52, col:66> 1
|-FunctionDecl 0x5575f736b748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5575f736b610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5575f736b7f0 <line:573:22>
| `-NonNullAttr 0x5575f736b848 <col:63, col:77> 1
|-FunctionDecl 0x5575f736b950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5575f736b898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5575f736b9f8 <line:575:22>
| `-NonNullAttr 0x5575f736ba50 <col:63, col:77> 1
|-FunctionDecl 0x5575f736bc78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575f736ba98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5575f736bb18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5575f736bd28 <line:579:22>
| `-NonNullAttr 0x5575f736bd80 <col:63, col:80> 1 2
|-FunctionDecl 0x5575f736bfa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5575f736bdc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5575f736be48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5575f736c058 <line:582:22>
| `-NonNullAttr 0x5575f736c0b0 <col:63, col:77> 1
|-FunctionDecl 0x5575f736c258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575f736c0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5575f736c178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5575f736c308 <line:586:22>
| `-NonNullAttr 0x5575f736c360 <col:63, col:80> 1 2
|-FunctionDecl 0x5575f736c4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5575f736c3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5575f736c428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5575f736c598 <col:36>
| `-NonNullAttr 0x5575f736c5f0 <col:77, col:91> 1
|-FunctionDecl 0x5575f736c928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5575f736c6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5575f736c7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5575f736c9d8 <line:591:22>
| `-NonNullAttr 0x5575f736ca30 <col:63, col:77> 1
|-FunctionDecl 0x5575f736cba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5575f736ca78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5575f736cc50 <line:593:22>
| `-NonNullAttr 0x5575f736cca8 <col:63, col:77> 1
|-FunctionDecl 0x5575f736cdb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5575f736ccf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5575f736ce58 <line:595:22>
| `-NonNullAttr 0x5575f736ceb0 <col:52, col:66> 1
|-FunctionDecl 0x5575f736cfc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5575f736cf10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5575f736d070 <line:597:22>
| `-NonNullAttr 0x5575f736d0c8 <col:52, col:66> 1
|-FunctionDecl 0x5575f736d2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5575f736d118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5575f736d190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5575f736d3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5575f736d6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5575f736d428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5575f736d4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5575f736d530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5575f736d790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5575f736d9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5575f736d870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5575f736da50 <line:606:22>
| `-NonNullAttr 0x5575f736daa8 <col:63, col:77> 1
|-FunctionDecl 0x5575f736dbb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5575f736daf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5575f736dc58 <line:608:22>
| `-NonNullAttr 0x5575f736dcb0 <col:63, col:77> 1
|-FunctionDecl 0x5575f736df10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575f736dcf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5575f736dd78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5575f736dfc0 <line:612:22>
| `-NonNullAttr 0x5575f736e018 <col:63, col:80> 1 2
|-FunctionDecl 0x5575f736e228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5575f736e068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5575f736e0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5575f736e2d8 <col:37>
| `-NonNullAttr 0x5575f736e330 <col:78, col:92> 1
|-FunctionDecl 0x5575f736e548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5575f736e378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5575f736e420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5575f736e5f8 <line:618:22>
| `-NonNullAttr 0x5575f736e650 <col:63, col:80> 1 2
|-FunctionDecl 0x5575f736e818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5575f736e698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5575f736e710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5575f736e8c8 <line:621:22>
| `-NonNullAttr 0x5575f736e920 <col:63, col:77> 1
|-FunctionDecl 0x5575f736ebc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5575f736ea00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5575f736ea80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5575f736ec78 <line:623:22>
| `-NonNullAttr 0x5575f736ecd0 <col:63, col:77> 1
|-FunctionDecl 0x5575f736ee48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5575f736ed18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5575f736ef20 <line:625:22>
| `-NonNullAttr 0x5575f736ef78 <col:63, col:77> 1
|-FunctionDecl 0x5575f736f080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5575f736efc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5575f736f128 <line:627:22>
| `-NonNullAttr 0x5575f736f180 <col:52, col:66> 1
|-FunctionDecl 0x5575f736f280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5575f736f1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5575f736f328 <line:629:22>
| `-NonNullAttr 0x5575f736f380 <col:52, col:66> 1
|-FunctionDecl 0x5575f736f480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5575f736f3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5575f736f528 <line:631:22>
| `-NonNullAttr 0x5575f736f580 <col:52, col:66> 1
|-FunctionDecl 0x5575f736f958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5575f736f660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5575f736f770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5575f736f7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5575f736fa10 <line:635:22>
| `-NonNullAttr 0x5575f736fa68 <col:63, col:77> 1
|-FunctionDecl 0x5575f736fbe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5575f736fab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5575f736fc90 <line:637:22>
| `-NonNullAttr 0x5575f736fce8 <col:63, col:77> 1
|-FunctionDecl 0x5575f736fdf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5575f736fd38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5575f736fe98 <line:639:22>
| `-NonNullAttr 0x5575f736fef0 <col:52, col:66> 1
|-FunctionDecl 0x5575f73700e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5575f736ffb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5575f7370190 <line:641:22>
| `-NonNullAttr 0x5575f73701e8 <col:63, col:77> 1
|-FunctionDecl 0x5575f73702f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5575f7370238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5575f7370398 <line:643:22>
| `-NonNullAttr 0x5575f73703f0 <col:63, col:77> 1
|-FunctionDecl 0x5575f7370618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575f7370438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5575f73704b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5575f73706c8 <line:647:22>
| `-NonNullAttr 0x5575f7370720 <col:63, col:80> 1 2
|-FunctionDecl 0x5575f7370928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5575f7370768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5575f73707e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5575f73709d8 <line:650:22>
| `-NonNullAttr 0x5575f7370a30 <col:63, col:77> 1
|-FunctionDecl 0x5575f7370d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5575f7370b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5575f7370c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5575f7370e28 <line:653:22>
| `-NonNullAttr 0x5575f7370e80 <col:63, col:77> 1
|-FunctionDecl 0x5575f7370fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5575f7370ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5575f7371090 <col:69>
|-FunctionDecl 0x5575f7371208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5575f73710f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5575f73712b0 <col:72>
|-FunctionDecl 0x5575f73714e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5575f7371318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5575f73713c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5575f7371598 <col:44>
|-FunctionDecl 0x5575f73717b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5575f7371600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5575f7371678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5575f7371868 <line:660:22>
| `-NonNullAttr 0x5575f73718c0 <col:63, col:77> 2
|-FunctionDecl 0x5575f7371d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5575f73719a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5575f7371ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5575f7371bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5575f7371dc0 <col:47>
|-FunctionDecl 0x5575f7372f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5575f7371e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5575f73730b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5575f7373020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5575f7373210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5575f7373178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5575f73732d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5575f7373398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5575f7373458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5575f7373510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5575f7373590 prev 0x5575f7373510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5575f73735f8 <col:24> 'int' 0
|-VarDecl 0x5575f7373630 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5575f73736b0 prev 0x5575f7373630 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5575f7373718 <col:27> 'int' 0
|-VarDecl 0x5575f7373750 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5575f73737d0 prev 0x5575f7373750 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5575f7373838 <col:27> 'int' 0
|-VarDecl 0x5575f7373870 <line:677:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x5575f73738f0 prev 0x5575f7373870 <line:678:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x5575f7373958 <col:27> 'int' 0
|-VarDecl 0x5575f7373990 <line:679:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5575f7373a10 prev 0x5575f7373990 <line:680:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5575f7373a78 <col:27> 'int' 0
|-VarDecl 0x5575f7373ab0 <line:681:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x5575f7373b30 prev 0x5575f7373ab0 <line:682:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x5575f7373b98 <col:27> 'int' 0
|-VarDecl 0x5575f7373bd0 <line:683:1, col:5> col:5 used a 'int'
|-VarDecl 0x5575f7373c50 prev 0x5575f7373bd0 <line:684:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x5575f7373cb8 <col:9> 'int' 0
|-VarDecl 0x5575f7373cf0 <line:685:1, col:5> col:5 used b 'int'
|-VarDecl 0x5575f7373d70 prev 0x5575f7373cf0 <line:686:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x5575f7373dd8 <col:9> 'int' 0
|-VarDecl 0x5575f7373e08 <line:687:1, col:7> col:7 used b$flush_delayed '_Bool'
|-VarDecl 0x5575f7373e88 <line:688:1, col:5> col:5 used b$mem_tmp 'int'
|-VarDecl 0x5575f7373f70 <line:689:1, col:7> col:7 used b$r_buff0_thd0 '_Bool'
|-VarDecl 0x5575f7373fe8 <line:690:1, col:7> col:7 used b$r_buff0_thd1 '_Bool'
|-VarDecl 0x5575f7374060 <line:691:1, col:7> col:7 used b$r_buff0_thd2 '_Bool'
|-VarDecl 0x5575f73740d8 <line:692:1, col:7> col:7 used b$r_buff0_thd3 '_Bool'
|-VarDecl 0x5575f7374150 <line:693:1, col:7> col:7 used b$r_buff1_thd0 '_Bool'
|-VarDecl 0x5575f73741c8 <line:694:1, col:7> col:7 used b$r_buff1_thd1 '_Bool'
|-VarDecl 0x5575f7374240 <line:695:1, col:7> col:7 used b$r_buff1_thd2 '_Bool'
|-VarDecl 0x5575f73742b8 <line:696:1, col:7> col:7 used b$r_buff1_thd3 '_Bool'
|-VarDecl 0x5575f7374330 <line:697:1, col:7> col:7 b$read_delayed '_Bool'
|-VarDecl 0x5575f73743b0 <line:698:1, col:6> col:6 b$read_delayed_var 'int *'
|-VarDecl 0x5575f7374430 <line:699:1, col:5> col:5 used b$w_buff0 'int'
|-VarDecl 0x5575f73744a8 <line:700:1, col:7> col:7 used b$w_buff0_used '_Bool'
|-VarDecl 0x5575f7374528 <line:701:1, col:5> col:5 used b$w_buff1 'int'
|-VarDecl 0x5575f73745a0 <line:702:1, col:7> col:7 used b$w_buff1_used '_Bool'
|-VarDecl 0x5575f7374618 <line:703:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5575f7374690 <line:704:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5575f7374710 <line:705:1, col:5> col:5 used x 'int'
|-VarDecl 0x5575f7374790 prev 0x5575f7374710 <line:706:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5575f73747f8 <col:9> 'int' 0
|-VarDecl 0x5575f7374830 <line:707:1, col:5> col:5 used y 'int'
|-VarDecl 0x5575f73748b0 prev 0x5575f7374830 <line:708:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5575f7374918 <col:9> 'int' 0
|-VarDecl 0x5575f7374950 <line:709:1, col:5> col:5 used z 'int'
|-VarDecl 0x5575f73749d0 prev 0x5575f7374950 <line:710:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5575f7374a38 <col:9> 'int' 0
|-VarDecl 0x5575f7374a68 <line:711:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5575f7374ae0 <line:712:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5575f7374bf8 prev 0x5575f7372f60 <line:713:1, line:741:1> line:713:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5575f7374b60 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5575f7376448 <line:714:1, line:741:1>
|   |-CallExpr 0x5575f7374d08 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575f7374cf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f7374ca0 <col:3> 'void ()' Function 0x5575f731a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575f7374d80 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5575f7374d28 <col:3> 'int' lvalue Var 0x5575f7374528 'b$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5575f7374d68 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575f7374d48 <col:15> 'int' lvalue Var 0x5575f7374430 'b$w_buff0' 'int'
|   |-BinaryOperator 0x5575f7374de0 <line:717:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5575f7374da0 <col:3> 'int' lvalue Var 0x5575f7374430 'b$w_buff0' 'int'
|   | `-IntegerLiteral 0x5575f7374dc0 <col:15> 'int' 1
|   |-BinaryOperator 0x5575f7374e58 <line:718:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5575f7374e00 <col:3> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5575f7374e40 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575f7374e20 <col:20> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5575f7374ef0 <line:719:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5575f7374e78 <col:3> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5575f7374ec8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5575f7374e98 <col:27> 'int' 1
|   |-CallExpr 0x5575f7375088 <line:720:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5575f7375070 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5575f7374f10 <col:3> 'void (int)' Function 0x5575f731a0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5575f7375020 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5575f7375000 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5575f7374fe0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5575f7374f98 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5575f7374f80 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5575f7374f30 <col:23> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5575f7374fc8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5575f7374fb0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5575f7374f50 <col:41> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5575f7375108 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5575f73750b0 <col:3> '_Bool' lvalue Var 0x5575f7374150 'b$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5575f73750f0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575f73750d0 <col:20> '_Bool' lvalue Var 0x5575f7373f70 'b$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5575f7375180 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5575f7375128 <col:3> '_Bool' lvalue Var 0x5575f73741c8 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5575f7375168 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575f7375148 <col:20> '_Bool' lvalue Var 0x5575f7373fe8 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5575f73751f8 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5575f73751a0 <col:3> '_Bool' lvalue Var 0x5575f7374240 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5575f73751e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575f73751c0 <col:20> '_Bool' lvalue Var 0x5575f7374060 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5575f7375270 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5575f7375218 <col:3> '_Bool' lvalue Var 0x5575f73742b8 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5575f7375258 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575f7375238 <col:20> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5575f7375308 <line:725:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5575f7375290 <col:3> '_Bool' lvalue Var 0x5575f7373fe8 'b$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x5575f73752e0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5575f73752b0 <col:27> 'int' 1
|   |-CallExpr 0x5575f7375360 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575f7375348 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f7375328 <col:3> 'void ()' Function 0x5575f731a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575f73753b8 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575f73753a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f7375380 <col:3> 'void ()' Function 0x5575f731a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575f7375430 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5575f73753d8 <col:3> 'int' lvalue Var 0x5575f73736b0 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5575f7375418 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575f73753f8 <col:25> 'int' lvalue Var 0x5575f7374790 'x' 'int'
|   |-CallExpr 0x5575f7375488 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575f7375470 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f7375450 <col:3> 'void ()' Function 0x5575f731a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575f73754e0 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575f73754c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f73754a8 <col:3> 'void ()' Function 0x5575f731a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575f73757c8 <line:731:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5575f7375500 <col:3> 'int' lvalue Var 0x5575f7373d70 'b' 'int'
|   | `-ConditionalOperator 0x5575f7375798 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5575f73755c0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5575f7375578 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5575f7375560 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5575f7375520 <col:7> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5575f73755a8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5575f7375590 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5575f7375540 <col:25> '_Bool' lvalue Var 0x5575f7373fe8 'b$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5575f7375780 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575f73755e0 <col:42> 'int' lvalue Var 0x5575f7374430 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x5575f7375760 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5575f7375730 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5575f73756a0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5575f7375658 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5575f7375640 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5575f7375600 <col:55> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5575f7375688 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5575f7375670 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5575f7375620 <col:73> '_Bool' lvalue Var 0x5575f73741c8 'b$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5575f7375700 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5575f73756c0 <col:90> 'int' lvalue Var 0x5575f7374528 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5575f7375718 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575f73756e0 <col:102> 'int' lvalue Var 0x5575f7373d70 'b' 'int'
|   |-BinaryOperator 0x5575f73759d0 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5575f73757e8 <col:3> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5575f73759b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575f7375988 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5575f73758a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5575f7375860 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5575f7375848 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5575f7375808 <col:20> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5575f7375890 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5575f7375878 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5575f7375828 <col:38> '_Bool' lvalue Var 0x5575f7373fe8 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5575f7375940 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575f73758f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575f73758c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5575f7375970 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575f7375958 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575f7375920 <col:66> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5575f7375cb8 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5575f73759f0 <col:3> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5575f7375ca0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575f7375c70 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5575f7375b90 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5575f7375ab0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5575f7375a68 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5575f7375a50 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5575f7375a10 <col:20> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5575f7375a98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5575f7375a80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5575f7375a30 <col:38> '_Bool' lvalue Var 0x5575f7373fe8 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5575f7375b70 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5575f7375b28 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5575f7375b10 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5575f7375ad0 <col:56> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5575f7375b58 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5575f7375b40 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5575f7375af0 <col:74> '_Bool' lvalue Var 0x5575f73741c8 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5575f7375c28 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575f7375be0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575f7375bb0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5575f7375c58 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575f7375c40 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575f7375c08 <col:102> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5575f7375ec0 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5575f7375cd8 <col:3> '_Bool' lvalue Var 0x5575f7373fe8 'b$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5575f7375ea8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575f7375e78 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5575f7375d98 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5575f7375d50 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5575f7375d38 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5575f7375cf8 <col:20> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5575f7375d80 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5575f7375d68 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5575f7375d18 <col:38> '_Bool' lvalue Var 0x5575f7373fe8 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5575f7375e30 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575f7375de8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575f7375db8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5575f7375e60 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575f7375e48 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575f7375e10 <col:66> '_Bool' lvalue Var 0x5575f7373fe8 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5575f73761c8 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5575f7375ee0 <col:3> '_Bool' lvalue Var 0x5575f73741c8 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5575f73761b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575f7376180 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5575f73760a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5575f7375fc0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5575f7375f58 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5575f7375f40 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5575f7375f00 <col:20> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5575f7375fa8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5575f7375f90 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5575f7375f20 <col:38> '_Bool' lvalue Var 0x5575f7373fe8 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5575f7376080 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5575f7376038 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5575f7376020 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5575f7375fe0 <col:56> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5575f7376068 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5575f7376050 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5575f7376000 <col:74> '_Bool' lvalue Var 0x5575f73741c8 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5575f7376138 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575f73760f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575f73760c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5575f7376168 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575f7376150 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575f7376118 <col:102> '_Bool' lvalue Var 0x5575f73741c8 'b$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5575f7376220 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575f7376208 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f73761e8 <col:3> 'void ()' Function 0x5575f731a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575f7376278 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575f7376260 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f7376240 <col:3> 'void ()' Function 0x5575f731a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575f7376330 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5575f7376298 <col:3> 'int' lvalue Var 0x5575f7373590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5575f7376310 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5575f73762f8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575f73762b8 <col:22> 'int' lvalue Var 0x5575f7373590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5575f73762d8 <col:41> 'int' 1
|   |-CallExpr 0x5575f7376388 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575f7376370 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f7376350 <col:3> 'void ()' Function 0x5575f731a410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5575f7376438 <line:740:3, col:36>
|     `-CallExpr 0x5575f7376418 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5575f7376400 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5575f73763a8 <col:10> 'void *(void)' Function 0x5575f7319e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5575f73765d8 prev 0x5575f73730b8 <line:742:1, line:767:1> line:742:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5575f7376540 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5575f7377a50 <line:743:1, line:767:1>
|   |-CallExpr 0x5575f73766b8 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575f73766a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f7376680 <col:3> 'void ()' Function 0x5575f731a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575f7376718 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5575f73766d8 <col:3> 'int' lvalue Var 0x5575f7374790 'x' 'int'
|   | `-IntegerLiteral 0x5575f73766f8 <col:7> 'int' 1
|   |-CallExpr 0x5575f7376770 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575f7376758 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f7376738 <col:3> 'void ()' Function 0x5575f731a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575f73767c8 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575f73767b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f7376790 <col:3> 'void ()' Function 0x5575f731a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575f7376828 <line:748:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5575f73767e8 <col:3> 'int' lvalue Var 0x5575f73748b0 'y' 'int'
|   | `-IntegerLiteral 0x5575f7376808 <col:7> 'int' 1
|   |-CallExpr 0x5575f7376880 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575f7376868 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f7376848 <col:3> 'void ()' Function 0x5575f731a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575f73768d8 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575f73768c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f73768a0 <col:3> 'void ()' Function 0x5575f731a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575f7376950 <line:751:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5575f73768f8 <col:3> 'int' lvalue Var 0x5575f73737d0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5575f7376938 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575f7376918 <col:25> 'int' lvalue Var 0x5575f73748b0 'y' 'int'
|   |-CallExpr 0x5575f73769a8 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575f7376990 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f7376970 <col:3> 'void ()' Function 0x5575f731a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575f7376a00 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575f73769e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f73769c8 <col:3> 'void ()' Function 0x5575f731a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575f7376a78 <line:754:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5575f7376a20 <col:3> 'int' lvalue Var 0x5575f73738f0 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x5575f7376a60 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575f7376a40 <col:25> 'int' lvalue Var 0x5575f73749d0 'z' 'int'
|   |-CallExpr 0x5575f7376ad0 <line:755:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575f7376ab8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f7376a98 <col:3> 'void ()' Function 0x5575f731a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575f7376b28 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575f7376b10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f7376af0 <col:3> 'void ()' Function 0x5575f731a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575f7376e10 <line:757:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5575f7376b48 <col:3> 'int' lvalue Var 0x5575f7373d70 'b' 'int'
|   | `-ConditionalOperator 0x5575f7376de0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5575f7376c08 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5575f7376bc0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5575f7376ba8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5575f7376b68 <col:7> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5575f7376bf0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5575f7376bd8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5575f7376b88 <col:25> '_Bool' lvalue Var 0x5575f7374060 'b$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5575f7376dc8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575f7376c28 <col:42> 'int' lvalue Var 0x5575f7374430 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x5575f7376da8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5575f7376d78 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5575f7376ce8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5575f7376ca0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5575f7376c88 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5575f7376c48 <col:55> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5575f7376cd0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5575f7376cb8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5575f7376c68 <col:73> '_Bool' lvalue Var 0x5575f7374240 'b$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5575f7376d48 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5575f7376d08 <col:90> 'int' lvalue Var 0x5575f7374528 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5575f7376d60 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575f7376d28 <col:102> 'int' lvalue Var 0x5575f7373d70 'b' 'int'
|   |-BinaryOperator 0x5575f7377030 <line:758:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5575f7376e30 <col:3> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5575f7377018 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575f7376fe8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5575f7376ef0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5575f7376ea8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5575f7376e90 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5575f7376e50 <col:20> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5575f7376ed8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5575f7376ec0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5575f7376e70 <col:38> '_Bool' lvalue Var 0x5575f7374060 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575f7376fa0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575f7376f40 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575f7376f10 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5575f7376fd0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575f7376fb8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575f7376f68 <col:66> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5575f7377318 <line:759:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5575f7377050 <col:3> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5575f7377300 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575f73772d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5575f73771f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5575f7377110 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5575f73770c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5575f73770b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5575f7377070 <col:20> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5575f73770f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5575f73770e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5575f7377090 <col:38> '_Bool' lvalue Var 0x5575f7374060 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5575f73771d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5575f7377188 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5575f7377170 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5575f7377130 <col:56> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5575f73771b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5575f73771a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5575f7377150 <col:74> '_Bool' lvalue Var 0x5575f7374240 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575f7377288 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575f7377240 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575f7377210 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5575f73772b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575f73772a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575f7377268 <col:102> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5575f7377520 <line:760:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5575f7377338 <col:3> '_Bool' lvalue Var 0x5575f7374060 'b$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5575f7377508 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575f73774d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5575f73773f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5575f73773b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5575f7377398 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5575f7377358 <col:20> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5575f73773e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5575f73773c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5575f7377378 <col:38> '_Bool' lvalue Var 0x5575f7374060 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575f7377490 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575f7377448 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575f7377418 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5575f73774c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575f73774a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575f7377470 <col:66> '_Bool' lvalue Var 0x5575f7374060 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5575f7377808 <line:761:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5575f7377540 <col:3> '_Bool' lvalue Var 0x5575f7374240 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5575f73777f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575f73777c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5575f73776e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5575f7377600 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5575f73775b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5575f73775a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5575f7377560 <col:20> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5575f73775e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5575f73775d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5575f7377580 <col:38> '_Bool' lvalue Var 0x5575f7374060 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5575f73776c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5575f7377678 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5575f7377660 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5575f7377620 <col:56> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5575f73776a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5575f7377690 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5575f7377640 <col:74> '_Bool' lvalue Var 0x5575f7374240 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575f7377778 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575f7377730 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575f7377700 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5575f73777a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575f7377790 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575f7377758 <col:102> '_Bool' lvalue Var 0x5575f7374240 'b$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5575f7377860 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575f7377848 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f7377828 <col:3> 'void ()' Function 0x5575f731a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575f73778b8 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575f73778a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f7377880 <col:3> 'void ()' Function 0x5575f731a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575f7377970 <line:764:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5575f73778d8 <col:3> 'int' lvalue Var 0x5575f7373590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5575f7377950 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5575f7377938 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575f73778f8 <col:22> 'int' lvalue Var 0x5575f7373590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5575f7377918 <col:41> 'int' 1
|   |-CallExpr 0x5575f73779c8 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575f73779b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f7377990 <col:3> 'void ()' Function 0x5575f731a410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5575f7377a40 <line:766:3, col:36>
|     `-CallExpr 0x5575f7377a20 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5575f7377a08 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5575f73779e8 <col:10> 'void *(void)' Function 0x5575f7319e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5575f7377bc8 prev 0x5575f7373210 <line:768:1, line:806:1> line:768:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5575f7377b30 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5575f737b9c0 <line:769:1, line:806:1>
|   |-CallExpr 0x5575f7377ca8 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575f7377c90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f7377c70 <col:3> 'void ()' Function 0x5575f731a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575f7377d08 <line:771:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5575f7377cc8 <col:3> 'int' lvalue Var 0x5575f73749d0 'z' 'int'
|   | `-IntegerLiteral 0x5575f7377ce8 <col:7> 'int' 1
|   |-CallExpr 0x5575f7377d60 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575f7377d48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f7377d28 <col:3> 'void ()' Function 0x5575f731a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575f7377db8 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575f7377da0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f7377d80 <col:3> 'void ()' Function 0x5575f731a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575f7377e18 <line:774:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5575f7377dd8 <col:3> 'int' lvalue Var 0x5575f7373c50 'a' 'int'
|   | `-IntegerLiteral 0x5575f7377df8 <col:7> 'int' 1
|   |-CallExpr 0x5575f7377e70 <line:775:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575f7377e58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f7377e38 <col:3> 'void ()' Function 0x5575f731a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575f7377ec8 <line:776:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575f7377eb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f7377e90 <col:3> 'void ()' Function 0x5575f731a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575f7377f40 <line:777:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5575f7377ee8 <col:3> 'int' lvalue Var 0x5575f7373a10 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5575f7377f28 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575f7377f08 <col:25> 'int' lvalue Var 0x5575f7373c50 'a' 'int'
|   |-CallExpr 0x5575f7377fb0 <line:778:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575f7377f80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f7377f60 <col:3> 'void ()' Function 0x5575f731a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575f7378008 <line:779:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575f7377ff0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f7377fd0 <col:3> 'void ()' Function 0x5575f731a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575f73780b8 <line:780:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5575f7378028 <col:3> '_Bool' lvalue Var 0x5575f7374a68 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5575f73780a0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5575f7378080 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5575f7378068 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5575f7378048 <col:19> 'void *(void)' Function 0x5575f7319e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5575f7378168 <line:781:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5575f73780d8 <col:3> '_Bool' lvalue Var 0x5575f7374ae0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5575f7378150 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5575f7378130 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5575f7378118 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5575f73780f8 <col:19> 'void *(void)' Function 0x5575f7319e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5575f73781e0 <line:782:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5575f7378188 <col:3> '_Bool' lvalue Var 0x5575f7373e08 'b$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5575f73781c8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575f73781a8 <col:21> '_Bool' lvalue Var 0x5575f7374ae0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5575f7378258 <line:783:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5575f7378200 <col:3> 'int' lvalue Var 0x5575f7373e88 'b$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5575f7378240 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575f7378220 <col:15> 'int' lvalue Var 0x5575f7373d70 'b' 'int'
|   |-BinaryOperator 0x5575f7378690 <line:784:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5575f7378278 <col:3> 'int' lvalue Var 0x5575f7373d70 'b' 'int'
|   | `-ConditionalOperator 0x5575f7378660 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5575f7378488 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5575f73783a8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5575f73782d0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5575f73782b8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5575f7378298 <col:8> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5575f7378388 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5575f7378320 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5575f7378308 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5575f73782e8 <col:27> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x5575f7378370 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5575f7378358 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5575f7378338 <col:46> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5575f7378468 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5575f7378400 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5575f73783e8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5575f73783c8 <col:65> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x5575f7378450 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5575f7378438 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5575f7378418 <col:84> '_Bool' lvalue Var 0x5575f73742b8 'b$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5575f7378648 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575f73784a8 <col:101> 'int' lvalue Var 0x5575f7373d70 'b' 'int'
|   |   `-ParenExpr 0x5575f7378628 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5575f73785f8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5575f7378568 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5575f7378520 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5575f7378508 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5575f73784c8 <col:106> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5575f7378550 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5575f7378538 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5575f73784e8 <col:124> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5575f73785c8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5575f7378588 <col:141> 'int' lvalue Var 0x5575f7374430 'b$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5575f73785e0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575f73785a8 <col:153> 'int' lvalue Var 0x5575f7374528 'b$w_buff1' 'int'
|   |-BinaryOperator 0x5575f7378ba0 <line:785:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5575f73786b0 <col:3> 'int' lvalue Var 0x5575f7374430 'b$w_buff0' 'int'
|   | `-ConditionalOperator 0x5575f7378b70 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5575f7378b40 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5575f7378b28 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5575f73786d0 <col:15> '_Bool' lvalue Var 0x5575f7374ae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5575f7378b58 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575f73786f0 <col:31> 'int' lvalue Var 0x5575f7374430 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x5575f7378b08 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5575f7378ad8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5575f7378900 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5575f7378820 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5575f7378748 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5575f7378730 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5575f7378710 <col:45> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5575f7378800 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5575f7378798 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5575f7378780 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5575f7378760 <col:64> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5575f73787e8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5575f73787d0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5575f73787b0 <col:83> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5575f73788e0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5575f7378878 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5575f7378860 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5575f7378840 <col:102> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5575f73788c8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5575f73788b0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5575f7378890 <col:121> '_Bool' lvalue Var 0x5575f73742b8 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5575f7378ac0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5575f7378920 <col:138> 'int' lvalue Var 0x5575f7374430 'b$w_buff0' 'int'
|   |       `-ParenExpr 0x5575f7378aa0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5575f7378a70 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5575f73789e0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5575f7378998 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5575f7378980 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5575f7378940 <col:151> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5575f73789c8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5575f73789b0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5575f7378960 <col:169> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5575f7378a40 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5575f7378a00 <col:186> 'int' lvalue Var 0x5575f7374430 'b$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5575f7378a58 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5575f7378a20 <col:198> 'int' lvalue Var 0x5575f7374430 'b$w_buff0' 'int'
|   |-BinaryOperator 0x5575f73790c0 <line:786:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5575f7378bc0 <col:3> 'int' lvalue Var 0x5575f7374528 'b$w_buff1' 'int'
|   | `-ConditionalOperator 0x5575f7379090 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5575f7379060 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5575f7379048 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5575f7378be0 <col:15> '_Bool' lvalue Var 0x5575f7374ae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5575f7379078 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575f7378c00 <col:31> 'int' lvalue Var 0x5575f7374528 'b$w_buff1' 'int'
|   |   `-ParenExpr 0x5575f7379028 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5575f7378ff8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5575f7378e10 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5575f7378d30 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5575f7378c58 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5575f7378c40 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5575f7378c20 <col:45> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5575f7378d10 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5575f7378ca8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5575f7378c90 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5575f7378c70 <col:64> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5575f7378cf8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5575f7378ce0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5575f7378cc0 <col:83> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5575f7378df0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5575f7378d88 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5575f7378d70 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5575f7378d50 <col:102> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5575f7378dd8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5575f7378dc0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5575f7378da0 <col:121> '_Bool' lvalue Var 0x5575f73742b8 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5575f7378fe0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5575f7378e30 <col:138> 'int' lvalue Var 0x5575f7374528 'b$w_buff1' 'int'
|   |       `-ParenExpr 0x5575f7378fc0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5575f7378f80 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5575f7378ef0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5575f7378ea8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5575f7378e90 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5575f7378e50 <col:151> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5575f7378ed8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5575f7378ec0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5575f7378e70 <col:169> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5575f7378f50 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5575f7378f10 <col:186> 'int' lvalue Var 0x5575f7374528 'b$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5575f7378f68 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5575f7378f30 <col:198> 'int' lvalue Var 0x5575f7374528 'b$w_buff1' 'int'
|   |-BinaryOperator 0x5575f7379668 <line:787:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5575f73790e0 <col:3> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5575f7379650 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575f7379620 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5575f73795d8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575f73795c0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575f7379100 <col:20> '_Bool' lvalue Var 0x5575f7374ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575f7379608 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575f73795f0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575f7379120 <col:36> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5575f73795a0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5575f7379570 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5575f7379330 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5575f7379250 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5575f7379178 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5575f7379160 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5575f7379140 <col:55> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5575f7379230 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5575f73791c8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5575f73791b0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5575f7379190 <col:74> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5575f7379218 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5575f7379200 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5575f73791e0 <col:93> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5575f7379310 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5575f73792a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5575f7379290 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5575f7379270 <col:112> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5575f73792f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5575f73792e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5575f73792c0 <col:131> '_Bool' lvalue Var 0x5575f73742b8 'b$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5575f7379558 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5575f7379540 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5575f7379350 <col:148> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5575f7379520 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5575f73794f0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5575f7379410 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5575f73793c8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5575f73793b0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5575f7379370 <col:166> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5575f73793f8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5575f73793e0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5575f7379390 <col:184> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5575f73794a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5575f7379460 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5575f7379430 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5575f73794d8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5575f73794c0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5575f7379488 <col:212> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5575f7379c30 <line:788:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5575f7379688 <col:3> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5575f7379c18 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575f7379be8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5575f7379ba0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575f7379b88 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575f73796a8 <col:20> '_Bool' lvalue Var 0x5575f7374ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575f7379bd0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575f7379bb8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575f73796c8 <col:36> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5575f7379b68 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5575f7379b38 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5575f73798d8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5575f73797f8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5575f7379720 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5575f7379708 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5575f73796e8 <col:55> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5575f73797d8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5575f7379770 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5575f7379758 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5575f7379738 <col:74> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5575f73797c0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5575f73797a8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5575f7379788 <col:93> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5575f73798b8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5575f7379850 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5575f7379838 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5575f7379818 <col:112> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5575f73798a0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5575f7379888 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5575f7379868 <col:131> '_Bool' lvalue Var 0x5575f73742b8 'b$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5575f7379b20 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5575f7379b08 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5575f73798f8 <col:148> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5575f7379ae8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5575f7379ab8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5575f73799b8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5575f7379970 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5575f7379958 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5575f7379918 <col:166> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5575f73799a0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5575f7379988 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5575f7379938 <col:184> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5575f7379a88 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5575f7379a08 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5575f73799d8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5575f7379aa0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5575f7379a60 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5575f7379a30 <col:219> 'int' 0
|   |-BinaryOperator 0x5575f737a1e8 <line:789:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5575f7379c50 <col:3> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5575f737a1d0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575f737a1a0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5575f737a158 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575f737a140 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575f7379c70 <col:20> '_Bool' lvalue Var 0x5575f7374ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575f737a188 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575f737a170 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575f7379c90 <col:36> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x5575f737a120 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5575f737a0f0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5575f7379ea0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5575f7379dc0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5575f7379ce8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5575f7379cd0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5575f7379cb0 <col:55> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5575f7379da0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5575f7379d38 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5575f7379d20 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5575f7379d00 <col:74> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5575f7379d88 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5575f7379d70 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5575f7379d50 <col:93> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5575f7379e80 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5575f7379e18 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5575f7379e00 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5575f7379de0 <col:112> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5575f7379e68 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5575f7379e50 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5575f7379e30 <col:131> '_Bool' lvalue Var 0x5575f73742b8 'b$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5575f737a0d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5575f737a0c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5575f7379ec0 <col:148> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x5575f737a0a0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5575f737a070 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5575f7379f80 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5575f7379f38 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5575f7379f20 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5575f7379ee0 <col:166> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5575f7379f68 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5575f7379f50 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5575f7379f00 <col:184> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5575f737a028 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5575f7379fe0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5575f7379fa0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5575f737a058 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5575f737a040 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5575f737a008 <col:212> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5575f737a7b0 <line:790:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5575f737a208 <col:3> '_Bool' lvalue Var 0x5575f73742b8 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5575f737a798 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575f737a768 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5575f737a720 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575f737a708 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575f737a228 <col:20> '_Bool' lvalue Var 0x5575f7374ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575f737a750 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575f737a738 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575f737a248 <col:36> '_Bool' lvalue Var 0x5575f73742b8 'b$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x5575f737a6e8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5575f737a6b8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5575f737a458 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5575f737a378 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5575f737a2a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5575f737a288 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5575f737a268 <col:55> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5575f737a358 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5575f737a2f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5575f737a2d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5575f737a2b8 <col:74> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5575f737a340 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5575f737a328 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5575f737a308 <col:93> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5575f737a438 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5575f737a3d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5575f737a3b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5575f737a398 <col:112> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5575f737a420 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5575f737a408 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5575f737a3e8 <col:131> '_Bool' lvalue Var 0x5575f73742b8 'b$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5575f737a6a0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5575f737a688 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5575f737a478 <col:148> '_Bool' lvalue Var 0x5575f73742b8 'b$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x5575f737a668 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5575f737a638 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5575f737a538 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5575f737a4f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5575f737a4d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5575f737a498 <col:166> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5575f737a520 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5575f737a508 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5575f737a4b8 <col:184> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5575f737a608 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5575f737a588 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5575f737a558 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5575f737a620 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5575f737a5e0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5575f737a5b0 <col:219> 'int' 0
|   |-BinaryOperator 0x5575f737a828 <line:791:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5575f737a7d0 <col:3> 'int' lvalue Var 0x5575f7373b30 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x5575f737a810 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575f737a7f0 <col:25> 'int' lvalue Var 0x5575f7373d70 'b' 'int'
|   |-BinaryOperator 0x5575f737a958 <line:792:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5575f737a848 <col:3> 'int' lvalue Var 0x5575f7373d70 'b' 'int'
|   | `-ConditionalOperator 0x5575f737a928 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5575f737a8e0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5575f737a8c8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5575f737a868 <col:7> '_Bool' lvalue Var 0x5575f7373e08 'b$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5575f737a8f8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575f737a888 <col:25> 'int' lvalue Var 0x5575f7373e88 'b$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5575f737a910 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5575f737a8a8 <col:37> 'int' lvalue Var 0x5575f7373d70 'b' 'int'
|   |-BinaryOperator 0x5575f737a9f0 <line:793:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5575f737a978 <col:3> '_Bool' lvalue Var 0x5575f7373e08 'b$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5575f737a9c8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5575f737a998 <col:28> 'int' 0
|   |-CallExpr 0x5575f737aa48 <line:794:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575f737aa30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f737aa10 <col:3> 'void ()' Function 0x5575f731a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575f737aaa0 <line:795:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575f737aa88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f737aa68 <col:3> 'void ()' Function 0x5575f731a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575f737ad88 <line:796:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5575f737aac0 <col:3> 'int' lvalue Var 0x5575f7373d70 'b' 'int'
|   | `-ConditionalOperator 0x5575f737ad58 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5575f737ab80 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5575f737ab38 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5575f737ab20 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5575f737aae0 <col:7> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5575f737ab68 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5575f737ab50 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5575f737ab00 <col:25> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5575f737ad40 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575f737aba0 <col:42> 'int' lvalue Var 0x5575f7374430 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x5575f737ad20 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5575f737acf0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5575f737ac60 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5575f737ac18 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5575f737ac00 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5575f737abc0 <col:55> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5575f737ac48 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5575f737ac30 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5575f737abe0 <col:73> '_Bool' lvalue Var 0x5575f73742b8 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5575f737acc0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5575f737ac80 <col:90> 'int' lvalue Var 0x5575f7374528 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5575f737acd8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575f737aca0 <col:102> 'int' lvalue Var 0x5575f7373d70 'b' 'int'
|   |-BinaryOperator 0x5575f737af90 <line:797:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5575f737ada8 <col:3> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5575f737af78 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575f737af48 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5575f737ae68 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5575f737ae20 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5575f737ae08 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5575f737adc8 <col:20> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5575f737ae50 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5575f737ae38 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5575f737ade8 <col:38> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5575f737af00 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575f737aeb8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575f737ae88 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5575f737af30 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575f737af18 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575f737aee0 <col:66> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5575f737b288 <line:798:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5575f737afb0 <col:3> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5575f737b270 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575f737b240 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5575f737b160 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5575f737b080 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5575f737b038 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5575f737b020 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5575f737afe0 <col:20> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5575f737b068 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5575f737b050 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5575f737b000 <col:38> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5575f737b140 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5575f737b0f8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5575f737b0e0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5575f737b0a0 <col:56> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5575f737b128 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5575f737b110 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5575f737b0c0 <col:74> '_Bool' lvalue Var 0x5575f73742b8 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5575f737b1f8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575f737b1b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575f737b180 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5575f737b228 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575f737b210 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575f737b1d8 <col:102> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5575f737b490 <line:799:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5575f737b2a8 <col:3> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5575f737b478 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575f737b448 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5575f737b368 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5575f737b320 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5575f737b308 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5575f737b2c8 <col:20> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5575f737b350 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5575f737b338 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5575f737b2e8 <col:38> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5575f737b400 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575f737b3b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575f737b388 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5575f737b430 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575f737b418 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575f737b3e0 <col:66> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5575f737b778 <line:800:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5575f737b4b0 <col:3> '_Bool' lvalue Var 0x5575f73742b8 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5575f737b760 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575f737b730 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5575f737b650 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5575f737b570 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5575f737b528 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5575f737b510 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5575f737b4d0 <col:20> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5575f737b558 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5575f737b540 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5575f737b4f0 <col:38> '_Bool' lvalue Var 0x5575f73740d8 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5575f737b630 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5575f737b5e8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5575f737b5d0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5575f737b590 <col:56> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5575f737b618 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5575f737b600 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5575f737b5b0 <col:74> '_Bool' lvalue Var 0x5575f73742b8 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5575f737b6e8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575f737b6a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575f737b670 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5575f737b718 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575f737b700 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575f737b6c8 <col:102> '_Bool' lvalue Var 0x5575f73742b8 'b$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5575f737b7d0 <line:801:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575f737b7b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f737b798 <col:3> 'void ()' Function 0x5575f731a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575f737b828 <line:802:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575f737b810 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f737b7f0 <col:3> 'void ()' Function 0x5575f731a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575f737b8e0 <line:803:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5575f737b848 <col:3> 'int' lvalue Var 0x5575f7373590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5575f737b8c0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5575f737b8a8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575f737b868 <col:22> 'int' lvalue Var 0x5575f7373590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5575f737b888 <col:41> 'int' 1
|   |-CallExpr 0x5575f737b938 <line:804:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575f737b920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575f737b900 <col:3> 'void ()' Function 0x5575f731a410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5575f737b9b0 <line:805:3, col:36>
|     `-CallExpr 0x5575f737b990 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5575f737b978 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5575f737b958 <col:10> 'void *(void)' Function 0x5575f7319e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5575f737bb10 prev 0x5575f73732d8 <line:807:1, line:809:1> line:807:6 fence 'void ()'
| `-CompoundStmt 0x5575f737bbb0 <line:808:1, line:809:1>
|-FunctionDecl 0x5575f737bbe0 prev 0x5575f7373398 <line:810:1, line:812:1> line:810:6 isync 'void ()'
| `-CompoundStmt 0x5575f737bc80 <line:811:1, line:812:1>
|-FunctionDecl 0x5575f737bcb0 prev 0x5575f7373458 <line:813:1, line:815:1> line:813:6 lwfence 'void ()'
| `-CompoundStmt 0x5575f737bd50 <line:814:1, line:815:1>
`-FunctionDecl 0x5575f737bdb8 <line:816:1, line:840:1> line:816:5 main 'int ()'
  `-CompoundStmt 0x5575f737db38 <line:817:1, line:840:1>
    |-DeclStmt 0x5575f737bed0 <line:818:3, col:17>
    | `-VarDecl 0x5575f737be68 <col:3, col:13> col:13 used t863 'pthread_t':'unsigned long'
    |-CallExpr 0x5575f737c0e8 <line:819:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5575f737c0d0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5575f737bee8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5575f735a8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5575f737bf28 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5575f737bf08 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5575f737be68 't863' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5575f737c128 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5575f737bfa0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5575f737bf78 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5575f737bf40 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5575f737c140 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5575f737bfc0 <col:38> 'void *(void *)' Function 0x5575f7374bf8 'P0' 'void *(void *)'
    | `-ParenExpr 0x5575f737c050 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5575f737c028 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5575f737bff0 <col:51> 'int' 0
    |-DeclStmt 0x5575f737c1d0 <line:820:3, col:17>
    | `-VarDecl 0x5575f737c168 <col:3, col:13> col:13 used t864 'pthread_t':'unsigned long'
    |-CallExpr 0x5575f737c378 <line:821:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5575f737c360 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5575f737c1e8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5575f735a8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5575f737c228 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5575f737c208 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5575f737c168 't864' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5575f737c3b8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5575f737c2a0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5575f737c278 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5575f737c240 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5575f737c3d0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5575f737c2c0 <col:38> 'void *(void *)' Function 0x5575f73765d8 'P1' 'void *(void *)'
    | `-ParenExpr 0x5575f737c340 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5575f737c318 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5575f737c2e0 <col:51> 'int' 0
    |-DeclStmt 0x5575f737c460 <line:822:3, col:17>
    | `-VarDecl 0x5575f737c3f8 <col:3, col:13> col:13 used t865 'pthread_t':'unsigned long'
    |-CallExpr 0x5575f737c608 <line:823:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5575f737c5f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5575f737c478 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5575f735a8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5575f737c4b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5575f737c498 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5575f737c3f8 't865' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5575f737c648 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5575f737c530 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5575f737c508 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5575f737c4d0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5575f737c660 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5575f737c550 <col:38> 'void *(void *)' Function 0x5575f7377bc8 'P2' 'void *(void *)'
    | `-ParenExpr 0x5575f737c5d0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5575f737c5a8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5575f737c570 <col:51> 'int' 0
    |-CallExpr 0x5575f737c6b0 <line:824:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5575f737c698 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5575f737c678 <col:3> 'void ()' Function 0x5575f731a350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5575f737c780 <line:825:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5575f737c6d0 <col:3> '_Bool' lvalue Var 0x5575f7374618 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5575f737c768 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5575f737c748 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5575f737c730 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5575f737c6f0 <col:21> 'int' lvalue Var 0x5575f7373590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5575f737c710 <col:41> 'int' 3
    |-CallExpr 0x5575f737c7d8 <line:826:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5575f737c7c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5575f737c7a0 <col:3> 'void ()' Function 0x5575f731a410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5575f737c850 <line:827:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5575f737c838 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5575f737c7f8 <col:3> 'void (int)' Function 0x5575f7319ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5575f737c890 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5575f737c878 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5575f737c818 <col:21> '_Bool' lvalue Var 0x5575f7374618 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5575f737c8e0 <line:828:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5575f737c8c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5575f737c8a8 <col:3> 'void ()' Function 0x5575f731a350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5575f737cbc8 <line:829:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5575f737c900 <col:3> 'int' lvalue Var 0x5575f7373d70 'b' 'int'
    | `-ConditionalOperator 0x5575f737cb98 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5575f737c9c0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5575f737c978 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5575f737c960 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5575f737c920 <col:7> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5575f737c9a8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5575f737c990 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5575f737c940 <col:25> '_Bool' lvalue Var 0x5575f7373f70 'b$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5575f737cb80 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5575f737c9e0 <col:42> 'int' lvalue Var 0x5575f7374430 'b$w_buff0' 'int'
    |   `-ParenExpr 0x5575f737cb60 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5575f737cb30 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5575f737caa0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5575f737ca58 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5575f737ca40 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5575f737ca00 <col:55> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5575f737ca88 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5575f737ca70 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5575f737ca20 <col:73> '_Bool' lvalue Var 0x5575f7374150 'b$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5575f737cb00 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5575f737cac0 <col:90> 'int' lvalue Var 0x5575f7374528 'b$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5575f737cb18 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5575f737cae0 <col:102> 'int' lvalue Var 0x5575f7373d70 'b' 'int'
    |-BinaryOperator 0x5575f737cdd0 <line:830:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5575f737cbe8 <col:3> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5575f737cdb8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5575f737cd88 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5575f737cca8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5575f737cc60 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5575f737cc48 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5575f737cc08 <col:20> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5575f737cc90 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5575f737cc78 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5575f737cc28 <col:38> '_Bool' lvalue Var 0x5575f7373f70 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5575f737cd40 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5575f737ccf8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5575f737ccc8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5575f737cd70 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5575f737cd58 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5575f737cd20 <col:66> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5575f737d0d8 <line:831:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5575f737cdf0 <col:3> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5575f737d0c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5575f737d090 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5575f737cf90 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5575f737ceb0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5575f737ce68 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5575f737ce50 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5575f737ce10 <col:20> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5575f737ce98 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5575f737ce80 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5575f737ce30 <col:38> '_Bool' lvalue Var 0x5575f7373f70 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5575f737cf70 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5575f737cf28 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5575f737cf10 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5575f737ced0 <col:56> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5575f737cf58 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5575f737cf40 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5575f737cef0 <col:74> '_Bool' lvalue Var 0x5575f7374150 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5575f737d048 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5575f737d000 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5575f737cfb0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5575f737d078 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5575f737d060 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5575f737d028 <col:102> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5575f737d2e0 <line:832:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5575f737d0f8 <col:3> '_Bool' lvalue Var 0x5575f7373f70 'b$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5575f737d2c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5575f737d298 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5575f737d1b8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5575f737d170 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5575f737d158 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5575f737d118 <col:20> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5575f737d1a0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5575f737d188 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5575f737d138 <col:38> '_Bool' lvalue Var 0x5575f7373f70 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5575f737d250 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5575f737d208 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5575f737d1d8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5575f737d280 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5575f737d268 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5575f737d230 <col:66> '_Bool' lvalue Var 0x5575f7373f70 'b$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5575f737d5c8 <line:833:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5575f737d300 <col:3> '_Bool' lvalue Var 0x5575f7374150 'b$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5575f737d5b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5575f737d580 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5575f737d4a0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5575f737d3c0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5575f737d378 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5575f737d360 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5575f737d320 <col:20> '_Bool' lvalue Var 0x5575f73744a8 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5575f737d3a8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5575f737d390 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5575f737d340 <col:38> '_Bool' lvalue Var 0x5575f7373f70 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5575f737d480 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5575f737d438 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5575f737d420 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5575f737d3e0 <col:56> '_Bool' lvalue Var 0x5575f73745a0 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5575f737d468 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5575f737d450 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5575f737d400 <col:74> '_Bool' lvalue Var 0x5575f7374150 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5575f737d538 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5575f737d4f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5575f737d4c0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5575f737d568 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5575f737d550 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5575f737d518 <col:102> '_Bool' lvalue Var 0x5575f7374150 'b$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5575f737d620 <line:834:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5575f737d608 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5575f737d5e8 <col:3> 'void ()' Function 0x5575f731a410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5575f737d678 <line:835:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5575f737d660 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5575f737d640 <col:3> 'void ()' Function 0x5575f731a350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5575f737d9e0 <line:836:3, col:159> '_Bool' '='
    | |-DeclRefExpr 0x5575f737d698 <col:3> '_Bool' lvalue Var 0x5575f7374690 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5575f737d9c8 <col:21, col:159> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5575f737d9b0 <col:21, col:159> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5575f737d990 <col:22, col:159> 'int'
    |       `-BinaryOperator 0x5575f737d970 <col:23, col:158> 'int' '&&'
    |         |-BinaryOperator 0x5575f737d8d8 <col:23, col:130> 'int' '&&'
    |         | |-BinaryOperator 0x5575f737d840 <col:23, col:102> 'int' '&&'
    |         | | |-BinaryOperator 0x5575f737d7a8 <col:23, col:74> 'int' '&&'
    |         | | | |-BinaryOperator 0x5575f737d710 <col:23, col:46> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x5575f737d6f8 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x5575f737d6b8 <col:23> 'int' lvalue Var 0x5575f73736b0 '__unbuffered_p0_EAX' 'int'
    |         | | | | `-IntegerLiteral 0x5575f737d6d8 <col:46> 'int' 0
    |         | | | `-BinaryOperator 0x5575f737d788 <col:51, col:74> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x5575f737d770 <col:51> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x5575f737d730 <col:51> 'int' lvalue Var 0x5575f73737d0 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x5575f737d750 <col:74> 'int' 1
    |         | | `-BinaryOperator 0x5575f737d820 <col:79, col:102> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5575f737d808 <col:79> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5575f737d7c8 <col:79> 'int' lvalue Var 0x5575f73738f0 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x5575f737d7e8 <col:102> 'int' 0
    |         | `-BinaryOperator 0x5575f737d8b8 <col:107, col:130> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5575f737d8a0 <col:107> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5575f737d860 <col:107> 'int' lvalue Var 0x5575f7373a10 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x5575f737d880 <col:130> 'int' 1
    |         `-BinaryOperator 0x5575f737d950 <col:135, col:158> 'int' '=='
    |           |-ImplicitCastExpr 0x5575f737d938 <col:135> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5575f737d8f8 <col:135> 'int' lvalue Var 0x5575f7373b30 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x5575f737d918 <col:158> 'int' 0
    |-CallExpr 0x5575f737da38 <line:837:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5575f737da20 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5575f737da00 <col:3> 'void ()' Function 0x5575f731a410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5575f737dab0 <line:838:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5575f737da98 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5575f737da58 <col:3> 'void (int)' Function 0x5575f731a0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5575f737daf0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5575f737dad8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5575f737da78 <col:21> '_Bool' lvalue Var 0x5575f7374690 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5575f737db28 <line:839:3, col:10>
      `-IntegerLiteral 0x5575f737db08 <col:10> 'int' 0
