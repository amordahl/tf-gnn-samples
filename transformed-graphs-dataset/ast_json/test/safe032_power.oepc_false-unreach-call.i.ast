TranslationUnitDecl 0x55b4b101af88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55b4b101b848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55b4b101b520 '__int128'
|-TypedefDecl 0x55b4b101b8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55b4b101b540 'unsigned __int128'
|-TypedefDecl 0x55b4b101bbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55b4b101b990 'struct __NSConstantString_tag'
|   `-Record 0x55b4b101b910 '__NSConstantString_tag'
|-TypedefDecl 0x55b4b101bc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55b4b101bc20 'char *'
|   `-BuiltinType 0x55b4b101b020 'char'
|-TypedefDecl 0x55b4b105ab60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55b4b101bf00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55b4b101bd40 'struct __va_list_tag'
|     `-Record 0x55b4b101bcc0 '__va_list_tag'
|-FunctionDecl 0x55b4b105ac80 <pthread-wmm/safe032_power.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55b4b105ae50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55b4b105ad80 <col:31> col:34 'int'
|-FunctionDecl 0x55b4b105afc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55b4b105b0f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55b4b105b238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55b4b105b1a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55b4b105b468 <col:40, col:99>
|   |-IfStmt 0x55b4b105b438 <col:42, col:88>
|   | |-UnaryOperator 0x55b4b105b318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55b4b105b300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55b4b105b2e0 <col:47> 'int' lvalue ParmVar 0x55b4b105b1a8 'expression' 'int'
|   | `-CompoundStmt 0x55b4b105b420 <col:59, col:88>
|   |   `-LabelStmt 0x55b4b105b408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55b4b105b398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55b4b105b380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55b4b105b330 <col:68> 'void () __attribute__((noreturn))' Function 0x55b4b105b0f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55b4b105b450 <col:89>
|   `-ReturnStmt 0x55b4b105b458 <col:91>
|-FunctionDecl 0x55b4b105b4b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55b4b105b570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55b4b105b8f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55b4b105b628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55b4b105b6a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55b4b105b728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55b4b105b7a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55b4b105b9b0 <line:11:22>
|-FunctionDecl 0x55b4b1080f10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55b4b105ba20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55b4b105baa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55b4b1080d40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55b4b1080dc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55b4b1080fd0 <line:14:22>
|-FunctionDecl 0x55b4b1081280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55b4b1081040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55b4b10810c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55b4b1081140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55b4b1081338 <line:16:22>
|-TypedefDecl 0x55b4b10813a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55b4b101b0e0 'unsigned char'
|-TypedefDecl 0x55b4b1081418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55b4b101b100 'unsigned short'
|-TypedefDecl 0x55b4b1081488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55b4b101b120 'unsigned int'
|-TypedefDecl 0x55b4b10814f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55b4b101b140 'unsigned long'
|-TypedefDecl 0x55b4b1081568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55b4b101b040 'signed char'
|-TypedefDecl 0x55b4b10815d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55b4b101b0e0 'unsigned char'
|-TypedefDecl 0x55b4b1081648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55b4b101b060 'short'
|-TypedefDecl 0x55b4b10816b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55b4b101b100 'unsigned short'
|-TypedefDecl 0x55b4b1081728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55b4b101b080 'int'
|-TypedefDecl 0x55b4b1081798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55b4b101b120 'unsigned int'
|-TypedefDecl 0x55b4b1081808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55b4b101b0a0 'long'
|-TypedefDecl 0x55b4b1081878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55b4b101b140 'unsigned long'
|-TypedefDecl 0x55b4b10818e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55b4b101b0a0 'long'
|-TypedefDecl 0x55b4b1081958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55b4b101b140 'unsigned long'
|-TypedefDecl 0x55b4b10819c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55b4b101b140 'unsigned long'
|-TypedefDecl 0x55b4b1081a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55b4b101b120 'unsigned int'
|-TypedefDecl 0x55b4b1081aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55b4b101b120 'unsigned int'
|-TypedefDecl 0x55b4b1081b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55b4b101b140 'unsigned long'
|-TypedefDecl 0x55b4b1081b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55b4b101b140 'unsigned long'
|-TypedefDecl 0x55b4b1081bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55b4b101b120 'unsigned int'
|-TypedefDecl 0x55b4b1081c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55b4b101b140 'unsigned long'
|-TypedefDecl 0x55b4b1081cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55b4b101b0a0 'long'
|-TypedefDecl 0x55b4b1081d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55b4b101b0a0 'long'
|-TypedefDecl 0x55b4b1081dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55b4b101b080 'int'
|-RecordDecl 0x55b4b1081e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55b4b1081f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55b4b1082030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55b4b1081fd0 'struct __fsid_t' sugar
|   `-RecordType 0x55b4b1081eb0 '__fsid_t'
|     `-Record 0x55b4b1081e30 ''
|-TypedefDecl 0x55b4b10820b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55b4b101b0a0 'long'
|-TypedefDecl 0x55b4b1082128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55b4b101b140 'unsigned long'
|-TypedefDecl 0x55b4b1082198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55b4b101b140 'unsigned long'
|-TypedefDecl 0x55b4b1082208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55b4b101b120 'unsigned int'
|-TypedefDecl 0x55b4b1082278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55b4b101b0a0 'long'
|-TypedefDecl 0x55b4b10822e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55b4b101b120 'unsigned int'
|-TypedefDecl 0x55b4b1082358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55b4b101b0a0 'long'
|-TypedefDecl 0x55b4b10823c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55b4b101b080 'int'
|-TypedefDecl 0x55b4b1082438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55b4b101b080 'int'
|-TypedefDecl 0x55b4b10824a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55b4b101b080 'int'
|-TypedefDecl 0x55b4b1082518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55b4b101b7a0 'void *'
|   `-BuiltinType 0x55b4b101afe0 'void'
|-TypedefDecl 0x55b4b1082588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55b4b101b0a0 'long'
|-TypedefDecl 0x55b4b10825f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55b4b101b0a0 'long'
|-TypedefDecl 0x55b4b1082668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55b4b101b0a0 'long'
|-TypedefDecl 0x55b4b10826d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55b4b101b140 'unsigned long'
|-TypedefDecl 0x55b4b1082748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55b4b101b140 'unsigned long'
|-TypedefDecl 0x55b4b10827b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55b4b101b140 'unsigned long'
|-TypedefDecl 0x55b4b1082828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55b4b101b140 'unsigned long'
|-TypedefDecl 0x55b4b1082898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55b4b101b0a0 'long'
|-TypedefDecl 0x55b4b1082908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55b4b101b0a0 'long'
|-TypedefDecl 0x55b4b1082978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55b4b101b0a0 'long'
|-TypedefDecl 0x55b4b10829e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55b4b101b140 'unsigned long'
|-TypedefDecl 0x55b4b1082a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55b4b1082a40 '__off64_t' sugar
|   |-Typedef 0x55b4b1081d68 '__off64_t'
|   `-BuiltinType 0x55b4b101b0a0 'long'
|-TypedefDecl 0x55b4b1082b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55b4b1082b30 '__quad_t *'
|   `-TypedefType 0x55b4b1082ad0 '__quad_t' sugar
|     |-Typedef 0x55b4b10818e8 '__quad_t'
|     `-BuiltinType 0x55b4b101b0a0 'long'
|-TypedefDecl 0x55b4b1082be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55b4b101bc20 'char *'
|   `-BuiltinType 0x55b4b101b020 'char'
|-TypedefDecl 0x55b4b1082c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55b4b101b0a0 'long'
|-TypedefDecl 0x55b4b1082cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55b4b101b120 'unsigned int'
|-FunctionDecl 0x55b4b1082e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55b4b1082d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55b4b1083148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55b4b1083138 <line:73:3, col:34>
|     `-CallExpr 0x55b4b10830f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55b4b10830e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55b4b1083070 <col:10> '<builtin fn type>' Function 0x55b4b1082ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55b4b1083120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55b4b1083090 <col:29> 'unsigned int' lvalue ParmVar 0x55b4b1082d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x55b4b1082ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55b4b1082f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55b4b1082ff0 <col:10> Implicit
| `-ConstAttr 0x55b4b1083048 <col:10> Implicit
|-FunctionDecl 0x55b4b10832a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55b4b1083198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55b4b10835b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55b4b10835a8 <line:78:3, col:34>
|     `-CallExpr 0x55b4b1083568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55b4b1083550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55b4b10834d8 <col:10> '<builtin fn type>' Function 0x55b4b1083348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55b4b1083590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55b4b10834f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55b4b1083198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55b4b1083348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55b4b10833e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55b4b1083458 <col:10> Implicit
| `-ConstAttr 0x55b4b10834b0 <col:10> Implicit
|-TypedefDecl 0x55b4b10835e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55b4b101b140 'unsigned long'
|-TypedefDecl 0x55b4b1083678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55b4b1083640 '__time_t' sugar
|   |-Typedef 0x55b4b1082278 '__time_t'
|   `-BuiltinType 0x55b4b101b0a0 'long'
|-RecordDecl 0x55b4b10836d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55b4b1083788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55b4b1083818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55b4b10838a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55b4b1083870 '__pid_t' sugar
|   |-Typedef 0x55b4b1081dd8 '__pid_t'
|   `-BuiltinType 0x55b4b101b080 'int'
|-RecordDecl 0x55b4b1083900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55b4b10839c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55b4b1083a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55b4b1083ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55b4b1083b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55b4b101b140 'unsigned long'
|-RecordDecl 0x55b4b1083b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55b4b1085e70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55b4b1085f20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55b4b1085ec0 'struct cpu_set_t' sugar
|   `-RecordType 0x55b4b1083c10 'cpu_set_t'
|     `-Record 0x55b4b1083b90 ''
|-FunctionDecl 0x55b4b10861f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55b4b1085fc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55b4b10860d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55b4b10862a8 <line:108:19>
|-FunctionDecl 0x55b4b1086480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55b4b1086310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55b4b1086528 <col:69>
|-FunctionDecl 0x55b4b10866a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55b4b1086590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55b4b1086748 <col:64>
|-FunctionDecl 0x55b4b1086a08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55b4b10867b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55b4b10868e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55b4b1086ab8 <line:114:22>
|-FunctionDecl 0x55b4b1086e60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55b4b1086b20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55b4b1086c18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55b4b1086f10 <col:88>
|-FunctionDecl 0x55b4b10871c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55b4b1086f78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55b4b1086ff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55b4b1087088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55b4b1087280 <col:62>
|-FunctionDecl 0x55b4b10873f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55b4b10872e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55b4b10874a0 <col:63>
|-FunctionDecl 0x55b4b10875c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55b4b1087668 <col:47>
|-FunctionDecl 0x55b4b1087770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55b4b10876d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55b4b1087818 <col:69>
|-FunctionDecl 0x55b4b1087920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55b4b1087888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55b4b10879c8 <col:69>
|-FunctionDecl 0x55b4b1087c88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55b4b1087a30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55b4b1087b68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55b4b1087d38 <col:88>
|-TypedefDecl 0x55b4b1087dc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55b4b1087d90 '__clock_t' sugar
|   |-Typedef 0x55b4b10820b8 '__clock_t'
|   `-BuiltinType 0x55b4b101b0a0 'long'
|-TypedefDecl 0x55b4b10887e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55b4b1087e20 '__clockid_t' sugar
|   |-Typedef 0x55b4b10824a8 '__clockid_t'
|   `-BuiltinType 0x55b4b101b080 'int'
|-TypedefDecl 0x55b4b1088878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55b4b1088840 '__timer_t' sugar
|   |-Typedef 0x55b4b1082518 '__timer_t'
|   `-PointerType 0x55b4b101b7a0 'void *'
|     `-BuiltinType 0x55b4b101afe0 'void'
|-RecordDecl 0x55b4b10888d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55b4b1088990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55b4b10889f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55b4b1088a60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55b4b1088ac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55b4b1088b30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55b4b1088b98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55b4b1088c00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55b4b1088c68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55b4b1088cd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55b4b1088d38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55b4b1088da0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55b4b1088df0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55b4b1088eb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55b4b1088f28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55b4b1088fd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55b4b10891a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55b4b1089240 <col:45>
|-FunctionDecl 0x55b4b1089420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55b4b1089310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55b4b10894c8 <col:54>
|-FunctionDecl 0x55b4b10896c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55b4b1089530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55b4b10895a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55b4b1089778 <line:158:22>
| `-ConstAttr 0x55b4b108a410 <col:63>
|-FunctionDecl 0x55b4b108a610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55b4b108a508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55b4b108a6b8 <col:56>
|-FunctionDecl 0x55b4b108aa60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55b4b108a728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55b4b108a7a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55b4b108a820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55b4b108a918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55b4b108ab20 <col:54>
|-RecordDecl 0x55b4b108ab78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55b4b108ac28 parent 0x55b4b101af88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55b4b108ae88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55b4b108af28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55b4b108af90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55b4b108aff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55b4b108b0e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55b4b108b208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55b4b108b1b0 'struct __locale_struct *'
|   `-ElaboratedType 0x55b4b108b140 'struct __locale_struct' sugar
|     `-RecordType 0x55b4b108ac00 'struct __locale_struct'
|       `-Record 0x55b4b108ab78 '__locale_struct'
|-TypedefDecl 0x55b4b108b2b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55b4b108b280 '__locale_t' sugar
|   |-Typedef 0x55b4b108b208 '__locale_t'
|   `-PointerType 0x55b4b108b1b0 'struct __locale_struct *'
|     `-ElaboratedType 0x55b4b108b140 'struct __locale_struct' sugar
|       `-RecordType 0x55b4b108ac00 'struct __locale_struct'
|         `-Record 0x55b4b108ab78 '__locale_struct'
|-FunctionDecl 0x55b4b108b6b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55b4b108b328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55b4b108b3a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55b4b108b438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55b4b108b4c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55b4b108b540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55b4b108b778 <col:40>
|-FunctionDecl 0x55b4b108b968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55b4b108b840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55b4b108ba10 <col:66>
|-FunctionDecl 0x55b4b108bb20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55b4b108ba78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55b4b108bbc8 <col:69>
|-FunctionDecl 0x55b4b108bdf8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55b4b108bc30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55b4b108bcc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55b4b108bea8 <col:52>
|-FunctionDecl 0x55b4b108c050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55b4b108bf10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55b4b108bfa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55b4b108c100 <col:55>
|-FunctionDecl 0x55b4b108c298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55b4b108c180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55b4b108c340 <col:62>
|-FunctionDecl 0x55b4b108c578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55b4b108c3a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55b4b108c620 <col:60>
|-FunctionDecl 0x55b4b108c848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55b4b108c6a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55b4b108c720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55b4b108c8f8 <col:44>
|-FunctionDecl 0x55b4b108cb08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55b4b108c960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55b4b108c9e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55b4b108cbb8 <col:49>
|-VarDecl 0x55b4b108ccb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55b4b108cd38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55b4b108cdb8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55b4b108ce80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55b4b108cfb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55b4b108d050 <col:42>
|-VarDecl 0x55b4b108d0c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55b4b108d140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55b4b108d2c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55b4b108d1b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55b4b108d370 <col:57>
|-FunctionDecl 0x55b4b108e4f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55b4b108d3f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55b4b108e598 <col:56>
|-FunctionDecl 0x55b4b108e6a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55b4b108e618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55b4b108e750 <col:59>
|-FunctionDecl 0x55b4b108e858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55b4b108e7c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55b4b108e900 <col:48>
| `-ConstAttr 0x55b4b108e958 <col:89>
|-FunctionDecl 0x55b4b108ebb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55b4b108ea08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55b4b108ea98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55b4b108ee18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55b4b108eca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b4b108ed38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55b4b108eec8 <col:88>
|-FunctionDecl 0x55b4b108f060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55b4b108ef30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b4b108efc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55b4b108f110 <col:88>
|-FunctionDecl 0x55b4b108f328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55b4b108f178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b4b108f208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55b4b108f3d8 <line:209:22>
|-FunctionDecl 0x55b4b108f778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55b4b108f440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b4b108f500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55b4b108f590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55b4b108f620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55b4b108fa78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55b4b108f878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55b4b108f950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55b4b108fb28 <col:85>
|-FunctionDecl 0x55b4b108ff18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55b4b108fb90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b4b108fcc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55b4b108fdd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55b4b108ffd0 <col:52>
|-FunctionDecl 0x55b4b1090148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55b4b1090038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55b4b10901f0 <col:61>
|-FunctionDecl 0x55b4b1090668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55b4b1090258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55b4b10902d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55b4b1090408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55b4b1090510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55b4b1090728 <col:62>
|-FunctionDecl 0x55b4b1090948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55b4b1090790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55b4b1090820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55b4b10909f8 <line:222:22>
|-FunctionDecl 0x55b4b1090af8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55b4b1090a60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55b4b1090ba0 <col:65>
|-TypedefDecl 0x55b4b1090c10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55b4b101b140 'unsigned long'
|-RecordDecl 0x55b4b1090c68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55b4b1090db0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55b4b1090e18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b4b1090ec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55b4b1090e70 'union pthread_attr_t' sugar
|   `-RecordType 0x55b4b1090cf0 'union pthread_attr_t'
|     `-Record 0x55b4b1090c68 'pthread_attr_t'
|-RecordDecl 0x55b4b1090f20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55b4b1091098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55b4b1091110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55b4b10911c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55b4b1091160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55b4b1090fa0 'struct __pthread_internal_list'
|     `-Record 0x55b4b1090f20 '__pthread_internal_list'
|-RecordDecl 0x55b4b1091230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55b4b10912d8 parent 0x55b4b101af88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55b4b10913b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55b4b1091418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55b4b1091480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55b4b1095530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55b4b1095598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55b4b1095600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55b4b1095688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55b4b1095740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55b4b1095830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55b4b1095898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b4b1095a20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55b4b10959c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55b4b10912b0 'pthread_mutex_t'
|     `-Record 0x55b4b1091230 ''
|-RecordDecl 0x55b4b1095a90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55b4b1095bd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55b4b1095c38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55b4b1095cf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55b4b1095c90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55b4b1095b10 'pthread_mutexattr_t'
|     `-Record 0x55b4b1095a90 ''
|-RecordDecl 0x55b4b1095d60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55b4b1095e08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55b4b1095ed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55b4b1095f38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55b4b1095fa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55b4b1096008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55b4b1096070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55b4b10960d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55b4b1096140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55b4b10961a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55b4b1096260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe032_power.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe032_power.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55b4b1096350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55b4b10963b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55b4b1096540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55b4b1096490 'union pthread_cond_t' sugar
|   `-RecordType 0x55b4b1095de0 'pthread_cond_t'
|     `-Record 0x55b4b1095d60 ''
|-RecordDecl 0x55b4b10965b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55b4b10966b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55b4b1096718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55b4b10967d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55b4b1096770 'union pthread_condattr_t' sugar
|   `-RecordType 0x55b4b1096630 'pthread_condattr_t'
|     `-Record 0x55b4b10965b0 ''
|-TypedefDecl 0x55b4b1096858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55b4b101b120 'unsigned int'
|-TypedefDecl 0x55b4b10968c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55b4b101b080 'int'
|-RecordDecl 0x55b4b1096920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55b4b10969c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55b4b1096a90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55b4b1096af8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55b4b1096b60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55b4b1096bc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55b4b1096c30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55b4b1096c98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55b4b1096d00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55b4b1096d68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55b4b1096dd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55b4b1096e38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55b4b1096ea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55b4b1096f50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe032_power.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe032_power.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55b4b1096ff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55b4b1097060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b4b10971b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55b4b1097150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55b4b10969a0 'pthread_rwlock_t'
|     `-Record 0x55b4b1096920 ''
|-RecordDecl 0x55b4b1097220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55b4b1097360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55b4b10973c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b4b1097480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55b4b1097420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55b4b10972a0 'pthread_rwlockattr_t'
|     `-Record 0x55b4b1097220 ''
|-TypedefDecl 0x55b4b1099560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55b4b101b084 'volatile int' volatile
|   `-BuiltinType 0x55b4b101b080 'int'
|-RecordDecl 0x55b4b10995b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55b4b1099700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55b4b1099768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b4b1099820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55b4b10997c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55b4b1099640 'pthread_barrier_t'
|     `-Record 0x55b4b10995b8 ''
|-RecordDecl 0x55b4b1099890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55b4b1099990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55b4b10999f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55b4b1099ab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55b4b1099a50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55b4b1099910 'pthread_barrierattr_t'
|     `-Record 0x55b4b1099890 ''
|-TypedefDecl 0x55b4b1099bc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55b4b1099b60 'long [8]' 8 
|   `-BuiltinType 0x55b4b101b0a0 'long'
|-EnumDecl 0x55b4b1099c20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55b4b1099ce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55b4b1099d38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55b4b1099d88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55b4b1099e58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55b4b1099ea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55b4b1099ef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55b4b1099f48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55b4b1099fd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55b4b1099fb8 <col:26> 'int'
| |   `-DeclRefExpr 0x55b4b1099f98 <col:26> 'int' EnumConstant 0x55b4b1099e58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55b4b109a058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55b4b109a040 <col:29> 'int'
| |   `-DeclRefExpr 0x55b4b109a020 <col:29> 'int' EnumConstant 0x55b4b1099ea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55b4b109a0e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55b4b109a0c8 <col:30> 'int'
| |   `-DeclRefExpr 0x55b4b109a0a8 <col:30> 'int' EnumConstant 0x55b4b1099ef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55b4b109a168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55b4b109a150 <col:27> 'int'
|     `-DeclRefExpr 0x55b4b109a130 <col:27> 'int' EnumConstant 0x55b4b1099fd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55b4b109a1b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55b4b109a288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55b4b109a310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55b4b109a2f8 <col:30> 'int'
| |   `-DeclRefExpr 0x55b4b109a2d8 <col:30> 'int' EnumConstant 0x55b4b109a288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55b4b109a360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55b4b109a3e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55b4b109a3d0 <col:29> 'int'
|     `-DeclRefExpr 0x55b4b109a3b0 <col:29> 'int' EnumConstant 0x55b4b109a360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55b4b109a438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55b4b109a508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55b4b109a570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55b4b109a5c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55b4b109a610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55b4b109a6d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55b4b109a728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55b4b109a778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55b4b109a800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55b4b109a7e8 <col:31> 'int'
|     `-DeclRefExpr 0x55b4b109a7c8 <col:31> 'int' EnumConstant 0x55b4b109a6d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55b4b109a850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55b4b109a918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55b4b109a968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55b4b109a9b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55b4b109aa88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55b4b109aad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55b4b109ab28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55b4b109abf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55b4b109ac48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55b4b109ac98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55b4b109aed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55b4b109af40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55b4b109afa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55b4b109b0c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55b4b109b118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55b4b109b1e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55b4b109b238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55b4b109b288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55b4b109b358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55b4b109b3a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55b4b109b9d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55b4b109b4a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55b4b109b5c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b4b109b7c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55b4b109b840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55b4b109ba98 <col:47>
| |-NonNullAttr 0x55b4b109baf0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55b4b109bb28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55b4b109bc50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55b4b109bb80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55b4b109bea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55b4b109bd08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55b4b109bd88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55b4b109c078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55b4b109bf68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55b4b109c120 <col:60>
|-FunctionDecl 0x55b4b109c270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55b4b109c310 <col:54>
| `-ConstAttr 0x55b4b109c368 <col:95>
|-FunctionDecl 0x55b4b109cda0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55b4b109c3a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b4b109c418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55b4b109ce50 <line:395:19>
| `-ConstAttr 0x55b4b109cea8 <col:60>
|-FunctionDecl 0x55b4b109d078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55b4b109cf40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55b4b109d120 <col:71>
| `-NonNullAttr 0x55b4b109d178 <col:112, col:126> 1
|-FunctionDecl 0x55b4b109d280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55b4b109d1c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55b4b109d328 <line:398:22>
| `-NonNullAttr 0x55b4b109d380 <col:63, col:77> 1
|-FunctionDecl 0x55b4b109d5a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55b4b109d3c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55b4b109d448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55b4b109d658 <line:401:22>
| `-NonNullAttr 0x55b4b109d6b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b4b109d8b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55b4b109d6f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b4b109d778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55b4b109d968 <line:404:22>
| `-NonNullAttr 0x55b4b109d9c0 <col:63, col:77> 1
|-FunctionDecl 0x55b4b109dc18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55b4b109da08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55b4b109dab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55b4b109dcc8 <line:407:22>
| `-NonNullAttr 0x55b4b109dd20 <col:63, col:80> 1 2
|-FunctionDecl 0x55b4b109ef78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55b4b109edc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b4b109ee38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55b4b109f028 <line:410:22>
| `-NonNullAttr 0x55b4b109f080 <col:63, col:77> 1
|-FunctionDecl 0x55b4b109f2b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55b4b109f0c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b4b109f158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55b4b109f368 <line:413:22>
| `-NonNullAttr 0x55b4b109f3c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b4b109f5f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55b4b109f408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b4b109f498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55b4b109f6a8 <col:37>
| `-NonNullAttr 0x55b4b109f700 <col:78, col:95> 1 2
|-FunctionDecl 0x55b4b109f8e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b4b109f748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b4b109f7c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55b4b109f998 <line:419:22>
| `-NonNullAttr 0x55b4b109f9f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b4b109fb78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55b4b109fa38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b4b109fab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55b4b109fc28 <line:421:22>
| `-NonNullAttr 0x55b4b109fc80 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10a0e58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b4b109fcc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b4b109fd48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55b4b10a0f08 <line:424:22>
| `-NonNullAttr 0x55b4b10a0f60 <col:63, col:80> 1 2
|-FunctionDecl 0x55b4b10a10e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55b4b10a0fa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b4b10a1028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55b4b10a1198 <line:427:22>
| `-NonNullAttr 0x55b4b10a11f0 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10a1398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b4b10a1238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b4b10a12b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55b4b10a1448 <line:430:22>
| `-NonNullAttr 0x55b4b10a14a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b4b10a1628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55b4b10a14e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b4b10a1568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55b4b10a16d8 <line:432:22>
| `-NonNullAttr 0x55b4b10a1730 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10a1958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55b4b10a1778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b4b10a17f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55b4b10a1a08 <line:435:22>
| |-NonNullAttr 0x55b4b10a1a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55b4b10a1a98 <col:100> "" ""
|-FunctionDecl 0x55b4b10a1ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55b4b10a1ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b4b10a1b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55b4b10a1d58 <line:438:22>
| |-NonNullAttr 0x55b4b10a1db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x55b4b10a1df8 <col:97> "" ""
|-FunctionDecl 0x55b4b10a1fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55b4b10a1e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b4b10a1ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55b4b10a2098 <line:441:22>
| `-NonNullAttr 0x55b4b10a20f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b4b10a2270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55b4b10a2138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b4b10a21b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55b4b10a2320 <line:444:22>
| `-NonNullAttr 0x55b4b10a2378 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10a2668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55b4b10a23c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b4b10a2448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55b4b10a24c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55b4b10a2720 <line:448:22>
| `-NonNullAttr 0x55b4b10a2778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55b4b10a2a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55b4b10a27d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b4b10a2850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55b4b10a28c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55b4b10a2ae0 <col:43>
| `-NonNullAttr 0x55b4b10a2b38 <col:84, col:98> 1
|-FunctionDecl 0x55b4b10a2e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55b4b10a2b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b4b10a2c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55b4b10a2c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55b4b10a2ef8 <line:453:22>
| `-NonNullAttr 0x55b4b10a2f50 <col:63, col:77> 3
|-FunctionDecl 0x55b4b10a3228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55b4b10a2f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b4b10a3018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55b4b10a30a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55b4b10a32e0 <line:457:22>
| `-NonNullAttr 0x55b4b10a3338 <col:63, col:80> 2 3
|-FunctionDecl 0x55b4b10a3528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55b4b10a3388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b4b10a3408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55b4b10a35d8 <line:459:22>
|-FunctionDecl 0x55b4b10a39a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55b4b10a36a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55b4b10a3840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55b4b10a3a58 <col:52, col:69> 1 2
|-FunctionDecl 0x55b4b10a3c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55b4b10a3ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55b4b10a3b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55b4b10a3e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55b4b10a3cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55b4b10a3d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55b4b10a3f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55b4b10a3ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55b4b10a40a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55b4b10a4148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55b4b10a41f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55b4b10a42e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55b4b10a4350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55b4b10a4520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe032_power.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55b4b10a4618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55b4b10a46d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55b4b10a4670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55b4b10a41d0 '__pthread_unwind_buf_t'
| |   `-Record 0x55b4b10a4148 ''
| `-AlignedAttr 0x55b4b10a4728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55b4b10a47a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55b4b10a4900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55b4b10a4968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55b4b10a49d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55b4b10a4a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55b4b10a4c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55b4b10a4b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55b4b10a4e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55b4b10a4cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55b4b10a4fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55b4b10a4ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55b4b10a5088 <line:488:22>
|-RecordDecl 0x55b4b10a50e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55b4b10a53f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55b4b10a5258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55b4b10a52d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55b4b10a54a8 <col:86>
| `-ReturnsTwiceAttr 0x55b4b10a5500 <col:12> Implicit
|-FunctionDecl 0x55b4b10a5828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55b4b10a55d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55b4b10a56e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55b4b10a58d8 <line:494:22>
| `-NonNullAttr 0x55b4b10a5930 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10a5aa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b4b10a5978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b4b10a5b50 <line:496:22>
| `-NonNullAttr 0x55b4b10a5ba8 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10a5cb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b4b10a5bf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b4b10a5d58 <line:498:22>
| `-NonNullAttr 0x55b4b10a5db0 <col:52, col:66> 1
|-FunctionDecl 0x55b4b10a5ee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b4b10a5e30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b4b10a5f90 <line:500:22>
| `-NonNullAttr 0x55b4b10a5fe8 <col:52, col:66> 1
|-FunctionDecl 0x55b4b10a6228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55b4b10a6038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55b4b10a60c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55b4b10a62d8 <col:36>
| `-NonNullAttr 0x55b4b10a6330 <col:66, col:83> 1 2
|-FunctionDecl 0x55b4b10a6430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b4b10a6378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b4b10a64d8 <line:505:22>
| `-NonNullAttr 0x55b4b10a6530 <col:52, col:66> 1
|-FunctionDecl 0x55b4b10a67c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b4b10a65e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55b4b10a6660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55b4b10a6878 <line:509:22>
| `-NonNullAttr 0x55b4b10a68d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b4b10a6b98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55b4b10a6918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55b4b10a6998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55b4b10a6a18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55b4b10a6c50 <line:513:22>
| `-NonNullAttr 0x55b4b10a6ca8 <col:63, col:80> 1 3
|-FunctionDecl 0x55b4b10a6e40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b4b10a6cf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b4b10a6ee8 <line:515:22>
| `-NonNullAttr 0x55b4b10a6f40 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10a7128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55b4b10a6ff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55b4b10a71d0 <line:517:22>
| `-NonNullAttr 0x55b4b10a7228 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10a7330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55b4b10a7278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55b4b10a73d8 <line:519:22>
| `-NonNullAttr 0x55b4b10a7430 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10a7658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b4b10a7478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55b4b10a74f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55b4b10a7708 <line:523:22>
| `-NonNullAttr 0x55b4b10a7760 <col:63, col:80> 1 2
|-FunctionDecl 0x55b4b10a7968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b4b10a77a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b4b10a7828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55b4b10a7a18 <line:526:22>
| `-NonNullAttr 0x55b4b10a7a70 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10a7c18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b4b10a7ab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55b4b10a7b38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55b4b10a7cc8 <line:529:22>
| `-NonNullAttr 0x55b4b10a7d20 <col:63, col:80> 1 2
|-FunctionDecl 0x55b4b10a8f20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b4b10a7d68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b4b10a8e60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55b4b10a8fd0 <line:531:22>
| `-NonNullAttr 0x55b4b10a9028 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10a91d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b4b10a9078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55b4b10a90f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55b4b10a9288 <line:535:22>
| `-NonNullAttr 0x55b4b10a92e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b4b10a9468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b4b10a9328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b4b10a93a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55b4b10a9518 <line:538:22>
| `-NonNullAttr 0x55b4b10a9570 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10a9718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b4b10a95b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55b4b10a9638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55b4b10a97c8 <line:542:22>
| `-NonNullAttr 0x55b4b10a9820 <col:63, col:80> 1 2
|-FunctionDecl 0x55b4b10a99a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b4b10a9868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b4b10a98e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55b4b10a9a58 <line:545:22>
| `-NonNullAttr 0x55b4b10a9ab0 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10a9c98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55b4b10a9af8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b4b10a9b78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55b4b10a9d48 <line:548:22>
| `-NonNullAttr 0x55b4b10a9da0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b4b10aaf58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b4b10a9de8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b4b10aae98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55b4b10ab008 <line:551:22>
| `-NonNullAttr 0x55b4b10ab060 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10ab398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55b4b10ab140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55b4b10ab250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55b4b10ab448 <col:29>
| `-NonNullAttr 0x55b4b10ab4a0 <col:70, col:84> 1
|-FunctionDecl 0x55b4b10ab618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b4b10ab4e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b4b10ab6c0 <line:556:22>
| `-NonNullAttr 0x55b4b10ab718 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10ab820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b4b10ab768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b4b10ab8c8 <line:558:22>
| `-NonNullAttr 0x55b4b10ab920 <col:52, col:66> 1
|-FunctionDecl 0x55b4b10aba20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b4b10ab968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b4b10abac8 <line:560:19>
| `-NonNullAttr 0x55b4b10abb20 <col:49, col:63> 1
|-FunctionDecl 0x55b4b10abd58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55b4b10abb68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55b4b10abbf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55b4b10abe08 <col:39>
| `-NonNullAttr 0x55b4b10abe90 <col:69, col:86> 1 2
|-FunctionDecl 0x55b4b10abf90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b4b10abed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b4b10ac038 <line:565:22>
| `-NonNullAttr 0x55b4b10ac090 <col:52, col:66> 1
|-FunctionDecl 0x55b4b10ac190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b4b10ac0d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b4b10ac238 <line:567:22>
| `-NonNullAttr 0x55b4b10ac290 <col:52, col:66> 1
|-FunctionDecl 0x55b4b10ac448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55b4b10ac2d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55b4b10ac368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55b4b10ac4f8 <col:39>
| `-NonNullAttr 0x55b4b10ac550 <col:69, col:86> 1 2
|-FunctionDecl 0x55b4b10ac650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b4b10ac598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b4b10ac6f8 <line:572:22>
| `-NonNullAttr 0x55b4b10ac750 <col:52, col:66> 1
|-FunctionDecl 0x55b4b10ac938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55b4b10ac800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55b4b10ac9e0 <line:574:22>
| `-NonNullAttr 0x55b4b10aca38 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10acb40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55b4b10aca88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55b4b10acbe8 <line:576:22>
| `-NonNullAttr 0x55b4b10acc40 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10acea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b4b10acc88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55b4b10acd08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55b4b10acf50 <line:580:22>
| `-NonNullAttr 0x55b4b10acfa8 <col:63, col:80> 1 2
|-FunctionDecl 0x55b4b10ad1b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55b4b10acff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55b4b10ad078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55b4b10ad268 <line:583:22>
| `-NonNullAttr 0x55b4b10ad2c0 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10ad468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b4b10ad308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55b4b10ad388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55b4b10ad518 <line:587:22>
| `-NonNullAttr 0x55b4b10ad570 <col:63, col:80> 1 2
|-FunctionDecl 0x55b4b10ad6f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55b4b10ad5b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55b4b10ad638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55b4b10ad7a8 <col:36>
| `-NonNullAttr 0x55b4b10ad800 <col:77, col:91> 1
|-FunctionDecl 0x55b4b10adb38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55b4b10ad8e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55b4b10ad9f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55b4b10adbe8 <line:592:22>
| `-NonNullAttr 0x55b4b10adc40 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10addb8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55b4b10adc88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55b4b10ade60 <line:594:22>
| `-NonNullAttr 0x55b4b10adee0 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10adfe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55b4b10adf28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55b4b10ae088 <line:596:22>
| `-NonNullAttr 0x55b4b10ae0e0 <col:52, col:66> 1
|-FunctionDecl 0x55b4b10ae1e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55b4b10ae128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55b4b10ae288 <line:598:22>
| `-NonNullAttr 0x55b4b10ae2e0 <col:52, col:66> 1
|-FunctionDecl 0x55b4b10ae508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55b4b10ae328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55b4b10ae3a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55b4b10ae5b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55b4b10ae8e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55b4b10ae638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55b4b10ae6b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55b4b10ae740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55b4b10ae9a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55b4b10aebb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55b4b10aea80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55b4b10aec60 <line:607:22>
| `-NonNullAttr 0x55b4b10aecb8 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10aedc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55b4b10aed08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55b4b10aee68 <line:609:22>
| `-NonNullAttr 0x55b4b10aeef0 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10af118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b4b10aef38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55b4b10aefb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55b4b10af1c8 <line:613:22>
| `-NonNullAttr 0x55b4b10af220 <col:63, col:80> 1 2
|-FunctionDecl 0x55b4b10af428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55b4b10af268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55b4b10af2e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55b4b10af4d8 <col:37>
| `-NonNullAttr 0x55b4b10af530 <col:78, col:92> 1
|-FunctionDecl 0x55b4b10af748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55b4b10af578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55b4b10af620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55b4b10af7f8 <line:619:22>
| `-NonNullAttr 0x55b4b10af850 <col:63, col:80> 1 2
|-FunctionDecl 0x55b4b10afa18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55b4b10af898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55b4b10af910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55b4b10afac8 <line:622:22>
| `-NonNullAttr 0x55b4b10afb20 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10afdc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55b4b10afc00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55b4b10afc80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55b4b10afe78 <line:624:22>
| `-NonNullAttr 0x55b4b10aff00 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10b0078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55b4b10aff48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55b4b10b0120 <line:626:22>
| `-NonNullAttr 0x55b4b10b0178 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10b0280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55b4b10b01c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55b4b10b0328 <line:628:22>
| `-NonNullAttr 0x55b4b10b0380 <col:52, col:66> 1
|-FunctionDecl 0x55b4b10b0480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55b4b10b03c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55b4b10b0528 <line:630:22>
| `-NonNullAttr 0x55b4b10b0580 <col:52, col:66> 1
|-FunctionDecl 0x55b4b10b0680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55b4b10b05c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55b4b10b0728 <line:632:22>
| `-NonNullAttr 0x55b4b10b0780 <col:52, col:66> 1
|-FunctionDecl 0x55b4b10b0b58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55b4b10b0860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55b4b10b0970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55b4b10b09f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55b4b10b0c10 <line:636:22>
| `-NonNullAttr 0x55b4b10b0c68 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10b0de8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55b4b10b0cb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55b4b10b0e90 <line:638:22>
| `-NonNullAttr 0x55b4b10b0f10 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10b1010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55b4b10b0f58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55b4b10b10b8 <line:640:22>
| `-NonNullAttr 0x55b4b10b1110 <col:52, col:66> 1
|-FunctionDecl 0x55b4b10b12f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55b4b10b11c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55b4b10b13a0 <line:642:22>
| `-NonNullAttr 0x55b4b10b13f8 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10b1500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55b4b10b1448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55b4b10b15a8 <line:644:22>
| `-NonNullAttr 0x55b4b10b1600 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10b1828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b4b10b1648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55b4b10b16c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55b4b10b18d8 <line:648:22>
| `-NonNullAttr 0x55b4b10b1930 <col:63, col:80> 1 2
|-FunctionDecl 0x55b4b10b1b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55b4b10b1978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55b4b10b19f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55b4b10b1be8 <line:651:22>
| `-NonNullAttr 0x55b4b10b1c40 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10b1fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55b4b10b1d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55b4b10b1e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55b4b10b2058 <line:654:22>
| `-NonNullAttr 0x55b4b10b20b0 <col:63, col:77> 1
|-FunctionDecl 0x55b4b10b2208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55b4b10b20f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55b4b10b22b0 <col:69>
|-FunctionDecl 0x55b4b10b2428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55b4b10b2318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55b4b10b24d0 <col:72>
|-FunctionDecl 0x55b4b10b2708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55b4b10b2538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55b4b10b25e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55b4b10b27b8 <col:44>
|-FunctionDecl 0x55b4b10b29d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55b4b10b2820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b4b10b2898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55b4b10b2a88 <line:661:22>
| `-NonNullAttr 0x55b4b10b2ae0 <col:63, col:77> 2
|-FunctionDecl 0x55b4b10b3f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55b4b10b2bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55b4b10b2cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55b4b10b2de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55b4b10b4008 <col:47>
|-FunctionDecl 0x55b4b10b4110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55b4b10b4078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55b4b10b4268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55b4b10b41d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55b4b10b43c0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55b4b10b4328 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55b4b10b4488 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55b4b10b4548 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55b4b10b4608 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55b4b10b46c0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55b4b10b4740 prev 0x55b4b10b46c0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55b4b10b47a8 <col:24> 'int' 0
|-VarDecl 0x55b4b10b47e0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55b4b10b4860 prev 0x55b4b10b47e0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55b4b10b48c8 <col:27> 'int' 0
|-VarDecl 0x55b4b10b4900 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55b4b10b4980 prev 0x55b4b10b4900 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55b4b10b49e8 <col:27> 'int' 0
|-VarDecl 0x55b4b10b4a18 <line:678:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55b4b10b4a90 <line:679:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55b4b10b4b10 <line:680:1, col:5> col:5 used x 'int'
|-VarDecl 0x55b4b10b4b90 prev 0x55b4b10b4b10 <line:681:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55b4b10b4bf8 <col:9> 'int' 0
|-VarDecl 0x55b4b10b4c28 <line:682:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x55b4b10b4ca8 <line:683:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x55b4b10b4d20 <line:684:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x55b4b10b4d98 <line:685:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x55b4b10b4e10 <line:686:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x55b4b10b4e88 <line:687:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x55b4b10b4f20 <line:688:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x55b4b10b4f98 <line:689:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x55b4b10b5010 <line:690:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x55b4b10b5088 <line:691:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x55b4b10b5100 <line:692:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x55b4b10b5180 <line:693:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x55b4b10b5200 <line:694:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x55b4b10b5278 <line:695:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x55b4b10b52f8 <line:696:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x55b4b10b5370 <line:697:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x55b4b10b53f0 <line:698:1, col:5> col:5 used y 'int'
|-VarDecl 0x55b4b10b5470 prev 0x55b4b10b53f0 <line:699:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55b4b10b54d8 <col:9> 'int' 0
|-VarDecl 0x55b4b10b5508 <line:700:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55b4b10b5580 <line:701:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55b4b10b5698 prev 0x55b4b10b4110 <line:702:1, line:731:1> line:702:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55b4b10b5600 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55b4b10b86b8 <line:703:1, line:731:1>
|   |-CallExpr 0x55b4b10b57a8 <line:704:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b4b10b5790 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10b5740 <col:3> 'void ()' Function 0x55b4b105b4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b4b10b5808 <line:705:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55b4b10b57c8 <col:3> 'int' lvalue Var 0x55b4b10b5470 'y' 'int'
|   | `-IntegerLiteral 0x55b4b10b57e8 <col:7> 'int' 2
|   |-CallExpr 0x55b4b10b5860 <line:706:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b4b10b5848 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10b5828 <col:3> 'void ()' Function 0x55b4b105b570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b4b10b58b8 <line:707:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b4b10b58a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10b5880 <col:3> 'void ()' Function 0x55b4b105b4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55b4b10b5910 <line:708:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b4b10b58f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10b58d8 <col:3> 'void ()' Function 0x55b4b105b570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b4b10b5968 <line:709:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b4b10b5950 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10b5930 <col:3> 'void ()' Function 0x55b4b105b4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b4b10b5a38 <line:710:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10b5988 <col:3> '_Bool' lvalue Var 0x55b4b10b5508 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55b4b10b5a18 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55b4b10b5a00 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55b4b10b59a8 <col:19> '_Bool (void)' Function 0x55b4b105ac80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55b4b10b5ad0 <line:711:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10b5a58 <col:3> '_Bool' lvalue Var 0x55b4b10b5580 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55b4b10b5ab0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55b4b10b5a98 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55b4b10b5a78 <col:19> '_Bool (void)' Function 0x55b4b105ac80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55b4b10b5b48 <line:712:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10b5af0 <col:3> '_Bool' lvalue Var 0x55b4b10b4c28 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10b5b30 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b4b10b5b10 <col:21> '_Bool' lvalue Var 0x55b4b10b5580 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55b4b10b5bc0 <line:713:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55b4b10b5b68 <col:3> 'int' lvalue Var 0x55b4b10b4ca8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55b4b10b5ba8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b4b10b5b88 <col:15> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
|   |-BinaryOperator 0x55b4b10b6018 <line:714:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55b4b10b5be0 <col:3> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
|   | `-ConditionalOperator 0x55b4b10b5fe8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55b4b10b5df0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55b4b10b5d10 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55b4b10b5c38 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55b4b10b5c20 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55b4b10b5c00 <col:8> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55b4b10b5cf0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55b4b10b5c88 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55b4b10b5c70 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55b4b10b5c50 <col:27> '_Bool' lvalue Var 0x55b4b10b4d98 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x55b4b10b5cd8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55b4b10b5cc0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55b4b10b5ca0 <col:46> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55b4b10b5dd0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55b4b10b5d68 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55b4b10b5d50 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55b4b10b5d30 <col:65> '_Bool' lvalue Var 0x55b4b10b4d98 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x55b4b10b5db8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55b4b10b5da0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55b4b10b5d80 <col:84> '_Bool' lvalue Var 0x55b4b10b4f98 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55b4b10b5fd0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b4b10b5e10 <col:101> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
|   |   `-ParenExpr 0x55b4b10b5fb0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55b4b10b5f80 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55b4b10b5ed0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55b4b10b5e88 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55b4b10b5e70 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55b4b10b5e30 <col:106> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55b4b10b5eb8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55b4b10b5ea0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55b4b10b5e50 <col:124> '_Bool' lvalue Var 0x55b4b10b4d98 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55b4b10b5f50 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b4b10b5ef0 <col:141> 'int' lvalue Var 0x55b4b10b5200 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55b4b10b5f68 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b4b10b5f30 <col:153> 'int' lvalue Var 0x55b4b10b52f8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55b4b10b6528 <line:715:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55b4b10b6038 <col:3> 'int' lvalue Var 0x55b4b10b5200 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55b4b10b64f8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55b4b10b64c8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b4b10b64b0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b4b10b6058 <col:15> '_Bool' lvalue Var 0x55b4b10b5580 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b4b10b64e0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b4b10b6078 <col:31> 'int' lvalue Var 0x55b4b10b5200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55b4b10b6490 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55b4b10b6460 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55b4b10b6288 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55b4b10b61a8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55b4b10b60d0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55b4b10b60b8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55b4b10b6098 <col:45> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55b4b10b6188 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55b4b10b6120 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55b4b10b6108 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55b4b10b60e8 <col:64> '_Bool' lvalue Var 0x55b4b10b4d98 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55b4b10b6170 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55b4b10b6158 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55b4b10b6138 <col:83> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55b4b10b6268 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55b4b10b6200 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55b4b10b61e8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55b4b10b61c8 <col:102> '_Bool' lvalue Var 0x55b4b10b4d98 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55b4b10b6250 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55b4b10b6238 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55b4b10b6218 <col:121> '_Bool' lvalue Var 0x55b4b10b4f98 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55b4b10b6448 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b4b10b62a8 <col:138> 'int' lvalue Var 0x55b4b10b5200 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55b4b10b6428 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55b4b10b63f8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55b4b10b6368 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55b4b10b6320 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55b4b10b6308 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55b4b10b62c8 <col:151> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55b4b10b6350 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55b4b10b6338 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55b4b10b62e8 <col:169> '_Bool' lvalue Var 0x55b4b10b4d98 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55b4b10b63c8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55b4b10b6388 <col:186> 'int' lvalue Var 0x55b4b10b5200 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55b4b10b63e0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55b4b10b63a8 <col:198> 'int' lvalue Var 0x55b4b10b5200 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55b4b10b6a38 <line:716:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55b4b10b6548 <col:3> 'int' lvalue Var 0x55b4b10b52f8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55b4b10b6a08 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55b4b10b69d8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b4b10b69c0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b4b10b6568 <col:15> '_Bool' lvalue Var 0x55b4b10b5580 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b4b10b69f0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b4b10b6588 <col:31> 'int' lvalue Var 0x55b4b10b52f8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55b4b10b69a0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55b4b10b6970 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55b4b10b6798 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55b4b10b66b8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55b4b10b65e0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55b4b10b65c8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55b4b10b65a8 <col:45> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55b4b10b6698 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55b4b10b6630 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55b4b10b6618 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55b4b10b65f8 <col:64> '_Bool' lvalue Var 0x55b4b10b4d98 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55b4b10b6680 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55b4b10b6668 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55b4b10b6648 <col:83> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55b4b10b6778 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55b4b10b6710 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55b4b10b66f8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55b4b10b66d8 <col:102> '_Bool' lvalue Var 0x55b4b10b4d98 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55b4b10b6760 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55b4b10b6748 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55b4b10b6728 <col:121> '_Bool' lvalue Var 0x55b4b10b4f98 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55b4b10b6958 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b4b10b67b8 <col:138> 'int' lvalue Var 0x55b4b10b52f8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55b4b10b6938 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55b4b10b6908 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55b4b10b6878 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55b4b10b6830 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55b4b10b6818 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55b4b10b67d8 <col:151> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55b4b10b6860 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55b4b10b6848 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55b4b10b67f8 <col:169> '_Bool' lvalue Var 0x55b4b10b4d98 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55b4b10b68d8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55b4b10b6898 <col:186> 'int' lvalue Var 0x55b4b10b52f8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55b4b10b68f0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55b4b10b68b8 <col:198> 'int' lvalue Var 0x55b4b10b52f8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55b4b10b7008 <line:717:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10b6a58 <col:3> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10b6ff0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b4b10b6fc0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55b4b10b6f78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b4b10b6f60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b4b10b6a78 <col:20> '_Bool' lvalue Var 0x55b4b10b5580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b4b10b6fa8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b4b10b6f90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b4b10b6a98 <col:36> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55b4b10b6f40 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55b4b10b6ee8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55b4b10b6ca8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b4b10b6bc8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b4b10b6af0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b4b10b6ad8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b4b10b6ab8 <col:55> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b4b10b6ba8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b4b10b6b40 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b4b10b6b28 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b4b10b6b08 <col:74> '_Bool' lvalue Var 0x55b4b10b4d98 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55b4b10b6b90 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b4b10b6b78 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b4b10b6b58 <col:93> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b4b10b6c88 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b4b10b6c20 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b4b10b6c08 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b4b10b6be8 <col:112> '_Bool' lvalue Var 0x55b4b10b4d98 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55b4b10b6c70 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b4b10b6c58 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b4b10b6c38 <col:131> '_Bool' lvalue Var 0x55b4b10b4f98 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55b4b10b6ed0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b4b10b6eb8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b4b10b6cc8 <col:148> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55b4b10b6e98 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55b4b10b6e68 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55b4b10b6d88 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b4b10b6d40 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b4b10b6d28 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b4b10b6ce8 <col:166> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b4b10b6d70 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b4b10b6d58 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b4b10b6d08 <col:184> '_Bool' lvalue Var 0x55b4b10b4d98 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55b4b10b6e20 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b4b10b6dd8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b4b10b6da8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b4b10b6e50 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55b4b10b6e38 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55b4b10b6e00 <col:212> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b4b10b75d0 <line:718:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10b7028 <col:3> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10b75b8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b4b10b7588 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55b4b10b7540 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b4b10b7528 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b4b10b7048 <col:20> '_Bool' lvalue Var 0x55b4b10b5580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b4b10b7570 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b4b10b7558 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b4b10b7068 <col:36> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55b4b10b7508 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55b4b10b74d8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55b4b10b7278 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b4b10b7198 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b4b10b70c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b4b10b70a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b4b10b7088 <col:55> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b4b10b7178 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b4b10b7110 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b4b10b70f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b4b10b70d8 <col:74> '_Bool' lvalue Var 0x55b4b10b4d98 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55b4b10b7160 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b4b10b7148 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b4b10b7128 <col:93> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b4b10b7258 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b4b10b71f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b4b10b71d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b4b10b71b8 <col:112> '_Bool' lvalue Var 0x55b4b10b4d98 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55b4b10b7240 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b4b10b7228 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b4b10b7208 <col:131> '_Bool' lvalue Var 0x55b4b10b4f98 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55b4b10b74c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b4b10b74a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b4b10b7298 <col:148> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55b4b10b7488 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55b4b10b7458 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55b4b10b7358 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b4b10b7310 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b4b10b72f8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b4b10b72b8 <col:166> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b4b10b7340 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b4b10b7328 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b4b10b72d8 <col:184> '_Bool' lvalue Var 0x55b4b10b4d98 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55b4b10b7428 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b4b10b73a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b4b10b7378 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b4b10b7440 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55b4b10b7400 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55b4b10b73d0 <col:219> 'int' 0
|   |-BinaryOperator 0x55b4b10b7b78 <line:719:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10b75f0 <col:3> '_Bool' lvalue Var 0x55b4b10b4d98 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10b7b60 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b4b10b7b30 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55b4b10b7ae8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b4b10b7ad0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b4b10b7610 <col:20> '_Bool' lvalue Var 0x55b4b10b5580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b4b10b7b18 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b4b10b7b00 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b4b10b7630 <col:36> '_Bool' lvalue Var 0x55b4b10b4d98 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55b4b10b7ab0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55b4b10b7a80 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55b4b10b7840 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b4b10b7760 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b4b10b7688 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b4b10b7670 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b4b10b7650 <col:55> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b4b10b7740 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b4b10b76d8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b4b10b76c0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b4b10b76a0 <col:74> '_Bool' lvalue Var 0x55b4b10b4d98 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55b4b10b7728 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b4b10b7710 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b4b10b76f0 <col:93> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b4b10b7820 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b4b10b77b8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b4b10b77a0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b4b10b7780 <col:112> '_Bool' lvalue Var 0x55b4b10b4d98 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55b4b10b7808 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b4b10b77f0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b4b10b77d0 <col:131> '_Bool' lvalue Var 0x55b4b10b4f98 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55b4b10b7a68 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b4b10b7a50 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b4b10b7860 <col:148> '_Bool' lvalue Var 0x55b4b10b4d98 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55b4b10b7a30 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55b4b10b7a00 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55b4b10b7920 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b4b10b78d8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b4b10b78c0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b4b10b7880 <col:166> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b4b10b7908 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b4b10b78f0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b4b10b78a0 <col:184> '_Bool' lvalue Var 0x55b4b10b4d98 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55b4b10b79b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b4b10b7970 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b4b10b7940 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b4b10b79e8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55b4b10b79d0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55b4b10b7998 <col:212> '_Bool' lvalue Var 0x55b4b10b4d98 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55b4b10b8150 <line:720:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10b7b98 <col:3> '_Bool' lvalue Var 0x55b4b10b4f98 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10b8138 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b4b10b8108 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55b4b10b80c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b4b10b80a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b4b10b7bb8 <col:20> '_Bool' lvalue Var 0x55b4b10b5580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b4b10b80f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b4b10b80d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b4b10b7bd8 <col:36> '_Bool' lvalue Var 0x55b4b10b4f98 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55b4b10b8088 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55b4b10b8058 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55b4b10b7de8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b4b10b7d08 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b4b10b7c30 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b4b10b7c18 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b4b10b7bf8 <col:55> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b4b10b7ce8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b4b10b7c80 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b4b10b7c68 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b4b10b7c48 <col:74> '_Bool' lvalue Var 0x55b4b10b4d98 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55b4b10b7cd0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b4b10b7cb8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b4b10b7c98 <col:93> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b4b10b7dc8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b4b10b7d60 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b4b10b7d48 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b4b10b7d28 <col:112> '_Bool' lvalue Var 0x55b4b10b4d98 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55b4b10b7db0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b4b10b7d98 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b4b10b7d78 <col:131> '_Bool' lvalue Var 0x55b4b10b4f98 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55b4b10b8040 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b4b10b8028 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b4b10b7e08 <col:148> '_Bool' lvalue Var 0x55b4b10b4f98 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55b4b10b8008 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55b4b10b7fd8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55b4b10b7ec8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b4b10b7e80 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b4b10b7e68 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b4b10b7e28 <col:166> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b4b10b7eb0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b4b10b7e98 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b4b10b7e48 <col:184> '_Bool' lvalue Var 0x55b4b10b4d98 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55b4b10b7fa8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b4b10b7f18 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b4b10b7ee8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b4b10b7fc0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55b4b10b7f80 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55b4b10b7f50 <col:219> 'int' 0
|   |-BinaryOperator 0x55b4b10b81c8 <line:721:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55b4b10b8170 <col:3> 'int' lvalue Var 0x55b4b10b4860 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55b4b10b81b0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b4b10b8190 <col:25> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
|   |-BinaryOperator 0x55b4b10b82f8 <line:722:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55b4b10b81e8 <col:3> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
|   | `-ConditionalOperator 0x55b4b10b82c8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55b4b10b8280 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b4b10b8268 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b4b10b8208 <col:7> '_Bool' lvalue Var 0x55b4b10b4c28 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55b4b10b8298 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b4b10b8228 <col:25> 'int' lvalue Var 0x55b4b10b4ca8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55b4b10b82b0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55b4b10b8248 <col:37> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
|   |-BinaryOperator 0x55b4b10b8390 <line:723:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10b8318 <col:3> '_Bool' lvalue Var 0x55b4b10b4c28 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55b4b10b8368 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55b4b10b8338 <col:28> 'int' 0
|   |-CallExpr 0x55b4b10b83e8 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b4b10b83d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10b83b0 <col:3> 'void ()' Function 0x55b4b105b570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b4b10b8440 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b4b10b8428 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10b8408 <col:3> 'void ()' Function 0x55b4b105b4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55b4b10b8498 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b4b10b8480 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10b8460 <col:3> 'void ()' Function 0x55b4b105b570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b4b10b84f0 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b4b10b84d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10b84b8 <col:3> 'void ()' Function 0x55b4b105b4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b4b10b85a8 <line:728:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55b4b10b8510 <col:3> 'int' lvalue Var 0x55b4b10b4740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55b4b10b8588 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55b4b10b8570 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b4b10b8530 <col:22> 'int' lvalue Var 0x55b4b10b4740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55b4b10b8550 <col:41> 'int' 1
|   |-CallExpr 0x55b4b10b8600 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b4b10b85e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10b85c8 <col:3> 'void ()' Function 0x55b4b105b570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55b4b10b86a8 <line:730:3, col:36>
|     `-CallExpr 0x55b4b10b8688 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55b4b10b8670 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55b4b10b8620 <col:10> 'void *(void)' Function 0x55b4b105afc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55b4b10b8850 prev 0x55b4b10b4268 <line:732:1, line:771:1> line:732:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55b4b10b87b8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55b4b10bd190 <line:733:1, line:771:1>
|   |-CallExpr 0x55b4b10b8930 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b4b10b8918 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10b88f8 <col:3> 'void ()' Function 0x55b4b105b4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b4b10b8990 <line:735:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55b4b10b8950 <col:3> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
|   | `-IntegerLiteral 0x55b4b10b8970 <col:7> 'int' 1
|   |-CallExpr 0x55b4b10b89e8 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b4b10b89d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10b89b0 <col:3> 'void ()' Function 0x55b4b105b570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b4b10b8a40 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b4b10b8a28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10b8a08 <col:3> 'void ()' Function 0x55b4b105b4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b4b10b8d28 <line:738:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55b4b10b8a60 <col:3> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
|   | `-ConditionalOperator 0x55b4b10b8cf8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55b4b10b8b20 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55b4b10b8ad8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55b4b10b8ac0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55b4b10b8a80 <col:7> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55b4b10b8b08 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55b4b10b8af0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55b4b10b8aa0 <col:25> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b4b10b8ce0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b4b10b8b40 <col:42> 'int' lvalue Var 0x55b4b10b5200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55b4b10b8cc0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55b4b10b8c90 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55b4b10b8c00 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55b4b10b8bb8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55b4b10b8ba0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55b4b10b8b60 <col:55> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55b4b10b8be8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55b4b10b8bd0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55b4b10b8b80 <col:73> '_Bool' lvalue Var 0x55b4b10b5010 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55b4b10b8c60 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b4b10b8c20 <col:90> 'int' lvalue Var 0x55b4b10b52f8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55b4b10b8c78 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b4b10b8c40 <col:102> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
|   |-BinaryOperator 0x55b4b10b8f30 <line:739:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10b8d48 <col:3> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10b8f18 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b4b10b8ee8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55b4b10b8e08 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55b4b10b8dc0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55b4b10b8da8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55b4b10b8d68 <col:20> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55b4b10b8df0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55b4b10b8dd8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55b4b10b8d88 <col:38> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b4b10b8ea0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b4b10b8e58 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b4b10b8e28 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55b4b10b8ed0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b4b10b8eb8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b4b10b8e80 <col:66> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b4b10b9228 <line:740:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10b8f60 <col:3> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10b9210 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b4b10b91e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55b4b10b9100 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55b4b10b9020 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55b4b10b8fd8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55b4b10b8fc0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55b4b10b8f80 <col:20> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55b4b10b9008 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55b4b10b8ff0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55b4b10b8fa0 <col:38> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55b4b10b90e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55b4b10b9098 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55b4b10b9080 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55b4b10b9040 <col:56> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55b4b10b90c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55b4b10b90b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55b4b10b9060 <col:74> '_Bool' lvalue Var 0x55b4b10b5010 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b4b10b9198 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b4b10b9150 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b4b10b9120 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55b4b10b91c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b4b10b91b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b4b10b9178 <col:102> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55b4b10b9430 <line:741:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10b9248 <col:3> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10b9418 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b4b10b93e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55b4b10b9308 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55b4b10b92c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55b4b10b92a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55b4b10b9268 <col:20> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55b4b10b92f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55b4b10b92d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55b4b10b9288 <col:38> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b4b10b93a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b4b10b9358 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b4b10b9328 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55b4b10b93d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b4b10b93b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b4b10b9380 <col:66> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55b4b10b9718 <line:742:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10b9450 <col:3> '_Bool' lvalue Var 0x55b4b10b5010 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10b9700 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b4b10b96d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55b4b10b95f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55b4b10b9510 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55b4b10b94c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55b4b10b94b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55b4b10b9470 <col:20> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55b4b10b94f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55b4b10b94e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55b4b10b9490 <col:38> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55b4b10b95d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55b4b10b9588 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55b4b10b9570 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55b4b10b9530 <col:56> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55b4b10b95b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55b4b10b95a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55b4b10b9550 <col:74> '_Bool' lvalue Var 0x55b4b10b5010 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b4b10b9688 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b4b10b9640 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b4b10b9610 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55b4b10b96b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b4b10b96a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b4b10b9668 <col:102> '_Bool' lvalue Var 0x55b4b10b5010 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55b4b10b9770 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b4b10b9758 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10b9738 <col:3> 'void ()' Function 0x55b4b105b570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b4b10b97c8 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b4b10b97b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10b9790 <col:3> 'void ()' Function 0x55b4b105b4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b4b10b9860 <line:745:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10b97e8 <col:3> '_Bool' lvalue Var 0x55b4b10b5508 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55b4b10b9840 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55b4b10b9828 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55b4b10b9808 <col:19> '_Bool (void)' Function 0x55b4b105ac80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55b4b10b98f8 <line:746:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10b9880 <col:3> '_Bool' lvalue Var 0x55b4b10b5580 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55b4b10b98d8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55b4b10b98c0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55b4b10b98a0 <col:19> '_Bool (void)' Function 0x55b4b105ac80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55b4b10b9970 <line:747:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10b9918 <col:3> '_Bool' lvalue Var 0x55b4b10b4c28 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10b9958 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b4b10b9938 <col:21> '_Bool' lvalue Var 0x55b4b10b5580 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55b4b10b99e8 <line:748:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55b4b10b9990 <col:3> 'int' lvalue Var 0x55b4b10b4ca8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55b4b10b99d0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b4b10b99b0 <col:15> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
|   |-BinaryOperator 0x55b4b10b9e20 <line:749:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55b4b10b9a08 <col:3> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
|   | `-ConditionalOperator 0x55b4b10b9df0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55b4b10b9c18 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55b4b10b9b38 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55b4b10b9a60 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55b4b10b9a48 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55b4b10b9a28 <col:8> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55b4b10b9b18 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55b4b10b9ab0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55b4b10b9a98 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55b4b10b9a78 <col:27> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55b4b10b9b00 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55b4b10b9ae8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55b4b10b9ac8 <col:46> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55b4b10b9bf8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55b4b10b9b90 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55b4b10b9b78 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55b4b10b9b58 <col:65> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55b4b10b9be0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55b4b10b9bc8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55b4b10b9ba8 <col:84> '_Bool' lvalue Var 0x55b4b10b5010 'x$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b4b10b9dd8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b4b10b9c38 <col:101> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
|   |   `-ParenExpr 0x55b4b10b9db8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55b4b10b9d88 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55b4b10b9cf8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55b4b10b9cb0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55b4b10b9c98 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55b4b10b9c58 <col:106> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55b4b10b9ce0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55b4b10b9cc8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55b4b10b9c78 <col:124> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55b4b10b9d58 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b4b10b9d18 <col:141> 'int' lvalue Var 0x55b4b10b5200 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55b4b10b9d70 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b4b10b9d38 <col:153> 'int' lvalue Var 0x55b4b10b52f8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55b4b10ba340 <line:750:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55b4b10b9e40 <col:3> 'int' lvalue Var 0x55b4b10b5200 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55b4b10ba310 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55b4b10ba2e0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b4b10ba2c8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b4b10b9e60 <col:15> '_Bool' lvalue Var 0x55b4b10b5580 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b4b10ba2f8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b4b10b9e80 <col:31> 'int' lvalue Var 0x55b4b10b5200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55b4b10ba2a8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55b4b10ba278 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55b4b10ba0a0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55b4b10b9fc0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55b4b10b9ed8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55b4b10b9ec0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55b4b10b9ea0 <col:45> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55b4b10b9fa0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55b4b10b9f28 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55b4b10b9f10 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55b4b10b9ef0 <col:64> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55b4b10b9f88 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55b4b10b9f70 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55b4b10b9f40 <col:83> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55b4b10ba080 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55b4b10ba018 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55b4b10ba000 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55b4b10b9fe0 <col:102> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55b4b10ba068 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55b4b10ba050 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55b4b10ba030 <col:121> '_Bool' lvalue Var 0x55b4b10b5010 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55b4b10ba260 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b4b10ba0c0 <col:138> 'int' lvalue Var 0x55b4b10b5200 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55b4b10ba240 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55b4b10ba210 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55b4b10ba180 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55b4b10ba138 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55b4b10ba120 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55b4b10ba0e0 <col:151> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55b4b10ba168 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55b4b10ba150 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55b4b10ba100 <col:169> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55b4b10ba1e0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55b4b10ba1a0 <col:186> 'int' lvalue Var 0x55b4b10b5200 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55b4b10ba1f8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55b4b10ba1c0 <col:198> 'int' lvalue Var 0x55b4b10b5200 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55b4b10ba850 <line:751:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55b4b10ba360 <col:3> 'int' lvalue Var 0x55b4b10b52f8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55b4b10ba820 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55b4b10ba7f0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b4b10ba7d8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b4b10ba380 <col:15> '_Bool' lvalue Var 0x55b4b10b5580 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b4b10ba808 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b4b10ba3a0 <col:31> 'int' lvalue Var 0x55b4b10b52f8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55b4b10ba7b8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55b4b10ba788 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55b4b10ba5b0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55b4b10ba4d0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55b4b10ba3f8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55b4b10ba3e0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55b4b10ba3c0 <col:45> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55b4b10ba4b0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55b4b10ba448 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55b4b10ba430 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55b4b10ba410 <col:64> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55b4b10ba498 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55b4b10ba480 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55b4b10ba460 <col:83> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55b4b10ba590 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55b4b10ba528 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55b4b10ba510 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55b4b10ba4f0 <col:102> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55b4b10ba578 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55b4b10ba560 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55b4b10ba540 <col:121> '_Bool' lvalue Var 0x55b4b10b5010 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55b4b10ba770 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b4b10ba5d0 <col:138> 'int' lvalue Var 0x55b4b10b52f8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55b4b10ba750 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55b4b10ba720 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55b4b10ba690 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55b4b10ba648 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55b4b10ba630 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55b4b10ba5f0 <col:151> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55b4b10ba678 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55b4b10ba660 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55b4b10ba610 <col:169> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55b4b10ba6f0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55b4b10ba6b0 <col:186> 'int' lvalue Var 0x55b4b10b52f8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55b4b10ba708 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55b4b10ba6d0 <col:198> 'int' lvalue Var 0x55b4b10b52f8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55b4b10badf8 <line:752:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10ba870 <col:3> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10bade0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b4b10badb0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55b4b10bad68 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b4b10bad50 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b4b10ba890 <col:20> '_Bool' lvalue Var 0x55b4b10b5580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b4b10bad98 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b4b10bad80 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b4b10ba8b0 <col:36> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55b4b10bad30 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55b4b10bad00 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55b4b10baac0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b4b10ba9e0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b4b10ba908 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b4b10ba8f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b4b10ba8d0 <col:55> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b4b10ba9c0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b4b10ba958 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b4b10ba940 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b4b10ba920 <col:74> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55b4b10ba9a8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b4b10ba990 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b4b10ba970 <col:93> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b4b10baaa0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b4b10baa38 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b4b10baa20 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b4b10baa00 <col:112> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55b4b10baa88 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b4b10baa70 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b4b10baa50 <col:131> '_Bool' lvalue Var 0x55b4b10b5010 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55b4b10bace8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b4b10bacd0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b4b10baae0 <col:148> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55b4b10bacb0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55b4b10bac80 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55b4b10baba0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b4b10bab58 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b4b10bab40 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b4b10bab00 <col:166> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b4b10bab88 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b4b10bab70 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b4b10bab20 <col:184> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55b4b10bac38 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b4b10babf0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b4b10babc0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b4b10bac68 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55b4b10bac50 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55b4b10bac18 <col:212> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b4b10bb3d8 <line:753:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10bae18 <col:3> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10bb3c0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b4b10bb390 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55b4b10bb348 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b4b10bb330 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b4b10bae38 <col:20> '_Bool' lvalue Var 0x55b4b10b5580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b4b10bb378 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b4b10bb360 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b4b10bae58 <col:36> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55b4b10bb310 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55b4b10bb2e0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55b4b10bb080 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b4b10bafa0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b4b10baeb0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b4b10bae98 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b4b10bae78 <col:55> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b4b10baf80 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b4b10baf00 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b4b10baee8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b4b10baec8 <col:74> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55b4b10baf50 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b4b10baf38 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b4b10baf18 <col:93> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b4b10bb060 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b4b10baff8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b4b10bafe0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b4b10bafc0 <col:112> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55b4b10bb048 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b4b10bb030 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b4b10bb010 <col:131> '_Bool' lvalue Var 0x55b4b10b5010 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55b4b10bb2c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b4b10bb2b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b4b10bb0a0 <col:148> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55b4b10bb290 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55b4b10bb260 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55b4b10bb160 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b4b10bb118 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b4b10bb100 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b4b10bb0c0 <col:166> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b4b10bb148 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b4b10bb130 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b4b10bb0e0 <col:184> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55b4b10bb230 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b4b10bb1b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b4b10bb180 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b4b10bb248 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55b4b10bb208 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55b4b10bb1d8 <col:219> 'int' 0
|   |-BinaryOperator 0x55b4b10bb980 <line:754:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10bb3f8 <col:3> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10bb968 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b4b10bb938 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55b4b10bb8f0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b4b10bb8d8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b4b10bb418 <col:20> '_Bool' lvalue Var 0x55b4b10b5580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b4b10bb920 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b4b10bb908 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b4b10bb438 <col:36> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55b4b10bb8b8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55b4b10bb888 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55b4b10bb648 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b4b10bb568 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b4b10bb490 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b4b10bb478 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b4b10bb458 <col:55> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b4b10bb548 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b4b10bb4e0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b4b10bb4c8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b4b10bb4a8 <col:74> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55b4b10bb530 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b4b10bb518 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b4b10bb4f8 <col:93> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b4b10bb628 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b4b10bb5c0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b4b10bb5a8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b4b10bb588 <col:112> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55b4b10bb610 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b4b10bb5f8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b4b10bb5d8 <col:131> '_Bool' lvalue Var 0x55b4b10b5010 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55b4b10bb870 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b4b10bb858 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b4b10bb668 <col:148> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55b4b10bb838 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55b4b10bb808 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55b4b10bb728 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b4b10bb6e0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b4b10bb6c8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b4b10bb688 <col:166> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b4b10bb710 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b4b10bb6f8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b4b10bb6a8 <col:184> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55b4b10bb7c0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b4b10bb778 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b4b10bb748 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b4b10bb7f0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55b4b10bb7d8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55b4b10bb7a0 <col:212> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55b4b10bbf48 <line:755:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10bb9a0 <col:3> '_Bool' lvalue Var 0x55b4b10b5010 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10bbf30 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b4b10bbf00 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55b4b10bbeb8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b4b10bbea0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b4b10bb9c0 <col:20> '_Bool' lvalue Var 0x55b4b10b5580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b4b10bbee8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b4b10bbed0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b4b10bb9e0 <col:36> '_Bool' lvalue Var 0x55b4b10b5010 'x$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55b4b10bbe80 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55b4b10bbe50 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55b4b10bbbf0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b4b10bbb10 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b4b10bba38 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b4b10bba20 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b4b10bba00 <col:55> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b4b10bbaf0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b4b10bba88 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b4b10bba70 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b4b10bba50 <col:74> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55b4b10bbad8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b4b10bbac0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b4b10bbaa0 <col:93> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b4b10bbbd0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b4b10bbb68 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b4b10bbb50 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b4b10bbb30 <col:112> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55b4b10bbbb8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b4b10bbba0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b4b10bbb80 <col:131> '_Bool' lvalue Var 0x55b4b10b5010 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55b4b10bbe38 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b4b10bbe20 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b4b10bbc10 <col:148> '_Bool' lvalue Var 0x55b4b10b5010 'x$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55b4b10bbe00 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55b4b10bbdd0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55b4b10bbcd0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b4b10bbc88 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b4b10bbc70 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b4b10bbc30 <col:166> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b4b10bbcb8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b4b10bbca0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b4b10bbc50 <col:184> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55b4b10bbda0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b4b10bbd20 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b4b10bbcf0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b4b10bbdb8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55b4b10bbd78 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55b4b10bbd48 <col:219> 'int' 0
|   |-BinaryOperator 0x55b4b10bbfe8 <line:756:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55b4b10bbf90 <col:3> 'int' lvalue Var 0x55b4b10b4980 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55b4b10bbfd0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b4b10bbfb0 <col:25> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
|   |-BinaryOperator 0x55b4b10bc118 <line:757:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55b4b10bc008 <col:3> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
|   | `-ConditionalOperator 0x55b4b10bc0e8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55b4b10bc0a0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b4b10bc088 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b4b10bc028 <col:7> '_Bool' lvalue Var 0x55b4b10b4c28 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55b4b10bc0b8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b4b10bc048 <col:25> 'int' lvalue Var 0x55b4b10b4ca8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55b4b10bc0d0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55b4b10bc068 <col:37> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
|   |-BinaryOperator 0x55b4b10bc1b0 <line:758:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10bc138 <col:3> '_Bool' lvalue Var 0x55b4b10b4c28 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55b4b10bc188 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55b4b10bc158 <col:28> 'int' 0
|   |-CallExpr 0x55b4b10bc208 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b4b10bc1f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10bc1d0 <col:3> 'void ()' Function 0x55b4b105b570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b4b10bc260 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b4b10bc248 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10bc228 <col:3> 'void ()' Function 0x55b4b105b4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b4b10bc548 <line:761:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55b4b10bc280 <col:3> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
|   | `-ConditionalOperator 0x55b4b10bc518 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55b4b10bc340 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55b4b10bc2f8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55b4b10bc2e0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55b4b10bc2a0 <col:7> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55b4b10bc328 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55b4b10bc310 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55b4b10bc2c0 <col:25> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b4b10bc500 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b4b10bc360 <col:42> 'int' lvalue Var 0x55b4b10b5200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55b4b10bc4e0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55b4b10bc4b0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55b4b10bc420 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55b4b10bc3d8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55b4b10bc3c0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55b4b10bc380 <col:55> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55b4b10bc408 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55b4b10bc3f0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55b4b10bc3a0 <col:73> '_Bool' lvalue Var 0x55b4b10b5010 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55b4b10bc480 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b4b10bc440 <col:90> 'int' lvalue Var 0x55b4b10b52f8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55b4b10bc498 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b4b10bc460 <col:102> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
|   |-BinaryOperator 0x55b4b10bc750 <line:762:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10bc568 <col:3> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10bc738 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b4b10bc708 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55b4b10bc628 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55b4b10bc5e0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55b4b10bc5c8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55b4b10bc588 <col:20> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55b4b10bc610 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55b4b10bc5f8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55b4b10bc5a8 <col:38> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b4b10bc6c0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b4b10bc678 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b4b10bc648 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55b4b10bc6f0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b4b10bc6d8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b4b10bc6a0 <col:66> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b4b10bca38 <line:763:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10bc770 <col:3> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10bca20 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b4b10bc9f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55b4b10bc910 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55b4b10bc830 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55b4b10bc7e8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55b4b10bc7d0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55b4b10bc790 <col:20> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55b4b10bc818 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55b4b10bc800 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55b4b10bc7b0 <col:38> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55b4b10bc8f0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55b4b10bc8a8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55b4b10bc890 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55b4b10bc850 <col:56> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55b4b10bc8d8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55b4b10bc8c0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55b4b10bc870 <col:74> '_Bool' lvalue Var 0x55b4b10b5010 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b4b10bc9a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b4b10bc960 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b4b10bc930 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55b4b10bc9d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b4b10bc9c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b4b10bc988 <col:102> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55b4b10bcc40 <line:764:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10bca58 <col:3> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10bcc28 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b4b10bcbf8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55b4b10bcb18 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55b4b10bcad0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55b4b10bcab8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55b4b10bca78 <col:20> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55b4b10bcb00 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55b4b10bcae8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55b4b10bca98 <col:38> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b4b10bcbb0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b4b10bcb68 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b4b10bcb38 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55b4b10bcbe0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b4b10bcbc8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b4b10bcb90 <col:66> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55b4b10bcf28 <line:765:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10bcc60 <col:3> '_Bool' lvalue Var 0x55b4b10b5010 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10bcf10 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b4b10bcee0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55b4b10bce00 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55b4b10bcd20 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55b4b10bccd8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55b4b10bccc0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55b4b10bcc80 <col:20> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55b4b10bcd08 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55b4b10bccf0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55b4b10bcca0 <col:38> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55b4b10bcde0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55b4b10bcd98 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55b4b10bcd80 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55b4b10bcd40 <col:56> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55b4b10bcdc8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55b4b10bcdb0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55b4b10bcd60 <col:74> '_Bool' lvalue Var 0x55b4b10b5010 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b4b10bce98 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b4b10bce50 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b4b10bce20 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55b4b10bcec8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b4b10bceb0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b4b10bce78 <col:102> '_Bool' lvalue Var 0x55b4b10b5010 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55b4b10bcfa0 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b4b10bcf68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10bcf48 <col:3> 'void ()' Function 0x55b4b105b570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b4b10bcff8 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b4b10bcfe0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10bcfc0 <col:3> 'void ()' Function 0x55b4b105b4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b4b10bd0b0 <line:768:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55b4b10bd018 <col:3> 'int' lvalue Var 0x55b4b10b4740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55b4b10bd090 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55b4b10bd078 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b4b10bd038 <col:22> 'int' lvalue Var 0x55b4b10b4740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55b4b10bd058 <col:41> 'int' 1
|   |-CallExpr 0x55b4b10bd108 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b4b10bd0f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10bd0d0 <col:3> 'void ()' Function 0x55b4b105b570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55b4b10bd180 <line:770:3, col:36>
|     `-CallExpr 0x55b4b10bd160 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55b4b10bd148 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55b4b10bd128 <col:10> 'void *(void)' Function 0x55b4b105afc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55b4b10bd378 prev 0x55b4b10b43c0 <line:772:1, line:800:1> line:772:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55b4b10bd2e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55b4b10beb28 <line:773:1, line:800:1>
|   |-CallExpr 0x55b4b10bd458 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b4b10bd440 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10bd420 <col:3> 'void ()' Function 0x55b4b105b4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b4b10bd4d0 <line:775:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55b4b10bd478 <col:3> 'int' lvalue Var 0x55b4b10b52f8 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55b4b10bd4b8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b4b10bd498 <col:15> 'int' lvalue Var 0x55b4b10b5200 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55b4b10bd530 <line:776:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55b4b10bd4f0 <col:3> 'int' lvalue Var 0x55b4b10b5200 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x55b4b10bd510 <col:15> 'int' 2
|   |-BinaryOperator 0x55b4b10bd5a8 <line:777:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10bd550 <col:3> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10bd590 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b4b10bd570 <col:20> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b4b10bd640 <line:778:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10bd5c8 <col:3> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55b4b10bd618 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55b4b10bd5e8 <col:27> 'int' 1
|   |-CallExpr 0x55b4b10bd7c8 <line:779:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55b4b10bd7b0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55b4b10bd660 <col:3> 'void (int)' Function 0x55b4b105b238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55b4b10bd760 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55b4b10bd740 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55b4b10bd720 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55b4b10bd6d8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55b4b10bd6c0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55b4b10bd680 <col:23> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55b4b10bd708 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55b4b10bd6f0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55b4b10bd6a0 <col:41> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b4b10bd848 <line:780:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10bd7f0 <col:3> '_Bool' lvalue Var 0x55b4b10b4f20 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10bd830 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b4b10bd810 <col:20> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55b4b10bd8c0 <line:781:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10bd868 <col:3> '_Bool' lvalue Var 0x55b4b10b4f98 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10bd8a8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b4b10bd888 <col:20> '_Bool' lvalue Var 0x55b4b10b4d98 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55b4b10bd938 <line:782:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10bd8e0 <col:3> '_Bool' lvalue Var 0x55b4b10b5010 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10bd920 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b4b10bd900 <col:20> '_Bool' lvalue Var 0x55b4b10b4e10 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55b4b10bd9b0 <line:783:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10bd958 <col:3> '_Bool' lvalue Var 0x55b4b10b5088 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10bd998 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b4b10bd978 <col:20> '_Bool' lvalue Var 0x55b4b10b4e88 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55b4b10bda48 <line:784:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10bd9d0 <col:3> '_Bool' lvalue Var 0x55b4b10b4e88 'x$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x55b4b10bda20 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55b4b10bd9f0 <col:27> 'int' 1
|   |-CallExpr 0x55b4b10bdaa0 <line:785:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b4b10bda88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10bda68 <col:3> 'void ()' Function 0x55b4b105b570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b4b10bdaf8 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b4b10bdae0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10bdac0 <col:3> 'void ()' Function 0x55b4b105b4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b4b10bdb58 <line:787:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55b4b10bdb18 <col:3> 'int' lvalue Var 0x55b4b10b5470 'y' 'int'
|   | `-IntegerLiteral 0x55b4b10bdb38 <col:7> 'int' 1
|   |-CallExpr 0x55b4b10bdbb0 <line:788:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b4b10bdb98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10bdb78 <col:3> 'void ()' Function 0x55b4b105b570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b4b10bdc08 <line:789:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b4b10bdbf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10bdbd0 <col:3> 'void ()' Function 0x55b4b105b4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b4b10bdef0 <line:790:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55b4b10bdc28 <col:3> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
|   | `-ConditionalOperator 0x55b4b10bdec0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55b4b10bdce8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55b4b10bdca0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55b4b10bdc88 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55b4b10bdc48 <col:7> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55b4b10bdcd0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55b4b10bdcb8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55b4b10bdc68 <col:25> '_Bool' lvalue Var 0x55b4b10b4e88 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55b4b10bdea8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b4b10bdd08 <col:42> 'int' lvalue Var 0x55b4b10b5200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55b4b10bde88 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55b4b10bde58 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55b4b10bddc8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55b4b10bdd80 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55b4b10bdd68 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55b4b10bdd28 <col:55> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55b4b10bddb0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55b4b10bdd98 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55b4b10bdd48 <col:73> '_Bool' lvalue Var 0x55b4b10b5088 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55b4b10bde28 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b4b10bdde8 <col:90> 'int' lvalue Var 0x55b4b10b52f8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55b4b10bde40 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b4b10bde08 <col:102> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
|   |-BinaryOperator 0x55b4b10be108 <line:791:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10bdf10 <col:3> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10be0f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b4b10be0c0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55b4b10bdfe0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55b4b10bdf88 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55b4b10bdf70 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55b4b10bdf30 <col:20> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55b4b10bdfc8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55b4b10bdfb0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55b4b10bdf50 <col:38> '_Bool' lvalue Var 0x55b4b10b4e88 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55b4b10be078 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b4b10be030 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b4b10be000 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55b4b10be0a8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b4b10be090 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b4b10be058 <col:66> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b4b10be3f0 <line:792:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10be128 <col:3> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10be3d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b4b10be3a8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55b4b10be2c8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55b4b10be1e8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55b4b10be1a0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55b4b10be188 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55b4b10be148 <col:20> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55b4b10be1d0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55b4b10be1b8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55b4b10be168 <col:38> '_Bool' lvalue Var 0x55b4b10b4e88 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55b4b10be2a8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55b4b10be260 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55b4b10be248 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55b4b10be208 <col:56> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55b4b10be290 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55b4b10be278 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55b4b10be228 <col:74> '_Bool' lvalue Var 0x55b4b10b5088 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55b4b10be360 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b4b10be318 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b4b10be2e8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55b4b10be390 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b4b10be378 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b4b10be340 <col:102> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55b4b10be5f8 <line:793:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10be410 <col:3> '_Bool' lvalue Var 0x55b4b10b4e88 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10be5e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b4b10be5b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55b4b10be4d0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55b4b10be488 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55b4b10be470 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55b4b10be430 <col:20> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55b4b10be4b8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55b4b10be4a0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55b4b10be450 <col:38> '_Bool' lvalue Var 0x55b4b10b4e88 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55b4b10be568 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b4b10be520 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b4b10be4f0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55b4b10be598 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b4b10be580 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b4b10be548 <col:66> '_Bool' lvalue Var 0x55b4b10b4e88 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55b4b10be8e0 <line:794:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55b4b10be618 <col:3> '_Bool' lvalue Var 0x55b4b10b5088 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55b4b10be8c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b4b10be898 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55b4b10be7b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55b4b10be6d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55b4b10be690 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55b4b10be678 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55b4b10be638 <col:20> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55b4b10be6c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55b4b10be6a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55b4b10be658 <col:38> '_Bool' lvalue Var 0x55b4b10b4e88 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55b4b10be798 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55b4b10be750 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55b4b10be738 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55b4b10be6f8 <col:56> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55b4b10be780 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55b4b10be768 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55b4b10be718 <col:74> '_Bool' lvalue Var 0x55b4b10b5088 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55b4b10be850 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b4b10be808 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b4b10be7d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55b4b10be880 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b4b10be868 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b4b10be830 <col:102> '_Bool' lvalue Var 0x55b4b10b5088 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55b4b10be938 <line:795:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b4b10be920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10be900 <col:3> 'void ()' Function 0x55b4b105b570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b4b10be990 <line:796:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b4b10be978 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10be958 <col:3> 'void ()' Function 0x55b4b105b4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b4b10bea48 <line:797:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55b4b10be9b0 <col:3> 'int' lvalue Var 0x55b4b10b4740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55b4b10bea28 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55b4b10bea10 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b4b10be9d0 <col:22> 'int' lvalue Var 0x55b4b10b4740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55b4b10be9f0 <col:41> 'int' 1
|   |-CallExpr 0x55b4b10beaa0 <line:798:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b4b10bea88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b4b10bea68 <col:3> 'void ()' Function 0x55b4b105b570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55b4b10beb18 <line:799:3, col:36>
|     `-CallExpr 0x55b4b10beaf8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55b4b10beae0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55b4b10beac0 <col:10> 'void *(void)' Function 0x55b4b105afc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55b4b10bec28 prev 0x55b4b10b4488 <line:801:1, line:803:1> line:801:6 fence 'void ()'
| `-CompoundStmt 0x55b4b10becc8 <line:802:1, line:803:1>
|-FunctionDecl 0x55b4b10becf8 prev 0x55b4b10b4548 <line:804:1, line:806:1> line:804:6 isync 'void ()'
| `-CompoundStmt 0x55b4b10bed98 <line:805:1, line:806:1>
|-FunctionDecl 0x55b4b10bedc8 prev 0x55b4b10b4608 <line:807:1, line:809:1> line:807:6 lwfence 'void ()'
| `-CompoundStmt 0x55b4b10bee68 <line:808:1, line:809:1>
`-FunctionDecl 0x55b4b10beed8 <line:810:1, line:847:1> line:810:5 main 'int ()'
  `-CompoundStmt 0x55b4b10c3558 <line:811:1, line:847:1>
    |-DeclStmt 0x55b4b10bf028 <line:812:3, col:18>
    | `-VarDecl 0x55b4b10befc0 <col:3, col:13> col:13 used t2539 'pthread_t':'unsigned long'
    |-CallExpr 0x55b4b10bf238 <line:813:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55b4b10bf220 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b4b10bf040 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55b4b109b9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55b4b10bf080 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55b4b10bf060 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55b4b10befc0 't2539' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55b4b10bf278 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55b4b10bf0f8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55b4b10bf0d0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55b4b10bf098 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55b4b10bf290 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b4b10bf118 <col:39> 'void *(void *)' Function 0x55b4b10b5698 'P0' 'void *(void *)'
    | `-ParenExpr 0x55b4b10bf198 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55b4b10bf170 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55b4b10bf138 <col:52> 'int' 0
    |-DeclStmt 0x55b4b10bf320 <line:814:3, col:18>
    | `-VarDecl 0x55b4b10bf2b8 <col:3, col:13> col:13 used t2540 'pthread_t':'unsigned long'
    |-CallExpr 0x55b4b10bf4c8 <line:815:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55b4b10bf4b0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b4b10bf338 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55b4b109b9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55b4b10bf378 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55b4b10bf358 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55b4b10bf2b8 't2540' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55b4b10bf508 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55b4b10bf3f0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55b4b10bf3c8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55b4b10bf390 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55b4b10bf520 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b4b10bf410 <col:39> 'void *(void *)' Function 0x55b4b10b8850 'P1' 'void *(void *)'
    | `-ParenExpr 0x55b4b10bf490 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55b4b10bf468 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55b4b10bf430 <col:52> 'int' 0
    |-DeclStmt 0x55b4b10bf5b0 <line:816:3, col:18>
    | `-VarDecl 0x55b4b10bf548 <col:3, col:13> col:13 used t2541 'pthread_t':'unsigned long'
    |-CallExpr 0x55b4b10bf758 <line:817:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55b4b10bf740 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b4b10bf5c8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55b4b109b9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55b4b10bf608 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55b4b10bf5e8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55b4b10bf548 't2541' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55b4b10bf798 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55b4b10bf680 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55b4b10bf658 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55b4b10bf620 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55b4b10bf7b0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b4b10bf6a0 <col:39> 'void *(void *)' Function 0x55b4b10bd378 'P2' 'void *(void *)'
    | `-ParenExpr 0x55b4b10bf720 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55b4b10bf6f8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55b4b10bf6c0 <col:52> 'int' 0
    |-CallExpr 0x55b4b10bf800 <line:818:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55b4b10bf7e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b4b10bf7c8 <col:3> 'void ()' Function 0x55b4b105b4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55b4b10bf8d0 <line:819:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55b4b10bf820 <col:3> '_Bool' lvalue Var 0x55b4b10b4a18 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55b4b10bf8b8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55b4b10bf898 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55b4b10bf880 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55b4b10bf840 <col:21> 'int' lvalue Var 0x55b4b10b4740 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55b4b10bf860 <col:41> 'int' 3
    |-CallExpr 0x55b4b10bf928 <line:820:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55b4b10bf910 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b4b10bf8f0 <col:3> 'void ()' Function 0x55b4b105b570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55b4b10bf9a0 <line:821:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55b4b10bf988 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b4b10bf948 <col:3> 'void (int)' Function 0x55b4b105ae50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55b4b10bf9e0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55b4b10bf9c8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55b4b10bf968 <col:21> '_Bool' lvalue Var 0x55b4b10b4a18 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55b4b10bfa30 <line:822:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55b4b10bfa18 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b4b10bf9f8 <col:3> 'void ()' Function 0x55b4b105b4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55b4b10bfd18 <line:823:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55b4b10bfa50 <col:3> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
    | `-ConditionalOperator 0x55b4b10bfce8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55b4b10bfb10 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55b4b10bfac8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55b4b10bfab0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55b4b10bfa70 <col:7> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55b4b10bfaf8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55b4b10bfae0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55b4b10bfa90 <col:25> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55b4b10bfcd0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55b4b10bfb30 <col:42> 'int' lvalue Var 0x55b4b10b5200 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55b4b10bfcb0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55b4b10bfc80 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55b4b10bfbf0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55b4b10bfba8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55b4b10bfb90 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55b4b10bfb50 <col:55> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55b4b10bfbd8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55b4b10bfbc0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55b4b10bfb70 <col:73> '_Bool' lvalue Var 0x55b4b10b4f20 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55b4b10bfc50 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55b4b10bfc10 <col:90> 'int' lvalue Var 0x55b4b10b52f8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55b4b10bfc68 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55b4b10bfc30 <col:102> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
    |-BinaryOperator 0x55b4b10bff20 <line:824:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55b4b10bfd38 <col:3> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55b4b10bff08 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b4b10bfed8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55b4b10bfdf8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55b4b10bfdb0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55b4b10bfd98 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55b4b10bfd58 <col:20> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55b4b10bfde0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55b4b10bfdc8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55b4b10bfd78 <col:38> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55b4b10bfe90 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55b4b10bfe48 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55b4b10bfe18 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55b4b10bfec0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55b4b10bfea8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55b4b10bfe70 <col:66> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55b4b10c0220 <line:825:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55b4b10bff40 <col:3> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55b4b10c0208 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b4b10c01d8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55b4b10c00f8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55b4b10c0018 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55b4b10bffd0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55b4b10bffa0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55b4b10bff60 <col:20> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55b4b10c0000 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55b4b10bffe8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55b4b10bff80 <col:38> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55b4b10c00d8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55b4b10c0090 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55b4b10c0078 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55b4b10c0038 <col:56> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55b4b10c00c0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55b4b10c00a8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55b4b10c0058 <col:74> '_Bool' lvalue Var 0x55b4b10b4f20 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55b4b10c0190 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55b4b10c0148 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55b4b10c0118 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55b4b10c01c0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55b4b10c01a8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55b4b10c0170 <col:102> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55b4b10c0428 <line:826:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55b4b10c0240 <col:3> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55b4b10c0410 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b4b10c03e0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55b4b10c0300 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55b4b10c02b8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55b4b10c02a0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55b4b10c0260 <col:20> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55b4b10c02e8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55b4b10c02d0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55b4b10c0280 <col:38> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55b4b10c0398 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55b4b10c0350 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55b4b10c0320 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55b4b10c03c8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55b4b10c03b0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55b4b10c0378 <col:66> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55b4b10c0710 <line:827:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55b4b10c0448 <col:3> '_Bool' lvalue Var 0x55b4b10b4f20 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55b4b10c06f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b4b10c06c8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55b4b10c05e8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55b4b10c0508 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55b4b10c04c0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55b4b10c04a8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55b4b10c0468 <col:20> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55b4b10c04f0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55b4b10c04d8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55b4b10c0488 <col:38> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55b4b10c05c8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55b4b10c0580 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55b4b10c0568 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55b4b10c0528 <col:56> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55b4b10c05b0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55b4b10c0598 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55b4b10c0548 <col:74> '_Bool' lvalue Var 0x55b4b10b4f20 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55b4b10c0680 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55b4b10c0638 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55b4b10c0608 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55b4b10c06b0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55b4b10c0698 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55b4b10c0660 <col:102> '_Bool' lvalue Var 0x55b4b10b4f20 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55b4b10c0768 <line:828:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55b4b10c0750 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b4b10c0730 <col:3> 'void ()' Function 0x55b4b105b570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55b4b10c07c0 <line:829:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55b4b10c07a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b4b10c0788 <col:3> 'void ()' Function 0x55b4b105b4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55b4b10c0858 <line:830:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55b4b10c07e0 <col:3> '_Bool' lvalue Var 0x55b4b10b5508 'weak$$choice0' '_Bool'
    | `-CallExpr 0x55b4b10c0838 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55b4b10c0820 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55b4b10c0800 <col:19> '_Bool (void)' Function 0x55b4b105ac80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55b4b10c08f0 <line:831:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55b4b10c0878 <col:3> '_Bool' lvalue Var 0x55b4b10b5580 'weak$$choice2' '_Bool'
    | `-CallExpr 0x55b4b10c08d0 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55b4b10c08b8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55b4b10c0898 <col:19> '_Bool (void)' Function 0x55b4b105ac80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55b4b10c0968 <line:832:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x55b4b10c0910 <col:3> '_Bool' lvalue Var 0x55b4b10b4c28 'x$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x55b4b10c0950 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x55b4b10c0930 <col:21> '_Bool' lvalue Var 0x55b4b10b5580 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x55b4b10c09e0 <line:833:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55b4b10c0988 <col:3> 'int' lvalue Var 0x55b4b10b4ca8 'x$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x55b4b10c09c8 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55b4b10c09a8 <col:15> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
    |-BinaryOperator 0x55b4b10c0e18 <line:834:3, col:162> 'int' '='
    | |-DeclRefExpr 0x55b4b10c0a00 <col:3> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
    | `-ConditionalOperator 0x55b4b10c0de8 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x55b4b10c0c10 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x55b4b10c0b30 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x55b4b10c0a58 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x55b4b10c0a40 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x55b4b10c0a20 <col:8> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x55b4b10c0b10 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x55b4b10c0aa8 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x55b4b10c0a90 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x55b4b10c0a70 <col:27> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x55b4b10c0af8 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x55b4b10c0ae0 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x55b4b10c0ac0 <col:46> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x55b4b10c0bf0 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x55b4b10c0b88 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x55b4b10c0b70 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55b4b10c0b50 <col:65> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x55b4b10c0bd8 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x55b4b10c0bc0 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x55b4b10c0ba0 <col:84> '_Bool' lvalue Var 0x55b4b10b4f20 'x$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55b4b10c0dd0 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55b4b10c0c30 <col:101> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
    |   `-ParenExpr 0x55b4b10c0db0 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x55b4b10c0d80 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x55b4b10c0cf0 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55b4b10c0ca8 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55b4b10c0c90 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55b4b10c0c50 <col:106> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55b4b10c0cd8 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55b4b10c0cc0 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55b4b10c0c70 <col:124> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55b4b10c0d50 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55b4b10c0d10 <col:141> 'int' lvalue Var 0x55b4b10b5200 'x$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x55b4b10c0d68 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55b4b10c0d30 <col:153> 'int' lvalue Var 0x55b4b10b52f8 'x$w_buff1' 'int'
    |-BinaryOperator 0x55b4b10c1340 <line:835:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55b4b10c0e38 <col:3> 'int' lvalue Var 0x55b4b10b5200 'x$w_buff0' 'int'
    | `-ConditionalOperator 0x55b4b10c1310 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55b4b10c12e0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55b4b10c12c8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55b4b10c0e58 <col:15> '_Bool' lvalue Var 0x55b4b10b5580 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55b4b10c12f8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55b4b10c0e78 <col:31> 'int' lvalue Var 0x55b4b10b5200 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55b4b10c12a8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55b4b10c1278 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55b4b10c10a0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55b4b10c0fa8 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55b4b10c0ed0 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55b4b10c0eb8 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55b4b10c0e98 <col:45> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55b4b10c0f88 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55b4b10c0f20 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55b4b10c0f08 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55b4b10c0ee8 <col:64> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55b4b10c0f70 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55b4b10c0f58 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55b4b10c0f38 <col:83> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55b4b10c1080 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55b4b10c1018 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55b4b10c1000 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55b4b10c0fe0 <col:102> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55b4b10c1068 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55b4b10c1050 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55b4b10c1030 <col:121> '_Bool' lvalue Var 0x55b4b10b4f20 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55b4b10c1260 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55b4b10c10c0 <col:138> 'int' lvalue Var 0x55b4b10b5200 'x$w_buff0' 'int'
    |       `-ParenExpr 0x55b4b10c1240 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55b4b10c1210 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55b4b10c1180 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55b4b10c1138 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55b4b10c1120 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55b4b10c10e0 <col:151> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55b4b10c1168 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55b4b10c1150 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55b4b10c1100 <col:169> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55b4b10c11e0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55b4b10c11a0 <col:186> 'int' lvalue Var 0x55b4b10b5200 'x$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x55b4b10c11f8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55b4b10c11c0 <col:198> 'int' lvalue Var 0x55b4b10b5200 'x$w_buff0' 'int'
    |-BinaryOperator 0x55b4b10c1850 <line:836:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55b4b10c1360 <col:3> 'int' lvalue Var 0x55b4b10b52f8 'x$w_buff1' 'int'
    | `-ConditionalOperator 0x55b4b10c1820 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55b4b10c17f0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55b4b10c17d8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55b4b10c1380 <col:15> '_Bool' lvalue Var 0x55b4b10b5580 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55b4b10c1808 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55b4b10c13a0 <col:31> 'int' lvalue Var 0x55b4b10b52f8 'x$w_buff1' 'int'
    |   `-ParenExpr 0x55b4b10c17b8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55b4b10c1788 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55b4b10c15b0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55b4b10c14d0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55b4b10c13f8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55b4b10c13e0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55b4b10c13c0 <col:45> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55b4b10c14b0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55b4b10c1448 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55b4b10c1430 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55b4b10c1410 <col:64> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55b4b10c1498 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55b4b10c1480 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55b4b10c1460 <col:83> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55b4b10c1590 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55b4b10c1528 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55b4b10c1510 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55b4b10c14f0 <col:102> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55b4b10c1578 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55b4b10c1560 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55b4b10c1540 <col:121> '_Bool' lvalue Var 0x55b4b10b4f20 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55b4b10c1770 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55b4b10c15d0 <col:138> 'int' lvalue Var 0x55b4b10b52f8 'x$w_buff1' 'int'
    |       `-ParenExpr 0x55b4b10c1750 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55b4b10c1720 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55b4b10c1690 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55b4b10c1648 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55b4b10c1630 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55b4b10c15f0 <col:151> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55b4b10c1678 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55b4b10c1660 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55b4b10c1610 <col:169> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55b4b10c16f0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55b4b10c16b0 <col:186> 'int' lvalue Var 0x55b4b10b52f8 'x$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x55b4b10c1708 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55b4b10c16d0 <col:198> 'int' lvalue Var 0x55b4b10b52f8 'x$w_buff1' 'int'
    |-BinaryOperator 0x55b4b10c1df8 <line:837:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55b4b10c1870 <col:3> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55b4b10c1de0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b4b10c1db0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55b4b10c1d68 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55b4b10c1d50 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55b4b10c1890 <col:20> '_Bool' lvalue Var 0x55b4b10b5580 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55b4b10c1d98 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55b4b10c1d80 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55b4b10c18b0 <col:36> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x55b4b10c1d30 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55b4b10c1d00 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55b4b10c1ac0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55b4b10c19e0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55b4b10c1908 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55b4b10c18f0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55b4b10c18d0 <col:55> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55b4b10c19c0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55b4b10c1958 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55b4b10c1940 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55b4b10c1920 <col:74> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55b4b10c19a8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55b4b10c1990 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55b4b10c1970 <col:93> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55b4b10c1aa0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55b4b10c1a38 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55b4b10c1a20 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55b4b10c1a00 <col:112> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55b4b10c1a88 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55b4b10c1a70 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55b4b10c1a50 <col:131> '_Bool' lvalue Var 0x55b4b10b4f20 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55b4b10c1ce8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55b4b10c1cd0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55b4b10c1ae0 <col:148> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x55b4b10c1cb0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55b4b10c1c80 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55b4b10c1ba0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55b4b10c1b58 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55b4b10c1b40 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55b4b10c1b00 <col:166> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55b4b10c1b88 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55b4b10c1b70 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55b4b10c1b20 <col:184> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55b4b10c1c38 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55b4b10c1bf0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55b4b10c1bc0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55b4b10c1c68 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55b4b10c1c50 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55b4b10c1c18 <col:212> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55b4b10c23d0 <line:838:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55b4b10c1e18 <col:3> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55b4b10c23b8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b4b10c2388 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55b4b10c2340 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55b4b10c2328 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55b4b10c1e38 <col:20> '_Bool' lvalue Var 0x55b4b10b5580 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55b4b10c2370 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55b4b10c2358 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55b4b10c1e58 <col:36> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x55b4b10c2308 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55b4b10c22d8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55b4b10c2078 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55b4b10c1f88 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55b4b10c1eb0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55b4b10c1e98 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55b4b10c1e78 <col:55> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55b4b10c1f68 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55b4b10c1f00 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55b4b10c1ee8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55b4b10c1ec8 <col:74> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55b4b10c1f50 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55b4b10c1f38 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55b4b10c1f18 <col:93> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55b4b10c2058 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55b4b10c1ff0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55b4b10c1fc8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55b4b10c1fa8 <col:112> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55b4b10c2040 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55b4b10c2028 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55b4b10c2008 <col:131> '_Bool' lvalue Var 0x55b4b10b4f20 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55b4b10c22c0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55b4b10c22a8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55b4b10c2098 <col:148> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x55b4b10c2288 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55b4b10c2258 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55b4b10c2158 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55b4b10c2110 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55b4b10c20f8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55b4b10c20b8 <col:166> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55b4b10c2140 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55b4b10c2128 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55b4b10c20d8 <col:184> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55b4b10c2228 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55b4b10c21a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55b4b10c2178 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55b4b10c2240 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55b4b10c2200 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55b4b10c21d0 <col:219> 'int' 0
    |-BinaryOperator 0x55b4b10c2978 <line:839:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55b4b10c23f0 <col:3> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55b4b10c2960 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b4b10c2930 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55b4b10c28e8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55b4b10c28d0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55b4b10c2410 <col:20> '_Bool' lvalue Var 0x55b4b10b5580 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55b4b10c2918 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55b4b10c2900 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55b4b10c2430 <col:36> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x55b4b10c28b0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55b4b10c2880 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55b4b10c2640 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55b4b10c2560 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55b4b10c2488 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55b4b10c2470 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55b4b10c2450 <col:55> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55b4b10c2540 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55b4b10c24d8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55b4b10c24c0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55b4b10c24a0 <col:74> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55b4b10c2528 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55b4b10c2510 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55b4b10c24f0 <col:93> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55b4b10c2620 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55b4b10c25b8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55b4b10c25a0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55b4b10c2580 <col:112> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55b4b10c2608 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55b4b10c25f0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55b4b10c25d0 <col:131> '_Bool' lvalue Var 0x55b4b10b4f20 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55b4b10c2868 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55b4b10c2850 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55b4b10c2660 <col:148> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x55b4b10c2830 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55b4b10c2800 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55b4b10c2720 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55b4b10c26d8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55b4b10c26c0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55b4b10c2680 <col:166> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55b4b10c2708 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55b4b10c26f0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55b4b10c26a0 <col:184> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55b4b10c27b8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55b4b10c2770 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55b4b10c2740 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55b4b10c27e8 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55b4b10c27d0 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55b4b10c2798 <col:212> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55b4b10c2f40 <line:840:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55b4b10c2998 <col:3> '_Bool' lvalue Var 0x55b4b10b4f20 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55b4b10c2f28 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b4b10c2ef8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55b4b10c2eb0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55b4b10c2e98 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55b4b10c29b8 <col:20> '_Bool' lvalue Var 0x55b4b10b5580 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55b4b10c2ee0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55b4b10c2ec8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55b4b10c29d8 <col:36> '_Bool' lvalue Var 0x55b4b10b4f20 'x$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x55b4b10c2e78 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55b4b10c2e48 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55b4b10c2be8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55b4b10c2b08 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55b4b10c2a30 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55b4b10c2a18 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55b4b10c29f8 <col:55> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55b4b10c2ae8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55b4b10c2a80 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55b4b10c2a68 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55b4b10c2a48 <col:74> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55b4b10c2ad0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55b4b10c2ab8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55b4b10c2a98 <col:93> '_Bool' lvalue Var 0x55b4b10b5370 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55b4b10c2bc8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55b4b10c2b60 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55b4b10c2b48 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55b4b10c2b28 <col:112> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55b4b10c2bb0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55b4b10c2b98 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55b4b10c2b78 <col:131> '_Bool' lvalue Var 0x55b4b10b4f20 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55b4b10c2e30 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55b4b10c2e18 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55b4b10c2c08 <col:148> '_Bool' lvalue Var 0x55b4b10b4f20 'x$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x55b4b10c2df8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55b4b10c2dc8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55b4b10c2cc8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55b4b10c2c80 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55b4b10c2c68 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55b4b10c2c28 <col:166> '_Bool' lvalue Var 0x55b4b10b5278 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55b4b10c2cb0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55b4b10c2c98 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55b4b10c2c48 <col:184> '_Bool' lvalue Var 0x55b4b10b4d20 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55b4b10c2d98 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55b4b10c2d18 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55b4b10c2ce8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55b4b10c2db0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55b4b10c2d70 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55b4b10c2d40 <col:219> 'int' 0
    |-BinaryOperator 0x55b4b10c3238 <line:841:3, col:95> '_Bool' '='
    | |-DeclRefExpr 0x55b4b10c2f60 <col:3> '_Bool' lvalue Var 0x55b4b10b4a90 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55b4b10c3220 <col:21, col:95> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55b4b10c3208 <col:21, col:95> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55b4b10c31e8 <col:22, col:95> 'int'
    |       `-BinaryOperator 0x55b4b10c31c8 <col:23, col:94> 'int' '&&'
    |         |-BinaryOperator 0x55b4b10c3130 <col:23, col:66> 'int' '&&'
    |         | |-BinaryOperator 0x55b4b10c3098 <col:23, col:38> 'int' '&&'
    |         | | |-BinaryOperator 0x55b4b10c3000 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55b4b10c2fc0 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55b4b10c2f80 <col:23> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
    |         | | | `-IntegerLiteral 0x55b4b10c2fa0 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x55b4b10c3078 <col:33, col:38> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55b4b10c3060 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55b4b10c3020 <col:33> 'int' lvalue Var 0x55b4b10b5470 'y' 'int'
    |         | |   `-IntegerLiteral 0x55b4b10c3040 <col:38> 'int' 2
    |         | `-BinaryOperator 0x55b4b10c3110 <col:43, col:66> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55b4b10c30f8 <col:43> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55b4b10c30b8 <col:43> 'int' lvalue Var 0x55b4b10b4860 '__unbuffered_p0_EAX' 'int'
    |         |   `-IntegerLiteral 0x55b4b10c30d8 <col:66> 'int' 0
    |         `-BinaryOperator 0x55b4b10c31a8 <col:71, col:94> 'int' '=='
    |           |-ImplicitCastExpr 0x55b4b10c3190 <col:71> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55b4b10c3150 <col:71> 'int' lvalue Var 0x55b4b10b4980 '__unbuffered_p1_EAX' 'int'
    |           `-IntegerLiteral 0x55b4b10c3170 <col:94> 'int' 1
    |-BinaryOperator 0x55b4b10c3368 <line:842:3, col:37> 'int' '='
    | |-DeclRefExpr 0x55b4b10c3258 <col:3> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
    | `-ConditionalOperator 0x55b4b10c3338 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x55b4b10c32f0 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55b4b10c32d8 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55b4b10c3278 <col:7> '_Bool' lvalue Var 0x55b4b10b4c28 'x$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x55b4b10c3308 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55b4b10c3298 <col:25> 'int' lvalue Var 0x55b4b10b4ca8 'x$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x55b4b10c3320 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55b4b10c32b8 <col:37> 'int' lvalue Var 0x55b4b10b4b90 'x' 'int'
    |-BinaryOperator 0x55b4b10c3400 <line:843:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x55b4b10c3388 <col:3> '_Bool' lvalue Var 0x55b4b10b4c28 'x$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x55b4b10c33d8 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x55b4b10c33a8 <col:28> 'int' 0
    |-CallExpr 0x55b4b10c3458 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55b4b10c3440 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b4b10c3420 <col:3> 'void ()' Function 0x55b4b105b570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55b4b10c34d0 <line:845:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55b4b10c34b8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b4b10c3478 <col:3> 'void (int)' Function 0x55b4b105b238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55b4b10c3510 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55b4b10c34f8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55b4b10c3498 <col:21> '_Bool' lvalue Var 0x55b4b10b4a90 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55b4b10c3548 <line:846:3, col:10>
      `-IntegerLiteral 0x55b4b10c3528 <col:10> 'int' 0
