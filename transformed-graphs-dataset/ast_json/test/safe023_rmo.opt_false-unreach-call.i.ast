TranslationUnitDecl 0x55faaf649f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55faaf64a848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55faaf64a520 '__int128'
|-TypedefDecl 0x55faaf64a8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55faaf64a540 'unsigned __int128'
|-TypedefDecl 0x55faaf64abc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55faaf64a990 'struct __NSConstantString_tag'
|   `-Record 0x55faaf64a910 '__NSConstantString_tag'
|-TypedefDecl 0x55faaf64ac68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55faaf64ac20 'char *'
|   `-BuiltinType 0x55faaf64a020 'char'
|-TypedefDecl 0x55faaf689b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55faaf64af00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55faaf64ad40 'struct __va_list_tag'
|     `-Record 0x55faaf64acc0 '__va_list_tag'
|-FunctionDecl 0x55faaf689c80 <pthread-wmm/safe023_rmo.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55faaf689e50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55faaf689d80 <col:31> col:34 'int'
|-FunctionDecl 0x55faaf689fc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55faaf68a0f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55faaf68a238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55faaf68a1a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55faaf68a468 <col:40, col:99>
|   |-IfStmt 0x55faaf68a438 <col:42, col:88>
|   | |-UnaryOperator 0x55faaf68a318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55faaf68a300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55faaf68a2e0 <col:47> 'int' lvalue ParmVar 0x55faaf68a1a8 'expression' 'int'
|   | `-CompoundStmt 0x55faaf68a420 <col:59, col:88>
|   |   `-LabelStmt 0x55faaf68a408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55faaf68a398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55faaf68a380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55faaf68a330 <col:68> 'void () __attribute__((noreturn))' Function 0x55faaf68a0f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55faaf68a450 <col:89>
|   `-ReturnStmt 0x55faaf68a458 <col:91>
|-FunctionDecl 0x55faaf68a4b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55faaf68a570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55faaf68a8f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55faaf68a628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55faaf68a6a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55faaf68a728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55faaf68a7a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55faaf68a9b0 <line:11:22>
|-FunctionDecl 0x55faaf6aff10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55faaf68aa20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55faaf68aaa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55faaf6afd40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55faaf6afdc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55faaf6affd0 <line:14:22>
|-FunctionDecl 0x55faaf6b0280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55faaf6b0040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55faaf6b00c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55faaf6b0140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55faaf6b0338 <line:16:22>
|-TypedefDecl 0x55faaf6b03a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55faaf64a0e0 'unsigned char'
|-TypedefDecl 0x55faaf6b0418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55faaf64a100 'unsigned short'
|-TypedefDecl 0x55faaf6b0488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55faaf64a120 'unsigned int'
|-TypedefDecl 0x55faaf6b04f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55faaf64a140 'unsigned long'
|-TypedefDecl 0x55faaf6b0568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55faaf64a040 'signed char'
|-TypedefDecl 0x55faaf6b05d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55faaf64a0e0 'unsigned char'
|-TypedefDecl 0x55faaf6b0648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55faaf64a060 'short'
|-TypedefDecl 0x55faaf6b06b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55faaf64a100 'unsigned short'
|-TypedefDecl 0x55faaf6b0728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55faaf64a080 'int'
|-TypedefDecl 0x55faaf6b0798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55faaf64a120 'unsigned int'
|-TypedefDecl 0x55faaf6b0808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55faaf64a0a0 'long'
|-TypedefDecl 0x55faaf6b0878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55faaf64a140 'unsigned long'
|-TypedefDecl 0x55faaf6b08e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55faaf64a0a0 'long'
|-TypedefDecl 0x55faaf6b0958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55faaf64a140 'unsigned long'
|-TypedefDecl 0x55faaf6b09c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55faaf64a140 'unsigned long'
|-TypedefDecl 0x55faaf6b0a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55faaf64a120 'unsigned int'
|-TypedefDecl 0x55faaf6b0aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55faaf64a120 'unsigned int'
|-TypedefDecl 0x55faaf6b0b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55faaf64a140 'unsigned long'
|-TypedefDecl 0x55faaf6b0b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55faaf64a140 'unsigned long'
|-TypedefDecl 0x55faaf6b0bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55faaf64a120 'unsigned int'
|-TypedefDecl 0x55faaf6b0c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55faaf64a140 'unsigned long'
|-TypedefDecl 0x55faaf6b0cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55faaf64a0a0 'long'
|-TypedefDecl 0x55faaf6b0d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55faaf64a0a0 'long'
|-TypedefDecl 0x55faaf6b0dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55faaf64a080 'int'
|-RecordDecl 0x55faaf6b0e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55faaf6b0f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55faaf6b1030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55faaf6b0fd0 'struct __fsid_t' sugar
|   `-RecordType 0x55faaf6b0eb0 '__fsid_t'
|     `-Record 0x55faaf6b0e30 ''
|-TypedefDecl 0x55faaf6b10b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55faaf64a0a0 'long'
|-TypedefDecl 0x55faaf6b1128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55faaf64a140 'unsigned long'
|-TypedefDecl 0x55faaf6b1198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55faaf64a140 'unsigned long'
|-TypedefDecl 0x55faaf6b1208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55faaf64a120 'unsigned int'
|-TypedefDecl 0x55faaf6b1278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55faaf64a0a0 'long'
|-TypedefDecl 0x55faaf6b12e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55faaf64a120 'unsigned int'
|-TypedefDecl 0x55faaf6b1358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55faaf64a0a0 'long'
|-TypedefDecl 0x55faaf6b13c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55faaf64a080 'int'
|-TypedefDecl 0x55faaf6b1438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55faaf64a080 'int'
|-TypedefDecl 0x55faaf6b14a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55faaf64a080 'int'
|-TypedefDecl 0x55faaf6b1518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55faaf64a7a0 'void *'
|   `-BuiltinType 0x55faaf649fe0 'void'
|-TypedefDecl 0x55faaf6b1588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55faaf64a0a0 'long'
|-TypedefDecl 0x55faaf6b15f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55faaf64a0a0 'long'
|-TypedefDecl 0x55faaf6b1668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55faaf64a0a0 'long'
|-TypedefDecl 0x55faaf6b16d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55faaf64a140 'unsigned long'
|-TypedefDecl 0x55faaf6b1748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55faaf64a140 'unsigned long'
|-TypedefDecl 0x55faaf6b17b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55faaf64a140 'unsigned long'
|-TypedefDecl 0x55faaf6b1828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55faaf64a140 'unsigned long'
|-TypedefDecl 0x55faaf6b1898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55faaf64a0a0 'long'
|-TypedefDecl 0x55faaf6b1908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55faaf64a0a0 'long'
|-TypedefDecl 0x55faaf6b1978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55faaf64a0a0 'long'
|-TypedefDecl 0x55faaf6b19e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55faaf64a140 'unsigned long'
|-TypedefDecl 0x55faaf6b1a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55faaf6b1a40 '__off64_t' sugar
|   |-Typedef 0x55faaf6b0d68 '__off64_t'
|   `-BuiltinType 0x55faaf64a0a0 'long'
|-TypedefDecl 0x55faaf6b1b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55faaf6b1b30 '__quad_t *'
|   `-TypedefType 0x55faaf6b1ad0 '__quad_t' sugar
|     |-Typedef 0x55faaf6b08e8 '__quad_t'
|     `-BuiltinType 0x55faaf64a0a0 'long'
|-TypedefDecl 0x55faaf6b1be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55faaf64ac20 'char *'
|   `-BuiltinType 0x55faaf64a020 'char'
|-TypedefDecl 0x55faaf6b1c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55faaf64a0a0 'long'
|-TypedefDecl 0x55faaf6b1cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55faaf64a120 'unsigned int'
|-FunctionDecl 0x55faaf6b1e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55faaf6b1d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55faaf6b2148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55faaf6b2138 <line:73:3, col:34>
|     `-CallExpr 0x55faaf6b20f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55faaf6b20e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55faaf6b2070 <col:10> '<builtin fn type>' Function 0x55faaf6b1ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55faaf6b2120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55faaf6b2090 <col:29> 'unsigned int' lvalue ParmVar 0x55faaf6b1d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x55faaf6b1ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55faaf6b1f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55faaf6b1ff0 <col:10> Implicit
| `-ConstAttr 0x55faaf6b2048 <col:10> Implicit
|-FunctionDecl 0x55faaf6b22a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55faaf6b2198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55faaf6b25b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55faaf6b25a8 <line:78:3, col:34>
|     `-CallExpr 0x55faaf6b2568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55faaf6b2550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55faaf6b24d8 <col:10> '<builtin fn type>' Function 0x55faaf6b2348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55faaf6b2590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55faaf6b24f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55faaf6b2198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55faaf6b2348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55faaf6b23e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55faaf6b2458 <col:10> Implicit
| `-ConstAttr 0x55faaf6b24b0 <col:10> Implicit
|-TypedefDecl 0x55faaf6b25e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55faaf64a140 'unsigned long'
|-TypedefDecl 0x55faaf6b2678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55faaf6b2640 '__time_t' sugar
|   |-Typedef 0x55faaf6b1278 '__time_t'
|   `-BuiltinType 0x55faaf64a0a0 'long'
|-RecordDecl 0x55faaf6b26d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55faaf6b2788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55faaf6b2818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55faaf6b28a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55faaf6b2870 '__pid_t' sugar
|   |-Typedef 0x55faaf6b0dd8 '__pid_t'
|   `-BuiltinType 0x55faaf64a080 'int'
|-RecordDecl 0x55faaf6b2900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55faaf6b29c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55faaf6b2a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55faaf6b2ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55faaf6b2b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55faaf64a140 'unsigned long'
|-RecordDecl 0x55faaf6b2b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55faaf6b4e70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55faaf6b4f20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55faaf6b4ec0 'struct cpu_set_t' sugar
|   `-RecordType 0x55faaf6b2c10 'cpu_set_t'
|     `-Record 0x55faaf6b2b90 ''
|-FunctionDecl 0x55faaf6b51f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55faaf6b4fc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55faaf6b50d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55faaf6b52a8 <line:108:19>
|-FunctionDecl 0x55faaf6b5480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55faaf6b5310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55faaf6b5528 <col:69>
|-FunctionDecl 0x55faaf6b56a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55faaf6b5590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55faaf6b5748 <col:64>
|-FunctionDecl 0x55faaf6b5a08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55faaf6b57b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55faaf6b58e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55faaf6b5ab8 <line:114:22>
|-FunctionDecl 0x55faaf6b5e60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55faaf6b5b20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55faaf6b5c18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55faaf6b5f10 <col:88>
|-FunctionDecl 0x55faaf6b61c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55faaf6b5f78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55faaf6b5ff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55faaf6b6088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55faaf6b6280 <col:62>
|-FunctionDecl 0x55faaf6b63f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55faaf6b62e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55faaf6b64a0 <col:63>
|-FunctionDecl 0x55faaf6b65c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55faaf6b6668 <col:47>
|-FunctionDecl 0x55faaf6b6770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55faaf6b66d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55faaf6b6818 <col:69>
|-FunctionDecl 0x55faaf6b6920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55faaf6b6888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55faaf6b69c8 <col:69>
|-FunctionDecl 0x55faaf6b6c88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55faaf6b6a30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55faaf6b6b68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55faaf6b6d38 <col:88>
|-TypedefDecl 0x55faaf6b6dc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55faaf6b6d90 '__clock_t' sugar
|   |-Typedef 0x55faaf6b10b8 '__clock_t'
|   `-BuiltinType 0x55faaf64a0a0 'long'
|-TypedefDecl 0x55faaf6b77e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55faaf6b6e20 '__clockid_t' sugar
|   |-Typedef 0x55faaf6b14a8 '__clockid_t'
|   `-BuiltinType 0x55faaf64a080 'int'
|-TypedefDecl 0x55faaf6b7878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55faaf6b7840 '__timer_t' sugar
|   |-Typedef 0x55faaf6b1518 '__timer_t'
|   `-PointerType 0x55faaf64a7a0 'void *'
|     `-BuiltinType 0x55faaf649fe0 'void'
|-RecordDecl 0x55faaf6b78d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55faaf6b7990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55faaf6b79f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55faaf6b7a60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55faaf6b7ac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55faaf6b7b30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55faaf6b7b98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55faaf6b7c00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55faaf6b7c68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55faaf6b7cd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55faaf6b7d38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55faaf6b7da0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55faaf6b7df0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55faaf6b7eb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55faaf6b7f28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55faaf6b7fd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55faaf6b81a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55faaf6b8240 <col:45>
|-FunctionDecl 0x55faaf6b8420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55faaf6b8310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55faaf6b84c8 <col:54>
|-FunctionDecl 0x55faaf6b86c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55faaf6b8530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55faaf6b85a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55faaf6b8778 <line:158:22>
| `-ConstAttr 0x55faaf6b9410 <col:63>
|-FunctionDecl 0x55faaf6b9610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55faaf6b9508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55faaf6b96b8 <col:56>
|-FunctionDecl 0x55faaf6b9a60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55faaf6b9728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55faaf6b97a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55faaf6b9820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55faaf6b9918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55faaf6b9b20 <col:54>
|-RecordDecl 0x55faaf6b9b78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55faaf6b9c28 parent 0x55faaf649f88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55faaf6b9e88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55faaf6b9f28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55faaf6b9f90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55faaf6b9ff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55faaf6ba0e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55faaf6ba208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55faaf6ba1b0 'struct __locale_struct *'
|   `-ElaboratedType 0x55faaf6ba140 'struct __locale_struct' sugar
|     `-RecordType 0x55faaf6b9c00 'struct __locale_struct'
|       `-Record 0x55faaf6b9b78 '__locale_struct'
|-TypedefDecl 0x55faaf6ba2b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55faaf6ba280 '__locale_t' sugar
|   |-Typedef 0x55faaf6ba208 '__locale_t'
|   `-PointerType 0x55faaf6ba1b0 'struct __locale_struct *'
|     `-ElaboratedType 0x55faaf6ba140 'struct __locale_struct' sugar
|       `-RecordType 0x55faaf6b9c00 'struct __locale_struct'
|         `-Record 0x55faaf6b9b78 '__locale_struct'
|-FunctionDecl 0x55faaf6ba6b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55faaf6ba328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55faaf6ba3a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55faaf6ba438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55faaf6ba4c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55faaf6ba540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55faaf6ba778 <col:40>
|-FunctionDecl 0x55faaf6ba968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55faaf6ba840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55faaf6baa10 <col:66>
|-FunctionDecl 0x55faaf6bab20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55faaf6baa78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55faaf6babc8 <col:69>
|-FunctionDecl 0x55faaf6badf8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55faaf6bac30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55faaf6bacc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55faaf6baea8 <col:52>
|-FunctionDecl 0x55faaf6bb050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55faaf6baf10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55faaf6bafa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55faaf6bb100 <col:55>
|-FunctionDecl 0x55faaf6bb298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55faaf6bb180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55faaf6bb340 <col:62>
|-FunctionDecl 0x55faaf6bb578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55faaf6bb3a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55faaf6bb620 <col:60>
|-FunctionDecl 0x55faaf6bb848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55faaf6bb6a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55faaf6bb720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55faaf6bb8f8 <col:44>
|-FunctionDecl 0x55faaf6bbb08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55faaf6bb960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55faaf6bb9e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55faaf6bbbb8 <col:49>
|-VarDecl 0x55faaf6bbcb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55faaf6bbd38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55faaf6bbdb8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55faaf6bbe80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55faaf6bbfb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55faaf6bc050 <col:42>
|-VarDecl 0x55faaf6bc0c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55faaf6bc140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55faaf6bc2c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55faaf6bc1b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55faaf6bc370 <col:57>
|-FunctionDecl 0x55faaf6bd4f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55faaf6bc3f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55faaf6bd598 <col:56>
|-FunctionDecl 0x55faaf6bd6a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55faaf6bd618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55faaf6bd750 <col:59>
|-FunctionDecl 0x55faaf6bd858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55faaf6bd7c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55faaf6bd900 <col:48>
| `-ConstAttr 0x55faaf6bd958 <col:89>
|-FunctionDecl 0x55faaf6bdbb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55faaf6bda08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55faaf6bda98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55faaf6bde18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55faaf6bdca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55faaf6bdd38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55faaf6bdec8 <col:88>
|-FunctionDecl 0x55faaf6be060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55faaf6bdf30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55faaf6bdfc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55faaf6be110 <col:88>
|-FunctionDecl 0x55faaf6be328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55faaf6be178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55faaf6be208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55faaf6be3d8 <line:209:22>
|-FunctionDecl 0x55faaf6be778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55faaf6be440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55faaf6be500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55faaf6be590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55faaf6be620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55faaf6bea78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55faaf6be878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55faaf6be950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55faaf6beb28 <col:85>
|-FunctionDecl 0x55faaf6bef18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55faaf6beb90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55faaf6becc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55faaf6bedd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55faaf6befd0 <col:52>
|-FunctionDecl 0x55faaf6bf148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55faaf6bf038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55faaf6bf1f0 <col:61>
|-FunctionDecl 0x55faaf6bf668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55faaf6bf258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55faaf6bf2d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55faaf6bf408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55faaf6bf510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55faaf6bf728 <col:62>
|-FunctionDecl 0x55faaf6bf948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55faaf6bf790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55faaf6bf820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55faaf6bf9f8 <line:222:22>
|-FunctionDecl 0x55faaf6bfaf8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55faaf6bfa60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55faaf6bfba0 <col:65>
|-TypedefDecl 0x55faaf6bfc10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55faaf64a140 'unsigned long'
|-RecordDecl 0x55faaf6bfc68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55faaf6bfdb0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55faaf6bfe18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55faaf6bfec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55faaf6bfe70 'union pthread_attr_t' sugar
|   `-RecordType 0x55faaf6bfcf0 'union pthread_attr_t'
|     `-Record 0x55faaf6bfc68 'pthread_attr_t'
|-RecordDecl 0x55faaf6bff20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55faaf6c0098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55faaf6c0110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55faaf6c01c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55faaf6c0160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55faaf6bffa0 'struct __pthread_internal_list'
|     `-Record 0x55faaf6bff20 '__pthread_internal_list'
|-RecordDecl 0x55faaf6c0230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55faaf6c02d8 parent 0x55faaf649f88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55faaf6c03b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55faaf6c0418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55faaf6c0480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55faaf6c4530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55faaf6c4598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55faaf6c4600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55faaf6c4688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55faaf6c4740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55faaf6c4830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55faaf6c4898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55faaf6c4a20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55faaf6c49c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55faaf6c02b0 'pthread_mutex_t'
|     `-Record 0x55faaf6c0230 ''
|-RecordDecl 0x55faaf6c4a90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55faaf6c4bd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55faaf6c4c38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55faaf6c4cf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55faaf6c4c90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55faaf6c4b10 'pthread_mutexattr_t'
|     `-Record 0x55faaf6c4a90 ''
|-RecordDecl 0x55faaf6c4d60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55faaf6c4e08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55faaf6c4ed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55faaf6c4f38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55faaf6c4fa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55faaf6c5008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55faaf6c5070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55faaf6c50d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55faaf6c5140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55faaf6c51a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55faaf6c5260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe023_rmo.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe023_rmo.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55faaf6c5350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55faaf6c53b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55faaf6c5540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55faaf6c5490 'union pthread_cond_t' sugar
|   `-RecordType 0x55faaf6c4de0 'pthread_cond_t'
|     `-Record 0x55faaf6c4d60 ''
|-RecordDecl 0x55faaf6c55b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55faaf6c56b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55faaf6c5718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55faaf6c57d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55faaf6c5770 'union pthread_condattr_t' sugar
|   `-RecordType 0x55faaf6c5630 'pthread_condattr_t'
|     `-Record 0x55faaf6c55b0 ''
|-TypedefDecl 0x55faaf6c5858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55faaf64a120 'unsigned int'
|-TypedefDecl 0x55faaf6c58c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55faaf64a080 'int'
|-RecordDecl 0x55faaf6c5920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55faaf6c59c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55faaf6c5a90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55faaf6c5af8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55faaf6c5b60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55faaf6c5bc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55faaf6c5c30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55faaf6c5c98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55faaf6c5d00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55faaf6c5d68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55faaf6c5dd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55faaf6c5e38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55faaf6c5ea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55faaf6c5f50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe023_rmo.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe023_rmo.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55faaf6c5ff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55faaf6c6060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55faaf6c61b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55faaf6c6150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55faaf6c59a0 'pthread_rwlock_t'
|     `-Record 0x55faaf6c5920 ''
|-RecordDecl 0x55faaf6c6220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55faaf6c6360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55faaf6c63c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55faaf6c6480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55faaf6c6420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55faaf6c62a0 'pthread_rwlockattr_t'
|     `-Record 0x55faaf6c6220 ''
|-TypedefDecl 0x55faaf6c8560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55faaf64a084 'volatile int' volatile
|   `-BuiltinType 0x55faaf64a080 'int'
|-RecordDecl 0x55faaf6c85b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55faaf6c8700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55faaf6c8768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55faaf6c8820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55faaf6c87c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55faaf6c8640 'pthread_barrier_t'
|     `-Record 0x55faaf6c85b8 ''
|-RecordDecl 0x55faaf6c8890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55faaf6c8990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55faaf6c89f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55faaf6c8ab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55faaf6c8a50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55faaf6c8910 'pthread_barrierattr_t'
|     `-Record 0x55faaf6c8890 ''
|-TypedefDecl 0x55faaf6c8bc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55faaf6c8b60 'long [8]' 8 
|   `-BuiltinType 0x55faaf64a0a0 'long'
|-EnumDecl 0x55faaf6c8c20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55faaf6c8ce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55faaf6c8d38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55faaf6c8d88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55faaf6c8e58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55faaf6c8ea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55faaf6c8ef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55faaf6c8f48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55faaf6c8fd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55faaf6c8fb8 <col:26> 'int'
| |   `-DeclRefExpr 0x55faaf6c8f98 <col:26> 'int' EnumConstant 0x55faaf6c8e58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55faaf6c9058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55faaf6c9040 <col:29> 'int'
| |   `-DeclRefExpr 0x55faaf6c9020 <col:29> 'int' EnumConstant 0x55faaf6c8ea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55faaf6c90e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55faaf6c90c8 <col:30> 'int'
| |   `-DeclRefExpr 0x55faaf6c90a8 <col:30> 'int' EnumConstant 0x55faaf6c8ef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55faaf6c9168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55faaf6c9150 <col:27> 'int'
|     `-DeclRefExpr 0x55faaf6c9130 <col:27> 'int' EnumConstant 0x55faaf6c8fd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55faaf6c91b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55faaf6c9288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55faaf6c9310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55faaf6c92f8 <col:30> 'int'
| |   `-DeclRefExpr 0x55faaf6c92d8 <col:30> 'int' EnumConstant 0x55faaf6c9288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55faaf6c9360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55faaf6c93e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55faaf6c93d0 <col:29> 'int'
|     `-DeclRefExpr 0x55faaf6c93b0 <col:29> 'int' EnumConstant 0x55faaf6c9360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55faaf6c9438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55faaf6c9508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55faaf6c9570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55faaf6c95c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55faaf6c9610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55faaf6c96d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55faaf6c9728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55faaf6c9778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55faaf6c9800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55faaf6c97e8 <col:31> 'int'
|     `-DeclRefExpr 0x55faaf6c97c8 <col:31> 'int' EnumConstant 0x55faaf6c96d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55faaf6c9850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55faaf6c9918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55faaf6c9968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55faaf6c99b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55faaf6c9a88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55faaf6c9ad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55faaf6c9b28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55faaf6c9bf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55faaf6c9c48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55faaf6c9c98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55faaf6c9ed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55faaf6c9f40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55faaf6c9fa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55faaf6ca0c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55faaf6ca118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55faaf6ca1e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55faaf6ca238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55faaf6ca288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55faaf6ca358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55faaf6ca3a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55faaf6ca9d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55faaf6ca4a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55faaf6ca5c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55faaf6ca7c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55faaf6ca840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55faaf6caa98 <col:47>
| |-NonNullAttr 0x55faaf6caaf0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55faaf6cab28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55faaf6cac50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55faaf6cab80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55faaf6caea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55faaf6cad08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55faaf6cad88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55faaf6cb078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55faaf6caf68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55faaf6cb120 <col:60>
|-FunctionDecl 0x55faaf6cb270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55faaf6cb310 <col:54>
| `-ConstAttr 0x55faaf6cb368 <col:95>
|-FunctionDecl 0x55faaf6cbda0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55faaf6cb3a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55faaf6cb418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55faaf6cbe50 <line:395:19>
| `-ConstAttr 0x55faaf6cbea8 <col:60>
|-FunctionDecl 0x55faaf6cc078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55faaf6cbf40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55faaf6cc120 <col:71>
| `-NonNullAttr 0x55faaf6cc178 <col:112, col:126> 1
|-FunctionDecl 0x55faaf6cc280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55faaf6cc1c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55faaf6cc328 <line:398:22>
| `-NonNullAttr 0x55faaf6cc380 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6cc5a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55faaf6cc3c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55faaf6cc448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55faaf6cc658 <line:401:22>
| `-NonNullAttr 0x55faaf6cc6b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55faaf6cc8b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55faaf6cc6f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55faaf6cc778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55faaf6cc968 <line:404:22>
| `-NonNullAttr 0x55faaf6cc9c0 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6ccc18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55faaf6cca08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55faaf6ccab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55faaf6cccc8 <line:407:22>
| `-NonNullAttr 0x55faaf6ccd20 <col:63, col:80> 1 2
|-FunctionDecl 0x55faaf6cdf78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55faaf6cddc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55faaf6cde38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55faaf6ce028 <line:410:22>
| `-NonNullAttr 0x55faaf6ce080 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6ce2b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55faaf6ce0c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55faaf6ce158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55faaf6ce368 <line:413:22>
| `-NonNullAttr 0x55faaf6ce3c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55faaf6ce5f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55faaf6ce408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55faaf6ce498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55faaf6ce6a8 <col:37>
| `-NonNullAttr 0x55faaf6ce700 <col:78, col:95> 1 2
|-FunctionDecl 0x55faaf6ce8e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55faaf6ce748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55faaf6ce7c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55faaf6ce998 <line:419:22>
| `-NonNullAttr 0x55faaf6ce9f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55faaf6ceb78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55faaf6cea38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55faaf6ceab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55faaf6cec28 <line:421:22>
| `-NonNullAttr 0x55faaf6cec80 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6cfe58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55faaf6cecc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55faaf6ced48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55faaf6cff08 <line:424:22>
| `-NonNullAttr 0x55faaf6cff60 <col:63, col:80> 1 2
|-FunctionDecl 0x55faaf6d00e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55faaf6cffa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55faaf6d0028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55faaf6d0198 <line:427:22>
| `-NonNullAttr 0x55faaf6d01f0 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6d0398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55faaf6d0238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55faaf6d02b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55faaf6d0448 <line:430:22>
| `-NonNullAttr 0x55faaf6d04a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55faaf6d0628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55faaf6d04e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55faaf6d0568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55faaf6d06d8 <line:432:22>
| `-NonNullAttr 0x55faaf6d0730 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6d0958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55faaf6d0778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55faaf6d07f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55faaf6d0a08 <line:435:22>
| |-NonNullAttr 0x55faaf6d0a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55faaf6d0a98 <col:100> "" ""
|-FunctionDecl 0x55faaf6d0ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55faaf6d0ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55faaf6d0b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55faaf6d0d58 <line:438:22>
| |-NonNullAttr 0x55faaf6d0db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x55faaf6d0df8 <col:97> "" ""
|-FunctionDecl 0x55faaf6d0fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55faaf6d0e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55faaf6d0ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55faaf6d1098 <line:441:22>
| `-NonNullAttr 0x55faaf6d10f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55faaf6d1270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55faaf6d1138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55faaf6d11b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55faaf6d1320 <line:444:22>
| `-NonNullAttr 0x55faaf6d1378 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6d1668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55faaf6d13c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55faaf6d1448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55faaf6d14c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55faaf6d1720 <line:448:22>
| `-NonNullAttr 0x55faaf6d1778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55faaf6d1a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55faaf6d17d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55faaf6d1850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55faaf6d18c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55faaf6d1ae0 <col:43>
| `-NonNullAttr 0x55faaf6d1b38 <col:84, col:98> 1
|-FunctionDecl 0x55faaf6d1e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55faaf6d1b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55faaf6d1c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55faaf6d1c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55faaf6d1ef8 <line:453:22>
| `-NonNullAttr 0x55faaf6d1f50 <col:63, col:77> 3
|-FunctionDecl 0x55faaf6d2228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55faaf6d1f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55faaf6d2018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55faaf6d20a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55faaf6d22e0 <line:457:22>
| `-NonNullAttr 0x55faaf6d2338 <col:63, col:80> 2 3
|-FunctionDecl 0x55faaf6d2528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55faaf6d2388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55faaf6d2408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55faaf6d25d8 <line:459:22>
|-FunctionDecl 0x55faaf6d29a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55faaf6d26a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55faaf6d2840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55faaf6d2a58 <col:52, col:69> 1 2
|-FunctionDecl 0x55faaf6d2c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55faaf6d2ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55faaf6d2b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55faaf6d2e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55faaf6d2cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55faaf6d2d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55faaf6d2f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55faaf6d2ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55faaf6d30a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55faaf6d3148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55faaf6d31f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55faaf6d32e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55faaf6d3350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55faaf6d3520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe023_rmo.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55faaf6d3618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55faaf6d36d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55faaf6d3670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55faaf6d31d0 '__pthread_unwind_buf_t'
| |   `-Record 0x55faaf6d3148 ''
| `-AlignedAttr 0x55faaf6d3728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55faaf6d37a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55faaf6d3900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55faaf6d3968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55faaf6d39d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55faaf6d3a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55faaf6d3c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55faaf6d3b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55faaf6d3e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55faaf6d3cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55faaf6d3fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55faaf6d3ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55faaf6d4088 <line:488:22>
|-RecordDecl 0x55faaf6d40e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55faaf6d43f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55faaf6d4258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55faaf6d42d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55faaf6d44a8 <col:86>
| `-ReturnsTwiceAttr 0x55faaf6d4500 <col:12> Implicit
|-FunctionDecl 0x55faaf6d4828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55faaf6d45d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55faaf6d46e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55faaf6d48d8 <line:494:22>
| `-NonNullAttr 0x55faaf6d4930 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6d4aa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55faaf6d4978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55faaf6d4b50 <line:496:22>
| `-NonNullAttr 0x55faaf6d4ba8 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6d4cb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55faaf6d4bf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55faaf6d4d58 <line:498:22>
| `-NonNullAttr 0x55faaf6d4db0 <col:52, col:66> 1
|-FunctionDecl 0x55faaf6d4ee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55faaf6d4e30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55faaf6d4f90 <line:500:22>
| `-NonNullAttr 0x55faaf6d4fe8 <col:52, col:66> 1
|-FunctionDecl 0x55faaf6d5228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55faaf6d5038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55faaf6d50c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55faaf6d52d8 <col:36>
| `-NonNullAttr 0x55faaf6d5330 <col:66, col:83> 1 2
|-FunctionDecl 0x55faaf6d5430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55faaf6d5378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55faaf6d54d8 <line:505:22>
| `-NonNullAttr 0x55faaf6d5530 <col:52, col:66> 1
|-FunctionDecl 0x55faaf6d57c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55faaf6d55e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55faaf6d5660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55faaf6d5878 <line:509:22>
| `-NonNullAttr 0x55faaf6d58d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55faaf6d5b98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55faaf6d5918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55faaf6d5998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55faaf6d5a18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55faaf6d5c50 <line:513:22>
| `-NonNullAttr 0x55faaf6d5ca8 <col:63, col:80> 1 3
|-FunctionDecl 0x55faaf6d5e40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55faaf6d5cf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55faaf6d5ee8 <line:515:22>
| `-NonNullAttr 0x55faaf6d5f40 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6d6128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55faaf6d5ff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55faaf6d61d0 <line:517:22>
| `-NonNullAttr 0x55faaf6d6228 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6d6330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55faaf6d6278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55faaf6d63d8 <line:519:22>
| `-NonNullAttr 0x55faaf6d6430 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6d6658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55faaf6d6478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55faaf6d64f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55faaf6d6708 <line:523:22>
| `-NonNullAttr 0x55faaf6d6760 <col:63, col:80> 1 2
|-FunctionDecl 0x55faaf6d6968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55faaf6d67a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55faaf6d6828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55faaf6d6a18 <line:526:22>
| `-NonNullAttr 0x55faaf6d6a70 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6d6c18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55faaf6d6ab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55faaf6d6b38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55faaf6d6cc8 <line:529:22>
| `-NonNullAttr 0x55faaf6d6d20 <col:63, col:80> 1 2
|-FunctionDecl 0x55faaf6d7f20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55faaf6d6d68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55faaf6d7e60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55faaf6d7fd0 <line:531:22>
| `-NonNullAttr 0x55faaf6d8028 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6d81d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55faaf6d8078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55faaf6d80f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55faaf6d8288 <line:535:22>
| `-NonNullAttr 0x55faaf6d82e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55faaf6d8468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55faaf6d8328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55faaf6d83a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55faaf6d8518 <line:538:22>
| `-NonNullAttr 0x55faaf6d8570 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6d8718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55faaf6d85b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55faaf6d8638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55faaf6d87c8 <line:542:22>
| `-NonNullAttr 0x55faaf6d8820 <col:63, col:80> 1 2
|-FunctionDecl 0x55faaf6d89a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55faaf6d8868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55faaf6d88e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55faaf6d8a58 <line:545:22>
| `-NonNullAttr 0x55faaf6d8ab0 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6d8c98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55faaf6d8af8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55faaf6d8b78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55faaf6d8d48 <line:548:22>
| `-NonNullAttr 0x55faaf6d8da0 <col:63, col:80> 1 2
|-FunctionDecl 0x55faaf6d9f58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55faaf6d8de8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55faaf6d9e98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55faaf6da008 <line:551:22>
| `-NonNullAttr 0x55faaf6da060 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6da398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55faaf6da140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55faaf6da250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55faaf6da448 <col:29>
| `-NonNullAttr 0x55faaf6da4a0 <col:70, col:84> 1
|-FunctionDecl 0x55faaf6da618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55faaf6da4e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55faaf6da6c0 <line:556:22>
| `-NonNullAttr 0x55faaf6da718 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6da820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55faaf6da768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55faaf6da8c8 <line:558:22>
| `-NonNullAttr 0x55faaf6da920 <col:52, col:66> 1
|-FunctionDecl 0x55faaf6daa20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55faaf6da968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55faaf6daac8 <line:560:19>
| `-NonNullAttr 0x55faaf6dab20 <col:49, col:63> 1
|-FunctionDecl 0x55faaf6dad58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55faaf6dab68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55faaf6dabf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55faaf6dae08 <col:39>
| `-NonNullAttr 0x55faaf6dae90 <col:69, col:86> 1 2
|-FunctionDecl 0x55faaf6daf90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55faaf6daed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55faaf6db038 <line:565:22>
| `-NonNullAttr 0x55faaf6db090 <col:52, col:66> 1
|-FunctionDecl 0x55faaf6db190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55faaf6db0d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55faaf6db238 <line:567:22>
| `-NonNullAttr 0x55faaf6db290 <col:52, col:66> 1
|-FunctionDecl 0x55faaf6db448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55faaf6db2d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55faaf6db368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55faaf6db4f8 <col:39>
| `-NonNullAttr 0x55faaf6db550 <col:69, col:86> 1 2
|-FunctionDecl 0x55faaf6db650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55faaf6db598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55faaf6db6f8 <line:572:22>
| `-NonNullAttr 0x55faaf6db750 <col:52, col:66> 1
|-FunctionDecl 0x55faaf6db938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55faaf6db800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55faaf6db9e0 <line:574:22>
| `-NonNullAttr 0x55faaf6dba38 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6dbb40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55faaf6dba88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55faaf6dbbe8 <line:576:22>
| `-NonNullAttr 0x55faaf6dbc40 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6dbea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55faaf6dbc88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55faaf6dbd08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55faaf6dbf50 <line:580:22>
| `-NonNullAttr 0x55faaf6dbfa8 <col:63, col:80> 1 2
|-FunctionDecl 0x55faaf6dc1b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55faaf6dbff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55faaf6dc078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55faaf6dc268 <line:583:22>
| `-NonNullAttr 0x55faaf6dc2c0 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6dc468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55faaf6dc308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55faaf6dc388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55faaf6dc518 <line:587:22>
| `-NonNullAttr 0x55faaf6dc570 <col:63, col:80> 1 2
|-FunctionDecl 0x55faaf6dc6f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55faaf6dc5b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55faaf6dc638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55faaf6dc7a8 <col:36>
| `-NonNullAttr 0x55faaf6dc800 <col:77, col:91> 1
|-FunctionDecl 0x55faaf6dcb38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55faaf6dc8e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55faaf6dc9f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55faaf6dcbe8 <line:592:22>
| `-NonNullAttr 0x55faaf6dcc40 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6dcdb8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55faaf6dcc88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55faaf6dce60 <line:594:22>
| `-NonNullAttr 0x55faaf6dcee0 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6dcfe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55faaf6dcf28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55faaf6dd088 <line:596:22>
| `-NonNullAttr 0x55faaf6dd0e0 <col:52, col:66> 1
|-FunctionDecl 0x55faaf6dd1e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55faaf6dd128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55faaf6dd288 <line:598:22>
| `-NonNullAttr 0x55faaf6dd2e0 <col:52, col:66> 1
|-FunctionDecl 0x55faaf6dd508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55faaf6dd328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55faaf6dd3a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55faaf6dd5b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55faaf6dd8e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55faaf6dd638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55faaf6dd6b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55faaf6dd740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55faaf6dd9a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55faaf6ddbb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55faaf6dda80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55faaf6ddc60 <line:607:22>
| `-NonNullAttr 0x55faaf6ddcb8 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6dddc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55faaf6ddd08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55faaf6dde68 <line:609:22>
| `-NonNullAttr 0x55faaf6ddef0 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6de118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55faaf6ddf38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55faaf6ddfb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55faaf6de1c8 <line:613:22>
| `-NonNullAttr 0x55faaf6de220 <col:63, col:80> 1 2
|-FunctionDecl 0x55faaf6de428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55faaf6de268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55faaf6de2e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55faaf6de4d8 <col:37>
| `-NonNullAttr 0x55faaf6de530 <col:78, col:92> 1
|-FunctionDecl 0x55faaf6de748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55faaf6de578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55faaf6de620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55faaf6de7f8 <line:619:22>
| `-NonNullAttr 0x55faaf6de850 <col:63, col:80> 1 2
|-FunctionDecl 0x55faaf6dea18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55faaf6de898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55faaf6de910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55faaf6deac8 <line:622:22>
| `-NonNullAttr 0x55faaf6deb20 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6dedc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55faaf6dec00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55faaf6dec80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55faaf6dee78 <line:624:22>
| `-NonNullAttr 0x55faaf6def00 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6df078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55faaf6def48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55faaf6df120 <line:626:22>
| `-NonNullAttr 0x55faaf6df178 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6df280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55faaf6df1c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55faaf6df328 <line:628:22>
| `-NonNullAttr 0x55faaf6df380 <col:52, col:66> 1
|-FunctionDecl 0x55faaf6df480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55faaf6df3c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55faaf6df528 <line:630:22>
| `-NonNullAttr 0x55faaf6df580 <col:52, col:66> 1
|-FunctionDecl 0x55faaf6df680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55faaf6df5c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55faaf6df728 <line:632:22>
| `-NonNullAttr 0x55faaf6df780 <col:52, col:66> 1
|-FunctionDecl 0x55faaf6dfb58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55faaf6df860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55faaf6df970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55faaf6df9f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55faaf6dfc10 <line:636:22>
| `-NonNullAttr 0x55faaf6dfc68 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6dfde8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55faaf6dfcb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55faaf6dfe90 <line:638:22>
| `-NonNullAttr 0x55faaf6dff10 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6e0010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55faaf6dff58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55faaf6e00b8 <line:640:22>
| `-NonNullAttr 0x55faaf6e0110 <col:52, col:66> 1
|-FunctionDecl 0x55faaf6e02f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55faaf6e01c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55faaf6e03a0 <line:642:22>
| `-NonNullAttr 0x55faaf6e03f8 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6e0500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55faaf6e0448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55faaf6e05a8 <line:644:22>
| `-NonNullAttr 0x55faaf6e0600 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6e0828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55faaf6e0648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55faaf6e06c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55faaf6e08d8 <line:648:22>
| `-NonNullAttr 0x55faaf6e0930 <col:63, col:80> 1 2
|-FunctionDecl 0x55faaf6e0b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55faaf6e0978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55faaf6e09f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55faaf6e0be8 <line:651:22>
| `-NonNullAttr 0x55faaf6e0c40 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6e0fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55faaf6e0d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55faaf6e0e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55faaf6e1058 <line:654:22>
| `-NonNullAttr 0x55faaf6e10b0 <col:63, col:77> 1
|-FunctionDecl 0x55faaf6e1208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55faaf6e10f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55faaf6e12b0 <col:69>
|-FunctionDecl 0x55faaf6e1428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55faaf6e1318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55faaf6e14d0 <col:72>
|-FunctionDecl 0x55faaf6e1708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55faaf6e1538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55faaf6e15e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55faaf6e17b8 <col:44>
|-FunctionDecl 0x55faaf6e19d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55faaf6e1820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55faaf6e1898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55faaf6e1a88 <line:661:22>
| `-NonNullAttr 0x55faaf6e1ae0 <col:63, col:77> 2
|-FunctionDecl 0x55faaf6e2f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55faaf6e1bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55faaf6e1cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55faaf6e1de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55faaf6e3008 <col:47>
|-FunctionDecl 0x55faaf6e3110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55faaf6e3078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55faaf6e3268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55faaf6e31d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55faaf6e33c0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55faaf6e3328 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55faaf6e3488 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55faaf6e3548 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55faaf6e3608 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55faaf6e36c0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55faaf6e3740 prev 0x55faaf6e36c0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55faaf6e37a8 <col:24> 'int' 0
|-VarDecl 0x55faaf6e37e0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55faaf6e3860 prev 0x55faaf6e37e0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55faaf6e38c8 <col:27> 'int' 0
|-VarDecl 0x55faaf6e3900 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55faaf6e3980 prev 0x55faaf6e3900 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55faaf6e39e8 <col:27> 'int' 0
|-VarDecl 0x55faaf6e3a20 <line:678:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x55faaf6e3aa0 prev 0x55faaf6e3a20 <line:679:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x55faaf6e3b08 <col:27> 'int' 0
|-VarDecl 0x55faaf6e3b38 <line:680:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55faaf6e3bb0 <line:681:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55faaf6e3c30 <line:682:1, col:5> col:5 used x 'int'
|-VarDecl 0x55faaf6e3cb0 prev 0x55faaf6e3c30 <line:683:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55faaf6e3d18 <col:9> 'int' 0
|-VarDecl 0x55faaf6e3d50 <line:684:1, col:5> col:5 used y 'int'
|-VarDecl 0x55faaf6e3dd0 prev 0x55faaf6e3d50 <line:685:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55faaf6e3e38 <col:9> 'int' 0
|-VarDecl 0x55faaf6e3e68 <line:686:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x55faaf6e3f20 <line:687:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x55faaf6e3f98 <line:688:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x55faaf6e4010 <line:689:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x55faaf6e4088 <line:690:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x55faaf6e4100 <line:691:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x55faaf6e4178 <line:692:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x55faaf6e41f0 <line:693:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x55faaf6e4268 <line:694:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x55faaf6e42e0 <line:695:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x55faaf6e4358 <line:696:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x55faaf6e43d8 <line:697:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x55faaf6e4458 <line:698:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x55faaf6e44d0 <line:699:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x55faaf6e4550 <line:700:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x55faaf6e45c8 <line:701:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x55faaf6e4640 <line:702:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55faaf6e46b8 <line:703:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55faaf6e47d0 prev 0x55faaf6e3110 <line:704:1, line:743:1> line:704:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55faaf6e4738 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55faaf6e91a8 <line:705:1, line:743:1>
|   |-CallExpr 0x55faaf6e48e8 <line:706:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55faaf6e48d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55faaf6e4878 <col:3> 'void ()' Function 0x55faaf68a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55faaf6e4948 <line:707:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55faaf6e4908 <col:3> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
|   | `-IntegerLiteral 0x55faaf6e4928 <col:7> 'int' 1
|   |-CallExpr 0x55faaf6e49a0 <line:708:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55faaf6e4988 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55faaf6e4968 <col:3> 'void ()' Function 0x55faaf68a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55faaf6e49f8 <line:709:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55faaf6e49e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55faaf6e49c0 <col:3> 'void ()' Function 0x55faaf68a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55faaf6e4ce0 <line:710:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55faaf6e4a18 <col:3> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
|   | `-ConditionalOperator 0x55faaf6e4cb0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55faaf6e4ad8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55faaf6e4a90 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55faaf6e4a78 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55faaf6e4a38 <col:7> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55faaf6e4ac0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55faaf6e4aa8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55faaf6e4a58 <col:25> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55faaf6e4c98 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55faaf6e4af8 <col:42> 'int' lvalue Var 0x55faaf6e4458 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55faaf6e4c78 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55faaf6e4c48 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55faaf6e4bb8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55faaf6e4b70 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55faaf6e4b58 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55faaf6e4b18 <col:55> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55faaf6e4ba0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55faaf6e4b88 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55faaf6e4b38 <col:73> '_Bool' lvalue Var 0x55faaf6e41f0 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55faaf6e4c18 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55faaf6e4bd8 <col:90> 'int' lvalue Var 0x55faaf6e4550 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55faaf6e4c30 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55faaf6e4bf8 <col:102> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
|   |-BinaryOperator 0x55faaf6e4ee8 <line:711:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6e4d00 <col:3> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6e4ed0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55faaf6e4ea0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55faaf6e4dc0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55faaf6e4d78 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55faaf6e4d60 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55faaf6e4d20 <col:20> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55faaf6e4da8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55faaf6e4d90 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55faaf6e4d40 <col:38> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55faaf6e4e58 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55faaf6e4e10 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55faaf6e4de0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55faaf6e4e88 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55faaf6e4e70 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55faaf6e4e38 <col:66> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55faaf6e51f8 <line:712:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6e4f30 <col:3> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6e51e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55faaf6e51b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55faaf6e50d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55faaf6e4ff0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55faaf6e4fa8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55faaf6e4f90 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55faaf6e4f50 <col:20> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55faaf6e4fd8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55faaf6e4fc0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55faaf6e4f70 <col:38> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55faaf6e50b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55faaf6e5068 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55faaf6e5050 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55faaf6e5010 <col:56> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55faaf6e5098 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55faaf6e5080 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55faaf6e5030 <col:74> '_Bool' lvalue Var 0x55faaf6e41f0 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55faaf6e5168 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55faaf6e5120 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55faaf6e50f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55faaf6e5198 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55faaf6e5180 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55faaf6e5148 <col:102> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55faaf6e5400 <line:713:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6e5218 <col:3> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6e53e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55faaf6e53b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55faaf6e52d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55faaf6e5290 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55faaf6e5278 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55faaf6e5238 <col:20> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55faaf6e52c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55faaf6e52a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55faaf6e5258 <col:38> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55faaf6e5370 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55faaf6e5328 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55faaf6e52f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55faaf6e53a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55faaf6e5388 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55faaf6e5350 <col:66> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55faaf6e56e8 <line:714:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6e5420 <col:3> '_Bool' lvalue Var 0x55faaf6e41f0 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6e56d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55faaf6e56a0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55faaf6e55c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55faaf6e54e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55faaf6e5498 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55faaf6e5480 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55faaf6e5440 <col:20> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55faaf6e54c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55faaf6e54b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55faaf6e5460 <col:38> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55faaf6e55a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55faaf6e5558 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55faaf6e5540 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55faaf6e5500 <col:56> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55faaf6e5588 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55faaf6e5570 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55faaf6e5520 <col:74> '_Bool' lvalue Var 0x55faaf6e41f0 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55faaf6e5658 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55faaf6e5610 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55faaf6e55e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55faaf6e5688 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55faaf6e5670 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55faaf6e5638 <col:102> '_Bool' lvalue Var 0x55faaf6e41f0 'y$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55faaf6e5740 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55faaf6e5728 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55faaf6e5708 <col:3> 'void ()' Function 0x55faaf68a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55faaf6e5798 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55faaf6e5780 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55faaf6e5760 <col:3> 'void ()' Function 0x55faaf68a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55faaf6e5868 <line:717:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6e57b8 <col:3> '_Bool' lvalue Var 0x55faaf6e4640 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55faaf6e5848 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55faaf6e5830 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55faaf6e57d8 <col:19> '_Bool (void)' Function 0x55faaf689c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55faaf6e5900 <line:718:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6e5888 <col:3> '_Bool' lvalue Var 0x55faaf6e46b8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55faaf6e58e0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55faaf6e58c8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55faaf6e58a8 <col:19> '_Bool (void)' Function 0x55faaf689c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55faaf6e5978 <line:719:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6e5920 <col:3> '_Bool' lvalue Var 0x55faaf6e3e68 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6e5960 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55faaf6e5940 <col:21> '_Bool' lvalue Var 0x55faaf6e46b8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55faaf6e59f0 <line:720:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55faaf6e5998 <col:3> 'int' lvalue Var 0x55faaf6e3f20 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55faaf6e59d8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55faaf6e59b8 <col:15> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
|   |-BinaryOperator 0x55faaf6e5e28 <line:721:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55faaf6e5a10 <col:3> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
|   | `-ConditionalOperator 0x55faaf6e5df8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55faaf6e5c20 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55faaf6e5b40 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55faaf6e5a68 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55faaf6e5a50 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55faaf6e5a30 <col:8> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55faaf6e5b20 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55faaf6e5ab8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55faaf6e5aa0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55faaf6e5a80 <col:27> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x55faaf6e5b08 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55faaf6e5af0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55faaf6e5ad0 <col:46> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55faaf6e5c00 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55faaf6e5b98 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55faaf6e5b80 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55faaf6e5b60 <col:65> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x55faaf6e5be8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55faaf6e5bd0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55faaf6e5bb0 <col:84> '_Bool' lvalue Var 0x55faaf6e41f0 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55faaf6e5de0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55faaf6e5c40 <col:101> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
|   |   `-ParenExpr 0x55faaf6e5dc0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55faaf6e5d90 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55faaf6e5d00 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55faaf6e5cb8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55faaf6e5ca0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55faaf6e5c60 <col:106> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55faaf6e5ce8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55faaf6e5cd0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55faaf6e5c80 <col:124> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55faaf6e5d60 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55faaf6e5d20 <col:141> 'int' lvalue Var 0x55faaf6e4458 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55faaf6e5d78 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55faaf6e5d40 <col:153> 'int' lvalue Var 0x55faaf6e4550 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55faaf6e6348 <line:722:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55faaf6e5e48 <col:3> 'int' lvalue Var 0x55faaf6e4458 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55faaf6e6318 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55faaf6e62e8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55faaf6e62d0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55faaf6e5e68 <col:15> '_Bool' lvalue Var 0x55faaf6e46b8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55faaf6e6300 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55faaf6e5e88 <col:31> 'int' lvalue Var 0x55faaf6e4458 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55faaf6e62b0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55faaf6e6280 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55faaf6e60a8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55faaf6e5fc8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55faaf6e5ee0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55faaf6e5ec8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55faaf6e5ea8 <col:45> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55faaf6e5fa8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55faaf6e5f40 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55faaf6e5f18 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55faaf6e5ef8 <col:64> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55faaf6e5f90 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55faaf6e5f78 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55faaf6e5f58 <col:83> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55faaf6e6088 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55faaf6e6020 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55faaf6e6008 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55faaf6e5fe8 <col:102> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55faaf6e6070 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55faaf6e6058 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55faaf6e6038 <col:121> '_Bool' lvalue Var 0x55faaf6e41f0 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55faaf6e6268 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55faaf6e60c8 <col:138> 'int' lvalue Var 0x55faaf6e4458 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55faaf6e6248 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55faaf6e6218 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55faaf6e6188 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55faaf6e6140 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55faaf6e6128 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55faaf6e60e8 <col:151> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55faaf6e6170 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55faaf6e6158 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55faaf6e6108 <col:169> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55faaf6e61e8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55faaf6e61a8 <col:186> 'int' lvalue Var 0x55faaf6e4458 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55faaf6e6200 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55faaf6e61c8 <col:198> 'int' lvalue Var 0x55faaf6e4458 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55faaf6e6858 <line:723:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55faaf6e6368 <col:3> 'int' lvalue Var 0x55faaf6e4550 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55faaf6e6828 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55faaf6e67f8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55faaf6e67e0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55faaf6e6388 <col:15> '_Bool' lvalue Var 0x55faaf6e46b8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55faaf6e6810 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55faaf6e63a8 <col:31> 'int' lvalue Var 0x55faaf6e4550 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55faaf6e67c0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55faaf6e6790 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55faaf6e65b8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55faaf6e64d8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55faaf6e6400 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55faaf6e63e8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55faaf6e63c8 <col:45> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55faaf6e64b8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55faaf6e6450 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55faaf6e6438 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55faaf6e6418 <col:64> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55faaf6e64a0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55faaf6e6488 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55faaf6e6468 <col:83> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55faaf6e6598 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55faaf6e6530 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55faaf6e6518 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55faaf6e64f8 <col:102> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55faaf6e6580 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55faaf6e6568 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55faaf6e6548 <col:121> '_Bool' lvalue Var 0x55faaf6e41f0 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55faaf6e6778 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55faaf6e65d8 <col:138> 'int' lvalue Var 0x55faaf6e4550 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55faaf6e6758 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55faaf6e6728 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55faaf6e6698 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55faaf6e6650 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55faaf6e6638 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55faaf6e65f8 <col:151> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55faaf6e6680 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55faaf6e6668 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55faaf6e6618 <col:169> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55faaf6e66f8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55faaf6e66b8 <col:186> 'int' lvalue Var 0x55faaf6e4550 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55faaf6e6710 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55faaf6e66d8 <col:198> 'int' lvalue Var 0x55faaf6e4550 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55faaf6e6e00 <line:724:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6e6878 <col:3> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6e6de8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55faaf6e6db8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55faaf6e6d70 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55faaf6e6d58 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55faaf6e6898 <col:20> '_Bool' lvalue Var 0x55faaf6e46b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55faaf6e6da0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55faaf6e6d88 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55faaf6e68b8 <col:36> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55faaf6e6d38 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55faaf6e6d08 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55faaf6e6ac8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55faaf6e69e8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55faaf6e6910 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55faaf6e68f8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55faaf6e68d8 <col:55> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55faaf6e69c8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55faaf6e6960 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55faaf6e6948 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55faaf6e6928 <col:74> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55faaf6e69b0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55faaf6e6998 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55faaf6e6978 <col:93> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55faaf6e6aa8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55faaf6e6a40 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55faaf6e6a28 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55faaf6e6a08 <col:112> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55faaf6e6a90 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55faaf6e6a78 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55faaf6e6a58 <col:131> '_Bool' lvalue Var 0x55faaf6e41f0 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55faaf6e6cf0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55faaf6e6cd8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55faaf6e6ae8 <col:148> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55faaf6e6cb8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55faaf6e6c88 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55faaf6e6ba8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55faaf6e6b60 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55faaf6e6b48 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55faaf6e6b08 <col:166> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55faaf6e6b90 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55faaf6e6b78 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55faaf6e6b28 <col:184> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55faaf6e6c40 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55faaf6e6bf8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55faaf6e6bc8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55faaf6e6c70 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55faaf6e6c58 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55faaf6e6c20 <col:212> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55faaf6e73d8 <line:725:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6e6e20 <col:3> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6e73c0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55faaf6e7390 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55faaf6e7348 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55faaf6e7330 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55faaf6e6e40 <col:20> '_Bool' lvalue Var 0x55faaf6e46b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55faaf6e7378 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55faaf6e7360 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55faaf6e6e60 <col:36> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55faaf6e7310 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55faaf6e72e0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55faaf6e7080 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55faaf6e6fa0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55faaf6e6eb8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55faaf6e6ea0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55faaf6e6e80 <col:55> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55faaf6e6f80 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55faaf6e6f08 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55faaf6e6ef0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55faaf6e6ed0 <col:74> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55faaf6e6f68 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55faaf6e6f50 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55faaf6e6f20 <col:93> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55faaf6e7060 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55faaf6e6ff8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55faaf6e6fe0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55faaf6e6fc0 <col:112> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55faaf6e7048 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55faaf6e7030 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55faaf6e7010 <col:131> '_Bool' lvalue Var 0x55faaf6e41f0 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55faaf6e72c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55faaf6e72b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55faaf6e70a0 <col:148> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55faaf6e7290 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55faaf6e7260 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55faaf6e7160 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55faaf6e7118 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55faaf6e7100 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55faaf6e70c0 <col:166> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55faaf6e7148 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55faaf6e7130 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55faaf6e70e0 <col:184> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55faaf6e7230 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55faaf6e71b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55faaf6e7180 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55faaf6e7248 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55faaf6e7208 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55faaf6e71d8 <col:219> 'int' 0
|   |-BinaryOperator 0x55faaf6e7980 <line:726:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6e73f8 <col:3> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6e7968 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55faaf6e7938 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55faaf6e78f0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55faaf6e78d8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55faaf6e7418 <col:20> '_Bool' lvalue Var 0x55faaf6e46b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55faaf6e7920 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55faaf6e7908 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55faaf6e7438 <col:36> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55faaf6e78b8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55faaf6e7888 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55faaf6e7648 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55faaf6e7568 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55faaf6e7490 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55faaf6e7478 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55faaf6e7458 <col:55> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55faaf6e7548 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55faaf6e74e0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55faaf6e74c8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55faaf6e74a8 <col:74> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55faaf6e7530 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55faaf6e7518 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55faaf6e74f8 <col:93> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55faaf6e7628 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55faaf6e75c0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55faaf6e75a8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55faaf6e7588 <col:112> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55faaf6e7610 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55faaf6e75f8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55faaf6e75d8 <col:131> '_Bool' lvalue Var 0x55faaf6e41f0 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55faaf6e7870 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55faaf6e7858 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55faaf6e7668 <col:148> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55faaf6e7838 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55faaf6e7808 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55faaf6e7728 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55faaf6e76e0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55faaf6e76c8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55faaf6e7688 <col:166> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55faaf6e7710 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55faaf6e76f8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55faaf6e76a8 <col:184> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55faaf6e77c0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55faaf6e7778 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55faaf6e7748 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55faaf6e77f0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55faaf6e77d8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55faaf6e77a0 <col:212> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55faaf6e7f60 <line:727:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6e79a0 <col:3> '_Bool' lvalue Var 0x55faaf6e41f0 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6e7f30 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55faaf6e7f00 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55faaf6e7eb8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55faaf6e7ea0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55faaf6e79c0 <col:20> '_Bool' lvalue Var 0x55faaf6e46b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55faaf6e7ee8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55faaf6e7ed0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55faaf6e79e0 <col:36> '_Bool' lvalue Var 0x55faaf6e41f0 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55faaf6e7e80 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55faaf6e7e50 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55faaf6e7bf0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55faaf6e7b10 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55faaf6e7a38 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55faaf6e7a20 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55faaf6e7a00 <col:55> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55faaf6e7af0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55faaf6e7a88 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55faaf6e7a70 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55faaf6e7a50 <col:74> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55faaf6e7ad8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55faaf6e7ac0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55faaf6e7aa0 <col:93> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55faaf6e7bd0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55faaf6e7b68 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55faaf6e7b50 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55faaf6e7b30 <col:112> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55faaf6e7bb8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55faaf6e7ba0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55faaf6e7b80 <col:131> '_Bool' lvalue Var 0x55faaf6e41f0 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55faaf6e7e38 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55faaf6e7e20 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55faaf6e7c10 <col:148> '_Bool' lvalue Var 0x55faaf6e41f0 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55faaf6e7e00 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55faaf6e7dd0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55faaf6e7cd0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55faaf6e7c88 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55faaf6e7c70 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55faaf6e7c30 <col:166> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55faaf6e7cb8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55faaf6e7ca0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55faaf6e7c50 <col:184> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55faaf6e7da0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55faaf6e7d20 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55faaf6e7cf0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55faaf6e7db8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55faaf6e7d78 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55faaf6e7d48 <col:219> 'int' 0
|   |-BinaryOperator 0x55faaf6e7fd8 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55faaf6e7f80 <col:3> 'int' lvalue Var 0x55faaf6e3860 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55faaf6e7fc0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55faaf6e7fa0 <col:25> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
|   |-BinaryOperator 0x55faaf6e8108 <line:729:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55faaf6e7ff8 <col:3> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
|   | `-ConditionalOperator 0x55faaf6e80d8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55faaf6e8090 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55faaf6e8078 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55faaf6e8018 <col:7> '_Bool' lvalue Var 0x55faaf6e3e68 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55faaf6e80a8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55faaf6e8038 <col:25> 'int' lvalue Var 0x55faaf6e3f20 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55faaf6e80c0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55faaf6e8058 <col:37> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
|   |-BinaryOperator 0x55faaf6e81a0 <line:730:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6e8128 <col:3> '_Bool' lvalue Var 0x55faaf6e3e68 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55faaf6e8178 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55faaf6e8148 <col:28> 'int' 0
|   |-CallExpr 0x55faaf6e81f8 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55faaf6e81e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55faaf6e81c0 <col:3> 'void ()' Function 0x55faaf68a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55faaf6e8250 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55faaf6e8238 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55faaf6e8218 <col:3> 'void ()' Function 0x55faaf68a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55faaf6e8538 <line:733:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55faaf6e8270 <col:3> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
|   | `-ConditionalOperator 0x55faaf6e8508 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55faaf6e8330 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55faaf6e82e8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55faaf6e82d0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55faaf6e8290 <col:7> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55faaf6e8318 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55faaf6e8300 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55faaf6e82b0 <col:25> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55faaf6e84f0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55faaf6e8350 <col:42> 'int' lvalue Var 0x55faaf6e4458 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55faaf6e84d0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55faaf6e84a0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55faaf6e8410 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55faaf6e83c8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55faaf6e83b0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55faaf6e8370 <col:55> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55faaf6e83f8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55faaf6e83e0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55faaf6e8390 <col:73> '_Bool' lvalue Var 0x55faaf6e41f0 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55faaf6e8470 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55faaf6e8430 <col:90> 'int' lvalue Var 0x55faaf6e4550 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55faaf6e8488 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55faaf6e8450 <col:102> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
|   |-BinaryOperator 0x55faaf6e8740 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6e8558 <col:3> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6e8728 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55faaf6e86f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55faaf6e8618 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55faaf6e85d0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55faaf6e85b8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55faaf6e8578 <col:20> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55faaf6e8600 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55faaf6e85e8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55faaf6e8598 <col:38> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55faaf6e86b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55faaf6e8668 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55faaf6e8638 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55faaf6e86e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55faaf6e86c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55faaf6e8690 <col:66> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55faaf6e8a28 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6e8760 <col:3> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6e8a10 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55faaf6e89e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55faaf6e8900 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55faaf6e8820 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55faaf6e87d8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55faaf6e87c0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55faaf6e8780 <col:20> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55faaf6e8808 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55faaf6e87f0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55faaf6e87a0 <col:38> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55faaf6e88e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55faaf6e8898 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55faaf6e8880 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55faaf6e8840 <col:56> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55faaf6e88c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55faaf6e88b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55faaf6e8860 <col:74> '_Bool' lvalue Var 0x55faaf6e41f0 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55faaf6e8998 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55faaf6e8950 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55faaf6e8920 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55faaf6e89c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55faaf6e89b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55faaf6e8978 <col:102> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55faaf6e8c30 <line:736:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6e8a48 <col:3> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6e8c18 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55faaf6e8be8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55faaf6e8b08 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55faaf6e8ac0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55faaf6e8aa8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55faaf6e8a68 <col:20> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55faaf6e8af0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55faaf6e8ad8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55faaf6e8a88 <col:38> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55faaf6e8ba0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55faaf6e8b58 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55faaf6e8b28 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55faaf6e8bd0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55faaf6e8bb8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55faaf6e8b80 <col:66> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55faaf6e8f18 <line:737:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6e8c50 <col:3> '_Bool' lvalue Var 0x55faaf6e41f0 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6e8f00 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55faaf6e8ed0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55faaf6e8df0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55faaf6e8d10 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55faaf6e8cc8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55faaf6e8cb0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55faaf6e8c70 <col:20> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55faaf6e8cf8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55faaf6e8ce0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55faaf6e8c90 <col:38> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55faaf6e8dd0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55faaf6e8d88 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55faaf6e8d70 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55faaf6e8d30 <col:56> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55faaf6e8db8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55faaf6e8da0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55faaf6e8d50 <col:74> '_Bool' lvalue Var 0x55faaf6e41f0 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55faaf6e8e88 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55faaf6e8e40 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55faaf6e8e10 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55faaf6e8eb8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55faaf6e8ea0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55faaf6e8e68 <col:102> '_Bool' lvalue Var 0x55faaf6e41f0 'y$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55faaf6e8f88 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55faaf6e8f70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55faaf6e8f38 <col:3> 'void ()' Function 0x55faaf68a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55faaf6e8fe0 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55faaf6e8fc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55faaf6e8fa8 <col:3> 'void ()' Function 0x55faaf68a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55faaf6e9098 <line:740:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55faaf6e9000 <col:3> 'int' lvalue Var 0x55faaf6e3740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55faaf6e9078 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55faaf6e9060 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55faaf6e9020 <col:22> 'int' lvalue Var 0x55faaf6e3740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55faaf6e9040 <col:41> 'int' 1
|   |-CallExpr 0x55faaf6e90f0 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55faaf6e90d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55faaf6e90b8 <col:3> 'void ()' Function 0x55faaf68a570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55faaf6e9198 <line:742:3, col:36>
|     `-CallExpr 0x55faaf6e9178 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55faaf6e9160 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55faaf6e9110 <col:10> 'void *(void)' Function 0x55faaf689fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55faaf6e9390 prev 0x55faaf6e3268 <line:744:1, line:772:1> line:744:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55faaf6e92f8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55faaf6eab48 <line:745:1, line:772:1>
|   |-CallExpr 0x55faaf6e9470 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55faaf6e9458 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55faaf6e9438 <col:3> 'void ()' Function 0x55faaf68a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55faaf6e94e8 <line:747:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55faaf6e9490 <col:3> 'int' lvalue Var 0x55faaf6e4550 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55faaf6e94d0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55faaf6e94b0 <col:15> 'int' lvalue Var 0x55faaf6e4458 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55faaf6e9548 <line:748:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55faaf6e9508 <col:3> 'int' lvalue Var 0x55faaf6e4458 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x55faaf6e9528 <col:15> 'int' 2
|   |-BinaryOperator 0x55faaf6e95c0 <line:749:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6e9568 <col:3> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6e95a8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55faaf6e9588 <col:20> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55faaf6e9658 <line:750:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6e95e0 <col:3> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55faaf6e9630 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55faaf6e9600 <col:27> 'int' 1
|   |-CallExpr 0x55faaf6e97d8 <line:751:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55faaf6e97c0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55faaf6e9678 <col:3> 'void (int)' Function 0x55faaf68a238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55faaf6e9778 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55faaf6e9758 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55faaf6e9738 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55faaf6e96f0 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55faaf6e96d8 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55faaf6e9698 <col:23> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55faaf6e9720 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55faaf6e9708 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55faaf6e96b8 <col:41> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55faaf6e9858 <line:752:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6e9800 <col:3> '_Bool' lvalue Var 0x55faaf6e4178 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6e9840 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55faaf6e9820 <col:20> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55faaf6e98d0 <line:753:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6e9878 <col:3> '_Bool' lvalue Var 0x55faaf6e41f0 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6e98b8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55faaf6e9898 <col:20> '_Bool' lvalue Var 0x55faaf6e4010 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55faaf6e9948 <line:754:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6e98f0 <col:3> '_Bool' lvalue Var 0x55faaf6e4268 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6e9930 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55faaf6e9910 <col:20> '_Bool' lvalue Var 0x55faaf6e4088 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55faaf6e99c0 <line:755:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6e9968 <col:3> '_Bool' lvalue Var 0x55faaf6e42e0 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6e99a8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55faaf6e9988 <col:20> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55faaf6e9a58 <line:756:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6e99e0 <col:3> '_Bool' lvalue Var 0x55faaf6e4088 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x55faaf6e9a30 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55faaf6e9a00 <col:27> 'int' 1
|   |-CallExpr 0x55faaf6e9ab0 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55faaf6e9a98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55faaf6e9a78 <col:3> 'void ()' Function 0x55faaf68a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55faaf6e9b08 <line:758:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55faaf6e9af0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55faaf6e9ad0 <col:3> 'void ()' Function 0x55faaf68a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55faaf6e9b68 <line:759:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55faaf6e9b28 <col:3> 'int' lvalue Var 0x55faaf6e3cb0 'x' 'int'
|   | `-IntegerLiteral 0x55faaf6e9b48 <col:7> 'int' 1
|   |-CallExpr 0x55faaf6e9bc0 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55faaf6e9ba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55faaf6e9b88 <col:3> 'void ()' Function 0x55faaf68a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55faaf6e9c18 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55faaf6e9c00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55faaf6e9be0 <col:3> 'void ()' Function 0x55faaf68a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55faaf6e9f00 <line:762:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55faaf6e9c38 <col:3> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
|   | `-ConditionalOperator 0x55faaf6e9ed0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55faaf6e9cf8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55faaf6e9cb0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55faaf6e9c98 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55faaf6e9c58 <col:7> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55faaf6e9ce0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55faaf6e9cc8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55faaf6e9c78 <col:25> '_Bool' lvalue Var 0x55faaf6e4088 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55faaf6e9eb8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55faaf6e9d18 <col:42> 'int' lvalue Var 0x55faaf6e4458 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55faaf6e9e98 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55faaf6e9e68 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55faaf6e9dd8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55faaf6e9d90 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55faaf6e9d78 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55faaf6e9d38 <col:55> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55faaf6e9dc0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55faaf6e9da8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55faaf6e9d58 <col:73> '_Bool' lvalue Var 0x55faaf6e4268 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55faaf6e9e38 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55faaf6e9df8 <col:90> 'int' lvalue Var 0x55faaf6e4550 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55faaf6e9e50 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55faaf6e9e18 <col:102> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
|   |-BinaryOperator 0x55faaf6ea128 <line:763:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6e9f20 <col:3> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6ea110 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55faaf6ea0e0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55faaf6ea000 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55faaf6e9fb8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55faaf6e9fa0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55faaf6e9f40 <col:20> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55faaf6e9fe8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55faaf6e9fd0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55faaf6e9f80 <col:38> '_Bool' lvalue Var 0x55faaf6e4088 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55faaf6ea098 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55faaf6ea050 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55faaf6ea020 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55faaf6ea0c8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55faaf6ea0b0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55faaf6ea078 <col:66> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55faaf6ea410 <line:764:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6ea148 <col:3> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6ea3f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55faaf6ea3c8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55faaf6ea2e8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55faaf6ea208 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55faaf6ea1c0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55faaf6ea1a8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55faaf6ea168 <col:20> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55faaf6ea1f0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55faaf6ea1d8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55faaf6ea188 <col:38> '_Bool' lvalue Var 0x55faaf6e4088 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55faaf6ea2c8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55faaf6ea280 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55faaf6ea268 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55faaf6ea228 <col:56> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55faaf6ea2b0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55faaf6ea298 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55faaf6ea248 <col:74> '_Bool' lvalue Var 0x55faaf6e4268 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55faaf6ea380 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55faaf6ea338 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55faaf6ea308 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55faaf6ea3b0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55faaf6ea398 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55faaf6ea360 <col:102> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55faaf6ea618 <line:765:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6ea430 <col:3> '_Bool' lvalue Var 0x55faaf6e4088 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6ea600 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55faaf6ea5d0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55faaf6ea4f0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55faaf6ea4a8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55faaf6ea490 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55faaf6ea450 <col:20> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55faaf6ea4d8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55faaf6ea4c0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55faaf6ea470 <col:38> '_Bool' lvalue Var 0x55faaf6e4088 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55faaf6ea588 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55faaf6ea540 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55faaf6ea510 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55faaf6ea5b8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55faaf6ea5a0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55faaf6ea568 <col:66> '_Bool' lvalue Var 0x55faaf6e4088 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55faaf6ea900 <line:766:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6ea638 <col:3> '_Bool' lvalue Var 0x55faaf6e4268 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6ea8e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55faaf6ea8b8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55faaf6ea7d8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55faaf6ea6f8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55faaf6ea6b0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55faaf6ea698 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55faaf6ea658 <col:20> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55faaf6ea6e0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55faaf6ea6c8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55faaf6ea678 <col:38> '_Bool' lvalue Var 0x55faaf6e4088 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55faaf6ea7b8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55faaf6ea770 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55faaf6ea758 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55faaf6ea718 <col:56> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55faaf6ea7a0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55faaf6ea788 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55faaf6ea738 <col:74> '_Bool' lvalue Var 0x55faaf6e4268 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55faaf6ea870 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55faaf6ea828 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55faaf6ea7f8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55faaf6ea8a0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55faaf6ea888 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55faaf6ea850 <col:102> '_Bool' lvalue Var 0x55faaf6e4268 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55faaf6ea958 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55faaf6ea940 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55faaf6ea920 <col:3> 'void ()' Function 0x55faaf68a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55faaf6ea9b0 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55faaf6ea998 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55faaf6ea978 <col:3> 'void ()' Function 0x55faaf68a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55faaf6eaa68 <line:769:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55faaf6ea9d0 <col:3> 'int' lvalue Var 0x55faaf6e3740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55faaf6eaa48 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55faaf6eaa30 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55faaf6ea9f0 <col:22> 'int' lvalue Var 0x55faaf6e3740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55faaf6eaa10 <col:41> 'int' 1
|   |-CallExpr 0x55faaf6eaac0 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55faaf6eaaa8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55faaf6eaa88 <col:3> 'void ()' Function 0x55faaf68a570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55faaf6eab38 <line:771:3, col:36>
|     `-CallExpr 0x55faaf6eab18 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55faaf6eab00 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55faaf6eaae0 <col:10> 'void *(void)' Function 0x55faaf689fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55faaf6eacd8 prev 0x55faaf6e33c0 <line:773:1, line:805:1> line:773:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55faaf6eac40 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55faaf6ee888 <line:774:1, line:805:1>
|   |-CallExpr 0x55faaf6eadb8 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55faaf6eada0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55faaf6ead80 <col:3> 'void ()' Function 0x55faaf68a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55faaf6eae30 <line:776:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55faaf6eadd8 <col:3> 'int' lvalue Var 0x55faaf6e3980 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55faaf6eae18 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55faaf6eadf8 <col:25> 'int' lvalue Var 0x55faaf6e3cb0 'x' 'int'
|   |-CallExpr 0x55faaf6eae88 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55faaf6eae70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55faaf6eae50 <col:3> 'void ()' Function 0x55faaf68a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55faaf6eaee0 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55faaf6eaec8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55faaf6eaea8 <col:3> 'void ()' Function 0x55faaf68a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55faaf6eaf90 <line:779:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6eaf00 <col:3> '_Bool' lvalue Var 0x55faaf6e4640 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55faaf6eaf58 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55faaf6eaf40 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55faaf6eaf20 <col:19> '_Bool (void)' Function 0x55faaf689c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55faaf6eb028 <line:780:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6eafb0 <col:3> '_Bool' lvalue Var 0x55faaf6e46b8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55faaf6eb008 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55faaf6eaff0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55faaf6eafd0 <col:19> '_Bool (void)' Function 0x55faaf689c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55faaf6eb0a0 <line:781:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6eb048 <col:3> '_Bool' lvalue Var 0x55faaf6e3e68 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6eb088 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55faaf6eb068 <col:21> '_Bool' lvalue Var 0x55faaf6e46b8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55faaf6eb118 <line:782:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55faaf6eb0c0 <col:3> 'int' lvalue Var 0x55faaf6e3f20 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55faaf6eb100 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55faaf6eb0e0 <col:15> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
|   |-BinaryOperator 0x55faaf6eb550 <line:783:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55faaf6eb138 <col:3> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
|   | `-ConditionalOperator 0x55faaf6eb520 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55faaf6eb348 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55faaf6eb268 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55faaf6eb190 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55faaf6eb178 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55faaf6eb158 <col:8> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55faaf6eb248 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55faaf6eb1e0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55faaf6eb1c8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55faaf6eb1a8 <col:27> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x55faaf6eb230 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55faaf6eb218 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55faaf6eb1f8 <col:46> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55faaf6eb328 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55faaf6eb2c0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55faaf6eb2a8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55faaf6eb288 <col:65> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x55faaf6eb310 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55faaf6eb2f8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55faaf6eb2d8 <col:84> '_Bool' lvalue Var 0x55faaf6e42e0 'y$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55faaf6eb508 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55faaf6eb368 <col:101> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
|   |   `-ParenExpr 0x55faaf6eb4e8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55faaf6eb4b8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55faaf6eb428 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55faaf6eb3e0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55faaf6eb3c8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55faaf6eb388 <col:106> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55faaf6eb410 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55faaf6eb3f8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55faaf6eb3a8 <col:124> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55faaf6eb488 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55faaf6eb448 <col:141> 'int' lvalue Var 0x55faaf6e4458 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55faaf6eb4a0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55faaf6eb468 <col:153> 'int' lvalue Var 0x55faaf6e4550 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55faaf6eba60 <line:784:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55faaf6eb570 <col:3> 'int' lvalue Var 0x55faaf6e4458 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55faaf6eba30 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55faaf6eba00 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55faaf6eb9e8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55faaf6eb590 <col:15> '_Bool' lvalue Var 0x55faaf6e46b8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55faaf6eba18 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55faaf6eb5b0 <col:31> 'int' lvalue Var 0x55faaf6e4458 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55faaf6eb9c8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55faaf6eb998 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55faaf6eb7c0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55faaf6eb6e0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55faaf6eb608 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55faaf6eb5f0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55faaf6eb5d0 <col:45> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55faaf6eb6c0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55faaf6eb658 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55faaf6eb640 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55faaf6eb620 <col:64> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55faaf6eb6a8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55faaf6eb690 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55faaf6eb670 <col:83> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55faaf6eb7a0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55faaf6eb738 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55faaf6eb720 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55faaf6eb700 <col:102> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55faaf6eb788 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55faaf6eb770 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55faaf6eb750 <col:121> '_Bool' lvalue Var 0x55faaf6e42e0 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55faaf6eb980 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55faaf6eb7e0 <col:138> 'int' lvalue Var 0x55faaf6e4458 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55faaf6eb960 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55faaf6eb930 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55faaf6eb8a0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55faaf6eb858 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55faaf6eb840 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55faaf6eb800 <col:151> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55faaf6eb888 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55faaf6eb870 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55faaf6eb820 <col:169> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55faaf6eb900 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55faaf6eb8c0 <col:186> 'int' lvalue Var 0x55faaf6e4458 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55faaf6eb918 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55faaf6eb8e0 <col:198> 'int' lvalue Var 0x55faaf6e4458 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55faaf6ebf70 <line:785:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55faaf6eba80 <col:3> 'int' lvalue Var 0x55faaf6e4550 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55faaf6ebf40 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55faaf6ebf10 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55faaf6ebef8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55faaf6ebaa0 <col:15> '_Bool' lvalue Var 0x55faaf6e46b8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55faaf6ebf28 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55faaf6ebac0 <col:31> 'int' lvalue Var 0x55faaf6e4550 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55faaf6ebed8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55faaf6ebea8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55faaf6ebcd0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55faaf6ebbf0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55faaf6ebb18 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55faaf6ebb00 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55faaf6ebae0 <col:45> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55faaf6ebbd0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55faaf6ebb68 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55faaf6ebb50 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55faaf6ebb30 <col:64> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55faaf6ebbb8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55faaf6ebba0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55faaf6ebb80 <col:83> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55faaf6ebcb0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55faaf6ebc48 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55faaf6ebc30 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55faaf6ebc10 <col:102> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55faaf6ebc98 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55faaf6ebc80 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55faaf6ebc60 <col:121> '_Bool' lvalue Var 0x55faaf6e42e0 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55faaf6ebe90 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55faaf6ebcf0 <col:138> 'int' lvalue Var 0x55faaf6e4550 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55faaf6ebe70 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55faaf6ebe40 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55faaf6ebdb0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55faaf6ebd68 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55faaf6ebd50 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55faaf6ebd10 <col:151> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55faaf6ebd98 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55faaf6ebd80 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55faaf6ebd30 <col:169> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55faaf6ebe10 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55faaf6ebdd0 <col:186> 'int' lvalue Var 0x55faaf6e4550 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55faaf6ebe28 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55faaf6ebdf0 <col:198> 'int' lvalue Var 0x55faaf6e4550 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55faaf6ec528 <line:786:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6ebfa0 <col:3> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6ec510 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55faaf6ec4e0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55faaf6ec498 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55faaf6ec480 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55faaf6ebfc0 <col:20> '_Bool' lvalue Var 0x55faaf6e46b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55faaf6ec4c8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55faaf6ec4b0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55faaf6ebfe0 <col:36> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55faaf6ec460 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55faaf6ec430 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55faaf6ec1f0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55faaf6ec110 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55faaf6ec038 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55faaf6ec020 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55faaf6ec000 <col:55> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55faaf6ec0f0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55faaf6ec088 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55faaf6ec070 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55faaf6ec050 <col:74> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55faaf6ec0d8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55faaf6ec0c0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55faaf6ec0a0 <col:93> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55faaf6ec1d0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55faaf6ec168 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55faaf6ec150 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55faaf6ec130 <col:112> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55faaf6ec1b8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55faaf6ec1a0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55faaf6ec180 <col:131> '_Bool' lvalue Var 0x55faaf6e42e0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55faaf6ec418 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55faaf6ec400 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55faaf6ec210 <col:148> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55faaf6ec3e0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55faaf6ec3b0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55faaf6ec2d0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55faaf6ec288 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55faaf6ec270 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55faaf6ec230 <col:166> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55faaf6ec2b8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55faaf6ec2a0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55faaf6ec250 <col:184> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55faaf6ec368 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55faaf6ec320 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55faaf6ec2f0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55faaf6ec398 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55faaf6ec380 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55faaf6ec348 <col:212> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55faaf6ecaf0 <line:787:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6ec548 <col:3> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6ecad8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55faaf6ecaa8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55faaf6eca60 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55faaf6eca48 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55faaf6ec568 <col:20> '_Bool' lvalue Var 0x55faaf6e46b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55faaf6eca90 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55faaf6eca78 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55faaf6ec588 <col:36> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55faaf6eca28 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55faaf6ec9f8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55faaf6ec798 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55faaf6ec6b8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55faaf6ec5e0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55faaf6ec5c8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55faaf6ec5a8 <col:55> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55faaf6ec698 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55faaf6ec630 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55faaf6ec618 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55faaf6ec5f8 <col:74> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55faaf6ec680 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55faaf6ec668 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55faaf6ec648 <col:93> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55faaf6ec778 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55faaf6ec710 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55faaf6ec6f8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55faaf6ec6d8 <col:112> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55faaf6ec760 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55faaf6ec748 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55faaf6ec728 <col:131> '_Bool' lvalue Var 0x55faaf6e42e0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55faaf6ec9e0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55faaf6ec9c8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55faaf6ec7b8 <col:148> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55faaf6ec9a8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55faaf6ec978 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55faaf6ec878 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55faaf6ec830 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55faaf6ec818 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55faaf6ec7d8 <col:166> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55faaf6ec860 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55faaf6ec848 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55faaf6ec7f8 <col:184> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55faaf6ec948 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55faaf6ec8c8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55faaf6ec898 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55faaf6ec960 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55faaf6ec920 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55faaf6ec8f0 <col:219> 'int' 0
|   |-BinaryOperator 0x55faaf6ed0a8 <line:788:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6ecb10 <col:3> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6ed090 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55faaf6ed060 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55faaf6ed018 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55faaf6ed000 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55faaf6ecb30 <col:20> '_Bool' lvalue Var 0x55faaf6e46b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55faaf6ed048 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55faaf6ed030 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55faaf6ecb50 <col:36> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x55faaf6ecfe0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55faaf6ecfb0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55faaf6ecd60 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55faaf6ecc80 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55faaf6ecba8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55faaf6ecb90 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55faaf6ecb70 <col:55> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55faaf6ecc60 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55faaf6ecbf8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55faaf6ecbe0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55faaf6ecbc0 <col:74> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55faaf6ecc48 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55faaf6ecc30 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55faaf6ecc10 <col:93> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55faaf6ecd40 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55faaf6eccd8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55faaf6eccc0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55faaf6ecca0 <col:112> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55faaf6ecd28 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55faaf6ecd10 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55faaf6eccf0 <col:131> '_Bool' lvalue Var 0x55faaf6e42e0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55faaf6ecf88 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55faaf6ecf70 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55faaf6ecd80 <col:148> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x55faaf6ecf50 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55faaf6ecf20 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55faaf6ece40 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55faaf6ecdf8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55faaf6ecde0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55faaf6ecda0 <col:166> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55faaf6ece28 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55faaf6ece10 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55faaf6ecdc0 <col:184> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55faaf6eced8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55faaf6ece90 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55faaf6ece60 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55faaf6ecf08 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55faaf6ecef0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55faaf6eceb8 <col:212> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55faaf6ed670 <line:789:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6ed0c8 <col:3> '_Bool' lvalue Var 0x55faaf6e42e0 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6ed658 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55faaf6ed628 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55faaf6ed5e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55faaf6ed5c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55faaf6ed0e8 <col:20> '_Bool' lvalue Var 0x55faaf6e46b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55faaf6ed610 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55faaf6ed5f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55faaf6ed108 <col:36> '_Bool' lvalue Var 0x55faaf6e42e0 'y$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x55faaf6ed5a8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55faaf6ed578 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55faaf6ed318 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55faaf6ed238 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55faaf6ed160 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55faaf6ed148 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55faaf6ed128 <col:55> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55faaf6ed218 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55faaf6ed1b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55faaf6ed198 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55faaf6ed178 <col:74> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55faaf6ed200 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55faaf6ed1e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55faaf6ed1c8 <col:93> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55faaf6ed2f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55faaf6ed290 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55faaf6ed278 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55faaf6ed258 <col:112> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55faaf6ed2e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55faaf6ed2c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55faaf6ed2a8 <col:131> '_Bool' lvalue Var 0x55faaf6e42e0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55faaf6ed560 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55faaf6ed548 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55faaf6ed338 <col:148> '_Bool' lvalue Var 0x55faaf6e42e0 'y$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x55faaf6ed528 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55faaf6ed4f8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55faaf6ed3f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55faaf6ed3b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55faaf6ed398 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55faaf6ed358 <col:166> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55faaf6ed3e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55faaf6ed3c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55faaf6ed378 <col:184> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55faaf6ed4c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55faaf6ed448 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55faaf6ed418 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55faaf6ed4e0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55faaf6ed4a0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55faaf6ed470 <col:219> 'int' 0
|   |-BinaryOperator 0x55faaf6ed6e8 <line:790:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55faaf6ed690 <col:3> 'int' lvalue Var 0x55faaf6e3aa0 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x55faaf6ed6d0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55faaf6ed6b0 <col:25> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
|   |-BinaryOperator 0x55faaf6ed818 <line:791:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55faaf6ed708 <col:3> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
|   | `-ConditionalOperator 0x55faaf6ed7e8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55faaf6ed7a0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55faaf6ed788 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55faaf6ed728 <col:7> '_Bool' lvalue Var 0x55faaf6e3e68 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55faaf6ed7b8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55faaf6ed748 <col:25> 'int' lvalue Var 0x55faaf6e3f20 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55faaf6ed7d0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55faaf6ed768 <col:37> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
|   |-BinaryOperator 0x55faaf6ed8b0 <line:792:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6ed838 <col:3> '_Bool' lvalue Var 0x55faaf6e3e68 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55faaf6ed888 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55faaf6ed858 <col:28> 'int' 0
|   |-CallExpr 0x55faaf6ed908 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55faaf6ed8f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55faaf6ed8d0 <col:3> 'void ()' Function 0x55faaf68a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55faaf6ed960 <line:794:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55faaf6ed948 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55faaf6ed928 <col:3> 'void ()' Function 0x55faaf68a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55faaf6edc48 <line:795:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55faaf6ed980 <col:3> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
|   | `-ConditionalOperator 0x55faaf6edc18 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55faaf6eda40 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55faaf6ed9f8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55faaf6ed9e0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55faaf6ed9a0 <col:7> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55faaf6eda28 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55faaf6eda10 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55faaf6ed9c0 <col:25> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55faaf6edc00 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55faaf6eda60 <col:42> 'int' lvalue Var 0x55faaf6e4458 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55faaf6edbe0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55faaf6edbb0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55faaf6edb20 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55faaf6edad8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55faaf6edac0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55faaf6eda80 <col:55> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55faaf6edb08 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55faaf6edaf0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55faaf6edaa0 <col:73> '_Bool' lvalue Var 0x55faaf6e42e0 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55faaf6edb80 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55faaf6edb40 <col:90> 'int' lvalue Var 0x55faaf6e4550 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55faaf6edb98 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55faaf6edb60 <col:102> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
|   |-BinaryOperator 0x55faaf6ede50 <line:796:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6edc68 <col:3> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6ede38 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55faaf6ede08 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55faaf6edd28 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55faaf6edce0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55faaf6edcc8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55faaf6edc88 <col:20> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55faaf6edd10 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55faaf6edcf8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55faaf6edca8 <col:38> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55faaf6eddc0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55faaf6edd78 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55faaf6edd48 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55faaf6eddf0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55faaf6eddd8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55faaf6edda0 <col:66> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55faaf6ee150 <line:797:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6ede70 <col:3> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6ee138 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55faaf6ee108 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55faaf6ee028 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55faaf6edf30 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55faaf6edee8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55faaf6eded0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55faaf6ede90 <col:20> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55faaf6edf18 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55faaf6edf00 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55faaf6edeb0 <col:38> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55faaf6ee008 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55faaf6edfc0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55faaf6edf90 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55faaf6edf50 <col:56> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55faaf6edff0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55faaf6edfd8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55faaf6edf70 <col:74> '_Bool' lvalue Var 0x55faaf6e42e0 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55faaf6ee0c0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55faaf6ee078 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55faaf6ee048 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55faaf6ee0f0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55faaf6ee0d8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55faaf6ee0a0 <col:102> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55faaf6ee358 <line:798:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6ee170 <col:3> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6ee340 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55faaf6ee310 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55faaf6ee230 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55faaf6ee1e8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55faaf6ee1d0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55faaf6ee190 <col:20> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55faaf6ee218 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55faaf6ee200 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55faaf6ee1b0 <col:38> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55faaf6ee2c8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55faaf6ee280 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55faaf6ee250 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55faaf6ee2f8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55faaf6ee2e0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55faaf6ee2a8 <col:66> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55faaf6ee640 <line:799:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55faaf6ee378 <col:3> '_Bool' lvalue Var 0x55faaf6e42e0 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55faaf6ee628 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55faaf6ee5f8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55faaf6ee518 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55faaf6ee438 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55faaf6ee3f0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55faaf6ee3d8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55faaf6ee398 <col:20> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55faaf6ee420 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55faaf6ee408 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55faaf6ee3b8 <col:38> '_Bool' lvalue Var 0x55faaf6e4100 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55faaf6ee4f8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55faaf6ee4b0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55faaf6ee498 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55faaf6ee458 <col:56> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55faaf6ee4e0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55faaf6ee4c8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55faaf6ee478 <col:74> '_Bool' lvalue Var 0x55faaf6e42e0 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55faaf6ee5b0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55faaf6ee568 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55faaf6ee538 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55faaf6ee5e0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55faaf6ee5c8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55faaf6ee590 <col:102> '_Bool' lvalue Var 0x55faaf6e42e0 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55faaf6ee698 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55faaf6ee680 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55faaf6ee660 <col:3> 'void ()' Function 0x55faaf68a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55faaf6ee6f0 <line:801:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55faaf6ee6d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55faaf6ee6b8 <col:3> 'void ()' Function 0x55faaf68a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55faaf6ee7a8 <line:802:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55faaf6ee710 <col:3> 'int' lvalue Var 0x55faaf6e3740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55faaf6ee788 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55faaf6ee770 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55faaf6ee730 <col:22> 'int' lvalue Var 0x55faaf6e3740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55faaf6ee750 <col:41> 'int' 1
|   |-CallExpr 0x55faaf6ee800 <line:803:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55faaf6ee7e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55faaf6ee7c8 <col:3> 'void ()' Function 0x55faaf68a570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55faaf6ee878 <line:804:3, col:36>
|     `-CallExpr 0x55faaf6ee858 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55faaf6ee840 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55faaf6ee820 <col:10> 'void *(void)' Function 0x55faaf689fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55faaf6ee9a8 prev 0x55faaf6e3488 <line:806:1, line:808:1> line:806:6 fence 'void ()'
| `-CompoundStmt 0x55faaf6eea48 <line:807:1, line:808:1>
|-FunctionDecl 0x55faaf6eea78 prev 0x55faaf6e3548 <line:809:1, line:811:1> line:809:6 isync 'void ()'
| `-CompoundStmt 0x55faaf6eeb18 <line:810:1, line:811:1>
|-FunctionDecl 0x55faaf6eeb48 prev 0x55faaf6e3608 <line:812:1, line:814:1> line:812:6 lwfence 'void ()'
| `-CompoundStmt 0x55faaf6eebe8 <line:813:1, line:814:1>
`-FunctionDecl 0x55faaf6eec58 <line:815:1, line:852:1> line:815:5 main 'int ()'
  `-CompoundStmt 0x55faaf6f32d0 <line:816:1, line:852:1>
    |-DeclStmt 0x55faaf6eed70 <line:817:3, col:18>
    | `-VarDecl 0x55faaf6eed08 <col:3, col:13> col:13 used t2338 'pthread_t':'unsigned long'
    |-CallExpr 0x55faaf6eef78 <line:818:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55faaf6eef60 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55faaf6eed88 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55faaf6ca9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55faaf6eedc8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55faaf6eeda8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55faaf6eed08 't2338' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55faaf6eefd0 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55faaf6eee40 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55faaf6eee18 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55faaf6eede0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55faaf6eefe8 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55faaf6eee60 <col:39> 'void *(void *)' Function 0x55faaf6e47d0 'P0' 'void *(void *)'
    | `-ParenExpr 0x55faaf6eeee0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55faaf6eeeb8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55faaf6eee80 <col:52> 'int' 0
    |-DeclStmt 0x55faaf6ef078 <line:819:3, col:18>
    | `-VarDecl 0x55faaf6ef010 <col:3, col:13> col:13 used t2339 'pthread_t':'unsigned long'
    |-CallExpr 0x55faaf6ef220 <line:820:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55faaf6ef208 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55faaf6ef090 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55faaf6ca9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55faaf6ef0d0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55faaf6ef0b0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55faaf6ef010 't2339' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55faaf6ef260 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55faaf6ef148 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55faaf6ef120 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55faaf6ef0e8 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55faaf6ef278 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55faaf6ef168 <col:39> 'void *(void *)' Function 0x55faaf6e9390 'P1' 'void *(void *)'
    | `-ParenExpr 0x55faaf6ef1e8 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55faaf6ef1c0 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55faaf6ef188 <col:52> 'int' 0
    |-DeclStmt 0x55faaf6ef308 <line:821:3, col:18>
    | `-VarDecl 0x55faaf6ef2a0 <col:3, col:13> col:13 used t2340 'pthread_t':'unsigned long'
    |-CallExpr 0x55faaf6ef4b0 <line:822:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55faaf6ef498 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55faaf6ef320 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55faaf6ca9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55faaf6ef360 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55faaf6ef340 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55faaf6ef2a0 't2340' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55faaf6ef4f0 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55faaf6ef3d8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55faaf6ef3b0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55faaf6ef378 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55faaf6ef508 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55faaf6ef3f8 <col:39> 'void *(void *)' Function 0x55faaf6eacd8 'P2' 'void *(void *)'
    | `-ParenExpr 0x55faaf6ef478 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55faaf6ef450 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55faaf6ef418 <col:52> 'int' 0
    |-CallExpr 0x55faaf6ef558 <line:823:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55faaf6ef540 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55faaf6ef520 <col:3> 'void ()' Function 0x55faaf68a4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55faaf6ef628 <line:824:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55faaf6ef578 <col:3> '_Bool' lvalue Var 0x55faaf6e3b38 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55faaf6ef610 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55faaf6ef5f0 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55faaf6ef5d8 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55faaf6ef598 <col:21> 'int' lvalue Var 0x55faaf6e3740 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55faaf6ef5b8 <col:41> 'int' 3
    |-CallExpr 0x55faaf6ef680 <line:825:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55faaf6ef668 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55faaf6ef648 <col:3> 'void ()' Function 0x55faaf68a570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55faaf6ef6f8 <line:826:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55faaf6ef6e0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55faaf6ef6a0 <col:3> 'void (int)' Function 0x55faaf689e50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55faaf6ef738 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55faaf6ef720 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55faaf6ef6c0 <col:21> '_Bool' lvalue Var 0x55faaf6e3b38 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55faaf6ef788 <line:827:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55faaf6ef770 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55faaf6ef750 <col:3> 'void ()' Function 0x55faaf68a4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55faaf6efa70 <line:828:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55faaf6ef7a8 <col:3> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
    | `-ConditionalOperator 0x55faaf6efa40 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55faaf6ef868 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55faaf6ef820 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55faaf6ef808 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55faaf6ef7c8 <col:7> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55faaf6ef850 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55faaf6ef838 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55faaf6ef7e8 <col:25> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55faaf6efa28 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55faaf6ef888 <col:42> 'int' lvalue Var 0x55faaf6e4458 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55faaf6efa08 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55faaf6ef9d8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55faaf6ef948 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55faaf6ef900 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55faaf6ef8e8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55faaf6ef8a8 <col:55> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55faaf6ef930 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55faaf6ef918 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55faaf6ef8c8 <col:73> '_Bool' lvalue Var 0x55faaf6e4178 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55faaf6ef9a8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55faaf6ef968 <col:90> 'int' lvalue Var 0x55faaf6e4550 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55faaf6ef9c0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55faaf6ef988 <col:102> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
    |-BinaryOperator 0x55faaf6efc78 <line:829:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55faaf6efa90 <col:3> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55faaf6efc60 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55faaf6efc30 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55faaf6efb50 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55faaf6efb08 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55faaf6efaf0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55faaf6efab0 <col:20> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55faaf6efb38 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55faaf6efb20 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55faaf6efad0 <col:38> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55faaf6efbe8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55faaf6efba0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55faaf6efb70 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55faaf6efc18 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55faaf6efc00 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55faaf6efbc8 <col:66> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55faaf6eff60 <line:830:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55faaf6efc98 <col:3> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55faaf6eff48 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55faaf6eff18 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55faaf6efe38 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55faaf6efd58 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55faaf6efd10 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55faaf6efcf8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55faaf6efcb8 <col:20> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55faaf6efd40 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55faaf6efd28 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55faaf6efcd8 <col:38> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55faaf6efe18 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55faaf6efdd0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55faaf6efdb8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55faaf6efd78 <col:56> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55faaf6efe00 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55faaf6efde8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55faaf6efd98 <col:74> '_Bool' lvalue Var 0x55faaf6e4178 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55faaf6efed0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55faaf6efe88 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55faaf6efe58 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55faaf6eff00 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55faaf6efee8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55faaf6efeb0 <col:102> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55faaf6f0188 <line:831:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55faaf6eff80 <col:3> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55faaf6f0170 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55faaf6f0140 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55faaf6f0060 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55faaf6f0018 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55faaf6f0000 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55faaf6effa0 <col:20> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55faaf6f0048 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55faaf6f0030 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55faaf6effe0 <col:38> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55faaf6f00f8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55faaf6f00b0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55faaf6f0080 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55faaf6f0128 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55faaf6f0110 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55faaf6f00d8 <col:66> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55faaf6f0470 <line:832:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55faaf6f01a8 <col:3> '_Bool' lvalue Var 0x55faaf6e4178 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55faaf6f0458 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55faaf6f0428 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55faaf6f0348 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55faaf6f0268 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55faaf6f0220 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55faaf6f0208 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55faaf6f01c8 <col:20> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55faaf6f0250 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55faaf6f0238 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55faaf6f01e8 <col:38> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55faaf6f0328 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55faaf6f02e0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55faaf6f02c8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55faaf6f0288 <col:56> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55faaf6f0310 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55faaf6f02f8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55faaf6f02a8 <col:74> '_Bool' lvalue Var 0x55faaf6e4178 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55faaf6f03e0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55faaf6f0398 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55faaf6f0368 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55faaf6f0410 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55faaf6f03f8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55faaf6f03c0 <col:102> '_Bool' lvalue Var 0x55faaf6e4178 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55faaf6f04c8 <line:833:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55faaf6f04b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55faaf6f0490 <col:3> 'void ()' Function 0x55faaf68a570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55faaf6f0520 <line:834:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55faaf6f0508 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55faaf6f04e8 <col:3> 'void ()' Function 0x55faaf68a4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55faaf6f05b8 <line:835:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55faaf6f0540 <col:3> '_Bool' lvalue Var 0x55faaf6e4640 'weak$$choice0' '_Bool'
    | `-CallExpr 0x55faaf6f0598 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55faaf6f0580 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55faaf6f0560 <col:19> '_Bool (void)' Function 0x55faaf689c80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55faaf6f0650 <line:836:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55faaf6f05d8 <col:3> '_Bool' lvalue Var 0x55faaf6e46b8 'weak$$choice2' '_Bool'
    | `-CallExpr 0x55faaf6f0630 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55faaf6f0618 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55faaf6f05f8 <col:19> '_Bool (void)' Function 0x55faaf689c80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55faaf6f06c8 <line:837:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x55faaf6f0670 <col:3> '_Bool' lvalue Var 0x55faaf6e3e68 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x55faaf6f06b0 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x55faaf6f0690 <col:21> '_Bool' lvalue Var 0x55faaf6e46b8 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x55faaf6f0740 <line:838:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55faaf6f06e8 <col:3> 'int' lvalue Var 0x55faaf6e3f20 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x55faaf6f0728 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55faaf6f0708 <col:15> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
    |-BinaryOperator 0x55faaf6f0b78 <line:839:3, col:162> 'int' '='
    | |-DeclRefExpr 0x55faaf6f0760 <col:3> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
    | `-ConditionalOperator 0x55faaf6f0b48 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x55faaf6f0970 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x55faaf6f0890 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x55faaf6f07b8 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x55faaf6f07a0 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x55faaf6f0780 <col:8> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x55faaf6f0870 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x55faaf6f0808 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x55faaf6f07f0 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x55faaf6f07d0 <col:27> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x55faaf6f0858 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x55faaf6f0840 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x55faaf6f0820 <col:46> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x55faaf6f0950 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x55faaf6f08e8 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x55faaf6f08d0 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55faaf6f08b0 <col:65> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x55faaf6f0938 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x55faaf6f0920 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x55faaf6f0900 <col:84> '_Bool' lvalue Var 0x55faaf6e4178 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55faaf6f0b30 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55faaf6f0990 <col:101> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
    |   `-ParenExpr 0x55faaf6f0b10 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x55faaf6f0ae0 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x55faaf6f0a50 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55faaf6f0a08 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55faaf6f09f0 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55faaf6f09b0 <col:106> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55faaf6f0a38 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55faaf6f0a20 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55faaf6f09d0 <col:124> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55faaf6f0ab0 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55faaf6f0a70 <col:141> 'int' lvalue Var 0x55faaf6e4458 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x55faaf6f0ac8 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55faaf6f0a90 <col:153> 'int' lvalue Var 0x55faaf6e4550 'y$w_buff1' 'int'
    |-BinaryOperator 0x55faaf6f10b8 <line:840:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55faaf6f0b98 <col:3> 'int' lvalue Var 0x55faaf6e4458 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x55faaf6f1088 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55faaf6f1058 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55faaf6f1040 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55faaf6f0bb8 <col:15> '_Bool' lvalue Var 0x55faaf6e46b8 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55faaf6f1070 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55faaf6f0bd8 <col:31> 'int' lvalue Var 0x55faaf6e4458 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55faaf6f1020 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55faaf6f0ff0 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55faaf6f0de8 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55faaf6f0d08 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55faaf6f0c30 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55faaf6f0c18 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55faaf6f0bf8 <col:45> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55faaf6f0ce8 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55faaf6f0c80 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55faaf6f0c68 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55faaf6f0c48 <col:64> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55faaf6f0cd0 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55faaf6f0cb8 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55faaf6f0c98 <col:83> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55faaf6f0dc8 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55faaf6f0d60 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55faaf6f0d48 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55faaf6f0d28 <col:102> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55faaf6f0db0 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55faaf6f0d98 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55faaf6f0d78 <col:121> '_Bool' lvalue Var 0x55faaf6e4178 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55faaf6f0fa8 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55faaf6f0e08 <col:138> 'int' lvalue Var 0x55faaf6e4458 'y$w_buff0' 'int'
    |       `-ParenExpr 0x55faaf6f0f88 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55faaf6f0f58 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55faaf6f0ec8 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55faaf6f0e80 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55faaf6f0e68 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55faaf6f0e28 <col:151> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55faaf6f0eb0 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55faaf6f0e98 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55faaf6f0e48 <col:169> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55faaf6f0f28 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55faaf6f0ee8 <col:186> 'int' lvalue Var 0x55faaf6e4458 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x55faaf6f0f40 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55faaf6f0f08 <col:198> 'int' lvalue Var 0x55faaf6e4458 'y$w_buff0' 'int'
    |-BinaryOperator 0x55faaf6f15c8 <line:841:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55faaf6f10d8 <col:3> 'int' lvalue Var 0x55faaf6e4550 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x55faaf6f1598 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55faaf6f1568 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55faaf6f1550 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55faaf6f10f8 <col:15> '_Bool' lvalue Var 0x55faaf6e46b8 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55faaf6f1580 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55faaf6f1118 <col:31> 'int' lvalue Var 0x55faaf6e4550 'y$w_buff1' 'int'
    |   `-ParenExpr 0x55faaf6f1530 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55faaf6f1500 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55faaf6f1328 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55faaf6f1248 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55faaf6f1170 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55faaf6f1158 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55faaf6f1138 <col:45> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55faaf6f1228 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55faaf6f11c0 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55faaf6f11a8 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55faaf6f1188 <col:64> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55faaf6f1210 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55faaf6f11f8 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55faaf6f11d8 <col:83> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55faaf6f1308 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55faaf6f12a0 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55faaf6f1288 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55faaf6f1268 <col:102> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55faaf6f12f0 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55faaf6f12d8 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55faaf6f12b8 <col:121> '_Bool' lvalue Var 0x55faaf6e4178 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55faaf6f14e8 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55faaf6f1348 <col:138> 'int' lvalue Var 0x55faaf6e4550 'y$w_buff1' 'int'
    |       `-ParenExpr 0x55faaf6f14c8 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55faaf6f1498 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55faaf6f1408 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55faaf6f13c0 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55faaf6f13a8 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55faaf6f1368 <col:151> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55faaf6f13f0 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55faaf6f13d8 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55faaf6f1388 <col:169> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55faaf6f1468 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55faaf6f1428 <col:186> 'int' lvalue Var 0x55faaf6e4550 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x55faaf6f1480 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55faaf6f1448 <col:198> 'int' lvalue Var 0x55faaf6e4550 'y$w_buff1' 'int'
    |-BinaryOperator 0x55faaf6f1b70 <line:842:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55faaf6f15e8 <col:3> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55faaf6f1b58 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55faaf6f1b28 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55faaf6f1ae0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55faaf6f1ac8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55faaf6f1608 <col:20> '_Bool' lvalue Var 0x55faaf6e46b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55faaf6f1b10 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55faaf6f1af8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55faaf6f1628 <col:36> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x55faaf6f1aa8 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55faaf6f1a78 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55faaf6f1838 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55faaf6f1758 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55faaf6f1680 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55faaf6f1668 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55faaf6f1648 <col:55> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55faaf6f1738 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55faaf6f16d0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55faaf6f16b8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55faaf6f1698 <col:74> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55faaf6f1720 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55faaf6f1708 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55faaf6f16e8 <col:93> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55faaf6f1818 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55faaf6f17b0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55faaf6f1798 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55faaf6f1778 <col:112> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55faaf6f1800 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55faaf6f17e8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55faaf6f17c8 <col:131> '_Bool' lvalue Var 0x55faaf6e4178 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55faaf6f1a60 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55faaf6f1a48 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55faaf6f1858 <col:148> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x55faaf6f1a28 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55faaf6f19f8 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55faaf6f1918 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55faaf6f18d0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55faaf6f18b8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55faaf6f1878 <col:166> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55faaf6f1900 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55faaf6f18e8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55faaf6f1898 <col:184> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55faaf6f19b0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55faaf6f1968 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55faaf6f1938 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55faaf6f19e0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55faaf6f19c8 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55faaf6f1990 <col:212> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55faaf6f2148 <line:843:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55faaf6f1b90 <col:3> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55faaf6f2130 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55faaf6f2100 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55faaf6f20b8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55faaf6f20a0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55faaf6f1bb0 <col:20> '_Bool' lvalue Var 0x55faaf6e46b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55faaf6f20e8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55faaf6f20d0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55faaf6f1bd0 <col:36> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x55faaf6f2080 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55faaf6f2050 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55faaf6f1de0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55faaf6f1d00 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55faaf6f1c28 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55faaf6f1c10 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55faaf6f1bf0 <col:55> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55faaf6f1ce0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55faaf6f1c78 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55faaf6f1c60 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55faaf6f1c40 <col:74> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55faaf6f1cc8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55faaf6f1cb0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55faaf6f1c90 <col:93> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55faaf6f1dc0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55faaf6f1d58 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55faaf6f1d40 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55faaf6f1d20 <col:112> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55faaf6f1da8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55faaf6f1d90 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55faaf6f1d70 <col:131> '_Bool' lvalue Var 0x55faaf6e4178 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55faaf6f2038 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55faaf6f2020 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55faaf6f1e00 <col:148> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x55faaf6f2000 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55faaf6f1fc0 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55faaf6f1ec0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55faaf6f1e78 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55faaf6f1e60 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55faaf6f1e20 <col:166> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55faaf6f1ea8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55faaf6f1e90 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55faaf6f1e40 <col:184> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55faaf6f1f90 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55faaf6f1f10 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55faaf6f1ee0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55faaf6f1fa8 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55faaf6f1f68 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55faaf6f1f38 <col:219> 'int' 0
    |-BinaryOperator 0x55faaf6f26f0 <line:844:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55faaf6f2168 <col:3> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55faaf6f26d8 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55faaf6f26a8 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55faaf6f2660 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55faaf6f2648 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55faaf6f2188 <col:20> '_Bool' lvalue Var 0x55faaf6e46b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55faaf6f2690 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55faaf6f2678 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55faaf6f21a8 <col:36> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x55faaf6f2628 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55faaf6f25f8 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55faaf6f23b8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55faaf6f22d8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55faaf6f2200 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55faaf6f21e8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55faaf6f21c8 <col:55> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55faaf6f22b8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55faaf6f2250 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55faaf6f2238 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55faaf6f2218 <col:74> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55faaf6f22a0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55faaf6f2288 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55faaf6f2268 <col:93> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55faaf6f2398 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55faaf6f2330 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55faaf6f2318 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55faaf6f22f8 <col:112> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55faaf6f2380 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55faaf6f2368 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55faaf6f2348 <col:131> '_Bool' lvalue Var 0x55faaf6e4178 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55faaf6f25e0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55faaf6f25c8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55faaf6f23d8 <col:148> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x55faaf6f25a8 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55faaf6f2578 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55faaf6f2498 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55faaf6f2450 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55faaf6f2438 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55faaf6f23f8 <col:166> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55faaf6f2480 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55faaf6f2468 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55faaf6f2418 <col:184> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55faaf6f2530 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55faaf6f24e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55faaf6f24b8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55faaf6f2560 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55faaf6f2548 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55faaf6f2510 <col:212> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55faaf6f2cb8 <line:845:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55faaf6f2710 <col:3> '_Bool' lvalue Var 0x55faaf6e4178 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55faaf6f2ca0 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55faaf6f2c70 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55faaf6f2c28 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55faaf6f2c10 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55faaf6f2730 <col:20> '_Bool' lvalue Var 0x55faaf6e46b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55faaf6f2c58 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55faaf6f2c40 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55faaf6f2750 <col:36> '_Bool' lvalue Var 0x55faaf6e4178 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x55faaf6f2bf0 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55faaf6f2bc0 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55faaf6f2960 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55faaf6f2880 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55faaf6f27a8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55faaf6f2790 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55faaf6f2770 <col:55> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55faaf6f2860 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55faaf6f27f8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55faaf6f27e0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55faaf6f27c0 <col:74> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55faaf6f2848 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55faaf6f2830 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55faaf6f2810 <col:93> '_Bool' lvalue Var 0x55faaf6e45c8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55faaf6f2940 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55faaf6f28d8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55faaf6f28c0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55faaf6f28a0 <col:112> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55faaf6f2928 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55faaf6f2910 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55faaf6f28f0 <col:131> '_Bool' lvalue Var 0x55faaf6e4178 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55faaf6f2ba8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55faaf6f2b90 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55faaf6f2980 <col:148> '_Bool' lvalue Var 0x55faaf6e4178 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x55faaf6f2b70 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55faaf6f2b40 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55faaf6f2a40 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55faaf6f29f8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55faaf6f29e0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55faaf6f29a0 <col:166> '_Bool' lvalue Var 0x55faaf6e44d0 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55faaf6f2a28 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55faaf6f2a10 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55faaf6f29c0 <col:184> '_Bool' lvalue Var 0x55faaf6e3f98 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55faaf6f2b10 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55faaf6f2a90 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55faaf6f2a60 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55faaf6f2b28 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55faaf6f2ae8 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55faaf6f2ab8 <col:219> 'int' 0
    |-BinaryOperator 0x55faaf6f2f88 <line:846:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x55faaf6f2cd8 <col:3> '_Bool' lvalue Var 0x55faaf6e3bb0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55faaf6f2f70 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55faaf6f2f58 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55faaf6f2f38 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x55faaf6f2f18 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x55faaf6f2e80 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x55faaf6f2de8 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x55faaf6f2d50 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55faaf6f2d38 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55faaf6f2cf8 <col:23> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
    |         | | | `-IntegerLiteral 0x55faaf6f2d18 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x55faaf6f2dc8 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55faaf6f2db0 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55faaf6f2d70 <col:33> 'int' lvalue Var 0x55faaf6e3860 '__unbuffered_p0_EAX' 'int'
    |         | |   `-IntegerLiteral 0x55faaf6f2d90 <col:56> 'int' 1
    |         | `-BinaryOperator 0x55faaf6f2e60 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55faaf6f2e48 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55faaf6f2e08 <col:61> 'int' lvalue Var 0x55faaf6e3980 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x55faaf6f2e28 <col:84> 'int' 1
    |         `-BinaryOperator 0x55faaf6f2ef8 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x55faaf6f2ee0 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55faaf6f2ea0 <col:89> 'int' lvalue Var 0x55faaf6e3aa0 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x55faaf6f2ec0 <col:112> 'int' 0
    |-BinaryOperator 0x55faaf6f30e0 <line:847:3, col:37> 'int' '='
    | |-DeclRefExpr 0x55faaf6f2fa8 <col:3> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
    | `-ConditionalOperator 0x55faaf6f30b0 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x55faaf6f3068 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55faaf6f3050 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55faaf6f2fc8 <col:7> '_Bool' lvalue Var 0x55faaf6e3e68 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x55faaf6f3080 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55faaf6f3010 <col:25> 'int' lvalue Var 0x55faaf6e3f20 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x55faaf6f3098 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55faaf6f3030 <col:37> 'int' lvalue Var 0x55faaf6e3dd0 'y' 'int'
    |-BinaryOperator 0x55faaf6f3178 <line:848:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x55faaf6f3100 <col:3> '_Bool' lvalue Var 0x55faaf6e3e68 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x55faaf6f3150 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x55faaf6f3120 <col:28> 'int' 0
    |-CallExpr 0x55faaf6f31d0 <line:849:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55faaf6f31b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55faaf6f3198 <col:3> 'void ()' Function 0x55faaf68a570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55faaf6f3248 <line:850:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55faaf6f3230 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55faaf6f31f0 <col:3> 'void (int)' Function 0x55faaf68a238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55faaf6f3288 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55faaf6f3270 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55faaf6f3210 <col:21> '_Bool' lvalue Var 0x55faaf6e3bb0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55faaf6f32c0 <line:851:3, col:10>
      `-IntegerLiteral 0x55faaf6f32a0 <col:10> 'int' 0
