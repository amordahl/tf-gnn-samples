TranslationUnitDecl 0x55a31f7b6f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55a31f7b7848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55a31f7b7520 '__int128'
|-TypedefDecl 0x55a31f7b78b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55a31f7b7540 'unsigned __int128'
|-TypedefDecl 0x55a31f7b7bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55a31f7b7990 'struct __NSConstantString_tag'
|   `-Record 0x55a31f7b7910 '__NSConstantString_tag'
|-TypedefDecl 0x55a31f7b7c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55a31f7b7c20 'char *'
|   `-BuiltinType 0x55a31f7b7020 'char'
|-TypedefDecl 0x55a31f7f6b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55a31f7b7f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55a31f7b7d40 'struct __va_list_tag'
|     `-Record 0x55a31f7b7cc0 '__va_list_tag'
|-FunctionDecl 0x55a31f7f6ca0 <pthread-wmm/mix044_power.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55a31f7f6bd0 <col:31> col:34 'int'
|-FunctionDecl 0x55a31f7f6e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55a31f7f6f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55a31f7f70d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55a31f7f7048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55a31f7f7308 <col:40, col:99>
|   |-IfStmt 0x55a31f7f72d8 <col:42, col:88>
|   | |-UnaryOperator 0x55a31f7f71b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55a31f7f71a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55a31f7f7180 <col:47> 'int' lvalue ParmVar 0x55a31f7f7048 'expression' 'int'
|   | `-CompoundStmt 0x55a31f7f72c0 <col:59, col:88>
|   |   `-LabelStmt 0x55a31f7f72a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55a31f7f7238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55a31f7f7220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55a31f7f71d0 <col:68> 'void () __attribute__((noreturn))' Function 0x55a31f7f6f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55a31f7f72f0 <col:89>
|   `-ReturnStmt 0x55a31f7f72f8 <col:91>
|-FunctionDecl 0x55a31f7f7350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55a31f7f7410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55a31f7f7790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55a31f7f74c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55a31f7f7548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55a31f7f75c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55a31f7f7648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55a31f7f7850 <line:10:22>
|-FunctionDecl 0x55a31f81d8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55a31f7f78c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55a31f7f7940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55a31f7f79c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55a31f7f7a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55a31f81d960 <line:13:22>
|-FunctionDecl 0x55a31f81dc10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55a31f81d9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55a31f81da50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55a31f81dad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55a31f81dcc8 <line:15:22>
|-TypedefDecl 0x55a31f81dd38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55a31f7b70e0 'unsigned char'
|-TypedefDecl 0x55a31f81dda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55a31f7b7100 'unsigned short'
|-TypedefDecl 0x55a31f81de18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55a31f7b7120 'unsigned int'
|-TypedefDecl 0x55a31f81de88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55a31f7b7140 'unsigned long'
|-TypedefDecl 0x55a31f81def8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55a31f7b7040 'signed char'
|-TypedefDecl 0x55a31f81df68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55a31f7b70e0 'unsigned char'
|-TypedefDecl 0x55a31f81dfd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55a31f7b7060 'short'
|-TypedefDecl 0x55a31f81e048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55a31f7b7100 'unsigned short'
|-TypedefDecl 0x55a31f81e0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55a31f7b7080 'int'
|-TypedefDecl 0x55a31f81e128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55a31f7b7120 'unsigned int'
|-TypedefDecl 0x55a31f81e198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55a31f7b70a0 'long'
|-TypedefDecl 0x55a31f81e208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55a31f7b7140 'unsigned long'
|-TypedefDecl 0x55a31f81e278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55a31f7b70a0 'long'
|-TypedefDecl 0x55a31f81e2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55a31f7b7140 'unsigned long'
|-TypedefDecl 0x55a31f81e358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55a31f7b7140 'unsigned long'
|-TypedefDecl 0x55a31f81e3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55a31f7b7120 'unsigned int'
|-TypedefDecl 0x55a31f81e438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55a31f7b7120 'unsigned int'
|-TypedefDecl 0x55a31f81e4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55a31f7b7140 'unsigned long'
|-TypedefDecl 0x55a31f81e518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55a31f7b7140 'unsigned long'
|-TypedefDecl 0x55a31f81e588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55a31f7b7120 'unsigned int'
|-TypedefDecl 0x55a31f81e5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55a31f7b7140 'unsigned long'
|-TypedefDecl 0x55a31f81e668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55a31f7b70a0 'long'
|-TypedefDecl 0x55a31f81e6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55a31f7b70a0 'long'
|-TypedefDecl 0x55a31f81e748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55a31f7b7080 'int'
|-RecordDecl 0x55a31f81e7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55a31f81e918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55a31f81e9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55a31f81e970 'struct __fsid_t' sugar
|   `-RecordType 0x55a31f81e820 '__fsid_t'
|     `-Record 0x55a31f81e7a0 ''
|-TypedefDecl 0x55a31f81ea58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55a31f7b70a0 'long'
|-TypedefDecl 0x55a31f81eac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55a31f7b7140 'unsigned long'
|-TypedefDecl 0x55a31f81eb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55a31f7b7140 'unsigned long'
|-TypedefDecl 0x55a31f81eba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55a31f7b7120 'unsigned int'
|-TypedefDecl 0x55a31f81ec18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55a31f7b70a0 'long'
|-TypedefDecl 0x55a31f81ec88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55a31f7b7120 'unsigned int'
|-TypedefDecl 0x55a31f81ecf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55a31f7b70a0 'long'
|-TypedefDecl 0x55a31f81ed68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55a31f7b7080 'int'
|-TypedefDecl 0x55a31f81edd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55a31f7b7080 'int'
|-TypedefDecl 0x55a31f81ee48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55a31f7b7080 'int'
|-TypedefDecl 0x55a31f81eeb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55a31f7b77a0 'void *'
|   `-BuiltinType 0x55a31f7b6fe0 'void'
|-TypedefDecl 0x55a31f81ef28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55a31f7b70a0 'long'
|-TypedefDecl 0x55a31f81ef98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55a31f7b70a0 'long'
|-TypedefDecl 0x55a31f81f008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55a31f7b70a0 'long'
|-TypedefDecl 0x55a31f81f078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55a31f7b7140 'unsigned long'
|-TypedefDecl 0x55a31f81f0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55a31f7b7140 'unsigned long'
|-TypedefDecl 0x55a31f81f158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55a31f7b7140 'unsigned long'
|-TypedefDecl 0x55a31f81f1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55a31f7b7140 'unsigned long'
|-TypedefDecl 0x55a31f81f238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55a31f7b70a0 'long'
|-TypedefDecl 0x55a31f81f2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55a31f7b70a0 'long'
|-TypedefDecl 0x55a31f81f318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55a31f7b70a0 'long'
|-TypedefDecl 0x55a31f81f388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55a31f7b7140 'unsigned long'
|-TypedefDecl 0x55a31f81f418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55a31f81f3e0 '__off64_t' sugar
|   |-Typedef 0x55a31f81e6d8 '__off64_t'
|   `-BuiltinType 0x55a31f7b70a0 'long'
|-TypedefDecl 0x55a31f81f510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55a31f81f4d0 '__quad_t *'
|   `-TypedefType 0x55a31f81f470 '__quad_t' sugar
|     |-Typedef 0x55a31f81e278 '__quad_t'
|     `-BuiltinType 0x55a31f7b70a0 'long'
|-TypedefDecl 0x55a31f81f580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55a31f7b7c20 'char *'
|   `-BuiltinType 0x55a31f7b7020 'char'
|-TypedefDecl 0x55a31f81f5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55a31f7b70a0 'long'
|-TypedefDecl 0x55a31f81f660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55a31f7b7120 'unsigned int'
|-FunctionDecl 0x55a31f81f7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55a31f81f6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55a31f81fae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55a31f81fad8 <line:72:3, col:34>
|     `-CallExpr 0x55a31f81fa98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55a31f81fa80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55a31f81fa10 <col:10> '<builtin fn type>' Function 0x55a31f81f880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55a31f81fac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55a31f81fa30 <col:29> 'unsigned int' lvalue ParmVar 0x55a31f81f6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55a31f81f880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55a31f81f920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55a31f81f990 <col:10> Implicit
| `-ConstAttr 0x55a31f81f9e8 <col:10> Implicit
|-FunctionDecl 0x55a31f81fc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55a31f81fb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55a31f81ff58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55a31f81ff48 <line:77:3, col:34>
|     `-CallExpr 0x55a31f81ff08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55a31f81fef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55a31f81fe78 <col:10> '<builtin fn type>' Function 0x55a31f81fce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55a31f81ff30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55a31f81fe98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55a31f81fb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55a31f81fce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55a31f81fd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55a31f81fdf8 <col:10> Implicit
| `-ConstAttr 0x55a31f81fe50 <col:10> Implicit
|-TypedefDecl 0x55a31f81ff88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55a31f7b7140 'unsigned long'
|-TypedefDecl 0x55a31f820018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55a31f81ffe0 '__time_t' sugar
|   |-Typedef 0x55a31f81ec18 '__time_t'
|   `-BuiltinType 0x55a31f7b70a0 'long'
|-RecordDecl 0x55a31f820070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55a31f820128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55a31f8201b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55a31f820248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55a31f820210 '__pid_t' sugar
|   |-Typedef 0x55a31f81e748 '__pid_t'
|   `-BuiltinType 0x55a31f7b7080 'int'
|-RecordDecl 0x55a31f8202a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55a31f820360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55a31f8203b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55a31f820470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55a31f8204d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55a31f7b7140 'unsigned long'
|-RecordDecl 0x55a31f820530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55a31f8207c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55a31f8228b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55a31f820810 'struct cpu_set_t' sugar
|   `-RecordType 0x55a31f8205b0 'cpu_set_t'
|     `-Record 0x55a31f820530 ''
|-FunctionDecl 0x55a31f822b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55a31f822958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55a31f822a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55a31f822c38 <line:107:19>
|-FunctionDecl 0x55a31f822e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55a31f822ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55a31f822eb8 <col:69>
|-FunctionDecl 0x55a31f823030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55a31f822f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55a31f8230d8 <col:64>
|-FunctionDecl 0x55a31f823398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55a31f823140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55a31f823278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55a31f823448 <line:113:22>
|-FunctionDecl 0x55a31f8236c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55a31f8234b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55a31f8235a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55a31f823778 <col:88>
|-FunctionDecl 0x55a31f823a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55a31f8237e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55a31f8238c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55a31f823950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55a31f823b50 <col:62>
|-FunctionDecl 0x55a31f823cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55a31f823bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55a31f823d70 <col:63>
|-FunctionDecl 0x55a31f823e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55a31f823f38 <col:47>
|-FunctionDecl 0x55a31f824040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55a31f823fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55a31f8240e8 <col:69>
|-FunctionDecl 0x55a31f8241f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55a31f824158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55a31f824298 <col:69>
|-FunctionDecl 0x55a31f824558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55a31f824300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55a31f824438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55a31f824608 <col:88>
|-TypedefDecl 0x55a31f824698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55a31f824660 '__clock_t' sugar
|   |-Typedef 0x55a31f81ea58 '__clock_t'
|   `-BuiltinType 0x55a31f7b70a0 'long'
|-TypedefDecl 0x55a31f824728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55a31f8246f0 '__clockid_t' sugar
|   |-Typedef 0x55a31f81ee48 '__clockid_t'
|   `-BuiltinType 0x55a31f7b7080 'int'
|-TypedefDecl 0x55a31f8247b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55a31f824780 '__timer_t' sugar
|   |-Typedef 0x55a31f81eeb8 '__timer_t'
|   `-PointerType 0x55a31f7b77a0 'void *'
|     `-BuiltinType 0x55a31f7b6fe0 'void'
|-RecordDecl 0x55a31f824810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55a31f8248e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55a31f824950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55a31f8249b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55a31f824a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55a31f824a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55a31f824af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55a31f824b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55a31f824bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55a31f824c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55a31f824c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55a31f824cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55a31f824d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55a31f824e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55a31f824e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55a31f824f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55a31f825100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55a31f8251a0 <col:45>
|-FunctionDecl 0x55a31f825380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55a31f825270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55a31f825428 <col:54>
|-FunctionDecl 0x55a31f825628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55a31f825490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55a31f825508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55a31f8256d8 <line:157:22>
| `-ConstAttr 0x55a31f825730 <col:63>
|-FunctionDecl 0x55a31f826560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55a31f825828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55a31f826608 <col:56>
|-FunctionDecl 0x55a31f8269b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55a31f826678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55a31f8266f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55a31f826770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55a31f826868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55a31f826a70 <col:54>
|-RecordDecl 0x55a31f826ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55a31f826b78 parent 0x55a31f7b6f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55a31f826dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55a31f826e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55a31f826ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55a31f826f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55a31f827038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55a31f827158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55a31f827100 'struct __locale_struct *'
|   `-ElaboratedType 0x55a31f827090 'struct __locale_struct' sugar
|     `-RecordType 0x55a31f826b50 'struct __locale_struct'
|       `-Record 0x55a31f826ac8 '__locale_struct'
|-TypedefDecl 0x55a31f827208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55a31f8271d0 '__locale_t' sugar
|   |-Typedef 0x55a31f827158 '__locale_t'
|   `-PointerType 0x55a31f827100 'struct __locale_struct *'
|     `-ElaboratedType 0x55a31f827090 'struct __locale_struct' sugar
|       `-RecordType 0x55a31f826b50 'struct __locale_struct'
|         `-Record 0x55a31f826ac8 '__locale_struct'
|-FunctionDecl 0x55a31f827610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55a31f827278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55a31f8272f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55a31f827370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55a31f827400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55a31f827478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55a31f8276d8 <col:40>
|-FunctionDecl 0x55a31f8278c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55a31f8277a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55a31f827970 <col:66>
|-FunctionDecl 0x55a31f827a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55a31f8279d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55a31f827b28 <col:69>
|-FunctionDecl 0x55a31f827d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55a31f827b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55a31f827c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55a31f827e08 <col:52>
|-FunctionDecl 0x55a31f827fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55a31f827e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55a31f827f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55a31f828060 <col:55>
|-FunctionDecl 0x55a31f8281f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55a31f8280e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55a31f8282a0 <col:62>
|-FunctionDecl 0x55a31f828418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55a31f828308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55a31f8284c0 <col:60>
|-FunctionDecl 0x55a31f828718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55a31f828578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55a31f8285f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55a31f8287c8 <col:44>
|-FunctionDecl 0x55a31f8289d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55a31f828830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55a31f8288b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55a31f828a88 <col:49>
|-VarDecl 0x55a31f828b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55a31f828c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55a31f828c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55a31f828d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55a31f828e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55a31f828f20 <col:42>
|-VarDecl 0x55a31f828f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55a31f829010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55a31f829198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55a31f829088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55a31f829240 <col:57>
|-FunctionDecl 0x55a31f829350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55a31f8292c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55a31f8293f8 <col:56>
|-FunctionDecl 0x55a31f82a540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55a31f829478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55a31f82a5e8 <col:59>
|-FunctionDecl 0x55a31f82a6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55a31f82a658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55a31f82a798 <col:48>
| `-ConstAttr 0x55a31f82a7f0 <col:89>
|-FunctionDecl 0x55a31f82aa58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55a31f82a8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55a31f82a938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55a31f82acb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55a31f82ab48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a31f82abd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55a31f82ad68 <col:88>
|-FunctionDecl 0x55a31f82af00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55a31f82add0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a31f82ae60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55a31f82afb0 <col:88>
|-FunctionDecl 0x55a31f82b1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55a31f82b018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a31f82b0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55a31f82b278 <line:208:22>
|-FunctionDecl 0x55a31f82b5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55a31f82b2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a31f82b360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55a31f82b3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55a31f82b480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55a31f82b8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55a31f82b6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55a31f82b7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55a31f82b998 <col:85>
|-FunctionDecl 0x55a31f82bd88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55a31f82ba00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a31f82bb38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55a31f82bc40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55a31f82be40 <col:52>
|-FunctionDecl 0x55a31f82bfb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55a31f82bea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55a31f82c060 <col:61>
|-FunctionDecl 0x55a31f82c560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55a31f82c0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55a31f82c148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55a31f82c278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55a31f82c368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55a31f82c620 <col:62>
|-FunctionDecl 0x55a31f82c838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55a31f82c688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55a31f82c718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55a31f82c8e8 <line:221:22>
|-FunctionDecl 0x55a31f82c9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55a31f82c950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55a31f82ca90 <col:65>
|-TypedefDecl 0x55a31f82cb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55a31f7b7140 'unsigned long'
|-RecordDecl 0x55a31f82cb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55a31f82cca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55a31f82cd08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a31f82cdb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55a31f82cd60 'union pthread_attr_t' sugar
|   `-RecordType 0x55a31f82cbe0 'union pthread_attr_t'
|     `-Record 0x55a31f82cb58 'pthread_attr_t'
|-RecordDecl 0x55a31f82ce10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55a31f82cf88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55a31f82d000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55a31f82d0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55a31f82d050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55a31f82ce90 'struct __pthread_internal_list'
|     `-Record 0x55a31f82ce10 '__pthread_internal_list'
|-RecordDecl 0x55a31f82d120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55a31f82d1c8 parent 0x55a31f7b6f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55a31f82d2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55a31f82d308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55a31f82d370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55a31f82d3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55a31f82d440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55a31f82d4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55a31f831580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55a31f831630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55a31f831720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55a31f831788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a31f831910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55a31f8318b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55a31f82d1a0 'pthread_mutex_t'
|     `-Record 0x55a31f82d120 ''
|-RecordDecl 0x55a31f831980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55a31f831ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55a31f831b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55a31f831be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55a31f831b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55a31f831a00 'pthread_mutexattr_t'
|     `-Record 0x55a31f831980 ''
|-RecordDecl 0x55a31f831c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55a31f831cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55a31f831dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55a31f831e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55a31f831e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55a31f831ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55a31f831f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55a31f831fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55a31f832030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55a31f832098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55a31f832150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix044_power.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix044_power.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55a31f832240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55a31f8322a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55a31f8323e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55a31f832380 'union pthread_cond_t' sugar
|   `-RecordType 0x55a31f831cd0 'pthread_cond_t'
|     `-Record 0x55a31f831c50 ''
|-RecordDecl 0x55a31f832450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55a31f832590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55a31f8325f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55a31f8326b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55a31f832650 'union pthread_condattr_t' sugar
|   `-RecordType 0x55a31f8324d0 'pthread_condattr_t'
|     `-Record 0x55a31f832450 ''
|-TypedefDecl 0x55a31f832738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55a31f7b7120 'unsigned int'
|-TypedefDecl 0x55a31f8327a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55a31f7b7080 'int'
|-RecordDecl 0x55a31f832800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55a31f8328a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55a31f832970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55a31f8329d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55a31f832a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55a31f832aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55a31f832b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55a31f832b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55a31f832be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55a31f832c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55a31f832cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55a31f832d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55a31f832d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55a31f832e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix044_power.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix044_power.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55a31f832ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55a31f832f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a31f833090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55a31f833030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55a31f832880 'pthread_rwlock_t'
|     `-Record 0x55a31f832800 ''
|-RecordDecl 0x55a31f833100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55a31f833240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55a31f8332a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a31f833360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55a31f833300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55a31f833180 'pthread_rwlockattr_t'
|     `-Record 0x55a31f833100 ''
|-TypedefDecl 0x55a31f8333e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55a31f7b7084 'volatile int' volatile
|   `-BuiltinType 0x55a31f7b7080 'int'
|-RecordDecl 0x55a31f833440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55a31f8355b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55a31f835618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a31f8356d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55a31f835670 'union pthread_barrier_t' sugar
|   `-RecordType 0x55a31f8334c0 'pthread_barrier_t'
|     `-Record 0x55a31f833440 ''
|-RecordDecl 0x55a31f835740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55a31f835840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55a31f8358a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55a31f835960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55a31f835900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55a31f8357c0 'pthread_barrierattr_t'
|     `-Record 0x55a31f835740 ''
|-TypedefDecl 0x55a31f835a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55a31f835a10 'long [8]' 8 
|   `-BuiltinType 0x55a31f7b70a0 'long'
|-EnumDecl 0x55a31f835ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55a31f835b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55a31f835be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55a31f835c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55a31f835d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55a31f835d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55a31f835da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55a31f835df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55a31f835e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55a31f835e68 <col:26> 'int'
| |   `-DeclRefExpr 0x55a31f835e48 <col:26> 'int' EnumConstant 0x55a31f835d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55a31f835f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55a31f835ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x55a31f835ed0 <col:29> 'int' EnumConstant 0x55a31f835d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55a31f835f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55a31f835f78 <col:30> 'int'
| |   `-DeclRefExpr 0x55a31f835f58 <col:30> 'int' EnumConstant 0x55a31f835da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55a31f836018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55a31f836000 <col:27> 'int'
|     `-DeclRefExpr 0x55a31f835fe0 <col:27> 'int' EnumConstant 0x55a31f835e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55a31f836068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55a31f836138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55a31f8361c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55a31f8361a8 <col:30> 'int'
| |   `-DeclRefExpr 0x55a31f836188 <col:30> 'int' EnumConstant 0x55a31f836138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55a31f836210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55a31f836298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55a31f836280 <col:29> 'int'
|     `-DeclRefExpr 0x55a31f836260 <col:29> 'int' EnumConstant 0x55a31f836210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55a31f8362e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55a31f8363b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55a31f836408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55a31f836458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55a31f8364a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55a31f8365c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55a31f836610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55a31f836660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55a31f8366e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55a31f8366d0 <col:31> 'int'
|     `-DeclRefExpr 0x55a31f8366b0 <col:31> 'int' EnumConstant 0x55a31f8365c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55a31f836738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55a31f836808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55a31f836858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55a31f8368a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55a31f836978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55a31f8369c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55a31f836a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55a31f836ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55a31f836b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55a31f836b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55a31f836dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55a31f836e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55a31f836e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55a31f836fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55a31f837008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55a31f8370d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55a31f837128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55a31f837178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55a31f837248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55a31f837298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55a31f8378f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55a31f837390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55a31f8374a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a31f8376e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55a31f837760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55a31f8379b8 <col:47>
| |-NonNullAttr 0x55a31f837a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x55a31f837a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55a31f837b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55a31f837aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55a31f837dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55a31f837c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55a31f837ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55a31f837f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55a31f837e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55a31f838040 <col:60>
|-FunctionDecl 0x55a31f838190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55a31f838230 <col:54>
| `-ConstAttr 0x55a31f838288 <col:95>
|-FunctionDecl 0x55a31f838458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55a31f8382c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a31f838338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55a31f838508 <line:394:19>
| `-ConstAttr 0x55a31f838560 <col:60>
|-FunctionDecl 0x55a31f838f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55a31f838e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55a31f839010 <col:71>
| `-NonNullAttr 0x55a31f839068 <col:112, col:126> 1
|-FunctionDecl 0x55a31f839170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55a31f8390b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55a31f839218 <line:397:22>
| `-NonNullAttr 0x55a31f839270 <col:63, col:77> 1
|-FunctionDecl 0x55a31f839498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55a31f8392b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55a31f839338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55a31f839548 <line:400:22>
| `-NonNullAttr 0x55a31f8395a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a31f8397a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55a31f8395e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a31f839668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55a31f839858 <line:403:22>
| `-NonNullAttr 0x55a31f8398b0 <col:63, col:77> 1
|-FunctionDecl 0x55a31f839b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55a31f8398f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55a31f8399a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55a31f839bb8 <line:406:22>
| `-NonNullAttr 0x55a31f839c10 <col:63, col:80> 1 2
|-FunctionDecl 0x55a31f83ae48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55a31f839c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a31f839cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55a31f83aef8 <line:409:22>
| `-NonNullAttr 0x55a31f83af50 <col:63, col:77> 1
|-FunctionDecl 0x55a31f83b188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55a31f83af98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a31f83b028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55a31f83b238 <line:412:22>
| `-NonNullAttr 0x55a31f83b290 <col:63, col:80> 1 2
|-FunctionDecl 0x55a31f83b4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55a31f83b2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a31f83b368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55a31f83b578 <col:37>
| `-NonNullAttr 0x55a31f83b5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x55a31f83b7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a31f83b618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a31f83b698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55a31f83b868 <line:418:22>
| `-NonNullAttr 0x55a31f83b8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a31f83ba48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55a31f83b908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a31f83b988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55a31f83baf8 <line:420:22>
| `-NonNullAttr 0x55a31f83bb50 <col:63, col:77> 1
|-FunctionDecl 0x55a31f83bcf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a31f83bb98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a31f83bc18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55a31f83bda8 <line:423:22>
| `-NonNullAttr 0x55a31f83ce30 <col:63, col:80> 1 2
|-FunctionDecl 0x55a31f83cfb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55a31f83ce78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a31f83cef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55a31f83d068 <line:426:22>
| `-NonNullAttr 0x55a31f83d0c0 <col:63, col:77> 1
|-FunctionDecl 0x55a31f83d268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a31f83d108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a31f83d188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55a31f83d318 <line:429:22>
| `-NonNullAttr 0x55a31f83d370 <col:63, col:80> 1 2
|-FunctionDecl 0x55a31f83d4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55a31f83d3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a31f83d438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55a31f83d5a8 <line:431:22>
| `-NonNullAttr 0x55a31f83d600 <col:63, col:77> 1
|-FunctionDecl 0x55a31f83d828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55a31f83d648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a31f83d6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55a31f83d8d8 <line:434:22>
| |-NonNullAttr 0x55a31f83d930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55a31f83d968 <col:100> "" ""
|-FunctionDecl 0x55a31f83db78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55a31f83d9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a31f83da38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55a31f83dc28 <line:437:22>
| |-NonNullAttr 0x55a31f83dc80 <col:63, col:77> 1
| `-DeprecatedAttr 0x55a31f83dcb8 <col:97> "" ""
|-FunctionDecl 0x55a31f83deb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55a31f83dd08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a31f83dd80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55a31f83df68 <line:440:22>
| `-NonNullAttr 0x55a31f83dfc0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a31f83e140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55a31f83e008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a31f83e080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55a31f83e1f0 <line:443:22>
| `-NonNullAttr 0x55a31f83e248 <col:63, col:77> 1
|-FunctionDecl 0x55a31f83e538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55a31f83e298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a31f83e318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55a31f83e390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55a31f83e5f0 <line:447:22>
| `-NonNullAttr 0x55a31f83e648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55a31f83e8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55a31f83e6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a31f83e720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55a31f83e798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55a31f83e9b0 <col:43>
| `-NonNullAttr 0x55a31f83ea08 <col:84, col:98> 1
|-FunctionDecl 0x55a31f83ecc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55a31f83ea58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a31f83ead8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55a31f83eb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55a31f83ed80 <line:452:22>
| `-NonNullAttr 0x55a31f83edd8 <col:63, col:77> 3
|-FunctionDecl 0x55a31f83f0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55a31f83ee50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a31f83eed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55a31f83ef60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55a31f83f1a0 <line:456:22>
| `-NonNullAttr 0x55a31f83f1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x55a31f83f3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55a31f83f248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a31f83f2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55a31f83f498 <line:458:22>
|-FunctionDecl 0x55a31f83f868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55a31f83f560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55a31f83f700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55a31f83f918 <col:52, col:69> 1 2
|-FunctionDecl 0x55a31f83fac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55a31f83f9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55a31f83fa20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55a31f83fca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55a31f83fb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55a31f83fc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55a31f83fe60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55a31f83fd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55a31f83ffa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55a31f840040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55a31f8400e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55a31f8401d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55a31f840240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55a31f840410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix044_power.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55a31f840508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55a31f8405c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55a31f840560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55a31f8400c0 '__pthread_unwind_buf_t'
| |   `-Record 0x55a31f840040 ''
| `-AlignedAttr 0x55a31f840618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55a31f840690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55a31f8407f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55a31f840858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55a31f8408c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55a31f840928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55a31f840b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55a31f840a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55a31f840c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55a31f840be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55a31f840e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55a31f840d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55a31f840f18 <line:487:22>
|-RecordDecl 0x55a31f840f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55a31f841288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55a31f8410e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55a31f841168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55a31f841338 <col:86>
| `-ReturnsTwiceAttr 0x55a31f841390 <col:12> Implicit
|-FunctionDecl 0x55a31f8416b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55a31f841460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55a31f841570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55a31f841768 <line:493:22>
| `-NonNullAttr 0x55a31f8417c0 <col:63, col:77> 1
|-FunctionDecl 0x55a31f841938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a31f841808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a31f8419e0 <line:495:22>
| `-NonNullAttr 0x55a31f841a38 <col:63, col:77> 1
|-FunctionDecl 0x55a31f841b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a31f841a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a31f841be8 <line:497:22>
| `-NonNullAttr 0x55a31f841c40 <col:52, col:66> 1
|-FunctionDecl 0x55a31f841d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a31f841c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a31f841de8 <line:499:22>
| `-NonNullAttr 0x55a31f841e40 <col:52, col:66> 1
|-FunctionDecl 0x55a31f842088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55a31f841e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55a31f841f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55a31f842138 <col:36>
| `-NonNullAttr 0x55a31f842190 <col:66, col:83> 1 2
|-FunctionDecl 0x55a31f842290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a31f8421d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a31f842338 <line:504:22>
| `-NonNullAttr 0x55a31f842390 <col:52, col:66> 1
|-FunctionDecl 0x55a31f842628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a31f842440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55a31f8424c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55a31f8426d8 <line:508:22>
| `-NonNullAttr 0x55a31f842730 <col:63, col:80> 1 2
|-FunctionDecl 0x55a31f8429f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55a31f842778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55a31f8427f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55a31f842878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55a31f842ab0 <line:512:22>
| `-NonNullAttr 0x55a31f842b08 <col:63, col:80> 1 3
|-FunctionDecl 0x55a31f842c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a31f842b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a31f842cb8 <line:514:22>
| `-NonNullAttr 0x55a31f842d10 <col:63, col:77> 1
|-FunctionDecl 0x55a31f842f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55a31f842dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55a31f842fe0 <line:516:22>
| `-NonNullAttr 0x55a31f843038 <col:63, col:77> 1
|-FunctionDecl 0x55a31f843140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55a31f843088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55a31f8431e8 <line:518:22>
| `-NonNullAttr 0x55a31f843240 <col:63, col:77> 1
|-FunctionDecl 0x55a31f843468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a31f843288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55a31f843308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55a31f843518 <line:522:22>
| `-NonNullAttr 0x55a31f843570 <col:63, col:80> 1 2
|-FunctionDecl 0x55a31f843778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a31f8435b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a31f843638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55a31f843828 <line:525:22>
| `-NonNullAttr 0x55a31f843880 <col:63, col:77> 1
|-FunctionDecl 0x55a31f843a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a31f8438c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55a31f843948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55a31f843ad8 <line:528:22>
| `-NonNullAttr 0x55a31f843b30 <col:63, col:80> 1 2
|-FunctionDecl 0x55a31f843cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a31f843b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a31f843bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55a31f843d68 <line:530:22>
| `-NonNullAttr 0x55a31f843dc0 <col:63, col:77> 1
|-FunctionDecl 0x55a31f844f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a31f843e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55a31f844eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55a31f845040 <line:534:22>
| `-NonNullAttr 0x55a31f845098 <col:63, col:80> 1 2
|-FunctionDecl 0x55a31f845228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a31f8450e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a31f845168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55a31f8452d8 <line:537:22>
| `-NonNullAttr 0x55a31f845330 <col:63, col:77> 1
|-FunctionDecl 0x55a31f8454d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a31f845378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55a31f8453f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55a31f845588 <line:541:22>
| `-NonNullAttr 0x55a31f8455e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a31f845768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a31f845628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a31f8456a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55a31f845818 <line:544:22>
| `-NonNullAttr 0x55a31f845870 <col:63, col:77> 1
|-FunctionDecl 0x55a31f845a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55a31f8458b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a31f845938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55a31f845b08 <line:547:22>
| `-NonNullAttr 0x55a31f845b60 <col:63, col:80> 1 2
|-FunctionDecl 0x55a31f845ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a31f845ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a31f845c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55a31f845d98 <line:550:22>
| `-NonNullAttr 0x55a31f845df0 <col:63, col:77> 1
|-FunctionDecl 0x55a31f847168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55a31f846f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55a31f847020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55a31f847218 <col:29>
| `-NonNullAttr 0x55a31f847270 <col:70, col:84> 1
|-FunctionDecl 0x55a31f8473e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a31f8472b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a31f847490 <line:555:22>
| `-NonNullAttr 0x55a31f8474e8 <col:63, col:77> 1
|-FunctionDecl 0x55a31f8475f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a31f847538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a31f847698 <line:557:22>
| `-NonNullAttr 0x55a31f8476f0 <col:52, col:66> 1
|-FunctionDecl 0x55a31f8477f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a31f847738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a31f847898 <line:559:19>
| `-NonNullAttr 0x55a31f8478f0 <col:49, col:63> 1
|-FunctionDecl 0x55a31f847b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55a31f847938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55a31f8479c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55a31f847bd8 <col:39>
| `-NonNullAttr 0x55a31f847c30 <col:69, col:86> 1 2
|-FunctionDecl 0x55a31f847d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a31f847c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a31f847dd8 <line:564:22>
| `-NonNullAttr 0x55a31f847e30 <col:52, col:66> 1
|-FunctionDecl 0x55a31f847f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a31f847ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a31f848040 <line:566:22>
| `-NonNullAttr 0x55a31f848098 <col:52, col:66> 1
|-FunctionDecl 0x55a31f848258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55a31f8480e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55a31f848178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55a31f848308 <col:39>
| `-NonNullAttr 0x55a31f848360 <col:69, col:86> 1 2
|-FunctionDecl 0x55a31f848460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a31f8483a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a31f848508 <line:571:22>
| `-NonNullAttr 0x55a31f848560 <col:52, col:66> 1
|-FunctionDecl 0x55a31f848748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55a31f848610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55a31f8487f0 <line:573:22>
| `-NonNullAttr 0x55a31f848848 <col:63, col:77> 1
|-FunctionDecl 0x55a31f848950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55a31f848898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55a31f8489f8 <line:575:22>
| `-NonNullAttr 0x55a31f848a50 <col:63, col:77> 1
|-FunctionDecl 0x55a31f848c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a31f848a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55a31f848b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55a31f848d28 <line:579:22>
| `-NonNullAttr 0x55a31f848d80 <col:63, col:80> 1 2
|-FunctionDecl 0x55a31f848fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55a31f848dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55a31f848e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55a31f849058 <line:582:22>
| `-NonNullAttr 0x55a31f8490b0 <col:63, col:77> 1
|-FunctionDecl 0x55a31f849258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a31f8490f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55a31f849178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55a31f849308 <line:586:22>
| `-NonNullAttr 0x55a31f849360 <col:63, col:80> 1 2
|-FunctionDecl 0x55a31f8494e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55a31f8493a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55a31f849428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55a31f849598 <col:36>
| `-NonNullAttr 0x55a31f8495f0 <col:77, col:91> 1
|-FunctionDecl 0x55a31f849928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55a31f8496d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55a31f8497e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55a31f8499d8 <line:591:22>
| `-NonNullAttr 0x55a31f849a30 <col:63, col:77> 1
|-FunctionDecl 0x55a31f849ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55a31f849a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55a31f849c50 <line:593:22>
| `-NonNullAttr 0x55a31f849ca8 <col:63, col:77> 1
|-FunctionDecl 0x55a31f849db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55a31f849cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55a31f849e58 <line:595:22>
| `-NonNullAttr 0x55a31f849eb0 <col:52, col:66> 1
|-FunctionDecl 0x55a31f849fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55a31f849f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55a31f84a070 <line:597:22>
| `-NonNullAttr 0x55a31f84a0c8 <col:52, col:66> 1
|-FunctionDecl 0x55a31f84a2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55a31f84a118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55a31f84a190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55a31f84a3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55a31f84a6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55a31f84a428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55a31f84a4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55a31f84a530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55a31f84a790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55a31f84a9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55a31f84a870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55a31f84aa50 <line:606:22>
| `-NonNullAttr 0x55a31f84aaa8 <col:63, col:77> 1
|-FunctionDecl 0x55a31f84abb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55a31f84aaf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55a31f84ac58 <line:608:22>
| `-NonNullAttr 0x55a31f84acb0 <col:63, col:77> 1
|-FunctionDecl 0x55a31f84af10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a31f84acf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55a31f84ad78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55a31f84afc0 <line:612:22>
| `-NonNullAttr 0x55a31f84b018 <col:63, col:80> 1 2
|-FunctionDecl 0x55a31f84b228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55a31f84b068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55a31f84b0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55a31f84b2d8 <col:37>
| `-NonNullAttr 0x55a31f84b330 <col:78, col:92> 1
|-FunctionDecl 0x55a31f84b548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55a31f84b378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55a31f84b420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55a31f84b5f8 <line:618:22>
| `-NonNullAttr 0x55a31f84b650 <col:63, col:80> 1 2
|-FunctionDecl 0x55a31f84b818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55a31f84b698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55a31f84b710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55a31f84b8c8 <line:621:22>
| `-NonNullAttr 0x55a31f84b920 <col:63, col:77> 1
|-FunctionDecl 0x55a31f84bbc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55a31f84ba00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55a31f84ba80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55a31f84bc78 <line:623:22>
| `-NonNullAttr 0x55a31f84bcd0 <col:63, col:77> 1
|-FunctionDecl 0x55a31f84be48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55a31f84bd18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55a31f84bf20 <line:625:22>
| `-NonNullAttr 0x55a31f84bf78 <col:63, col:77> 1
|-FunctionDecl 0x55a31f84c080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55a31f84bfc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55a31f84c128 <line:627:22>
| `-NonNullAttr 0x55a31f84c180 <col:52, col:66> 1
|-FunctionDecl 0x55a31f84c280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55a31f84c1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55a31f84c328 <line:629:22>
| `-NonNullAttr 0x55a31f84c380 <col:52, col:66> 1
|-FunctionDecl 0x55a31f84c480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55a31f84c3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55a31f84c528 <line:631:22>
| `-NonNullAttr 0x55a31f84c580 <col:52, col:66> 1
|-FunctionDecl 0x55a31f84c958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55a31f84c660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55a31f84c770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55a31f84c7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55a31f84ca10 <line:635:22>
| `-NonNullAttr 0x55a31f84ca68 <col:63, col:77> 1
|-FunctionDecl 0x55a31f84cbe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55a31f84cab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55a31f84cc90 <line:637:22>
| `-NonNullAttr 0x55a31f84cce8 <col:63, col:77> 1
|-FunctionDecl 0x55a31f84cdf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55a31f84cd38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55a31f84ce98 <line:639:22>
| `-NonNullAttr 0x55a31f84cef0 <col:52, col:66> 1
|-FunctionDecl 0x55a31f84d0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55a31f84cfb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55a31f84d190 <line:641:22>
| `-NonNullAttr 0x55a31f84d1e8 <col:63, col:77> 1
|-FunctionDecl 0x55a31f84d2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55a31f84d238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55a31f84d398 <line:643:22>
| `-NonNullAttr 0x55a31f84d3f0 <col:63, col:77> 1
|-FunctionDecl 0x55a31f84d618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a31f84d438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55a31f84d4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55a31f84d6c8 <line:647:22>
| `-NonNullAttr 0x55a31f84d720 <col:63, col:80> 1 2
|-FunctionDecl 0x55a31f84d928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55a31f84d768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55a31f84d7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55a31f84d9d8 <line:650:22>
| `-NonNullAttr 0x55a31f84da30 <col:63, col:77> 1
|-FunctionDecl 0x55a31f84dd78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55a31f84db10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55a31f84dc30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55a31f84de28 <line:653:22>
| `-NonNullAttr 0x55a31f84de80 <col:63, col:77> 1
|-FunctionDecl 0x55a31f84dfe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55a31f84dec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55a31f84e090 <col:69>
|-FunctionDecl 0x55a31f84e208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55a31f84e0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55a31f84e2b0 <col:72>
|-FunctionDecl 0x55a31f84e4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55a31f84e318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55a31f84e3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55a31f84e598 <col:44>
|-FunctionDecl 0x55a31f84e7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55a31f84e600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a31f84e678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55a31f84e868 <line:660:22>
| `-NonNullAttr 0x55a31f84e8c0 <col:63, col:77> 2
|-FunctionDecl 0x55a31f84ed08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55a31f84e9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55a31f84eab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55a31f84ebc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55a31f84edc0 <col:47>
|-FunctionDecl 0x55a31f84ff60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55a31f84ee30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55a31f8500b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55a31f850020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55a31f850210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55a31f850178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55a31f850368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x55a31f8502d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55a31f850430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55a31f8504f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55a31f8505b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55a31f850668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55a31f8506e8 prev 0x55a31f850668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55a31f850750 <col:24> 'int' 0
|-VarDecl 0x55a31f850788 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55a31f850808 prev 0x55a31f850788 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55a31f850870 <col:27> 'int' 0
|-VarDecl 0x55a31f8508a8 <line:676:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x55a31f850928 prev 0x55a31f8508a8 <line:677:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x55a31f850990 <col:27> 'int' 0
|-VarDecl 0x55a31f8509c8 <line:678:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x55a31f850a48 prev 0x55a31f8509c8 <line:679:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x55a31f850ab0 <col:27> 'int' 0
|-VarDecl 0x55a31f850ae8 <line:680:1, col:5> col:5 used a 'int'
|-VarDecl 0x55a31f850b68 prev 0x55a31f850ae8 <line:681:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x55a31f850bd0 <col:9> 'int' 0
|-VarDecl 0x55a31f850c08 <line:682:1, col:5> col:5 used b 'int'
|-VarDecl 0x55a31f850c88 prev 0x55a31f850c08 <line:683:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x55a31f850cf0 <col:9> 'int' 0
|-VarDecl 0x55a31f850d20 <line:684:1, col:7> col:7 used b$flush_delayed '_Bool'
|-VarDecl 0x55a31f850da0 <line:685:1, col:5> col:5 used b$mem_tmp 'int'
|-VarDecl 0x55a31f850e18 <line:686:1, col:7> col:7 used b$r_buff0_thd0 '_Bool'
|-VarDecl 0x55a31f850e90 <line:687:1, col:7> col:7 used b$r_buff0_thd1 '_Bool'
|-VarDecl 0x55a31f850f70 <line:688:1, col:7> col:7 used b$r_buff0_thd2 '_Bool'
|-VarDecl 0x55a31f850fe8 <line:689:1, col:7> col:7 used b$r_buff0_thd3 '_Bool'
|-VarDecl 0x55a31f851060 <line:690:1, col:7> col:7 used b$r_buff0_thd4 '_Bool'
|-VarDecl 0x55a31f8510d8 <line:691:1, col:7> col:7 used b$r_buff1_thd0 '_Bool'
|-VarDecl 0x55a31f851150 <line:692:1, col:7> col:7 used b$r_buff1_thd1 '_Bool'
|-VarDecl 0x55a31f8511c8 <line:693:1, col:7> col:7 used b$r_buff1_thd2 '_Bool'
|-VarDecl 0x55a31f851240 <line:694:1, col:7> col:7 used b$r_buff1_thd3 '_Bool'
|-VarDecl 0x55a31f8512b8 <line:695:1, col:7> col:7 used b$r_buff1_thd4 '_Bool'
|-VarDecl 0x55a31f851330 <line:696:1, col:7> col:7 b$read_delayed '_Bool'
|-VarDecl 0x55a31f8513b0 <line:697:1, col:6> col:6 b$read_delayed_var 'int *'
|-VarDecl 0x55a31f851430 <line:698:1, col:5> col:5 used b$w_buff0 'int'
|-VarDecl 0x55a31f8514a8 <line:699:1, col:7> col:7 used b$w_buff0_used '_Bool'
|-VarDecl 0x55a31f851528 <line:700:1, col:5> col:5 used b$w_buff1 'int'
|-VarDecl 0x55a31f8515a0 <line:701:1, col:7> col:7 used b$w_buff1_used '_Bool'
|-VarDecl 0x55a31f851618 <line:702:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55a31f851690 <line:703:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55a31f851710 <line:704:1, col:5> col:5 used x 'int'
|-VarDecl 0x55a31f851790 prev 0x55a31f851710 <line:705:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55a31f8517f8 <col:9> 'int' 0
|-VarDecl 0x55a31f851830 <line:706:1, col:5> col:5 used y 'int'
|-VarDecl 0x55a31f8518b0 prev 0x55a31f851830 <line:707:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55a31f851918 <col:9> 'int' 0
|-VarDecl 0x55a31f851950 <line:708:1, col:5> col:5 used z 'int'
|-VarDecl 0x55a31f8519d0 prev 0x55a31f851950 <line:709:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55a31f851a38 <col:9> 'int' 0
|-VarDecl 0x55a31f851a68 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55a31f851ae0 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55a31f851bf8 prev 0x55a31f84ff60 <line:712:1, line:741:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55a31f851b60 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55a31f853498 <line:713:1, line:741:1>
|   |-CallExpr 0x55a31f851d08 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a31f851cf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f851ca0 <col:3> 'void ()' Function 0x55a31f7f7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a31f851d80 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55a31f851d28 <col:3> 'int' lvalue Var 0x55a31f851528 'b$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55a31f851d68 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a31f851d48 <col:15> 'int' lvalue Var 0x55a31f851430 'b$w_buff0' 'int'
|   |-BinaryOperator 0x55a31f851de0 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55a31f851da0 <col:3> 'int' lvalue Var 0x55a31f851430 'b$w_buff0' 'int'
|   | `-IntegerLiteral 0x55a31f851dc0 <col:15> 'int' 1
|   |-BinaryOperator 0x55a31f851e58 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f851e00 <col:3> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f851e40 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a31f851e20 <col:20> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a31f851ef0 <line:718:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f851e78 <col:3> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55a31f851ec8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55a31f851e98 <col:27> 'int' 1
|   |-CallExpr 0x55a31f852088 <line:719:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55a31f852070 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55a31f851f10 <col:3> 'void (int)' Function 0x55a31f7f70d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55a31f852020 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55a31f852000 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55a31f851fe0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55a31f851f98 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55a31f851f80 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55a31f851f30 <col:23> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55a31f851fc8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55a31f851fb0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55a31f851f50 <col:41> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a31f852108 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f8520b0 <col:3> '_Bool' lvalue Var 0x55a31f8510d8 'b$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f8520f0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a31f8520d0 <col:20> '_Bool' lvalue Var 0x55a31f850e18 'b$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55a31f852180 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f852128 <col:3> '_Bool' lvalue Var 0x55a31f851150 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f852168 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a31f852148 <col:20> '_Bool' lvalue Var 0x55a31f850e90 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55a31f8521f8 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f8521a0 <col:3> '_Bool' lvalue Var 0x55a31f8511c8 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f8521e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a31f8521c0 <col:20> '_Bool' lvalue Var 0x55a31f850f70 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55a31f852270 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f852218 <col:3> '_Bool' lvalue Var 0x55a31f851240 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f852258 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a31f852238 <col:20> '_Bool' lvalue Var 0x55a31f850fe8 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55a31f8522e8 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f852290 <col:3> '_Bool' lvalue Var 0x55a31f8512b8 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f8522d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a31f8522b0 <col:20> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55a31f852380 <line:725:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f852308 <col:3> '_Bool' lvalue Var 0x55a31f850e90 'b$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x55a31f852358 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55a31f852328 <col:27> 'int' 1
|   |-CallExpr 0x55a31f8523d8 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a31f8523c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f8523a0 <col:3> 'void ()' Function 0x55a31f7f7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a31f852430 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a31f852418 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f8523f8 <col:3> 'void ()' Function 0x55a31f7f7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a31f852490 <line:728:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a31f852450 <col:3> 'int' lvalue Var 0x55a31f851790 'x' 'int'
|   | `-IntegerLiteral 0x55a31f852470 <col:7> 'int' 1
|   |-CallExpr 0x55a31f8524e8 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a31f8524d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f8524b0 <col:3> 'void ()' Function 0x55a31f7f7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a31f852540 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a31f852528 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f852508 <col:3> 'void ()' Function 0x55a31f7f7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a31f852828 <line:731:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55a31f852560 <col:3> 'int' lvalue Var 0x55a31f850c88 'b' 'int'
|   | `-ConditionalOperator 0x55a31f8527f8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55a31f852620 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55a31f8525d8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55a31f8525c0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55a31f852580 <col:7> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55a31f852608 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55a31f8525f0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55a31f8525a0 <col:25> '_Bool' lvalue Var 0x55a31f850e90 'b$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55a31f8527e0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a31f852640 <col:42> 'int' lvalue Var 0x55a31f851430 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55a31f8527c0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55a31f852790 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55a31f852700 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55a31f8526b8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55a31f8526a0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55a31f852660 <col:55> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55a31f8526e8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55a31f8526d0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55a31f852680 <col:73> '_Bool' lvalue Var 0x55a31f851150 'b$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55a31f852760 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a31f852720 <col:90> 'int' lvalue Var 0x55a31f851528 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55a31f852778 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a31f852740 <col:102> 'int' lvalue Var 0x55a31f850c88 'b' 'int'
|   |-BinaryOperator 0x55a31f852a30 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f852848 <col:3> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f852a18 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a31f8529e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a31f852908 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a31f8528c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a31f8528a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a31f852868 <col:20> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a31f8528f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a31f8528d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a31f852888 <col:38> '_Bool' lvalue Var 0x55a31f850e90 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55a31f8529a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a31f852958 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a31f852928 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a31f8529d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a31f8529b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a31f852980 <col:66> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a31f852d18 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f852a50 <col:3> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f852d00 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a31f852cd0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a31f852bf0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a31f852b10 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a31f852ac8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a31f852ab0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a31f852a70 <col:20> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a31f852af8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a31f852ae0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a31f852a90 <col:38> '_Bool' lvalue Var 0x55a31f850e90 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55a31f852bd0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a31f852b88 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a31f852b70 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a31f852b30 <col:56> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a31f852bb8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a31f852ba0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a31f852b50 <col:74> '_Bool' lvalue Var 0x55a31f851150 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55a31f852c88 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a31f852c40 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a31f852c10 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a31f852cb8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a31f852ca0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a31f852c68 <col:102> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55a31f852f20 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f852d38 <col:3> '_Bool' lvalue Var 0x55a31f850e90 'b$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f852f08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a31f852ed8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a31f852df8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a31f852db0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a31f852d98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a31f852d58 <col:20> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a31f852de0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a31f852dc8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a31f852d78 <col:38> '_Bool' lvalue Var 0x55a31f850e90 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55a31f852e90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a31f852e48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a31f852e18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a31f852ec0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a31f852ea8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a31f852e70 <col:66> '_Bool' lvalue Var 0x55a31f850e90 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55a31f853218 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f852f40 <col:3> '_Bool' lvalue Var 0x55a31f851150 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f853200 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a31f8531d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a31f8530f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a31f853010 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a31f852fc8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a31f852fb0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a31f852f60 <col:20> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a31f852ff8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a31f852fe0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a31f852f90 <col:38> '_Bool' lvalue Var 0x55a31f850e90 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55a31f8530d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a31f853088 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a31f853070 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a31f853030 <col:56> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a31f8530b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a31f8530a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a31f853050 <col:74> '_Bool' lvalue Var 0x55a31f851150 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55a31f853188 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a31f853140 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a31f853110 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a31f8531b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a31f8531a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a31f853168 <col:102> '_Bool' lvalue Var 0x55a31f851150 'b$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55a31f853270 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a31f853258 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f853238 <col:3> 'void ()' Function 0x55a31f7f7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a31f8532c8 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a31f8532b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f853290 <col:3> 'void ()' Function 0x55a31f7f7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a31f853380 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55a31f8532e8 <col:3> 'int' lvalue Var 0x55a31f8506e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55a31f853360 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55a31f853348 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a31f853308 <col:22> 'int' lvalue Var 0x55a31f8506e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55a31f853328 <col:41> 'int' 1
|   |-CallExpr 0x55a31f8533d8 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a31f8533c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f8533a0 <col:3> 'void ()' Function 0x55a31f7f7410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55a31f853488 <line:740:3, col:36>
|     `-CallExpr 0x55a31f853468 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55a31f853450 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55a31f8533f8 <col:10> 'void *(void)' Function 0x55a31f7f6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55a31f853630 prev 0x55a31f8500b8 <line:742:1, line:761:1> line:742:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55a31f853598 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55a31f854868 <line:743:1, line:761:1>
|   |-CallExpr 0x55a31f853710 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a31f8536f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f8536d8 <col:3> 'void ()' Function 0x55a31f7f7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a31f853770 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a31f853730 <col:3> 'int' lvalue Var 0x55a31f851790 'x' 'int'
|   | `-IntegerLiteral 0x55a31f853750 <col:7> 'int' 2
|   |-CallExpr 0x55a31f8537c8 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a31f8537b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f853790 <col:3> 'void ()' Function 0x55a31f7f7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a31f853820 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a31f853808 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f8537e8 <col:3> 'void ()' Function 0x55a31f7f7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a31f853898 <line:748:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55a31f853840 <col:3> 'int' lvalue Var 0x55a31f850808 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55a31f853880 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a31f853860 <col:25> 'int' lvalue Var 0x55a31f8518b0 'y' 'int'
|   |-CallExpr 0x55a31f8538f0 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a31f8538d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f8538b8 <col:3> 'void ()' Function 0x55a31f7f7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a31f853948 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a31f853930 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f853910 <col:3> 'void ()' Function 0x55a31f7f7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a31f853c30 <line:751:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55a31f853968 <col:3> 'int' lvalue Var 0x55a31f850c88 'b' 'int'
|   | `-ConditionalOperator 0x55a31f853c00 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55a31f853a28 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55a31f8539e0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55a31f8539c8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55a31f853988 <col:7> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55a31f853a10 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55a31f8539f8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55a31f8539a8 <col:25> '_Bool' lvalue Var 0x55a31f850f70 'b$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55a31f853be8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a31f853a48 <col:42> 'int' lvalue Var 0x55a31f851430 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55a31f853bc8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55a31f853b98 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55a31f853b08 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55a31f853ac0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55a31f853aa8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55a31f853a68 <col:55> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55a31f853af0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55a31f853ad8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55a31f853a88 <col:73> '_Bool' lvalue Var 0x55a31f8511c8 'b$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55a31f853b68 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a31f853b28 <col:90> 'int' lvalue Var 0x55a31f851528 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55a31f853b80 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a31f853b48 <col:102> 'int' lvalue Var 0x55a31f850c88 'b' 'int'
|   |-BinaryOperator 0x55a31f853e38 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f853c50 <col:3> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f853e20 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a31f853df0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a31f853d10 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a31f853cc8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a31f853cb0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a31f853c70 <col:20> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a31f853cf8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a31f853ce0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a31f853c90 <col:38> '_Bool' lvalue Var 0x55a31f850f70 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a31f853da8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a31f853d60 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a31f853d30 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a31f853dd8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a31f853dc0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a31f853d88 <col:66> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a31f854130 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f853e58 <col:3> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f854118 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a31f8540e8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a31f854008 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a31f853f18 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a31f853ed0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a31f853eb8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a31f853e78 <col:20> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a31f853f00 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a31f853ee8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a31f853e98 <col:38> '_Bool' lvalue Var 0x55a31f850f70 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55a31f853fe8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a31f853fa0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a31f853f78 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a31f853f38 <col:56> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a31f853fd0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a31f853fb8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a31f853f58 <col:74> '_Bool' lvalue Var 0x55a31f8511c8 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a31f8540a0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a31f854058 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a31f854028 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a31f8540d0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a31f8540b8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a31f854080 <col:102> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55a31f854338 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f854150 <col:3> '_Bool' lvalue Var 0x55a31f850f70 'b$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f854320 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a31f8542f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a31f854210 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a31f8541c8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a31f8541b0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a31f854170 <col:20> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a31f8541f8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a31f8541e0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a31f854190 <col:38> '_Bool' lvalue Var 0x55a31f850f70 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a31f8542a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a31f854260 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a31f854230 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a31f8542d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a31f8542c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a31f854288 <col:66> '_Bool' lvalue Var 0x55a31f850f70 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55a31f854620 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f854358 <col:3> '_Bool' lvalue Var 0x55a31f8511c8 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f854608 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a31f8545d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a31f8544f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a31f854418 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a31f8543d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a31f8543b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a31f854378 <col:20> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a31f854400 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a31f8543e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a31f854398 <col:38> '_Bool' lvalue Var 0x55a31f850f70 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55a31f8544d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a31f854490 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a31f854478 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a31f854438 <col:56> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a31f8544c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a31f8544a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a31f854458 <col:74> '_Bool' lvalue Var 0x55a31f8511c8 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a31f854590 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a31f854548 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a31f854518 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a31f8545c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a31f8545a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a31f854570 <col:102> '_Bool' lvalue Var 0x55a31f8511c8 'b$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55a31f854678 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a31f854660 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f854640 <col:3> 'void ()' Function 0x55a31f7f7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a31f8546d0 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a31f8546b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f854698 <col:3> 'void ()' Function 0x55a31f7f7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a31f854788 <line:758:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55a31f8546f0 <col:3> 'int' lvalue Var 0x55a31f8506e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55a31f854768 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55a31f854750 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a31f854710 <col:22> 'int' lvalue Var 0x55a31f8506e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55a31f854730 <col:41> 'int' 1
|   |-CallExpr 0x55a31f8547e0 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a31f8547c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f8547a8 <col:3> 'void ()' Function 0x55a31f7f7410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55a31f854858 <line:760:3, col:36>
|     `-CallExpr 0x55a31f854838 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55a31f854820 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55a31f854800 <col:10> 'void *(void)' Function 0x55a31f7f6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55a31f8549b0 prev 0x55a31f850210 <line:762:1, line:781:1> line:762:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55a31f854918 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55a31f855bd8 <line:763:1, line:781:1>
|   |-CallExpr 0x55a31f854a90 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a31f854a78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f854a58 <col:3> 'void ()' Function 0x55a31f7f7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a31f854af0 <line:765:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a31f854ab0 <col:3> 'int' lvalue Var 0x55a31f8518b0 'y' 'int'
|   | `-IntegerLiteral 0x55a31f854ad0 <col:7> 'int' 1
|   |-CallExpr 0x55a31f854b48 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a31f854b30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f854b10 <col:3> 'void ()' Function 0x55a31f7f7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a31f854ba0 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a31f854b88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f854b68 <col:3> 'void ()' Function 0x55a31f7f7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a31f854c00 <line:768:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a31f854bc0 <col:3> 'int' lvalue Var 0x55a31f8519d0 'z' 'int'
|   | `-IntegerLiteral 0x55a31f854be0 <col:7> 'int' 1
|   |-CallExpr 0x55a31f854c58 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a31f854c40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f854c20 <col:3> 'void ()' Function 0x55a31f7f7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a31f854cb0 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a31f854c98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f854c78 <col:3> 'void ()' Function 0x55a31f7f7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a31f854fb0 <line:771:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55a31f854cd0 <col:3> 'int' lvalue Var 0x55a31f850c88 'b' 'int'
|   | `-ConditionalOperator 0x55a31f854f68 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55a31f854d90 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55a31f854d48 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55a31f854d30 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55a31f854cf0 <col:7> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55a31f854d78 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55a31f854d60 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55a31f854d10 <col:25> '_Bool' lvalue Var 0x55a31f850fe8 'b$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55a31f854f50 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a31f854db0 <col:42> 'int' lvalue Var 0x55a31f851430 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55a31f854f30 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55a31f854f00 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55a31f854e70 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55a31f854e28 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55a31f854e10 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55a31f854dd0 <col:55> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55a31f854e58 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55a31f854e40 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55a31f854df0 <col:73> '_Bool' lvalue Var 0x55a31f851240 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55a31f854ed0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a31f854e90 <col:90> 'int' lvalue Var 0x55a31f851528 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55a31f854ee8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a31f854eb0 <col:102> 'int' lvalue Var 0x55a31f850c88 'b' 'int'
|   |-BinaryOperator 0x55a31f8551b8 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f854fd0 <col:3> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f8551a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a31f855170 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a31f855090 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a31f855048 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a31f855030 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a31f854ff0 <col:20> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a31f855078 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a31f855060 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a31f855010 <col:38> '_Bool' lvalue Var 0x55a31f850fe8 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55a31f855128 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a31f8550e0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a31f8550b0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a31f855158 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a31f855140 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a31f855108 <col:66> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a31f8554a0 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f8551d8 <col:3> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f855488 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a31f855458 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a31f855378 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a31f855298 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a31f855250 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a31f855238 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a31f8551f8 <col:20> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a31f855280 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a31f855268 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a31f855218 <col:38> '_Bool' lvalue Var 0x55a31f850fe8 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55a31f855358 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a31f855310 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a31f8552f8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a31f8552b8 <col:56> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a31f855340 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a31f855328 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a31f8552d8 <col:74> '_Bool' lvalue Var 0x55a31f851240 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55a31f855410 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a31f8553c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a31f855398 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a31f855440 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a31f855428 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a31f8553f0 <col:102> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55a31f8556a8 <line:774:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f8554c0 <col:3> '_Bool' lvalue Var 0x55a31f850fe8 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f855690 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a31f855660 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a31f855580 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a31f855538 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a31f855520 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a31f8554e0 <col:20> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a31f855568 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a31f855550 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a31f855500 <col:38> '_Bool' lvalue Var 0x55a31f850fe8 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55a31f855618 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a31f8555d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a31f8555a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a31f855648 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a31f855630 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a31f8555f8 <col:66> '_Bool' lvalue Var 0x55a31f850fe8 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55a31f855990 <line:775:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f8556c8 <col:3> '_Bool' lvalue Var 0x55a31f851240 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f855978 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a31f855948 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a31f855868 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a31f855788 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a31f855740 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a31f855728 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a31f8556e8 <col:20> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a31f855770 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a31f855758 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a31f855708 <col:38> '_Bool' lvalue Var 0x55a31f850fe8 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55a31f855848 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a31f855800 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a31f8557e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a31f8557a8 <col:56> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a31f855830 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a31f855818 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a31f8557c8 <col:74> '_Bool' lvalue Var 0x55a31f851240 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55a31f855900 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a31f8558b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a31f855888 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a31f855930 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a31f855918 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a31f8558e0 <col:102> '_Bool' lvalue Var 0x55a31f851240 'b$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55a31f8559e8 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a31f8559d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f8559b0 <col:3> 'void ()' Function 0x55a31f7f7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a31f855a40 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a31f855a28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f855a08 <col:3> 'void ()' Function 0x55a31f7f7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a31f855af8 <line:778:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55a31f855a60 <col:3> 'int' lvalue Var 0x55a31f8506e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55a31f855ad8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55a31f855ac0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a31f855a80 <col:22> 'int' lvalue Var 0x55a31f8506e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55a31f855aa0 <col:41> 'int' 1
|   |-CallExpr 0x55a31f855b50 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a31f855b38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f855b18 <col:3> 'void ()' Function 0x55a31f7f7410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55a31f855bc8 <line:780:3, col:36>
|     `-CallExpr 0x55a31f855ba8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55a31f855b90 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55a31f855b70 <col:10> 'void *(void)' Function 0x55a31f7f6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55a31f855d20 prev 0x55a31f850368 <line:782:1, line:820:1> line:782:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x55a31f855c88 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55a31f859b18 <line:783:1, line:820:1>
|   |-CallExpr 0x55a31f855e00 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a31f855de8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f855dc8 <col:3> 'void ()' Function 0x55a31f7f7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a31f855e60 <line:785:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a31f855e20 <col:3> 'int' lvalue Var 0x55a31f8519d0 'z' 'int'
|   | `-IntegerLiteral 0x55a31f855e40 <col:7> 'int' 2
|   |-CallExpr 0x55a31f855eb8 <line:786:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a31f855ea0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f855e80 <col:3> 'void ()' Function 0x55a31f7f7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a31f855f10 <line:787:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a31f855ef8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f855ed8 <col:3> 'void ()' Function 0x55a31f7f7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a31f855f70 <line:788:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a31f855f30 <col:3> 'int' lvalue Var 0x55a31f850b68 'a' 'int'
|   | `-IntegerLiteral 0x55a31f855f50 <col:7> 'int' 1
|   |-CallExpr 0x55a31f855fd8 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a31f855fc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f855f90 <col:3> 'void ()' Function 0x55a31f7f7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a31f856030 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a31f856018 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f855ff8 <col:3> 'void ()' Function 0x55a31f7f7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a31f8560a8 <line:791:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55a31f856050 <col:3> 'int' lvalue Var 0x55a31f850928 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x55a31f856090 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a31f856070 <col:25> 'int' lvalue Var 0x55a31f850b68 'a' 'int'
|   |-CallExpr 0x55a31f856100 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a31f8560e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f8560c8 <col:3> 'void ()' Function 0x55a31f7f7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a31f856158 <line:793:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a31f856140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f856120 <col:3> 'void ()' Function 0x55a31f7f7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a31f856208 <line:794:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f856178 <col:3> '_Bool' lvalue Var 0x55a31f851a68 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f8561f0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55a31f8561d0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55a31f8561b8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55a31f856198 <col:19> 'void *(void)' Function 0x55a31f7f6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55a31f8562b8 <line:795:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f856228 <col:3> '_Bool' lvalue Var 0x55a31f851ae0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f8562a0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55a31f856280 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55a31f856268 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55a31f856248 <col:19> 'void *(void)' Function 0x55a31f7f6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55a31f856330 <line:796:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f8562d8 <col:3> '_Bool' lvalue Var 0x55a31f850d20 'b$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f856318 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a31f8562f8 <col:21> '_Bool' lvalue Var 0x55a31f851ae0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55a31f8563a8 <line:797:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55a31f856350 <col:3> 'int' lvalue Var 0x55a31f850da0 'b$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55a31f856390 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a31f856370 <col:15> 'int' lvalue Var 0x55a31f850c88 'b' 'int'
|   |-BinaryOperator 0x55a31f8567e0 <line:798:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55a31f8563c8 <col:3> 'int' lvalue Var 0x55a31f850c88 'b' 'int'
|   | `-ConditionalOperator 0x55a31f8567b0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55a31f8565d8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55a31f8564f8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55a31f856420 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55a31f856408 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55a31f8563e8 <col:8> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55a31f8564d8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55a31f856470 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55a31f856458 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55a31f856438 <col:27> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x55a31f8564c0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55a31f8564a8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55a31f856488 <col:46> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55a31f8565b8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55a31f856550 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55a31f856538 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55a31f856518 <col:65> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x55a31f8565a0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55a31f856588 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55a31f856568 <col:84> '_Bool' lvalue Var 0x55a31f8512b8 'b$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55a31f856798 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a31f8565f8 <col:101> 'int' lvalue Var 0x55a31f850c88 'b' 'int'
|   |   `-ParenExpr 0x55a31f856778 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55a31f856748 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55a31f8566b8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55a31f856670 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55a31f856658 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55a31f856618 <col:106> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55a31f8566a0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55a31f856688 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55a31f856638 <col:124> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55a31f856718 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a31f8566d8 <col:141> 'int' lvalue Var 0x55a31f851430 'b$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55a31f856730 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a31f8566f8 <col:153> 'int' lvalue Var 0x55a31f851528 'b$w_buff1' 'int'
|   |-BinaryOperator 0x55a31f856cf0 <line:799:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55a31f856800 <col:3> 'int' lvalue Var 0x55a31f851430 'b$w_buff0' 'int'
|   | `-ConditionalOperator 0x55a31f856cc0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55a31f856c90 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55a31f856c78 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55a31f856820 <col:15> '_Bool' lvalue Var 0x55a31f851ae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55a31f856ca8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a31f856840 <col:31> 'int' lvalue Var 0x55a31f851430 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55a31f856c58 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55a31f856c28 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55a31f856a50 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55a31f856970 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55a31f856898 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55a31f856880 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55a31f856860 <col:45> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55a31f856950 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55a31f8568e8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55a31f8568d0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55a31f8568b0 <col:64> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55a31f856938 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55a31f856920 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55a31f856900 <col:83> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55a31f856a30 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55a31f8569c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55a31f8569b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55a31f856990 <col:102> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55a31f856a18 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55a31f856a00 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55a31f8569e0 <col:121> '_Bool' lvalue Var 0x55a31f8512b8 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55a31f856c10 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a31f856a70 <col:138> 'int' lvalue Var 0x55a31f851430 'b$w_buff0' 'int'
|   |       `-ParenExpr 0x55a31f856bf0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55a31f856bc0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55a31f856b30 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55a31f856ae8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55a31f856ad0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55a31f856a90 <col:151> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55a31f856b18 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55a31f856b00 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55a31f856ab0 <col:169> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55a31f856b90 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55a31f856b50 <col:186> 'int' lvalue Var 0x55a31f851430 'b$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55a31f856ba8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55a31f856b70 <col:198> 'int' lvalue Var 0x55a31f851430 'b$w_buff0' 'int'
|   |-BinaryOperator 0x55a31f857210 <line:800:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55a31f856d10 <col:3> 'int' lvalue Var 0x55a31f851528 'b$w_buff1' 'int'
|   | `-ConditionalOperator 0x55a31f8571e0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55a31f8571b0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55a31f857198 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55a31f856d30 <col:15> '_Bool' lvalue Var 0x55a31f851ae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55a31f8571c8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a31f856d50 <col:31> 'int' lvalue Var 0x55a31f851528 'b$w_buff1' 'int'
|   |   `-ParenExpr 0x55a31f857178 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55a31f857148 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55a31f856f60 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55a31f856e80 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55a31f856da8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55a31f856d90 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55a31f856d70 <col:45> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55a31f856e60 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55a31f856df8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55a31f856de0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55a31f856dc0 <col:64> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55a31f856e48 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55a31f856e30 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55a31f856e10 <col:83> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55a31f856f40 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55a31f856ed8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55a31f856ec0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55a31f856ea0 <col:102> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55a31f856f28 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55a31f856f10 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55a31f856ef0 <col:121> '_Bool' lvalue Var 0x55a31f8512b8 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55a31f857130 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a31f856f80 <col:138> 'int' lvalue Var 0x55a31f851528 'b$w_buff1' 'int'
|   |       `-ParenExpr 0x55a31f857110 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55a31f8570e0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55a31f857050 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55a31f857008 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55a31f856ff0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55a31f856fa0 <col:151> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55a31f857038 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55a31f857020 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55a31f856fd0 <col:169> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55a31f8570b0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55a31f857070 <col:186> 'int' lvalue Var 0x55a31f851528 'b$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55a31f8570c8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55a31f857090 <col:198> 'int' lvalue Var 0x55a31f851528 'b$w_buff1' 'int'
|   |-BinaryOperator 0x55a31f8577b8 <line:801:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f857230 <col:3> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f8577a0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a31f857770 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55a31f857728 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a31f857710 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a31f857250 <col:20> '_Bool' lvalue Var 0x55a31f851ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a31f857758 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a31f857740 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a31f857270 <col:36> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55a31f8576f0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55a31f8576c0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55a31f857480 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55a31f8573a0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55a31f8572c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55a31f8572b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55a31f857290 <col:55> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55a31f857380 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55a31f857318 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55a31f857300 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55a31f8572e0 <col:74> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55a31f857368 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55a31f857350 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55a31f857330 <col:93> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55a31f857460 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55a31f8573f8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55a31f8573e0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55a31f8573c0 <col:112> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55a31f857448 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55a31f857430 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55a31f857410 <col:131> '_Bool' lvalue Var 0x55a31f8512b8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55a31f8576a8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a31f857690 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a31f8574a0 <col:148> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55a31f857670 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55a31f857640 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55a31f857560 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a31f857518 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a31f857500 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a31f8574c0 <col:166> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a31f857548 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a31f857530 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a31f8574e0 <col:184> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55a31f8575f8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a31f8575b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a31f857580 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55a31f857628 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55a31f857610 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55a31f8575d8 <col:212> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a31f857d80 <line:802:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f8577d8 <col:3> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f857d68 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a31f857d38 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55a31f857cf0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a31f857cd8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a31f8577f8 <col:20> '_Bool' lvalue Var 0x55a31f851ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a31f857d20 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a31f857d08 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a31f857818 <col:36> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55a31f857cb8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55a31f857c88 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55a31f857a28 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55a31f857948 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55a31f857870 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55a31f857858 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55a31f857838 <col:55> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55a31f857928 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55a31f8578c0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55a31f8578a8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55a31f857888 <col:74> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55a31f857910 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55a31f8578f8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55a31f8578d8 <col:93> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55a31f857a08 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55a31f8579a0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55a31f857988 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55a31f857968 <col:112> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55a31f8579f0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55a31f8579d8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55a31f8579b8 <col:131> '_Bool' lvalue Var 0x55a31f8512b8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55a31f857c70 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a31f857c58 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a31f857a48 <col:148> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55a31f857c38 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55a31f857c08 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55a31f857b08 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a31f857ac0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a31f857aa8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a31f857a68 <col:166> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a31f857af0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a31f857ad8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a31f857a88 <col:184> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55a31f857bd8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a31f857b58 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a31f857b28 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55a31f857bf0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55a31f857bb0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55a31f857b80 <col:219> 'int' 0
|   |-BinaryOperator 0x55a31f858338 <line:803:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f857da0 <col:3> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f858320 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a31f8582f0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55a31f8582a8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a31f858290 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a31f857dc0 <col:20> '_Bool' lvalue Var 0x55a31f851ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a31f8582d8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a31f8582c0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a31f857de0 <col:36> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x55a31f858270 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55a31f858240 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55a31f858000 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55a31f857f10 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55a31f857e38 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55a31f857e20 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55a31f857e00 <col:55> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55a31f857ef0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55a31f857e88 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55a31f857e70 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55a31f857e50 <col:74> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55a31f857ed8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55a31f857ec0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55a31f857ea0 <col:93> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55a31f857fe0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55a31f857f68 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55a31f857f50 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55a31f857f30 <col:112> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55a31f857fb8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55a31f857fa0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55a31f857f80 <col:131> '_Bool' lvalue Var 0x55a31f8512b8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55a31f858228 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a31f858210 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a31f858020 <col:148> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x55a31f8581f0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55a31f8581c0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55a31f8580e0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a31f858098 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a31f858080 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a31f858040 <col:166> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a31f8580c8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a31f8580b0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a31f858060 <col:184> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55a31f858178 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a31f858130 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a31f858100 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55a31f8581a8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55a31f858190 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55a31f858158 <col:212> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55a31f858900 <line:804:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f858358 <col:3> '_Bool' lvalue Var 0x55a31f8512b8 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f8588e8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a31f8588b8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55a31f858870 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a31f858858 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a31f858378 <col:20> '_Bool' lvalue Var 0x55a31f851ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a31f8588a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a31f858888 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a31f858398 <col:36> '_Bool' lvalue Var 0x55a31f8512b8 'b$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x55a31f858838 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55a31f858808 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55a31f8585a8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55a31f8584c8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55a31f8583f0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55a31f8583d8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55a31f8583b8 <col:55> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55a31f8584a8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55a31f858440 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55a31f858428 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55a31f858408 <col:74> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55a31f858490 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55a31f858478 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55a31f858458 <col:93> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55a31f858588 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55a31f858520 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55a31f858508 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55a31f8584e8 <col:112> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55a31f858570 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55a31f858558 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55a31f858538 <col:131> '_Bool' lvalue Var 0x55a31f8512b8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55a31f8587f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a31f8587d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a31f8585c8 <col:148> '_Bool' lvalue Var 0x55a31f8512b8 'b$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x55a31f8587b8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55a31f858788 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55a31f858688 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a31f858640 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a31f858628 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a31f8585e8 <col:166> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a31f858670 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a31f858658 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a31f858608 <col:184> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55a31f858758 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a31f8586d8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a31f8586a8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55a31f858770 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55a31f858730 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55a31f858700 <col:219> 'int' 0
|   |-BinaryOperator 0x55a31f858978 <line:805:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55a31f858920 <col:3> 'int' lvalue Var 0x55a31f850a48 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x55a31f858960 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a31f858940 <col:25> 'int' lvalue Var 0x55a31f850c88 'b' 'int'
|   |-BinaryOperator 0x55a31f858aa8 <line:806:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55a31f858998 <col:3> 'int' lvalue Var 0x55a31f850c88 'b' 'int'
|   | `-ConditionalOperator 0x55a31f858a78 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55a31f858a30 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55a31f858a18 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55a31f8589b8 <col:7> '_Bool' lvalue Var 0x55a31f850d20 'b$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55a31f858a48 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a31f8589d8 <col:25> 'int' lvalue Var 0x55a31f850da0 'b$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55a31f858a60 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55a31f8589f8 <col:37> 'int' lvalue Var 0x55a31f850c88 'b' 'int'
|   |-BinaryOperator 0x55a31f858b40 <line:807:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f858ac8 <col:3> '_Bool' lvalue Var 0x55a31f850d20 'b$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55a31f858b18 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55a31f858ae8 <col:28> 'int' 0
|   |-CallExpr 0x55a31f858b98 <line:808:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a31f858b80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f858b60 <col:3> 'void ()' Function 0x55a31f7f7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a31f858bf0 <line:809:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a31f858bd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f858bb8 <col:3> 'void ()' Function 0x55a31f7f7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a31f858ed8 <line:810:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55a31f858c10 <col:3> 'int' lvalue Var 0x55a31f850c88 'b' 'int'
|   | `-ConditionalOperator 0x55a31f858ea8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55a31f858cd0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55a31f858c88 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55a31f858c70 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55a31f858c30 <col:7> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55a31f858cb8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55a31f858ca0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55a31f858c50 <col:25> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55a31f858e90 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a31f858cf0 <col:42> 'int' lvalue Var 0x55a31f851430 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55a31f858e70 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55a31f858e40 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55a31f858db0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55a31f858d68 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55a31f858d50 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55a31f858d10 <col:55> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55a31f858d98 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55a31f858d80 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55a31f858d30 <col:73> '_Bool' lvalue Var 0x55a31f8512b8 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55a31f858e10 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a31f858dd0 <col:90> 'int' lvalue Var 0x55a31f851528 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55a31f858e28 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a31f858df0 <col:102> 'int' lvalue Var 0x55a31f850c88 'b' 'int'
|   |-BinaryOperator 0x55a31f8590f8 <line:811:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f858ef8 <col:3> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f8590e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a31f8590b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a31f858fb8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a31f858f70 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a31f858f58 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a31f858f18 <col:20> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a31f858fa0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a31f858f88 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a31f858f38 <col:38> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55a31f859068 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a31f859020 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a31f858ff0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a31f859098 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a31f859080 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a31f859048 <col:66> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a31f8593e0 <line:812:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f859118 <col:3> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f8593c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a31f859398 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a31f8592b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a31f8591d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a31f859190 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a31f859178 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a31f859138 <col:20> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a31f8591c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a31f8591a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a31f859158 <col:38> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55a31f859298 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a31f859250 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a31f859238 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a31f8591f8 <col:56> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a31f859280 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a31f859268 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a31f859218 <col:74> '_Bool' lvalue Var 0x55a31f8512b8 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55a31f859350 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a31f859308 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a31f8592d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a31f859380 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a31f859368 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a31f859330 <col:102> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55a31f8595e8 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f859400 <col:3> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f8595d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a31f8595a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a31f8594c0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a31f859478 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a31f859460 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a31f859420 <col:20> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a31f8594a8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a31f859490 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a31f859440 <col:38> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55a31f859558 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a31f859510 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a31f8594e0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a31f859588 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a31f859570 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a31f859538 <col:66> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55a31f8598d0 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a31f859608 <col:3> '_Bool' lvalue Var 0x55a31f8512b8 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55a31f8598b8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a31f859888 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a31f8597a8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a31f8596c8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a31f859680 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a31f859668 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a31f859628 <col:20> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a31f8596b0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a31f859698 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a31f859648 <col:38> '_Bool' lvalue Var 0x55a31f851060 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55a31f859788 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a31f859740 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a31f859728 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a31f8596e8 <col:56> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a31f859770 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a31f859758 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a31f859708 <col:74> '_Bool' lvalue Var 0x55a31f8512b8 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55a31f859840 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a31f8597f8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a31f8597c8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a31f859870 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a31f859858 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a31f859820 <col:102> '_Bool' lvalue Var 0x55a31f8512b8 'b$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x55a31f859928 <line:815:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a31f859910 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f8598f0 <col:3> 'void ()' Function 0x55a31f7f7410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a31f859980 <line:816:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a31f859968 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f859948 <col:3> 'void ()' Function 0x55a31f7f7350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a31f859a38 <line:817:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55a31f8599a0 <col:3> 'int' lvalue Var 0x55a31f8506e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55a31f859a18 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55a31f859a00 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a31f8599c0 <col:22> 'int' lvalue Var 0x55a31f8506e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55a31f8599e0 <col:41> 'int' 1
|   |-CallExpr 0x55a31f859a90 <line:818:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a31f859a78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a31f859a58 <col:3> 'void ()' Function 0x55a31f7f7410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55a31f859b08 <line:819:3, col:36>
|     `-CallExpr 0x55a31f859ae8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55a31f859ad0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55a31f859ab0 <col:10> 'void *(void)' Function 0x55a31f7f6e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55a31f859c68 prev 0x55a31f850430 <line:821:1, line:823:1> line:821:6 fence 'void ()'
| `-CompoundStmt 0x55a31f859d08 <line:822:1, line:823:1>
|-FunctionDecl 0x55a31f859d38 prev 0x55a31f8504f0 <line:824:1, line:826:1> line:824:6 isync 'void ()'
| `-CompoundStmt 0x55a31f859dd8 <line:825:1, line:826:1>
|-FunctionDecl 0x55a31f859e08 prev 0x55a31f8505b0 <line:827:1, line:829:1> line:827:6 lwfence 'void ()'
| `-CompoundStmt 0x55a31f859ea8 <line:828:1, line:829:1>
`-FunctionDecl 0x55a31f859f18 <line:830:1, line:856:1> line:830:5 main 'int ()'
  `-CompoundStmt 0x55a31f85c020 <line:831:1, line:856:1>
    |-DeclStmt 0x55a31f85a068 <line:832:3, col:18>
    | `-VarDecl 0x55a31f85a000 <col:3, col:13> col:13 used t1163 'pthread_t':'unsigned long'
    |-CallExpr 0x55a31f85a278 <line:833:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55a31f85a260 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a31f85a080 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55a31f8378f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55a31f85a0c0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55a31f85a0a0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55a31f85a000 't1163' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55a31f85a2b8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55a31f85a138 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55a31f85a110 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55a31f85a0d8 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55a31f85a2d0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a31f85a158 <col:39> 'void *(void *)' Function 0x55a31f851bf8 'P0' 'void *(void *)'
    | `-ParenExpr 0x55a31f85a1d8 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55a31f85a1b0 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55a31f85a178 <col:52> 'int' 0
    |-DeclStmt 0x55a31f85a360 <line:834:3, col:18>
    | `-VarDecl 0x55a31f85a2f8 <col:3, col:13> col:13 used t1164 'pthread_t':'unsigned long'
    |-CallExpr 0x55a31f85a508 <line:835:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55a31f85a4f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a31f85a378 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55a31f8378f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55a31f85a3b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55a31f85a398 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55a31f85a2f8 't1164' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55a31f85a548 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55a31f85a430 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55a31f85a408 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55a31f85a3d0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55a31f85a560 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a31f85a450 <col:39> 'void *(void *)' Function 0x55a31f853630 'P1' 'void *(void *)'
    | `-ParenExpr 0x55a31f85a4d0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55a31f85a4a8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55a31f85a470 <col:52> 'int' 0
    |-DeclStmt 0x55a31f85a5f0 <line:836:3, col:18>
    | `-VarDecl 0x55a31f85a588 <col:3, col:13> col:13 used t1165 'pthread_t':'unsigned long'
    |-CallExpr 0x55a31f85a798 <line:837:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55a31f85a780 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a31f85a608 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55a31f8378f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55a31f85a648 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55a31f85a628 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55a31f85a588 't1165' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55a31f85a7d8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55a31f85a6c0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55a31f85a698 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55a31f85a660 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55a31f85a7f0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a31f85a6e0 <col:39> 'void *(void *)' Function 0x55a31f8549b0 'P2' 'void *(void *)'
    | `-ParenExpr 0x55a31f85a760 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55a31f85a738 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55a31f85a700 <col:52> 'int' 0
    |-DeclStmt 0x55a31f85a880 <line:838:3, col:18>
    | `-VarDecl 0x55a31f85a818 <col:3, col:13> col:13 used t1166 'pthread_t':'unsigned long'
    |-CallExpr 0x55a31f85aa28 <line:839:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55a31f85aa10 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a31f85a898 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55a31f8378f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55a31f85a8d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55a31f85a8b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55a31f85a818 't1166' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55a31f85aa68 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55a31f85a950 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55a31f85a928 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55a31f85a8f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55a31f85aa80 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a31f85a970 <col:39> 'void *(void *)' Function 0x55a31f855d20 'P3' 'void *(void *)'
    | `-ParenExpr 0x55a31f85a9f0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55a31f85a9c8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55a31f85a990 <col:52> 'int' 0
    |-CallExpr 0x55a31f85aad0 <line:840:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55a31f85aab8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a31f85aa98 <col:3> 'void ()' Function 0x55a31f7f7350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55a31f85aba0 <line:841:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55a31f85aaf0 <col:3> '_Bool' lvalue Var 0x55a31f851618 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55a31f85ab88 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55a31f85ab68 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55a31f85ab50 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55a31f85ab10 <col:21> 'int' lvalue Var 0x55a31f8506e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55a31f85ab30 <col:41> 'int' 4
    |-CallExpr 0x55a31f85abf8 <line:842:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55a31f85abe0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a31f85abc0 <col:3> 'void ()' Function 0x55a31f7f7410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55a31f85ac70 <line:843:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55a31f85ac58 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a31f85ac18 <col:3> 'void (int)' Function 0x55a31f7f6ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55a31f85acb0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55a31f85ac98 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55a31f85ac38 <col:21> '_Bool' lvalue Var 0x55a31f851618 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55a31f85ad00 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55a31f85ace8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a31f85acc8 <col:3> 'void ()' Function 0x55a31f7f7350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55a31f85b010 <line:845:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55a31f85ad20 <col:3> 'int' lvalue Var 0x55a31f850c88 'b' 'int'
    | `-ConditionalOperator 0x55a31f85afb8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55a31f85ade0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55a31f85ad98 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55a31f85ad80 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55a31f85ad40 <col:7> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55a31f85adc8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55a31f85adb0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55a31f85ad60 <col:25> '_Bool' lvalue Var 0x55a31f850e18 'b$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55a31f85afa0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55a31f85ae00 <col:42> 'int' lvalue Var 0x55a31f851430 'b$w_buff0' 'int'
    |   `-ParenExpr 0x55a31f85af80 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55a31f85af50 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55a31f85aec0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55a31f85ae78 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55a31f85ae60 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55a31f85ae20 <col:55> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55a31f85aea8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55a31f85ae90 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55a31f85ae40 <col:73> '_Bool' lvalue Var 0x55a31f8510d8 'b$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55a31f85af20 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55a31f85aee0 <col:90> 'int' lvalue Var 0x55a31f851528 'b$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55a31f85af38 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55a31f85af00 <col:102> 'int' lvalue Var 0x55a31f850c88 'b' 'int'
    |-BinaryOperator 0x55a31f85b218 <line:846:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55a31f85b030 <col:3> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55a31f85b200 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a31f85b1d0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55a31f85b0f0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55a31f85b0a8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55a31f85b090 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55a31f85b050 <col:20> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55a31f85b0d8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55a31f85b0c0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55a31f85b070 <col:38> '_Bool' lvalue Var 0x55a31f850e18 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55a31f85b188 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55a31f85b140 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55a31f85b110 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55a31f85b1b8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55a31f85b1a0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55a31f85b168 <col:66> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55a31f85b500 <line:847:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55a31f85b238 <col:3> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55a31f85b4e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a31f85b4b8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55a31f85b3d8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55a31f85b2f8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55a31f85b2b0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55a31f85b298 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55a31f85b258 <col:20> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55a31f85b2e0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55a31f85b2c8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55a31f85b278 <col:38> '_Bool' lvalue Var 0x55a31f850e18 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55a31f85b3b8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55a31f85b370 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55a31f85b358 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55a31f85b318 <col:56> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55a31f85b3a0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55a31f85b388 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55a31f85b338 <col:74> '_Bool' lvalue Var 0x55a31f8510d8 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55a31f85b470 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55a31f85b428 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55a31f85b3f8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55a31f85b4a0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55a31f85b488 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55a31f85b450 <col:102> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55a31f85b708 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55a31f85b520 <col:3> '_Bool' lvalue Var 0x55a31f850e18 'b$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55a31f85b6f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a31f85b6c0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55a31f85b5e0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55a31f85b598 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55a31f85b580 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55a31f85b540 <col:20> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55a31f85b5c8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55a31f85b5b0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55a31f85b560 <col:38> '_Bool' lvalue Var 0x55a31f850e18 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55a31f85b678 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55a31f85b630 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55a31f85b600 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55a31f85b6a8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55a31f85b690 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55a31f85b658 <col:66> '_Bool' lvalue Var 0x55a31f850e18 'b$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55a31f85b9f0 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55a31f85b728 <col:3> '_Bool' lvalue Var 0x55a31f8510d8 'b$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55a31f85b9d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a31f85b9a8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55a31f85b8c8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55a31f85b7e8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55a31f85b7a0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55a31f85b788 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55a31f85b748 <col:20> '_Bool' lvalue Var 0x55a31f8514a8 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55a31f85b7d0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55a31f85b7b8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55a31f85b768 <col:38> '_Bool' lvalue Var 0x55a31f850e18 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55a31f85b8a8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55a31f85b860 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55a31f85b848 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55a31f85b808 <col:56> '_Bool' lvalue Var 0x55a31f8515a0 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55a31f85b890 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55a31f85b878 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55a31f85b828 <col:74> '_Bool' lvalue Var 0x55a31f8510d8 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55a31f85b960 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55a31f85b918 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55a31f85b8e8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55a31f85b990 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55a31f85b978 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55a31f85b940 <col:102> '_Bool' lvalue Var 0x55a31f8510d8 'b$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55a31f85ba48 <line:850:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55a31f85ba30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a31f85ba10 <col:3> 'void ()' Function 0x55a31f7f7410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55a31f85baa0 <line:851:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55a31f85ba88 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a31f85ba68 <col:3> 'void ()' Function 0x55a31f7f7350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55a31f85be08 <line:852:3, col:123> '_Bool' '='
    | |-DeclRefExpr 0x55a31f85bac0 <col:3> '_Bool' lvalue Var 0x55a31f851690 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55a31f85bdf0 <col:21, col:123> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55a31f85bdd8 <col:21, col:123> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55a31f85bdb8 <col:22, col:123> 'int'
    |       `-BinaryOperator 0x55a31f85bd98 <col:23, col:122> 'int' '&&'
    |         |-BinaryOperator 0x55a31f85bd00 <col:23, col:94> 'int' '&&'
    |         | |-BinaryOperator 0x55a31f85bc68 <col:23, col:66> 'int' '&&'
    |         | | |-BinaryOperator 0x55a31f85bbd0 <col:23, col:38> 'int' '&&'
    |         | | | |-BinaryOperator 0x55a31f85bb38 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x55a31f85bb20 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x55a31f85bae0 <col:23> 'int' lvalue Var 0x55a31f851790 'x' 'int'
    |         | | | | `-IntegerLiteral 0x55a31f85bb00 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x55a31f85bbb0 <col:33, col:38> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x55a31f85bb98 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x55a31f85bb58 <col:33> 'int' lvalue Var 0x55a31f8519d0 'z' 'int'
    |         | | |   `-IntegerLiteral 0x55a31f85bb78 <col:38> 'int' 2
    |         | | `-BinaryOperator 0x55a31f85bc48 <col:43, col:66> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55a31f85bc30 <col:43> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55a31f85bbf0 <col:43> 'int' lvalue Var 0x55a31f850808 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x55a31f85bc10 <col:66> 'int' 0
    |         | `-BinaryOperator 0x55a31f85bce0 <col:71, col:94> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55a31f85bcc8 <col:71> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55a31f85bc88 <col:71> 'int' lvalue Var 0x55a31f850928 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x55a31f85bca8 <col:94> 'int' 1
    |         `-BinaryOperator 0x55a31f85bd78 <col:99, col:122> 'int' '=='
    |           |-ImplicitCastExpr 0x55a31f85bd60 <col:99> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55a31f85bd20 <col:99> 'int' lvalue Var 0x55a31f850a48 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x55a31f85bd40 <col:122> 'int' 0
    |-CallExpr 0x55a31f85be60 <line:853:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55a31f85be48 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a31f85be28 <col:3> 'void ()' Function 0x55a31f7f7410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55a31f85bed8 <line:854:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55a31f85bec0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a31f85be80 <col:3> 'void (int)' Function 0x55a31f7f70d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55a31f85bf18 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55a31f85bf00 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55a31f85bea0 <col:21> '_Bool' lvalue Var 0x55a31f851690 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55a31f85bf50 <line:855:3, col:10>
      `-IntegerLiteral 0x55a31f85bf30 <col:10> 'int' 0
