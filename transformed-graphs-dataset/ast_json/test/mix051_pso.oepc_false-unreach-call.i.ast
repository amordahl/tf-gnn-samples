TranslationUnitDecl 0x562506d9ef88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x562506d9f848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x562506d9f520 '__int128'
|-TypedefDecl 0x562506d9f8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x562506d9f540 'unsigned __int128'
|-TypedefDecl 0x562506d9fbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x562506d9f990 'struct __NSConstantString_tag'
|   `-Record 0x562506d9f910 '__NSConstantString_tag'
|-TypedefDecl 0x562506d9fc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x562506d9fc20 'char *'
|   `-BuiltinType 0x562506d9f020 'char'
|-TypedefDecl 0x562506ddeb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x562506d9ff00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x562506d9fd40 'struct __va_list_tag'
|     `-Record 0x562506d9fcc0 '__va_list_tag'
|-FunctionDecl 0x562506ddeca0 <pthread-wmm/mix051_pso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x562506ddebd0 <col:31> col:34 'int'
|-FunctionDecl 0x562506ddee68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x562506ddef90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x562506ddf0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x562506ddf048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x562506ddf308 <col:40, col:99>
|   |-IfStmt 0x562506ddf2d8 <col:42, col:88>
|   | |-UnaryOperator 0x562506ddf1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x562506ddf1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x562506ddf180 <col:47> 'int' lvalue ParmVar 0x562506ddf048 'expression' 'int'
|   | `-CompoundStmt 0x562506ddf2c0 <col:59, col:88>
|   |   `-LabelStmt 0x562506ddf2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x562506ddf238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x562506ddf220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x562506ddf1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x562506ddef90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x562506ddf2f0 <col:89>
|   `-ReturnStmt 0x562506ddf2f8 <col:91>
|-FunctionDecl 0x562506ddf350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x562506ddf410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x562506ddf790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562506ddf4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x562506ddf548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x562506ddf5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x562506ddf648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x562506ddf850 <line:10:22>
|-FunctionDecl 0x562506e058a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562506ddf8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x562506ddf940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x562506ddf9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x562506ddfa40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x562506e05960 <line:13:22>
|-FunctionDecl 0x562506e05c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562506e059d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x562506e05a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x562506e05ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x562506e05cc8 <line:15:22>
|-TypedefDecl 0x562506e05d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x562506d9f0e0 'unsigned char'
|-TypedefDecl 0x562506e05da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x562506d9f100 'unsigned short'
|-TypedefDecl 0x562506e05e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x562506d9f120 'unsigned int'
|-TypedefDecl 0x562506e05e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x562506d9f140 'unsigned long'
|-TypedefDecl 0x562506e05ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x562506d9f040 'signed char'
|-TypedefDecl 0x562506e05f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x562506d9f0e0 'unsigned char'
|-TypedefDecl 0x562506e05fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x562506d9f060 'short'
|-TypedefDecl 0x562506e06048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x562506d9f100 'unsigned short'
|-TypedefDecl 0x562506e060b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x562506d9f080 'int'
|-TypedefDecl 0x562506e06128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x562506d9f120 'unsigned int'
|-TypedefDecl 0x562506e06198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x562506d9f0a0 'long'
|-TypedefDecl 0x562506e06208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x562506d9f140 'unsigned long'
|-TypedefDecl 0x562506e06278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x562506d9f0a0 'long'
|-TypedefDecl 0x562506e062e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x562506d9f140 'unsigned long'
|-TypedefDecl 0x562506e06358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x562506d9f140 'unsigned long'
|-TypedefDecl 0x562506e063c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x562506d9f120 'unsigned int'
|-TypedefDecl 0x562506e06438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x562506d9f120 'unsigned int'
|-TypedefDecl 0x562506e064a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x562506d9f140 'unsigned long'
|-TypedefDecl 0x562506e06518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x562506d9f140 'unsigned long'
|-TypedefDecl 0x562506e06588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x562506d9f120 'unsigned int'
|-TypedefDecl 0x562506e065f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x562506d9f140 'unsigned long'
|-TypedefDecl 0x562506e06668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x562506d9f0a0 'long'
|-TypedefDecl 0x562506e066d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x562506d9f0a0 'long'
|-TypedefDecl 0x562506e06748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x562506d9f080 'int'
|-RecordDecl 0x562506e067a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x562506e06918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x562506e069d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x562506e06970 'struct __fsid_t' sugar
|   `-RecordType 0x562506e06820 '__fsid_t'
|     `-Record 0x562506e067a0 ''
|-TypedefDecl 0x562506e06a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x562506d9f0a0 'long'
|-TypedefDecl 0x562506e06ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x562506d9f140 'unsigned long'
|-TypedefDecl 0x562506e06b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x562506d9f140 'unsigned long'
|-TypedefDecl 0x562506e06ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x562506d9f120 'unsigned int'
|-TypedefDecl 0x562506e06c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x562506d9f0a0 'long'
|-TypedefDecl 0x562506e06c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x562506d9f120 'unsigned int'
|-TypedefDecl 0x562506e06cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x562506d9f0a0 'long'
|-TypedefDecl 0x562506e06d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x562506d9f080 'int'
|-TypedefDecl 0x562506e06dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x562506d9f080 'int'
|-TypedefDecl 0x562506e06e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x562506d9f080 'int'
|-TypedefDecl 0x562506e06eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x562506d9f7a0 'void *'
|   `-BuiltinType 0x562506d9efe0 'void'
|-TypedefDecl 0x562506e06f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x562506d9f0a0 'long'
|-TypedefDecl 0x562506e06f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x562506d9f0a0 'long'
|-TypedefDecl 0x562506e07008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x562506d9f0a0 'long'
|-TypedefDecl 0x562506e07078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x562506d9f140 'unsigned long'
|-TypedefDecl 0x562506e070e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x562506d9f140 'unsigned long'
|-TypedefDecl 0x562506e07158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x562506d9f140 'unsigned long'
|-TypedefDecl 0x562506e071c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x562506d9f140 'unsigned long'
|-TypedefDecl 0x562506e07238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x562506d9f0a0 'long'
|-TypedefDecl 0x562506e072a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x562506d9f0a0 'long'
|-TypedefDecl 0x562506e07318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x562506d9f0a0 'long'
|-TypedefDecl 0x562506e07388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x562506d9f140 'unsigned long'
|-TypedefDecl 0x562506e07418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x562506e073e0 '__off64_t' sugar
|   |-Typedef 0x562506e066d8 '__off64_t'
|   `-BuiltinType 0x562506d9f0a0 'long'
|-TypedefDecl 0x562506e07510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x562506e074d0 '__quad_t *'
|   `-TypedefType 0x562506e07470 '__quad_t' sugar
|     |-Typedef 0x562506e06278 '__quad_t'
|     `-BuiltinType 0x562506d9f0a0 'long'
|-TypedefDecl 0x562506e07580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x562506d9fc20 'char *'
|   `-BuiltinType 0x562506d9f020 'char'
|-TypedefDecl 0x562506e075f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x562506d9f0a0 'long'
|-TypedefDecl 0x562506e07660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x562506d9f120 'unsigned int'
|-FunctionDecl 0x562506e077a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x562506e076d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x562506e07ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x562506e07ad8 <line:72:3, col:34>
|     `-CallExpr 0x562506e07a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x562506e07a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x562506e07a10 <col:10> '<builtin fn type>' Function 0x562506e07880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x562506e07ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x562506e07a30 <col:29> 'unsigned int' lvalue ParmVar 0x562506e076d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x562506e07880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x562506e07920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x562506e07990 <col:10> Implicit
| `-ConstAttr 0x562506e079e8 <col:10> Implicit
|-FunctionDecl 0x562506e07c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x562506e07b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x562506e07f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x562506e07f48 <line:77:3, col:34>
|     `-CallExpr 0x562506e07f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x562506e07ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x562506e07e78 <col:10> '<builtin fn type>' Function 0x562506e07ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x562506e07f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x562506e07e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x562506e07b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x562506e07ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x562506e07d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x562506e07df8 <col:10> Implicit
| `-ConstAttr 0x562506e07e50 <col:10> Implicit
|-TypedefDecl 0x562506e07f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x562506d9f140 'unsigned long'
|-TypedefDecl 0x562506e08018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x562506e07fe0 '__time_t' sugar
|   |-Typedef 0x562506e06c18 '__time_t'
|   `-BuiltinType 0x562506d9f0a0 'long'
|-RecordDecl 0x562506e08070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x562506e08128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x562506e081b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x562506e08248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x562506e08210 '__pid_t' sugar
|   |-Typedef 0x562506e06748 '__pid_t'
|   `-BuiltinType 0x562506d9f080 'int'
|-RecordDecl 0x562506e082a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x562506e08360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x562506e083b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x562506e08470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x562506e084d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x562506d9f140 'unsigned long'
|-RecordDecl 0x562506e08530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x562506e087c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x562506e0a8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x562506e08810 'struct cpu_set_t' sugar
|   `-RecordType 0x562506e085b0 'cpu_set_t'
|     `-Record 0x562506e08530 ''
|-FunctionDecl 0x562506e0ab88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x562506e0a958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562506e0aa60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x562506e0ac38 <line:107:19>
|-FunctionDecl 0x562506e0ae10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x562506e0aca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x562506e0aeb8 <col:69>
|-FunctionDecl 0x562506e0b030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x562506e0af20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x562506e0b0d8 <col:64>
|-FunctionDecl 0x562506e0b398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x562506e0b140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562506e0b278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x562506e0b448 <line:113:22>
|-FunctionDecl 0x562506e0b6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x562506e0b4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562506e0b5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x562506e0b778 <col:88>
|-FunctionDecl 0x562506e0ba98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x562506e0b7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562506e0b8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x562506e0b950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x562506e0bb50 <col:62>
|-FunctionDecl 0x562506e0bcc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x562506e0bbb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x562506e0bd70 <col:63>
|-FunctionDecl 0x562506e0be98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x562506e0bf38 <col:47>
|-FunctionDecl 0x562506e0c040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x562506e0bfa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x562506e0c0e8 <col:69>
|-FunctionDecl 0x562506e0c1f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x562506e0c158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x562506e0c298 <col:69>
|-FunctionDecl 0x562506e0c558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562506e0c300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562506e0c438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x562506e0c608 <col:88>
|-TypedefDecl 0x562506e0c698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x562506e0c660 '__clock_t' sugar
|   |-Typedef 0x562506e06a58 '__clock_t'
|   `-BuiltinType 0x562506d9f0a0 'long'
|-TypedefDecl 0x562506e0c728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x562506e0c6f0 '__clockid_t' sugar
|   |-Typedef 0x562506e06e48 '__clockid_t'
|   `-BuiltinType 0x562506d9f080 'int'
|-TypedefDecl 0x562506e0c7b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x562506e0c780 '__timer_t' sugar
|   |-Typedef 0x562506e06eb8 '__timer_t'
|   `-PointerType 0x562506d9f7a0 'void *'
|     `-BuiltinType 0x562506d9efe0 'void'
|-RecordDecl 0x562506e0c810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x562506e0c8e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x562506e0c950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x562506e0c9b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x562506e0ca20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x562506e0ca88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x562506e0caf0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x562506e0cb58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x562506e0cbc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x562506e0cc28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x562506e0cc90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x562506e0ccf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x562506e0cd48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x562506e0ce18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x562506e0ce88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x562506e0cf30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x562506e0d100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x562506e0d1a0 <col:45>
|-FunctionDecl 0x562506e0d380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x562506e0d270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x562506e0d428 <col:54>
|-FunctionDecl 0x562506e0d628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x562506e0d490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x562506e0d508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x562506e0d6d8 <line:157:22>
| `-ConstAttr 0x562506e0d730 <col:63>
|-FunctionDecl 0x562506e0e560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562506e0d828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x562506e0e608 <col:56>
|-FunctionDecl 0x562506e0e9b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x562506e0e678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x562506e0e6f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562506e0e770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x562506e0e868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x562506e0ea70 <col:54>
|-RecordDecl 0x562506e0eac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x562506e0eb78 parent 0x562506d9ef88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x562506e0edd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x562506e0ee78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x562506e0eee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x562506e0ef48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x562506e0f038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x562506e0f158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x562506e0f100 'struct __locale_struct *'
|   `-ElaboratedType 0x562506e0f090 'struct __locale_struct' sugar
|     `-RecordType 0x562506e0eb50 'struct __locale_struct'
|       `-Record 0x562506e0eac8 '__locale_struct'
|-TypedefDecl 0x562506e0f208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x562506e0f1d0 '__locale_t' sugar
|   |-Typedef 0x562506e0f158 '__locale_t'
|   `-PointerType 0x562506e0f100 'struct __locale_struct *'
|     `-ElaboratedType 0x562506e0f090 'struct __locale_struct' sugar
|       `-RecordType 0x562506e0eb50 'struct __locale_struct'
|         `-Record 0x562506e0eac8 '__locale_struct'
|-FunctionDecl 0x562506e0f610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x562506e0f278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x562506e0f2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562506e0f370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x562506e0f400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x562506e0f478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x562506e0f6d8 <col:40>
|-FunctionDecl 0x562506e0f8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x562506e0f7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x562506e0f970 <col:66>
|-FunctionDecl 0x562506e0fa80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x562506e0f9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x562506e0fb28 <col:69>
|-FunctionDecl 0x562506e0fd58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x562506e0fb90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562506e0fc20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x562506e0fe08 <col:52>
|-FunctionDecl 0x562506e0ffb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x562506e0fe70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562506e0ff00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x562506e10060 <col:55>
|-FunctionDecl 0x562506e101f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x562506e100e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x562506e102a0 <col:62>
|-FunctionDecl 0x562506e10418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x562506e10308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x562506e104c0 <col:60>
|-FunctionDecl 0x562506e10718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x562506e10578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x562506e105f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x562506e107c8 <col:44>
|-FunctionDecl 0x562506e109d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x562506e10830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562506e108b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x562506e10a88 <col:49>
|-VarDecl 0x562506e10b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x562506e10c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x562506e10c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x562506e10d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x562506e10e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x562506e10f20 <col:42>
|-VarDecl 0x562506e10f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x562506e11010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x562506e11198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x562506e11088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x562506e11240 <col:57>
|-FunctionDecl 0x562506e11350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562506e112c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x562506e113f8 <col:56>
|-FunctionDecl 0x562506e12540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562506e11478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x562506e125e8 <col:59>
|-FunctionDecl 0x562506e126f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x562506e12658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x562506e12798 <col:48>
| `-ConstAttr 0x562506e127f0 <col:89>
|-FunctionDecl 0x562506e12a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x562506e128a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x562506e12938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x562506e12cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562506e12b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562506e12bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x562506e12d68 <col:88>
|-FunctionDecl 0x562506e12f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562506e12dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562506e12e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x562506e12fb0 <col:88>
|-FunctionDecl 0x562506e131c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x562506e13018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562506e130a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x562506e13278 <line:208:22>
|-FunctionDecl 0x562506e135e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x562506e132e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562506e13360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x562506e133f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x562506e13480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x562506e138e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x562506e136e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x562506e137c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x562506e13998 <col:85>
|-FunctionDecl 0x562506e13d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x562506e13a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562506e13b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x562506e13c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x562506e13e40 <col:52>
|-FunctionDecl 0x562506e13fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x562506e13ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x562506e14060 <col:61>
|-FunctionDecl 0x562506e14560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x562506e140c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x562506e14148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x562506e14278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x562506e14368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x562506e14620 <col:62>
|-FunctionDecl 0x562506e14838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x562506e14688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x562506e14718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x562506e148e8 <line:221:22>
|-FunctionDecl 0x562506e149e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x562506e14950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x562506e14a90 <col:65>
|-TypedefDecl 0x562506e14b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x562506d9f140 'unsigned long'
|-RecordDecl 0x562506e14b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x562506e14ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x562506e14d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562506e14db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x562506e14d60 'union pthread_attr_t' sugar
|   `-RecordType 0x562506e14be0 'union pthread_attr_t'
|     `-Record 0x562506e14b58 'pthread_attr_t'
|-RecordDecl 0x562506e14e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x562506e14f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x562506e15000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x562506e150b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x562506e15050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x562506e14e90 'struct __pthread_internal_list'
|     `-Record 0x562506e14e10 '__pthread_internal_list'
|-RecordDecl 0x562506e15120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x562506e151c8 parent 0x562506d9ef88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x562506e152a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562506e15308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x562506e15370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x562506e153d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x562506e15440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x562506e154a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x562506e19580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x562506e19630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x562506e19720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x562506e19788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562506e19910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x562506e198b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x562506e151a0 'pthread_mutex_t'
|     `-Record 0x562506e15120 ''
|-RecordDecl 0x562506e19980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x562506e19ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562506e19b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562506e19be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x562506e19b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x562506e19a00 'pthread_mutexattr_t'
|     `-Record 0x562506e19980 ''
|-RecordDecl 0x562506e19c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x562506e19cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x562506e19dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562506e19e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x562506e19e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x562506e19ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x562506e19f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x562506e19fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x562506e1a030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x562506e1a098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x562506e1a150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix051_pso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix051_pso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x562506e1a240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x562506e1a2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x562506e1a3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x562506e1a380 'union pthread_cond_t' sugar
|   `-RecordType 0x562506e19cd0 'pthread_cond_t'
|     `-Record 0x562506e19c50 ''
|-RecordDecl 0x562506e1a450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x562506e1a590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562506e1a5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562506e1a6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x562506e1a650 'union pthread_condattr_t' sugar
|   `-RecordType 0x562506e1a4d0 'pthread_condattr_t'
|     `-Record 0x562506e1a450 ''
|-TypedefDecl 0x562506e1a738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x562506d9f120 'unsigned int'
|-TypedefDecl 0x562506e1a7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x562506d9f080 'int'
|-RecordDecl 0x562506e1a800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x562506e1a8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x562506e1a970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562506e1a9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x562506e1aa40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x562506e1aaa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x562506e1ab10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x562506e1ab78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x562506e1abe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x562506e1ac48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x562506e1acb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x562506e1ad18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x562506e1ad80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x562506e1ae30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix051_pso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix051_pso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x562506e1aed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x562506e1af40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562506e1b090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x562506e1b030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x562506e1a880 'pthread_rwlock_t'
|     `-Record 0x562506e1a800 ''
|-RecordDecl 0x562506e1b100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x562506e1b240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x562506e1b2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562506e1b360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x562506e1b300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x562506e1b180 'pthread_rwlockattr_t'
|     `-Record 0x562506e1b100 ''
|-TypedefDecl 0x562506e1b3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x562506d9f084 'volatile int' volatile
|   `-BuiltinType 0x562506d9f080 'int'
|-RecordDecl 0x562506e1b440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x562506e1d5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x562506e1d618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562506e1d6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x562506e1d670 'union pthread_barrier_t' sugar
|   `-RecordType 0x562506e1b4c0 'pthread_barrier_t'
|     `-Record 0x562506e1b440 ''
|-RecordDecl 0x562506e1d740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x562506e1d840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562506e1d8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562506e1d960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x562506e1d900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x562506e1d7c0 'pthread_barrierattr_t'
|     `-Record 0x562506e1d740 ''
|-TypedefDecl 0x562506e1da78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x562506e1da10 'long [8]' 8 
|   `-BuiltinType 0x562506d9f0a0 'long'
|-EnumDecl 0x562506e1dad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x562506e1db98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x562506e1dbe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x562506e1dc38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x562506e1dd08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x562506e1dd58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x562506e1dda8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x562506e1ddf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x562506e1de80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x562506e1de68 <col:26> 'int'
| |   `-DeclRefExpr 0x562506e1de48 <col:26> 'int' EnumConstant 0x562506e1dd08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x562506e1df08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x562506e1def0 <col:29> 'int'
| |   `-DeclRefExpr 0x562506e1ded0 <col:29> 'int' EnumConstant 0x562506e1dd58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x562506e1df90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x562506e1df78 <col:30> 'int'
| |   `-DeclRefExpr 0x562506e1df58 <col:30> 'int' EnumConstant 0x562506e1dda8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x562506e1e018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x562506e1e000 <col:27> 'int'
|     `-DeclRefExpr 0x562506e1dfe0 <col:27> 'int' EnumConstant 0x562506e1de80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x562506e1e068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x562506e1e138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x562506e1e1c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x562506e1e1a8 <col:30> 'int'
| |   `-DeclRefExpr 0x562506e1e188 <col:30> 'int' EnumConstant 0x562506e1e138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x562506e1e210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x562506e1e298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x562506e1e280 <col:29> 'int'
|     `-DeclRefExpr 0x562506e1e260 <col:29> 'int' EnumConstant 0x562506e1e210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x562506e1e2e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x562506e1e3b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x562506e1e408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x562506e1e458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x562506e1e4a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x562506e1e5c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x562506e1e610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x562506e1e660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x562506e1e6e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x562506e1e6d0 <col:31> 'int'
|     `-DeclRefExpr 0x562506e1e6b0 <col:31> 'int' EnumConstant 0x562506e1e5c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x562506e1e738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x562506e1e808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x562506e1e858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x562506e1e8a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x562506e1e978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x562506e1e9c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x562506e1ea18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x562506e1eae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x562506e1eb38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x562506e1eb88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x562506e1edc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x562506e1ee30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x562506e1ee98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x562506e1efb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x562506e1f008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x562506e1f0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x562506e1f128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x562506e1f178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x562506e1f248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x562506e1f298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x562506e1f8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x562506e1f390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x562506e1f4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562506e1f6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x562506e1f760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x562506e1f9b8 <col:47>
| |-NonNullAttr 0x562506e1fa10 <col:77, col:94> 1 3
| `-CallbackAttr 0x562506e1fa48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x562506e1fb70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x562506e1faa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x562506e1fdc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x562506e1fc28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x562506e1fca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x562506e1ff98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x562506e1fe88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x562506e20040 <col:60>
|-FunctionDecl 0x562506e20190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x562506e20230 <col:54>
| `-ConstAttr 0x562506e20288 <col:95>
|-FunctionDecl 0x562506e20458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x562506e202c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562506e20338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x562506e20508 <line:394:19>
| `-ConstAttr 0x562506e20560 <col:60>
|-FunctionDecl 0x562506e20f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x562506e20e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562506e21010 <col:71>
| `-NonNullAttr 0x562506e21068 <col:112, col:126> 1
|-FunctionDecl 0x562506e21170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x562506e210b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562506e21218 <line:397:22>
| `-NonNullAttr 0x562506e21270 <col:63, col:77> 1
|-FunctionDecl 0x562506e21498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x562506e212b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x562506e21338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x562506e21548 <line:400:22>
| `-NonNullAttr 0x562506e215a0 <col:63, col:80> 1 2
|-FunctionDecl 0x562506e217a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562506e215e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562506e21668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x562506e21858 <line:403:22>
| `-NonNullAttr 0x562506e218b0 <col:63, col:77> 1
|-FunctionDecl 0x562506e21b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x562506e218f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x562506e219a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x562506e21bb8 <line:406:22>
| `-NonNullAttr 0x562506e21c10 <col:63, col:80> 1 2
|-FunctionDecl 0x562506e22e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x562506e21c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562506e21cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562506e22ef8 <line:409:22>
| `-NonNullAttr 0x562506e22f50 <col:63, col:77> 1
|-FunctionDecl 0x562506e23188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562506e22f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562506e23028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x562506e23238 <line:412:22>
| `-NonNullAttr 0x562506e23290 <col:63, col:80> 1 2
|-FunctionDecl 0x562506e234c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562506e232d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x562506e23368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x562506e23578 <col:37>
| `-NonNullAttr 0x562506e235d0 <col:78, col:95> 1 2
|-FunctionDecl 0x562506e237b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562506e23618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562506e23698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x562506e23868 <line:418:22>
| `-NonNullAttr 0x562506e238c0 <col:63, col:80> 1 2
|-FunctionDecl 0x562506e23a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562506e23908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562506e23988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x562506e23af8 <line:420:22>
| `-NonNullAttr 0x562506e23b50 <col:63, col:77> 1
|-FunctionDecl 0x562506e23cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562506e23b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562506e23c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x562506e23da8 <line:423:22>
| `-NonNullAttr 0x562506e24e30 <col:63, col:80> 1 2
|-FunctionDecl 0x562506e24fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562506e24e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562506e24ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x562506e25068 <line:426:22>
| `-NonNullAttr 0x562506e250c0 <col:63, col:77> 1
|-FunctionDecl 0x562506e25268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562506e25108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562506e25188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x562506e25318 <line:429:22>
| `-NonNullAttr 0x562506e25370 <col:63, col:80> 1 2
|-FunctionDecl 0x562506e254f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562506e253b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562506e25438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x562506e255a8 <line:431:22>
| `-NonNullAttr 0x562506e25600 <col:63, col:77> 1
|-FunctionDecl 0x562506e25828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x562506e25648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562506e256c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x562506e258d8 <line:434:22>
| |-NonNullAttr 0x562506e25930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x562506e25968 <col:100> "" ""
|-FunctionDecl 0x562506e25b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x562506e259b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562506e25a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x562506e25c28 <line:437:22>
| |-NonNullAttr 0x562506e25c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x562506e25cb8 <col:97> "" ""
|-FunctionDecl 0x562506e25eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x562506e25d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562506e25d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x562506e25f68 <line:440:22>
| `-NonNullAttr 0x562506e25fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x562506e26140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x562506e26008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562506e26080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562506e261f0 <line:443:22>
| `-NonNullAttr 0x562506e26248 <col:63, col:77> 1
|-FunctionDecl 0x562506e26538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x562506e26298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562506e26318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x562506e26390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x562506e265f0 <line:447:22>
| `-NonNullAttr 0x562506e26648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x562506e268f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x562506e266a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562506e26720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x562506e26798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562506e269b0 <col:43>
| `-NonNullAttr 0x562506e26a08 <col:84, col:98> 1
|-FunctionDecl 0x562506e26cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x562506e26a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562506e26ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x562506e26b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x562506e26d80 <line:452:22>
| `-NonNullAttr 0x562506e26dd8 <col:63, col:77> 3
|-FunctionDecl 0x562506e270e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562506e26e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562506e26ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x562506e26f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x562506e271a0 <line:456:22>
| `-NonNullAttr 0x562506e271f8 <col:63, col:80> 2 3
|-FunctionDecl 0x562506e273e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x562506e27248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562506e272c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x562506e27498 <line:458:22>
|-FunctionDecl 0x562506e27868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x562506e27560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x562506e27700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x562506e27918 <col:52, col:69> 1 2
|-FunctionDecl 0x562506e27ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x562506e279a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x562506e27a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x562506e27ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x562506e27b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x562506e27c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x562506e27e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x562506e27d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x562506e27fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x562506e28040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x562506e280e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x562506e281d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x562506e28240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x562506e28410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix051_pso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x562506e28508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x562506e285c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x562506e28560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x562506e280c0 '__pthread_unwind_buf_t'
| |   `-Record 0x562506e28040 ''
| `-AlignedAttr 0x562506e28618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x562506e28690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x562506e287f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x562506e28858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x562506e288c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x562506e28928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x562506e28b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x562506e28a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x562506e28c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x562506e28be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x562506e28e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562506e28d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x562506e28f18 <line:487:22>
|-RecordDecl 0x562506e28f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x562506e29288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x562506e290e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x562506e29168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x562506e29338 <col:86>
| `-ReturnsTwiceAttr 0x562506e29390 <col:12> Implicit
|-FunctionDecl 0x562506e296b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562506e29460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x562506e29570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x562506e29768 <line:493:22>
| `-NonNullAttr 0x562506e297c0 <col:63, col:77> 1
|-FunctionDecl 0x562506e29938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562506e29808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562506e299e0 <line:495:22>
| `-NonNullAttr 0x562506e29a38 <col:63, col:77> 1
|-FunctionDecl 0x562506e29b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562506e29a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562506e29be8 <line:497:22>
| `-NonNullAttr 0x562506e29c40 <col:52, col:66> 1
|-FunctionDecl 0x562506e29d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562506e29c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562506e29de8 <line:499:22>
| `-NonNullAttr 0x562506e29e40 <col:52, col:66> 1
|-FunctionDecl 0x562506e2a088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562506e29e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562506e29f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562506e2a138 <col:36>
| `-NonNullAttr 0x562506e2a190 <col:66, col:83> 1 2
|-FunctionDecl 0x562506e2a290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562506e2a1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562506e2a338 <line:504:22>
| `-NonNullAttr 0x562506e2a390 <col:52, col:66> 1
|-FunctionDecl 0x562506e2a628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562506e2a440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562506e2a4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x562506e2a6d8 <line:508:22>
| `-NonNullAttr 0x562506e2a730 <col:63, col:80> 1 2
|-FunctionDecl 0x562506e2a9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x562506e2a778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562506e2a7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x562506e2a878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x562506e2aab0 <line:512:22>
| `-NonNullAttr 0x562506e2ab08 <col:63, col:80> 1 3
|-FunctionDecl 0x562506e2ac10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562506e2ab58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562506e2acb8 <line:514:22>
| `-NonNullAttr 0x562506e2ad10 <col:63, col:77> 1
|-FunctionDecl 0x562506e2af38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562506e2adc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x562506e2afe0 <line:516:22>
| `-NonNullAttr 0x562506e2b038 <col:63, col:77> 1
|-FunctionDecl 0x562506e2b140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562506e2b088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x562506e2b1e8 <line:518:22>
| `-NonNullAttr 0x562506e2b240 <col:63, col:77> 1
|-FunctionDecl 0x562506e2b468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562506e2b288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562506e2b308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x562506e2b518 <line:522:22>
| `-NonNullAttr 0x562506e2b570 <col:63, col:80> 1 2
|-FunctionDecl 0x562506e2b778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562506e2b5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562506e2b638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x562506e2b828 <line:525:22>
| `-NonNullAttr 0x562506e2b880 <col:63, col:77> 1
|-FunctionDecl 0x562506e2ba28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562506e2b8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562506e2b948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x562506e2bad8 <line:528:22>
| `-NonNullAttr 0x562506e2bb30 <col:63, col:80> 1 2
|-FunctionDecl 0x562506e2bcb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562506e2bb78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562506e2bbf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x562506e2bd68 <line:530:22>
| `-NonNullAttr 0x562506e2bdc0 <col:63, col:77> 1
|-FunctionDecl 0x562506e2cf90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562506e2be08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562506e2ceb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x562506e2d040 <line:534:22>
| `-NonNullAttr 0x562506e2d098 <col:63, col:80> 1 2
|-FunctionDecl 0x562506e2d228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562506e2d0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562506e2d168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x562506e2d2d8 <line:537:22>
| `-NonNullAttr 0x562506e2d330 <col:63, col:77> 1
|-FunctionDecl 0x562506e2d4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562506e2d378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562506e2d3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x562506e2d588 <line:541:22>
| `-NonNullAttr 0x562506e2d5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x562506e2d768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562506e2d628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562506e2d6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x562506e2d818 <line:544:22>
| `-NonNullAttr 0x562506e2d870 <col:63, col:77> 1
|-FunctionDecl 0x562506e2da58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x562506e2d8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x562506e2d938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x562506e2db08 <line:547:22>
| `-NonNullAttr 0x562506e2db60 <col:63, col:80> 1 2
|-FunctionDecl 0x562506e2dce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562506e2dba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562506e2dc28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x562506e2dd98 <line:550:22>
| `-NonNullAttr 0x562506e2ddf0 <col:63, col:77> 1
|-FunctionDecl 0x562506e2f168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x562506e2ef10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562506e2f020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x562506e2f218 <col:29>
| `-NonNullAttr 0x562506e2f270 <col:70, col:84> 1
|-FunctionDecl 0x562506e2f3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562506e2f2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562506e2f490 <line:555:22>
| `-NonNullAttr 0x562506e2f4e8 <col:63, col:77> 1
|-FunctionDecl 0x562506e2f5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562506e2f538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562506e2f698 <line:557:22>
| `-NonNullAttr 0x562506e2f6f0 <col:52, col:66> 1
|-FunctionDecl 0x562506e2f7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562506e2f738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562506e2f898 <line:559:19>
| `-NonNullAttr 0x562506e2f8f0 <col:49, col:63> 1
|-FunctionDecl 0x562506e2fb28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562506e2f938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562506e2f9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562506e2fbd8 <col:39>
| `-NonNullAttr 0x562506e2fc30 <col:69, col:86> 1 2
|-FunctionDecl 0x562506e2fd30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562506e2fc78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562506e2fdd8 <line:564:22>
| `-NonNullAttr 0x562506e2fe30 <col:52, col:66> 1
|-FunctionDecl 0x562506e2ff98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562506e2fee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562506e30040 <line:566:22>
| `-NonNullAttr 0x562506e30098 <col:52, col:66> 1
|-FunctionDecl 0x562506e30258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562506e300e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562506e30178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562506e30308 <col:39>
| `-NonNullAttr 0x562506e30360 <col:69, col:86> 1 2
|-FunctionDecl 0x562506e30460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562506e303a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562506e30508 <line:571:22>
| `-NonNullAttr 0x562506e30560 <col:52, col:66> 1
|-FunctionDecl 0x562506e30748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x562506e30610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x562506e307f0 <line:573:22>
| `-NonNullAttr 0x562506e30848 <col:63, col:77> 1
|-FunctionDecl 0x562506e30950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x562506e30898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x562506e309f8 <line:575:22>
| `-NonNullAttr 0x562506e30a50 <col:63, col:77> 1
|-FunctionDecl 0x562506e30c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562506e30a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x562506e30b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x562506e30d28 <line:579:22>
| `-NonNullAttr 0x562506e30d80 <col:63, col:80> 1 2
|-FunctionDecl 0x562506e30fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562506e30dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562506e30e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x562506e31058 <line:582:22>
| `-NonNullAttr 0x562506e310b0 <col:63, col:77> 1
|-FunctionDecl 0x562506e31258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562506e310f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x562506e31178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x562506e31308 <line:586:22>
| `-NonNullAttr 0x562506e31360 <col:63, col:80> 1 2
|-FunctionDecl 0x562506e314e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562506e313a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562506e31428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x562506e31598 <col:36>
| `-NonNullAttr 0x562506e315f0 <col:77, col:91> 1
|-FunctionDecl 0x562506e31928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x562506e316d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562506e317e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x562506e319d8 <line:591:22>
| `-NonNullAttr 0x562506e31a30 <col:63, col:77> 1
|-FunctionDecl 0x562506e31ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562506e31a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562506e31c50 <line:593:22>
| `-NonNullAttr 0x562506e31ca8 <col:63, col:77> 1
|-FunctionDecl 0x562506e31db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562506e31cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562506e31e58 <line:595:22>
| `-NonNullAttr 0x562506e31eb0 <col:52, col:66> 1
|-FunctionDecl 0x562506e31fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562506e31f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562506e32070 <line:597:22>
| `-NonNullAttr 0x562506e320c8 <col:52, col:66> 1
|-FunctionDecl 0x562506e322f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x562506e32118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562506e32190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x562506e323a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x562506e326d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562506e32428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562506e324a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562506e32530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x562506e32790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x562506e329a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562506e32870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x562506e32a50 <line:606:22>
| `-NonNullAttr 0x562506e32aa8 <col:63, col:77> 1
|-FunctionDecl 0x562506e32bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562506e32af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x562506e32c58 <line:608:22>
| `-NonNullAttr 0x562506e32cb0 <col:63, col:77> 1
|-FunctionDecl 0x562506e32f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562506e32cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562506e32d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x562506e32fc0 <line:612:22>
| `-NonNullAttr 0x562506e33018 <col:63, col:80> 1 2
|-FunctionDecl 0x562506e33228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x562506e33068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x562506e330e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x562506e332d8 <col:37>
| `-NonNullAttr 0x562506e33330 <col:78, col:92> 1
|-FunctionDecl 0x562506e33548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x562506e33378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562506e33420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x562506e335f8 <line:618:22>
| `-NonNullAttr 0x562506e33650 <col:63, col:80> 1 2
|-FunctionDecl 0x562506e33818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x562506e33698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x562506e33710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x562506e338c8 <line:621:22>
| `-NonNullAttr 0x562506e33920 <col:63, col:77> 1
|-FunctionDecl 0x562506e33bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x562506e33a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x562506e33a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x562506e33c78 <line:623:22>
| `-NonNullAttr 0x562506e33cd0 <col:63, col:77> 1
|-FunctionDecl 0x562506e33e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562506e33d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562506e33f20 <line:625:22>
| `-NonNullAttr 0x562506e33f78 <col:63, col:77> 1
|-FunctionDecl 0x562506e34080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562506e33fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562506e34128 <line:627:22>
| `-NonNullAttr 0x562506e34180 <col:52, col:66> 1
|-FunctionDecl 0x562506e34280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562506e341c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562506e34328 <line:629:22>
| `-NonNullAttr 0x562506e34380 <col:52, col:66> 1
|-FunctionDecl 0x562506e34480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562506e343c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562506e34528 <line:631:22>
| `-NonNullAttr 0x562506e34580 <col:52, col:66> 1
|-FunctionDecl 0x562506e34958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x562506e34660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x562506e34770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x562506e347f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x562506e34a10 <line:635:22>
| `-NonNullAttr 0x562506e34a68 <col:63, col:77> 1
|-FunctionDecl 0x562506e34be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x562506e34ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562506e34c90 <line:637:22>
| `-NonNullAttr 0x562506e34ce8 <col:63, col:77> 1
|-FunctionDecl 0x562506e34df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x562506e34d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562506e34e98 <line:639:22>
| `-NonNullAttr 0x562506e34ef0 <col:52, col:66> 1
|-FunctionDecl 0x562506e350e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x562506e34fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x562506e35190 <line:641:22>
| `-NonNullAttr 0x562506e351e8 <col:63, col:77> 1
|-FunctionDecl 0x562506e352f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x562506e35238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x562506e35398 <line:643:22>
| `-NonNullAttr 0x562506e353f0 <col:63, col:77> 1
|-FunctionDecl 0x562506e35618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562506e35438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x562506e354b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x562506e356c8 <line:647:22>
| `-NonNullAttr 0x562506e35720 <col:63, col:80> 1 2
|-FunctionDecl 0x562506e35928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x562506e35768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x562506e357e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x562506e359d8 <line:650:22>
| `-NonNullAttr 0x562506e35a30 <col:63, col:77> 1
|-FunctionDecl 0x562506e35d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x562506e35b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x562506e35c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x562506e35e28 <line:653:22>
| `-NonNullAttr 0x562506e35e80 <col:63, col:77> 1
|-FunctionDecl 0x562506e35fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x562506e35ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x562506e36090 <col:69>
|-FunctionDecl 0x562506e36208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x562506e360f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x562506e362b0 <col:72>
|-FunctionDecl 0x562506e364e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x562506e36318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x562506e363c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x562506e36598 <col:44>
|-FunctionDecl 0x562506e367b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x562506e36600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562506e36678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x562506e36868 <line:660:22>
| `-NonNullAttr 0x562506e368c0 <col:63, col:77> 2
|-FunctionDecl 0x562506e36d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x562506e369a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x562506e36ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x562506e36bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x562506e36dc0 <col:47>
|-FunctionDecl 0x562506e37f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x562506e36e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562506e380b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x562506e38020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562506e38210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x562506e38178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562506e38368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x562506e382d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562506e38430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x562506e384f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x562506e385b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x562506e38668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x562506e386e8 prev 0x562506e38668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x562506e38750 <col:24> 'int' 0
|-VarDecl 0x562506e38788 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x562506e38808 prev 0x562506e38788 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x562506e38870 <col:27> 'int' 0
|-VarDecl 0x562506e388a8 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x562506e38928 prev 0x562506e388a8 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x562506e38990 <col:27> 'int' 0
|-VarDecl 0x562506e389c8 <line:678:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x562506e38a48 prev 0x562506e389c8 <line:679:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x562506e38ab0 <col:27> 'int' 0
|-VarDecl 0x562506e38ae8 <line:680:1, col:5> col:5 used a 'int'
|-VarDecl 0x562506e38b68 prev 0x562506e38ae8 <line:681:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x562506e38bd0 <col:9> 'int' 0
|-VarDecl 0x562506e38c00 <line:682:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x562506e38c80 <line:683:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x562506e38cf8 <line:684:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x562506e38d70 <line:685:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x562506e38de8 <line:686:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x562506e38e60 <line:687:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x562506e38ed8 <line:688:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x562506e38f70 <line:689:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x562506e38fe8 <line:690:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x562506e39060 <line:691:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x562506e390d8 <line:692:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x562506e39150 <line:693:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x562506e391c8 <line:694:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x562506e39248 <line:695:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x562506e392c8 <line:696:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x562506e39340 <line:697:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x562506e393c0 <line:698:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x562506e39438 <line:699:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x562506e394b0 <line:700:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x562506e39528 <line:701:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x562506e395a8 <line:702:1, col:5> col:5 used x 'int'
|-VarDecl 0x562506e39628 prev 0x562506e395a8 <line:703:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x562506e39690 <col:9> 'int' 0
|-VarDecl 0x562506e396c8 <line:704:1, col:5> col:5 used y 'int'
|-VarDecl 0x562506e39748 prev 0x562506e396c8 <line:705:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x562506e397b0 <col:9> 'int' 0
|-VarDecl 0x562506e397e8 <line:706:1, col:5> col:5 used z 'int'
|-VarDecl 0x562506e39868 prev 0x562506e397e8 <line:707:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x562506e398d0 <col:9> 'int' 0
|-VarDecl 0x562506e39900 <line:708:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x562506e39978 <line:709:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x562506e39a90 prev 0x562506e37f60 <line:710:1, line:739:1> line:710:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x562506e399f8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562506e3b358 <line:711:1, line:739:1>
|   |-CallExpr 0x562506e39ba8 <line:712:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562506e39b90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e39b38 <col:3> 'void ()' Function 0x562506ddf350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562506e39c20 <line:713:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562506e39bc8 <col:3> 'int' lvalue Var 0x562506e393c0 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x562506e39c08 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562506e39be8 <col:15> 'int' lvalue Var 0x562506e392c8 'a$w_buff0' 'int'
|   |-BinaryOperator 0x562506e39c80 <line:714:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562506e39c40 <col:3> 'int' lvalue Var 0x562506e392c8 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x562506e39c60 <col:15> 'int' 1
|   |-BinaryOperator 0x562506e39cf8 <line:715:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562506e39ca0 <col:3> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562506e39ce0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562506e39cc0 <col:20> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562506e39d90 <line:716:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562506e39d18 <col:3> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x562506e39d68 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562506e39d38 <col:27> 'int' 1
|   |-CallExpr 0x562506e39f18 <line:717:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x562506e39f00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x562506e39db0 <col:3> 'void (int)' Function 0x562506ddf0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x562506e39eb0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x562506e39e90 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x562506e39e70 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x562506e39e28 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x562506e39e10 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x562506e39dd0 <col:23> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x562506e39e58 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x562506e39e40 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x562506e39df0 <col:41> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562506e39fb8 <line:718:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562506e39f40 <col:3> '_Bool' lvalue Var 0x562506e38f70 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x562506e39fa0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562506e39f80 <col:20> '_Bool' lvalue Var 0x562506e38cf8 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x562506e3a030 <line:719:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562506e39fd8 <col:3> '_Bool' lvalue Var 0x562506e38fe8 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562506e3a018 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562506e39ff8 <col:20> '_Bool' lvalue Var 0x562506e38d70 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x562506e3a0a8 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562506e3a050 <col:3> '_Bool' lvalue Var 0x562506e39060 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562506e3a090 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562506e3a070 <col:20> '_Bool' lvalue Var 0x562506e38de8 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562506e3a120 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562506e3a0c8 <col:3> '_Bool' lvalue Var 0x562506e390d8 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562506e3a108 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562506e3a0e8 <col:20> '_Bool' lvalue Var 0x562506e38e60 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x562506e3a198 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562506e3a140 <col:3> '_Bool' lvalue Var 0x562506e39150 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x562506e3a180 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562506e3a160 <col:20> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x562506e3a230 <line:723:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562506e3a1b8 <col:3> '_Bool' lvalue Var 0x562506e38d70 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x562506e3a208 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562506e3a1d8 <col:27> 'int' 1
|   |-CallExpr 0x562506e3a288 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562506e3a270 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e3a250 <col:3> 'void ()' Function 0x562506ddf410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562506e3a2e0 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562506e3a2c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e3a2a8 <col:3> 'void ()' Function 0x562506ddf350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562506e3a340 <line:726:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562506e3a300 <col:3> 'int' lvalue Var 0x562506e39628 'x' 'int'
|   | `-IntegerLiteral 0x562506e3a320 <col:7> 'int' 1
|   |-CallExpr 0x562506e3a398 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562506e3a380 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e3a360 <col:3> 'void ()' Function 0x562506ddf410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562506e3a3f0 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562506e3a3d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e3a3b8 <col:3> 'void ()' Function 0x562506ddf350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562506e3a6d8 <line:729:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562506e3a410 <col:3> 'int' lvalue Var 0x562506e38b68 'a' 'int'
|   | `-ConditionalOperator 0x562506e3a6a8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562506e3a4d0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562506e3a488 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562506e3a470 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562506e3a430 <col:7> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562506e3a4b8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562506e3a4a0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562506e3a450 <col:25> '_Bool' lvalue Var 0x562506e38d70 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x562506e3a690 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562506e3a4f0 <col:42> 'int' lvalue Var 0x562506e392c8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x562506e3a670 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562506e3a640 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562506e3a5b0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562506e3a568 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562506e3a550 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562506e3a510 <col:55> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562506e3a598 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562506e3a580 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562506e3a530 <col:73> '_Bool' lvalue Var 0x562506e38fe8 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x562506e3a610 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562506e3a5d0 <col:90> 'int' lvalue Var 0x562506e393c0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562506e3a628 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562506e3a5f0 <col:102> 'int' lvalue Var 0x562506e38b68 'a' 'int'
|   |-BinaryOperator 0x562506e3a8e0 <line:730:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562506e3a6f8 <col:3> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562506e3a8c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562506e3a898 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562506e3a7b8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562506e3a770 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562506e3a758 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562506e3a718 <col:20> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562506e3a7a0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562506e3a788 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562506e3a738 <col:38> '_Bool' lvalue Var 0x562506e38d70 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562506e3a850 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562506e3a808 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562506e3a7d8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562506e3a880 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562506e3a868 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562506e3a830 <col:66> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562506e3abc8 <line:731:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562506e3a900 <col:3> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562506e3abb0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562506e3ab80 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562506e3aaa0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562506e3a9c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562506e3a978 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562506e3a960 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562506e3a920 <col:20> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562506e3a9a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562506e3a990 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562506e3a940 <col:38> '_Bool' lvalue Var 0x562506e38d70 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x562506e3aa80 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562506e3aa38 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562506e3aa20 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562506e3a9e0 <col:56> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562506e3aa68 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562506e3aa50 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562506e3aa00 <col:74> '_Bool' lvalue Var 0x562506e38fe8 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562506e3ab38 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562506e3aaf0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562506e3aac0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562506e3ab68 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562506e3ab50 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562506e3ab18 <col:102> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562506e3add0 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562506e3abe8 <col:3> '_Bool' lvalue Var 0x562506e38d70 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562506e3adb8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562506e3ad88 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562506e3aca8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562506e3ac60 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562506e3ac48 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562506e3ac08 <col:20> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562506e3ac90 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562506e3ac78 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562506e3ac28 <col:38> '_Bool' lvalue Var 0x562506e38d70 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562506e3ad40 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562506e3acf8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562506e3acc8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562506e3ad70 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562506e3ad58 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562506e3ad20 <col:66> '_Bool' lvalue Var 0x562506e38d70 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x562506e3b0d8 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562506e3adf0 <col:3> '_Bool' lvalue Var 0x562506e38fe8 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562506e3b0c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562506e3b090 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562506e3afb0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562506e3aeb0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562506e3ae68 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562506e3ae50 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562506e3ae10 <col:20> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562506e3ae98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562506e3ae80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562506e3ae30 <col:38> '_Bool' lvalue Var 0x562506e38d70 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x562506e3af90 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562506e3af28 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562506e3af10 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562506e3aed0 <col:56> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562506e3af58 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562506e3af40 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562506e3aef0 <col:74> '_Bool' lvalue Var 0x562506e38fe8 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562506e3b048 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562506e3b000 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562506e3afd0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562506e3b078 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562506e3b060 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562506e3b028 <col:102> '_Bool' lvalue Var 0x562506e38fe8 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x562506e3b130 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562506e3b118 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e3b0f8 <col:3> 'void ()' Function 0x562506ddf410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562506e3b188 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562506e3b170 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e3b150 <col:3> 'void ()' Function 0x562506ddf350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562506e3b240 <line:736:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562506e3b1a8 <col:3> 'int' lvalue Var 0x562506e386e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562506e3b220 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562506e3b208 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562506e3b1c8 <col:22> 'int' lvalue Var 0x562506e386e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562506e3b1e8 <col:41> 'int' 1
|   |-CallExpr 0x562506e3b298 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562506e3b280 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e3b260 <col:3> 'void ()' Function 0x562506ddf410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562506e3b348 <line:738:3, col:36>
|     `-CallExpr 0x562506e3b328 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562506e3b310 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562506e3b2b8 <col:10> 'void *(void)' Function 0x562506ddee68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562506e3b4f0 prev 0x562506e380b8 <line:740:1, line:759:1> line:740:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x562506e3b458 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562506e3c738 <line:741:1, line:759:1>
|   |-CallExpr 0x562506e3b5d0 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562506e3b5b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e3b598 <col:3> 'void ()' Function 0x562506ddf350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562506e3b630 <line:743:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562506e3b5f0 <col:3> 'int' lvalue Var 0x562506e39628 'x' 'int'
|   | `-IntegerLiteral 0x562506e3b610 <col:7> 'int' 2
|   |-CallExpr 0x562506e3b688 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562506e3b670 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e3b650 <col:3> 'void ()' Function 0x562506ddf410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562506e3b6e0 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562506e3b6c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e3b6a8 <col:3> 'void ()' Function 0x562506ddf350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562506e3b758 <line:746:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562506e3b700 <col:3> 'int' lvalue Var 0x562506e38808 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x562506e3b740 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562506e3b720 <col:25> 'int' lvalue Var 0x562506e39748 'y' 'int'
|   |-CallExpr 0x562506e3b7b0 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562506e3b798 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e3b778 <col:3> 'void ()' Function 0x562506ddf410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562506e3b808 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562506e3b7f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e3b7d0 <col:3> 'void ()' Function 0x562506ddf350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562506e3baf0 <line:749:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562506e3b828 <col:3> 'int' lvalue Var 0x562506e38b68 'a' 'int'
|   | `-ConditionalOperator 0x562506e3bac0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562506e3b8e8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562506e3b8a0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562506e3b888 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562506e3b848 <col:7> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562506e3b8d0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562506e3b8b8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562506e3b868 <col:25> '_Bool' lvalue Var 0x562506e38de8 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x562506e3baa8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562506e3b908 <col:42> 'int' lvalue Var 0x562506e392c8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x562506e3ba88 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562506e3ba58 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562506e3b9c8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562506e3b980 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562506e3b968 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562506e3b928 <col:55> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562506e3b9b0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562506e3b998 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562506e3b948 <col:73> '_Bool' lvalue Var 0x562506e39060 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x562506e3ba28 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562506e3b9e8 <col:90> 'int' lvalue Var 0x562506e393c0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562506e3ba40 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562506e3ba08 <col:102> 'int' lvalue Var 0x562506e38b68 'a' 'int'
|   |-BinaryOperator 0x562506e3bcf8 <line:750:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562506e3bb10 <col:3> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562506e3bce0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562506e3bcb0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562506e3bbd0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562506e3bb88 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562506e3bb70 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562506e3bb30 <col:20> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562506e3bbb8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562506e3bba0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562506e3bb50 <col:38> '_Bool' lvalue Var 0x562506e38de8 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562506e3bc68 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562506e3bc20 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562506e3bbf0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562506e3bc98 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562506e3bc80 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562506e3bc48 <col:66> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562506e3c000 <line:751:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562506e3bd18 <col:3> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562506e3bfe8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562506e3bfb8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562506e3beb8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562506e3bdd8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562506e3bd90 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562506e3bd78 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562506e3bd38 <col:20> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562506e3bdc0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562506e3bda8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562506e3bd58 <col:38> '_Bool' lvalue Var 0x562506e38de8 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x562506e3be98 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562506e3be50 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562506e3be38 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562506e3bdf8 <col:56> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562506e3be80 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562506e3be68 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562506e3be18 <col:74> '_Bool' lvalue Var 0x562506e39060 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562506e3bf50 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562506e3bf08 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562506e3bed8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562506e3bfa0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562506e3bf68 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562506e3bf30 <col:102> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562506e3c208 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562506e3c020 <col:3> '_Bool' lvalue Var 0x562506e38de8 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562506e3c1f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562506e3c1c0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562506e3c0e0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562506e3c098 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562506e3c080 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562506e3c040 <col:20> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562506e3c0c8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562506e3c0b0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562506e3c060 <col:38> '_Bool' lvalue Var 0x562506e38de8 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562506e3c178 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562506e3c130 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562506e3c100 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562506e3c1a8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562506e3c190 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562506e3c158 <col:66> '_Bool' lvalue Var 0x562506e38de8 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562506e3c4f0 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562506e3c228 <col:3> '_Bool' lvalue Var 0x562506e39060 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562506e3c4d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562506e3c4a8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562506e3c3c8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562506e3c2e8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562506e3c2a0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562506e3c288 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562506e3c248 <col:20> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562506e3c2d0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562506e3c2b8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562506e3c268 <col:38> '_Bool' lvalue Var 0x562506e38de8 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x562506e3c3a8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562506e3c360 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562506e3c348 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562506e3c308 <col:56> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562506e3c390 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562506e3c378 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562506e3c328 <col:74> '_Bool' lvalue Var 0x562506e39060 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562506e3c460 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562506e3c418 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562506e3c3e8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562506e3c490 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562506e3c478 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562506e3c440 <col:102> '_Bool' lvalue Var 0x562506e39060 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x562506e3c548 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562506e3c530 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e3c510 <col:3> 'void ()' Function 0x562506ddf410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562506e3c5a0 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562506e3c588 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e3c568 <col:3> 'void ()' Function 0x562506ddf350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562506e3c658 <line:756:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562506e3c5c0 <col:3> 'int' lvalue Var 0x562506e386e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562506e3c638 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562506e3c620 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562506e3c5e0 <col:22> 'int' lvalue Var 0x562506e386e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562506e3c600 <col:41> 'int' 1
|   |-CallExpr 0x562506e3c6b0 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562506e3c698 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e3c678 <col:3> 'void ()' Function 0x562506ddf410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562506e3c728 <line:758:3, col:36>
|     `-CallExpr 0x562506e3c708 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562506e3c6f0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562506e3c6d0 <col:10> 'void *(void)' Function 0x562506ddee68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562506e3c880 prev 0x562506e38210 <line:760:1, line:779:1> line:760:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x562506e3c7e8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562506e3dab8 <line:761:1, line:779:1>
|   |-CallExpr 0x562506e3c960 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562506e3c948 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e3c928 <col:3> 'void ()' Function 0x562506ddf350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562506e3c9c0 <line:763:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562506e3c980 <col:3> 'int' lvalue Var 0x562506e39748 'y' 'int'
|   | `-IntegerLiteral 0x562506e3c9a0 <col:7> 'int' 1
|   |-CallExpr 0x562506e3ca18 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562506e3ca00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e3c9e0 <col:3> 'void ()' Function 0x562506ddf410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562506e3ca70 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562506e3ca58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e3ca38 <col:3> 'void ()' Function 0x562506ddf350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562506e3cae8 <line:766:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562506e3ca90 <col:3> 'int' lvalue Var 0x562506e38928 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x562506e3cad0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562506e3cab0 <col:25> 'int' lvalue Var 0x562506e39868 'z' 'int'
|   |-CallExpr 0x562506e3cb40 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562506e3cb28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e3cb08 <col:3> 'void ()' Function 0x562506ddf410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562506e3cb98 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562506e3cb80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e3cb60 <col:3> 'void ()' Function 0x562506ddf350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562506e3ce80 <line:769:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562506e3cbb8 <col:3> 'int' lvalue Var 0x562506e38b68 'a' 'int'
|   | `-ConditionalOperator 0x562506e3ce50 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562506e3cc78 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562506e3cc30 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562506e3cc18 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562506e3cbd8 <col:7> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562506e3cc60 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562506e3cc48 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562506e3cbf8 <col:25> '_Bool' lvalue Var 0x562506e38e60 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x562506e3ce38 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562506e3cc98 <col:42> 'int' lvalue Var 0x562506e392c8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x562506e3ce18 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562506e3cde8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562506e3cd58 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562506e3cd10 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562506e3ccf8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562506e3ccb8 <col:55> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562506e3cd40 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562506e3cd28 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562506e3ccd8 <col:73> '_Bool' lvalue Var 0x562506e390d8 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x562506e3cdb8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562506e3cd78 <col:90> 'int' lvalue Var 0x562506e393c0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562506e3cdd0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562506e3cd98 <col:102> 'int' lvalue Var 0x562506e38b68 'a' 'int'
|   |-BinaryOperator 0x562506e3d098 <line:770:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562506e3cea0 <col:3> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562506e3d080 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562506e3d050 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562506e3cf60 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562506e3cf18 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562506e3cf00 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562506e3cec0 <col:20> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562506e3cf48 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562506e3cf30 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562506e3cee0 <col:38> '_Bool' lvalue Var 0x562506e38e60 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562506e3d008 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562506e3cfc0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562506e3cf80 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562506e3d038 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562506e3d020 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562506e3cfe8 <col:66> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562506e3d380 <line:771:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562506e3d0b8 <col:3> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562506e3d368 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562506e3d338 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562506e3d258 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562506e3d178 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562506e3d130 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562506e3d118 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562506e3d0d8 <col:20> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562506e3d160 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562506e3d148 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562506e3d0f8 <col:38> '_Bool' lvalue Var 0x562506e38e60 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x562506e3d238 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562506e3d1f0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562506e3d1d8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562506e3d198 <col:56> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562506e3d220 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562506e3d208 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562506e3d1b8 <col:74> '_Bool' lvalue Var 0x562506e390d8 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562506e3d2f0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562506e3d2a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562506e3d278 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562506e3d320 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562506e3d308 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562506e3d2d0 <col:102> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562506e3d588 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562506e3d3a0 <col:3> '_Bool' lvalue Var 0x562506e38e60 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562506e3d570 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562506e3d540 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562506e3d460 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562506e3d418 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562506e3d400 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562506e3d3c0 <col:20> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562506e3d448 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562506e3d430 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562506e3d3e0 <col:38> '_Bool' lvalue Var 0x562506e38e60 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562506e3d4f8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562506e3d4b0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562506e3d480 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562506e3d528 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562506e3d510 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562506e3d4d8 <col:66> '_Bool' lvalue Var 0x562506e38e60 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x562506e3d870 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562506e3d5a8 <col:3> '_Bool' lvalue Var 0x562506e390d8 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562506e3d858 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562506e3d828 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562506e3d748 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562506e3d668 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562506e3d620 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562506e3d608 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562506e3d5c8 <col:20> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562506e3d650 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562506e3d638 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562506e3d5e8 <col:38> '_Bool' lvalue Var 0x562506e38e60 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x562506e3d728 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562506e3d6e0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562506e3d6c8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562506e3d688 <col:56> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562506e3d710 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562506e3d6f8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562506e3d6a8 <col:74> '_Bool' lvalue Var 0x562506e390d8 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562506e3d7e0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562506e3d798 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562506e3d768 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562506e3d810 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562506e3d7f8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562506e3d7c0 <col:102> '_Bool' lvalue Var 0x562506e390d8 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x562506e3d8c8 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562506e3d8b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e3d890 <col:3> 'void ()' Function 0x562506ddf410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562506e3d920 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562506e3d908 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e3d8e8 <col:3> 'void ()' Function 0x562506ddf350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562506e3d9d8 <line:776:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562506e3d940 <col:3> 'int' lvalue Var 0x562506e386e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562506e3d9b8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562506e3d9a0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562506e3d960 <col:22> 'int' lvalue Var 0x562506e386e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562506e3d980 <col:41> 'int' 1
|   |-CallExpr 0x562506e3da30 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562506e3da18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e3d9f8 <col:3> 'void ()' Function 0x562506ddf410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562506e3daa8 <line:778:3, col:36>
|     `-CallExpr 0x562506e3da88 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562506e3da70 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562506e3da50 <col:10> 'void *(void)' Function 0x562506ddee68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562506e3dc00 prev 0x562506e38368 <line:780:1, line:812:1> line:780:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x562506e3db68 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562506e417d8 <line:781:1, line:812:1>
|   |-CallExpr 0x562506e3dce0 <line:782:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562506e3dcc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e3dca8 <col:3> 'void ()' Function 0x562506ddf350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562506e3dd40 <line:783:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562506e3dd00 <col:3> 'int' lvalue Var 0x562506e39868 'z' 'int'
|   | `-IntegerLiteral 0x562506e3dd20 <col:7> 'int' 1
|   |-CallExpr 0x562506e3dd98 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562506e3dd80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e3dd60 <col:3> 'void ()' Function 0x562506ddf410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562506e3ddf0 <line:785:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562506e3ddd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e3ddb8 <col:3> 'void ()' Function 0x562506ddf350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562506e3dea0 <line:786:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x562506e3de10 <col:3> '_Bool' lvalue Var 0x562506e39900 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x562506e3de88 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x562506e3de68 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x562506e3de50 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x562506e3de30 <col:19> 'void *(void)' Function 0x562506ddee68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x562506e3df50 <line:787:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x562506e3dec0 <col:3> '_Bool' lvalue Var 0x562506e39978 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x562506e3df38 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x562506e3df18 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x562506e3df00 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x562506e3dee0 <col:19> 'void *(void)' Function 0x562506ddee68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x562506e3dfd8 <line:788:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x562506e3df70 <col:3> '_Bool' lvalue Var 0x562506e38c00 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x562506e3dfc0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562506e3df90 <col:21> '_Bool' lvalue Var 0x562506e39978 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x562506e3e050 <line:789:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562506e3dff8 <col:3> 'int' lvalue Var 0x562506e38c80 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x562506e3e038 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562506e3e018 <col:15> 'int' lvalue Var 0x562506e38b68 'a' 'int'
|   |-BinaryOperator 0x562506e3e488 <line:790:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x562506e3e070 <col:3> 'int' lvalue Var 0x562506e38b68 'a' 'int'
|   | `-ConditionalOperator 0x562506e3e458 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x562506e3e280 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x562506e3e1a0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x562506e3e0c8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x562506e3e0b0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x562506e3e090 <col:8> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x562506e3e180 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x562506e3e118 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x562506e3e100 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x562506e3e0e0 <col:27> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x562506e3e168 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x562506e3e150 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x562506e3e130 <col:46> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x562506e3e260 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x562506e3e1f8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x562506e3e1e0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x562506e3e1c0 <col:65> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x562506e3e248 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x562506e3e230 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x562506e3e210 <col:84> '_Bool' lvalue Var 0x562506e39150 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x562506e3e440 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562506e3e2a0 <col:101> 'int' lvalue Var 0x562506e38b68 'a' 'int'
|   |   `-ParenExpr 0x562506e3e420 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x562506e3e3f0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x562506e3e360 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562506e3e318 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562506e3e300 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562506e3e2c0 <col:106> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562506e3e348 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562506e3e330 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562506e3e2e0 <col:124> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x562506e3e3c0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562506e3e380 <col:141> 'int' lvalue Var 0x562506e392c8 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x562506e3e3d8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562506e3e3a0 <col:153> 'int' lvalue Var 0x562506e393c0 'a$w_buff1' 'int'
|   |-BinaryOperator 0x562506e3e998 <line:791:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x562506e3e4a8 <col:3> 'int' lvalue Var 0x562506e392c8 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x562506e3e968 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562506e3e938 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562506e3e920 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562506e3e4c8 <col:15> '_Bool' lvalue Var 0x562506e39978 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562506e3e950 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562506e3e4e8 <col:31> 'int' lvalue Var 0x562506e392c8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x562506e3e900 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562506e3e8d0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562506e3e6f8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562506e3e618 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562506e3e540 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562506e3e528 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562506e3e508 <col:45> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562506e3e5f8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x562506e3e590 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562506e3e578 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562506e3e558 <col:64> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x562506e3e5e0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x562506e3e5c8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x562506e3e5a8 <col:83> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562506e3e6d8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562506e3e670 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562506e3e658 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562506e3e638 <col:102> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x562506e3e6c0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x562506e3e6a8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x562506e3e688 <col:121> '_Bool' lvalue Var 0x562506e39150 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x562506e3e8b8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562506e3e718 <col:138> 'int' lvalue Var 0x562506e392c8 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x562506e3e898 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562506e3e868 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562506e3e7d8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x562506e3e790 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562506e3e778 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562506e3e738 <col:151> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x562506e3e7c0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x562506e3e7a8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562506e3e758 <col:169> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x562506e3e838 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562506e3e7f8 <col:186> 'int' lvalue Var 0x562506e392c8 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x562506e3e850 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562506e3e818 <col:198> 'int' lvalue Var 0x562506e392c8 'a$w_buff0' 'int'
|   |-BinaryOperator 0x562506e3eea8 <line:792:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x562506e3e9b8 <col:3> 'int' lvalue Var 0x562506e393c0 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x562506e3ee78 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562506e3ee48 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562506e3ee30 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562506e3e9d8 <col:15> '_Bool' lvalue Var 0x562506e39978 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562506e3ee60 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562506e3e9f8 <col:31> 'int' lvalue Var 0x562506e393c0 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x562506e3ee10 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562506e3ede0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562506e3ec08 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562506e3eb28 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562506e3ea50 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562506e3ea38 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562506e3ea18 <col:45> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562506e3eb08 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x562506e3eaa0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562506e3ea88 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562506e3ea68 <col:64> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x562506e3eaf0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x562506e3ead8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x562506e3eab8 <col:83> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562506e3ebe8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562506e3eb80 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562506e3eb68 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562506e3eb48 <col:102> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x562506e3ebd0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x562506e3ebb8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x562506e3eb98 <col:121> '_Bool' lvalue Var 0x562506e39150 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x562506e3edc8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562506e3ec28 <col:138> 'int' lvalue Var 0x562506e393c0 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x562506e3eda8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562506e3ed78 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562506e3ece8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x562506e3eca0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562506e3ec88 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562506e3ec48 <col:151> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x562506e3ecd0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x562506e3ecb8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562506e3ec68 <col:169> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x562506e3ed48 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562506e3ed08 <col:186> 'int' lvalue Var 0x562506e393c0 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x562506e3ed60 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562506e3ed28 <col:198> 'int' lvalue Var 0x562506e393c0 'a$w_buff1' 'int'
|   |-BinaryOperator 0x562506e3f470 <line:793:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562506e3eec8 <col:3> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562506e3f458 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562506e3f428 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562506e3f3e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562506e3f3c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562506e3eee8 <col:20> '_Bool' lvalue Var 0x562506e39978 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562506e3f410 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562506e3f3f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562506e3ef08 <col:36> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x562506e3f3a8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562506e3f378 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562506e3f138 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562506e3f058 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562506e3ef60 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562506e3ef48 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562506e3ef28 <col:55> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562506e3f038 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562506e3efd0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562506e3ef98 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562506e3ef78 <col:74> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x562506e3f020 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562506e3f008 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562506e3efe8 <col:93> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562506e3f118 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562506e3f0b0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562506e3f098 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562506e3f078 <col:112> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x562506e3f100 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562506e3f0e8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562506e3f0c8 <col:131> '_Bool' lvalue Var 0x562506e39150 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x562506e3f360 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562506e3f348 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562506e3f158 <col:148> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x562506e3f328 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562506e3f2f8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562506e3f218 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562506e3f1d0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562506e3f1b8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562506e3f178 <col:166> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562506e3f200 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562506e3f1e8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562506e3f198 <col:184> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x562506e3f2b0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562506e3f268 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562506e3f238 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562506e3f2e0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562506e3f2c8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562506e3f290 <col:212> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562506e3fa38 <line:794:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562506e3f490 <col:3> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562506e3fa20 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562506e3f9f0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562506e3f9a8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562506e3f990 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562506e3f4b0 <col:20> '_Bool' lvalue Var 0x562506e39978 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562506e3f9d8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562506e3f9c0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562506e3f4d0 <col:36> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x562506e3f970 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562506e3f940 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562506e3f6e0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562506e3f600 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562506e3f528 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562506e3f510 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562506e3f4f0 <col:55> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562506e3f5e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562506e3f578 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562506e3f560 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562506e3f540 <col:74> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x562506e3f5c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562506e3f5b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562506e3f590 <col:93> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562506e3f6c0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562506e3f658 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562506e3f640 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562506e3f620 <col:112> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x562506e3f6a8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562506e3f690 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562506e3f670 <col:131> '_Bool' lvalue Var 0x562506e39150 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x562506e3f928 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562506e3f910 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562506e3f700 <col:148> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x562506e3f8f0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562506e3f8c0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562506e3f7c0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562506e3f778 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562506e3f760 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562506e3f720 <col:166> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562506e3f7a8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562506e3f790 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562506e3f740 <col:184> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x562506e3f890 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562506e3f810 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562506e3f7e0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562506e3f8a8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562506e3f868 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562506e3f838 <col:219> 'int' 0
|   |-BinaryOperator 0x562506e3fff8 <line:795:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562506e3fa58 <col:3> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x562506e3ffe0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562506e3ff98 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562506e3ff50 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562506e3ff38 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562506e3fa78 <col:20> '_Bool' lvalue Var 0x562506e39978 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562506e3ff80 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562506e3ff68 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562506e3fa98 <col:36> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x562506e3ff18 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562506e3fee8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562506e3fca8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562506e3fbc8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562506e3faf0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562506e3fad8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562506e3fab8 <col:55> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562506e3fba8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562506e3fb40 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562506e3fb28 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562506e3fb08 <col:74> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x562506e3fb90 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562506e3fb78 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562506e3fb58 <col:93> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562506e3fc88 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562506e3fc20 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562506e3fc08 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562506e3fbe8 <col:112> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x562506e3fc70 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562506e3fc58 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562506e3fc38 <col:131> '_Bool' lvalue Var 0x562506e39150 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x562506e3fed0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562506e3feb8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562506e3fcc8 <col:148> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x562506e3fe98 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562506e3fe68 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562506e3fd88 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562506e3fd40 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562506e3fd28 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562506e3fce8 <col:166> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562506e3fd70 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562506e3fd58 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562506e3fd08 <col:184> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x562506e3fe20 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562506e3fdd8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562506e3fda8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562506e3fe50 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562506e3fe38 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562506e3fe00 <col:212> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x562506e405c0 <line:796:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562506e40018 <col:3> '_Bool' lvalue Var 0x562506e39150 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x562506e405a8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562506e40578 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562506e40530 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562506e40518 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562506e40038 <col:20> '_Bool' lvalue Var 0x562506e39978 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562506e40560 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562506e40548 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562506e40058 <col:36> '_Bool' lvalue Var 0x562506e39150 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x562506e404f8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562506e404c8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562506e40268 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562506e40188 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562506e400b0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562506e40098 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562506e40078 <col:55> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562506e40168 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562506e40100 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562506e400e8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562506e400c8 <col:74> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x562506e40150 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562506e40138 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562506e40118 <col:93> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562506e40248 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562506e401e0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562506e401c8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562506e401a8 <col:112> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x562506e40230 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562506e40218 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562506e401f8 <col:131> '_Bool' lvalue Var 0x562506e39150 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x562506e404b0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562506e40498 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562506e40288 <col:148> '_Bool' lvalue Var 0x562506e39150 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x562506e40478 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562506e40448 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562506e40348 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562506e40300 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562506e402e8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562506e402a8 <col:166> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562506e40330 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562506e40318 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562506e402c8 <col:184> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x562506e40418 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562506e40398 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562506e40368 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562506e40430 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562506e403f0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562506e403c0 <col:219> 'int' 0
|   |-BinaryOperator 0x562506e40638 <line:797:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562506e405e0 <col:3> 'int' lvalue Var 0x562506e38a48 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x562506e40620 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562506e40600 <col:25> 'int' lvalue Var 0x562506e38b68 'a' 'int'
|   |-BinaryOperator 0x562506e40768 <line:798:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x562506e40658 <col:3> 'int' lvalue Var 0x562506e38b68 'a' 'int'
|   | `-ConditionalOperator 0x562506e40738 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x562506e406f0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562506e406d8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562506e40678 <col:7> '_Bool' lvalue Var 0x562506e38c00 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x562506e40708 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562506e40698 <col:25> 'int' lvalue Var 0x562506e38c80 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x562506e40720 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x562506e406b8 <col:37> 'int' lvalue Var 0x562506e38b68 'a' 'int'
|   |-BinaryOperator 0x562506e40800 <line:799:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x562506e40788 <col:3> '_Bool' lvalue Var 0x562506e38c00 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x562506e407d8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562506e407a8 <col:28> 'int' 0
|   |-CallExpr 0x562506e40858 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562506e40840 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e40820 <col:3> 'void ()' Function 0x562506ddf410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562506e408b0 <line:801:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562506e40898 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e40878 <col:3> 'void ()' Function 0x562506ddf350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562506e40b98 <line:802:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562506e408d0 <col:3> 'int' lvalue Var 0x562506e38b68 'a' 'int'
|   | `-ConditionalOperator 0x562506e40b68 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562506e40990 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562506e40948 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562506e40930 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562506e408f0 <col:7> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562506e40978 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562506e40960 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562506e40910 <col:25> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x562506e40b50 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562506e409b0 <col:42> 'int' lvalue Var 0x562506e392c8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x562506e40b30 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562506e40b00 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562506e40a70 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562506e40a28 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562506e40a10 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562506e409d0 <col:55> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562506e40a58 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562506e40a40 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562506e409f0 <col:73> '_Bool' lvalue Var 0x562506e39150 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x562506e40ad0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562506e40a90 <col:90> 'int' lvalue Var 0x562506e393c0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562506e40ae8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562506e40ab0 <col:102> 'int' lvalue Var 0x562506e38b68 'a' 'int'
|   |-BinaryOperator 0x562506e40da0 <line:803:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562506e40bb8 <col:3> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562506e40d88 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562506e40d58 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562506e40c78 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562506e40c30 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562506e40c18 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562506e40bd8 <col:20> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562506e40c60 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562506e40c48 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562506e40bf8 <col:38> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x562506e40d10 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562506e40cc8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562506e40c98 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562506e40d40 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562506e40d28 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562506e40cf0 <col:66> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562506e410a0 <line:804:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562506e40dc0 <col:3> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562506e41088 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562506e41058 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562506e40f60 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562506e40e80 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562506e40e38 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562506e40e20 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562506e40de0 <col:20> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562506e40e68 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562506e40e50 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562506e40e00 <col:38> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x562506e40f40 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562506e40ef8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562506e40ee0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562506e40ea0 <col:56> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562506e40f28 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562506e40f10 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562506e40ec0 <col:74> '_Bool' lvalue Var 0x562506e39150 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x562506e41010 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562506e40fb0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562506e40f80 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562506e41040 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562506e41028 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562506e40ff0 <col:102> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562506e412a8 <line:805:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562506e410c0 <col:3> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x562506e41290 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562506e41260 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562506e41180 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562506e41138 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562506e41120 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562506e410e0 <col:20> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562506e41168 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562506e41150 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562506e41100 <col:38> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x562506e41218 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562506e411d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562506e411a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562506e41248 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562506e41230 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562506e411f8 <col:66> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x562506e41590 <line:806:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562506e412c8 <col:3> '_Bool' lvalue Var 0x562506e39150 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x562506e41578 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562506e41548 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562506e41468 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562506e41388 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562506e41340 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562506e41328 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562506e412e8 <col:20> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562506e41370 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562506e41358 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562506e41308 <col:38> '_Bool' lvalue Var 0x562506e38ed8 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x562506e41448 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562506e41400 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562506e413e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562506e413a8 <col:56> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562506e41430 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562506e41418 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562506e413c8 <col:74> '_Bool' lvalue Var 0x562506e39150 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x562506e41500 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562506e414b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562506e41488 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562506e41530 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562506e41518 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562506e414e0 <col:102> '_Bool' lvalue Var 0x562506e39150 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x562506e415e8 <line:807:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562506e415d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e415b0 <col:3> 'void ()' Function 0x562506ddf410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562506e41640 <line:808:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562506e41628 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e41608 <col:3> 'void ()' Function 0x562506ddf350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562506e416f8 <line:809:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562506e41660 <col:3> 'int' lvalue Var 0x562506e386e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562506e416d8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562506e416c0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562506e41680 <col:22> 'int' lvalue Var 0x562506e386e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562506e416a0 <col:41> 'int' 1
|   |-CallExpr 0x562506e41750 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562506e41738 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562506e41718 <col:3> 'void ()' Function 0x562506ddf410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562506e417c8 <line:811:3, col:36>
|     `-CallExpr 0x562506e417a8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562506e41790 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562506e41770 <col:10> 'void *(void)' Function 0x562506ddee68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562506e418f8 prev 0x562506e38430 <line:813:1, line:815:1> line:813:6 fence 'void ()'
| `-CompoundStmt 0x562506e41998 <line:814:1, line:815:1>
|-FunctionDecl 0x562506e419c8 prev 0x562506e384f0 <line:816:1, line:818:1> line:816:6 isync 'void ()'
| `-CompoundStmt 0x562506e41a68 <line:817:1, line:818:1>
|-FunctionDecl 0x562506e41a98 prev 0x562506e385b0 <line:819:1, line:821:1> line:819:6 lwfence 'void ()'
| `-CompoundStmt 0x562506e41b38 <line:820:1, line:821:1>
`-FunctionDecl 0x562506e41ba8 <line:822:1, line:848:1> line:822:5 main 'int ()'
  `-CompoundStmt 0x562506e43b20 <line:823:1, line:848:1>
    |-DeclStmt 0x562506e41cc0 <line:824:3, col:18>
    | `-VarDecl 0x562506e41c58 <col:3, col:13> col:13 used t1363 'pthread_t':'unsigned long'
    |-CallExpr 0x562506e41ec8 <line:825:3, col:54> 'int'
    | |-ImplicitCastExpr 0x562506e41eb0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562506e41cd8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562506e1f8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562506e41d18 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562506e41cf8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562506e41c58 't1363' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562506e41f08 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562506e41d90 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x562506e41d68 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562506e41d30 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x562506e41f20 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562506e41db0 <col:39> 'void *(void *)' Function 0x562506e39a90 'P0' 'void *(void *)'
    | `-ParenExpr 0x562506e41e30 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x562506e41e08 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562506e41dd0 <col:52> 'int' 0
    |-DeclStmt 0x562506e41fb0 <line:826:3, col:18>
    | `-VarDecl 0x562506e41f48 <col:3, col:13> col:13 used t1364 'pthread_t':'unsigned long'
    |-CallExpr 0x562506e42170 <line:827:3, col:54> 'int'
    | |-ImplicitCastExpr 0x562506e42158 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562506e41fc8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562506e1f8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562506e42020 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562506e42000 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562506e41f48 't1364' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562506e421b0 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562506e42098 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x562506e42070 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562506e42038 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x562506e421c8 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562506e420b8 <col:39> 'void *(void *)' Function 0x562506e3b4f0 'P1' 'void *(void *)'
    | `-ParenExpr 0x562506e42138 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x562506e42110 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562506e420d8 <col:52> 'int' 0
    |-DeclStmt 0x562506e42258 <line:828:3, col:18>
    | `-VarDecl 0x562506e421f0 <col:3, col:13> col:13 used t1365 'pthread_t':'unsigned long'
    |-CallExpr 0x562506e42400 <line:829:3, col:54> 'int'
    | |-ImplicitCastExpr 0x562506e423e8 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562506e42270 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562506e1f8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562506e422b0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562506e42290 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562506e421f0 't1365' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562506e42440 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562506e42328 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x562506e42300 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562506e422c8 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x562506e42458 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562506e42348 <col:39> 'void *(void *)' Function 0x562506e3c880 'P2' 'void *(void *)'
    | `-ParenExpr 0x562506e423c8 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x562506e423a0 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562506e42368 <col:52> 'int' 0
    |-DeclStmt 0x562506e424e8 <line:830:3, col:18>
    | `-VarDecl 0x562506e42480 <col:3, col:13> col:13 used t1366 'pthread_t':'unsigned long'
    |-CallExpr 0x562506e42690 <line:831:3, col:54> 'int'
    | |-ImplicitCastExpr 0x562506e42678 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562506e42500 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562506e1f8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562506e42540 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562506e42520 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562506e42480 't1366' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562506e426d0 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562506e425b8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x562506e42590 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562506e42558 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x562506e426e8 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562506e425d8 <col:39> 'void *(void *)' Function 0x562506e3dc00 'P3' 'void *(void *)'
    | `-ParenExpr 0x562506e42658 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x562506e42630 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562506e425f8 <col:52> 'int' 0
    |-CallExpr 0x562506e42738 <line:832:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562506e42720 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562506e42700 <col:3> 'void ()' Function 0x562506ddf350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562506e42808 <line:833:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x562506e42758 <col:3> '_Bool' lvalue Var 0x562506e394b0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x562506e427f0 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x562506e427d0 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x562506e427b8 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x562506e42778 <col:21> 'int' lvalue Var 0x562506e386e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x562506e42798 <col:41> 'int' 4
    |-CallExpr 0x562506e42860 <line:834:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562506e42848 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562506e42828 <col:3> 'void ()' Function 0x562506ddf410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562506e428d8 <line:835:3, col:36> 'void'
    | |-ImplicitCastExpr 0x562506e428c0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562506e42880 <col:3> 'void (int)' Function 0x562506ddeca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x562506e42918 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x562506e42900 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x562506e428a0 <col:21> '_Bool' lvalue Var 0x562506e394b0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x562506e42968 <line:836:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562506e42950 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562506e42930 <col:3> 'void ()' Function 0x562506ddf350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562506e42c50 <line:837:3, col:103> 'int' '='
    | |-DeclRefExpr 0x562506e42988 <col:3> 'int' lvalue Var 0x562506e38b68 'a' 'int'
    | `-ConditionalOperator 0x562506e42c20 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x562506e42a48 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x562506e42a00 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x562506e429e8 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x562506e429a8 <col:7> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x562506e42a30 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x562506e42a18 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x562506e429c8 <col:25> '_Bool' lvalue Var 0x562506e38cf8 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x562506e42c08 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x562506e42a68 <col:42> 'int' lvalue Var 0x562506e392c8 'a$w_buff0' 'int'
    |   `-ParenExpr 0x562506e42be8 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x562506e42bb8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x562506e42b28 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x562506e42ae0 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x562506e42ac8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x562506e42a88 <col:55> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x562506e42b10 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x562506e42af8 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x562506e42aa8 <col:73> '_Bool' lvalue Var 0x562506e38f70 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x562506e42b88 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x562506e42b48 <col:90> 'int' lvalue Var 0x562506e393c0 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x562506e42ba0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x562506e42b68 <col:102> 'int' lvalue Var 0x562506e38b68 'a' 'int'
    |-BinaryOperator 0x562506e42e58 <line:838:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x562506e42c70 <col:3> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x562506e42e40 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562506e42e10 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x562506e42d30 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562506e42ce8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562506e42cd0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x562506e42c90 <col:20> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562506e42d18 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562506e42d00 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562506e42cb0 <col:38> '_Bool' lvalue Var 0x562506e38cf8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562506e42dc8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562506e42d80 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562506e42d50 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562506e42df8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562506e42de0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562506e42da8 <col:66> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x562506e43158 <line:839:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x562506e42e78 <col:3> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x562506e43140 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562506e43110 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562506e43030 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x562506e42f38 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562506e42ef0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562506e42ed8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562506e42e98 <col:20> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562506e42f20 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562506e42f08 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562506e42eb8 <col:38> '_Bool' lvalue Var 0x562506e38cf8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562506e43010 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562506e42fb0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562506e42f98 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x562506e42f58 <col:56> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562506e42fe0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562506e42fc8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x562506e42f78 <col:74> '_Bool' lvalue Var 0x562506e38f70 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562506e430c8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562506e43080 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562506e43050 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562506e430f8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562506e430e0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562506e430a8 <col:102> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x562506e43360 <line:840:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x562506e43178 <col:3> '_Bool' lvalue Var 0x562506e38cf8 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562506e43348 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562506e43318 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x562506e43238 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562506e431f0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562506e431d8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x562506e43198 <col:20> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562506e43220 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562506e43208 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562506e431b8 <col:38> '_Bool' lvalue Var 0x562506e38cf8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562506e432d0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562506e43288 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562506e43258 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562506e43300 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562506e432e8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562506e432b0 <col:66> '_Bool' lvalue Var 0x562506e38cf8 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x562506e43648 <line:841:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x562506e43380 <col:3> '_Bool' lvalue Var 0x562506e38f70 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562506e43630 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562506e43600 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562506e43520 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x562506e43440 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562506e433f8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562506e433e0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562506e433a0 <col:20> '_Bool' lvalue Var 0x562506e39340 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562506e43428 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562506e43410 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562506e433c0 <col:38> '_Bool' lvalue Var 0x562506e38cf8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562506e43500 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562506e434b8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562506e434a0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x562506e43460 <col:56> '_Bool' lvalue Var 0x562506e39438 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562506e434e8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562506e434d0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x562506e43480 <col:74> '_Bool' lvalue Var 0x562506e38f70 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562506e435b8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562506e43570 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562506e43540 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562506e435e8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562506e435d0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562506e43598 <col:102> '_Bool' lvalue Var 0x562506e38f70 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x562506e436a0 <line:842:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562506e43688 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562506e43668 <col:3> 'void ()' Function 0x562506ddf410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562506e436f8 <line:843:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562506e436e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562506e436c0 <col:3> 'void ()' Function 0x562506ddf350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562506e439c8 <line:844:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x562506e43718 <col:3> '_Bool' lvalue Var 0x562506e39528 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x562506e439b0 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x562506e43998 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x562506e43978 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x562506e43958 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x562506e438c0 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x562506e43828 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x562506e43790 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x562506e43778 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x562506e43738 <col:23> 'int' lvalue Var 0x562506e39628 'x' 'int'
    |         | | | `-IntegerLiteral 0x562506e43758 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x562506e43808 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x562506e437f0 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x562506e437b0 <col:33> 'int' lvalue Var 0x562506e38808 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x562506e437d0 <col:56> 'int' 0
    |         | `-BinaryOperator 0x562506e438a0 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x562506e43888 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x562506e43848 <col:61> 'int' lvalue Var 0x562506e38928 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x562506e43868 <col:84> 'int' 0
    |         `-BinaryOperator 0x562506e43938 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x562506e43920 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x562506e438e0 <col:89> 'int' lvalue Var 0x562506e38a48 '__unbuffered_p3_EAX' 'int'
    |           `-IntegerLiteral 0x562506e43900 <col:112> 'int' 0
    |-CallExpr 0x562506e43a20 <line:845:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562506e43a08 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562506e439e8 <col:3> 'void ()' Function 0x562506ddf410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562506e43a98 <line:846:3, col:36> 'void'
    | |-ImplicitCastExpr 0x562506e43a80 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562506e43a40 <col:3> 'void (int)' Function 0x562506ddf0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x562506e43ad8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x562506e43ac0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x562506e43a60 <col:21> '_Bool' lvalue Var 0x562506e39528 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x562506e43b10 <line:847:3, col:10>
      `-IntegerLiteral 0x562506e43af0 <col:10> 'int' 0
