TranslationUnitDecl 0x55d75a2aaf88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55d75a2ab848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55d75a2ab520 '__int128'
|-TypedefDecl 0x55d75a2ab8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55d75a2ab540 'unsigned __int128'
|-TypedefDecl 0x55d75a2abbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55d75a2ab990 'struct __NSConstantString_tag'
|   `-Record 0x55d75a2ab910 '__NSConstantString_tag'
|-TypedefDecl 0x55d75a2abc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55d75a2abc20 'char *'
|   `-BuiltinType 0x55d75a2ab020 'char'
|-TypedefDecl 0x55d75a2eab60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55d75a2abf00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55d75a2abd40 'struct __va_list_tag'
|     `-Record 0x55d75a2abcc0 '__va_list_tag'
|-FunctionDecl 0x55d75a2eaca0 <pthread-wmm/mix001_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55d75a2eabd0 <col:31> col:34 'int'
|-FunctionDecl 0x55d75a2eae68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55d75a2eaf90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55d75a2eb0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55d75a2eb048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55d75a2eb308 <col:40, col:99>
|   |-IfStmt 0x55d75a2eb2d8 <col:42, col:88>
|   | |-UnaryOperator 0x55d75a2eb1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55d75a2eb1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55d75a2eb180 <col:47> 'int' lvalue ParmVar 0x55d75a2eb048 'expression' 'int'
|   | `-CompoundStmt 0x55d75a2eb2c0 <col:59, col:88>
|   |   `-LabelStmt 0x55d75a2eb2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55d75a2eb238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55d75a2eb220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55d75a2eb1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x55d75a2eaf90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55d75a2eb2f0 <col:89>
|   `-ReturnStmt 0x55d75a2eb2f8 <col:91>
|-FunctionDecl 0x55d75a2eb350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55d75a2eb410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55d75a2eb790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55d75a2eb4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55d75a2eb548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55d75a2eb5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55d75a2eb648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55d75a2eb850 <line:10:22>
|-FunctionDecl 0x55d75a3118a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55d75a2eb8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55d75a2eb940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55d75a2eb9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55d75a2eba40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55d75a311960 <line:13:22>
|-FunctionDecl 0x55d75a311c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55d75a3119d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55d75a311a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55d75a311ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55d75a311cc8 <line:15:22>
|-TypedefDecl 0x55d75a311d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55d75a2ab0e0 'unsigned char'
|-TypedefDecl 0x55d75a311da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55d75a2ab100 'unsigned short'
|-TypedefDecl 0x55d75a311e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55d75a2ab120 'unsigned int'
|-TypedefDecl 0x55d75a311e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55d75a2ab140 'unsigned long'
|-TypedefDecl 0x55d75a311ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55d75a2ab040 'signed char'
|-TypedefDecl 0x55d75a311f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55d75a2ab0e0 'unsigned char'
|-TypedefDecl 0x55d75a311fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55d75a2ab060 'short'
|-TypedefDecl 0x55d75a312048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55d75a2ab100 'unsigned short'
|-TypedefDecl 0x55d75a3120b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55d75a2ab080 'int'
|-TypedefDecl 0x55d75a312128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55d75a2ab120 'unsigned int'
|-TypedefDecl 0x55d75a312198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55d75a2ab0a0 'long'
|-TypedefDecl 0x55d75a312208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55d75a2ab140 'unsigned long'
|-TypedefDecl 0x55d75a312278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55d75a2ab0a0 'long'
|-TypedefDecl 0x55d75a3122e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55d75a2ab140 'unsigned long'
|-TypedefDecl 0x55d75a312358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55d75a2ab140 'unsigned long'
|-TypedefDecl 0x55d75a3123c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55d75a2ab120 'unsigned int'
|-TypedefDecl 0x55d75a312438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55d75a2ab120 'unsigned int'
|-TypedefDecl 0x55d75a3124a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55d75a2ab140 'unsigned long'
|-TypedefDecl 0x55d75a312518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55d75a2ab140 'unsigned long'
|-TypedefDecl 0x55d75a312588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55d75a2ab120 'unsigned int'
|-TypedefDecl 0x55d75a3125f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55d75a2ab140 'unsigned long'
|-TypedefDecl 0x55d75a312668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55d75a2ab0a0 'long'
|-TypedefDecl 0x55d75a3126d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55d75a2ab0a0 'long'
|-TypedefDecl 0x55d75a312748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55d75a2ab080 'int'
|-RecordDecl 0x55d75a3127a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55d75a312918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55d75a3129d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55d75a312970 'struct __fsid_t' sugar
|   `-RecordType 0x55d75a312820 '__fsid_t'
|     `-Record 0x55d75a3127a0 ''
|-TypedefDecl 0x55d75a312a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55d75a2ab0a0 'long'
|-TypedefDecl 0x55d75a312ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55d75a2ab140 'unsigned long'
|-TypedefDecl 0x55d75a312b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55d75a2ab140 'unsigned long'
|-TypedefDecl 0x55d75a312ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55d75a2ab120 'unsigned int'
|-TypedefDecl 0x55d75a312c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55d75a2ab0a0 'long'
|-TypedefDecl 0x55d75a312c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55d75a2ab120 'unsigned int'
|-TypedefDecl 0x55d75a312cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55d75a2ab0a0 'long'
|-TypedefDecl 0x55d75a312d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55d75a2ab080 'int'
|-TypedefDecl 0x55d75a312dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55d75a2ab080 'int'
|-TypedefDecl 0x55d75a312e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55d75a2ab080 'int'
|-TypedefDecl 0x55d75a312eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55d75a2ab7a0 'void *'
|   `-BuiltinType 0x55d75a2aafe0 'void'
|-TypedefDecl 0x55d75a312f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55d75a2ab0a0 'long'
|-TypedefDecl 0x55d75a312f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55d75a2ab0a0 'long'
|-TypedefDecl 0x55d75a313008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55d75a2ab0a0 'long'
|-TypedefDecl 0x55d75a313078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55d75a2ab140 'unsigned long'
|-TypedefDecl 0x55d75a3130e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55d75a2ab140 'unsigned long'
|-TypedefDecl 0x55d75a313158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55d75a2ab140 'unsigned long'
|-TypedefDecl 0x55d75a3131c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55d75a2ab140 'unsigned long'
|-TypedefDecl 0x55d75a313238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55d75a2ab0a0 'long'
|-TypedefDecl 0x55d75a3132a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55d75a2ab0a0 'long'
|-TypedefDecl 0x55d75a313318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55d75a2ab0a0 'long'
|-TypedefDecl 0x55d75a313388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55d75a2ab140 'unsigned long'
|-TypedefDecl 0x55d75a313418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55d75a3133e0 '__off64_t' sugar
|   |-Typedef 0x55d75a3126d8 '__off64_t'
|   `-BuiltinType 0x55d75a2ab0a0 'long'
|-TypedefDecl 0x55d75a313510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55d75a3134d0 '__quad_t *'
|   `-TypedefType 0x55d75a313470 '__quad_t' sugar
|     |-Typedef 0x55d75a312278 '__quad_t'
|     `-BuiltinType 0x55d75a2ab0a0 'long'
|-TypedefDecl 0x55d75a313580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55d75a2abc20 'char *'
|   `-BuiltinType 0x55d75a2ab020 'char'
|-TypedefDecl 0x55d75a3135f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55d75a2ab0a0 'long'
|-TypedefDecl 0x55d75a313660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55d75a2ab120 'unsigned int'
|-FunctionDecl 0x55d75a3137a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55d75a3136d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55d75a313ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55d75a313ad8 <line:72:3, col:34>
|     `-CallExpr 0x55d75a313a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55d75a313a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55d75a313a10 <col:10> '<builtin fn type>' Function 0x55d75a313880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55d75a313ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55d75a313a30 <col:29> 'unsigned int' lvalue ParmVar 0x55d75a3136d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55d75a313880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55d75a313920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55d75a313990 <col:10> Implicit
| `-ConstAttr 0x55d75a3139e8 <col:10> Implicit
|-FunctionDecl 0x55d75a313c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55d75a313b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55d75a313f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55d75a313f48 <line:77:3, col:34>
|     `-CallExpr 0x55d75a313f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55d75a313ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55d75a313e78 <col:10> '<builtin fn type>' Function 0x55d75a313ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55d75a313f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55d75a313e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55d75a313b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55d75a313ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55d75a313d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55d75a313df8 <col:10> Implicit
| `-ConstAttr 0x55d75a313e50 <col:10> Implicit
|-TypedefDecl 0x55d75a313f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55d75a2ab140 'unsigned long'
|-TypedefDecl 0x55d75a314018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55d75a313fe0 '__time_t' sugar
|   |-Typedef 0x55d75a312c18 '__time_t'
|   `-BuiltinType 0x55d75a2ab0a0 'long'
|-RecordDecl 0x55d75a314070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55d75a314128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55d75a3141b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55d75a314248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55d75a314210 '__pid_t' sugar
|   |-Typedef 0x55d75a312748 '__pid_t'
|   `-BuiltinType 0x55d75a2ab080 'int'
|-RecordDecl 0x55d75a3142a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55d75a314360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55d75a3143b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55d75a314470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55d75a3144d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55d75a2ab140 'unsigned long'
|-RecordDecl 0x55d75a314530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55d75a3147c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55d75a3168b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55d75a314810 'struct cpu_set_t' sugar
|   `-RecordType 0x55d75a3145b0 'cpu_set_t'
|     `-Record 0x55d75a314530 ''
|-FunctionDecl 0x55d75a316b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55d75a316958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55d75a316a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55d75a316c38 <line:107:19>
|-FunctionDecl 0x55d75a316e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55d75a316ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55d75a316eb8 <col:69>
|-FunctionDecl 0x55d75a317030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55d75a316f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55d75a3170d8 <col:64>
|-FunctionDecl 0x55d75a317398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55d75a317140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55d75a317278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55d75a317448 <line:113:22>
|-FunctionDecl 0x55d75a3176c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55d75a3174b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55d75a3175a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55d75a317778 <col:88>
|-FunctionDecl 0x55d75a317a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55d75a3177e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55d75a3178c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55d75a317950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55d75a317b50 <col:62>
|-FunctionDecl 0x55d75a317cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55d75a317bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55d75a317d70 <col:63>
|-FunctionDecl 0x55d75a317e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55d75a317f38 <col:47>
|-FunctionDecl 0x55d75a318040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55d75a317fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55d75a3180e8 <col:69>
|-FunctionDecl 0x55d75a3181f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55d75a318158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55d75a318298 <col:69>
|-FunctionDecl 0x55d75a318558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55d75a318300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55d75a318438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55d75a318608 <col:88>
|-TypedefDecl 0x55d75a318698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55d75a318660 '__clock_t' sugar
|   |-Typedef 0x55d75a312a58 '__clock_t'
|   `-BuiltinType 0x55d75a2ab0a0 'long'
|-TypedefDecl 0x55d75a318728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55d75a3186f0 '__clockid_t' sugar
|   |-Typedef 0x55d75a312e48 '__clockid_t'
|   `-BuiltinType 0x55d75a2ab080 'int'
|-TypedefDecl 0x55d75a3187b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55d75a318780 '__timer_t' sugar
|   |-Typedef 0x55d75a312eb8 '__timer_t'
|   `-PointerType 0x55d75a2ab7a0 'void *'
|     `-BuiltinType 0x55d75a2aafe0 'void'
|-RecordDecl 0x55d75a318810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55d75a3188e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55d75a318950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55d75a3189b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55d75a318a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55d75a318a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55d75a318af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55d75a318b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55d75a318bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55d75a318c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55d75a318c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55d75a318cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55d75a318d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55d75a318e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55d75a318e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55d75a318f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55d75a319100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55d75a3191a0 <col:45>
|-FunctionDecl 0x55d75a319380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55d75a319270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55d75a319428 <col:54>
|-FunctionDecl 0x55d75a319628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55d75a319490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55d75a319508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55d75a3196d8 <line:157:22>
| `-ConstAttr 0x55d75a319730 <col:63>
|-FunctionDecl 0x55d75a31a560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55d75a319828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55d75a31a608 <col:56>
|-FunctionDecl 0x55d75a31a9b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55d75a31a678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55d75a31a6f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55d75a31a770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55d75a31a868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55d75a31aa70 <col:54>
|-RecordDecl 0x55d75a31aac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55d75a31ab78 parent 0x55d75a2aaf88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55d75a31add8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55d75a31ae78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55d75a31aee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55d75a31af48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55d75a31b038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55d75a31b158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55d75a31b100 'struct __locale_struct *'
|   `-ElaboratedType 0x55d75a31b090 'struct __locale_struct' sugar
|     `-RecordType 0x55d75a31ab50 'struct __locale_struct'
|       `-Record 0x55d75a31aac8 '__locale_struct'
|-TypedefDecl 0x55d75a31b208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55d75a31b1d0 '__locale_t' sugar
|   |-Typedef 0x55d75a31b158 '__locale_t'
|   `-PointerType 0x55d75a31b100 'struct __locale_struct *'
|     `-ElaboratedType 0x55d75a31b090 'struct __locale_struct' sugar
|       `-RecordType 0x55d75a31ab50 'struct __locale_struct'
|         `-Record 0x55d75a31aac8 '__locale_struct'
|-FunctionDecl 0x55d75a31b610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55d75a31b278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55d75a31b2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55d75a31b370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55d75a31b400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55d75a31b478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55d75a31b6d8 <col:40>
|-FunctionDecl 0x55d75a31b8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55d75a31b7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55d75a31b970 <col:66>
|-FunctionDecl 0x55d75a31ba80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55d75a31b9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55d75a31bb28 <col:69>
|-FunctionDecl 0x55d75a31bd58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55d75a31bb90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55d75a31bc20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55d75a31be08 <col:52>
|-FunctionDecl 0x55d75a31bfb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55d75a31be70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55d75a31bf00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55d75a31c060 <col:55>
|-FunctionDecl 0x55d75a31c1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55d75a31c0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55d75a31c2a0 <col:62>
|-FunctionDecl 0x55d75a31c418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55d75a31c308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55d75a31c4c0 <col:60>
|-FunctionDecl 0x55d75a31c718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55d75a31c578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55d75a31c5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55d75a31c7c8 <col:44>
|-FunctionDecl 0x55d75a31c9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55d75a31c830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55d75a31c8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55d75a31ca88 <col:49>
|-VarDecl 0x55d75a31cb88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55d75a31cc08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55d75a31cc88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55d75a31cd50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55d75a31ce80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55d75a31cf20 <col:42>
|-VarDecl 0x55d75a31cf90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55d75a31d010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55d75a31d198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55d75a31d088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55d75a31d240 <col:57>
|-FunctionDecl 0x55d75a31d350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55d75a31d2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55d75a31d3f8 <col:56>
|-FunctionDecl 0x55d75a31e540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55d75a31d478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55d75a31e5e8 <col:59>
|-FunctionDecl 0x55d75a31e6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55d75a31e658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55d75a31e798 <col:48>
| `-ConstAttr 0x55d75a31e7f0 <col:89>
|-FunctionDecl 0x55d75a31ea58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55d75a31e8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55d75a31e938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55d75a31ecb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55d75a31eb48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55d75a31ebd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55d75a31ed68 <col:88>
|-FunctionDecl 0x55d75a31ef00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55d75a31edd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55d75a31ee60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55d75a31efb0 <col:88>
|-FunctionDecl 0x55d75a31f1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55d75a31f018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55d75a31f0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55d75a31f278 <line:208:22>
|-FunctionDecl 0x55d75a31f5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55d75a31f2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55d75a31f360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55d75a31f3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55d75a31f480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55d75a31f8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55d75a31f6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55d75a31f7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55d75a31f998 <col:85>
|-FunctionDecl 0x55d75a31fd88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55d75a31fa00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55d75a31fb38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55d75a31fc40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55d75a31fe40 <col:52>
|-FunctionDecl 0x55d75a31ffb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55d75a31fea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55d75a320060 <col:61>
|-FunctionDecl 0x55d75a320560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55d75a3200c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55d75a320148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55d75a320278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55d75a320368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55d75a320620 <col:62>
|-FunctionDecl 0x55d75a320838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55d75a320688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55d75a320718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55d75a3208e8 <line:221:22>
|-FunctionDecl 0x55d75a3209e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55d75a320950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55d75a320a90 <col:65>
|-TypedefDecl 0x55d75a320b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55d75a2ab140 'unsigned long'
|-RecordDecl 0x55d75a320b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55d75a320ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55d75a320d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55d75a320db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55d75a320d60 'union pthread_attr_t' sugar
|   `-RecordType 0x55d75a320be0 'union pthread_attr_t'
|     `-Record 0x55d75a320b58 'pthread_attr_t'
|-RecordDecl 0x55d75a320e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55d75a320f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55d75a321000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55d75a3210b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55d75a321050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55d75a320e90 'struct __pthread_internal_list'
|     `-Record 0x55d75a320e10 '__pthread_internal_list'
|-RecordDecl 0x55d75a321120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55d75a3211c8 parent 0x55d75a2aaf88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55d75a3212a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55d75a321308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55d75a321370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55d75a3213d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55d75a321440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55d75a3214a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55d75a325580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55d75a325630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55d75a325720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55d75a325788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55d75a325910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55d75a3258b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55d75a3211a0 'pthread_mutex_t'
|     `-Record 0x55d75a321120 ''
|-RecordDecl 0x55d75a325980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55d75a325ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55d75a325b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55d75a325be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55d75a325b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55d75a325a00 'pthread_mutexattr_t'
|     `-Record 0x55d75a325980 ''
|-RecordDecl 0x55d75a325c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55d75a325cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55d75a325dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55d75a325e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55d75a325e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55d75a325ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55d75a325f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55d75a325fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55d75a326030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55d75a326098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55d75a326150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix001_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix001_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55d75a326240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55d75a3262a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55d75a3263e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55d75a326380 'union pthread_cond_t' sugar
|   `-RecordType 0x55d75a325cd0 'pthread_cond_t'
|     `-Record 0x55d75a325c50 ''
|-RecordDecl 0x55d75a326450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55d75a326590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55d75a3265f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55d75a3266b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55d75a326650 'union pthread_condattr_t' sugar
|   `-RecordType 0x55d75a3264d0 'pthread_condattr_t'
|     `-Record 0x55d75a326450 ''
|-TypedefDecl 0x55d75a326738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55d75a2ab120 'unsigned int'
|-TypedefDecl 0x55d75a3267a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55d75a2ab080 'int'
|-RecordDecl 0x55d75a326800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55d75a3268a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55d75a326970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55d75a3269d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55d75a326a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55d75a326aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55d75a326b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55d75a326b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55d75a326be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55d75a326c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55d75a326cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55d75a326d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55d75a326d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55d75a326e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix001_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix001_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55d75a326ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55d75a326f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55d75a327090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55d75a327030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55d75a326880 'pthread_rwlock_t'
|     `-Record 0x55d75a326800 ''
|-RecordDecl 0x55d75a327100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55d75a327240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55d75a3272a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55d75a327360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55d75a327300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55d75a327180 'pthread_rwlockattr_t'
|     `-Record 0x55d75a327100 ''
|-TypedefDecl 0x55d75a3273e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55d75a2ab084 'volatile int' volatile
|   `-BuiltinType 0x55d75a2ab080 'int'
|-RecordDecl 0x55d75a327440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55d75a3295b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55d75a329618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55d75a3296d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55d75a329670 'union pthread_barrier_t' sugar
|   `-RecordType 0x55d75a3274c0 'pthread_barrier_t'
|     `-Record 0x55d75a327440 ''
|-RecordDecl 0x55d75a329740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55d75a329840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55d75a3298a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55d75a329960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55d75a329900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55d75a3297c0 'pthread_barrierattr_t'
|     `-Record 0x55d75a329740 ''
|-TypedefDecl 0x55d75a329a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55d75a329a10 'long [8]' 8 
|   `-BuiltinType 0x55d75a2ab0a0 'long'
|-EnumDecl 0x55d75a329ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55d75a329b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55d75a329be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55d75a329c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55d75a329d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55d75a329d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55d75a329da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55d75a329df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55d75a329e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55d75a329e68 <col:26> 'int'
| |   `-DeclRefExpr 0x55d75a329e48 <col:26> 'int' EnumConstant 0x55d75a329d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55d75a329f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55d75a329ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x55d75a329ed0 <col:29> 'int' EnumConstant 0x55d75a329d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55d75a329f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55d75a329f78 <col:30> 'int'
| |   `-DeclRefExpr 0x55d75a329f58 <col:30> 'int' EnumConstant 0x55d75a329da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55d75a32a018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55d75a32a000 <col:27> 'int'
|     `-DeclRefExpr 0x55d75a329fe0 <col:27> 'int' EnumConstant 0x55d75a329e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55d75a32a068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55d75a32a138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55d75a32a1c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55d75a32a1a8 <col:30> 'int'
| |   `-DeclRefExpr 0x55d75a32a188 <col:30> 'int' EnumConstant 0x55d75a32a138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55d75a32a210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55d75a32a298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55d75a32a280 <col:29> 'int'
|     `-DeclRefExpr 0x55d75a32a260 <col:29> 'int' EnumConstant 0x55d75a32a210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55d75a32a2e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55d75a32a3b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55d75a32a408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55d75a32a458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55d75a32a4a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55d75a32a5c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55d75a32a610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55d75a32a660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55d75a32a6e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55d75a32a6d0 <col:31> 'int'
|     `-DeclRefExpr 0x55d75a32a6b0 <col:31> 'int' EnumConstant 0x55d75a32a5c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55d75a32a738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55d75a32a808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55d75a32a858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55d75a32a8a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55d75a32a978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55d75a32a9c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55d75a32aa18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55d75a32aae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55d75a32ab38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55d75a32ab88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55d75a32adc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55d75a32ae30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55d75a32ae98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55d75a32afb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55d75a32b008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55d75a32b0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55d75a32b128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55d75a32b178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55d75a32b248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55d75a32b298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55d75a32b8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55d75a32b390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55d75a32b4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d75a32b6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55d75a32b760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55d75a32b9b8 <col:47>
| |-NonNullAttr 0x55d75a32ba10 <col:77, col:94> 1 3
| `-CallbackAttr 0x55d75a32ba48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55d75a32bb70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55d75a32baa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55d75a32bdc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55d75a32bc28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55d75a32bca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55d75a32bf98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55d75a32be88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55d75a32c040 <col:60>
|-FunctionDecl 0x55d75a32c190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55d75a32c230 <col:54>
| `-ConstAttr 0x55d75a32c288 <col:95>
|-FunctionDecl 0x55d75a32c458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55d75a32c2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55d75a32c338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55d75a32c508 <line:394:19>
| `-ConstAttr 0x55d75a32c560 <col:60>
|-FunctionDecl 0x55d75a32cf68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55d75a32ce30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55d75a32d010 <col:71>
| `-NonNullAttr 0x55d75a32d068 <col:112, col:126> 1
|-FunctionDecl 0x55d75a32d170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55d75a32d0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55d75a32d218 <line:397:22>
| `-NonNullAttr 0x55d75a32d270 <col:63, col:77> 1
|-FunctionDecl 0x55d75a32d498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55d75a32d2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55d75a32d338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55d75a32d548 <line:400:22>
| `-NonNullAttr 0x55d75a32d5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d75a32d7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55d75a32d5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d75a32d668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55d75a32d858 <line:403:22>
| `-NonNullAttr 0x55d75a32d8b0 <col:63, col:77> 1
|-FunctionDecl 0x55d75a32db08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55d75a32d8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55d75a32d9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55d75a32dbb8 <line:406:22>
| `-NonNullAttr 0x55d75a32dc10 <col:63, col:80> 1 2
|-FunctionDecl 0x55d75a32ee48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55d75a32dc58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d75a32dcd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55d75a32eef8 <line:409:22>
| `-NonNullAttr 0x55d75a32ef50 <col:63, col:77> 1
|-FunctionDecl 0x55d75a32f188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55d75a32ef98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d75a32f028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55d75a32f238 <line:412:22>
| `-NonNullAttr 0x55d75a32f290 <col:63, col:80> 1 2
|-FunctionDecl 0x55d75a32f4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55d75a32f2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d75a32f368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55d75a32f578 <col:37>
| `-NonNullAttr 0x55d75a32f5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x55d75a32f7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d75a32f618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d75a32f698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55d75a32f868 <line:418:22>
| `-NonNullAttr 0x55d75a32f8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d75a32fa48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55d75a32f908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d75a32f988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55d75a32faf8 <line:420:22>
| `-NonNullAttr 0x55d75a32fb50 <col:63, col:77> 1
|-FunctionDecl 0x55d75a32fcf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d75a32fb98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d75a32fc18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55d75a32fda8 <line:423:22>
| `-NonNullAttr 0x55d75a330e30 <col:63, col:80> 1 2
|-FunctionDecl 0x55d75a330fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55d75a330e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d75a330ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55d75a331068 <line:426:22>
| `-NonNullAttr 0x55d75a3310c0 <col:63, col:77> 1
|-FunctionDecl 0x55d75a331268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d75a331108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d75a331188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55d75a331318 <line:429:22>
| `-NonNullAttr 0x55d75a331370 <col:63, col:80> 1 2
|-FunctionDecl 0x55d75a3314f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55d75a3313b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d75a331438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55d75a3315a8 <line:431:22>
| `-NonNullAttr 0x55d75a331600 <col:63, col:77> 1
|-FunctionDecl 0x55d75a331828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55d75a331648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d75a3316c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55d75a3318d8 <line:434:22>
| |-NonNullAttr 0x55d75a331930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55d75a331968 <col:100> "" ""
|-FunctionDecl 0x55d75a331b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55d75a3319b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d75a331a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55d75a331c28 <line:437:22>
| |-NonNullAttr 0x55d75a331c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x55d75a331cb8 <col:97> "" ""
|-FunctionDecl 0x55d75a331eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55d75a331d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d75a331d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55d75a331f68 <line:440:22>
| `-NonNullAttr 0x55d75a331fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d75a332140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55d75a332008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d75a332080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55d75a3321f0 <line:443:22>
| `-NonNullAttr 0x55d75a332248 <col:63, col:77> 1
|-FunctionDecl 0x55d75a332538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55d75a332298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d75a332318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55d75a332390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55d75a3325f0 <line:447:22>
| `-NonNullAttr 0x55d75a332648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55d75a3328f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55d75a3326a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d75a332720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55d75a332798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55d75a3329b0 <col:43>
| `-NonNullAttr 0x55d75a332a08 <col:84, col:98> 1
|-FunctionDecl 0x55d75a332cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55d75a332a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55d75a332ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55d75a332b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55d75a332d80 <line:452:22>
| `-NonNullAttr 0x55d75a332dd8 <col:63, col:77> 3
|-FunctionDecl 0x55d75a3330e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55d75a332e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55d75a332ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55d75a332f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55d75a3331a0 <line:456:22>
| `-NonNullAttr 0x55d75a3331f8 <col:63, col:80> 2 3
|-FunctionDecl 0x55d75a3333e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55d75a333248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55d75a3332c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55d75a333498 <line:458:22>
|-FunctionDecl 0x55d75a333868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55d75a333560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55d75a333700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55d75a333918 <col:52, col:69> 1 2
|-FunctionDecl 0x55d75a333ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55d75a3339a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55d75a333a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55d75a333ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55d75a333b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55d75a333c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55d75a333e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55d75a333d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55d75a333fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55d75a334040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55d75a3340e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55d75a3341d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55d75a334240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55d75a334410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix001_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55d75a334508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55d75a3345c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55d75a334560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55d75a3340c0 '__pthread_unwind_buf_t'
| |   `-Record 0x55d75a334040 ''
| `-AlignedAttr 0x55d75a334618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55d75a334690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55d75a3347f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55d75a334858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55d75a3348c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55d75a334928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55d75a334b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55d75a334a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55d75a334c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55d75a334be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55d75a334e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55d75a334d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55d75a334f18 <line:487:22>
|-RecordDecl 0x55d75a334f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55d75a335288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55d75a3350e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55d75a335168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55d75a335338 <col:86>
| `-ReturnsTwiceAttr 0x55d75a335390 <col:12> Implicit
|-FunctionDecl 0x55d75a3356b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55d75a335460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55d75a335570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55d75a335768 <line:493:22>
| `-NonNullAttr 0x55d75a3357c0 <col:63, col:77> 1
|-FunctionDecl 0x55d75a335938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55d75a335808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55d75a3359e0 <line:495:22>
| `-NonNullAttr 0x55d75a335a38 <col:63, col:77> 1
|-FunctionDecl 0x55d75a335b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55d75a335a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55d75a335be8 <line:497:22>
| `-NonNullAttr 0x55d75a335c40 <col:52, col:66> 1
|-FunctionDecl 0x55d75a335d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55d75a335c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55d75a335de8 <line:499:22>
| `-NonNullAttr 0x55d75a335e40 <col:52, col:66> 1
|-FunctionDecl 0x55d75a336088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55d75a335e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55d75a335f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55d75a336138 <col:36>
| `-NonNullAttr 0x55d75a336190 <col:66, col:83> 1 2
|-FunctionDecl 0x55d75a336290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55d75a3361d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55d75a336338 <line:504:22>
| `-NonNullAttr 0x55d75a336390 <col:52, col:66> 1
|-FunctionDecl 0x55d75a336628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d75a336440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55d75a3364c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55d75a3366d8 <line:508:22>
| `-NonNullAttr 0x55d75a336730 <col:63, col:80> 1 2
|-FunctionDecl 0x55d75a3369f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55d75a336778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55d75a3367f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55d75a336878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55d75a336ab0 <line:512:22>
| `-NonNullAttr 0x55d75a336b08 <col:63, col:80> 1 3
|-FunctionDecl 0x55d75a336c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55d75a336b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55d75a336cb8 <line:514:22>
| `-NonNullAttr 0x55d75a336d10 <col:63, col:77> 1
|-FunctionDecl 0x55d75a336f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55d75a336dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55d75a336fe0 <line:516:22>
| `-NonNullAttr 0x55d75a337038 <col:63, col:77> 1
|-FunctionDecl 0x55d75a337140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55d75a337088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55d75a3371e8 <line:518:22>
| `-NonNullAttr 0x55d75a337240 <col:63, col:77> 1
|-FunctionDecl 0x55d75a337468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d75a337288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55d75a337308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55d75a337518 <line:522:22>
| `-NonNullAttr 0x55d75a337570 <col:63, col:80> 1 2
|-FunctionDecl 0x55d75a337778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55d75a3375b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d75a337638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55d75a337828 <line:525:22>
| `-NonNullAttr 0x55d75a337880 <col:63, col:77> 1
|-FunctionDecl 0x55d75a337a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d75a3378c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55d75a337948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55d75a337ad8 <line:528:22>
| `-NonNullAttr 0x55d75a337b30 <col:63, col:80> 1 2
|-FunctionDecl 0x55d75a337cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55d75a337b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d75a337bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55d75a337d68 <line:530:22>
| `-NonNullAttr 0x55d75a337dc0 <col:63, col:77> 1
|-FunctionDecl 0x55d75a338f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d75a337e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55d75a338eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55d75a339040 <line:534:22>
| `-NonNullAttr 0x55d75a339098 <col:63, col:80> 1 2
|-FunctionDecl 0x55d75a339228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55d75a3390e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d75a339168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55d75a3392d8 <line:537:22>
| `-NonNullAttr 0x55d75a339330 <col:63, col:77> 1
|-FunctionDecl 0x55d75a3394d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d75a339378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55d75a3393f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55d75a339588 <line:541:22>
| `-NonNullAttr 0x55d75a3395e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d75a339768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55d75a339628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d75a3396a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55d75a339818 <line:544:22>
| `-NonNullAttr 0x55d75a339870 <col:63, col:77> 1
|-FunctionDecl 0x55d75a339a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55d75a3398b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d75a339938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55d75a339b08 <line:547:22>
| `-NonNullAttr 0x55d75a339b60 <col:63, col:80> 1 2
|-FunctionDecl 0x55d75a339ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55d75a339ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d75a339c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55d75a339d98 <line:550:22>
| `-NonNullAttr 0x55d75a339df0 <col:63, col:77> 1
|-FunctionDecl 0x55d75a33b168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55d75a33af10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55d75a33b020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55d75a33b218 <col:29>
| `-NonNullAttr 0x55d75a33b270 <col:70, col:84> 1
|-FunctionDecl 0x55d75a33b3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d75a33b2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d75a33b490 <line:555:22>
| `-NonNullAttr 0x55d75a33b4e8 <col:63, col:77> 1
|-FunctionDecl 0x55d75a33b5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d75a33b538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d75a33b698 <line:557:22>
| `-NonNullAttr 0x55d75a33b6f0 <col:52, col:66> 1
|-FunctionDecl 0x55d75a33b7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d75a33b738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d75a33b898 <line:559:19>
| `-NonNullAttr 0x55d75a33b8f0 <col:49, col:63> 1
|-FunctionDecl 0x55d75a33bb28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55d75a33b938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55d75a33b9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55d75a33bbd8 <col:39>
| `-NonNullAttr 0x55d75a33bc30 <col:69, col:86> 1 2
|-FunctionDecl 0x55d75a33bd30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d75a33bc78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d75a33bdd8 <line:564:22>
| `-NonNullAttr 0x55d75a33be30 <col:52, col:66> 1
|-FunctionDecl 0x55d75a33bf98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d75a33bee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d75a33c040 <line:566:22>
| `-NonNullAttr 0x55d75a33c098 <col:52, col:66> 1
|-FunctionDecl 0x55d75a33c258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55d75a33c0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55d75a33c178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55d75a33c308 <col:39>
| `-NonNullAttr 0x55d75a33c360 <col:69, col:86> 1 2
|-FunctionDecl 0x55d75a33c460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d75a33c3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d75a33c508 <line:571:22>
| `-NonNullAttr 0x55d75a33c560 <col:52, col:66> 1
|-FunctionDecl 0x55d75a33c748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55d75a33c610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55d75a33c7f0 <line:573:22>
| `-NonNullAttr 0x55d75a33c848 <col:63, col:77> 1
|-FunctionDecl 0x55d75a33c950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55d75a33c898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55d75a33c9f8 <line:575:22>
| `-NonNullAttr 0x55d75a33ca50 <col:63, col:77> 1
|-FunctionDecl 0x55d75a33cc78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d75a33ca98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55d75a33cb18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55d75a33cd28 <line:579:22>
| `-NonNullAttr 0x55d75a33cd80 <col:63, col:80> 1 2
|-FunctionDecl 0x55d75a33cfa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55d75a33cdc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55d75a33ce48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55d75a33d058 <line:582:22>
| `-NonNullAttr 0x55d75a33d0b0 <col:63, col:77> 1
|-FunctionDecl 0x55d75a33d258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d75a33d0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55d75a33d178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55d75a33d308 <line:586:22>
| `-NonNullAttr 0x55d75a33d360 <col:63, col:80> 1 2
|-FunctionDecl 0x55d75a33d4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55d75a33d3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55d75a33d428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55d75a33d598 <col:36>
| `-NonNullAttr 0x55d75a33d5f0 <col:77, col:91> 1
|-FunctionDecl 0x55d75a33d928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55d75a33d6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55d75a33d7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55d75a33d9d8 <line:591:22>
| `-NonNullAttr 0x55d75a33da30 <col:63, col:77> 1
|-FunctionDecl 0x55d75a33dba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55d75a33da78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55d75a33dc50 <line:593:22>
| `-NonNullAttr 0x55d75a33dca8 <col:63, col:77> 1
|-FunctionDecl 0x55d75a33ddb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55d75a33dcf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55d75a33de58 <line:595:22>
| `-NonNullAttr 0x55d75a33deb0 <col:52, col:66> 1
|-FunctionDecl 0x55d75a33dfc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55d75a33df10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55d75a33e070 <line:597:22>
| `-NonNullAttr 0x55d75a33e0c8 <col:52, col:66> 1
|-FunctionDecl 0x55d75a33e2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55d75a33e118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55d75a33e190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55d75a33e3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55d75a33e6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55d75a33e428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55d75a33e4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55d75a33e530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55d75a33e790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55d75a33e9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55d75a33e870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55d75a33ea50 <line:606:22>
| `-NonNullAttr 0x55d75a33eaa8 <col:63, col:77> 1
|-FunctionDecl 0x55d75a33ebb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55d75a33eaf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55d75a33ec58 <line:608:22>
| `-NonNullAttr 0x55d75a33ecb0 <col:63, col:77> 1
|-FunctionDecl 0x55d75a33ef10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d75a33ecf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55d75a33ed78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55d75a33efc0 <line:612:22>
| `-NonNullAttr 0x55d75a33f018 <col:63, col:80> 1 2
|-FunctionDecl 0x55d75a33f228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55d75a33f068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55d75a33f0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55d75a33f2d8 <col:37>
| `-NonNullAttr 0x55d75a33f330 <col:78, col:92> 1
|-FunctionDecl 0x55d75a33f548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55d75a33f378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55d75a33f420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55d75a33f5f8 <line:618:22>
| `-NonNullAttr 0x55d75a33f650 <col:63, col:80> 1 2
|-FunctionDecl 0x55d75a33f818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55d75a33f698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55d75a33f710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55d75a33f8c8 <line:621:22>
| `-NonNullAttr 0x55d75a33f920 <col:63, col:77> 1
|-FunctionDecl 0x55d75a33fbc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55d75a33fa00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55d75a33fa80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55d75a33fc78 <line:623:22>
| `-NonNullAttr 0x55d75a33fcd0 <col:63, col:77> 1
|-FunctionDecl 0x55d75a33fe48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55d75a33fd18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55d75a33ff20 <line:625:22>
| `-NonNullAttr 0x55d75a33ff78 <col:63, col:77> 1
|-FunctionDecl 0x55d75a340080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55d75a33ffc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55d75a340128 <line:627:22>
| `-NonNullAttr 0x55d75a340180 <col:52, col:66> 1
|-FunctionDecl 0x55d75a340280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55d75a3401c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55d75a340328 <line:629:22>
| `-NonNullAttr 0x55d75a340380 <col:52, col:66> 1
|-FunctionDecl 0x55d75a340480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55d75a3403c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55d75a340528 <line:631:22>
| `-NonNullAttr 0x55d75a340580 <col:52, col:66> 1
|-FunctionDecl 0x55d75a340958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55d75a340660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55d75a340770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55d75a3407f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55d75a340a10 <line:635:22>
| `-NonNullAttr 0x55d75a340a68 <col:63, col:77> 1
|-FunctionDecl 0x55d75a340be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55d75a340ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55d75a340c90 <line:637:22>
| `-NonNullAttr 0x55d75a340ce8 <col:63, col:77> 1
|-FunctionDecl 0x55d75a340df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55d75a340d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55d75a340e98 <line:639:22>
| `-NonNullAttr 0x55d75a340ef0 <col:52, col:66> 1
|-FunctionDecl 0x55d75a3410e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55d75a340fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55d75a341190 <line:641:22>
| `-NonNullAttr 0x55d75a3411e8 <col:63, col:77> 1
|-FunctionDecl 0x55d75a3412f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55d75a341238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55d75a341398 <line:643:22>
| `-NonNullAttr 0x55d75a3413f0 <col:63, col:77> 1
|-FunctionDecl 0x55d75a341618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d75a341438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55d75a3414b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55d75a3416c8 <line:647:22>
| `-NonNullAttr 0x55d75a341720 <col:63, col:80> 1 2
|-FunctionDecl 0x55d75a341928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55d75a341768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55d75a3417e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55d75a3419d8 <line:650:22>
| `-NonNullAttr 0x55d75a341a30 <col:63, col:77> 1
|-FunctionDecl 0x55d75a341d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55d75a341b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55d75a341c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55d75a341e28 <line:653:22>
| `-NonNullAttr 0x55d75a341e80 <col:63, col:77> 1
|-FunctionDecl 0x55d75a341fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55d75a341ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55d75a342090 <col:69>
|-FunctionDecl 0x55d75a342208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55d75a3420f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55d75a3422b0 <col:72>
|-FunctionDecl 0x55d75a3424e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55d75a342318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55d75a3423c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55d75a342598 <col:44>
|-FunctionDecl 0x55d75a3427b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55d75a342600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55d75a342678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55d75a342868 <line:660:22>
| `-NonNullAttr 0x55d75a3428c0 <col:63, col:77> 2
|-FunctionDecl 0x55d75a342d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55d75a3429a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55d75a342ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55d75a342bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55d75a342dc0 <col:47>
|-FunctionDecl 0x55d75a343f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55d75a342e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55d75a3440b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55d75a344020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55d75a344210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55d75a344178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55d75a3442d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55d75a344398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55d75a344458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55d75a344510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55d75a344590 prev 0x55d75a344510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55d75a3445f8 <col:24> 'int' 0
|-VarDecl 0x55d75a344630 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55d75a3446b0 prev 0x55d75a344630 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55d75a344718 <col:27> 'int' 0
|-VarDecl 0x55d75a344750 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x55d75a3447d0 prev 0x55d75a344750 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x55d75a344838 <col:27> 'int' 0
|-VarDecl 0x55d75a344870 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55d75a3448f0 prev 0x55d75a344870 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55d75a344958 <col:27> 'int' 0
|-VarDecl 0x55d75a344990 <line:679:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x55d75a344a10 prev 0x55d75a344990 <line:680:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x55d75a344a78 <col:27> 'int' 0
|-VarDecl 0x55d75a344ab0 <line:681:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55d75a344b30 prev 0x55d75a344ab0 <line:682:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55d75a344b98 <col:27> 'int' 0
|-VarDecl 0x55d75a344bd0 <line:683:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x55d75a344c50 prev 0x55d75a344bd0 <line:684:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x55d75a344cb8 <col:27> 'int' 0
|-VarDecl 0x55d75a344ce8 <line:685:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55d75a344d60 <line:686:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55d75a344de0 <line:687:1, col:5> col:5 used x 'int'
|-VarDecl 0x55d75a344e60 prev 0x55d75a344de0 <line:688:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55d75a344ec8 <col:9> 'int' 0
|-VarDecl 0x55d75a344f70 <line:689:1, col:5> col:5 used y 'int'
|-VarDecl 0x55d75a344ff0 prev 0x55d75a344f70 <line:690:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55d75a345058 <col:9> 'int' 0
|-VarDecl 0x55d75a345088 <line:691:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x55d75a345108 <line:692:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x55d75a345180 <line:693:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x55d75a3451f8 <line:694:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x55d75a345270 <line:695:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x55d75a3452e8 <line:696:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x55d75a345360 <line:697:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x55d75a3453d8 <line:698:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x55d75a345450 <line:699:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x55d75a3454c8 <line:700:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x55d75a345540 <line:701:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x55d75a3455c0 <line:702:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x55d75a345640 <line:703:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x55d75a3456b8 <line:704:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x55d75a345738 <line:705:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x55d75a3457b0 <line:706:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x55d75a345830 <line:707:1, col:5> col:5 used z 'int'
|-VarDecl 0x55d75a3458b0 prev 0x55d75a345830 <line:708:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55d75a345918 <col:9> 'int' 0
|-VarDecl 0x55d75a345948 <line:709:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55d75a3459c0 <line:710:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55d75a345ad8 prev 0x55d75a343f60 <line:711:1, line:728:1> line:711:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55d75a345a40 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55d75a3461d8 <line:712:1, line:728:1>
|   |-CallExpr 0x55d75a345be8 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d75a345bd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a345b80 <col:3> 'void ()' Function 0x55d75a2eb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d75a345c48 <line:714:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55d75a345c08 <col:3> 'int' lvalue Var 0x55d75a3458b0 'z' 'int'
|   | `-IntegerLiteral 0x55d75a345c28 <col:7> 'int' 1
|   |-CallExpr 0x55d75a345ca0 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d75a345c88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a345c68 <col:3> 'void ()' Function 0x55d75a2eb410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d75a345cf8 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d75a345ce0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a345cc0 <col:3> 'void ()' Function 0x55d75a2eb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d75a345d70 <line:717:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55d75a345d18 <col:3> 'int' lvalue Var 0x55d75a3446b0 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55d75a345d58 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d75a345d38 <col:25> 'int' lvalue Var 0x55d75a3458b0 'z' 'int'
|   |-CallExpr 0x55d75a345dc8 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d75a345db0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a345d90 <col:3> 'void ()' Function 0x55d75a2eb410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d75a345e20 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d75a345e08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a345de8 <col:3> 'void ()' Function 0x55d75a2eb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d75a345e98 <line:720:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55d75a345e40 <col:3> 'int' lvalue Var 0x55d75a3447d0 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x55d75a345e80 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d75a345e60 <col:25> 'int' lvalue Var 0x55d75a344e60 'x' 'int'
|   |-CallExpr 0x55d75a345ef0 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d75a345ed8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a345eb8 <col:3> 'void ()' Function 0x55d75a2eb410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d75a345f48 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d75a345f30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a345f10 <col:3> 'void ()' Function 0x55d75a2eb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55d75a345fb8 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d75a345fa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a345f80 <col:3> 'void ()' Function 0x55d75a2eb410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d75a346010 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d75a345ff8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a345fd8 <col:3> 'void ()' Function 0x55d75a2eb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d75a3460c8 <line:725:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55d75a346030 <col:3> 'int' lvalue Var 0x55d75a344590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55d75a3460a8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55d75a346090 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d75a346050 <col:22> 'int' lvalue Var 0x55d75a344590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55d75a346070 <col:41> 'int' 1
|   |-CallExpr 0x55d75a346120 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d75a346108 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a3460e8 <col:3> 'void ()' Function 0x55d75a2eb410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55d75a3461c8 <line:727:3, col:36>
|     `-CallExpr 0x55d75a3461a8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55d75a346190 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55d75a346140 <col:10> 'void *(void)' Function 0x55d75a2eae68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55d75a346310 prev 0x55d75a3440b8 <line:729:1, line:759:1> line:729:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55d75a346278 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55d75a349320 <line:730:1, line:759:1>
|   |-CallExpr 0x55d75a3463f0 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d75a3463d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a3463b8 <col:3> 'void ()' Function 0x55d75a2eb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d75a346450 <line:732:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55d75a346410 <col:3> 'int' lvalue Var 0x55d75a344e60 'x' 'int'
|   | `-IntegerLiteral 0x55d75a346430 <col:7> 'int' 1
|   |-CallExpr 0x55d75a3464a8 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d75a346490 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a346470 <col:3> 'void ()' Function 0x55d75a2eb410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d75a346500 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d75a3464e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a3464c8 <col:3> 'void ()' Function 0x55d75a2eb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d75a346578 <line:735:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55d75a346520 <col:3> 'int' lvalue Var 0x55d75a3448f0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55d75a346560 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d75a346540 <col:25> 'int' lvalue Var 0x55d75a344e60 'x' 'int'
|   |-CallExpr 0x55d75a3465d0 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d75a3465b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a346598 <col:3> 'void ()' Function 0x55d75a2eb410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d75a346628 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d75a346610 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a3465f0 <col:3> 'void ()' Function 0x55d75a2eb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d75a3466d8 <line:738:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a346648 <col:3> '_Bool' lvalue Var 0x55d75a345948 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55d75a3466c0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55d75a3466a0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55d75a346688 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55d75a346668 <col:19> 'void *(void)' Function 0x55d75a2eae68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55d75a346788 <line:739:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a3466f8 <col:3> '_Bool' lvalue Var 0x55d75a3459c0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55d75a346770 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55d75a346750 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55d75a346738 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55d75a346718 <col:19> 'void *(void)' Function 0x55d75a2eae68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55d75a346800 <line:740:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a3467a8 <col:3> '_Bool' lvalue Var 0x55d75a345088 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55d75a3467e8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d75a3467c8 <col:21> '_Bool' lvalue Var 0x55d75a3459c0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55d75a346878 <line:741:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55d75a346820 <col:3> 'int' lvalue Var 0x55d75a345108 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55d75a346860 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d75a346840 <col:15> 'int' lvalue Var 0x55d75a344ff0 'y' 'int'
|   |-BinaryOperator 0x55d75a346cb0 <line:742:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55d75a346898 <col:3> 'int' lvalue Var 0x55d75a344ff0 'y' 'int'
|   | `-ConditionalOperator 0x55d75a346c80 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55d75a346aa8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55d75a3469c8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55d75a3468f0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55d75a3468d8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55d75a3468b8 <col:8> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55d75a3469a8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55d75a346940 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55d75a346928 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55d75a346908 <col:27> '_Bool' lvalue Var 0x55d75a345270 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55d75a346990 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55d75a346978 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55d75a346958 <col:46> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55d75a346a88 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55d75a346a20 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55d75a346a08 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55d75a3469e8 <col:65> '_Bool' lvalue Var 0x55d75a345270 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55d75a346a70 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55d75a346a58 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55d75a346a38 <col:84> '_Bool' lvalue Var 0x55d75a345450 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55d75a346c68 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d75a346ac8 <col:101> 'int' lvalue Var 0x55d75a344ff0 'y' 'int'
|   |   `-ParenExpr 0x55d75a346c48 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55d75a346c18 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55d75a346b88 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55d75a346b40 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55d75a346b28 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55d75a346ae8 <col:106> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55d75a346b70 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55d75a346b58 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55d75a346b08 <col:124> '_Bool' lvalue Var 0x55d75a345270 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55d75a346be8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d75a346ba8 <col:141> 'int' lvalue Var 0x55d75a345640 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55d75a346c00 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d75a346bc8 <col:153> 'int' lvalue Var 0x55d75a345738 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55d75a3471d0 <line:743:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55d75a346cd0 <col:3> 'int' lvalue Var 0x55d75a345640 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55d75a3471a0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55d75a347170 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d75a347158 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d75a346cf0 <col:15> '_Bool' lvalue Var 0x55d75a3459c0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55d75a347188 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d75a346d10 <col:31> 'int' lvalue Var 0x55d75a345640 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55d75a347138 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55d75a347108 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55d75a346f20 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55d75a346e40 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55d75a346d68 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55d75a346d50 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55d75a346d30 <col:45> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55d75a346e20 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55d75a346db8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55d75a346da0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55d75a346d80 <col:64> '_Bool' lvalue Var 0x55d75a345270 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55d75a346e08 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55d75a346df0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55d75a346dd0 <col:83> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55d75a346f00 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55d75a346e98 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55d75a346e80 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55d75a346e60 <col:102> '_Bool' lvalue Var 0x55d75a345270 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55d75a346ee8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55d75a346ed0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55d75a346eb0 <col:121> '_Bool' lvalue Var 0x55d75a345450 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55d75a3470f0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d75a346f40 <col:138> 'int' lvalue Var 0x55d75a345640 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55d75a3470d0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55d75a3470a0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55d75a347010 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55d75a346fc8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55d75a346fb0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55d75a346f60 <col:151> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55d75a346ff8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55d75a346fe0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55d75a346f90 <col:169> '_Bool' lvalue Var 0x55d75a345270 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55d75a347070 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55d75a347030 <col:186> 'int' lvalue Var 0x55d75a345640 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55d75a347088 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55d75a347050 <col:198> 'int' lvalue Var 0x55d75a345640 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55d75a3476e0 <line:744:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55d75a3471f0 <col:3> 'int' lvalue Var 0x55d75a345738 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55d75a3476b0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55d75a347680 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d75a347668 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d75a347210 <col:15> '_Bool' lvalue Var 0x55d75a3459c0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55d75a347698 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d75a347230 <col:31> 'int' lvalue Var 0x55d75a345738 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55d75a347648 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55d75a347618 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55d75a347440 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55d75a347360 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55d75a347288 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55d75a347270 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55d75a347250 <col:45> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55d75a347340 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55d75a3472d8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55d75a3472c0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55d75a3472a0 <col:64> '_Bool' lvalue Var 0x55d75a345270 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55d75a347328 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55d75a347310 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55d75a3472f0 <col:83> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55d75a347420 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55d75a3473b8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55d75a3473a0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55d75a347380 <col:102> '_Bool' lvalue Var 0x55d75a345270 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55d75a347408 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55d75a3473f0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55d75a3473d0 <col:121> '_Bool' lvalue Var 0x55d75a345450 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55d75a347600 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d75a347460 <col:138> 'int' lvalue Var 0x55d75a345738 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55d75a3475e0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55d75a3475b0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55d75a347520 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55d75a3474d8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55d75a3474c0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55d75a347480 <col:151> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55d75a347508 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55d75a3474f0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55d75a3474a0 <col:169> '_Bool' lvalue Var 0x55d75a345270 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55d75a347580 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55d75a347540 <col:186> 'int' lvalue Var 0x55d75a345738 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55d75a347598 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55d75a347560 <col:198> 'int' lvalue Var 0x55d75a345738 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55d75a347c88 <line:745:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a347700 <col:3> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d75a347c70 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d75a347c40 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55d75a347bf8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d75a347be0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d75a347720 <col:20> '_Bool' lvalue Var 0x55d75a3459c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d75a347c28 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d75a347c10 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d75a347740 <col:36> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55d75a347bc0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55d75a347b90 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55d75a347950 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d75a347870 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d75a347798 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d75a347780 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d75a347760 <col:55> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d75a347850 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d75a3477e8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d75a3477d0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d75a3477b0 <col:74> '_Bool' lvalue Var 0x55d75a345270 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55d75a347838 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d75a347820 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d75a347800 <col:93> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d75a347930 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d75a3478c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d75a3478b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d75a347890 <col:112> '_Bool' lvalue Var 0x55d75a345270 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55d75a347918 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d75a347900 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d75a3478e0 <col:131> '_Bool' lvalue Var 0x55d75a345450 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55d75a347b78 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d75a347b60 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d75a347970 <col:148> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55d75a347b40 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55d75a347b10 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55d75a347a30 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d75a3479e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d75a3479d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d75a347990 <col:166> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d75a347a18 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d75a347a00 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d75a3479b0 <col:184> '_Bool' lvalue Var 0x55d75a345270 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55d75a347ac8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d75a347a80 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d75a347a50 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d75a347af8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55d75a347ae0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55d75a347aa8 <col:212> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d75a348260 <line:746:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a347ca8 <col:3> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d75a348248 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d75a348218 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55d75a3481d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d75a3481b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d75a347cc8 <col:20> '_Bool' lvalue Var 0x55d75a3459c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d75a348200 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d75a3481e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d75a347ce8 <col:36> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55d75a348198 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55d75a348168 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55d75a347ef8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d75a347e18 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d75a347d40 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d75a347d28 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d75a347d08 <col:55> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d75a347df8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d75a347d90 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d75a347d78 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d75a347d58 <col:74> '_Bool' lvalue Var 0x55d75a345270 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55d75a347de0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d75a347dc8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d75a347da8 <col:93> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d75a347ed8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d75a347e70 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d75a347e58 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d75a347e38 <col:112> '_Bool' lvalue Var 0x55d75a345270 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55d75a347ec0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d75a347ea8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d75a347e88 <col:131> '_Bool' lvalue Var 0x55d75a345450 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55d75a348150 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d75a348138 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d75a347f18 <col:148> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55d75a348118 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55d75a3480e8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55d75a347fe8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d75a347fa0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d75a347f78 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d75a347f38 <col:166> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d75a347fd0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d75a347fb8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d75a347f58 <col:184> '_Bool' lvalue Var 0x55d75a345270 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55d75a3480b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d75a348038 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d75a348008 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d75a3480d0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55d75a348090 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55d75a348060 <col:219> 'int' 0
|   |-BinaryOperator 0x55d75a348808 <line:747:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a348280 <col:3> '_Bool' lvalue Var 0x55d75a345270 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55d75a3487f0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d75a3487c0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55d75a348778 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d75a348760 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d75a3482a0 <col:20> '_Bool' lvalue Var 0x55d75a3459c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d75a3487a8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d75a348790 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d75a3482c0 <col:36> '_Bool' lvalue Var 0x55d75a345270 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55d75a348740 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55d75a348710 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55d75a3484d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d75a3483f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d75a348318 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d75a348300 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d75a3482e0 <col:55> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d75a3483d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d75a348368 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d75a348350 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d75a348330 <col:74> '_Bool' lvalue Var 0x55d75a345270 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55d75a3483b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d75a3483a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d75a348380 <col:93> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d75a3484b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d75a348448 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d75a348430 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d75a348410 <col:112> '_Bool' lvalue Var 0x55d75a345270 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55d75a348498 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d75a348480 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d75a348460 <col:131> '_Bool' lvalue Var 0x55d75a345450 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55d75a3486f8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d75a3486e0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d75a3484f0 <col:148> '_Bool' lvalue Var 0x55d75a345270 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55d75a3486c0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55d75a348690 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55d75a3485b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d75a348568 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d75a348550 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d75a348510 <col:166> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d75a348598 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d75a348580 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d75a348530 <col:184> '_Bool' lvalue Var 0x55d75a345270 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55d75a348648 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d75a348600 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d75a3485d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d75a348678 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55d75a348660 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55d75a348628 <col:212> '_Bool' lvalue Var 0x55d75a345270 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55d75a348dd0 <line:748:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a348828 <col:3> '_Bool' lvalue Var 0x55d75a345450 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55d75a348db8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d75a348d88 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55d75a348d40 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d75a348d28 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d75a348848 <col:20> '_Bool' lvalue Var 0x55d75a3459c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d75a348d70 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d75a348d58 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d75a348868 <col:36> '_Bool' lvalue Var 0x55d75a345450 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55d75a348d08 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55d75a348cd8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55d75a348a78 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d75a348998 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d75a3488c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d75a3488a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d75a348888 <col:55> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d75a348978 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d75a348910 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d75a3488f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d75a3488d8 <col:74> '_Bool' lvalue Var 0x55d75a345270 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55d75a348960 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d75a348948 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d75a348928 <col:93> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d75a348a58 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d75a3489f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d75a3489d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d75a3489b8 <col:112> '_Bool' lvalue Var 0x55d75a345270 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55d75a348a40 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d75a348a28 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d75a348a08 <col:131> '_Bool' lvalue Var 0x55d75a345450 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55d75a348cc0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d75a348ca8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d75a348a98 <col:148> '_Bool' lvalue Var 0x55d75a345450 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55d75a348c88 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55d75a348c58 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55d75a348b58 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d75a348b10 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d75a348af8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d75a348ab8 <col:166> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d75a348b40 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d75a348b28 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d75a348ad8 <col:184> '_Bool' lvalue Var 0x55d75a345270 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55d75a348c28 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d75a348ba8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d75a348b78 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d75a348c40 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55d75a348c00 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55d75a348bd0 <col:219> 'int' 0
|   |-BinaryOperator 0x55d75a348e48 <line:749:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55d75a348df0 <col:3> 'int' lvalue Var 0x55d75a344a10 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x55d75a348e30 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d75a348e10 <col:25> 'int' lvalue Var 0x55d75a344ff0 'y' 'int'
|   |-BinaryOperator 0x55d75a348f78 <line:750:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55d75a348e68 <col:3> 'int' lvalue Var 0x55d75a344ff0 'y' 'int'
|   | `-ConditionalOperator 0x55d75a348f48 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55d75a348f00 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d75a348ee8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d75a348e88 <col:7> '_Bool' lvalue Var 0x55d75a345088 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55d75a348f18 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d75a348ea8 <col:25> 'int' lvalue Var 0x55d75a345108 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55d75a348f30 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55d75a348ec8 <col:37> 'int' lvalue Var 0x55d75a344ff0 'y' 'int'
|   |-BinaryOperator 0x55d75a349028 <line:751:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a348fb0 <col:3> '_Bool' lvalue Var 0x55d75a345088 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55d75a349000 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55d75a348fd0 <col:28> 'int' 0
|   |-CallExpr 0x55d75a349080 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d75a349068 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a349048 <col:3> 'void ()' Function 0x55d75a2eb410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d75a3490d8 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d75a3490c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a3490a0 <col:3> 'void ()' Function 0x55d75a2eb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55d75a349130 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d75a349118 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a3490f8 <col:3> 'void ()' Function 0x55d75a2eb410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d75a349188 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d75a349170 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a349150 <col:3> 'void ()' Function 0x55d75a2eb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d75a349240 <line:756:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55d75a3491a8 <col:3> 'int' lvalue Var 0x55d75a344590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55d75a349220 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55d75a349208 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d75a3491c8 <col:22> 'int' lvalue Var 0x55d75a344590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55d75a3491e8 <col:41> 'int' 1
|   |-CallExpr 0x55d75a349298 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d75a349280 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a349260 <col:3> 'void ()' Function 0x55d75a2eb410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55d75a349310 <line:758:3, col:36>
|     `-CallExpr 0x55d75a3492f0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55d75a3492d8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55d75a3492b8 <col:10> 'void *(void)' Function 0x55d75a2eae68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55d75a3494c0 prev 0x55d75a344210 <line:760:1, line:804:1> line:760:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55d75a349428 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55d75a34d770 <line:761:1, line:804:1>
|   |-CallExpr 0x55d75a3495a0 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d75a349588 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a349568 <col:3> 'void ()' Function 0x55d75a2eb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d75a349618 <line:763:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55d75a3495c0 <col:3> 'int' lvalue Var 0x55d75a345738 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55d75a349600 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d75a3495e0 <col:15> 'int' lvalue Var 0x55d75a345640 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55d75a349678 <line:764:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55d75a349638 <col:3> 'int' lvalue Var 0x55d75a345640 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x55d75a349658 <col:15> 'int' 1
|   |-BinaryOperator 0x55d75a3496f0 <line:765:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a349698 <col:3> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d75a3496d8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d75a3496b8 <col:20> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d75a349788 <line:766:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a349710 <col:3> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55d75a349760 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55d75a349730 <col:27> 'int' 1
|   |-CallExpr 0x55d75a349908 <line:767:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55d75a3498f0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55d75a3497a8 <col:3> 'void (int)' Function 0x55d75a2eb0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55d75a3498a8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55d75a349888 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55d75a349868 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55d75a349820 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55d75a349808 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55d75a3497c8 <col:23> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55d75a349850 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55d75a349838 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55d75a3497e8 <col:41> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d75a349988 <line:768:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a349930 <col:3> '_Bool' lvalue Var 0x55d75a345360 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55d75a349970 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d75a349950 <col:20> '_Bool' lvalue Var 0x55d75a345180 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55d75a349a00 <line:769:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a3499a8 <col:3> '_Bool' lvalue Var 0x55d75a3453d8 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55d75a3499e8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d75a3499c8 <col:20> '_Bool' lvalue Var 0x55d75a3451f8 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55d75a349a78 <line:770:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a349a20 <col:3> '_Bool' lvalue Var 0x55d75a345450 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55d75a349a60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d75a349a40 <col:20> '_Bool' lvalue Var 0x55d75a345270 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55d75a349af0 <line:771:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a349a98 <col:3> '_Bool' lvalue Var 0x55d75a3454c8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55d75a349ad8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d75a349ab8 <col:20> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55d75a349b88 <line:772:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a349b10 <col:3> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x55d75a349b60 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55d75a349b30 <col:27> 'int' 1
|   |-CallExpr 0x55d75a349be0 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d75a349bc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a349ba8 <col:3> 'void ()' Function 0x55d75a2eb410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d75a349c38 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d75a349c20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a349c00 <col:3> 'void ()' Function 0x55d75a2eb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d75a349ce8 <line:775:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a349c58 <col:3> '_Bool' lvalue Var 0x55d75a345948 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55d75a349cd0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55d75a349cb0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55d75a349c98 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55d75a349c78 <col:19> 'void *(void)' Function 0x55d75a2eae68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55d75a349d98 <line:776:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a349d08 <col:3> '_Bool' lvalue Var 0x55d75a3459c0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55d75a349d80 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55d75a349d60 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55d75a349d48 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55d75a349d28 <col:19> 'void *(void)' Function 0x55d75a2eae68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55d75a349e10 <line:777:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a349db8 <col:3> '_Bool' lvalue Var 0x55d75a345088 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55d75a349df8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d75a349dd8 <col:21> '_Bool' lvalue Var 0x55d75a3459c0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55d75a349e88 <line:778:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55d75a349e30 <col:3> 'int' lvalue Var 0x55d75a345108 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55d75a349e70 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d75a349e50 <col:15> 'int' lvalue Var 0x55d75a344ff0 'y' 'int'
|   |-BinaryOperator 0x55d75a34a2e0 <line:779:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55d75a349ea8 <col:3> 'int' lvalue Var 0x55d75a344ff0 'y' 'int'
|   | `-ConditionalOperator 0x55d75a34a2b0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55d75a34a0d8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55d75a349ff8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55d75a349f00 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55d75a349ee8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55d75a349ec8 <col:8> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55d75a349fd8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55d75a349f50 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55d75a349f38 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55d75a349f18 <col:27> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x55d75a349fc0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55d75a349f88 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55d75a349f68 <col:46> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55d75a34a0b8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55d75a34a050 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55d75a34a038 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55d75a34a018 <col:65> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x55d75a34a0a0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55d75a34a088 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55d75a34a068 <col:84> '_Bool' lvalue Var 0x55d75a3454c8 'y$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55d75a34a298 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d75a34a0f8 <col:101> 'int' lvalue Var 0x55d75a344ff0 'y' 'int'
|   |   `-ParenExpr 0x55d75a34a278 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55d75a34a248 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55d75a34a1b8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55d75a34a170 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55d75a34a158 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55d75a34a118 <col:106> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55d75a34a1a0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55d75a34a188 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55d75a34a138 <col:124> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55d75a34a218 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d75a34a1d8 <col:141> 'int' lvalue Var 0x55d75a345640 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55d75a34a230 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d75a34a1f8 <col:153> 'int' lvalue Var 0x55d75a345738 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55d75a34a7f0 <line:780:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55d75a34a300 <col:3> 'int' lvalue Var 0x55d75a345640 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55d75a34a7c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55d75a34a790 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d75a34a778 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d75a34a320 <col:15> '_Bool' lvalue Var 0x55d75a3459c0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55d75a34a7a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d75a34a340 <col:31> 'int' lvalue Var 0x55d75a345640 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55d75a34a758 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55d75a34a728 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55d75a34a550 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55d75a34a470 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55d75a34a398 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55d75a34a380 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55d75a34a360 <col:45> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55d75a34a450 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55d75a34a3e8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55d75a34a3d0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55d75a34a3b0 <col:64> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55d75a34a438 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55d75a34a420 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55d75a34a400 <col:83> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55d75a34a530 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55d75a34a4c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55d75a34a4b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55d75a34a490 <col:102> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55d75a34a518 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55d75a34a500 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55d75a34a4e0 <col:121> '_Bool' lvalue Var 0x55d75a3454c8 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55d75a34a710 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d75a34a570 <col:138> 'int' lvalue Var 0x55d75a345640 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55d75a34a6f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55d75a34a6c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55d75a34a630 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55d75a34a5e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55d75a34a5d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55d75a34a590 <col:151> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55d75a34a618 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55d75a34a600 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55d75a34a5b0 <col:169> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55d75a34a690 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55d75a34a650 <col:186> 'int' lvalue Var 0x55d75a345640 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55d75a34a6a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55d75a34a670 <col:198> 'int' lvalue Var 0x55d75a345640 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55d75a34ad00 <line:781:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55d75a34a810 <col:3> 'int' lvalue Var 0x55d75a345738 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55d75a34acd0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55d75a34aca0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d75a34ac88 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d75a34a830 <col:15> '_Bool' lvalue Var 0x55d75a3459c0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55d75a34acb8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d75a34a850 <col:31> 'int' lvalue Var 0x55d75a345738 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55d75a34ac68 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55d75a34ac38 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55d75a34aa60 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55d75a34a980 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55d75a34a8a8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55d75a34a890 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55d75a34a870 <col:45> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55d75a34a960 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55d75a34a8f8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55d75a34a8e0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55d75a34a8c0 <col:64> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55d75a34a948 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55d75a34a930 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55d75a34a910 <col:83> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55d75a34aa40 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55d75a34a9d8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55d75a34a9c0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55d75a34a9a0 <col:102> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55d75a34aa28 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55d75a34aa10 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55d75a34a9f0 <col:121> '_Bool' lvalue Var 0x55d75a3454c8 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55d75a34ac20 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d75a34aa80 <col:138> 'int' lvalue Var 0x55d75a345738 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55d75a34ac00 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55d75a34abd0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55d75a34ab40 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55d75a34aaf8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55d75a34aae0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55d75a34aaa0 <col:151> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55d75a34ab28 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55d75a34ab10 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55d75a34aac0 <col:169> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55d75a34aba0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55d75a34ab60 <col:186> 'int' lvalue Var 0x55d75a345738 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55d75a34abb8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55d75a34ab80 <col:198> 'int' lvalue Var 0x55d75a345738 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55d75a34b2c8 <line:782:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a34ad20 <col:3> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d75a34b2b0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d75a34b280 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55d75a34b238 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d75a34b220 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d75a34ad40 <col:20> '_Bool' lvalue Var 0x55d75a3459c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d75a34b268 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d75a34b250 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d75a34ad60 <col:36> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55d75a34b200 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55d75a34b1d0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55d75a34af70 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d75a34ae90 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d75a34adb8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d75a34ada0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d75a34ad80 <col:55> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d75a34ae70 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d75a34ae08 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d75a34adf0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d75a34add0 <col:74> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55d75a34ae58 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d75a34ae40 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d75a34ae20 <col:93> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d75a34af50 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d75a34aee8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d75a34aed0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d75a34aeb0 <col:112> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55d75a34af38 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d75a34af20 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d75a34af00 <col:131> '_Bool' lvalue Var 0x55d75a3454c8 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55d75a34b1b8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d75a34b1a0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d75a34af90 <col:148> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55d75a34b180 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55d75a34b150 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55d75a34b070 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d75a34b028 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d75a34b010 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d75a34afd0 <col:166> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d75a34b058 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d75a34b040 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d75a34aff0 <col:184> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55d75a34b108 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d75a34b0c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d75a34b090 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d75a34b138 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55d75a34b120 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55d75a34b0e8 <col:212> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d75a34b890 <line:783:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a34b2e8 <col:3> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d75a34b878 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d75a34b848 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55d75a34b800 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d75a34b7e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d75a34b308 <col:20> '_Bool' lvalue Var 0x55d75a3459c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d75a34b830 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d75a34b818 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d75a34b328 <col:36> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55d75a34b7c8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55d75a34b798 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55d75a34b538 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d75a34b458 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d75a34b380 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d75a34b368 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d75a34b348 <col:55> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d75a34b438 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d75a34b3d0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d75a34b3b8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d75a34b398 <col:74> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55d75a34b420 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d75a34b408 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d75a34b3e8 <col:93> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d75a34b518 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d75a34b4b0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d75a34b498 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d75a34b478 <col:112> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55d75a34b500 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d75a34b4e8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d75a34b4c8 <col:131> '_Bool' lvalue Var 0x55d75a3454c8 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55d75a34b780 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d75a34b768 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d75a34b558 <col:148> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55d75a34b748 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55d75a34b718 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55d75a34b618 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d75a34b5d0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d75a34b5b8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d75a34b578 <col:166> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d75a34b600 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d75a34b5e8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d75a34b598 <col:184> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55d75a34b6e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d75a34b668 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d75a34b638 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d75a34b700 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55d75a34b6c0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55d75a34b690 <col:219> 'int' 0
|   |-BinaryOperator 0x55d75a34be38 <line:784:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a34b8b0 <col:3> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55d75a34be20 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d75a34bdf0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55d75a34bda8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d75a34bd90 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d75a34b8d0 <col:20> '_Bool' lvalue Var 0x55d75a3459c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d75a34bdd8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d75a34bdc0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d75a34b8f0 <col:36> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x55d75a34bd70 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55d75a34bd40 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55d75a34bb00 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d75a34ba20 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d75a34b948 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d75a34b930 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d75a34b910 <col:55> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d75a34ba00 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d75a34b998 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d75a34b980 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d75a34b960 <col:74> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55d75a34b9e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d75a34b9d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d75a34b9b0 <col:93> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d75a34bae0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d75a34ba78 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d75a34ba60 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d75a34ba40 <col:112> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55d75a34bac8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d75a34bab0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d75a34ba90 <col:131> '_Bool' lvalue Var 0x55d75a3454c8 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55d75a34bd28 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d75a34bd10 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d75a34bb20 <col:148> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x55d75a34bcf0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55d75a34bcc0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55d75a34bbe0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d75a34bb98 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d75a34bb80 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d75a34bb40 <col:166> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d75a34bbc8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d75a34bbb0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d75a34bb60 <col:184> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55d75a34bc78 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d75a34bc30 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d75a34bc00 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d75a34bca8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55d75a34bc90 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55d75a34bc58 <col:212> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55d75a34c418 <line:785:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a34be58 <col:3> '_Bool' lvalue Var 0x55d75a3454c8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55d75a34c400 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d75a34c3d0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55d75a34c388 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d75a34c370 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d75a34be78 <col:20> '_Bool' lvalue Var 0x55d75a3459c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d75a34c3b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d75a34c3a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d75a34be98 <col:36> '_Bool' lvalue Var 0x55d75a3454c8 'y$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x55d75a34c350 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55d75a34c320 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55d75a34c0c0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d75a34bfe0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d75a34bef0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d75a34bed8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d75a34beb8 <col:55> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d75a34bfa8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d75a34bf40 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d75a34bf28 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d75a34bf08 <col:74> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55d75a34bf90 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d75a34bf78 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d75a34bf58 <col:93> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d75a34c0a0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d75a34c038 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d75a34c020 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d75a34c000 <col:112> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55d75a34c088 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d75a34c070 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d75a34c050 <col:131> '_Bool' lvalue Var 0x55d75a3454c8 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55d75a34c308 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d75a34c2f0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d75a34c0e0 <col:148> '_Bool' lvalue Var 0x55d75a3454c8 'y$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x55d75a34c2d0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55d75a34c2a0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55d75a34c1a0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d75a34c158 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d75a34c140 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d75a34c100 <col:166> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d75a34c188 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d75a34c170 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d75a34c120 <col:184> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55d75a34c270 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d75a34c1f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d75a34c1c0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d75a34c288 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55d75a34c248 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55d75a34c218 <col:219> 'int' 0
|   |-BinaryOperator 0x55d75a34c490 <line:786:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55d75a34c438 <col:3> 'int' lvalue Var 0x55d75a344b30 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55d75a34c478 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d75a34c458 <col:25> 'int' lvalue Var 0x55d75a344ff0 'y' 'int'
|   |-BinaryOperator 0x55d75a34c5c0 <line:787:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55d75a34c4b0 <col:3> 'int' lvalue Var 0x55d75a344ff0 'y' 'int'
|   | `-ConditionalOperator 0x55d75a34c590 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55d75a34c548 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d75a34c530 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d75a34c4d0 <col:7> '_Bool' lvalue Var 0x55d75a345088 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55d75a34c560 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d75a34c4f0 <col:25> 'int' lvalue Var 0x55d75a345108 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55d75a34c578 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55d75a34c510 <col:37> 'int' lvalue Var 0x55d75a344ff0 'y' 'int'
|   |-BinaryOperator 0x55d75a34c658 <line:788:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a34c5e0 <col:3> '_Bool' lvalue Var 0x55d75a345088 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55d75a34c630 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55d75a34c600 <col:28> 'int' 0
|   |-CallExpr 0x55d75a34c6b0 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d75a34c698 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a34c678 <col:3> 'void ()' Function 0x55d75a2eb410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d75a34c708 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d75a34c6f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a34c6d0 <col:3> 'void ()' Function 0x55d75a2eb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d75a34c780 <line:791:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55d75a34c728 <col:3> 'int' lvalue Var 0x55d75a344c50 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x55d75a34c768 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d75a34c748 <col:25> 'int' lvalue Var 0x55d75a3458b0 'z' 'int'
|   |-CallExpr 0x55d75a34c7d8 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d75a34c7c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a34c7a0 <col:3> 'void ()' Function 0x55d75a2eb410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d75a34c830 <line:793:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d75a34c818 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a34c7f8 <col:3> 'void ()' Function 0x55d75a2eb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d75a34cb18 <line:794:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55d75a34c850 <col:3> 'int' lvalue Var 0x55d75a344ff0 'y' 'int'
|   | `-ConditionalOperator 0x55d75a34cae8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55d75a34c910 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55d75a34c8c8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55d75a34c8b0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55d75a34c870 <col:7> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55d75a34c8f8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55d75a34c8e0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55d75a34c890 <col:25> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55d75a34cad0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d75a34c930 <col:42> 'int' lvalue Var 0x55d75a345640 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55d75a34cab0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55d75a34ca80 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55d75a34c9f0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55d75a34c9a8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55d75a34c990 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55d75a34c950 <col:55> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55d75a34c9d8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55d75a34c9c0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55d75a34c970 <col:73> '_Bool' lvalue Var 0x55d75a3454c8 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55d75a34ca50 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d75a34ca10 <col:90> 'int' lvalue Var 0x55d75a345738 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55d75a34ca68 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d75a34ca30 <col:102> 'int' lvalue Var 0x55d75a344ff0 'y' 'int'
|   |-BinaryOperator 0x55d75a34cd20 <line:795:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a34cb38 <col:3> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d75a34cd08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d75a34ccd8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55d75a34cbf8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55d75a34cbb0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55d75a34cb98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55d75a34cb58 <col:20> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55d75a34cbe0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55d75a34cbc8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55d75a34cb78 <col:38> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55d75a34cc90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d75a34cc48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d75a34cc18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55d75a34ccc0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d75a34cca8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d75a34cc70 <col:66> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d75a34d038 <line:796:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a34cd40 <col:3> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d75a34d020 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d75a34cff0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55d75a34cee0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55d75a34ce00 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55d75a34cdb8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55d75a34cda0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55d75a34cd60 <col:20> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55d75a34cde8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55d75a34cdd0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55d75a34cd80 <col:38> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55d75a34cec0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55d75a34ce78 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55d75a34ce60 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55d75a34ce20 <col:56> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55d75a34cea8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55d75a34ce90 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55d75a34ce40 <col:74> '_Bool' lvalue Var 0x55d75a3454c8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55d75a34cf78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d75a34cf30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d75a34cf00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55d75a34cfa8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d75a34cf90 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d75a34cf58 <col:102> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55d75a34d240 <line:797:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a34d058 <col:3> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55d75a34d228 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d75a34d1f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55d75a34d118 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55d75a34d0d0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55d75a34d0b8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55d75a34d078 <col:20> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55d75a34d100 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55d75a34d0e8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55d75a34d098 <col:38> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55d75a34d1b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d75a34d168 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d75a34d138 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55d75a34d1e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d75a34d1c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d75a34d190 <col:66> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55d75a34d528 <line:798:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55d75a34d260 <col:3> '_Bool' lvalue Var 0x55d75a3454c8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55d75a34d510 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d75a34d4e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55d75a34d400 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55d75a34d320 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55d75a34d2d8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55d75a34d2c0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55d75a34d280 <col:20> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55d75a34d308 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55d75a34d2f0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55d75a34d2a0 <col:38> '_Bool' lvalue Var 0x55d75a3452e8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55d75a34d3e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55d75a34d398 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55d75a34d380 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55d75a34d340 <col:56> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55d75a34d3c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55d75a34d3b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55d75a34d360 <col:74> '_Bool' lvalue Var 0x55d75a3454c8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55d75a34d498 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d75a34d450 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d75a34d420 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55d75a34d4c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d75a34d4b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d75a34d478 <col:102> '_Bool' lvalue Var 0x55d75a3454c8 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55d75a34d580 <line:799:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d75a34d568 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a34d548 <col:3> 'void ()' Function 0x55d75a2eb410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d75a34d5d8 <line:800:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d75a34d5c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a34d5a0 <col:3> 'void ()' Function 0x55d75a2eb350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d75a34d690 <line:801:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55d75a34d5f8 <col:3> 'int' lvalue Var 0x55d75a344590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55d75a34d670 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55d75a34d658 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d75a34d618 <col:22> 'int' lvalue Var 0x55d75a344590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55d75a34d638 <col:41> 'int' 1
|   |-CallExpr 0x55d75a34d6e8 <line:802:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d75a34d6d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d75a34d6b0 <col:3> 'void ()' Function 0x55d75a2eb410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55d75a34d760 <line:803:3, col:36>
|     `-CallExpr 0x55d75a34d740 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55d75a34d728 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55d75a34d708 <col:10> 'void *(void)' Function 0x55d75a2eae68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55d75a34d8f0 prev 0x55d75a3442d8 <line:805:1, line:807:1> line:805:6 fence 'void ()'
| `-CompoundStmt 0x55d75a34d990 <line:806:1, line:807:1>
|-FunctionDecl 0x55d75a34d9c0 prev 0x55d75a344398 <line:808:1, line:810:1> line:808:6 isync 'void ()'
| `-CompoundStmt 0x55d75a34da60 <line:809:1, line:810:1>
|-FunctionDecl 0x55d75a34da90 prev 0x55d75a344458 <line:811:1, line:813:1> line:811:6 lwfence 'void ()'
| `-CompoundStmt 0x55d75a34db30 <line:812:1, line:813:1>
`-FunctionDecl 0x55d75a34db98 <line:814:1, line:838:1> line:814:5 main 'int ()'
  `-CompoundStmt 0x55d75a34f9d8 <line:815:1, line:838:1>
    |-DeclStmt 0x55d75a34dcb0 <line:816:3, col:16>
    | `-VarDecl 0x55d75a34dc48 <col:3, col:13> col:13 used t19 'pthread_t':'unsigned long'
    |-CallExpr 0x55d75a34deb8 <line:817:3, col:52> 'int'
    | |-ImplicitCastExpr 0x55d75a34dea0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d75a34dcc8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55d75a32b8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55d75a34dd08 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55d75a34dce8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55d75a34dc48 't19' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55d75a34def8 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55d75a34dd80 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x55d75a34dd58 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55d75a34dd20 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x55d75a34df10 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d75a34dda0 <col:37> 'void *(void *)' Function 0x55d75a345ad8 'P0' 'void *(void *)'
    | `-ParenExpr 0x55d75a34de20 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x55d75a34ddf8 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55d75a34ddc0 <col:50> 'int' 0
    |-DeclStmt 0x55d75a34dfa0 <line:818:3, col:16>
    | `-VarDecl 0x55d75a34df38 <col:3, col:13> col:13 used t20 'pthread_t':'unsigned long'
    |-CallExpr 0x55d75a34e170 <line:819:3, col:52> 'int'
    | |-ImplicitCastExpr 0x55d75a34e158 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d75a34dfb8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55d75a32b8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55d75a34e020 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55d75a34e000 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55d75a34df38 't20' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55d75a34e1b0 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55d75a34e098 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x55d75a34e070 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55d75a34e038 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x55d75a34e1c8 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d75a34e0b8 <col:37> 'void *(void *)' Function 0x55d75a346310 'P1' 'void *(void *)'
    | `-ParenExpr 0x55d75a34e138 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x55d75a34e110 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55d75a34e0d8 <col:50> 'int' 0
    |-DeclStmt 0x55d75a34e258 <line:820:3, col:16>
    | `-VarDecl 0x55d75a34e1f0 <col:3, col:13> col:13 used t21 'pthread_t':'unsigned long'
    |-CallExpr 0x55d75a34e400 <line:821:3, col:52> 'int'
    | |-ImplicitCastExpr 0x55d75a34e3e8 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d75a34e270 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55d75a32b8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55d75a34e2b0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55d75a34e290 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55d75a34e1f0 't21' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55d75a34e440 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55d75a34e328 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x55d75a34e300 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55d75a34e2c8 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x55d75a34e458 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d75a34e348 <col:37> 'void *(void *)' Function 0x55d75a3494c0 'P2' 'void *(void *)'
    | `-ParenExpr 0x55d75a34e3c8 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x55d75a34e3a0 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55d75a34e368 <col:50> 'int' 0
    |-CallExpr 0x55d75a34e4a8 <line:822:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55d75a34e490 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d75a34e470 <col:3> 'void ()' Function 0x55d75a2eb350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55d75a34e578 <line:823:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55d75a34e4c8 <col:3> '_Bool' lvalue Var 0x55d75a344ce8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55d75a34e560 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55d75a34e540 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55d75a34e528 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55d75a34e4e8 <col:21> 'int' lvalue Var 0x55d75a344590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55d75a34e508 <col:41> 'int' 3
    |-CallExpr 0x55d75a34e5d0 <line:824:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55d75a34e5b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d75a34e598 <col:3> 'void ()' Function 0x55d75a2eb410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55d75a34e648 <line:825:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55d75a34e630 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d75a34e5f0 <col:3> 'void (int)' Function 0x55d75a2eaca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55d75a34e688 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55d75a34e670 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55d75a34e610 <col:21> '_Bool' lvalue Var 0x55d75a344ce8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55d75a34e6d8 <line:826:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55d75a34e6c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d75a34e6a0 <col:3> 'void ()' Function 0x55d75a2eb350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55d75a34e9c0 <line:827:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55d75a34e6f8 <col:3> 'int' lvalue Var 0x55d75a344ff0 'y' 'int'
    | `-ConditionalOperator 0x55d75a34e990 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55d75a34e7b8 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55d75a34e770 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55d75a34e758 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55d75a34e718 <col:7> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55d75a34e7a0 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55d75a34e788 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55d75a34e738 <col:25> '_Bool' lvalue Var 0x55d75a345180 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55d75a34e978 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55d75a34e7d8 <col:42> 'int' lvalue Var 0x55d75a345640 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55d75a34e958 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55d75a34e928 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55d75a34e898 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55d75a34e850 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55d75a34e838 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55d75a34e7f8 <col:55> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55d75a34e880 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55d75a34e868 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55d75a34e818 <col:73> '_Bool' lvalue Var 0x55d75a345360 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55d75a34e8f8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55d75a34e8b8 <col:90> 'int' lvalue Var 0x55d75a345738 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55d75a34e910 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55d75a34e8d8 <col:102> 'int' lvalue Var 0x55d75a344ff0 'y' 'int'
    |-BinaryOperator 0x55d75a34ebc8 <line:828:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55d75a34e9e0 <col:3> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55d75a34ebb0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55d75a34eb80 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55d75a34eaa0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55d75a34ea58 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55d75a34ea40 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55d75a34ea00 <col:20> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55d75a34ea88 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55d75a34ea70 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55d75a34ea20 <col:38> '_Bool' lvalue Var 0x55d75a345180 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55d75a34eb38 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55d75a34eaf0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55d75a34eac0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55d75a34eb68 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55d75a34eb50 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55d75a34eb18 <col:66> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55d75a34eeb0 <line:829:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55d75a34ebe8 <col:3> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55d75a34ee98 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55d75a34ee68 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55d75a34ed88 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55d75a34eca8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55d75a34ec60 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55d75a34ec48 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55d75a34ec08 <col:20> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55d75a34ec90 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55d75a34ec78 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55d75a34ec28 <col:38> '_Bool' lvalue Var 0x55d75a345180 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55d75a34ed68 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55d75a34ed20 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55d75a34ed08 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55d75a34ecc8 <col:56> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55d75a34ed50 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55d75a34ed38 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55d75a34ece8 <col:74> '_Bool' lvalue Var 0x55d75a345360 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55d75a34ee20 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55d75a34edd8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55d75a34eda8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55d75a34ee50 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55d75a34ee38 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55d75a34ee00 <col:102> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55d75a34f0e8 <line:830:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55d75a34eed0 <col:3> '_Bool' lvalue Var 0x55d75a345180 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55d75a34f0d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55d75a34f0a0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55d75a34ef90 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55d75a34ef48 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55d75a34ef30 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55d75a34eef0 <col:20> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55d75a34ef78 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55d75a34ef60 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55d75a34ef10 <col:38> '_Bool' lvalue Var 0x55d75a345180 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55d75a34f058 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55d75a34f010 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55d75a34efb0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55d75a34f088 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55d75a34f070 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55d75a34f038 <col:66> '_Bool' lvalue Var 0x55d75a345180 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55d75a34f3d0 <line:831:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55d75a34f108 <col:3> '_Bool' lvalue Var 0x55d75a345360 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55d75a34f3b8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55d75a34f388 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55d75a34f2a8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55d75a34f1c8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55d75a34f180 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55d75a34f168 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55d75a34f128 <col:20> '_Bool' lvalue Var 0x55d75a3456b8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55d75a34f1b0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55d75a34f198 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55d75a34f148 <col:38> '_Bool' lvalue Var 0x55d75a345180 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55d75a34f288 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55d75a34f240 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55d75a34f228 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55d75a34f1e8 <col:56> '_Bool' lvalue Var 0x55d75a3457b0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55d75a34f270 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55d75a34f258 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55d75a34f208 <col:74> '_Bool' lvalue Var 0x55d75a345360 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55d75a34f340 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55d75a34f2f8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55d75a34f2c8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55d75a34f370 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55d75a34f358 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55d75a34f320 <col:102> '_Bool' lvalue Var 0x55d75a345360 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55d75a34f428 <line:832:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55d75a34f410 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d75a34f3f0 <col:3> 'void ()' Function 0x55d75a2eb410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55d75a34f480 <line:833:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55d75a34f468 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d75a34f448 <col:3> 'void ()' Function 0x55d75a2eb350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55d75a34f880 <line:834:3, col:187> '_Bool' '='
    | |-DeclRefExpr 0x55d75a34f4a0 <col:3> '_Bool' lvalue Var 0x55d75a344d60 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55d75a34f868 <col:21, col:187> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55d75a34f850 <col:21, col:187> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55d75a34f830 <col:22, col:187> 'int'
    |       `-BinaryOperator 0x55d75a34f810 <col:23, col:186> 'int' '&&'
    |         |-BinaryOperator 0x55d75a34f778 <col:23, col:158> 'int' '&&'
    |         | |-BinaryOperator 0x55d75a34f6e0 <col:23, col:130> 'int' '&&'
    |         | | |-BinaryOperator 0x55d75a34f648 <col:23, col:102> 'int' '&&'
    |         | | | |-BinaryOperator 0x55d75a34f5b0 <col:23, col:74> 'int' '&&'
    |         | | | | |-BinaryOperator 0x55d75a34f518 <col:23, col:46> 'int' '=='
    |         | | | | | |-ImplicitCastExpr 0x55d75a34f500 <col:23> 'int' <LValueToRValue>
    |         | | | | | | `-DeclRefExpr 0x55d75a34f4c0 <col:23> 'int' lvalue Var 0x55d75a3446b0 '__unbuffered_p0_EAX' 'int'
    |         | | | | | `-IntegerLiteral 0x55d75a34f4e0 <col:46> 'int' 1
    |         | | | | `-BinaryOperator 0x55d75a34f590 <col:51, col:74> 'int' '=='
    |         | | | |   |-ImplicitCastExpr 0x55d75a34f578 <col:51> 'int' <LValueToRValue>
    |         | | | |   | `-DeclRefExpr 0x55d75a34f538 <col:51> 'int' lvalue Var 0x55d75a3447d0 '__unbuffered_p0_EBX' 'int'
    |         | | | |   `-IntegerLiteral 0x55d75a34f558 <col:74> 'int' 0
    |         | | | `-BinaryOperator 0x55d75a34f628 <col:79, col:102> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x55d75a34f610 <col:79> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x55d75a34f5d0 <col:79> 'int' lvalue Var 0x55d75a3448f0 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x55d75a34f5f0 <col:102> 'int' 1
    |         | | `-BinaryOperator 0x55d75a34f6c0 <col:107, col:130> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55d75a34f6a8 <col:107> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55d75a34f668 <col:107> 'int' lvalue Var 0x55d75a344a10 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x55d75a34f688 <col:130> 'int' 0
    |         | `-BinaryOperator 0x55d75a34f758 <col:135, col:158> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55d75a34f740 <col:135> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55d75a34f700 <col:135> 'int' lvalue Var 0x55d75a344b30 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x55d75a34f720 <col:158> 'int' 1
    |         `-BinaryOperator 0x55d75a34f7f0 <col:163, col:186> 'int' '=='
    |           |-ImplicitCastExpr 0x55d75a34f7d8 <col:163> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55d75a34f798 <col:163> 'int' lvalue Var 0x55d75a344c50 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x55d75a34f7b8 <col:186> 'int' 0
    |-CallExpr 0x55d75a34f8d8 <line:835:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55d75a34f8c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d75a34f8a0 <col:3> 'void ()' Function 0x55d75a2eb410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55d75a34f950 <line:836:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55d75a34f938 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d75a34f8f8 <col:3> 'void (int)' Function 0x55d75a2eb0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55d75a34f990 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55d75a34f978 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55d75a34f918 <col:21> '_Bool' lvalue Var 0x55d75a344d60 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55d75a34f9c8 <line:837:3, col:10>
      `-IntegerLiteral 0x55d75a34f9a8 <col:10> 'int' 0
