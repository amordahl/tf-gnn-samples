TranslationUnitDecl 0x5633d5887d58 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5633d5888618 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5633d58882f0 '__int128'
|-TypedefDecl 0x5633d5888688 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5633d5888310 'unsigned __int128'
|-TypedefDecl 0x5633d5888990 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5633d5888760 'struct __NSConstantString_tag'
|   `-Record 0x5633d58886e0 '__NSConstantString_tag'
|-TypedefDecl 0x5633d5888a38 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5633d58889f0 'char *'
|   `-BuiltinType 0x5633d5887df0 'char'
|-TypedefDecl 0x5633d58c7d70 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5633d5888cd0 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5633d5888b10 'struct __va_list_tag'
|     `-Record 0x5633d5888a90 '__va_list_tag'
|-FunctionDecl 0x5633d58c7e50 <loops/vogal_false-unreach-call.i:1:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5633d58c8020 <line:3:1, line:8:1> line:3:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5633d58c7f50 <col:24, col:28> col:28 used cond 'int'
| `-CompoundStmt 0x5633d58c8270 <col:34, line:8:1>
|   |-IfStmt 0x5633d58c8248 <line:4:3, line:6:3>
|   | |-UnaryOperator 0x5633d58c8120 <line:4:7, col:13> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5633d58c8108 <col:8, col:13> 'int' <LValueToRValue>
|   | |   `-ParenExpr 0x5633d58c80e8 <col:8, col:13> 'int' lvalue
|   | |     `-DeclRefExpr 0x5633d58c80c8 <col:9> 'int' lvalue ParmVar 0x5633d58c7f50 'cond' 'int'
|   | `-CompoundStmt 0x5633d58c8230 <col:16, line:6:3>
|   |   `-LabelStmt 0x5633d58c8218 <line:5:5, col:29> 'ERROR'
|   |     `-CallExpr 0x5633d58c81a8 <col:12, col:29> 'void'
|   |       `-ImplicitCastExpr 0x5633d58c8190 <col:12> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5633d58c8138 <col:12> 'void () __attribute__((noreturn))' Function 0x5633d58c7e50 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   `-ReturnStmt 0x5633d58c8260 <line:7:3>
|-FunctionDecl 0x5633d58c82e0 <line:11:1, col:36> col:13 used __VERIFIER_nondet_char 'char ()' extern
`-FunctionDecl 0x5633d58c8458 <line:13:1, line:47:1> line:13:5 main 'int (void)'
  `-CompoundStmt 0x5633d58ee970 <line:14:1, line:47:1>
    |-DeclStmt 0x5633d58c8b48 <line:15:3, col:89>
    | |-VarDecl 0x5633d58c85d0 <col:3, col:25> col:8 used string_entrada 'char [10]'
    | `-VarDecl 0x5633d58c8690 <col:3, col:88> col:28 used vetor_vogais 'char [11]' cinit
    |   `-InitListExpr 0x5633d58c88a8 <col:43, col:88> 'char [11]'
    |     |-ImplicitCastExpr 0x5633d58c88e8 <col:44> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x5633d58c86f8 <col:44> 'int' 97
    |     |-ImplicitCastExpr 0x5633d58c8908 <col:48> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x5633d58c8710 <col:48> 'int' 65
    |     |-ImplicitCastExpr 0x5633d58c8930 <col:52> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x5633d58c8728 <col:52> 'int' 101
    |     |-ImplicitCastExpr 0x5633d58c8968 <col:56> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x5633d58c8740 <col:56> 'int' 69
    |     |-ImplicitCastExpr 0x5633d58c8980 <col:60> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x5633d58c8758 <col:60> 'int' 105
    |     |-ImplicitCastExpr 0x5633d58c89d8 <col:64> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x5633d58c8770 <col:64> 'int' 73
    |     |-ImplicitCastExpr 0x5633d58c89f0 <col:68> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x5633d58c8788 <col:68> 'int' 111
    |     |-ImplicitCastExpr 0x5633d58c8a08 <col:72> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x5633d58c87a0 <col:72> 'int' 79
    |     |-ImplicitCastExpr 0x5633d58c8a20 <col:76> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x5633d58c87b8 <col:76> 'int' 117
    |     |-ImplicitCastExpr 0x5633d58c8ab8 <col:80> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x5633d58c87d0 <col:80> 'int' 85
    |     `-ImplicitCastExpr 0x5633d58c8ad0 <col:84> 'char' <IntegralCast>
    |       `-CharacterLiteral 0x5633d58c87e8 <col:84> 'int' 0
    |-NullStmt 0x5633d58c8b60 <col:90>
    |-DeclStmt 0x5633d58ecfe0 <line:16:3, col:48>
    | |-VarDecl 0x5633d58c8b80 <col:3, col:16> col:16 used i 'unsigned int'
    | |-VarDecl 0x5633d58c8c00 <col:3, col:18> col:18 used j 'unsigned int'
    | |-VarDecl 0x5633d58c8c80 <col:3, col:20> col:20 used cont 'unsigned int'
    | |-VarDecl 0x5633d58c8d00 <col:3, col:26> col:26 tam_string 'unsigned int'
    | `-VarDecl 0x5633d58ecf48 <col:3, col:38> col:38 used n_caracter 'unsigned int'
    |-ForStmt 0x5633d58ed278 <line:18:3, line:19:48>
    | |-BinaryOperator 0x5633d58ed050 <line:18:7, col:9> 'unsigned int' '='
    | | |-DeclRefExpr 0x5633d58ecff8 <col:7> 'unsigned int' lvalue Var 0x5633d58c8b80 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x5633d58ed038 <col:9> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x5633d58ed018 <col:9> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x5633d58ed0e0 <col:11, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x5633d58ed0b0 <col:11> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x5633d58ed070 <col:11> 'unsigned int' lvalue Var 0x5633d58c8b80 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x5633d58ed0c8 <col:13> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x5633d58ed090 <col:13> 'int' 10
    | |-UnaryOperator 0x5633d58ed120 <col:16, col:17> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x5633d58ed100 <col:16> 'unsigned int' lvalue Var 0x5633d58c8b80 'i' 'unsigned int'
    | `-BinaryOperator 0x5633d58ed258 <line:19:5, col:48> 'char' '='
    |   |-ArraySubscriptExpr 0x5633d58ed1a8 <col:5, col:21> 'char' lvalue
    |   | |-ImplicitCastExpr 0x5633d58ed178 <col:5> 'char *' <ArrayToPointerDecay>
    |   | | `-DeclRefExpr 0x5633d58ed138 <col:5> 'char [10]' lvalue Var 0x5633d58c85d0 'string_entrada' 'char [10]'
    |   | `-ImplicitCastExpr 0x5633d58ed190 <col:20> 'unsigned int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5633d58ed158 <col:20> 'unsigned int' lvalue Var 0x5633d58c8b80 'i' 'unsigned int'
    |   `-CallExpr 0x5633d58ed238 <col:25, col:48> 'char'
    |     `-ImplicitCastExpr 0x5633d58ed220 <col:25> 'char (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5633d58ed1c8 <col:25> 'char ()' Function 0x5633d58c82e0 '__VERIFIER_nondet_char' 'char ()'
    |-BinaryOperator 0x5633d58ed398 <line:21:3, col:25> 'char' '='
    | |-ArraySubscriptExpr 0x5633d58ed348 <col:3, col:23> 'char' lvalue
    | | |-ImplicitCastExpr 0x5633d58ed330 <col:3> 'char *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x5633d58ed2b0 <col:3> 'char [10]' lvalue Var 0x5633d58c85d0 'string_entrada' 'char [10]'
    | | `-BinaryOperator 0x5633d58ed310 <col:18, col:22> 'int' '-'
    | |   |-IntegerLiteral 0x5633d58ed2d0 <col:18> 'int' 10
    | |   `-IntegerLiteral 0x5633d58ed2f0 <col:22> 'int' 1
    | `-ImplicitCastExpr 0x5633d58ed380 <col:25> 'char' <IntegralCast>
    |   `-CharacterLiteral 0x5633d58ed368 <col:25> 'int' 0
    |-BinaryOperator 0x5633d58ed410 <line:23:3, col:16> 'unsigned int' '='
    | |-DeclRefExpr 0x5633d58ed3b8 <col:3> 'unsigned int' lvalue Var 0x5633d58ecf48 'n_caracter' 'unsigned int'
    | `-ImplicitCastExpr 0x5633d58ed3f8 <col:16> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x5633d58ed3d8 <col:16> 'int' 0
    |-WhileStmt 0x5633d58ed560 <line:24:3, line:25:15>
    | |-BinaryOperator 0x5633d58ed508 <line:24:9, col:37> 'int' '!='
    | | |-ImplicitCastExpr 0x5633d58ed4f0 <col:9, col:34> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x5633d58ed4d8 <col:9, col:34> 'char' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x5633d58ed4a0 <col:9, col:34> 'char' lvalue
    | | |     |-ImplicitCastExpr 0x5633d58ed470 <col:9> 'char *' <ArrayToPointerDecay>
    | | |     | `-DeclRefExpr 0x5633d58ed430 <col:9> 'char [10]' lvalue Var 0x5633d58c85d0 'string_entrada' 'char [10]'
    | | |     `-ImplicitCastExpr 0x5633d58ed488 <col:24> 'unsigned int' <LValueToRValue>
    | | |       `-DeclRefExpr 0x5633d58ed450 <col:24> 'unsigned int' lvalue Var 0x5633d58ecf48 'n_caracter' 'unsigned int'
    | | `-CharacterLiteral 0x5633d58ed4c0 <col:37> 'int' 0
    | `-UnaryOperator 0x5633d58ed548 <line:25:5, col:15> 'unsigned int' postfix '++'
    |   `-DeclRefExpr 0x5633d58ed528 <col:5> 'unsigned int' lvalue Var 0x5633d58ecf48 'n_caracter' 'unsigned int'
    |-BinaryOperator 0x5633d58ed5d0 <line:27:3, col:10> 'unsigned int' '='
    | |-DeclRefExpr 0x5633d58ed578 <col:3> 'unsigned int' lvalue Var 0x5633d58c8c80 'cont' 'unsigned int'
    | `-ImplicitCastExpr 0x5633d58ed5b8 <col:10> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x5633d58ed598 <col:10> 'int' 0
    |-ForStmt 0x5633d58eda98 <line:28:3, line:31:16>
    | |-BinaryOperator 0x5633d58ed648 <line:28:7, col:9> 'unsigned int' '='
    | | |-DeclRefExpr 0x5633d58ed5f0 <col:7> 'unsigned int' lvalue Var 0x5633d58c8b80 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x5633d58ed630 <col:9> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x5633d58ed610 <col:9> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x5633d58ed6d8 <col:11, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x5633d58ed6a8 <col:11> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x5633d58ed668 <col:11> 'unsigned int' lvalue Var 0x5633d58c8b80 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x5633d58ed6c0 <col:13> 'unsigned int' <LValueToRValue>
    | |   `-DeclRefExpr 0x5633d58ed688 <col:13> 'unsigned int' lvalue Var 0x5633d58ecf48 'n_caracter' 'unsigned int'
    | |-UnaryOperator 0x5633d58ed718 <col:24, col:25> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x5633d58ed6f8 <col:24> 'unsigned int' lvalue Var 0x5633d58c8b80 'i' 'unsigned int'
    | `-ForStmt 0x5633d58eda60 <line:29:6, line:31:16>
    |   |-BinaryOperator 0x5633d58ed788 <line:29:10, col:12> 'unsigned int' '='
    |   | |-DeclRefExpr 0x5633d58ed730 <col:10> 'unsigned int' lvalue Var 0x5633d58c8c00 'j' 'unsigned int'
    |   | `-ImplicitCastExpr 0x5633d58ed770 <col:12> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x5633d58ed750 <col:12> 'int' 0
    |   |-<<<NULL>>>
    |   |-BinaryOperator 0x5633d58ed818 <col:14, col:16> 'int' '<'
    |   | |-ImplicitCastExpr 0x5633d58ed7e8 <col:14> 'unsigned int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x5633d58ed7a8 <col:14> 'unsigned int' lvalue Var 0x5633d58c8c00 'j' 'unsigned int'
    |   | `-ImplicitCastExpr 0x5633d58ed800 <col:16> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x5633d58ed7c8 <col:16> 'int' 8
    |   |-UnaryOperator 0x5633d58ed858 <col:18, col:19> 'unsigned int' postfix '++'
    |   | `-DeclRefExpr 0x5633d58ed838 <col:18> 'unsigned int' lvalue Var 0x5633d58c8c00 'j' 'unsigned int'
    |   `-IfStmt 0x5633d58eda48 <line:30:9, line:31:16>
    |     |-BinaryOperator 0x5633d58ed9f0 <line:30:12, col:47> 'int' '=='
    |     | |-ImplicitCastExpr 0x5633d58ed9c0 <col:12, col:28> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5633d58ed990 <col:12, col:28> 'char' <LValueToRValue>
    |     | |   `-ArraySubscriptExpr 0x5633d58ed8e0 <col:12, col:28> 'char' lvalue
    |     | |     |-ImplicitCastExpr 0x5633d58ed8b0 <col:12> 'char *' <ArrayToPointerDecay>
    |     | |     | `-DeclRefExpr 0x5633d58ed870 <col:12> 'char [10]' lvalue Var 0x5633d58c85d0 'string_entrada' 'char [10]'
    |     | |     `-ImplicitCastExpr 0x5633d58ed8c8 <col:27> 'unsigned int' <LValueToRValue>
    |     | |       `-DeclRefExpr 0x5633d58ed890 <col:27> 'unsigned int' lvalue Var 0x5633d58c8b80 'i' 'unsigned int'
    |     | `-ImplicitCastExpr 0x5633d58ed9d8 <col:33, col:47> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5633d58ed9a8 <col:33, col:47> 'char' <LValueToRValue>
    |     |     `-ArraySubscriptExpr 0x5633d58ed970 <col:33, col:47> 'char' lvalue
    |     |       |-ImplicitCastExpr 0x5633d58ed940 <col:33> 'char *' <ArrayToPointerDecay>
    |     |       | `-DeclRefExpr 0x5633d58ed900 <col:33> 'char [11]' lvalue Var 0x5633d58c8690 'vetor_vogais' 'char [11]'
    |     |       `-ImplicitCastExpr 0x5633d58ed958 <col:46> 'unsigned int' <LValueToRValue>
    |     |         `-DeclRefExpr 0x5633d58ed920 <col:46> 'unsigned int' lvalue Var 0x5633d58c8c00 'j' 'unsigned int'
    |     `-UnaryOperator 0x5633d58eda30 <line:31:12, col:16> 'unsigned int' postfix '++'
    |       `-DeclRefExpr 0x5633d58eda10 <col:12> 'unsigned int' lvalue Var 0x5633d58c8c80 'cont' 'unsigned int'
    |-BinaryOperator 0x5633d58edb28 <line:33:3, col:5> 'unsigned int' '='
    | |-DeclRefExpr 0x5633d58edad0 <col:3> 'unsigned int' lvalue Var 0x5633d58c8b80 'i' 'unsigned int'
    | `-ImplicitCastExpr 0x5633d58edb10 <col:5> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x5633d58edaf0 <col:5> 'int' 0
    |-DeclStmt 0x5633d58edbe8 <line:34:3, col:19>
    | `-VarDecl 0x5633d58edb60 <col:3, col:18> col:7 used cont_aux 'int' cinit
    |   `-IntegerLiteral 0x5633d58edbc8 <col:18> 'int' 0
    |-WhileStmt 0x5633d58ee7f0 <line:35:3, line:43:3>
    | |-BinaryOperator 0x5633d58edcd8 <line:35:9, col:28> 'int' '!='
    | | |-ImplicitCastExpr 0x5633d58edcc0 <col:9, col:25> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x5633d58edca8 <col:9, col:25> 'char' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x5633d58edc70 <col:9, col:25> 'char' lvalue
    | | |     |-ImplicitCastExpr 0x5633d58edc40 <col:9> 'char *' <ArrayToPointerDecay>
    | | |     | `-DeclRefExpr 0x5633d58edc00 <col:9> 'char [10]' lvalue Var 0x5633d58c85d0 'string_entrada' 'char [10]'
    | | |     `-ImplicitCastExpr 0x5633d58edc58 <col:24> 'unsigned int' <LValueToRValue>
    | | |       `-DeclRefExpr 0x5633d58edc20 <col:24> 'unsigned int' lvalue Var 0x5633d58c8b80 'i' 'unsigned int'
    | | `-CharacterLiteral 0x5633d58edc90 <col:28> 'int' 0
    | `-CompoundStmt 0x5633d58ee7d0 <line:36:3, line:43:3>
    |   |-ForStmt 0x5633d58ee760 <line:37:5, line:41:5>
    |   | |-BinaryOperator 0x5633d58edd50 <line:37:9, col:11> 'unsigned int' '='
    |   | | |-DeclRefExpr 0x5633d58edcf8 <col:9> 'unsigned int' lvalue Var 0x5633d58c8c00 'j' 'unsigned int'
    |   | | `-ImplicitCastExpr 0x5633d58edd38 <col:11> 'unsigned int' <IntegralCast>
    |   | |   `-IntegerLiteral 0x5633d58edd18 <col:11> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x5633d58edde0 <col:13, col:15> 'int' '<'
    |   | | |-ImplicitCastExpr 0x5633d58eddb0 <col:13> 'unsigned int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x5633d58edd70 <col:13> 'unsigned int' lvalue Var 0x5633d58c8c00 'j' 'unsigned int'
    |   | | `-ImplicitCastExpr 0x5633d58eddc8 <col:15> 'unsigned int' <IntegralCast>
    |   | |   `-IntegerLiteral 0x5633d58edd90 <col:15> 'int' 10
    |   | |-UnaryOperator 0x5633d58ede20 <col:18, col:19> 'unsigned int' postfix '++'
    |   | | `-DeclRefExpr 0x5633d58ede00 <col:18> 'unsigned int' lvalue Var 0x5633d58c8c00 'j' 'unsigned int'
    |   | `-CompoundStmt 0x5633d58ee748 <line:38:5, line:41:5>
    |   |   `-IfStmt 0x5633d58ee730 <line:39:9, line:40:20>
    |   |     |-BinaryOperator 0x5633d58ee6d8 <line:39:12, col:47> 'int' '=='
    |   |     | |-ImplicitCastExpr 0x5633d58ee6a8 <col:12, col:28> 'int' <IntegralCast>
    |   |     | | `-ImplicitCastExpr 0x5633d58ee678 <col:12, col:28> 'char' <LValueToRValue>
    |   |     | |   `-ArraySubscriptExpr 0x5633d58edea8 <col:12, col:28> 'char' lvalue
    |   |     | |     |-ImplicitCastExpr 0x5633d58ede78 <col:12> 'char *' <ArrayToPointerDecay>
    |   |     | |     | `-DeclRefExpr 0x5633d58ede38 <col:12> 'char [10]' lvalue Var 0x5633d58c85d0 'string_entrada' 'char [10]'
    |   |     | |     `-ImplicitCastExpr 0x5633d58ede90 <col:27> 'unsigned int' <LValueToRValue>
    |   |     | |       `-DeclRefExpr 0x5633d58ede58 <col:27> 'unsigned int' lvalue Var 0x5633d58c8b80 'i' 'unsigned int'
    |   |     | `-ImplicitCastExpr 0x5633d58ee6c0 <col:33, col:47> 'int' <IntegralCast>
    |   |     |   `-ImplicitCastExpr 0x5633d58ee690 <col:33, col:47> 'char' <LValueToRValue>
    |   |     |     `-ArraySubscriptExpr 0x5633d58ee658 <col:33, col:47> 'char' lvalue
    |   |     |       |-ImplicitCastExpr 0x5633d58edf08 <col:33> 'char *' <ArrayToPointerDecay>
    |   |     |       | `-DeclRefExpr 0x5633d58edec8 <col:33> 'char [11]' lvalue Var 0x5633d58c8690 'vetor_vogais' 'char [11]'
    |   |     |       `-ImplicitCastExpr 0x5633d58ee640 <col:46> 'unsigned int' <LValueToRValue>
    |   |     |         `-DeclRefExpr 0x5633d58edee8 <col:46> 'unsigned int' lvalue Var 0x5633d58c8c00 'j' 'unsigned int'
    |   |     `-UnaryOperator 0x5633d58ee718 <line:40:12, col:20> 'int' postfix '++'
    |   |       `-DeclRefExpr 0x5633d58ee6f8 <col:12> 'int' lvalue Var 0x5633d58edb60 'cont_aux' 'int'
    |   `-UnaryOperator 0x5633d58ee7b8 <line:42:5, col:6> 'unsigned int' postfix '++'
    |     `-DeclRefExpr 0x5633d58ee798 <col:5> 'unsigned int' lvalue Var 0x5633d58c8b80 'i' 'unsigned int'
    |-CallExpr 0x5633d58ee918 <line:44:3, col:35> 'void'
    | |-ImplicitCastExpr 0x5633d58ee900 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5633d58ee808 <col:3> 'void (int)' Function 0x5633d58c8020 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x5633d58ee8b0 <col:21, col:31> 'int' '=='
    |   |-ImplicitCastExpr 0x5633d58ee898 <col:21> 'unsigned int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5633d58ee868 <col:21> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5633d58ee828 <col:21> 'int' lvalue Var 0x5633d58edb60 'cont_aux' 'int'
    |   `-ImplicitCastExpr 0x5633d58ee880 <col:31> 'unsigned int' <LValueToRValue>
    |     `-DeclRefExpr 0x5633d58ee848 <col:31> 'unsigned int' lvalue Var 0x5633d58c8c80 'cont' 'unsigned int'
    `-ReturnStmt 0x5633d58ee960 <line:46:3, col:10>
      `-IntegerLiteral 0x5633d58ee940 <col:10> 'int' 0
