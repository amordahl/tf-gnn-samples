TranslationUnitDecl 0x559e0360df88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x559e0360e848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x559e0360e520 '__int128'
|-TypedefDecl 0x559e0360e8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x559e0360e540 'unsigned __int128'
|-TypedefDecl 0x559e0360ebc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x559e0360e990 'struct __NSConstantString_tag'
|   `-Record 0x559e0360e910 '__NSConstantString_tag'
|-TypedefDecl 0x559e0360ec68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x559e0360ec20 'char *'
|   `-BuiltinType 0x559e0360e020 'char'
|-TypedefDecl 0x559e0364db60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x559e0360ef00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x559e0360ed40 'struct __va_list_tag'
|     `-Record 0x559e0360ecc0 '__va_list_tag'
|-FunctionDecl 0x559e0364dca0 <pthread-wmm/mix044_pso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x559e0364dbd0 <col:31> col:34 'int'
|-FunctionDecl 0x559e0364de68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x559e0364df90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x559e0364e0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x559e0364e048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x559e0364e308 <col:40, col:99>
|   |-IfStmt 0x559e0364e2d8 <col:42, col:88>
|   | |-UnaryOperator 0x559e0364e1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x559e0364e1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x559e0364e180 <col:47> 'int' lvalue ParmVar 0x559e0364e048 'expression' 'int'
|   | `-CompoundStmt 0x559e0364e2c0 <col:59, col:88>
|   |   `-LabelStmt 0x559e0364e2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x559e0364e238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x559e0364e220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x559e0364e1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x559e0364df90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x559e0364e2f0 <col:89>
|   `-ReturnStmt 0x559e0364e2f8 <col:91>
|-FunctionDecl 0x559e0364e350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x559e0364e410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x559e0364e790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559e0364e4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x559e0364e548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x559e0364e5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x559e0364e648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x559e0364e850 <line:10:22>
|-FunctionDecl 0x559e036748a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559e0364e8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x559e0364e940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x559e0364e9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x559e0364ea40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x559e03674960 <line:13:22>
|-FunctionDecl 0x559e03674c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559e036749d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x559e03674a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x559e03674ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x559e03674cc8 <line:15:22>
|-TypedefDecl 0x559e03674d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x559e0360e0e0 'unsigned char'
|-TypedefDecl 0x559e03674da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x559e0360e100 'unsigned short'
|-TypedefDecl 0x559e03674e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x559e0360e120 'unsigned int'
|-TypedefDecl 0x559e03674e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x559e0360e140 'unsigned long'
|-TypedefDecl 0x559e03674ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x559e0360e040 'signed char'
|-TypedefDecl 0x559e03674f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x559e0360e0e0 'unsigned char'
|-TypedefDecl 0x559e03674fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x559e0360e060 'short'
|-TypedefDecl 0x559e03675048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x559e0360e100 'unsigned short'
|-TypedefDecl 0x559e036750b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x559e0360e080 'int'
|-TypedefDecl 0x559e03675128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x559e0360e120 'unsigned int'
|-TypedefDecl 0x559e03675198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x559e0360e0a0 'long'
|-TypedefDecl 0x559e03675208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x559e0360e140 'unsigned long'
|-TypedefDecl 0x559e03675278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x559e0360e0a0 'long'
|-TypedefDecl 0x559e036752e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x559e0360e140 'unsigned long'
|-TypedefDecl 0x559e03675358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x559e0360e140 'unsigned long'
|-TypedefDecl 0x559e036753c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x559e0360e120 'unsigned int'
|-TypedefDecl 0x559e03675438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x559e0360e120 'unsigned int'
|-TypedefDecl 0x559e036754a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x559e0360e140 'unsigned long'
|-TypedefDecl 0x559e03675518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x559e0360e140 'unsigned long'
|-TypedefDecl 0x559e03675588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x559e0360e120 'unsigned int'
|-TypedefDecl 0x559e036755f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x559e0360e140 'unsigned long'
|-TypedefDecl 0x559e03675668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x559e0360e0a0 'long'
|-TypedefDecl 0x559e036756d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x559e0360e0a0 'long'
|-TypedefDecl 0x559e03675748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x559e0360e080 'int'
|-RecordDecl 0x559e036757a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x559e03675918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x559e036759d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x559e03675970 'struct __fsid_t' sugar
|   `-RecordType 0x559e03675820 '__fsid_t'
|     `-Record 0x559e036757a0 ''
|-TypedefDecl 0x559e03675a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x559e0360e0a0 'long'
|-TypedefDecl 0x559e03675ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x559e0360e140 'unsigned long'
|-TypedefDecl 0x559e03675b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x559e0360e140 'unsigned long'
|-TypedefDecl 0x559e03675ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x559e0360e120 'unsigned int'
|-TypedefDecl 0x559e03675c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x559e0360e0a0 'long'
|-TypedefDecl 0x559e03675c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x559e0360e120 'unsigned int'
|-TypedefDecl 0x559e03675cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x559e0360e0a0 'long'
|-TypedefDecl 0x559e03675d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x559e0360e080 'int'
|-TypedefDecl 0x559e03675dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x559e0360e080 'int'
|-TypedefDecl 0x559e03675e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x559e0360e080 'int'
|-TypedefDecl 0x559e03675eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x559e0360e7a0 'void *'
|   `-BuiltinType 0x559e0360dfe0 'void'
|-TypedefDecl 0x559e03675f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x559e0360e0a0 'long'
|-TypedefDecl 0x559e03675f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x559e0360e0a0 'long'
|-TypedefDecl 0x559e03676008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x559e0360e0a0 'long'
|-TypedefDecl 0x559e03676078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x559e0360e140 'unsigned long'
|-TypedefDecl 0x559e036760e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x559e0360e140 'unsigned long'
|-TypedefDecl 0x559e03676158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x559e0360e140 'unsigned long'
|-TypedefDecl 0x559e036761c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x559e0360e140 'unsigned long'
|-TypedefDecl 0x559e03676238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x559e0360e0a0 'long'
|-TypedefDecl 0x559e036762a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x559e0360e0a0 'long'
|-TypedefDecl 0x559e03676318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x559e0360e0a0 'long'
|-TypedefDecl 0x559e03676388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x559e0360e140 'unsigned long'
|-TypedefDecl 0x559e03676418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x559e036763e0 '__off64_t' sugar
|   |-Typedef 0x559e036756d8 '__off64_t'
|   `-BuiltinType 0x559e0360e0a0 'long'
|-TypedefDecl 0x559e03676510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x559e036764d0 '__quad_t *'
|   `-TypedefType 0x559e03676470 '__quad_t' sugar
|     |-Typedef 0x559e03675278 '__quad_t'
|     `-BuiltinType 0x559e0360e0a0 'long'
|-TypedefDecl 0x559e03676580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x559e0360ec20 'char *'
|   `-BuiltinType 0x559e0360e020 'char'
|-TypedefDecl 0x559e036765f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x559e0360e0a0 'long'
|-TypedefDecl 0x559e03676660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x559e0360e120 'unsigned int'
|-FunctionDecl 0x559e036767a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x559e036766d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x559e03676ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x559e03676ad8 <line:72:3, col:34>
|     `-CallExpr 0x559e03676a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x559e03676a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x559e03676a10 <col:10> '<builtin fn type>' Function 0x559e03676880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x559e03676ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x559e03676a30 <col:29> 'unsigned int' lvalue ParmVar 0x559e036766d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x559e03676880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x559e03676920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x559e03676990 <col:10> Implicit
| `-ConstAttr 0x559e036769e8 <col:10> Implicit
|-FunctionDecl 0x559e03676c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x559e03676b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x559e03676f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x559e03676f48 <line:77:3, col:34>
|     `-CallExpr 0x559e03676f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x559e03676ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x559e03676e78 <col:10> '<builtin fn type>' Function 0x559e03676ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x559e03676f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x559e03676e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x559e03676b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x559e03676ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x559e03676d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x559e03676df8 <col:10> Implicit
| `-ConstAttr 0x559e03676e50 <col:10> Implicit
|-TypedefDecl 0x559e03676f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x559e0360e140 'unsigned long'
|-TypedefDecl 0x559e03677018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x559e03676fe0 '__time_t' sugar
|   |-Typedef 0x559e03675c18 '__time_t'
|   `-BuiltinType 0x559e0360e0a0 'long'
|-RecordDecl 0x559e03677070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x559e03677128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x559e036771b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x559e03677248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x559e03677210 '__pid_t' sugar
|   |-Typedef 0x559e03675748 '__pid_t'
|   `-BuiltinType 0x559e0360e080 'int'
|-RecordDecl 0x559e036772a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x559e03677360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x559e036773b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x559e03677470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x559e036774d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x559e0360e140 'unsigned long'
|-RecordDecl 0x559e03677530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x559e036777c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x559e036798b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x559e03677810 'struct cpu_set_t' sugar
|   `-RecordType 0x559e036775b0 'cpu_set_t'
|     `-Record 0x559e03677530 ''
|-FunctionDecl 0x559e03679b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x559e03679958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559e03679a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x559e03679c38 <line:107:19>
|-FunctionDecl 0x559e03679e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x559e03679ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x559e03679eb8 <col:69>
|-FunctionDecl 0x559e0367a030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x559e03679f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x559e0367a0d8 <col:64>
|-FunctionDecl 0x559e0367a398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x559e0367a140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559e0367a278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x559e0367a448 <line:113:22>
|-FunctionDecl 0x559e0367a6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x559e0367a4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559e0367a5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x559e0367a778 <col:88>
|-FunctionDecl 0x559e0367aa98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x559e0367a7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559e0367a8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x559e0367a950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x559e0367ab50 <col:62>
|-FunctionDecl 0x559e0367acc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x559e0367abb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x559e0367ad70 <col:63>
|-FunctionDecl 0x559e0367ae98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x559e0367af38 <col:47>
|-FunctionDecl 0x559e0367b040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x559e0367afa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x559e0367b0e8 <col:69>
|-FunctionDecl 0x559e0367b1f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x559e0367b158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x559e0367b298 <col:69>
|-FunctionDecl 0x559e0367b558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559e0367b300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559e0367b438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x559e0367b608 <col:88>
|-TypedefDecl 0x559e0367b698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x559e0367b660 '__clock_t' sugar
|   |-Typedef 0x559e03675a58 '__clock_t'
|   `-BuiltinType 0x559e0360e0a0 'long'
|-TypedefDecl 0x559e0367b728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x559e0367b6f0 '__clockid_t' sugar
|   |-Typedef 0x559e03675e48 '__clockid_t'
|   `-BuiltinType 0x559e0360e080 'int'
|-TypedefDecl 0x559e0367b7b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x559e0367b780 '__timer_t' sugar
|   |-Typedef 0x559e03675eb8 '__timer_t'
|   `-PointerType 0x559e0360e7a0 'void *'
|     `-BuiltinType 0x559e0360dfe0 'void'
|-RecordDecl 0x559e0367b810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x559e0367b8e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x559e0367b950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x559e0367b9b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x559e0367ba20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x559e0367ba88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x559e0367baf0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x559e0367bb58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x559e0367bbc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x559e0367bc28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x559e0367bc90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x559e0367bcf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x559e0367bd48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x559e0367be18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x559e0367be88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x559e0367bf30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x559e0367c100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x559e0367c1a0 <col:45>
|-FunctionDecl 0x559e0367c380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x559e0367c270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x559e0367c428 <col:54>
|-FunctionDecl 0x559e0367c628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x559e0367c490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x559e0367c508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x559e0367c6d8 <line:157:22>
| `-ConstAttr 0x559e0367c730 <col:63>
|-FunctionDecl 0x559e0367d560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559e0367c828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x559e0367d608 <col:56>
|-FunctionDecl 0x559e0367d9b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x559e0367d678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x559e0367d6f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559e0367d770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x559e0367d868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x559e0367da70 <col:54>
|-RecordDecl 0x559e0367dac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x559e0367db78 parent 0x559e0360df88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x559e0367ddd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x559e0367de78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x559e0367dee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x559e0367df48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x559e0367e038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x559e0367e158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x559e0367e100 'struct __locale_struct *'
|   `-ElaboratedType 0x559e0367e090 'struct __locale_struct' sugar
|     `-RecordType 0x559e0367db50 'struct __locale_struct'
|       `-Record 0x559e0367dac8 '__locale_struct'
|-TypedefDecl 0x559e0367e208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x559e0367e1d0 '__locale_t' sugar
|   |-Typedef 0x559e0367e158 '__locale_t'
|   `-PointerType 0x559e0367e100 'struct __locale_struct *'
|     `-ElaboratedType 0x559e0367e090 'struct __locale_struct' sugar
|       `-RecordType 0x559e0367db50 'struct __locale_struct'
|         `-Record 0x559e0367dac8 '__locale_struct'
|-FunctionDecl 0x559e0367e610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x559e0367e278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x559e0367e2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559e0367e370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x559e0367e400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x559e0367e478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x559e0367e6d8 <col:40>
|-FunctionDecl 0x559e0367e8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x559e0367e7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x559e0367e970 <col:66>
|-FunctionDecl 0x559e0367ea80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x559e0367e9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x559e0367eb28 <col:69>
|-FunctionDecl 0x559e0367ed58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x559e0367eb90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559e0367ec20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x559e0367ee08 <col:52>
|-FunctionDecl 0x559e0367efb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x559e0367ee70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559e0367ef00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x559e0367f060 <col:55>
|-FunctionDecl 0x559e0367f1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x559e0367f0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x559e0367f2a0 <col:62>
|-FunctionDecl 0x559e0367f418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x559e0367f308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x559e0367f4c0 <col:60>
|-FunctionDecl 0x559e0367f718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x559e0367f578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x559e0367f5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x559e0367f7c8 <col:44>
|-FunctionDecl 0x559e0367f9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x559e0367f830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559e0367f8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x559e0367fa88 <col:49>
|-VarDecl 0x559e0367fb88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x559e0367fc08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x559e0367fc88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x559e0367fd50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x559e0367fe80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x559e0367ff20 <col:42>
|-VarDecl 0x559e0367ff90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x559e03680010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x559e03680198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x559e03680088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x559e03680240 <col:57>
|-FunctionDecl 0x559e03680350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559e036802c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x559e036803f8 <col:56>
|-FunctionDecl 0x559e03681540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559e03680478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x559e036815e8 <col:59>
|-FunctionDecl 0x559e036816f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x559e03681658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x559e03681798 <col:48>
| `-ConstAttr 0x559e036817f0 <col:89>
|-FunctionDecl 0x559e03681a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x559e036818a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x559e03681938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x559e03681cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559e03681b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559e03681bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x559e03681d68 <col:88>
|-FunctionDecl 0x559e03681f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559e03681dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559e03681e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x559e03681fb0 <col:88>
|-FunctionDecl 0x559e036821c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x559e03682018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559e036820a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x559e03682278 <line:208:22>
|-FunctionDecl 0x559e036825e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x559e036822e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559e03682360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x559e036823f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x559e03682480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x559e036828e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x559e036826e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x559e036827c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x559e03682998 <col:85>
|-FunctionDecl 0x559e03682d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x559e03682a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559e03682b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x559e03682c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x559e03682e40 <col:52>
|-FunctionDecl 0x559e03682fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x559e03682ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x559e03683060 <col:61>
|-FunctionDecl 0x559e03683560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x559e036830c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x559e03683148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x559e03683278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x559e03683368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x559e03683620 <col:62>
|-FunctionDecl 0x559e03683838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x559e03683688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x559e03683718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x559e036838e8 <line:221:22>
|-FunctionDecl 0x559e036839e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x559e03683950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x559e03683a90 <col:65>
|-TypedefDecl 0x559e03683b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x559e0360e140 'unsigned long'
|-RecordDecl 0x559e03683b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x559e03683ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x559e03683d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559e03683db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x559e03683d60 'union pthread_attr_t' sugar
|   `-RecordType 0x559e03683be0 'union pthread_attr_t'
|     `-Record 0x559e03683b58 'pthread_attr_t'
|-RecordDecl 0x559e03683e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x559e03683f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x559e03684000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x559e036840b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x559e03684050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x559e03683e90 'struct __pthread_internal_list'
|     `-Record 0x559e03683e10 '__pthread_internal_list'
|-RecordDecl 0x559e03684120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x559e036841c8 parent 0x559e0360df88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x559e036842a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559e03684308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x559e03684370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x559e036843d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x559e03684440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x559e036844a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x559e03688580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x559e03688630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x559e03688720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x559e03688788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559e03688910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x559e036888b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x559e036841a0 'pthread_mutex_t'
|     `-Record 0x559e03684120 ''
|-RecordDecl 0x559e03688980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x559e03688ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559e03688b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559e03688be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x559e03688b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x559e03688a00 'pthread_mutexattr_t'
|     `-Record 0x559e03688980 ''
|-RecordDecl 0x559e03688c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x559e03688cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x559e03688dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559e03688e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x559e03688e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x559e03688ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x559e03688f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x559e03688fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x559e03689030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x559e03689098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x559e03689150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix044_pso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix044_pso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x559e03689240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x559e036892a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x559e036893e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x559e03689380 'union pthread_cond_t' sugar
|   `-RecordType 0x559e03688cd0 'pthread_cond_t'
|     `-Record 0x559e03688c50 ''
|-RecordDecl 0x559e03689450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x559e03689590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559e036895f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559e036896b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x559e03689650 'union pthread_condattr_t' sugar
|   `-RecordType 0x559e036894d0 'pthread_condattr_t'
|     `-Record 0x559e03689450 ''
|-TypedefDecl 0x559e03689738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x559e0360e120 'unsigned int'
|-TypedefDecl 0x559e036897a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x559e0360e080 'int'
|-RecordDecl 0x559e03689800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x559e036898a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x559e03689970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559e036899d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x559e03689a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x559e03689aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x559e03689b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x559e03689b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x559e03689be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x559e03689c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x559e03689cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x559e03689d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x559e03689d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x559e03689e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix044_pso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix044_pso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x559e03689ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x559e03689f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559e0368a090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x559e0368a030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x559e03689880 'pthread_rwlock_t'
|     `-Record 0x559e03689800 ''
|-RecordDecl 0x559e0368a100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x559e0368a240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x559e0368a2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559e0368a360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x559e0368a300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x559e0368a180 'pthread_rwlockattr_t'
|     `-Record 0x559e0368a100 ''
|-TypedefDecl 0x559e0368a3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x559e0360e084 'volatile int' volatile
|   `-BuiltinType 0x559e0360e080 'int'
|-RecordDecl 0x559e0368a440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x559e0368c5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x559e0368c618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559e0368c6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x559e0368c670 'union pthread_barrier_t' sugar
|   `-RecordType 0x559e0368a4c0 'pthread_barrier_t'
|     `-Record 0x559e0368a440 ''
|-RecordDecl 0x559e0368c740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x559e0368c840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559e0368c8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559e0368c960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x559e0368c900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x559e0368c7c0 'pthread_barrierattr_t'
|     `-Record 0x559e0368c740 ''
|-TypedefDecl 0x559e0368ca78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x559e0368ca10 'long [8]' 8 
|   `-BuiltinType 0x559e0360e0a0 'long'
|-EnumDecl 0x559e0368cad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x559e0368cb98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x559e0368cbe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x559e0368cc38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x559e0368cd08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x559e0368cd58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x559e0368cda8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x559e0368cdf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x559e0368ce80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x559e0368ce68 <col:26> 'int'
| |   `-DeclRefExpr 0x559e0368ce48 <col:26> 'int' EnumConstant 0x559e0368cd08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x559e0368cf08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x559e0368cef0 <col:29> 'int'
| |   `-DeclRefExpr 0x559e0368ced0 <col:29> 'int' EnumConstant 0x559e0368cd58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x559e0368cf90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x559e0368cf78 <col:30> 'int'
| |   `-DeclRefExpr 0x559e0368cf58 <col:30> 'int' EnumConstant 0x559e0368cda8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x559e0368d018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x559e0368d000 <col:27> 'int'
|     `-DeclRefExpr 0x559e0368cfe0 <col:27> 'int' EnumConstant 0x559e0368ce80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x559e0368d068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x559e0368d138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x559e0368d1c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x559e0368d1a8 <col:30> 'int'
| |   `-DeclRefExpr 0x559e0368d188 <col:30> 'int' EnumConstant 0x559e0368d138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x559e0368d210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x559e0368d298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x559e0368d280 <col:29> 'int'
|     `-DeclRefExpr 0x559e0368d260 <col:29> 'int' EnumConstant 0x559e0368d210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x559e0368d2e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x559e0368d3b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x559e0368d408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x559e0368d458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x559e0368d4a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x559e0368d5c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x559e0368d610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x559e0368d660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x559e0368d6e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x559e0368d6d0 <col:31> 'int'
|     `-DeclRefExpr 0x559e0368d6b0 <col:31> 'int' EnumConstant 0x559e0368d5c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x559e0368d738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x559e0368d808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x559e0368d858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x559e0368d8a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x559e0368d978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x559e0368d9c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x559e0368da18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x559e0368dae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x559e0368db38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x559e0368db88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x559e0368ddc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x559e0368de30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x559e0368de98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x559e0368dfb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x559e0368e008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x559e0368e0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x559e0368e128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x559e0368e178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x559e0368e248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x559e0368e298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x559e0368e8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x559e0368e390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x559e0368e4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559e0368e6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x559e0368e760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x559e0368e9b8 <col:47>
| |-NonNullAttr 0x559e0368ea10 <col:77, col:94> 1 3
| `-CallbackAttr 0x559e0368ea48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x559e0368eb70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x559e0368eaa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x559e0368edc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x559e0368ec28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x559e0368eca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x559e0368ef98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x559e0368ee88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x559e0368f040 <col:60>
|-FunctionDecl 0x559e0368f190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x559e0368f230 <col:54>
| `-ConstAttr 0x559e0368f288 <col:95>
|-FunctionDecl 0x559e0368f458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x559e0368f2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559e0368f338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x559e0368f508 <line:394:19>
| `-ConstAttr 0x559e0368f560 <col:60>
|-FunctionDecl 0x559e0368ff68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x559e0368fe30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x559e03690010 <col:71>
| `-NonNullAttr 0x559e03690068 <col:112, col:126> 1
|-FunctionDecl 0x559e03690170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x559e036900b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x559e03690218 <line:397:22>
| `-NonNullAttr 0x559e03690270 <col:63, col:77> 1
|-FunctionDecl 0x559e03690498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x559e036902b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x559e03690338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x559e03690548 <line:400:22>
| `-NonNullAttr 0x559e036905a0 <col:63, col:80> 1 2
|-FunctionDecl 0x559e036907a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559e036905e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559e03690668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x559e03690858 <line:403:22>
| `-NonNullAttr 0x559e036908b0 <col:63, col:77> 1
|-FunctionDecl 0x559e03690b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x559e036908f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x559e036909a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x559e03690bb8 <line:406:22>
| `-NonNullAttr 0x559e03690c10 <col:63, col:80> 1 2
|-FunctionDecl 0x559e03691e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x559e03690c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559e03690cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559e03691ef8 <line:409:22>
| `-NonNullAttr 0x559e03691f50 <col:63, col:77> 1
|-FunctionDecl 0x559e03692188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559e03691f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559e03692028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x559e03692238 <line:412:22>
| `-NonNullAttr 0x559e03692290 <col:63, col:80> 1 2
|-FunctionDecl 0x559e036924c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559e036922d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x559e03692368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x559e03692578 <col:37>
| `-NonNullAttr 0x559e036925d0 <col:78, col:95> 1 2
|-FunctionDecl 0x559e036927b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559e03692618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559e03692698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x559e03692868 <line:418:22>
| `-NonNullAttr 0x559e036928c0 <col:63, col:80> 1 2
|-FunctionDecl 0x559e03692a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559e03692908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559e03692988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x559e03692af8 <line:420:22>
| `-NonNullAttr 0x559e03692b50 <col:63, col:77> 1
|-FunctionDecl 0x559e03692cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559e03692b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559e03692c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x559e03692da8 <line:423:22>
| `-NonNullAttr 0x559e03693e30 <col:63, col:80> 1 2
|-FunctionDecl 0x559e03693fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559e03693e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559e03693ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x559e03694068 <line:426:22>
| `-NonNullAttr 0x559e036940c0 <col:63, col:77> 1
|-FunctionDecl 0x559e03694268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559e03694108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559e03694188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x559e03694318 <line:429:22>
| `-NonNullAttr 0x559e03694370 <col:63, col:80> 1 2
|-FunctionDecl 0x559e036944f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559e036943b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559e03694438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x559e036945a8 <line:431:22>
| `-NonNullAttr 0x559e03694600 <col:63, col:77> 1
|-FunctionDecl 0x559e03694828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x559e03694648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559e036946c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x559e036948d8 <line:434:22>
| |-NonNullAttr 0x559e03694930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x559e03694968 <col:100> "" ""
|-FunctionDecl 0x559e03694b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x559e036949b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559e03694a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x559e03694c28 <line:437:22>
| |-NonNullAttr 0x559e03694c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x559e03694cb8 <col:97> "" ""
|-FunctionDecl 0x559e03694eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x559e03694d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559e03694d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x559e03694f68 <line:440:22>
| `-NonNullAttr 0x559e03694fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x559e03695140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x559e03695008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559e03695080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559e036951f0 <line:443:22>
| `-NonNullAttr 0x559e03695248 <col:63, col:77> 1
|-FunctionDecl 0x559e03695538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x559e03695298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559e03695318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x559e03695390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x559e036955f0 <line:447:22>
| `-NonNullAttr 0x559e03695648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x559e036958f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x559e036956a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559e03695720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x559e03695798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559e036959b0 <col:43>
| `-NonNullAttr 0x559e03695a08 <col:84, col:98> 1
|-FunctionDecl 0x559e03695cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x559e03695a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559e03695ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x559e03695b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x559e03695d80 <line:452:22>
| `-NonNullAttr 0x559e03695dd8 <col:63, col:77> 3
|-FunctionDecl 0x559e036960e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559e03695e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559e03695ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x559e03695f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x559e036961a0 <line:456:22>
| `-NonNullAttr 0x559e036961f8 <col:63, col:80> 2 3
|-FunctionDecl 0x559e036963e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x559e03696248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559e036962c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x559e03696498 <line:458:22>
|-FunctionDecl 0x559e03696868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x559e03696560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x559e03696700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x559e03696918 <col:52, col:69> 1 2
|-FunctionDecl 0x559e03696ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x559e036969a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x559e03696a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x559e03696ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x559e03696b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x559e03696c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x559e03696e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x559e03696d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x559e03696fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x559e03697040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x559e036970e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x559e036971d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x559e03697240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x559e03697410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix044_pso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x559e03697508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x559e036975c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x559e03697560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x559e036970c0 '__pthread_unwind_buf_t'
| |   `-Record 0x559e03697040 ''
| `-AlignedAttr 0x559e03697618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x559e03697690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x559e036977f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x559e03697858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x559e036978c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x559e03697928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x559e03697b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x559e03697a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x559e03697c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x559e03697be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x559e03697e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559e03697d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x559e03697f18 <line:487:22>
|-RecordDecl 0x559e03697f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x559e03698288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x559e036980e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x559e03698168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x559e03698338 <col:86>
| `-ReturnsTwiceAttr 0x559e03698390 <col:12> Implicit
|-FunctionDecl 0x559e036986b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559e03698460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x559e03698570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x559e03698768 <line:493:22>
| `-NonNullAttr 0x559e036987c0 <col:63, col:77> 1
|-FunctionDecl 0x559e03698938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559e03698808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559e036989e0 <line:495:22>
| `-NonNullAttr 0x559e03698a38 <col:63, col:77> 1
|-FunctionDecl 0x559e03698b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559e03698a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559e03698be8 <line:497:22>
| `-NonNullAttr 0x559e03698c40 <col:52, col:66> 1
|-FunctionDecl 0x559e03698d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559e03698c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559e03698de8 <line:499:22>
| `-NonNullAttr 0x559e03698e40 <col:52, col:66> 1
|-FunctionDecl 0x559e03699088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559e03698e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559e03698f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559e03699138 <col:36>
| `-NonNullAttr 0x559e03699190 <col:66, col:83> 1 2
|-FunctionDecl 0x559e03699290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559e036991d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559e03699338 <line:504:22>
| `-NonNullAttr 0x559e03699390 <col:52, col:66> 1
|-FunctionDecl 0x559e03699628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559e03699440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559e036994c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x559e036996d8 <line:508:22>
| `-NonNullAttr 0x559e03699730 <col:63, col:80> 1 2
|-FunctionDecl 0x559e036999f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x559e03699778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559e036997f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x559e03699878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x559e03699ab0 <line:512:22>
| `-NonNullAttr 0x559e03699b08 <col:63, col:80> 1 3
|-FunctionDecl 0x559e03699c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559e03699b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559e03699cb8 <line:514:22>
| `-NonNullAttr 0x559e03699d10 <col:63, col:77> 1
|-FunctionDecl 0x559e03699f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559e03699dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x559e03699fe0 <line:516:22>
| `-NonNullAttr 0x559e0369a038 <col:63, col:77> 1
|-FunctionDecl 0x559e0369a140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559e0369a088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x559e0369a1e8 <line:518:22>
| `-NonNullAttr 0x559e0369a240 <col:63, col:77> 1
|-FunctionDecl 0x559e0369a468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559e0369a288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559e0369a308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x559e0369a518 <line:522:22>
| `-NonNullAttr 0x559e0369a570 <col:63, col:80> 1 2
|-FunctionDecl 0x559e0369a778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559e0369a5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559e0369a638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x559e0369a828 <line:525:22>
| `-NonNullAttr 0x559e0369a880 <col:63, col:77> 1
|-FunctionDecl 0x559e0369aa28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559e0369a8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559e0369a948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x559e0369aad8 <line:528:22>
| `-NonNullAttr 0x559e0369ab30 <col:63, col:80> 1 2
|-FunctionDecl 0x559e0369acb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559e0369ab78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559e0369abf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x559e0369ad68 <line:530:22>
| `-NonNullAttr 0x559e0369adc0 <col:63, col:77> 1
|-FunctionDecl 0x559e0369bf90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559e0369ae08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559e0369beb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x559e0369c040 <line:534:22>
| `-NonNullAttr 0x559e0369c098 <col:63, col:80> 1 2
|-FunctionDecl 0x559e0369c228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559e0369c0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559e0369c168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x559e0369c2d8 <line:537:22>
| `-NonNullAttr 0x559e0369c330 <col:63, col:77> 1
|-FunctionDecl 0x559e0369c4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559e0369c378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559e0369c3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x559e0369c588 <line:541:22>
| `-NonNullAttr 0x559e0369c5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x559e0369c768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559e0369c628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559e0369c6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x559e0369c818 <line:544:22>
| `-NonNullAttr 0x559e0369c870 <col:63, col:77> 1
|-FunctionDecl 0x559e0369ca58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x559e0369c8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x559e0369c938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x559e0369cb08 <line:547:22>
| `-NonNullAttr 0x559e0369cb60 <col:63, col:80> 1 2
|-FunctionDecl 0x559e0369cce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559e0369cba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559e0369cc28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x559e0369cd98 <line:550:22>
| `-NonNullAttr 0x559e0369cdf0 <col:63, col:77> 1
|-FunctionDecl 0x559e0369e168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x559e0369df10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559e0369e020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x559e0369e218 <col:29>
| `-NonNullAttr 0x559e0369e270 <col:70, col:84> 1
|-FunctionDecl 0x559e0369e3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559e0369e2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559e0369e490 <line:555:22>
| `-NonNullAttr 0x559e0369e4e8 <col:63, col:77> 1
|-FunctionDecl 0x559e0369e5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559e0369e538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559e0369e698 <line:557:22>
| `-NonNullAttr 0x559e0369e6f0 <col:52, col:66> 1
|-FunctionDecl 0x559e0369e7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559e0369e738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559e0369e898 <line:559:19>
| `-NonNullAttr 0x559e0369e8f0 <col:49, col:63> 1
|-FunctionDecl 0x559e0369eb28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559e0369e938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559e0369e9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559e0369ebd8 <col:39>
| `-NonNullAttr 0x559e0369ec30 <col:69, col:86> 1 2
|-FunctionDecl 0x559e0369ed30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559e0369ec78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559e0369edd8 <line:564:22>
| `-NonNullAttr 0x559e0369ee30 <col:52, col:66> 1
|-FunctionDecl 0x559e0369ef98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559e0369eee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559e0369f040 <line:566:22>
| `-NonNullAttr 0x559e0369f098 <col:52, col:66> 1
|-FunctionDecl 0x559e0369f258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559e0369f0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559e0369f178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559e0369f308 <col:39>
| `-NonNullAttr 0x559e0369f360 <col:69, col:86> 1 2
|-FunctionDecl 0x559e0369f460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559e0369f3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559e0369f508 <line:571:22>
| `-NonNullAttr 0x559e0369f560 <col:52, col:66> 1
|-FunctionDecl 0x559e0369f748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x559e0369f610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x559e0369f7f0 <line:573:22>
| `-NonNullAttr 0x559e0369f848 <col:63, col:77> 1
|-FunctionDecl 0x559e0369f950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x559e0369f898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x559e0369f9f8 <line:575:22>
| `-NonNullAttr 0x559e0369fa50 <col:63, col:77> 1
|-FunctionDecl 0x559e0369fc78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559e0369fa98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x559e0369fb18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x559e0369fd28 <line:579:22>
| `-NonNullAttr 0x559e0369fd80 <col:63, col:80> 1 2
|-FunctionDecl 0x559e0369ffa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x559e0369fdc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x559e0369fe48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x559e036a0058 <line:582:22>
| `-NonNullAttr 0x559e036a00b0 <col:63, col:77> 1
|-FunctionDecl 0x559e036a0258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559e036a00f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x559e036a0178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x559e036a0308 <line:586:22>
| `-NonNullAttr 0x559e036a0360 <col:63, col:80> 1 2
|-FunctionDecl 0x559e036a04e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x559e036a03a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x559e036a0428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x559e036a0598 <col:36>
| `-NonNullAttr 0x559e036a05f0 <col:77, col:91> 1
|-FunctionDecl 0x559e036a0928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x559e036a06d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559e036a07e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x559e036a09d8 <line:591:22>
| `-NonNullAttr 0x559e036a0a30 <col:63, col:77> 1
|-FunctionDecl 0x559e036a0ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559e036a0a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559e036a0c50 <line:593:22>
| `-NonNullAttr 0x559e036a0ca8 <col:63, col:77> 1
|-FunctionDecl 0x559e036a0db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559e036a0cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559e036a0e58 <line:595:22>
| `-NonNullAttr 0x559e036a0eb0 <col:52, col:66> 1
|-FunctionDecl 0x559e036a0fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559e036a0f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559e036a1070 <line:597:22>
| `-NonNullAttr 0x559e036a10c8 <col:52, col:66> 1
|-FunctionDecl 0x559e036a12f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x559e036a1118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559e036a1190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x559e036a13a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x559e036a16d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559e036a1428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559e036a14a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559e036a1530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x559e036a1790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x559e036a19a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x559e036a1870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x559e036a1a50 <line:606:22>
| `-NonNullAttr 0x559e036a1aa8 <col:63, col:77> 1
|-FunctionDecl 0x559e036a1bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x559e036a1af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x559e036a1c58 <line:608:22>
| `-NonNullAttr 0x559e036a1cb0 <col:63, col:77> 1
|-FunctionDecl 0x559e036a1f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559e036a1cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x559e036a1d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x559e036a1fc0 <line:612:22>
| `-NonNullAttr 0x559e036a2018 <col:63, col:80> 1 2
|-FunctionDecl 0x559e036a2228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x559e036a2068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x559e036a20e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x559e036a22d8 <col:37>
| `-NonNullAttr 0x559e036a2330 <col:78, col:92> 1
|-FunctionDecl 0x559e036a2548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x559e036a2378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x559e036a2420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x559e036a25f8 <line:618:22>
| `-NonNullAttr 0x559e036a2650 <col:63, col:80> 1 2
|-FunctionDecl 0x559e036a2818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x559e036a2698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x559e036a2710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x559e036a28c8 <line:621:22>
| `-NonNullAttr 0x559e036a2920 <col:63, col:77> 1
|-FunctionDecl 0x559e036a2bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x559e036a2a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x559e036a2a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x559e036a2c78 <line:623:22>
| `-NonNullAttr 0x559e036a2cd0 <col:63, col:77> 1
|-FunctionDecl 0x559e036a2e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559e036a2d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559e036a2f20 <line:625:22>
| `-NonNullAttr 0x559e036a2f78 <col:63, col:77> 1
|-FunctionDecl 0x559e036a3080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559e036a2fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559e036a3128 <line:627:22>
| `-NonNullAttr 0x559e036a3180 <col:52, col:66> 1
|-FunctionDecl 0x559e036a3280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559e036a31c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559e036a3328 <line:629:22>
| `-NonNullAttr 0x559e036a3380 <col:52, col:66> 1
|-FunctionDecl 0x559e036a3480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559e036a33c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559e036a3528 <line:631:22>
| `-NonNullAttr 0x559e036a3580 <col:52, col:66> 1
|-FunctionDecl 0x559e036a3958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x559e036a3660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x559e036a3770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x559e036a37f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x559e036a3a10 <line:635:22>
| `-NonNullAttr 0x559e036a3a68 <col:63, col:77> 1
|-FunctionDecl 0x559e036a3be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x559e036a3ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x559e036a3c90 <line:637:22>
| `-NonNullAttr 0x559e036a3ce8 <col:63, col:77> 1
|-FunctionDecl 0x559e036a3df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x559e036a3d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x559e036a3e98 <line:639:22>
| `-NonNullAttr 0x559e036a3ef0 <col:52, col:66> 1
|-FunctionDecl 0x559e036a40e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x559e036a3fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x559e036a4190 <line:641:22>
| `-NonNullAttr 0x559e036a41e8 <col:63, col:77> 1
|-FunctionDecl 0x559e036a42f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x559e036a4238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x559e036a4398 <line:643:22>
| `-NonNullAttr 0x559e036a43f0 <col:63, col:77> 1
|-FunctionDecl 0x559e036a4618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559e036a4438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x559e036a44b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x559e036a46c8 <line:647:22>
| `-NonNullAttr 0x559e036a4720 <col:63, col:80> 1 2
|-FunctionDecl 0x559e036a4928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x559e036a4768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x559e036a47e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x559e036a49d8 <line:650:22>
| `-NonNullAttr 0x559e036a4a30 <col:63, col:77> 1
|-FunctionDecl 0x559e036a4d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x559e036a4b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x559e036a4c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x559e036a4e28 <line:653:22>
| `-NonNullAttr 0x559e036a4e80 <col:63, col:77> 1
|-FunctionDecl 0x559e036a4fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x559e036a4ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x559e036a5090 <col:69>
|-FunctionDecl 0x559e036a5208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x559e036a50f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x559e036a52b0 <col:72>
|-FunctionDecl 0x559e036a54e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x559e036a5318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x559e036a53c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x559e036a5598 <col:44>
|-FunctionDecl 0x559e036a57b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x559e036a5600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559e036a5678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x559e036a5868 <line:660:22>
| `-NonNullAttr 0x559e036a58c0 <col:63, col:77> 2
|-FunctionDecl 0x559e036a5d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x559e036a59a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x559e036a5ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x559e036a5bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x559e036a5dc0 <col:47>
|-FunctionDecl 0x559e036a6f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x559e036a5e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559e036a70b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x559e036a7020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559e036a7210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x559e036a7178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559e036a7368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x559e036a72d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559e036a7430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x559e036a74f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x559e036a75b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x559e036a7668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x559e036a76e8 prev 0x559e036a7668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x559e036a7750 <col:24> 'int' 0
|-VarDecl 0x559e036a7788 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x559e036a7808 prev 0x559e036a7788 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x559e036a7870 <col:27> 'int' 0
|-VarDecl 0x559e036a78a8 <line:676:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x559e036a7928 prev 0x559e036a78a8 <line:677:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x559e036a7990 <col:27> 'int' 0
|-VarDecl 0x559e036a79c8 <line:678:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x559e036a7a48 prev 0x559e036a79c8 <line:679:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x559e036a7ab0 <col:27> 'int' 0
|-VarDecl 0x559e036a7ae8 <line:680:1, col:5> col:5 used a 'int'
|-VarDecl 0x559e036a7b68 prev 0x559e036a7ae8 <line:681:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x559e036a7bd0 <col:9> 'int' 0
|-VarDecl 0x559e036a7c08 <line:682:1, col:5> col:5 used b 'int'
|-VarDecl 0x559e036a7c88 prev 0x559e036a7c08 <line:683:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x559e036a7cf0 <col:9> 'int' 0
|-VarDecl 0x559e036a7d20 <line:684:1, col:7> col:7 used b$flush_delayed '_Bool'
|-VarDecl 0x559e036a7da0 <line:685:1, col:5> col:5 used b$mem_tmp 'int'
|-VarDecl 0x559e036a7e18 <line:686:1, col:7> col:7 used b$r_buff0_thd0 '_Bool'
|-VarDecl 0x559e036a7e90 <line:687:1, col:7> col:7 used b$r_buff0_thd1 '_Bool'
|-VarDecl 0x559e036a7f70 <line:688:1, col:7> col:7 used b$r_buff0_thd2 '_Bool'
|-VarDecl 0x559e036a7fe8 <line:689:1, col:7> col:7 used b$r_buff0_thd3 '_Bool'
|-VarDecl 0x559e036a8060 <line:690:1, col:7> col:7 used b$r_buff0_thd4 '_Bool'
|-VarDecl 0x559e036a80d8 <line:691:1, col:7> col:7 used b$r_buff1_thd0 '_Bool'
|-VarDecl 0x559e036a8150 <line:692:1, col:7> col:7 used b$r_buff1_thd1 '_Bool'
|-VarDecl 0x559e036a81c8 <line:693:1, col:7> col:7 used b$r_buff1_thd2 '_Bool'
|-VarDecl 0x559e036a8240 <line:694:1, col:7> col:7 used b$r_buff1_thd3 '_Bool'
|-VarDecl 0x559e036a82b8 <line:695:1, col:7> col:7 used b$r_buff1_thd4 '_Bool'
|-VarDecl 0x559e036a8330 <line:696:1, col:7> col:7 b$read_delayed '_Bool'
|-VarDecl 0x559e036a83b0 <line:697:1, col:6> col:6 b$read_delayed_var 'int *'
|-VarDecl 0x559e036a8430 <line:698:1, col:5> col:5 used b$w_buff0 'int'
|-VarDecl 0x559e036a84a8 <line:699:1, col:7> col:7 used b$w_buff0_used '_Bool'
|-VarDecl 0x559e036a8528 <line:700:1, col:5> col:5 used b$w_buff1 'int'
|-VarDecl 0x559e036a85a0 <line:701:1, col:7> col:7 used b$w_buff1_used '_Bool'
|-VarDecl 0x559e036a8618 <line:702:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x559e036a8690 <line:703:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x559e036a8710 <line:704:1, col:5> col:5 used x 'int'
|-VarDecl 0x559e036a8790 prev 0x559e036a8710 <line:705:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x559e036a87f8 <col:9> 'int' 0
|-VarDecl 0x559e036a8830 <line:706:1, col:5> col:5 used y 'int'
|-VarDecl 0x559e036a88b0 prev 0x559e036a8830 <line:707:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x559e036a8918 <col:9> 'int' 0
|-VarDecl 0x559e036a8950 <line:708:1, col:5> col:5 used z 'int'
|-VarDecl 0x559e036a89d0 prev 0x559e036a8950 <line:709:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x559e036a8a38 <col:9> 'int' 0
|-VarDecl 0x559e036a8a68 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x559e036a8ae0 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x559e036a8bf8 prev 0x559e036a6f60 <line:712:1, line:741:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x559e036a8b60 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559e036aa498 <line:713:1, line:741:1>
|   |-CallExpr 0x559e036a8d08 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559e036a8cf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036a8ca0 <col:3> 'void ()' Function 0x559e0364e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559e036a8d80 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559e036a8d28 <col:3> 'int' lvalue Var 0x559e036a8528 'b$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x559e036a8d68 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559e036a8d48 <col:15> 'int' lvalue Var 0x559e036a8430 'b$w_buff0' 'int'
|   |-BinaryOperator 0x559e036a8de0 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559e036a8da0 <col:3> 'int' lvalue Var 0x559e036a8430 'b$w_buff0' 'int'
|   | `-IntegerLiteral 0x559e036a8dc0 <col:15> 'int' 1
|   |-BinaryOperator 0x559e036a8e58 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559e036a8e00 <col:3> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559e036a8e40 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559e036a8e20 <col:20> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559e036a8ef0 <line:718:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x559e036a8e78 <col:3> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x559e036a8ec8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559e036a8e98 <col:27> 'int' 1
|   |-CallExpr 0x559e036a9088 <line:719:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x559e036a9070 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x559e036a8f10 <col:3> 'void (int)' Function 0x559e0364e0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x559e036a9020 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x559e036a9000 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x559e036a8fe0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x559e036a8f98 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x559e036a8f80 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x559e036a8f30 <col:23> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x559e036a8fc8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x559e036a8fb0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x559e036a8f50 <col:41> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559e036a9108 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559e036a90b0 <col:3> '_Bool' lvalue Var 0x559e036a80d8 'b$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x559e036a90f0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559e036a90d0 <col:20> '_Bool' lvalue Var 0x559e036a7e18 'b$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x559e036a9180 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559e036a9128 <col:3> '_Bool' lvalue Var 0x559e036a8150 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559e036a9168 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559e036a9148 <col:20> '_Bool' lvalue Var 0x559e036a7e90 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559e036a91f8 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559e036a91a0 <col:3> '_Bool' lvalue Var 0x559e036a81c8 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559e036a91e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559e036a91c0 <col:20> '_Bool' lvalue Var 0x559e036a7f70 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559e036a9270 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559e036a9218 <col:3> '_Bool' lvalue Var 0x559e036a8240 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559e036a9258 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559e036a9238 <col:20> '_Bool' lvalue Var 0x559e036a7fe8 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x559e036a92e8 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559e036a9290 <col:3> '_Bool' lvalue Var 0x559e036a82b8 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559e036a92d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559e036a92b0 <col:20> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x559e036a9380 <line:725:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x559e036a9308 <col:3> '_Bool' lvalue Var 0x559e036a7e90 'b$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x559e036a9358 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559e036a9328 <col:27> 'int' 1
|   |-CallExpr 0x559e036a93d8 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559e036a93c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036a93a0 <col:3> 'void ()' Function 0x559e0364e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559e036a9430 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559e036a9418 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036a93f8 <col:3> 'void ()' Function 0x559e0364e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559e036a9490 <line:728:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559e036a9450 <col:3> 'int' lvalue Var 0x559e036a8790 'x' 'int'
|   | `-IntegerLiteral 0x559e036a9470 <col:7> 'int' 1
|   |-CallExpr 0x559e036a94e8 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559e036a94d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036a94b0 <col:3> 'void ()' Function 0x559e0364e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559e036a9540 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559e036a9528 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036a9508 <col:3> 'void ()' Function 0x559e0364e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559e036a9828 <line:731:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559e036a9560 <col:3> 'int' lvalue Var 0x559e036a7c88 'b' 'int'
|   | `-ConditionalOperator 0x559e036a97f8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559e036a9620 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559e036a95d8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559e036a95c0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559e036a9580 <col:7> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559e036a9608 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559e036a95f0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559e036a95a0 <col:25> '_Bool' lvalue Var 0x559e036a7e90 'b$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x559e036a97e0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559e036a9640 <col:42> 'int' lvalue Var 0x559e036a8430 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x559e036a97c0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559e036a9790 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559e036a9700 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559e036a96b8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559e036a96a0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559e036a9660 <col:55> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559e036a96e8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559e036a96d0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559e036a9680 <col:73> '_Bool' lvalue Var 0x559e036a8150 'b$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x559e036a9760 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559e036a9720 <col:90> 'int' lvalue Var 0x559e036a8528 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559e036a9778 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559e036a9740 <col:102> 'int' lvalue Var 0x559e036a7c88 'b' 'int'
|   |-BinaryOperator 0x559e036a9a30 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559e036a9848 <col:3> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559e036a9a18 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559e036a99e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559e036a9908 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559e036a98c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559e036a98a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559e036a9868 <col:20> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559e036a98f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559e036a98d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559e036a9888 <col:38> '_Bool' lvalue Var 0x559e036a7e90 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559e036a99a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559e036a9958 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559e036a9928 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559e036a99d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559e036a99b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559e036a9980 <col:66> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559e036a9d18 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559e036a9a50 <col:3> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559e036a9d00 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559e036a9cd0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559e036a9bf0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559e036a9b10 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559e036a9ac8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559e036a9ab0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559e036a9a70 <col:20> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559e036a9af8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559e036a9ae0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559e036a9a90 <col:38> '_Bool' lvalue Var 0x559e036a7e90 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x559e036a9bd0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559e036a9b88 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559e036a9b70 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559e036a9b30 <col:56> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559e036a9bb8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559e036a9ba0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559e036a9b50 <col:74> '_Bool' lvalue Var 0x559e036a8150 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559e036a9c88 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559e036a9c40 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559e036a9c10 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559e036a9cb8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559e036a9ca0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559e036a9c68 <col:102> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559e036a9f20 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559e036a9d38 <col:3> '_Bool' lvalue Var 0x559e036a7e90 'b$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559e036a9f08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559e036a9ed8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559e036a9df8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559e036a9db0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559e036a9d98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559e036a9d58 <col:20> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559e036a9de0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559e036a9dc8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559e036a9d78 <col:38> '_Bool' lvalue Var 0x559e036a7e90 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559e036a9e90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559e036a9e48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559e036a9e18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559e036a9ec0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559e036a9ea8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559e036a9e70 <col:66> '_Bool' lvalue Var 0x559e036a7e90 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559e036aa218 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559e036a9f40 <col:3> '_Bool' lvalue Var 0x559e036a8150 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559e036aa200 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559e036aa1d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559e036aa0f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559e036aa010 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559e036a9fc8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559e036a9fb0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559e036a9f60 <col:20> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559e036a9ff8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559e036a9fe0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559e036a9f90 <col:38> '_Bool' lvalue Var 0x559e036a7e90 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x559e036aa0d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559e036aa088 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559e036aa070 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559e036aa030 <col:56> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559e036aa0b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559e036aa0a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559e036aa050 <col:74> '_Bool' lvalue Var 0x559e036a8150 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559e036aa188 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559e036aa140 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559e036aa110 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559e036aa1b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559e036aa1a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559e036aa168 <col:102> '_Bool' lvalue Var 0x559e036a8150 'b$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x559e036aa270 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559e036aa258 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036aa238 <col:3> 'void ()' Function 0x559e0364e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559e036aa2c8 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559e036aa2b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036aa290 <col:3> 'void ()' Function 0x559e0364e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559e036aa380 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559e036aa2e8 <col:3> 'int' lvalue Var 0x559e036a76e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559e036aa360 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559e036aa348 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559e036aa308 <col:22> 'int' lvalue Var 0x559e036a76e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559e036aa328 <col:41> 'int' 1
|   |-CallExpr 0x559e036aa3d8 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559e036aa3c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036aa3a0 <col:3> 'void ()' Function 0x559e0364e410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559e036aa488 <line:740:3, col:36>
|     `-CallExpr 0x559e036aa468 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559e036aa450 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559e036aa3f8 <col:10> 'void *(void)' Function 0x559e0364de68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559e036aa630 prev 0x559e036a70b8 <line:742:1, line:761:1> line:742:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x559e036aa598 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559e036ab868 <line:743:1, line:761:1>
|   |-CallExpr 0x559e036aa710 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559e036aa6f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036aa6d8 <col:3> 'void ()' Function 0x559e0364e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559e036aa770 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559e036aa730 <col:3> 'int' lvalue Var 0x559e036a8790 'x' 'int'
|   | `-IntegerLiteral 0x559e036aa750 <col:7> 'int' 2
|   |-CallExpr 0x559e036aa7c8 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559e036aa7b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036aa790 <col:3> 'void ()' Function 0x559e0364e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559e036aa820 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559e036aa808 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036aa7e8 <col:3> 'void ()' Function 0x559e0364e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559e036aa898 <line:748:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559e036aa840 <col:3> 'int' lvalue Var 0x559e036a7808 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x559e036aa880 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559e036aa860 <col:25> 'int' lvalue Var 0x559e036a88b0 'y' 'int'
|   |-CallExpr 0x559e036aa8f0 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559e036aa8d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036aa8b8 <col:3> 'void ()' Function 0x559e0364e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559e036aa948 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559e036aa930 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036aa910 <col:3> 'void ()' Function 0x559e0364e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559e036aac30 <line:751:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559e036aa968 <col:3> 'int' lvalue Var 0x559e036a7c88 'b' 'int'
|   | `-ConditionalOperator 0x559e036aac00 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559e036aaa28 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559e036aa9e0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559e036aa9c8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559e036aa988 <col:7> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559e036aaa10 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559e036aa9f8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559e036aa9a8 <col:25> '_Bool' lvalue Var 0x559e036a7f70 'b$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x559e036aabe8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559e036aaa48 <col:42> 'int' lvalue Var 0x559e036a8430 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x559e036aabc8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559e036aab98 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559e036aab08 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559e036aaac0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559e036aaaa8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559e036aaa68 <col:55> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559e036aaaf0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559e036aaad8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559e036aaa88 <col:73> '_Bool' lvalue Var 0x559e036a81c8 'b$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x559e036aab68 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559e036aab28 <col:90> 'int' lvalue Var 0x559e036a8528 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559e036aab80 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559e036aab48 <col:102> 'int' lvalue Var 0x559e036a7c88 'b' 'int'
|   |-BinaryOperator 0x559e036aae38 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559e036aac50 <col:3> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559e036aae20 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559e036aadf0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559e036aad10 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559e036aacc8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559e036aacb0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559e036aac70 <col:20> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559e036aacf8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559e036aace0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559e036aac90 <col:38> '_Bool' lvalue Var 0x559e036a7f70 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559e036aada8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559e036aad60 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559e036aad30 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559e036aadd8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559e036aadc0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559e036aad88 <col:66> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559e036ab130 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559e036aae58 <col:3> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559e036ab118 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559e036ab0e8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559e036ab008 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559e036aaf18 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559e036aaed0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559e036aaeb8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559e036aae78 <col:20> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559e036aaf00 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559e036aaee8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559e036aae98 <col:38> '_Bool' lvalue Var 0x559e036a7f70 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x559e036aafe8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559e036aafa0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559e036aaf78 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559e036aaf38 <col:56> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559e036aafd0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559e036aafb8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559e036aaf58 <col:74> '_Bool' lvalue Var 0x559e036a81c8 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559e036ab0a0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559e036ab058 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559e036ab028 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559e036ab0d0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559e036ab0b8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559e036ab080 <col:102> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559e036ab338 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559e036ab150 <col:3> '_Bool' lvalue Var 0x559e036a7f70 'b$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559e036ab320 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559e036ab2f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559e036ab210 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559e036ab1c8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559e036ab1b0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559e036ab170 <col:20> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559e036ab1f8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559e036ab1e0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559e036ab190 <col:38> '_Bool' lvalue Var 0x559e036a7f70 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559e036ab2a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559e036ab260 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559e036ab230 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559e036ab2d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559e036ab2c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559e036ab288 <col:66> '_Bool' lvalue Var 0x559e036a7f70 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559e036ab620 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559e036ab358 <col:3> '_Bool' lvalue Var 0x559e036a81c8 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559e036ab608 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559e036ab5d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559e036ab4f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559e036ab418 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559e036ab3d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559e036ab3b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559e036ab378 <col:20> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559e036ab400 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559e036ab3e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559e036ab398 <col:38> '_Bool' lvalue Var 0x559e036a7f70 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x559e036ab4d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559e036ab490 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559e036ab478 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559e036ab438 <col:56> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559e036ab4c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559e036ab4a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559e036ab458 <col:74> '_Bool' lvalue Var 0x559e036a81c8 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559e036ab590 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559e036ab548 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559e036ab518 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559e036ab5c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559e036ab5a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559e036ab570 <col:102> '_Bool' lvalue Var 0x559e036a81c8 'b$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x559e036ab678 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559e036ab660 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036ab640 <col:3> 'void ()' Function 0x559e0364e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559e036ab6d0 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559e036ab6b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036ab698 <col:3> 'void ()' Function 0x559e0364e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559e036ab788 <line:758:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559e036ab6f0 <col:3> 'int' lvalue Var 0x559e036a76e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559e036ab768 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559e036ab750 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559e036ab710 <col:22> 'int' lvalue Var 0x559e036a76e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559e036ab730 <col:41> 'int' 1
|   |-CallExpr 0x559e036ab7e0 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559e036ab7c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036ab7a8 <col:3> 'void ()' Function 0x559e0364e410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559e036ab858 <line:760:3, col:36>
|     `-CallExpr 0x559e036ab838 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559e036ab820 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559e036ab800 <col:10> 'void *(void)' Function 0x559e0364de68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559e036ab9b0 prev 0x559e036a7210 <line:762:1, line:781:1> line:762:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x559e036ab918 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559e036acbd8 <line:763:1, line:781:1>
|   |-CallExpr 0x559e036aba90 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559e036aba78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036aba58 <col:3> 'void ()' Function 0x559e0364e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559e036abaf0 <line:765:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559e036abab0 <col:3> 'int' lvalue Var 0x559e036a88b0 'y' 'int'
|   | `-IntegerLiteral 0x559e036abad0 <col:7> 'int' 1
|   |-CallExpr 0x559e036abb48 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559e036abb30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036abb10 <col:3> 'void ()' Function 0x559e0364e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559e036abba0 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559e036abb88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036abb68 <col:3> 'void ()' Function 0x559e0364e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559e036abc00 <line:768:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559e036abbc0 <col:3> 'int' lvalue Var 0x559e036a89d0 'z' 'int'
|   | `-IntegerLiteral 0x559e036abbe0 <col:7> 'int' 1
|   |-CallExpr 0x559e036abc58 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559e036abc40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036abc20 <col:3> 'void ()' Function 0x559e0364e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559e036abcb0 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559e036abc98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036abc78 <col:3> 'void ()' Function 0x559e0364e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559e036abfb0 <line:771:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559e036abcd0 <col:3> 'int' lvalue Var 0x559e036a7c88 'b' 'int'
|   | `-ConditionalOperator 0x559e036abf68 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559e036abd90 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559e036abd48 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559e036abd30 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559e036abcf0 <col:7> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559e036abd78 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559e036abd60 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559e036abd10 <col:25> '_Bool' lvalue Var 0x559e036a7fe8 'b$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x559e036abf50 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559e036abdb0 <col:42> 'int' lvalue Var 0x559e036a8430 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x559e036abf30 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559e036abf00 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559e036abe70 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559e036abe28 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559e036abe10 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559e036abdd0 <col:55> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559e036abe58 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559e036abe40 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559e036abdf0 <col:73> '_Bool' lvalue Var 0x559e036a8240 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x559e036abed0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559e036abe90 <col:90> 'int' lvalue Var 0x559e036a8528 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559e036abee8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559e036abeb0 <col:102> 'int' lvalue Var 0x559e036a7c88 'b' 'int'
|   |-BinaryOperator 0x559e036ac1b8 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559e036abfd0 <col:3> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559e036ac1a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559e036ac170 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559e036ac090 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559e036ac048 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559e036ac030 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559e036abff0 <col:20> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559e036ac078 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559e036ac060 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559e036ac010 <col:38> '_Bool' lvalue Var 0x559e036a7fe8 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559e036ac128 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559e036ac0e0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559e036ac0b0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559e036ac158 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559e036ac140 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559e036ac108 <col:66> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559e036ac4a0 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559e036ac1d8 <col:3> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559e036ac488 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559e036ac458 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559e036ac378 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559e036ac298 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559e036ac250 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559e036ac238 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559e036ac1f8 <col:20> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559e036ac280 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559e036ac268 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559e036ac218 <col:38> '_Bool' lvalue Var 0x559e036a7fe8 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x559e036ac358 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559e036ac310 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559e036ac2f8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559e036ac2b8 <col:56> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559e036ac340 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559e036ac328 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559e036ac2d8 <col:74> '_Bool' lvalue Var 0x559e036a8240 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559e036ac410 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559e036ac3c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559e036ac398 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559e036ac440 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559e036ac428 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559e036ac3f0 <col:102> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559e036ac6a8 <line:774:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559e036ac4c0 <col:3> '_Bool' lvalue Var 0x559e036a7fe8 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559e036ac690 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559e036ac660 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559e036ac580 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559e036ac538 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559e036ac520 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559e036ac4e0 <col:20> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559e036ac568 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559e036ac550 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559e036ac500 <col:38> '_Bool' lvalue Var 0x559e036a7fe8 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559e036ac618 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559e036ac5d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559e036ac5a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559e036ac648 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559e036ac630 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559e036ac5f8 <col:66> '_Bool' lvalue Var 0x559e036a7fe8 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x559e036ac990 <line:775:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559e036ac6c8 <col:3> '_Bool' lvalue Var 0x559e036a8240 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559e036ac978 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559e036ac948 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559e036ac868 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559e036ac788 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559e036ac740 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559e036ac728 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559e036ac6e8 <col:20> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559e036ac770 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559e036ac758 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559e036ac708 <col:38> '_Bool' lvalue Var 0x559e036a7fe8 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x559e036ac848 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559e036ac800 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559e036ac7e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559e036ac7a8 <col:56> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559e036ac830 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559e036ac818 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559e036ac7c8 <col:74> '_Bool' lvalue Var 0x559e036a8240 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559e036ac900 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559e036ac8b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559e036ac888 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559e036ac930 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559e036ac918 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559e036ac8e0 <col:102> '_Bool' lvalue Var 0x559e036a8240 'b$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x559e036ac9e8 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559e036ac9d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036ac9b0 <col:3> 'void ()' Function 0x559e0364e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559e036aca40 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559e036aca28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036aca08 <col:3> 'void ()' Function 0x559e0364e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559e036acaf8 <line:778:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559e036aca60 <col:3> 'int' lvalue Var 0x559e036a76e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559e036acad8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559e036acac0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559e036aca80 <col:22> 'int' lvalue Var 0x559e036a76e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559e036acaa0 <col:41> 'int' 1
|   |-CallExpr 0x559e036acb50 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559e036acb38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036acb18 <col:3> 'void ()' Function 0x559e0364e410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559e036acbc8 <line:780:3, col:36>
|     `-CallExpr 0x559e036acba8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559e036acb90 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559e036acb70 <col:10> 'void *(void)' Function 0x559e0364de68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559e036acd20 prev 0x559e036a7368 <line:782:1, line:820:1> line:782:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x559e036acc88 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559e036b0b18 <line:783:1, line:820:1>
|   |-CallExpr 0x559e036ace00 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559e036acde8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036acdc8 <col:3> 'void ()' Function 0x559e0364e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559e036ace60 <line:785:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559e036ace20 <col:3> 'int' lvalue Var 0x559e036a89d0 'z' 'int'
|   | `-IntegerLiteral 0x559e036ace40 <col:7> 'int' 2
|   |-CallExpr 0x559e036aceb8 <line:786:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559e036acea0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036ace80 <col:3> 'void ()' Function 0x559e0364e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559e036acf10 <line:787:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559e036acef8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036aced8 <col:3> 'void ()' Function 0x559e0364e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559e036acf70 <line:788:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559e036acf30 <col:3> 'int' lvalue Var 0x559e036a7b68 'a' 'int'
|   | `-IntegerLiteral 0x559e036acf50 <col:7> 'int' 1
|   |-CallExpr 0x559e036acfd8 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559e036acfc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036acf90 <col:3> 'void ()' Function 0x559e0364e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559e036ad030 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559e036ad018 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036acff8 <col:3> 'void ()' Function 0x559e0364e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559e036ad0a8 <line:791:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559e036ad050 <col:3> 'int' lvalue Var 0x559e036a7928 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x559e036ad090 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559e036ad070 <col:25> 'int' lvalue Var 0x559e036a7b68 'a' 'int'
|   |-CallExpr 0x559e036ad100 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559e036ad0e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036ad0c8 <col:3> 'void ()' Function 0x559e0364e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559e036ad158 <line:793:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559e036ad140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036ad120 <col:3> 'void ()' Function 0x559e0364e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559e036ad208 <line:794:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x559e036ad178 <col:3> '_Bool' lvalue Var 0x559e036a8a68 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x559e036ad1f0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x559e036ad1d0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x559e036ad1b8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x559e036ad198 <col:19> 'void *(void)' Function 0x559e0364de68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x559e036ad2b8 <line:795:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x559e036ad228 <col:3> '_Bool' lvalue Var 0x559e036a8ae0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x559e036ad2a0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x559e036ad280 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x559e036ad268 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x559e036ad248 <col:19> 'void *(void)' Function 0x559e0364de68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x559e036ad330 <line:796:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x559e036ad2d8 <col:3> '_Bool' lvalue Var 0x559e036a7d20 'b$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x559e036ad318 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559e036ad2f8 <col:21> '_Bool' lvalue Var 0x559e036a8ae0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x559e036ad3a8 <line:797:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559e036ad350 <col:3> 'int' lvalue Var 0x559e036a7da0 'b$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x559e036ad390 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559e036ad370 <col:15> 'int' lvalue Var 0x559e036a7c88 'b' 'int'
|   |-BinaryOperator 0x559e036ad7e0 <line:798:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x559e036ad3c8 <col:3> 'int' lvalue Var 0x559e036a7c88 'b' 'int'
|   | `-ConditionalOperator 0x559e036ad7b0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x559e036ad5d8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x559e036ad4f8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x559e036ad420 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x559e036ad408 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x559e036ad3e8 <col:8> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x559e036ad4d8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x559e036ad470 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x559e036ad458 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x559e036ad438 <col:27> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x559e036ad4c0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x559e036ad4a8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x559e036ad488 <col:46> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x559e036ad5b8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x559e036ad550 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x559e036ad538 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x559e036ad518 <col:65> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x559e036ad5a0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x559e036ad588 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x559e036ad568 <col:84> '_Bool' lvalue Var 0x559e036a82b8 'b$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x559e036ad798 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559e036ad5f8 <col:101> 'int' lvalue Var 0x559e036a7c88 'b' 'int'
|   |   `-ParenExpr 0x559e036ad778 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x559e036ad748 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x559e036ad6b8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559e036ad670 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559e036ad658 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559e036ad618 <col:106> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559e036ad6a0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559e036ad688 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559e036ad638 <col:124> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x559e036ad718 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559e036ad6d8 <col:141> 'int' lvalue Var 0x559e036a8430 'b$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x559e036ad730 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559e036ad6f8 <col:153> 'int' lvalue Var 0x559e036a8528 'b$w_buff1' 'int'
|   |-BinaryOperator 0x559e036adcf0 <line:799:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559e036ad800 <col:3> 'int' lvalue Var 0x559e036a8430 'b$w_buff0' 'int'
|   | `-ConditionalOperator 0x559e036adcc0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559e036adc90 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559e036adc78 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559e036ad820 <col:15> '_Bool' lvalue Var 0x559e036a8ae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559e036adca8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559e036ad840 <col:31> 'int' lvalue Var 0x559e036a8430 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x559e036adc58 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559e036adc28 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559e036ada50 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559e036ad970 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559e036ad898 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559e036ad880 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559e036ad860 <col:45> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559e036ad950 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559e036ad8e8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559e036ad8d0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559e036ad8b0 <col:64> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x559e036ad938 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559e036ad920 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559e036ad900 <col:83> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559e036ada30 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559e036ad9c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559e036ad9b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559e036ad990 <col:102> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x559e036ada18 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559e036ada00 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559e036ad9e0 <col:121> '_Bool' lvalue Var 0x559e036a82b8 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x559e036adc10 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559e036ada70 <col:138> 'int' lvalue Var 0x559e036a8430 'b$w_buff0' 'int'
|   |       `-ParenExpr 0x559e036adbf0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559e036adbc0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559e036adb30 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559e036adae8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559e036adad0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559e036ada90 <col:151> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559e036adb18 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559e036adb00 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559e036adab0 <col:169> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x559e036adb90 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559e036adb50 <col:186> 'int' lvalue Var 0x559e036a8430 'b$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x559e036adba8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559e036adb70 <col:198> 'int' lvalue Var 0x559e036a8430 'b$w_buff0' 'int'
|   |-BinaryOperator 0x559e036ae210 <line:800:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559e036add10 <col:3> 'int' lvalue Var 0x559e036a8528 'b$w_buff1' 'int'
|   | `-ConditionalOperator 0x559e036ae1e0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559e036ae1b0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559e036ae198 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559e036add30 <col:15> '_Bool' lvalue Var 0x559e036a8ae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559e036ae1c8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559e036add50 <col:31> 'int' lvalue Var 0x559e036a8528 'b$w_buff1' 'int'
|   |   `-ParenExpr 0x559e036ae178 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559e036ae148 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559e036adf60 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559e036ade80 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559e036adda8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559e036add90 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559e036add70 <col:45> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559e036ade60 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559e036addf8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559e036adde0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559e036addc0 <col:64> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x559e036ade48 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559e036ade30 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559e036ade10 <col:83> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559e036adf40 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559e036aded8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559e036adec0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559e036adea0 <col:102> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x559e036adf28 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559e036adf10 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559e036adef0 <col:121> '_Bool' lvalue Var 0x559e036a82b8 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x559e036ae130 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559e036adf80 <col:138> 'int' lvalue Var 0x559e036a8528 'b$w_buff1' 'int'
|   |       `-ParenExpr 0x559e036ae110 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559e036ae0e0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559e036ae050 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559e036ae008 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559e036adff0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559e036adfa0 <col:151> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559e036ae038 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559e036ae020 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559e036adfd0 <col:169> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x559e036ae0b0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559e036ae070 <col:186> 'int' lvalue Var 0x559e036a8528 'b$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x559e036ae0c8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559e036ae090 <col:198> 'int' lvalue Var 0x559e036a8528 'b$w_buff1' 'int'
|   |-BinaryOperator 0x559e036ae7b8 <line:801:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559e036ae230 <col:3> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559e036ae7a0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559e036ae770 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559e036ae728 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559e036ae710 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559e036ae250 <col:20> '_Bool' lvalue Var 0x559e036a8ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559e036ae758 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559e036ae740 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559e036ae270 <col:36> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x559e036ae6f0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559e036ae6c0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559e036ae480 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559e036ae3a0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559e036ae2c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559e036ae2b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559e036ae290 <col:55> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559e036ae380 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559e036ae318 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559e036ae300 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559e036ae2e0 <col:74> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x559e036ae368 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559e036ae350 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559e036ae330 <col:93> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559e036ae460 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559e036ae3f8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559e036ae3e0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559e036ae3c0 <col:112> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x559e036ae448 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559e036ae430 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559e036ae410 <col:131> '_Bool' lvalue Var 0x559e036a82b8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x559e036ae6a8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559e036ae690 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559e036ae4a0 <col:148> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x559e036ae670 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559e036ae640 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559e036ae560 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559e036ae518 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559e036ae500 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559e036ae4c0 <col:166> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559e036ae548 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559e036ae530 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559e036ae4e0 <col:184> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x559e036ae5f8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559e036ae5b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559e036ae580 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559e036ae628 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559e036ae610 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559e036ae5d8 <col:212> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559e036aed80 <line:802:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559e036ae7d8 <col:3> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559e036aed68 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559e036aed38 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559e036aecf0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559e036aecd8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559e036ae7f8 <col:20> '_Bool' lvalue Var 0x559e036a8ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559e036aed20 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559e036aed08 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559e036ae818 <col:36> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x559e036aecb8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559e036aec88 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559e036aea28 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559e036ae948 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559e036ae870 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559e036ae858 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559e036ae838 <col:55> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559e036ae928 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559e036ae8c0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559e036ae8a8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559e036ae888 <col:74> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x559e036ae910 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559e036ae8f8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559e036ae8d8 <col:93> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559e036aea08 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559e036ae9a0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559e036ae988 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559e036ae968 <col:112> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x559e036ae9f0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559e036ae9d8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559e036ae9b8 <col:131> '_Bool' lvalue Var 0x559e036a82b8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x559e036aec70 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559e036aec58 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559e036aea48 <col:148> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x559e036aec38 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559e036aec08 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559e036aeb08 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559e036aeac0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559e036aeaa8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559e036aea68 <col:166> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559e036aeaf0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559e036aead8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559e036aea88 <col:184> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x559e036aebd8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559e036aeb58 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559e036aeb28 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559e036aebf0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559e036aebb0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559e036aeb80 <col:219> 'int' 0
|   |-BinaryOperator 0x559e036af338 <line:803:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559e036aeda0 <col:3> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559e036af320 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559e036af2f0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559e036af2a8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559e036af290 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559e036aedc0 <col:20> '_Bool' lvalue Var 0x559e036a8ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559e036af2d8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559e036af2c0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559e036aede0 <col:36> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x559e036af270 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559e036af240 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559e036af000 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559e036aef10 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559e036aee38 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559e036aee20 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559e036aee00 <col:55> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559e036aeef0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559e036aee88 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559e036aee70 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559e036aee50 <col:74> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x559e036aeed8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559e036aeec0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559e036aeea0 <col:93> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559e036aefe0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559e036aef68 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559e036aef50 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559e036aef30 <col:112> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x559e036aefb8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559e036aefa0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559e036aef80 <col:131> '_Bool' lvalue Var 0x559e036a82b8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x559e036af228 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559e036af210 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559e036af020 <col:148> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x559e036af1f0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559e036af1c0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559e036af0e0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559e036af098 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559e036af080 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559e036af040 <col:166> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559e036af0c8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559e036af0b0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559e036af060 <col:184> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x559e036af178 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559e036af130 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559e036af100 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559e036af1a8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559e036af190 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559e036af158 <col:212> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x559e036af900 <line:804:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559e036af358 <col:3> '_Bool' lvalue Var 0x559e036a82b8 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559e036af8e8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559e036af8b8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559e036af870 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559e036af858 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559e036af378 <col:20> '_Bool' lvalue Var 0x559e036a8ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559e036af8a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559e036af888 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559e036af398 <col:36> '_Bool' lvalue Var 0x559e036a82b8 'b$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x559e036af838 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559e036af808 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559e036af5a8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559e036af4c8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559e036af3f0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559e036af3d8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559e036af3b8 <col:55> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559e036af4a8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559e036af440 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559e036af428 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559e036af408 <col:74> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x559e036af490 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559e036af478 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559e036af458 <col:93> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559e036af588 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559e036af520 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559e036af508 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559e036af4e8 <col:112> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x559e036af570 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559e036af558 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559e036af538 <col:131> '_Bool' lvalue Var 0x559e036a82b8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x559e036af7f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559e036af7d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559e036af5c8 <col:148> '_Bool' lvalue Var 0x559e036a82b8 'b$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x559e036af7b8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559e036af788 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559e036af688 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559e036af640 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559e036af628 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559e036af5e8 <col:166> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559e036af670 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559e036af658 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559e036af608 <col:184> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x559e036af758 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559e036af6d8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559e036af6a8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559e036af770 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559e036af730 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559e036af700 <col:219> 'int' 0
|   |-BinaryOperator 0x559e036af978 <line:805:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559e036af920 <col:3> 'int' lvalue Var 0x559e036a7a48 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x559e036af960 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559e036af940 <col:25> 'int' lvalue Var 0x559e036a7c88 'b' 'int'
|   |-BinaryOperator 0x559e036afaa8 <line:806:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x559e036af998 <col:3> 'int' lvalue Var 0x559e036a7c88 'b' 'int'
|   | `-ConditionalOperator 0x559e036afa78 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x559e036afa30 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559e036afa18 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559e036af9b8 <col:7> '_Bool' lvalue Var 0x559e036a7d20 'b$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x559e036afa48 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559e036af9d8 <col:25> 'int' lvalue Var 0x559e036a7da0 'b$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x559e036afa60 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x559e036af9f8 <col:37> 'int' lvalue Var 0x559e036a7c88 'b' 'int'
|   |-BinaryOperator 0x559e036afb40 <line:807:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x559e036afac8 <col:3> '_Bool' lvalue Var 0x559e036a7d20 'b$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x559e036afb18 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559e036afae8 <col:28> 'int' 0
|   |-CallExpr 0x559e036afb98 <line:808:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559e036afb80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036afb60 <col:3> 'void ()' Function 0x559e0364e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559e036afbf0 <line:809:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559e036afbd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036afbb8 <col:3> 'void ()' Function 0x559e0364e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559e036afed8 <line:810:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559e036afc10 <col:3> 'int' lvalue Var 0x559e036a7c88 'b' 'int'
|   | `-ConditionalOperator 0x559e036afea8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559e036afcd0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559e036afc88 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559e036afc70 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559e036afc30 <col:7> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559e036afcb8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559e036afca0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559e036afc50 <col:25> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x559e036afe90 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559e036afcf0 <col:42> 'int' lvalue Var 0x559e036a8430 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x559e036afe70 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559e036afe40 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559e036afdb0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559e036afd68 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559e036afd50 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559e036afd10 <col:55> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559e036afd98 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559e036afd80 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559e036afd30 <col:73> '_Bool' lvalue Var 0x559e036a82b8 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x559e036afe10 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559e036afdd0 <col:90> 'int' lvalue Var 0x559e036a8528 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559e036afe28 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559e036afdf0 <col:102> 'int' lvalue Var 0x559e036a7c88 'b' 'int'
|   |-BinaryOperator 0x559e036b00f8 <line:811:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559e036afef8 <col:3> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559e036b00e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559e036b00b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559e036affb8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559e036aff70 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559e036aff58 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559e036aff18 <col:20> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559e036affa0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559e036aff88 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559e036aff38 <col:38> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x559e036b0068 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559e036b0020 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559e036afff0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559e036b0098 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559e036b0080 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559e036b0048 <col:66> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559e036b03e0 <line:812:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559e036b0118 <col:3> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559e036b03c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559e036b0398 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559e036b02b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559e036b01d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559e036b0190 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559e036b0178 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559e036b0138 <col:20> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559e036b01c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559e036b01a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559e036b0158 <col:38> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x559e036b0298 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559e036b0250 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559e036b0238 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559e036b01f8 <col:56> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559e036b0280 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559e036b0268 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559e036b0218 <col:74> '_Bool' lvalue Var 0x559e036a82b8 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x559e036b0350 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559e036b0308 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559e036b02d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559e036b0380 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559e036b0368 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559e036b0330 <col:102> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559e036b05e8 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559e036b0400 <col:3> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559e036b05d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559e036b05a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559e036b04c0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559e036b0478 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559e036b0460 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559e036b0420 <col:20> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559e036b04a8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559e036b0490 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559e036b0440 <col:38> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x559e036b0558 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559e036b0510 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559e036b04e0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559e036b0588 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559e036b0570 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559e036b0538 <col:66> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x559e036b08d0 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559e036b0608 <col:3> '_Bool' lvalue Var 0x559e036a82b8 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559e036b08b8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559e036b0888 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559e036b07a8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559e036b06c8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559e036b0680 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559e036b0668 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559e036b0628 <col:20> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559e036b06b0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559e036b0698 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559e036b0648 <col:38> '_Bool' lvalue Var 0x559e036a8060 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x559e036b0788 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559e036b0740 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559e036b0728 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559e036b06e8 <col:56> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559e036b0770 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559e036b0758 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559e036b0708 <col:74> '_Bool' lvalue Var 0x559e036a82b8 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x559e036b0840 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559e036b07f8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559e036b07c8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559e036b0870 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559e036b0858 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559e036b0820 <col:102> '_Bool' lvalue Var 0x559e036a82b8 'b$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x559e036b0928 <line:815:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559e036b0910 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036b08f0 <col:3> 'void ()' Function 0x559e0364e410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559e036b0980 <line:816:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559e036b0968 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036b0948 <col:3> 'void ()' Function 0x559e0364e350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559e036b0a38 <line:817:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559e036b09a0 <col:3> 'int' lvalue Var 0x559e036a76e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559e036b0a18 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559e036b0a00 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559e036b09c0 <col:22> 'int' lvalue Var 0x559e036a76e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559e036b09e0 <col:41> 'int' 1
|   |-CallExpr 0x559e036b0a90 <line:818:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559e036b0a78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559e036b0a58 <col:3> 'void ()' Function 0x559e0364e410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559e036b0b08 <line:819:3, col:36>
|     `-CallExpr 0x559e036b0ae8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559e036b0ad0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559e036b0ab0 <col:10> 'void *(void)' Function 0x559e0364de68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559e036b0c68 prev 0x559e036a7430 <line:821:1, line:823:1> line:821:6 fence 'void ()'
| `-CompoundStmt 0x559e036b0d08 <line:822:1, line:823:1>
|-FunctionDecl 0x559e036b0d38 prev 0x559e036a74f0 <line:824:1, line:826:1> line:824:6 isync 'void ()'
| `-CompoundStmt 0x559e036b0dd8 <line:825:1, line:826:1>
|-FunctionDecl 0x559e036b0e08 prev 0x559e036a75b0 <line:827:1, line:829:1> line:827:6 lwfence 'void ()'
| `-CompoundStmt 0x559e036b0ea8 <line:828:1, line:829:1>
`-FunctionDecl 0x559e036b0f18 <line:830:1, line:856:1> line:830:5 main 'int ()'
  `-CompoundStmt 0x559e036b3020 <line:831:1, line:856:1>
    |-DeclStmt 0x559e036b1068 <line:832:3, col:18>
    | `-VarDecl 0x559e036b1000 <col:3, col:13> col:13 used t1171 'pthread_t':'unsigned long'
    |-CallExpr 0x559e036b1278 <line:833:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559e036b1260 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559e036b1080 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559e0368e8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559e036b10c0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559e036b10a0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559e036b1000 't1171' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559e036b12b8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559e036b1138 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559e036b1110 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559e036b10d8 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559e036b12d0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559e036b1158 <col:39> 'void *(void *)' Function 0x559e036a8bf8 'P0' 'void *(void *)'
    | `-ParenExpr 0x559e036b11d8 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559e036b11b0 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559e036b1178 <col:52> 'int' 0
    |-DeclStmt 0x559e036b1360 <line:834:3, col:18>
    | `-VarDecl 0x559e036b12f8 <col:3, col:13> col:13 used t1172 'pthread_t':'unsigned long'
    |-CallExpr 0x559e036b1508 <line:835:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559e036b14f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559e036b1378 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559e0368e8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559e036b13b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559e036b1398 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559e036b12f8 't1172' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559e036b1548 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559e036b1430 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559e036b1408 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559e036b13d0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559e036b1560 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559e036b1450 <col:39> 'void *(void *)' Function 0x559e036aa630 'P1' 'void *(void *)'
    | `-ParenExpr 0x559e036b14d0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559e036b14a8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559e036b1470 <col:52> 'int' 0
    |-DeclStmt 0x559e036b15f0 <line:836:3, col:18>
    | `-VarDecl 0x559e036b1588 <col:3, col:13> col:13 used t1173 'pthread_t':'unsigned long'
    |-CallExpr 0x559e036b1798 <line:837:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559e036b1780 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559e036b1608 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559e0368e8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559e036b1648 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559e036b1628 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559e036b1588 't1173' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559e036b17d8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559e036b16c0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559e036b1698 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559e036b1660 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559e036b17f0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559e036b16e0 <col:39> 'void *(void *)' Function 0x559e036ab9b0 'P2' 'void *(void *)'
    | `-ParenExpr 0x559e036b1760 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559e036b1738 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559e036b1700 <col:52> 'int' 0
    |-DeclStmt 0x559e036b1880 <line:838:3, col:18>
    | `-VarDecl 0x559e036b1818 <col:3, col:13> col:13 used t1174 'pthread_t':'unsigned long'
    |-CallExpr 0x559e036b1a28 <line:839:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559e036b1a10 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559e036b1898 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559e0368e8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559e036b18d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559e036b18b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559e036b1818 't1174' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559e036b1a68 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559e036b1950 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559e036b1928 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559e036b18f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559e036b1a80 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559e036b1970 <col:39> 'void *(void *)' Function 0x559e036acd20 'P3' 'void *(void *)'
    | `-ParenExpr 0x559e036b19f0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559e036b19c8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559e036b1990 <col:52> 'int' 0
    |-CallExpr 0x559e036b1ad0 <line:840:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559e036b1ab8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559e036b1a98 <col:3> 'void ()' Function 0x559e0364e350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559e036b1ba0 <line:841:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x559e036b1af0 <col:3> '_Bool' lvalue Var 0x559e036a8618 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x559e036b1b88 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x559e036b1b68 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x559e036b1b50 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x559e036b1b10 <col:21> 'int' lvalue Var 0x559e036a76e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x559e036b1b30 <col:41> 'int' 4
    |-CallExpr 0x559e036b1bf8 <line:842:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559e036b1be0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559e036b1bc0 <col:3> 'void ()' Function 0x559e0364e410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559e036b1c70 <line:843:3, col:36> 'void'
    | |-ImplicitCastExpr 0x559e036b1c58 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559e036b1c18 <col:3> 'void (int)' Function 0x559e0364dca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x559e036b1cb0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559e036b1c98 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x559e036b1c38 <col:21> '_Bool' lvalue Var 0x559e036a8618 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x559e036b1d00 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559e036b1ce8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559e036b1cc8 <col:3> 'void ()' Function 0x559e0364e350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559e036b2010 <line:845:3, col:103> 'int' '='
    | |-DeclRefExpr 0x559e036b1d20 <col:3> 'int' lvalue Var 0x559e036a7c88 'b' 'int'
    | `-ConditionalOperator 0x559e036b1fb8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x559e036b1de0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x559e036b1d98 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x559e036b1d80 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x559e036b1d40 <col:7> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x559e036b1dc8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x559e036b1db0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x559e036b1d60 <col:25> '_Bool' lvalue Var 0x559e036a7e18 'b$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x559e036b1fa0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x559e036b1e00 <col:42> 'int' lvalue Var 0x559e036a8430 'b$w_buff0' 'int'
    |   `-ParenExpr 0x559e036b1f80 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x559e036b1f50 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x559e036b1ec0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x559e036b1e78 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x559e036b1e60 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x559e036b1e20 <col:55> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x559e036b1ea8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x559e036b1e90 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x559e036b1e40 <col:73> '_Bool' lvalue Var 0x559e036a80d8 'b$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x559e036b1f20 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x559e036b1ee0 <col:90> 'int' lvalue Var 0x559e036a8528 'b$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x559e036b1f38 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x559e036b1f00 <col:102> 'int' lvalue Var 0x559e036a7c88 'b' 'int'
    |-BinaryOperator 0x559e036b2218 <line:846:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559e036b2030 <col:3> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x559e036b2200 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559e036b21d0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x559e036b20f0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559e036b20a8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559e036b2090 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559e036b2050 <col:20> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x559e036b20d8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559e036b20c0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559e036b2070 <col:38> '_Bool' lvalue Var 0x559e036a7e18 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559e036b2188 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559e036b2140 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559e036b2110 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559e036b21b8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559e036b21a0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559e036b2168 <col:66> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
    |-BinaryOperator 0x559e036b2500 <line:847:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559e036b2238 <col:3> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x559e036b24e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559e036b24b8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559e036b23d8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559e036b22f8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559e036b22b0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559e036b2298 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559e036b2258 <col:20> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559e036b22e0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559e036b22c8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559e036b2278 <col:38> '_Bool' lvalue Var 0x559e036a7e18 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559e036b23b8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559e036b2370 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559e036b2358 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559e036b2318 <col:56> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559e036b23a0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559e036b2388 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559e036b2338 <col:74> '_Bool' lvalue Var 0x559e036a80d8 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559e036b2470 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559e036b2428 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559e036b23f8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559e036b24a0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559e036b2488 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559e036b2450 <col:102> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
    |-BinaryOperator 0x559e036b2708 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559e036b2520 <col:3> '_Bool' lvalue Var 0x559e036a7e18 'b$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559e036b26f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559e036b26c0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x559e036b25e0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559e036b2598 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559e036b2580 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559e036b2540 <col:20> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x559e036b25c8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559e036b25b0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559e036b2560 <col:38> '_Bool' lvalue Var 0x559e036a7e18 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559e036b2678 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559e036b2630 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559e036b2600 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559e036b26a8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559e036b2690 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559e036b2658 <col:66> '_Bool' lvalue Var 0x559e036a7e18 'b$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x559e036b29f0 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559e036b2728 <col:3> '_Bool' lvalue Var 0x559e036a80d8 'b$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559e036b29d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559e036b29a8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559e036b28c8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559e036b27e8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559e036b27a0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559e036b2788 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559e036b2748 <col:20> '_Bool' lvalue Var 0x559e036a84a8 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559e036b27d0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559e036b27b8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559e036b2768 <col:38> '_Bool' lvalue Var 0x559e036a7e18 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559e036b28a8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559e036b2860 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559e036b2848 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559e036b2808 <col:56> '_Bool' lvalue Var 0x559e036a85a0 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559e036b2890 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559e036b2878 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559e036b2828 <col:74> '_Bool' lvalue Var 0x559e036a80d8 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559e036b2960 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559e036b2918 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559e036b28e8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559e036b2990 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559e036b2978 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559e036b2940 <col:102> '_Bool' lvalue Var 0x559e036a80d8 'b$r_buff1_thd0' '_Bool'
    |-CallExpr 0x559e036b2a48 <line:850:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559e036b2a30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559e036b2a10 <col:3> 'void ()' Function 0x559e0364e410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559e036b2aa0 <line:851:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559e036b2a88 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559e036b2a68 <col:3> 'void ()' Function 0x559e0364e350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559e036b2e08 <line:852:3, col:123> '_Bool' '='
    | |-DeclRefExpr 0x559e036b2ac0 <col:3> '_Bool' lvalue Var 0x559e036a8690 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x559e036b2df0 <col:21, col:123> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x559e036b2dd8 <col:21, col:123> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x559e036b2db8 <col:22, col:123> 'int'
    |       `-BinaryOperator 0x559e036b2d98 <col:23, col:122> 'int' '&&'
    |         |-BinaryOperator 0x559e036b2d00 <col:23, col:94> 'int' '&&'
    |         | |-BinaryOperator 0x559e036b2c68 <col:23, col:66> 'int' '&&'
    |         | | |-BinaryOperator 0x559e036b2bd0 <col:23, col:38> 'int' '&&'
    |         | | | |-BinaryOperator 0x559e036b2b38 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x559e036b2b20 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x559e036b2ae0 <col:23> 'int' lvalue Var 0x559e036a8790 'x' 'int'
    |         | | | | `-IntegerLiteral 0x559e036b2b00 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x559e036b2bb0 <col:33, col:38> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x559e036b2b98 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x559e036b2b58 <col:33> 'int' lvalue Var 0x559e036a89d0 'z' 'int'
    |         | | |   `-IntegerLiteral 0x559e036b2b78 <col:38> 'int' 2
    |         | | `-BinaryOperator 0x559e036b2c48 <col:43, col:66> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x559e036b2c30 <col:43> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x559e036b2bf0 <col:43> 'int' lvalue Var 0x559e036a7808 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x559e036b2c10 <col:66> 'int' 0
    |         | `-BinaryOperator 0x559e036b2ce0 <col:71, col:94> 'int' '=='
    |         |   |-ImplicitCastExpr 0x559e036b2cc8 <col:71> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x559e036b2c88 <col:71> 'int' lvalue Var 0x559e036a7928 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x559e036b2ca8 <col:94> 'int' 1
    |         `-BinaryOperator 0x559e036b2d78 <col:99, col:122> 'int' '=='
    |           |-ImplicitCastExpr 0x559e036b2d60 <col:99> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x559e036b2d20 <col:99> 'int' lvalue Var 0x559e036a7a48 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x559e036b2d40 <col:122> 'int' 0
    |-CallExpr 0x559e036b2e60 <line:853:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559e036b2e48 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559e036b2e28 <col:3> 'void ()' Function 0x559e0364e410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559e036b2ed8 <line:854:3, col:36> 'void'
    | |-ImplicitCastExpr 0x559e036b2ec0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559e036b2e80 <col:3> 'void (int)' Function 0x559e0364e0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x559e036b2f18 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559e036b2f00 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x559e036b2ea0 <col:21> '_Bool' lvalue Var 0x559e036a8690 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x559e036b2f50 <line:855:3, col:10>
      `-IntegerLiteral 0x559e036b2f30 <col:10> 'int' 0
