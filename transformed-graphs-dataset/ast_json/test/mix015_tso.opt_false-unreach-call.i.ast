TranslationUnitDecl 0x560cd424ef88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x560cd424f848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x560cd424f520 '__int128'
|-TypedefDecl 0x560cd424f8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x560cd424f540 'unsigned __int128'
|-TypedefDecl 0x560cd424fbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x560cd424f990 'struct __NSConstantString_tag'
|   `-Record 0x560cd424f910 '__NSConstantString_tag'
|-TypedefDecl 0x560cd424fc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x560cd424fc20 'char *'
|   `-BuiltinType 0x560cd424f020 'char'
|-TypedefDecl 0x560cd428eb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x560cd424ff00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x560cd424fd40 'struct __va_list_tag'
|     `-Record 0x560cd424fcc0 '__va_list_tag'
|-FunctionDecl 0x560cd428eca0 <pthread-wmm/mix015_tso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x560cd428ebd0 <col:31> col:34 'int'
|-FunctionDecl 0x560cd428ee68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x560cd428ef90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x560cd428f0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x560cd428f048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x560cd428f308 <col:40, col:99>
|   |-IfStmt 0x560cd428f2d8 <col:42, col:88>
|   | |-UnaryOperator 0x560cd428f1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x560cd428f1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x560cd428f180 <col:47> 'int' lvalue ParmVar 0x560cd428f048 'expression' 'int'
|   | `-CompoundStmt 0x560cd428f2c0 <col:59, col:88>
|   |   `-LabelStmt 0x560cd428f2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x560cd428f238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x560cd428f220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x560cd428f1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x560cd428ef90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x560cd428f2f0 <col:89>
|   `-ReturnStmt 0x560cd428f2f8 <col:91>
|-FunctionDecl 0x560cd428f350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x560cd428f410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x560cd428f790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560cd428f4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x560cd428f548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x560cd428f5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560cd428f648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560cd428f850 <line:10:22>
|-FunctionDecl 0x560cd42b58a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560cd428f8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x560cd428f940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x560cd428f9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560cd428fa40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560cd42b5960 <line:13:22>
|-FunctionDecl 0x560cd42b5c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560cd42b59d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x560cd42b5a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x560cd42b5ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x560cd42b5cc8 <line:15:22>
|-TypedefDecl 0x560cd42b5d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x560cd424f0e0 'unsigned char'
|-TypedefDecl 0x560cd42b5da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x560cd424f100 'unsigned short'
|-TypedefDecl 0x560cd42b5e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x560cd424f120 'unsigned int'
|-TypedefDecl 0x560cd42b5e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x560cd424f140 'unsigned long'
|-TypedefDecl 0x560cd42b5ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x560cd424f040 'signed char'
|-TypedefDecl 0x560cd42b5f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x560cd424f0e0 'unsigned char'
|-TypedefDecl 0x560cd42b5fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x560cd424f060 'short'
|-TypedefDecl 0x560cd42b6048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x560cd424f100 'unsigned short'
|-TypedefDecl 0x560cd42b60b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x560cd424f080 'int'
|-TypedefDecl 0x560cd42b6128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x560cd424f120 'unsigned int'
|-TypedefDecl 0x560cd42b6198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x560cd424f0a0 'long'
|-TypedefDecl 0x560cd42b6208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x560cd424f140 'unsigned long'
|-TypedefDecl 0x560cd42b6278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x560cd424f0a0 'long'
|-TypedefDecl 0x560cd42b62e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x560cd424f140 'unsigned long'
|-TypedefDecl 0x560cd42b6358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x560cd424f140 'unsigned long'
|-TypedefDecl 0x560cd42b63c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x560cd424f120 'unsigned int'
|-TypedefDecl 0x560cd42b6438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x560cd424f120 'unsigned int'
|-TypedefDecl 0x560cd42b64a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x560cd424f140 'unsigned long'
|-TypedefDecl 0x560cd42b6518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x560cd424f140 'unsigned long'
|-TypedefDecl 0x560cd42b6588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x560cd424f120 'unsigned int'
|-TypedefDecl 0x560cd42b65f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x560cd424f140 'unsigned long'
|-TypedefDecl 0x560cd42b6668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x560cd424f0a0 'long'
|-TypedefDecl 0x560cd42b66d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x560cd424f0a0 'long'
|-TypedefDecl 0x560cd42b6748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x560cd424f080 'int'
|-RecordDecl 0x560cd42b67a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x560cd42b6918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x560cd42b69d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x560cd42b6970 'struct __fsid_t' sugar
|   `-RecordType 0x560cd42b6820 '__fsid_t'
|     `-Record 0x560cd42b67a0 ''
|-TypedefDecl 0x560cd42b6a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x560cd424f0a0 'long'
|-TypedefDecl 0x560cd42b6ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x560cd424f140 'unsigned long'
|-TypedefDecl 0x560cd42b6b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x560cd424f140 'unsigned long'
|-TypedefDecl 0x560cd42b6ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x560cd424f120 'unsigned int'
|-TypedefDecl 0x560cd42b6c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x560cd424f0a0 'long'
|-TypedefDecl 0x560cd42b6c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x560cd424f120 'unsigned int'
|-TypedefDecl 0x560cd42b6cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x560cd424f0a0 'long'
|-TypedefDecl 0x560cd42b6d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x560cd424f080 'int'
|-TypedefDecl 0x560cd42b6dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x560cd424f080 'int'
|-TypedefDecl 0x560cd42b6e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x560cd424f080 'int'
|-TypedefDecl 0x560cd42b6eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x560cd424f7a0 'void *'
|   `-BuiltinType 0x560cd424efe0 'void'
|-TypedefDecl 0x560cd42b6f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x560cd424f0a0 'long'
|-TypedefDecl 0x560cd42b6f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x560cd424f0a0 'long'
|-TypedefDecl 0x560cd42b7008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x560cd424f0a0 'long'
|-TypedefDecl 0x560cd42b7078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x560cd424f140 'unsigned long'
|-TypedefDecl 0x560cd42b70e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x560cd424f140 'unsigned long'
|-TypedefDecl 0x560cd42b7158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x560cd424f140 'unsigned long'
|-TypedefDecl 0x560cd42b71c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x560cd424f140 'unsigned long'
|-TypedefDecl 0x560cd42b7238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x560cd424f0a0 'long'
|-TypedefDecl 0x560cd42b72a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x560cd424f0a0 'long'
|-TypedefDecl 0x560cd42b7318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x560cd424f0a0 'long'
|-TypedefDecl 0x560cd42b7388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x560cd424f140 'unsigned long'
|-TypedefDecl 0x560cd42b7418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x560cd42b73e0 '__off64_t' sugar
|   |-Typedef 0x560cd42b66d8 '__off64_t'
|   `-BuiltinType 0x560cd424f0a0 'long'
|-TypedefDecl 0x560cd42b7510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x560cd42b74d0 '__quad_t *'
|   `-TypedefType 0x560cd42b7470 '__quad_t' sugar
|     |-Typedef 0x560cd42b6278 '__quad_t'
|     `-BuiltinType 0x560cd424f0a0 'long'
|-TypedefDecl 0x560cd42b7580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x560cd424fc20 'char *'
|   `-BuiltinType 0x560cd424f020 'char'
|-TypedefDecl 0x560cd42b75f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x560cd424f0a0 'long'
|-TypedefDecl 0x560cd42b7660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x560cd424f120 'unsigned int'
|-FunctionDecl 0x560cd42b77a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x560cd42b76d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x560cd42b7ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x560cd42b7ad8 <line:72:3, col:34>
|     `-CallExpr 0x560cd42b7a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x560cd42b7a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560cd42b7a10 <col:10> '<builtin fn type>' Function 0x560cd42b7880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x560cd42b7ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x560cd42b7a30 <col:29> 'unsigned int' lvalue ParmVar 0x560cd42b76d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x560cd42b7880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x560cd42b7920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x560cd42b7990 <col:10> Implicit
| `-ConstAttr 0x560cd42b79e8 <col:10> Implicit
|-FunctionDecl 0x560cd42b7c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x560cd42b7b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x560cd42b7f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x560cd42b7f48 <line:77:3, col:34>
|     `-CallExpr 0x560cd42b7f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x560cd42b7ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560cd42b7e78 <col:10> '<builtin fn type>' Function 0x560cd42b7ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x560cd42b7f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x560cd42b7e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x560cd42b7b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x560cd42b7ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x560cd42b7d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x560cd42b7df8 <col:10> Implicit
| `-ConstAttr 0x560cd42b7e50 <col:10> Implicit
|-TypedefDecl 0x560cd42b7f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x560cd424f140 'unsigned long'
|-TypedefDecl 0x560cd42b8018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x560cd42b7fe0 '__time_t' sugar
|   |-Typedef 0x560cd42b6c18 '__time_t'
|   `-BuiltinType 0x560cd424f0a0 'long'
|-RecordDecl 0x560cd42b8070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x560cd42b8128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x560cd42b81b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x560cd42b8248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x560cd42b8210 '__pid_t' sugar
|   |-Typedef 0x560cd42b6748 '__pid_t'
|   `-BuiltinType 0x560cd424f080 'int'
|-RecordDecl 0x560cd42b82a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x560cd42b8360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x560cd42b83b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x560cd42b8470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x560cd42b84d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x560cd424f140 'unsigned long'
|-RecordDecl 0x560cd42b8530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x560cd42b87c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x560cd42ba8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x560cd42b8810 'struct cpu_set_t' sugar
|   `-RecordType 0x560cd42b85b0 'cpu_set_t'
|     `-Record 0x560cd42b8530 ''
|-FunctionDecl 0x560cd42bab88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x560cd42ba958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560cd42baa60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x560cd42bac38 <line:107:19>
|-FunctionDecl 0x560cd42bae10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x560cd42baca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x560cd42baeb8 <col:69>
|-FunctionDecl 0x560cd42bb030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x560cd42baf20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x560cd42bb0d8 <col:64>
|-FunctionDecl 0x560cd42bb398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x560cd42bb140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560cd42bb278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560cd42bb448 <line:113:22>
|-FunctionDecl 0x560cd42bb6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x560cd42bb4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560cd42bb5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x560cd42bb778 <col:88>
|-FunctionDecl 0x560cd42bba98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560cd42bb7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560cd42bb8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x560cd42bb950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560cd42bbb50 <col:62>
|-FunctionDecl 0x560cd42bbcc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x560cd42bbbb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x560cd42bbd70 <col:63>
|-FunctionDecl 0x560cd42bbe98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x560cd42bbf38 <col:47>
|-FunctionDecl 0x560cd42bc040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x560cd42bbfa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560cd42bc0e8 <col:69>
|-FunctionDecl 0x560cd42bc1f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x560cd42bc158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560cd42bc298 <col:69>
|-FunctionDecl 0x560cd42bc558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560cd42bc300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560cd42bc438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x560cd42bc608 <col:88>
|-TypedefDecl 0x560cd42bc698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x560cd42bc660 '__clock_t' sugar
|   |-Typedef 0x560cd42b6a58 '__clock_t'
|   `-BuiltinType 0x560cd424f0a0 'long'
|-TypedefDecl 0x560cd42bc728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x560cd42bc6f0 '__clockid_t' sugar
|   |-Typedef 0x560cd42b6e48 '__clockid_t'
|   `-BuiltinType 0x560cd424f080 'int'
|-TypedefDecl 0x560cd42bc7b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x560cd42bc780 '__timer_t' sugar
|   |-Typedef 0x560cd42b6eb8 '__timer_t'
|   `-PointerType 0x560cd424f7a0 'void *'
|     `-BuiltinType 0x560cd424efe0 'void'
|-RecordDecl 0x560cd42bc810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x560cd42bc8e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x560cd42bc950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x560cd42bc9b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x560cd42bca20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x560cd42bca88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x560cd42bcaf0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x560cd42bcb58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x560cd42bcbc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x560cd42bcc28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x560cd42bcc90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x560cd42bccf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x560cd42bcd48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x560cd42bce18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x560cd42bce88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x560cd42bcf30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x560cd42bd100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x560cd42bd1a0 <col:45>
|-FunctionDecl 0x560cd42bd380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x560cd42bd270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x560cd42bd428 <col:54>
|-FunctionDecl 0x560cd42bd628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x560cd42bd490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x560cd42bd508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x560cd42bd6d8 <line:157:22>
| `-ConstAttr 0x560cd42bd730 <col:63>
|-FunctionDecl 0x560cd42be560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560cd42bd828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560cd42be608 <col:56>
|-FunctionDecl 0x560cd42be9b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x560cd42be678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x560cd42be6f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560cd42be770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x560cd42be868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x560cd42bea70 <col:54>
|-RecordDecl 0x560cd42beac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x560cd42beb78 parent 0x560cd424ef88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x560cd42bedd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x560cd42bee78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x560cd42beee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x560cd42bef48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x560cd42bf038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x560cd42bf158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x560cd42bf100 'struct __locale_struct *'
|   `-ElaboratedType 0x560cd42bf090 'struct __locale_struct' sugar
|     `-RecordType 0x560cd42beb50 'struct __locale_struct'
|       `-Record 0x560cd42beac8 '__locale_struct'
|-TypedefDecl 0x560cd42bf208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x560cd42bf1d0 '__locale_t' sugar
|   |-Typedef 0x560cd42bf158 '__locale_t'
|   `-PointerType 0x560cd42bf100 'struct __locale_struct *'
|     `-ElaboratedType 0x560cd42bf090 'struct __locale_struct' sugar
|       `-RecordType 0x560cd42beb50 'struct __locale_struct'
|         `-Record 0x560cd42beac8 '__locale_struct'
|-FunctionDecl 0x560cd42bf610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x560cd42bf278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x560cd42bf2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560cd42bf370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x560cd42bf400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560cd42bf478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x560cd42bf6d8 <col:40>
|-FunctionDecl 0x560cd42bf8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560cd42bf7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x560cd42bf970 <col:66>
|-FunctionDecl 0x560cd42bfa80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560cd42bf9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x560cd42bfb28 <col:69>
|-FunctionDecl 0x560cd42bfd58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560cd42bfb90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560cd42bfc20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560cd42bfe08 <col:52>
|-FunctionDecl 0x560cd42bffb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560cd42bfe70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560cd42bff00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560cd42c0060 <col:55>
|-FunctionDecl 0x560cd42c01f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x560cd42c00e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x560cd42c02a0 <col:62>
|-FunctionDecl 0x560cd42c0418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x560cd42c0308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x560cd42c04c0 <col:60>
|-FunctionDecl 0x560cd42c0718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560cd42c0578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560cd42c05f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x560cd42c07c8 <col:44>
|-FunctionDecl 0x560cd42c09d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560cd42c0830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560cd42c08b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x560cd42c0a88 <col:49>
|-VarDecl 0x560cd42c0b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x560cd42c0c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x560cd42c0c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x560cd42c0d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x560cd42c0e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x560cd42c0f20 <col:42>
|-VarDecl 0x560cd42c0f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x560cd42c1010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x560cd42c1198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x560cd42c1088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x560cd42c1240 <col:57>
|-FunctionDecl 0x560cd42c1350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560cd42c12c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560cd42c13f8 <col:56>
|-FunctionDecl 0x560cd42c2540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560cd42c1478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x560cd42c25e8 <col:59>
|-FunctionDecl 0x560cd42c26f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x560cd42c2658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x560cd42c2798 <col:48>
| `-ConstAttr 0x560cd42c27f0 <col:89>
|-FunctionDecl 0x560cd42c2a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560cd42c28a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x560cd42c2938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x560cd42c2cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560cd42c2b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560cd42c2bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x560cd42c2d68 <col:88>
|-FunctionDecl 0x560cd42c2f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560cd42c2dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560cd42c2e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x560cd42c2fb0 <col:88>
|-FunctionDecl 0x560cd42c31c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x560cd42c3018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560cd42c30a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x560cd42c3278 <line:208:22>
|-FunctionDecl 0x560cd42c35e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560cd42c32e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560cd42c3360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x560cd42c33f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x560cd42c3480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x560cd42c38e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x560cd42c36e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x560cd42c37c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x560cd42c3998 <col:85>
|-FunctionDecl 0x560cd42c3d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x560cd42c3a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560cd42c3b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x560cd42c3c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x560cd42c3e40 <col:52>
|-FunctionDecl 0x560cd42c3fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x560cd42c3ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560cd42c4060 <col:61>
|-FunctionDecl 0x560cd42c4560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x560cd42c40c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560cd42c4148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x560cd42c4278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x560cd42c4368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x560cd42c4620 <col:62>
|-FunctionDecl 0x560cd42c4838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x560cd42c4688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560cd42c4718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x560cd42c48e8 <line:221:22>
|-FunctionDecl 0x560cd42c49e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x560cd42c4950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560cd42c4a90 <col:65>
|-TypedefDecl 0x560cd42c4b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x560cd424f140 'unsigned long'
|-RecordDecl 0x560cd42c4b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x560cd42c4ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560cd42c4d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560cd42c4db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x560cd42c4d60 'union pthread_attr_t' sugar
|   `-RecordType 0x560cd42c4be0 'union pthread_attr_t'
|     `-Record 0x560cd42c4b58 'pthread_attr_t'
|-RecordDecl 0x560cd42c4e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x560cd42c4f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x560cd42c5000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x560cd42c50b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x560cd42c5050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x560cd42c4e90 'struct __pthread_internal_list'
|     `-Record 0x560cd42c4e10 '__pthread_internal_list'
|-RecordDecl 0x560cd42c5120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x560cd42c51c8 parent 0x560cd424ef88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x560cd42c52a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560cd42c5308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x560cd42c5370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x560cd42c53d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x560cd42c5440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x560cd42c54a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x560cd42c9580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x560cd42c9630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x560cd42c9720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x560cd42c9788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560cd42c9910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x560cd42c98b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x560cd42c51a0 'pthread_mutex_t'
|     `-Record 0x560cd42c5120 ''
|-RecordDecl 0x560cd42c9980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x560cd42c9ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560cd42c9b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560cd42c9be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x560cd42c9b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x560cd42c9a00 'pthread_mutexattr_t'
|     `-Record 0x560cd42c9980 ''
|-RecordDecl 0x560cd42c9c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x560cd42c9cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x560cd42c9dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560cd42c9e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x560cd42c9e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x560cd42c9ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x560cd42c9f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x560cd42c9fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x560cd42ca030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x560cd42ca098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x560cd42ca150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix015_tso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix015_tso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x560cd42ca240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x560cd42ca2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x560cd42ca3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x560cd42ca380 'union pthread_cond_t' sugar
|   `-RecordType 0x560cd42c9cd0 'pthread_cond_t'
|     `-Record 0x560cd42c9c50 ''
|-RecordDecl 0x560cd42ca450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x560cd42ca590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560cd42ca5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560cd42ca6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x560cd42ca650 'union pthread_condattr_t' sugar
|   `-RecordType 0x560cd42ca4d0 'pthread_condattr_t'
|     `-Record 0x560cd42ca450 ''
|-TypedefDecl 0x560cd42ca738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x560cd424f120 'unsigned int'
|-TypedefDecl 0x560cd42ca7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x560cd424f080 'int'
|-RecordDecl 0x560cd42ca800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x560cd42ca8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x560cd42ca970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560cd42ca9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x560cd42caa40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x560cd42caaa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x560cd42cab10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x560cd42cab78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x560cd42cabe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x560cd42cac48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x560cd42cacb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x560cd42cad18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x560cd42cad80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x560cd42cae30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix015_tso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix015_tso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x560cd42caed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560cd42caf40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560cd42cb090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x560cd42cb030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x560cd42ca880 'pthread_rwlock_t'
|     `-Record 0x560cd42ca800 ''
|-RecordDecl 0x560cd42cb100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x560cd42cb240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x560cd42cb2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560cd42cb360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x560cd42cb300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x560cd42cb180 'pthread_rwlockattr_t'
|     `-Record 0x560cd42cb100 ''
|-TypedefDecl 0x560cd42cb3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x560cd424f084 'volatile int' volatile
|   `-BuiltinType 0x560cd424f080 'int'
|-RecordDecl 0x560cd42cb440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x560cd42cd5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x560cd42cd618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560cd42cd6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x560cd42cd670 'union pthread_barrier_t' sugar
|   `-RecordType 0x560cd42cb4c0 'pthread_barrier_t'
|     `-Record 0x560cd42cb440 ''
|-RecordDecl 0x560cd42cd740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x560cd42cd840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560cd42cd8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560cd42cd960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x560cd42cd900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x560cd42cd7c0 'pthread_barrierattr_t'
|     `-Record 0x560cd42cd740 ''
|-TypedefDecl 0x560cd42cda78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x560cd42cda10 'long [8]' 8 
|   `-BuiltinType 0x560cd424f0a0 'long'
|-EnumDecl 0x560cd42cdad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x560cd42cdb98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x560cd42cdbe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x560cd42cdc38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x560cd42cdd08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x560cd42cdd58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x560cd42cdda8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x560cd42cddf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x560cd42cde80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x560cd42cde68 <col:26> 'int'
| |   `-DeclRefExpr 0x560cd42cde48 <col:26> 'int' EnumConstant 0x560cd42cdd08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x560cd42cdf08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x560cd42cdef0 <col:29> 'int'
| |   `-DeclRefExpr 0x560cd42cded0 <col:29> 'int' EnumConstant 0x560cd42cdd58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x560cd42cdf90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x560cd42cdf78 <col:30> 'int'
| |   `-DeclRefExpr 0x560cd42cdf58 <col:30> 'int' EnumConstant 0x560cd42cdda8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x560cd42ce018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x560cd42ce000 <col:27> 'int'
|     `-DeclRefExpr 0x560cd42cdfe0 <col:27> 'int' EnumConstant 0x560cd42cde80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x560cd42ce068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x560cd42ce138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x560cd42ce1c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x560cd42ce1a8 <col:30> 'int'
| |   `-DeclRefExpr 0x560cd42ce188 <col:30> 'int' EnumConstant 0x560cd42ce138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x560cd42ce210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x560cd42ce298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x560cd42ce280 <col:29> 'int'
|     `-DeclRefExpr 0x560cd42ce260 <col:29> 'int' EnumConstant 0x560cd42ce210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x560cd42ce2e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x560cd42ce3b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x560cd42ce408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x560cd42ce458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x560cd42ce4a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x560cd42ce5c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x560cd42ce610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x560cd42ce660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x560cd42ce6e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x560cd42ce6d0 <col:31> 'int'
|     `-DeclRefExpr 0x560cd42ce6b0 <col:31> 'int' EnumConstant 0x560cd42ce5c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x560cd42ce738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x560cd42ce808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x560cd42ce858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x560cd42ce8a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x560cd42ce978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x560cd42ce9c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x560cd42cea18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x560cd42ceae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x560cd42ceb38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x560cd42ceb88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x560cd42cedc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x560cd42cee30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x560cd42cee98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x560cd42cefb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x560cd42cf008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x560cd42cf0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x560cd42cf128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x560cd42cf178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x560cd42cf248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x560cd42cf298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x560cd42cf8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x560cd42cf390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x560cd42cf4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cd42cf6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x560cd42cf760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x560cd42cf9b8 <col:47>
| |-NonNullAttr 0x560cd42cfa10 <col:77, col:94> 1 3
| `-CallbackAttr 0x560cd42cfa48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x560cd42cfb70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x560cd42cfaa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x560cd42cfdc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x560cd42cfc28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x560cd42cfca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x560cd42cff98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x560cd42cfe88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x560cd42d0040 <col:60>
|-FunctionDecl 0x560cd42d0190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x560cd42d0230 <col:54>
| `-ConstAttr 0x560cd42d0288 <col:95>
|-FunctionDecl 0x560cd42d0458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x560cd42d02c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560cd42d0338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x560cd42d0508 <line:394:19>
| `-ConstAttr 0x560cd42d0560 <col:60>
|-FunctionDecl 0x560cd42d0f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560cd42d0e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560cd42d1010 <col:71>
| `-NonNullAttr 0x560cd42d1068 <col:112, col:126> 1
|-FunctionDecl 0x560cd42d1170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560cd42d10b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560cd42d1218 <line:397:22>
| `-NonNullAttr 0x560cd42d1270 <col:63, col:77> 1
|-FunctionDecl 0x560cd42d1498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x560cd42d12b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560cd42d1338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x560cd42d1548 <line:400:22>
| `-NonNullAttr 0x560cd42d15a0 <col:63, col:80> 1 2
|-FunctionDecl 0x560cd42d17a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560cd42d15e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560cd42d1668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x560cd42d1858 <line:403:22>
| `-NonNullAttr 0x560cd42d18b0 <col:63, col:77> 1
|-FunctionDecl 0x560cd42d1b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x560cd42d18f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560cd42d19a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x560cd42d1bb8 <line:406:22>
| `-NonNullAttr 0x560cd42d1c10 <col:63, col:80> 1 2
|-FunctionDecl 0x560cd42d2e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560cd42d1c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560cd42d1cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560cd42d2ef8 <line:409:22>
| `-NonNullAttr 0x560cd42d2f50 <col:63, col:77> 1
|-FunctionDecl 0x560cd42d3188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560cd42d2f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cd42d3028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560cd42d3238 <line:412:22>
| `-NonNullAttr 0x560cd42d3290 <col:63, col:80> 1 2
|-FunctionDecl 0x560cd42d34c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560cd42d32d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cd42d3368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x560cd42d3578 <col:37>
| `-NonNullAttr 0x560cd42d35d0 <col:78, col:95> 1 2
|-FunctionDecl 0x560cd42d37b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cd42d3618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cd42d3698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x560cd42d3868 <line:418:22>
| `-NonNullAttr 0x560cd42d38c0 <col:63, col:80> 1 2
|-FunctionDecl 0x560cd42d3a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560cd42d3908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560cd42d3988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x560cd42d3af8 <line:420:22>
| `-NonNullAttr 0x560cd42d3b50 <col:63, col:77> 1
|-FunctionDecl 0x560cd42d3cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cd42d3b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cd42d3c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x560cd42d3da8 <line:423:22>
| `-NonNullAttr 0x560cd42d4e30 <col:63, col:80> 1 2
|-FunctionDecl 0x560cd42d4fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560cd42d4e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560cd42d4ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x560cd42d5068 <line:426:22>
| `-NonNullAttr 0x560cd42d50c0 <col:63, col:77> 1
|-FunctionDecl 0x560cd42d5268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cd42d5108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cd42d5188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x560cd42d5318 <line:429:22>
| `-NonNullAttr 0x560cd42d5370 <col:63, col:80> 1 2
|-FunctionDecl 0x560cd42d54f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560cd42d53b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560cd42d5438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x560cd42d55a8 <line:431:22>
| `-NonNullAttr 0x560cd42d5600 <col:63, col:77> 1
|-FunctionDecl 0x560cd42d5828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x560cd42d5648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cd42d56c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x560cd42d58d8 <line:434:22>
| |-NonNullAttr 0x560cd42d5930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x560cd42d5968 <col:100> "" ""
|-FunctionDecl 0x560cd42d5b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x560cd42d59b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560cd42d5a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x560cd42d5c28 <line:437:22>
| |-NonNullAttr 0x560cd42d5c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x560cd42d5cb8 <col:97> "" ""
|-FunctionDecl 0x560cd42d5eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560cd42d5d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cd42d5d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560cd42d5f68 <line:440:22>
| `-NonNullAttr 0x560cd42d5fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x560cd42d6140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560cd42d6008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560cd42d6080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560cd42d61f0 <line:443:22>
| `-NonNullAttr 0x560cd42d6248 <col:63, col:77> 1
|-FunctionDecl 0x560cd42d6538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560cd42d6298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560cd42d6318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x560cd42d6390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560cd42d65f0 <line:447:22>
| `-NonNullAttr 0x560cd42d6648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x560cd42d68f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x560cd42d66a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560cd42d6720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x560cd42d6798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560cd42d69b0 <col:43>
| `-NonNullAttr 0x560cd42d6a08 <col:84, col:98> 1
|-FunctionDecl 0x560cd42d6cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560cd42d6a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560cd42d6ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x560cd42d6b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x560cd42d6d80 <line:452:22>
| `-NonNullAttr 0x560cd42d6dd8 <col:63, col:77> 3
|-FunctionDecl 0x560cd42d70e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560cd42d6e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560cd42d6ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x560cd42d6f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560cd42d71a0 <line:456:22>
| `-NonNullAttr 0x560cd42d71f8 <col:63, col:80> 2 3
|-FunctionDecl 0x560cd42d73e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x560cd42d7248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560cd42d72c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x560cd42d7498 <line:458:22>
|-FunctionDecl 0x560cd42d7868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x560cd42d7560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x560cd42d7700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x560cd42d7918 <col:52, col:69> 1 2
|-FunctionDecl 0x560cd42d7ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x560cd42d79a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x560cd42d7a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x560cd42d7ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x560cd42d7b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x560cd42d7c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x560cd42d7e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x560cd42d7d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x560cd42d7fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x560cd42d8040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x560cd42d80e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x560cd42d81d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x560cd42d8240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x560cd42d8410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix015_tso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x560cd42d8508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x560cd42d85c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x560cd42d8560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x560cd42d80c0 '__pthread_unwind_buf_t'
| |   `-Record 0x560cd42d8040 ''
| `-AlignedAttr 0x560cd42d8618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x560cd42d8690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x560cd42d87f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x560cd42d8858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x560cd42d88c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x560cd42d8928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x560cd42d8b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560cd42d8a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560cd42d8c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560cd42d8be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560cd42d8e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560cd42d8d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x560cd42d8f18 <line:487:22>
|-RecordDecl 0x560cd42d8f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x560cd42d9288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x560cd42d90e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x560cd42d9168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x560cd42d9338 <col:86>
| `-ReturnsTwiceAttr 0x560cd42d9390 <col:12> Implicit
|-FunctionDecl 0x560cd42d96b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560cd42d9460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x560cd42d9570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x560cd42d9768 <line:493:22>
| `-NonNullAttr 0x560cd42d97c0 <col:63, col:77> 1
|-FunctionDecl 0x560cd42d9938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560cd42d9808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560cd42d99e0 <line:495:22>
| `-NonNullAttr 0x560cd42d9a38 <col:63, col:77> 1
|-FunctionDecl 0x560cd42d9b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560cd42d9a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560cd42d9be8 <line:497:22>
| `-NonNullAttr 0x560cd42d9c40 <col:52, col:66> 1
|-FunctionDecl 0x560cd42d9d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560cd42d9c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560cd42d9de8 <line:499:22>
| `-NonNullAttr 0x560cd42d9e40 <col:52, col:66> 1
|-FunctionDecl 0x560cd42da088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560cd42d9e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560cd42d9f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560cd42da138 <col:36>
| `-NonNullAttr 0x560cd42da190 <col:66, col:83> 1 2
|-FunctionDecl 0x560cd42da290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560cd42da1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560cd42da338 <line:504:22>
| `-NonNullAttr 0x560cd42da390 <col:52, col:66> 1
|-FunctionDecl 0x560cd42da628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cd42da440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560cd42da4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560cd42da6d8 <line:508:22>
| `-NonNullAttr 0x560cd42da730 <col:63, col:80> 1 2
|-FunctionDecl 0x560cd42da9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x560cd42da778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560cd42da7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x560cd42da878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x560cd42daab0 <line:512:22>
| `-NonNullAttr 0x560cd42dab08 <col:63, col:80> 1 3
|-FunctionDecl 0x560cd42dac10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560cd42dab58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560cd42dacb8 <line:514:22>
| `-NonNullAttr 0x560cd42dad10 <col:63, col:77> 1
|-FunctionDecl 0x560cd42daf38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560cd42dadc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560cd42dafe0 <line:516:22>
| `-NonNullAttr 0x560cd42db038 <col:63, col:77> 1
|-FunctionDecl 0x560cd42db140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560cd42db088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560cd42db1e8 <line:518:22>
| `-NonNullAttr 0x560cd42db240 <col:63, col:77> 1
|-FunctionDecl 0x560cd42db468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cd42db288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560cd42db308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x560cd42db518 <line:522:22>
| `-NonNullAttr 0x560cd42db570 <col:63, col:80> 1 2
|-FunctionDecl 0x560cd42db778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560cd42db5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560cd42db638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x560cd42db828 <line:525:22>
| `-NonNullAttr 0x560cd42db880 <col:63, col:77> 1
|-FunctionDecl 0x560cd42dba28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cd42db8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560cd42db948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x560cd42dbad8 <line:528:22>
| `-NonNullAttr 0x560cd42dbb30 <col:63, col:80> 1 2
|-FunctionDecl 0x560cd42dbcb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560cd42dbb78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560cd42dbbf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x560cd42dbd68 <line:530:22>
| `-NonNullAttr 0x560cd42dbdc0 <col:63, col:77> 1
|-FunctionDecl 0x560cd42dcf90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cd42dbe08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560cd42dceb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x560cd42dd040 <line:534:22>
| `-NonNullAttr 0x560cd42dd098 <col:63, col:80> 1 2
|-FunctionDecl 0x560cd42dd228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560cd42dd0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560cd42dd168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x560cd42dd2d8 <line:537:22>
| `-NonNullAttr 0x560cd42dd330 <col:63, col:77> 1
|-FunctionDecl 0x560cd42dd4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cd42dd378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560cd42dd3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560cd42dd588 <line:541:22>
| `-NonNullAttr 0x560cd42dd5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x560cd42dd768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560cd42dd628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560cd42dd6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x560cd42dd818 <line:544:22>
| `-NonNullAttr 0x560cd42dd870 <col:63, col:77> 1
|-FunctionDecl 0x560cd42dda58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x560cd42dd8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x560cd42dd938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x560cd42ddb08 <line:547:22>
| `-NonNullAttr 0x560cd42ddb60 <col:63, col:80> 1 2
|-FunctionDecl 0x560cd42ddce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560cd42ddba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560cd42ddc28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x560cd42ddd98 <line:550:22>
| `-NonNullAttr 0x560cd42dddf0 <col:63, col:77> 1
|-FunctionDecl 0x560cd42df168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x560cd42def10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560cd42df020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x560cd42df218 <col:29>
| `-NonNullAttr 0x560cd42df270 <col:70, col:84> 1
|-FunctionDecl 0x560cd42df3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560cd42df2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560cd42df490 <line:555:22>
| `-NonNullAttr 0x560cd42df4e8 <col:63, col:77> 1
|-FunctionDecl 0x560cd42df5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560cd42df538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560cd42df698 <line:557:22>
| `-NonNullAttr 0x560cd42df6f0 <col:52, col:66> 1
|-FunctionDecl 0x560cd42df7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560cd42df738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560cd42df898 <line:559:19>
| `-NonNullAttr 0x560cd42df8f0 <col:49, col:63> 1
|-FunctionDecl 0x560cd42dfb28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560cd42df938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560cd42df9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560cd42dfbd8 <col:39>
| `-NonNullAttr 0x560cd42dfc30 <col:69, col:86> 1 2
|-FunctionDecl 0x560cd42dfd30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560cd42dfc78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560cd42dfdd8 <line:564:22>
| `-NonNullAttr 0x560cd42dfe30 <col:52, col:66> 1
|-FunctionDecl 0x560cd42dff98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560cd42dfee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560cd42e0040 <line:566:22>
| `-NonNullAttr 0x560cd42e0098 <col:52, col:66> 1
|-FunctionDecl 0x560cd42e0258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560cd42e00e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560cd42e0178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560cd42e0308 <col:39>
| `-NonNullAttr 0x560cd42e0360 <col:69, col:86> 1 2
|-FunctionDecl 0x560cd42e0460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560cd42e03a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560cd42e0508 <line:571:22>
| `-NonNullAttr 0x560cd42e0560 <col:52, col:66> 1
|-FunctionDecl 0x560cd42e0748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560cd42e0610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560cd42e07f0 <line:573:22>
| `-NonNullAttr 0x560cd42e0848 <col:63, col:77> 1
|-FunctionDecl 0x560cd42e0950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560cd42e0898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560cd42e09f8 <line:575:22>
| `-NonNullAttr 0x560cd42e0a50 <col:63, col:77> 1
|-FunctionDecl 0x560cd42e0c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cd42e0a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560cd42e0b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x560cd42e0d28 <line:579:22>
| `-NonNullAttr 0x560cd42e0d80 <col:63, col:80> 1 2
|-FunctionDecl 0x560cd42e0fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560cd42e0dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560cd42e0e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x560cd42e1058 <line:582:22>
| `-NonNullAttr 0x560cd42e10b0 <col:63, col:77> 1
|-FunctionDecl 0x560cd42e1258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cd42e10f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560cd42e1178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x560cd42e1308 <line:586:22>
| `-NonNullAttr 0x560cd42e1360 <col:63, col:80> 1 2
|-FunctionDecl 0x560cd42e14e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560cd42e13a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560cd42e1428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x560cd42e1598 <col:36>
| `-NonNullAttr 0x560cd42e15f0 <col:77, col:91> 1
|-FunctionDecl 0x560cd42e1928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x560cd42e16d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560cd42e17e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x560cd42e19d8 <line:591:22>
| `-NonNullAttr 0x560cd42e1a30 <col:63, col:77> 1
|-FunctionDecl 0x560cd42e1ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560cd42e1a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560cd42e1c50 <line:593:22>
| `-NonNullAttr 0x560cd42e1ca8 <col:63, col:77> 1
|-FunctionDecl 0x560cd42e1db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560cd42e1cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560cd42e1e58 <line:595:22>
| `-NonNullAttr 0x560cd42e1eb0 <col:52, col:66> 1
|-FunctionDecl 0x560cd42e1fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560cd42e1f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560cd42e2070 <line:597:22>
| `-NonNullAttr 0x560cd42e20c8 <col:52, col:66> 1
|-FunctionDecl 0x560cd42e22f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x560cd42e2118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560cd42e2190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x560cd42e23a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x560cd42e26d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560cd42e2428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560cd42e24a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560cd42e2530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x560cd42e2790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x560cd42e29a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560cd42e2870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560cd42e2a50 <line:606:22>
| `-NonNullAttr 0x560cd42e2aa8 <col:63, col:77> 1
|-FunctionDecl 0x560cd42e2bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560cd42e2af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560cd42e2c58 <line:608:22>
| `-NonNullAttr 0x560cd42e2cb0 <col:63, col:77> 1
|-FunctionDecl 0x560cd42e2f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cd42e2cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560cd42e2d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x560cd42e2fc0 <line:612:22>
| `-NonNullAttr 0x560cd42e3018 <col:63, col:80> 1 2
|-FunctionDecl 0x560cd42e3228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x560cd42e3068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560cd42e30e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x560cd42e32d8 <col:37>
| `-NonNullAttr 0x560cd42e3330 <col:78, col:92> 1
|-FunctionDecl 0x560cd42e3548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x560cd42e3378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560cd42e3420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x560cd42e35f8 <line:618:22>
| `-NonNullAttr 0x560cd42e3650 <col:63, col:80> 1 2
|-FunctionDecl 0x560cd42e3818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x560cd42e3698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560cd42e3710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x560cd42e38c8 <line:621:22>
| `-NonNullAttr 0x560cd42e3920 <col:63, col:77> 1
|-FunctionDecl 0x560cd42e3bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x560cd42e3a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x560cd42e3a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x560cd42e3c78 <line:623:22>
| `-NonNullAttr 0x560cd42e3cd0 <col:63, col:77> 1
|-FunctionDecl 0x560cd42e3e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560cd42e3d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560cd42e3f20 <line:625:22>
| `-NonNullAttr 0x560cd42e3f78 <col:63, col:77> 1
|-FunctionDecl 0x560cd42e4080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560cd42e3fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560cd42e4128 <line:627:22>
| `-NonNullAttr 0x560cd42e4180 <col:52, col:66> 1
|-FunctionDecl 0x560cd42e4280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560cd42e41c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560cd42e4328 <line:629:22>
| `-NonNullAttr 0x560cd42e4380 <col:52, col:66> 1
|-FunctionDecl 0x560cd42e4480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560cd42e43c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560cd42e4528 <line:631:22>
| `-NonNullAttr 0x560cd42e4580 <col:52, col:66> 1
|-FunctionDecl 0x560cd42e4958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x560cd42e4660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x560cd42e4770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560cd42e47f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x560cd42e4a10 <line:635:22>
| `-NonNullAttr 0x560cd42e4a68 <col:63, col:77> 1
|-FunctionDecl 0x560cd42e4be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560cd42e4ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560cd42e4c90 <line:637:22>
| `-NonNullAttr 0x560cd42e4ce8 <col:63, col:77> 1
|-FunctionDecl 0x560cd42e4df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560cd42e4d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560cd42e4e98 <line:639:22>
| `-NonNullAttr 0x560cd42e4ef0 <col:52, col:66> 1
|-FunctionDecl 0x560cd42e50e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560cd42e4fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560cd42e5190 <line:641:22>
| `-NonNullAttr 0x560cd42e51e8 <col:63, col:77> 1
|-FunctionDecl 0x560cd42e52f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560cd42e5238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560cd42e5398 <line:643:22>
| `-NonNullAttr 0x560cd42e53f0 <col:63, col:77> 1
|-FunctionDecl 0x560cd42e5618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560cd42e5438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560cd42e54b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x560cd42e56c8 <line:647:22>
| `-NonNullAttr 0x560cd42e5720 <col:63, col:80> 1 2
|-FunctionDecl 0x560cd42e5928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x560cd42e5768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x560cd42e57e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x560cd42e59d8 <line:650:22>
| `-NonNullAttr 0x560cd42e5a30 <col:63, col:77> 1
|-FunctionDecl 0x560cd42e5d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x560cd42e5b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x560cd42e5c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x560cd42e5e28 <line:653:22>
| `-NonNullAttr 0x560cd42e5e80 <col:63, col:77> 1
|-FunctionDecl 0x560cd42e5fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x560cd42e5ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560cd42e6090 <col:69>
|-FunctionDecl 0x560cd42e6208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x560cd42e60f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560cd42e62b0 <col:72>
|-FunctionDecl 0x560cd42e64e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x560cd42e6318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x560cd42e63c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x560cd42e6598 <col:44>
|-FunctionDecl 0x560cd42e67b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x560cd42e6600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560cd42e6678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x560cd42e6868 <line:660:22>
| `-NonNullAttr 0x560cd42e68c0 <col:63, col:77> 2
|-FunctionDecl 0x560cd42e6d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x560cd42e69a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x560cd42e6ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x560cd42e6bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x560cd42e6dc0 <col:47>
|-FunctionDecl 0x560cd42e7f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x560cd42e6e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560cd42e80b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x560cd42e8020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560cd42e8210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x560cd42e8178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560cd42e82d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x560cd42e8398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x560cd42e8458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x560cd42e8510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x560cd42e8590 prev 0x560cd42e8510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x560cd42e85f8 <col:24> 'int' 0
|-VarDecl 0x560cd42e8630 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x560cd42e86b0 prev 0x560cd42e8630 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x560cd42e8718 <col:27> 'int' 0
|-VarDecl 0x560cd42e8750 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x560cd42e87d0 prev 0x560cd42e8750 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x560cd42e8838 <col:27> 'int' 0
|-VarDecl 0x560cd42e8870 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x560cd42e88f0 prev 0x560cd42e8870 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x560cd42e8958 <col:27> 'int' 0
|-VarDecl 0x560cd42e8990 <line:679:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x560cd42e8a10 prev 0x560cd42e8990 <line:680:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x560cd42e8a78 <col:27> 'int' 0
|-VarDecl 0x560cd42e8ab0 <line:681:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x560cd42e8b30 prev 0x560cd42e8ab0 <line:682:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x560cd42e8b98 <col:27> 'int' 0
|-VarDecl 0x560cd42e8bd0 <line:683:1, col:5> col:5 used a 'int'
|-VarDecl 0x560cd42e8c50 prev 0x560cd42e8bd0 <line:684:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x560cd42e8cb8 <col:9> 'int' 0
|-VarDecl 0x560cd42e8ce8 <line:685:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x560cd42e8d60 <line:686:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x560cd42e8de0 <line:687:1, col:5> col:5 used x 'int'
|-VarDecl 0x560cd42e8e60 prev 0x560cd42e8de0 <line:688:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x560cd42e8ec8 <col:9> 'int' 0
|-VarDecl 0x560cd42e8f70 <line:689:1, col:5> col:5 used y 'int'
|-VarDecl 0x560cd42e8ff0 prev 0x560cd42e8f70 <line:690:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x560cd42e9058 <col:9> 'int' 0
|-VarDecl 0x560cd42e9090 <line:691:1, col:5> col:5 used z 'int'
|-VarDecl 0x560cd42e9110 prev 0x560cd42e9090 <line:692:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x560cd42e9178 <col:9> 'int' 0
|-VarDecl 0x560cd42e91a8 <line:693:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x560cd42e9228 <line:694:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x560cd42e92a0 <line:695:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x560cd42e9318 <line:696:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x560cd42e9390 <line:697:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x560cd42e9408 <line:698:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x560cd42e9480 <line:699:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x560cd42e94f8 <line:700:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x560cd42e9570 <line:701:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x560cd42e95e8 <line:702:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x560cd42e9660 <line:703:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x560cd42e96e0 <line:704:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x560cd42e9760 <line:705:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x560cd42e97d8 <line:706:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x560cd42e9858 <line:707:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x560cd42e98d0 <line:708:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x560cd42e9948 <line:709:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x560cd42e99c0 <line:710:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x560cd42e9ad8 prev 0x560cd42e7f60 <line:711:1, line:731:1> line:711:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x560cd42e9a40 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560cd42ea2e8 <line:712:1, line:731:1>
|   |-CallExpr 0x560cd42e9be8 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cd42e9bd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42e9b80 <col:3> 'void ()' Function 0x560cd428f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cd42e9c48 <line:714:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560cd42e9c08 <col:3> 'int' lvalue Var 0x560cd42e8c50 'a' 'int'
|   | `-IntegerLiteral 0x560cd42e9c28 <col:7> 'int' 1
|   |-CallExpr 0x560cd42e9ca0 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cd42e9c88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42e9c68 <col:3> 'void ()' Function 0x560cd428f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cd42e9cf8 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cd42e9ce0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42e9cc0 <col:3> 'void ()' Function 0x560cd428f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cd42e9d58 <line:717:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560cd42e9d18 <col:3> 'int' lvalue Var 0x560cd42e8e60 'x' 'int'
|   | `-IntegerLiteral 0x560cd42e9d38 <col:7> 'int' 1
|   |-CallExpr 0x560cd42e9db0 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cd42e9d98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42e9d78 <col:3> 'void ()' Function 0x560cd428f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cd42e9e08 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cd42e9df0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42e9dd0 <col:3> 'void ()' Function 0x560cd428f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cd42e9e80 <line:720:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560cd42e9e28 <col:3> 'int' lvalue Var 0x560cd42e86b0 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x560cd42e9e68 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cd42e9e48 <col:25> 'int' lvalue Var 0x560cd42e8e60 'x' 'int'
|   |-CallExpr 0x560cd42e9ed8 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cd42e9ec0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42e9ea0 <col:3> 'void ()' Function 0x560cd428f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cd42e9f30 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cd42e9f18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42e9ef8 <col:3> 'void ()' Function 0x560cd428f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cd42e9fb8 <line:723:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560cd42e9f50 <col:3> 'int' lvalue Var 0x560cd42e87d0 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x560cd42e9fa0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cd42e9f80 <col:25> 'int' lvalue Var 0x560cd42e8ff0 'y' 'int'
|   |-CallExpr 0x560cd42ea010 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cd42e9ff8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42e9fd8 <col:3> 'void ()' Function 0x560cd428f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cd42ea068 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cd42ea050 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42ea030 <col:3> 'void ()' Function 0x560cd428f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x560cd42ea0c0 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cd42ea0a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42ea088 <col:3> 'void ()' Function 0x560cd428f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cd42ea118 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cd42ea100 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42ea0e0 <col:3> 'void ()' Function 0x560cd428f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cd42ea1d0 <line:728:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560cd42ea138 <col:3> 'int' lvalue Var 0x560cd42e8590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560cd42ea1b0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560cd42ea198 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cd42ea158 <col:22> 'int' lvalue Var 0x560cd42e8590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560cd42ea178 <col:41> 'int' 1
|   |-CallExpr 0x560cd42ea228 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cd42ea210 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42ea1f0 <col:3> 'void ()' Function 0x560cd428f410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560cd42ea2d8 <line:730:3, col:36>
|     `-CallExpr 0x560cd42ea2b8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560cd42ea2a0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560cd42ea248 <col:10> 'void *(void)' Function 0x560cd428ee68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560cd42ea438 prev 0x560cd42e80b8 <line:732:1, line:759:1> line:732:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x560cd42ea3a0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560cd42ed320 <line:733:1, line:759:1>
|   |-CallExpr 0x560cd42ea518 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cd42ea500 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42ea4e0 <col:3> 'void ()' Function 0x560cd428f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cd42ea578 <line:735:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560cd42ea538 <col:3> 'int' lvalue Var 0x560cd42e8ff0 'y' 'int'
|   | `-IntegerLiteral 0x560cd42ea558 <col:7> 'int' 1
|   |-CallExpr 0x560cd42ea5d0 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cd42ea5b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42ea598 <col:3> 'void ()' Function 0x560cd428f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cd42ea628 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cd42ea610 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42ea5f0 <col:3> 'void ()' Function 0x560cd428f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cd42ea6d8 <line:738:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42ea648 <col:3> '_Bool' lvalue Var 0x560cd42e9948 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x560cd42ea6c0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x560cd42ea6a0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x560cd42ea688 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x560cd42ea668 <col:19> 'void *(void)' Function 0x560cd428ee68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x560cd42ea788 <line:739:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42ea6f8 <col:3> '_Bool' lvalue Var 0x560cd42e99c0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x560cd42ea770 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x560cd42ea750 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x560cd42ea738 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x560cd42ea718 <col:19> 'void *(void)' Function 0x560cd428ee68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x560cd42ea800 <line:740:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42ea7a8 <col:3> '_Bool' lvalue Var 0x560cd42e91a8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x560cd42ea7e8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cd42ea7c8 <col:21> '_Bool' lvalue Var 0x560cd42e99c0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x560cd42ea878 <line:741:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560cd42ea820 <col:3> 'int' lvalue Var 0x560cd42e9228 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x560cd42ea860 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cd42ea840 <col:15> 'int' lvalue Var 0x560cd42e9110 'z' 'int'
|   |-BinaryOperator 0x560cd42eacb0 <line:742:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x560cd42ea898 <col:3> 'int' lvalue Var 0x560cd42e9110 'z' 'int'
|   | `-ConditionalOperator 0x560cd42eac80 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x560cd42eaaa8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x560cd42ea9c8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x560cd42ea8f0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x560cd42ea8d8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x560cd42ea8b8 <col:8> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x560cd42ea9a8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x560cd42ea940 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x560cd42ea928 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x560cd42ea908 <col:27> '_Bool' lvalue Var 0x560cd42e9390 'z$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x560cd42ea990 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x560cd42ea978 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x560cd42ea958 <col:46> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x560cd42eaa88 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x560cd42eaa20 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x560cd42eaa08 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x560cd42ea9e8 <col:65> '_Bool' lvalue Var 0x560cd42e9390 'z$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x560cd42eaa70 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x560cd42eaa58 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x560cd42eaa38 <col:84> '_Bool' lvalue Var 0x560cd42e9570 'z$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x560cd42eac68 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cd42eaac8 <col:101> 'int' lvalue Var 0x560cd42e9110 'z' 'int'
|   |   `-ParenExpr 0x560cd42eac48 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x560cd42eac18 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x560cd42eab88 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560cd42eab40 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560cd42eab28 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560cd42eaae8 <col:106> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560cd42eab70 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560cd42eab58 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560cd42eab08 <col:124> '_Bool' lvalue Var 0x560cd42e9390 'z$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560cd42eabe8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560cd42eaba8 <col:141> 'int' lvalue Var 0x560cd42e9760 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x560cd42eac00 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cd42eabc8 <col:153> 'int' lvalue Var 0x560cd42e9858 'z$w_buff1' 'int'
|   |-BinaryOperator 0x560cd42eb1d0 <line:743:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560cd42eacd0 <col:3> 'int' lvalue Var 0x560cd42e9760 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x560cd42eb1a0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560cd42eb170 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560cd42eb158 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560cd42eacf0 <col:15> '_Bool' lvalue Var 0x560cd42e99c0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560cd42eb188 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cd42ead10 <col:31> 'int' lvalue Var 0x560cd42e9760 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x560cd42eb138 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560cd42eb108 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560cd42eaf20 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560cd42eae40 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560cd42ead68 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560cd42ead50 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560cd42ead30 <col:45> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560cd42eae20 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560cd42eadb8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560cd42eada0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560cd42ead80 <col:64> '_Bool' lvalue Var 0x560cd42e9390 'z$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x560cd42eae08 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560cd42eadf0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560cd42eadd0 <col:83> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560cd42eaf00 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560cd42eae98 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560cd42eae80 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560cd42eae60 <col:102> '_Bool' lvalue Var 0x560cd42e9390 'z$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x560cd42eaee8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560cd42eaed0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560cd42eaeb0 <col:121> '_Bool' lvalue Var 0x560cd42e9570 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560cd42eb0f0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560cd42eaf40 <col:138> 'int' lvalue Var 0x560cd42e9760 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x560cd42eb0d0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560cd42eb0a0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560cd42eb010 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560cd42eafc8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560cd42eafb0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560cd42eaf60 <col:151> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560cd42eaff8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560cd42eafe0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560cd42eaf90 <col:169> '_Bool' lvalue Var 0x560cd42e9390 'z$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x560cd42eb070 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560cd42eb030 <col:186> 'int' lvalue Var 0x560cd42e9760 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x560cd42eb088 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560cd42eb050 <col:198> 'int' lvalue Var 0x560cd42e9760 'z$w_buff0' 'int'
|   |-BinaryOperator 0x560cd42eb6e0 <line:744:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560cd42eb1f0 <col:3> 'int' lvalue Var 0x560cd42e9858 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x560cd42eb6b0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560cd42eb680 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560cd42eb668 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560cd42eb210 <col:15> '_Bool' lvalue Var 0x560cd42e99c0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560cd42eb698 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cd42eb230 <col:31> 'int' lvalue Var 0x560cd42e9858 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x560cd42eb648 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560cd42eb618 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560cd42eb440 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560cd42eb360 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560cd42eb288 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560cd42eb270 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560cd42eb250 <col:45> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560cd42eb340 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560cd42eb2d8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560cd42eb2c0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560cd42eb2a0 <col:64> '_Bool' lvalue Var 0x560cd42e9390 'z$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x560cd42eb328 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560cd42eb310 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560cd42eb2f0 <col:83> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560cd42eb420 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560cd42eb3b8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560cd42eb3a0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560cd42eb380 <col:102> '_Bool' lvalue Var 0x560cd42e9390 'z$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x560cd42eb408 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560cd42eb3f0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560cd42eb3d0 <col:121> '_Bool' lvalue Var 0x560cd42e9570 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560cd42eb600 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560cd42eb460 <col:138> 'int' lvalue Var 0x560cd42e9858 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x560cd42eb5e0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560cd42eb5b0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560cd42eb520 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560cd42eb4d8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560cd42eb4c0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560cd42eb480 <col:151> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560cd42eb508 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560cd42eb4f0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560cd42eb4a0 <col:169> '_Bool' lvalue Var 0x560cd42e9390 'z$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x560cd42eb580 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560cd42eb540 <col:186> 'int' lvalue Var 0x560cd42e9858 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x560cd42eb598 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560cd42eb560 <col:198> 'int' lvalue Var 0x560cd42e9858 'z$w_buff1' 'int'
|   |-BinaryOperator 0x560cd42ebc88 <line:745:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42eb700 <col:3> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560cd42ebc70 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cd42ebc40 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560cd42ebbf8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cd42ebbe0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cd42eb720 <col:20> '_Bool' lvalue Var 0x560cd42e99c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cd42ebc28 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cd42ebc10 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cd42eb740 <col:36> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x560cd42ebbc0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560cd42ebb90 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560cd42eb950 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560cd42eb870 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560cd42eb798 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560cd42eb780 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560cd42eb760 <col:55> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560cd42eb850 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560cd42eb7e8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560cd42eb7d0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560cd42eb7b0 <col:74> '_Bool' lvalue Var 0x560cd42e9390 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x560cd42eb838 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560cd42eb820 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560cd42eb800 <col:93> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560cd42eb930 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560cd42eb8c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560cd42eb8b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560cd42eb890 <col:112> '_Bool' lvalue Var 0x560cd42e9390 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x560cd42eb918 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560cd42eb900 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560cd42eb8e0 <col:131> '_Bool' lvalue Var 0x560cd42e9570 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x560cd42ebb78 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560cd42ebb60 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560cd42eb970 <col:148> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x560cd42ebb40 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560cd42ebb10 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560cd42eba30 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560cd42eb9e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560cd42eb9d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560cd42eb990 <col:166> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560cd42eba18 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560cd42eba00 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560cd42eb9b0 <col:184> '_Bool' lvalue Var 0x560cd42e9390 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x560cd42ebac8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560cd42eba80 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560cd42eba50 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560cd42ebaf8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560cd42ebae0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560cd42ebaa8 <col:212> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560cd42ec260 <line:746:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42ebca8 <col:3> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560cd42ec248 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cd42ec218 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560cd42ec1d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cd42ec1b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cd42ebcc8 <col:20> '_Bool' lvalue Var 0x560cd42e99c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cd42ec200 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cd42ec1e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cd42ebce8 <col:36> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x560cd42ec198 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560cd42ec168 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560cd42ebef8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560cd42ebe18 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560cd42ebd40 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560cd42ebd28 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560cd42ebd08 <col:55> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560cd42ebdf8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560cd42ebd90 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560cd42ebd78 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560cd42ebd58 <col:74> '_Bool' lvalue Var 0x560cd42e9390 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x560cd42ebde0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560cd42ebdc8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560cd42ebda8 <col:93> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560cd42ebed8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560cd42ebe70 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560cd42ebe58 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560cd42ebe38 <col:112> '_Bool' lvalue Var 0x560cd42e9390 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x560cd42ebec0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560cd42ebea8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560cd42ebe88 <col:131> '_Bool' lvalue Var 0x560cd42e9570 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x560cd42ec150 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560cd42ec138 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560cd42ebf18 <col:148> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x560cd42ec118 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560cd42ec0e8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560cd42ebfe8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560cd42ebfa0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560cd42ebf78 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560cd42ebf38 <col:166> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560cd42ebfd0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560cd42ebfb8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560cd42ebf58 <col:184> '_Bool' lvalue Var 0x560cd42e9390 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x560cd42ec0b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560cd42ec038 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560cd42ec008 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560cd42ec0d0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560cd42ec090 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560cd42ec060 <col:219> 'int' 0
|   |-BinaryOperator 0x560cd42ec808 <line:747:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42ec280 <col:3> '_Bool' lvalue Var 0x560cd42e9390 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560cd42ec7f0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cd42ec7c0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560cd42ec778 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cd42ec760 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cd42ec2a0 <col:20> '_Bool' lvalue Var 0x560cd42e99c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cd42ec7a8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cd42ec790 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cd42ec2c0 <col:36> '_Bool' lvalue Var 0x560cd42e9390 'z$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x560cd42ec740 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560cd42ec710 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560cd42ec4d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560cd42ec3f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560cd42ec318 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560cd42ec300 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560cd42ec2e0 <col:55> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560cd42ec3d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560cd42ec368 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560cd42ec350 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560cd42ec330 <col:74> '_Bool' lvalue Var 0x560cd42e9390 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x560cd42ec3b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560cd42ec3a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560cd42ec380 <col:93> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560cd42ec4b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560cd42ec448 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560cd42ec430 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560cd42ec410 <col:112> '_Bool' lvalue Var 0x560cd42e9390 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x560cd42ec498 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560cd42ec480 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560cd42ec460 <col:131> '_Bool' lvalue Var 0x560cd42e9570 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x560cd42ec6f8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560cd42ec6e0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560cd42ec4f0 <col:148> '_Bool' lvalue Var 0x560cd42e9390 'z$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x560cd42ec6c0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560cd42ec690 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560cd42ec5b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560cd42ec568 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560cd42ec550 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560cd42ec510 <col:166> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560cd42ec598 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560cd42ec580 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560cd42ec530 <col:184> '_Bool' lvalue Var 0x560cd42e9390 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x560cd42ec648 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560cd42ec600 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560cd42ec5d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560cd42ec678 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560cd42ec660 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560cd42ec628 <col:212> '_Bool' lvalue Var 0x560cd42e9390 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560cd42ecdd0 <line:748:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42ec828 <col:3> '_Bool' lvalue Var 0x560cd42e9570 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560cd42ecdb8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cd42ecd88 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560cd42ecd40 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cd42ecd28 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cd42ec848 <col:20> '_Bool' lvalue Var 0x560cd42e99c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cd42ecd70 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cd42ecd58 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cd42ec868 <col:36> '_Bool' lvalue Var 0x560cd42e9570 'z$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x560cd42ecd08 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560cd42eccd8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560cd42eca78 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560cd42ec998 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560cd42ec8c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560cd42ec8a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560cd42ec888 <col:55> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560cd42ec978 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560cd42ec910 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560cd42ec8f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560cd42ec8d8 <col:74> '_Bool' lvalue Var 0x560cd42e9390 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x560cd42ec960 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560cd42ec948 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560cd42ec928 <col:93> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560cd42eca58 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560cd42ec9f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560cd42ec9d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560cd42ec9b8 <col:112> '_Bool' lvalue Var 0x560cd42e9390 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x560cd42eca40 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560cd42eca28 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560cd42eca08 <col:131> '_Bool' lvalue Var 0x560cd42e9570 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x560cd42eccc0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560cd42ecca8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560cd42eca98 <col:148> '_Bool' lvalue Var 0x560cd42e9570 'z$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x560cd42ecc88 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560cd42ecc58 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560cd42ecb58 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560cd42ecb10 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560cd42ecaf8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560cd42ecab8 <col:166> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560cd42ecb40 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560cd42ecb28 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560cd42ecad8 <col:184> '_Bool' lvalue Var 0x560cd42e9390 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x560cd42ecc28 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560cd42ecba8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560cd42ecb78 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560cd42ecc40 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560cd42ecc00 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560cd42ecbd0 <col:219> 'int' 0
|   |-BinaryOperator 0x560cd42ece48 <line:749:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560cd42ecdf0 <col:3> 'int' lvalue Var 0x560cd42e88f0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x560cd42ece30 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cd42ece10 <col:25> 'int' lvalue Var 0x560cd42e9110 'z' 'int'
|   |-BinaryOperator 0x560cd42ecf78 <line:750:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x560cd42ece68 <col:3> 'int' lvalue Var 0x560cd42e9110 'z' 'int'
|   | `-ConditionalOperator 0x560cd42ecf48 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x560cd42ecf00 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560cd42ecee8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560cd42ece88 <col:7> '_Bool' lvalue Var 0x560cd42e91a8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x560cd42ecf18 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cd42ecea8 <col:25> 'int' lvalue Var 0x560cd42e9228 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x560cd42ecf30 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x560cd42ecec8 <col:37> 'int' lvalue Var 0x560cd42e9110 'z' 'int'
|   |-BinaryOperator 0x560cd42ed028 <line:751:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42ecfb0 <col:3> '_Bool' lvalue Var 0x560cd42e91a8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x560cd42ed000 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560cd42ecfd0 <col:28> 'int' 0
|   |-CallExpr 0x560cd42ed080 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cd42ed068 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42ed048 <col:3> 'void ()' Function 0x560cd428f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cd42ed0d8 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cd42ed0c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42ed0a0 <col:3> 'void ()' Function 0x560cd428f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x560cd42ed130 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cd42ed118 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42ed0f8 <col:3> 'void ()' Function 0x560cd428f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cd42ed188 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cd42ed170 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42ed150 <col:3> 'void ()' Function 0x560cd428f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cd42ed240 <line:756:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560cd42ed1a8 <col:3> 'int' lvalue Var 0x560cd42e8590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560cd42ed220 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560cd42ed208 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cd42ed1c8 <col:22> 'int' lvalue Var 0x560cd42e8590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560cd42ed1e8 <col:41> 'int' 1
|   |-CallExpr 0x560cd42ed298 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cd42ed280 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42ed260 <col:3> 'void ()' Function 0x560cd428f410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560cd42ed310 <line:758:3, col:36>
|     `-CallExpr 0x560cd42ed2f0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560cd42ed2d8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560cd42ed2b8 <col:10> 'void *(void)' Function 0x560cd428ee68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560cd42ed4a8 prev 0x560cd42e8210 <line:760:1, line:804:1> line:760:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x560cd42ed410 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560cd42f1740 <line:761:1, line:804:1>
|   |-CallExpr 0x560cd42ed588 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cd42ed570 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42ed550 <col:3> 'void ()' Function 0x560cd428f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cd42ed600 <line:763:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560cd42ed5a8 <col:3> 'int' lvalue Var 0x560cd42e9858 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x560cd42ed5e8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cd42ed5c8 <col:15> 'int' lvalue Var 0x560cd42e9760 'z$w_buff0' 'int'
|   |-BinaryOperator 0x560cd42ed660 <line:764:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560cd42ed620 <col:3> 'int' lvalue Var 0x560cd42e9760 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x560cd42ed640 <col:15> 'int' 1
|   |-BinaryOperator 0x560cd42ed6d8 <line:765:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42ed680 <col:3> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560cd42ed6c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cd42ed6a0 <col:20> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560cd42ed770 <line:766:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42ed6f8 <col:3> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x560cd42ed748 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560cd42ed718 <col:27> 'int' 1
|   |-CallExpr 0x560cd42ed8f8 <line:767:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x560cd42ed8e0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x560cd42ed790 <col:3> 'void (int)' Function 0x560cd428f0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x560cd42ed890 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x560cd42ed870 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x560cd42ed850 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x560cd42ed808 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x560cd42ed7f0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x560cd42ed7b0 <col:23> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x560cd42ed838 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x560cd42ed820 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x560cd42ed7d0 <col:41> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560cd42ed978 <line:768:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42ed920 <col:3> '_Bool' lvalue Var 0x560cd42e9480 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x560cd42ed960 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cd42ed940 <col:20> '_Bool' lvalue Var 0x560cd42e92a0 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x560cd42ed9f0 <line:769:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42ed998 <col:3> '_Bool' lvalue Var 0x560cd42e94f8 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560cd42ed9d8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cd42ed9b8 <col:20> '_Bool' lvalue Var 0x560cd42e9318 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560cd42eda68 <line:770:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42eda10 <col:3> '_Bool' lvalue Var 0x560cd42e9570 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560cd42eda50 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cd42eda30 <col:20> '_Bool' lvalue Var 0x560cd42e9390 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560cd42edae0 <line:771:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42eda88 <col:3> '_Bool' lvalue Var 0x560cd42e95e8 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560cd42edac8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cd42edaa8 <col:20> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560cd42edb78 <line:772:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42edb00 <col:3> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x560cd42edb50 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560cd42edb20 <col:27> 'int' 1
|   |-CallExpr 0x560cd42edbd0 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cd42edbb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42edb98 <col:3> 'void ()' Function 0x560cd428f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cd42edc28 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cd42edc10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42edbf0 <col:3> 'void ()' Function 0x560cd428f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cd42edcd8 <line:775:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42edc48 <col:3> '_Bool' lvalue Var 0x560cd42e9948 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x560cd42edcc0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x560cd42edca0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x560cd42edc88 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x560cd42edc68 <col:19> 'void *(void)' Function 0x560cd428ee68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x560cd42edd88 <line:776:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42edcf8 <col:3> '_Bool' lvalue Var 0x560cd42e99c0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x560cd42edd70 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x560cd42edd50 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x560cd42edd38 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x560cd42edd18 <col:19> 'void *(void)' Function 0x560cd428ee68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x560cd42ede00 <line:777:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42edda8 <col:3> '_Bool' lvalue Var 0x560cd42e91a8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x560cd42edde8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cd42eddc8 <col:21> '_Bool' lvalue Var 0x560cd42e99c0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x560cd42ede78 <line:778:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560cd42ede20 <col:3> 'int' lvalue Var 0x560cd42e9228 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x560cd42ede60 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cd42ede40 <col:15> 'int' lvalue Var 0x560cd42e9110 'z' 'int'
|   |-BinaryOperator 0x560cd42ee2c8 <line:779:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x560cd42ede98 <col:3> 'int' lvalue Var 0x560cd42e9110 'z' 'int'
|   | `-ConditionalOperator 0x560cd42ee298 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x560cd42ee0c0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x560cd42edfe0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x560cd42edef0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x560cd42eded8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x560cd42edeb8 <col:8> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x560cd42edfc0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x560cd42edf40 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x560cd42edf28 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x560cd42edf08 <col:27> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x560cd42edf90 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x560cd42edf78 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x560cd42edf58 <col:46> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x560cd42ee0a0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x560cd42ee038 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x560cd42ee020 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x560cd42ee000 <col:65> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x560cd42ee088 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x560cd42ee070 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x560cd42ee050 <col:84> '_Bool' lvalue Var 0x560cd42e95e8 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x560cd42ee280 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cd42ee0e0 <col:101> 'int' lvalue Var 0x560cd42e9110 'z' 'int'
|   |   `-ParenExpr 0x560cd42ee260 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x560cd42ee230 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x560cd42ee1a0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560cd42ee158 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560cd42ee140 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560cd42ee100 <col:106> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560cd42ee188 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560cd42ee170 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560cd42ee120 <col:124> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560cd42ee200 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560cd42ee1c0 <col:141> 'int' lvalue Var 0x560cd42e9760 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x560cd42ee218 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cd42ee1e0 <col:153> 'int' lvalue Var 0x560cd42e9858 'z$w_buff1' 'int'
|   |-BinaryOperator 0x560cd42ee7d8 <line:780:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560cd42ee2e8 <col:3> 'int' lvalue Var 0x560cd42e9760 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x560cd42ee7a8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560cd42ee778 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560cd42ee760 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560cd42ee308 <col:15> '_Bool' lvalue Var 0x560cd42e99c0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560cd42ee790 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cd42ee328 <col:31> 'int' lvalue Var 0x560cd42e9760 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x560cd42ee740 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560cd42ee710 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560cd42ee538 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560cd42ee458 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560cd42ee380 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560cd42ee368 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560cd42ee348 <col:45> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560cd42ee438 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560cd42ee3d0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560cd42ee3b8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560cd42ee398 <col:64> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x560cd42ee420 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560cd42ee408 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560cd42ee3e8 <col:83> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560cd42ee518 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560cd42ee4b0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560cd42ee498 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560cd42ee478 <col:102> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x560cd42ee500 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560cd42ee4e8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560cd42ee4c8 <col:121> '_Bool' lvalue Var 0x560cd42e95e8 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560cd42ee6f8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560cd42ee558 <col:138> 'int' lvalue Var 0x560cd42e9760 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x560cd42ee6d8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560cd42ee6a8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560cd42ee618 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560cd42ee5d0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560cd42ee5b8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560cd42ee578 <col:151> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560cd42ee600 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560cd42ee5e8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560cd42ee598 <col:169> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x560cd42ee678 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560cd42ee638 <col:186> 'int' lvalue Var 0x560cd42e9760 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x560cd42ee690 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560cd42ee658 <col:198> 'int' lvalue Var 0x560cd42e9760 'z$w_buff0' 'int'
|   |-BinaryOperator 0x560cd42eece8 <line:781:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560cd42ee7f8 <col:3> 'int' lvalue Var 0x560cd42e9858 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x560cd42eecb8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560cd42eec88 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560cd42eec70 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560cd42ee818 <col:15> '_Bool' lvalue Var 0x560cd42e99c0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560cd42eeca0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cd42ee838 <col:31> 'int' lvalue Var 0x560cd42e9858 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x560cd42eec50 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560cd42eec20 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560cd42eea48 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560cd42ee968 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560cd42ee890 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560cd42ee878 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560cd42ee858 <col:45> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560cd42ee948 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560cd42ee8e0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560cd42ee8c8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560cd42ee8a8 <col:64> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x560cd42ee930 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560cd42ee918 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560cd42ee8f8 <col:83> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560cd42eea28 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560cd42ee9c0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560cd42ee9a8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560cd42ee988 <col:102> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x560cd42eea10 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560cd42ee9f8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560cd42ee9d8 <col:121> '_Bool' lvalue Var 0x560cd42e95e8 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560cd42eec08 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560cd42eea68 <col:138> 'int' lvalue Var 0x560cd42e9858 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x560cd42eebe8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560cd42eebb8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560cd42eeb28 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560cd42eeae0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560cd42eeac8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560cd42eea88 <col:151> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560cd42eeb10 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560cd42eeaf8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560cd42eeaa8 <col:169> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x560cd42eeb88 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560cd42eeb48 <col:186> 'int' lvalue Var 0x560cd42e9858 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x560cd42eeba0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560cd42eeb68 <col:198> 'int' lvalue Var 0x560cd42e9858 'z$w_buff1' 'int'
|   |-BinaryOperator 0x560cd42ef2a8 <line:782:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42eed08 <col:3> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560cd42ef290 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cd42ef260 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560cd42ef218 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cd42ef200 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cd42eed28 <col:20> '_Bool' lvalue Var 0x560cd42e99c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cd42ef248 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cd42ef230 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cd42eed48 <col:36> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x560cd42ef1e0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560cd42ef1b0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560cd42eef58 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560cd42eee78 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560cd42eeda0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560cd42eed88 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560cd42eed68 <col:55> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560cd42eee58 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560cd42eedf0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560cd42eedd8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560cd42eedb8 <col:74> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x560cd42eee40 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560cd42eee28 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560cd42eee08 <col:93> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560cd42eef38 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560cd42eeed0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560cd42eeeb8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560cd42eee98 <col:112> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x560cd42eef20 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560cd42eef08 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560cd42eeee8 <col:131> '_Bool' lvalue Var 0x560cd42e95e8 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x560cd42ef198 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560cd42ef180 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560cd42eef78 <col:148> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x560cd42ef160 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560cd42ef130 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560cd42ef050 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560cd42ef008 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560cd42eeff0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560cd42eef98 <col:166> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560cd42ef038 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560cd42ef020 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560cd42eefd0 <col:184> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x560cd42ef0e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560cd42ef0a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560cd42ef070 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560cd42ef118 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560cd42ef100 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560cd42ef0c8 <col:212> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560cd42ef870 <line:783:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42ef2c8 <col:3> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560cd42ef858 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cd42ef828 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560cd42ef7e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cd42ef7c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cd42ef2e8 <col:20> '_Bool' lvalue Var 0x560cd42e99c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cd42ef810 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cd42ef7f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cd42ef308 <col:36> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x560cd42ef7a8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560cd42ef778 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560cd42ef518 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560cd42ef438 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560cd42ef360 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560cd42ef348 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560cd42ef328 <col:55> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560cd42ef418 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560cd42ef3b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560cd42ef398 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560cd42ef378 <col:74> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x560cd42ef400 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560cd42ef3e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560cd42ef3c8 <col:93> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560cd42ef4f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560cd42ef490 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560cd42ef478 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560cd42ef458 <col:112> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x560cd42ef4e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560cd42ef4c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560cd42ef4a8 <col:131> '_Bool' lvalue Var 0x560cd42e95e8 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x560cd42ef760 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560cd42ef748 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560cd42ef538 <col:148> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x560cd42ef728 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560cd42ef6f8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560cd42ef5f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560cd42ef5b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560cd42ef598 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560cd42ef558 <col:166> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560cd42ef5e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560cd42ef5c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560cd42ef578 <col:184> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x560cd42ef6c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560cd42ef648 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560cd42ef618 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560cd42ef6e0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560cd42ef6a0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560cd42ef670 <col:219> 'int' 0
|   |-BinaryOperator 0x560cd42efe18 <line:784:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42ef890 <col:3> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560cd42efe00 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cd42efdd0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560cd42efd88 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cd42efd70 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cd42ef8b0 <col:20> '_Bool' lvalue Var 0x560cd42e99c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cd42efdb8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cd42efda0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cd42ef8d0 <col:36> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x560cd42efd50 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560cd42efd20 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560cd42efae0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560cd42efa00 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560cd42ef928 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560cd42ef910 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560cd42ef8f0 <col:55> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560cd42ef9e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560cd42ef978 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560cd42ef960 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560cd42ef940 <col:74> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x560cd42ef9c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560cd42ef9b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560cd42ef990 <col:93> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560cd42efac0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560cd42efa58 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560cd42efa40 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560cd42efa20 <col:112> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x560cd42efaa8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560cd42efa90 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560cd42efa70 <col:131> '_Bool' lvalue Var 0x560cd42e95e8 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x560cd42efd08 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560cd42efcf0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560cd42efb00 <col:148> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x560cd42efcd0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560cd42efca0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560cd42efbc0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560cd42efb78 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560cd42efb60 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560cd42efb20 <col:166> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560cd42efba8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560cd42efb90 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560cd42efb40 <col:184> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x560cd42efc58 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560cd42efc10 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560cd42efbe0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560cd42efc88 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560cd42efc70 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560cd42efc38 <col:212> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560cd42f03f8 <line:785:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42efe38 <col:3> '_Bool' lvalue Var 0x560cd42e95e8 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560cd42f03e0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cd42f03b0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560cd42f0368 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cd42f0350 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cd42efe58 <col:20> '_Bool' lvalue Var 0x560cd42e99c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560cd42f0398 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560cd42f0380 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560cd42efe78 <col:36> '_Bool' lvalue Var 0x560cd42e95e8 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x560cd42f0330 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560cd42f0300 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560cd42f00a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560cd42effa8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560cd42efed0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560cd42efeb8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560cd42efe98 <col:55> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560cd42eff88 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560cd42eff20 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560cd42eff08 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560cd42efee8 <col:74> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x560cd42eff70 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560cd42eff58 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560cd42eff38 <col:93> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560cd42f0080 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560cd42f0018 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560cd42f0000 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560cd42effe0 <col:112> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x560cd42f0068 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560cd42f0050 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560cd42f0030 <col:131> '_Bool' lvalue Var 0x560cd42e95e8 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x560cd42f02e8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560cd42f02d0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560cd42f00c0 <col:148> '_Bool' lvalue Var 0x560cd42e95e8 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x560cd42f02b0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560cd42f0280 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560cd42f0180 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560cd42f0138 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560cd42f0120 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560cd42f00e0 <col:166> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560cd42f0168 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560cd42f0150 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560cd42f0100 <col:184> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x560cd42f0250 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560cd42f01d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560cd42f01a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560cd42f0268 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560cd42f0228 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560cd42f01f8 <col:219> 'int' 0
|   |-BinaryOperator 0x560cd42f0470 <line:786:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560cd42f0418 <col:3> 'int' lvalue Var 0x560cd42e8a10 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x560cd42f0458 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cd42f0438 <col:25> 'int' lvalue Var 0x560cd42e9110 'z' 'int'
|   |-BinaryOperator 0x560cd42f05a0 <line:787:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x560cd42f0490 <col:3> 'int' lvalue Var 0x560cd42e9110 'z' 'int'
|   | `-ConditionalOperator 0x560cd42f0570 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x560cd42f0528 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560cd42f0510 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560cd42f04b0 <col:7> '_Bool' lvalue Var 0x560cd42e91a8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x560cd42f0540 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cd42f04d0 <col:25> 'int' lvalue Var 0x560cd42e9228 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x560cd42f0558 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x560cd42f04f0 <col:37> 'int' lvalue Var 0x560cd42e9110 'z' 'int'
|   |-BinaryOperator 0x560cd42f0638 <line:788:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42f05c0 <col:3> '_Bool' lvalue Var 0x560cd42e91a8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x560cd42f0610 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560cd42f05e0 <col:28> 'int' 0
|   |-CallExpr 0x560cd42f0690 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cd42f0678 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42f0658 <col:3> 'void ()' Function 0x560cd428f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cd42f06e8 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cd42f06d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42f06b0 <col:3> 'void ()' Function 0x560cd428f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cd42f0760 <line:791:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560cd42f0708 <col:3> 'int' lvalue Var 0x560cd42e8b30 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x560cd42f0748 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560cd42f0728 <col:25> 'int' lvalue Var 0x560cd42e8c50 'a' 'int'
|   |-CallExpr 0x560cd42f07b8 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cd42f07a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42f0780 <col:3> 'void ()' Function 0x560cd428f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cd42f0810 <line:793:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cd42f07f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42f07d8 <col:3> 'void ()' Function 0x560cd428f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cd42f0af8 <line:794:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560cd42f0830 <col:3> 'int' lvalue Var 0x560cd42e9110 'z' 'int'
|   | `-ConditionalOperator 0x560cd42f0ac8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560cd42f08f0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560cd42f08a8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560cd42f0890 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560cd42f0850 <col:7> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560cd42f08d8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560cd42f08c0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560cd42f0870 <col:25> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x560cd42f0ab0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cd42f0910 <col:42> 'int' lvalue Var 0x560cd42e9760 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x560cd42f0a90 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560cd42f0a60 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560cd42f09d0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560cd42f0988 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560cd42f0970 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560cd42f0930 <col:55> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560cd42f09b8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560cd42f09a0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560cd42f0950 <col:73> '_Bool' lvalue Var 0x560cd42e95e8 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560cd42f0a30 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560cd42f09f0 <col:90> 'int' lvalue Var 0x560cd42e9858 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560cd42f0a48 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cd42f0a10 <col:102> 'int' lvalue Var 0x560cd42e9110 'z' 'int'
|   |-BinaryOperator 0x560cd42f0d00 <line:795:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42f0b18 <col:3> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560cd42f0ce8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cd42f0cb8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560cd42f0bd8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560cd42f0b90 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560cd42f0b78 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560cd42f0b38 <col:20> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560cd42f0bc0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560cd42f0ba8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560cd42f0b58 <col:38> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560cd42f0c70 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560cd42f0c28 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560cd42f0bf8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560cd42f0ca0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560cd42f0c88 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cd42f0c50 <col:66> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560cd42f1008 <line:796:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42f0d20 <col:3> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560cd42f0ff0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cd42f0fa0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560cd42f0ec0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560cd42f0de0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560cd42f0d98 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560cd42f0d80 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560cd42f0d40 <col:20> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560cd42f0dc8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560cd42f0db0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560cd42f0d60 <col:38> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x560cd42f0ea0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560cd42f0e58 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560cd42f0e40 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560cd42f0e00 <col:56> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560cd42f0e88 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560cd42f0e70 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560cd42f0e20 <col:74> '_Bool' lvalue Var 0x560cd42e95e8 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560cd42f0f58 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560cd42f0f10 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560cd42f0ee0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560cd42f0f88 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560cd42f0f70 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cd42f0f38 <col:102> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560cd42f1210 <line:797:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42f1028 <col:3> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560cd42f11f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cd42f11c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560cd42f10e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560cd42f10a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560cd42f1088 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560cd42f1048 <col:20> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560cd42f10d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560cd42f10b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560cd42f1068 <col:38> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560cd42f1180 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560cd42f1138 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560cd42f1108 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560cd42f11b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560cd42f1198 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cd42f1160 <col:66> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560cd42f14f8 <line:798:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560cd42f1230 <col:3> '_Bool' lvalue Var 0x560cd42e95e8 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560cd42f14e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560cd42f14b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560cd42f13d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560cd42f12f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560cd42f12a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560cd42f1290 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560cd42f1250 <col:20> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560cd42f12d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560cd42f12c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560cd42f1270 <col:38> '_Bool' lvalue Var 0x560cd42e9408 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x560cd42f13b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560cd42f1368 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560cd42f1350 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560cd42f1310 <col:56> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560cd42f1398 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560cd42f1380 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560cd42f1330 <col:74> '_Bool' lvalue Var 0x560cd42e95e8 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560cd42f1468 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560cd42f1420 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560cd42f13f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560cd42f1498 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560cd42f1480 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560cd42f1448 <col:102> '_Bool' lvalue Var 0x560cd42e95e8 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x560cd42f1550 <line:799:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cd42f1538 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42f1518 <col:3> 'void ()' Function 0x560cd428f410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560cd42f15a8 <line:800:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560cd42f1590 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42f1570 <col:3> 'void ()' Function 0x560cd428f350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560cd42f1660 <line:801:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560cd42f15c8 <col:3> 'int' lvalue Var 0x560cd42e8590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560cd42f1640 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560cd42f1628 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560cd42f15e8 <col:22> 'int' lvalue Var 0x560cd42e8590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560cd42f1608 <col:41> 'int' 1
|   |-CallExpr 0x560cd42f16b8 <line:802:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560cd42f16a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560cd42f1680 <col:3> 'void ()' Function 0x560cd428f410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560cd42f1730 <line:803:3, col:36>
|     `-CallExpr 0x560cd42f1710 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560cd42f16f8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560cd42f16d8 <col:10> 'void *(void)' Function 0x560cd428ee68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560cd42f18c0 prev 0x560cd42e82d8 <line:805:1, line:807:1> line:805:6 fence 'void ()'
| `-CompoundStmt 0x560cd42f1960 <line:806:1, line:807:1>
|-FunctionDecl 0x560cd42f1990 prev 0x560cd42e8398 <line:808:1, line:810:1> line:808:6 isync 'void ()'
| `-CompoundStmt 0x560cd42f1a30 <line:809:1, line:810:1>
|-FunctionDecl 0x560cd42f1a60 prev 0x560cd42e8458 <line:811:1, line:813:1> line:811:6 lwfence 'void ()'
| `-CompoundStmt 0x560cd42f1b00 <line:812:1, line:813:1>
`-FunctionDecl 0x560cd42f1b68 <line:814:1, line:838:1> line:814:5 main 'int ()'
  `-CompoundStmt 0x560cd42f38f8 <line:815:1, line:838:1>
    |-DeclStmt 0x560cd42f1c80 <line:816:3, col:17>
    | `-VarDecl 0x560cd42f1c18 <col:3, col:13> col:13 used t408 'pthread_t':'unsigned long'
    |-CallExpr 0x560cd42f1e88 <line:817:3, col:53> 'int'
    | |-ImplicitCastExpr 0x560cd42f1e70 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560cd42f1c98 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560cd42cf8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560cd42f1cd8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560cd42f1cb8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560cd42f1c18 't408' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560cd42f1ec8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560cd42f1d50 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x560cd42f1d28 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560cd42f1cf0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x560cd42f1ee0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560cd42f1d70 <col:38> 'void *(void *)' Function 0x560cd42e9ad8 'P0' 'void *(void *)'
    | `-ParenExpr 0x560cd42f1df0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x560cd42f1dc8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560cd42f1d90 <col:51> 'int' 0
    |-DeclStmt 0x560cd42f1f70 <line:818:3, col:17>
    | `-VarDecl 0x560cd42f1f08 <col:3, col:13> col:13 used t409 'pthread_t':'unsigned long'
    |-CallExpr 0x560cd42f2138 <line:819:3, col:53> 'int'
    | |-ImplicitCastExpr 0x560cd42f2120 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560cd42f1f88 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560cd42cf8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560cd42f1fc8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560cd42f1fa8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560cd42f1f08 't409' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560cd42f2178 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560cd42f2060 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x560cd42f2038 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560cd42f2000 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x560cd42f2190 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560cd42f2080 <col:38> 'void *(void *)' Function 0x560cd42ea438 'P1' 'void *(void *)'
    | `-ParenExpr 0x560cd42f2100 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x560cd42f20d8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560cd42f20a0 <col:51> 'int' 0
    |-DeclStmt 0x560cd42f2220 <line:820:3, col:17>
    | `-VarDecl 0x560cd42f21b8 <col:3, col:13> col:13 used t410 'pthread_t':'unsigned long'
    |-CallExpr 0x560cd42f23c8 <line:821:3, col:53> 'int'
    | |-ImplicitCastExpr 0x560cd42f23b0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560cd42f2238 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560cd42cf8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560cd42f2278 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560cd42f2258 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560cd42f21b8 't410' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560cd42f2408 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560cd42f22f0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x560cd42f22c8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560cd42f2290 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x560cd42f2420 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560cd42f2310 <col:38> 'void *(void *)' Function 0x560cd42ed4a8 'P2' 'void *(void *)'
    | `-ParenExpr 0x560cd42f2390 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x560cd42f2368 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560cd42f2330 <col:51> 'int' 0
    |-CallExpr 0x560cd42f2470 <line:822:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560cd42f2458 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560cd42f2438 <col:3> 'void ()' Function 0x560cd428f350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560cd42f2540 <line:823:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x560cd42f2490 <col:3> '_Bool' lvalue Var 0x560cd42e8ce8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x560cd42f2528 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x560cd42f2508 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x560cd42f24f0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x560cd42f24b0 <col:21> 'int' lvalue Var 0x560cd42e8590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x560cd42f24d0 <col:41> 'int' 3
    |-CallExpr 0x560cd42f2598 <line:824:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560cd42f2580 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560cd42f2560 <col:3> 'void ()' Function 0x560cd428f410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560cd42f2610 <line:825:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560cd42f25f8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560cd42f25b8 <col:3> 'void (int)' Function 0x560cd428eca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x560cd42f2650 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560cd42f2638 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560cd42f25d8 <col:21> '_Bool' lvalue Var 0x560cd42e8ce8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x560cd42f26a0 <line:826:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560cd42f2688 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560cd42f2668 <col:3> 'void ()' Function 0x560cd428f350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560cd42f2988 <line:827:3, col:103> 'int' '='
    | |-DeclRefExpr 0x560cd42f26c0 <col:3> 'int' lvalue Var 0x560cd42e9110 'z' 'int'
    | `-ConditionalOperator 0x560cd42f2958 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x560cd42f2780 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x560cd42f2738 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x560cd42f2720 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x560cd42f26e0 <col:7> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x560cd42f2768 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x560cd42f2750 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x560cd42f2700 <col:25> '_Bool' lvalue Var 0x560cd42e92a0 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x560cd42f2940 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560cd42f27a0 <col:42> 'int' lvalue Var 0x560cd42e9760 'z$w_buff0' 'int'
    |   `-ParenExpr 0x560cd42f2920 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x560cd42f28f0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x560cd42f2860 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x560cd42f2818 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x560cd42f2800 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x560cd42f27c0 <col:55> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x560cd42f2848 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x560cd42f2830 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x560cd42f27e0 <col:73> '_Bool' lvalue Var 0x560cd42e9480 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560cd42f28c0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560cd42f2880 <col:90> 'int' lvalue Var 0x560cd42e9858 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x560cd42f28d8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x560cd42f28a0 <col:102> 'int' lvalue Var 0x560cd42e9110 'z' 'int'
    |-BinaryOperator 0x560cd42f2b90 <line:828:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560cd42f29a8 <col:3> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x560cd42f2b78 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560cd42f2b48 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560cd42f2a68 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560cd42f2a20 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560cd42f2a08 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560cd42f29c8 <col:20> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560cd42f2a50 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560cd42f2a38 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560cd42f29e8 <col:38> '_Bool' lvalue Var 0x560cd42e92a0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560cd42f2b00 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560cd42f2ab8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560cd42f2a88 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560cd42f2b30 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560cd42f2b18 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560cd42f2ae0 <col:66> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x560cd42f2e78 <line:829:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560cd42f2bb0 <col:3> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x560cd42f2e60 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560cd42f2e30 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560cd42f2d50 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560cd42f2c70 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560cd42f2c28 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560cd42f2c10 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560cd42f2bd0 <col:20> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560cd42f2c58 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560cd42f2c40 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560cd42f2bf0 <col:38> '_Bool' lvalue Var 0x560cd42e92a0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560cd42f2d30 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560cd42f2ce8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560cd42f2cd0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560cd42f2c90 <col:56> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560cd42f2d18 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560cd42f2d00 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560cd42f2cb0 <col:74> '_Bool' lvalue Var 0x560cd42e9480 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560cd42f2de8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560cd42f2da0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560cd42f2d70 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560cd42f2e18 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560cd42f2e00 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560cd42f2dc8 <col:102> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x560cd42f30a0 <line:830:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560cd42f2e98 <col:3> '_Bool' lvalue Var 0x560cd42e92a0 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560cd42f3088 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560cd42f3058 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560cd42f2f58 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560cd42f2f10 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560cd42f2ef8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560cd42f2eb8 <col:20> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560cd42f2f40 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560cd42f2f28 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560cd42f2ed8 <col:38> '_Bool' lvalue Var 0x560cd42e92a0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560cd42f3010 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560cd42f2fa8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560cd42f2f78 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560cd42f3040 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560cd42f3028 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560cd42f2fd0 <col:66> '_Bool' lvalue Var 0x560cd42e92a0 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x560cd42f3388 <line:831:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560cd42f30c0 <col:3> '_Bool' lvalue Var 0x560cd42e9480 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560cd42f3370 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560cd42f3340 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560cd42f3260 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560cd42f3180 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560cd42f3138 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560cd42f3120 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560cd42f30e0 <col:20> '_Bool' lvalue Var 0x560cd42e97d8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560cd42f3168 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560cd42f3150 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560cd42f3100 <col:38> '_Bool' lvalue Var 0x560cd42e92a0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560cd42f3240 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560cd42f31f8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560cd42f31e0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560cd42f31a0 <col:56> '_Bool' lvalue Var 0x560cd42e98d0 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560cd42f3228 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560cd42f3210 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560cd42f31c0 <col:74> '_Bool' lvalue Var 0x560cd42e9480 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560cd42f32f8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560cd42f32b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560cd42f3280 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560cd42f3328 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560cd42f3310 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560cd42f32d8 <col:102> '_Bool' lvalue Var 0x560cd42e9480 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x560cd42f33e0 <line:832:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560cd42f33c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560cd42f33a8 <col:3> 'void ()' Function 0x560cd428f410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560cd42f3438 <line:833:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560cd42f3420 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560cd42f3400 <col:3> 'void ()' Function 0x560cd428f350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560cd42f37a0 <line:834:3, col:159> '_Bool' '='
    | |-DeclRefExpr 0x560cd42f3458 <col:3> '_Bool' lvalue Var 0x560cd42e8d60 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x560cd42f3788 <col:21, col:159> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x560cd42f3770 <col:21, col:159> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x560cd42f3750 <col:22, col:159> 'int'
    |       `-BinaryOperator 0x560cd42f3730 <col:23, col:158> 'int' '&&'
    |         |-BinaryOperator 0x560cd42f3698 <col:23, col:130> 'int' '&&'
    |         | |-BinaryOperator 0x560cd42f3600 <col:23, col:102> 'int' '&&'
    |         | | |-BinaryOperator 0x560cd42f3568 <col:23, col:74> 'int' '&&'
    |         | | | |-BinaryOperator 0x560cd42f34d0 <col:23, col:46> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x560cd42f34b8 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x560cd42f3478 <col:23> 'int' lvalue Var 0x560cd42e86b0 '__unbuffered_p0_EAX' 'int'
    |         | | | | `-IntegerLiteral 0x560cd42f3498 <col:46> 'int' 1
    |         | | | `-BinaryOperator 0x560cd42f3548 <col:51, col:74> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x560cd42f3530 <col:51> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x560cd42f34f0 <col:51> 'int' lvalue Var 0x560cd42e87d0 '__unbuffered_p0_EBX' 'int'
    |         | | |   `-IntegerLiteral 0x560cd42f3510 <col:74> 'int' 0
    |         | | `-BinaryOperator 0x560cd42f35e0 <col:79, col:102> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x560cd42f35c8 <col:79> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x560cd42f3588 <col:79> 'int' lvalue Var 0x560cd42e88f0 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x560cd42f35a8 <col:102> 'int' 0
    |         | `-BinaryOperator 0x560cd42f3678 <col:107, col:130> 'int' '=='
    |         |   |-ImplicitCastExpr 0x560cd42f3660 <col:107> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x560cd42f3620 <col:107> 'int' lvalue Var 0x560cd42e8a10 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x560cd42f3640 <col:130> 'int' 1
    |         `-BinaryOperator 0x560cd42f3710 <col:135, col:158> 'int' '=='
    |           |-ImplicitCastExpr 0x560cd42f36f8 <col:135> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x560cd42f36b8 <col:135> 'int' lvalue Var 0x560cd42e8b30 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x560cd42f36d8 <col:158> 'int' 0
    |-CallExpr 0x560cd42f37f8 <line:835:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560cd42f37e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560cd42f37c0 <col:3> 'void ()' Function 0x560cd428f410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560cd42f3870 <line:836:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560cd42f3858 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560cd42f3818 <col:3> 'void (int)' Function 0x560cd428f0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x560cd42f38b0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560cd42f3898 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560cd42f3838 <col:21> '_Bool' lvalue Var 0x560cd42e8d60 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x560cd42f38e8 <line:837:3, col:10>
      `-IntegerLiteral 0x560cd42f38c8 <col:10> 'int' 0
