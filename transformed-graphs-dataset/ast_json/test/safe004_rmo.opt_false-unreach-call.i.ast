TranslationUnitDecl 0x55f115760f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55f115761848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55f115761520 '__int128'
|-TypedefDecl 0x55f1157618b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55f115761540 'unsigned __int128'
|-TypedefDecl 0x55f115761bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55f115761990 'struct __NSConstantString_tag'
|   `-Record 0x55f115761910 '__NSConstantString_tag'
|-TypedefDecl 0x55f115761c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55f115761c20 'char *'
|   `-BuiltinType 0x55f115761020 'char'
|-TypedefDecl 0x55f1157a0b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55f115761f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55f115761d40 'struct __va_list_tag'
|     `-Record 0x55f115761cc0 '__va_list_tag'
|-FunctionDecl 0x55f1157a0ca0 <pthread-wmm/safe004_rmo.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55f1157a0bd0 <col:31> col:34 'int'
|-FunctionDecl 0x55f1157a0e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55f1157a0f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55f1157a10d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55f1157a1048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55f1157a1308 <col:40, col:99>
|   |-IfStmt 0x55f1157a12d8 <col:42, col:88>
|   | |-UnaryOperator 0x55f1157a11b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55f1157a11a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55f1157a1180 <col:47> 'int' lvalue ParmVar 0x55f1157a1048 'expression' 'int'
|   | `-CompoundStmt 0x55f1157a12c0 <col:59, col:88>
|   |   `-LabelStmt 0x55f1157a12a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55f1157a1238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55f1157a1220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55f1157a11d0 <col:68> 'void () __attribute__((noreturn))' Function 0x55f1157a0f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55f1157a12f0 <col:89>
|   `-ReturnStmt 0x55f1157a12f8 <col:91>
|-FunctionDecl 0x55f1157a1350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55f1157a1410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55f1157a1790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f1157a14c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55f1157a1548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55f1157a15c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55f1157a1648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55f1157a1850 <line:10:22>
|-FunctionDecl 0x55f1157c78a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f1157a18c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55f1157a1940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55f1157a19c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55f1157a1a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55f1157c7960 <line:13:22>
|-FunctionDecl 0x55f1157c7c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f1157c79d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55f1157c7a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55f1157c7ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55f1157c7cc8 <line:15:22>
|-TypedefDecl 0x55f1157c7d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55f1157610e0 'unsigned char'
|-TypedefDecl 0x55f1157c7da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55f115761100 'unsigned short'
|-TypedefDecl 0x55f1157c7e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55f115761120 'unsigned int'
|-TypedefDecl 0x55f1157c7e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55f115761140 'unsigned long'
|-TypedefDecl 0x55f1157c7ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55f115761040 'signed char'
|-TypedefDecl 0x55f1157c7f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55f1157610e0 'unsigned char'
|-TypedefDecl 0x55f1157c7fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55f115761060 'short'
|-TypedefDecl 0x55f1157c8048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55f115761100 'unsigned short'
|-TypedefDecl 0x55f1157c80b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55f115761080 'int'
|-TypedefDecl 0x55f1157c8128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55f115761120 'unsigned int'
|-TypedefDecl 0x55f1157c8198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55f1157610a0 'long'
|-TypedefDecl 0x55f1157c8208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55f115761140 'unsigned long'
|-TypedefDecl 0x55f1157c8278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55f1157610a0 'long'
|-TypedefDecl 0x55f1157c82e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55f115761140 'unsigned long'
|-TypedefDecl 0x55f1157c8358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55f115761140 'unsigned long'
|-TypedefDecl 0x55f1157c83c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55f115761120 'unsigned int'
|-TypedefDecl 0x55f1157c8438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55f115761120 'unsigned int'
|-TypedefDecl 0x55f1157c84a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55f115761140 'unsigned long'
|-TypedefDecl 0x55f1157c8518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55f115761140 'unsigned long'
|-TypedefDecl 0x55f1157c8588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55f115761120 'unsigned int'
|-TypedefDecl 0x55f1157c85f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55f115761140 'unsigned long'
|-TypedefDecl 0x55f1157c8668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55f1157610a0 'long'
|-TypedefDecl 0x55f1157c86d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55f1157610a0 'long'
|-TypedefDecl 0x55f1157c8748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55f115761080 'int'
|-RecordDecl 0x55f1157c87a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55f1157c8918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55f1157c89d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55f1157c8970 'struct __fsid_t' sugar
|   `-RecordType 0x55f1157c8820 '__fsid_t'
|     `-Record 0x55f1157c87a0 ''
|-TypedefDecl 0x55f1157c8a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55f1157610a0 'long'
|-TypedefDecl 0x55f1157c8ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55f115761140 'unsigned long'
|-TypedefDecl 0x55f1157c8b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55f115761140 'unsigned long'
|-TypedefDecl 0x55f1157c8ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55f115761120 'unsigned int'
|-TypedefDecl 0x55f1157c8c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55f1157610a0 'long'
|-TypedefDecl 0x55f1157c8c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55f115761120 'unsigned int'
|-TypedefDecl 0x55f1157c8cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55f1157610a0 'long'
|-TypedefDecl 0x55f1157c8d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55f115761080 'int'
|-TypedefDecl 0x55f1157c8dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55f115761080 'int'
|-TypedefDecl 0x55f1157c8e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55f115761080 'int'
|-TypedefDecl 0x55f1157c8eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55f1157617a0 'void *'
|   `-BuiltinType 0x55f115760fe0 'void'
|-TypedefDecl 0x55f1157c8f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55f1157610a0 'long'
|-TypedefDecl 0x55f1157c8f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55f1157610a0 'long'
|-TypedefDecl 0x55f1157c9008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55f1157610a0 'long'
|-TypedefDecl 0x55f1157c9078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55f115761140 'unsigned long'
|-TypedefDecl 0x55f1157c90e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55f115761140 'unsigned long'
|-TypedefDecl 0x55f1157c9158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55f115761140 'unsigned long'
|-TypedefDecl 0x55f1157c91c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55f115761140 'unsigned long'
|-TypedefDecl 0x55f1157c9238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55f1157610a0 'long'
|-TypedefDecl 0x55f1157c92a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55f1157610a0 'long'
|-TypedefDecl 0x55f1157c9318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55f1157610a0 'long'
|-TypedefDecl 0x55f1157c9388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55f115761140 'unsigned long'
|-TypedefDecl 0x55f1157c9418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55f1157c93e0 '__off64_t' sugar
|   |-Typedef 0x55f1157c86d8 '__off64_t'
|   `-BuiltinType 0x55f1157610a0 'long'
|-TypedefDecl 0x55f1157c9510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55f1157c94d0 '__quad_t *'
|   `-TypedefType 0x55f1157c9470 '__quad_t' sugar
|     |-Typedef 0x55f1157c8278 '__quad_t'
|     `-BuiltinType 0x55f1157610a0 'long'
|-TypedefDecl 0x55f1157c9580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55f115761c20 'char *'
|   `-BuiltinType 0x55f115761020 'char'
|-TypedefDecl 0x55f1157c95f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55f1157610a0 'long'
|-TypedefDecl 0x55f1157c9660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55f115761120 'unsigned int'
|-FunctionDecl 0x55f1157c97a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55f1157c96d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55f1157c9ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55f1157c9ad8 <line:72:3, col:34>
|     `-CallExpr 0x55f1157c9a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55f1157c9a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55f1157c9a10 <col:10> '<builtin fn type>' Function 0x55f1157c9880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55f1157c9ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55f1157c9a30 <col:29> 'unsigned int' lvalue ParmVar 0x55f1157c96d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55f1157c9880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55f1157c9920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55f1157c9990 <col:10> Implicit
| `-ConstAttr 0x55f1157c99e8 <col:10> Implicit
|-FunctionDecl 0x55f1157c9c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55f1157c9b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55f1157c9f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55f1157c9f48 <line:77:3, col:34>
|     `-CallExpr 0x55f1157c9f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55f1157c9ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55f1157c9e78 <col:10> '<builtin fn type>' Function 0x55f1157c9ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55f1157c9f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55f1157c9e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55f1157c9b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55f1157c9ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55f1157c9d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55f1157c9df8 <col:10> Implicit
| `-ConstAttr 0x55f1157c9e50 <col:10> Implicit
|-TypedefDecl 0x55f1157c9f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55f115761140 'unsigned long'
|-TypedefDecl 0x55f1157ca018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55f1157c9fe0 '__time_t' sugar
|   |-Typedef 0x55f1157c8c18 '__time_t'
|   `-BuiltinType 0x55f1157610a0 'long'
|-RecordDecl 0x55f1157ca070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55f1157ca128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55f1157ca1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55f1157ca248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55f1157ca210 '__pid_t' sugar
|   |-Typedef 0x55f1157c8748 '__pid_t'
|   `-BuiltinType 0x55f115761080 'int'
|-RecordDecl 0x55f1157ca2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55f1157ca360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55f1157ca3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55f1157ca470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55f1157ca4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55f115761140 'unsigned long'
|-RecordDecl 0x55f1157ca530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55f1157ca7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55f1157cc8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55f1157ca810 'struct cpu_set_t' sugar
|   `-RecordType 0x55f1157ca5b0 'cpu_set_t'
|     `-Record 0x55f1157ca530 ''
|-FunctionDecl 0x55f1157ccb88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55f1157cc958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55f1157cca60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55f1157ccc38 <line:107:19>
|-FunctionDecl 0x55f1157cce10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55f1157ccca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55f1157cceb8 <col:69>
|-FunctionDecl 0x55f1157cd030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55f1157ccf20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55f1157cd0d8 <col:64>
|-FunctionDecl 0x55f1157cd398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55f1157cd140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f1157cd278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55f1157cd448 <line:113:22>
|-FunctionDecl 0x55f1157cd6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55f1157cd4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f1157cd5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55f1157cd778 <col:88>
|-FunctionDecl 0x55f1157cda98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55f1157cd7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f1157cd8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55f1157cd950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55f1157cdb50 <col:62>
|-FunctionDecl 0x55f1157cdcc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55f1157cdbb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55f1157cdd70 <col:63>
|-FunctionDecl 0x55f1157cde98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55f1157cdf38 <col:47>
|-FunctionDecl 0x55f1157ce040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55f1157cdfa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55f1157ce0e8 <col:69>
|-FunctionDecl 0x55f1157ce1f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55f1157ce158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55f1157ce298 <col:69>
|-FunctionDecl 0x55f1157ce558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55f1157ce300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f1157ce438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55f1157ce608 <col:88>
|-TypedefDecl 0x55f1157ce698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55f1157ce660 '__clock_t' sugar
|   |-Typedef 0x55f1157c8a58 '__clock_t'
|   `-BuiltinType 0x55f1157610a0 'long'
|-TypedefDecl 0x55f1157ce728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55f1157ce6f0 '__clockid_t' sugar
|   |-Typedef 0x55f1157c8e48 '__clockid_t'
|   `-BuiltinType 0x55f115761080 'int'
|-TypedefDecl 0x55f1157ce7b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55f1157ce780 '__timer_t' sugar
|   |-Typedef 0x55f1157c8eb8 '__timer_t'
|   `-PointerType 0x55f1157617a0 'void *'
|     `-BuiltinType 0x55f115760fe0 'void'
|-RecordDecl 0x55f1157ce810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55f1157ce8e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55f1157ce950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55f1157ce9b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55f1157cea20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55f1157cea88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55f1157ceaf0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55f1157ceb58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55f1157cebc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55f1157cec28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55f1157cec90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55f1157cecf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55f1157ced48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55f1157cee18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55f1157cee88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55f1157cef30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55f1157cf100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55f1157cf1a0 <col:45>
|-FunctionDecl 0x55f1157cf380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55f1157cf270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55f1157cf428 <col:54>
|-FunctionDecl 0x55f1157cf628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55f1157cf490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55f1157cf508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55f1157cf6d8 <line:157:22>
| `-ConstAttr 0x55f1157cf730 <col:63>
|-FunctionDecl 0x55f1157d0560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55f1157cf828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55f1157d0608 <col:56>
|-FunctionDecl 0x55f1157d09b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55f1157d0678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55f1157d06f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55f1157d0770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55f1157d0868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55f1157d0a70 <col:54>
|-RecordDecl 0x55f1157d0ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55f1157d0b78 parent 0x55f115760f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55f1157d0dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55f1157d0e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55f1157d0ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55f1157d0f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55f1157d1038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55f1157d1158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55f1157d1100 'struct __locale_struct *'
|   `-ElaboratedType 0x55f1157d1090 'struct __locale_struct' sugar
|     `-RecordType 0x55f1157d0b50 'struct __locale_struct'
|       `-Record 0x55f1157d0ac8 '__locale_struct'
|-TypedefDecl 0x55f1157d1208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55f1157d11d0 '__locale_t' sugar
|   |-Typedef 0x55f1157d1158 '__locale_t'
|   `-PointerType 0x55f1157d1100 'struct __locale_struct *'
|     `-ElaboratedType 0x55f1157d1090 'struct __locale_struct' sugar
|       `-RecordType 0x55f1157d0b50 'struct __locale_struct'
|         `-Record 0x55f1157d0ac8 '__locale_struct'
|-FunctionDecl 0x55f1157d1610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55f1157d1278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55f1157d12f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55f1157d1370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55f1157d1400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55f1157d1478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55f1157d16d8 <col:40>
|-FunctionDecl 0x55f1157d18c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55f1157d17a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55f1157d1970 <col:66>
|-FunctionDecl 0x55f1157d1a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55f1157d19d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55f1157d1b28 <col:69>
|-FunctionDecl 0x55f1157d1d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55f1157d1b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55f1157d1c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55f1157d1e08 <col:52>
|-FunctionDecl 0x55f1157d1fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55f1157d1e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55f1157d1f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55f1157d2060 <col:55>
|-FunctionDecl 0x55f1157d21f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55f1157d20e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55f1157d22a0 <col:62>
|-FunctionDecl 0x55f1157d2418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55f1157d2308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55f1157d24c0 <col:60>
|-FunctionDecl 0x55f1157d2718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55f1157d2578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55f1157d25f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55f1157d27c8 <col:44>
|-FunctionDecl 0x55f1157d29d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55f1157d2830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55f1157d28b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55f1157d2a88 <col:49>
|-VarDecl 0x55f1157d2b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55f1157d2c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55f1157d2c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55f1157d2d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55f1157d2e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55f1157d2f20 <col:42>
|-VarDecl 0x55f1157d2f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55f1157d3010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55f1157d3198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55f1157d3088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55f1157d3240 <col:57>
|-FunctionDecl 0x55f1157d3350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55f1157d32c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55f1157d33f8 <col:56>
|-FunctionDecl 0x55f1157d4540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55f1157d3478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55f1157d45e8 <col:59>
|-FunctionDecl 0x55f1157d46f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55f1157d4658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55f1157d4798 <col:48>
| `-ConstAttr 0x55f1157d47f0 <col:89>
|-FunctionDecl 0x55f1157d4a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55f1157d48a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55f1157d4938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55f1157d4cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55f1157d4b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f1157d4bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55f1157d4d68 <col:88>
|-FunctionDecl 0x55f1157d4f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55f1157d4dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f1157d4e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55f1157d4fb0 <col:88>
|-FunctionDecl 0x55f1157d51c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55f1157d5018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f1157d50a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55f1157d5278 <line:208:22>
|-FunctionDecl 0x55f1157d55e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55f1157d52e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f1157d5360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55f1157d53f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55f1157d5480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55f1157d58e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55f1157d56e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55f1157d57c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55f1157d5998 <col:85>
|-FunctionDecl 0x55f1157d5d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55f1157d5a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f1157d5b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55f1157d5c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55f1157d5e40 <col:52>
|-FunctionDecl 0x55f1157d5fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55f1157d5ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55f1157d6060 <col:61>
|-FunctionDecl 0x55f1157d6560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55f1157d60c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55f1157d6148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55f1157d6278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55f1157d6368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55f1157d6620 <col:62>
|-FunctionDecl 0x55f1157d6838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55f1157d6688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55f1157d6718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55f1157d68e8 <line:221:22>
|-FunctionDecl 0x55f1157d69e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55f1157d6950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55f1157d6a90 <col:65>
|-TypedefDecl 0x55f1157d6b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55f115761140 'unsigned long'
|-RecordDecl 0x55f1157d6b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55f1157d6ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55f1157d6d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f1157d6db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55f1157d6d60 'union pthread_attr_t' sugar
|   `-RecordType 0x55f1157d6be0 'union pthread_attr_t'
|     `-Record 0x55f1157d6b58 'pthread_attr_t'
|-RecordDecl 0x55f1157d6e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55f1157d6f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55f1157d7000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55f1157d70b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55f1157d7050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55f1157d6e90 'struct __pthread_internal_list'
|     `-Record 0x55f1157d6e10 '__pthread_internal_list'
|-RecordDecl 0x55f1157d7120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55f1157d71c8 parent 0x55f115760f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55f1157d72a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55f1157d7308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55f1157d7370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55f1157d73d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55f1157d7440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55f1157d74a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55f1157db580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55f1157db630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55f1157db720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55f1157db788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f1157db910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55f1157db8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55f1157d71a0 'pthread_mutex_t'
|     `-Record 0x55f1157d7120 ''
|-RecordDecl 0x55f1157db980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55f1157dbac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55f1157dbb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55f1157dbbe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55f1157dbb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55f1157dba00 'pthread_mutexattr_t'
|     `-Record 0x55f1157db980 ''
|-RecordDecl 0x55f1157dbc50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55f1157dbcf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55f1157dbdc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55f1157dbe28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55f1157dbe90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55f1157dbef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55f1157dbf60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55f1157dbfc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55f1157dc030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55f1157dc098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55f1157dc150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe004_rmo.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe004_rmo.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55f1157dc240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55f1157dc2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55f1157dc3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55f1157dc380 'union pthread_cond_t' sugar
|   `-RecordType 0x55f1157dbcd0 'pthread_cond_t'
|     `-Record 0x55f1157dbc50 ''
|-RecordDecl 0x55f1157dc450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55f1157dc590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55f1157dc5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55f1157dc6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55f1157dc650 'union pthread_condattr_t' sugar
|   `-RecordType 0x55f1157dc4d0 'pthread_condattr_t'
|     `-Record 0x55f1157dc450 ''
|-TypedefDecl 0x55f1157dc738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55f115761120 'unsigned int'
|-TypedefDecl 0x55f1157dc7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55f115761080 'int'
|-RecordDecl 0x55f1157dc800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55f1157dc8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55f1157dc970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55f1157dc9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55f1157dca40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55f1157dcaa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55f1157dcb10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55f1157dcb78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55f1157dcbe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55f1157dcc48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55f1157dccb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55f1157dcd18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55f1157dcd80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55f1157dce30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe004_rmo.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe004_rmo.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55f1157dced8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55f1157dcf40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f1157dd090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55f1157dd030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55f1157dc880 'pthread_rwlock_t'
|     `-Record 0x55f1157dc800 ''
|-RecordDecl 0x55f1157dd100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55f1157dd240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55f1157dd2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f1157dd360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55f1157dd300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55f1157dd180 'pthread_rwlockattr_t'
|     `-Record 0x55f1157dd100 ''
|-TypedefDecl 0x55f1157dd3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55f115761084 'volatile int' volatile
|   `-BuiltinType 0x55f115761080 'int'
|-RecordDecl 0x55f1157dd440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55f1157df5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55f1157df618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f1157df6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55f1157df670 'union pthread_barrier_t' sugar
|   `-RecordType 0x55f1157dd4c0 'pthread_barrier_t'
|     `-Record 0x55f1157dd440 ''
|-RecordDecl 0x55f1157df740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55f1157df840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55f1157df8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55f1157df960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55f1157df900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55f1157df7c0 'pthread_barrierattr_t'
|     `-Record 0x55f1157df740 ''
|-TypedefDecl 0x55f1157dfa78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55f1157dfa10 'long [8]' 8 
|   `-BuiltinType 0x55f1157610a0 'long'
|-EnumDecl 0x55f1157dfad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55f1157dfb98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55f1157dfbe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55f1157dfc38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55f1157dfd08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55f1157dfd58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55f1157dfda8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55f1157dfdf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55f1157dfe80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55f1157dfe68 <col:26> 'int'
| |   `-DeclRefExpr 0x55f1157dfe48 <col:26> 'int' EnumConstant 0x55f1157dfd08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55f1157dff08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55f1157dfef0 <col:29> 'int'
| |   `-DeclRefExpr 0x55f1157dfed0 <col:29> 'int' EnumConstant 0x55f1157dfd58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55f1157dff90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55f1157dff78 <col:30> 'int'
| |   `-DeclRefExpr 0x55f1157dff58 <col:30> 'int' EnumConstant 0x55f1157dfda8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55f1157e0018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55f1157e0000 <col:27> 'int'
|     `-DeclRefExpr 0x55f1157dffe0 <col:27> 'int' EnumConstant 0x55f1157dfe80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55f1157e0068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55f1157e0138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55f1157e01c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55f1157e01a8 <col:30> 'int'
| |   `-DeclRefExpr 0x55f1157e0188 <col:30> 'int' EnumConstant 0x55f1157e0138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55f1157e0210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55f1157e0298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55f1157e0280 <col:29> 'int'
|     `-DeclRefExpr 0x55f1157e0260 <col:29> 'int' EnumConstant 0x55f1157e0210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55f1157e02e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55f1157e03b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55f1157e0408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55f1157e0458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55f1157e04a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55f1157e05c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55f1157e0610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55f1157e0660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55f1157e06e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55f1157e06d0 <col:31> 'int'
|     `-DeclRefExpr 0x55f1157e06b0 <col:31> 'int' EnumConstant 0x55f1157e05c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55f1157e0738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55f1157e0808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55f1157e0858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55f1157e08a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55f1157e0978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55f1157e09c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55f1157e0a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55f1157e0ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55f1157e0b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55f1157e0b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55f1157e0dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55f1157e0e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55f1157e0e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55f1157e0fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55f1157e1008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55f1157e10d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55f1157e1128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55f1157e1178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55f1157e1248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55f1157e1298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55f1157e18f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55f1157e1390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55f1157e14a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f1157e16e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55f1157e1760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55f1157e19b8 <col:47>
| |-NonNullAttr 0x55f1157e1a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x55f1157e1a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55f1157e1b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55f1157e1aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55f1157e1dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55f1157e1c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55f1157e1ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55f1157e1f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55f1157e1e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55f1157e2040 <col:60>
|-FunctionDecl 0x55f1157e2190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55f1157e2230 <col:54>
| `-ConstAttr 0x55f1157e2288 <col:95>
|-FunctionDecl 0x55f1157e2458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55f1157e22c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f1157e2338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55f1157e2508 <line:394:19>
| `-ConstAttr 0x55f1157e2560 <col:60>
|-FunctionDecl 0x55f1157e2f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55f1157e2e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55f1157e3010 <col:71>
| `-NonNullAttr 0x55f1157e3068 <col:112, col:126> 1
|-FunctionDecl 0x55f1157e3170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55f1157e30b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55f1157e3218 <line:397:22>
| `-NonNullAttr 0x55f1157e3270 <col:63, col:77> 1
|-FunctionDecl 0x55f1157e3498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55f1157e32b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55f1157e3338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55f1157e3548 <line:400:22>
| `-NonNullAttr 0x55f1157e35a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f1157e37a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f1157e35e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f1157e3668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55f1157e3858 <line:403:22>
| `-NonNullAttr 0x55f1157e38b0 <col:63, col:77> 1
|-FunctionDecl 0x55f1157e3b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55f1157e38f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55f1157e39a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55f1157e3bb8 <line:406:22>
| `-NonNullAttr 0x55f1157e3c10 <col:63, col:80> 1 2
|-FunctionDecl 0x55f1157e4e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55f1157e3c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f1157e3cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55f1157e4ef8 <line:409:22>
| `-NonNullAttr 0x55f1157e4f50 <col:63, col:77> 1
|-FunctionDecl 0x55f1157e5188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55f1157e4f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f1157e5028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55f1157e5238 <line:412:22>
| `-NonNullAttr 0x55f1157e5290 <col:63, col:80> 1 2
|-FunctionDecl 0x55f1157e54c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55f1157e52d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f1157e5368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55f1157e5578 <col:37>
| `-NonNullAttr 0x55f1157e55d0 <col:78, col:95> 1 2
|-FunctionDecl 0x55f1157e57b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f1157e5618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f1157e5698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55f1157e5868 <line:418:22>
| `-NonNullAttr 0x55f1157e58c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f1157e5a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f1157e5908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f1157e5988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55f1157e5af8 <line:420:22>
| `-NonNullAttr 0x55f1157e5b50 <col:63, col:77> 1
|-FunctionDecl 0x55f1157e5cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f1157e5b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f1157e5c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55f1157e5da8 <line:423:22>
| `-NonNullAttr 0x55f1157e6e30 <col:63, col:80> 1 2
|-FunctionDecl 0x55f1157e6fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f1157e6e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f1157e6ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55f1157e7068 <line:426:22>
| `-NonNullAttr 0x55f1157e70c0 <col:63, col:77> 1
|-FunctionDecl 0x55f1157e7268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f1157e7108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f1157e7188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55f1157e7318 <line:429:22>
| `-NonNullAttr 0x55f1157e7370 <col:63, col:80> 1 2
|-FunctionDecl 0x55f1157e74f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f1157e73b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f1157e7438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55f1157e75a8 <line:431:22>
| `-NonNullAttr 0x55f1157e7600 <col:63, col:77> 1
|-FunctionDecl 0x55f1157e7828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55f1157e7648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f1157e76c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55f1157e78d8 <line:434:22>
| |-NonNullAttr 0x55f1157e7930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55f1157e7968 <col:100> "" ""
|-FunctionDecl 0x55f1157e7b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55f1157e79b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f1157e7a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55f1157e7c28 <line:437:22>
| |-NonNullAttr 0x55f1157e7c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x55f1157e7cb8 <col:97> "" ""
|-FunctionDecl 0x55f1157e7eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55f1157e7d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f1157e7d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55f1157e7f68 <line:440:22>
| `-NonNullAttr 0x55f1157e7fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f1157e8140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55f1157e8008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f1157e8080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55f1157e81f0 <line:443:22>
| `-NonNullAttr 0x55f1157e8248 <col:63, col:77> 1
|-FunctionDecl 0x55f1157e8538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55f1157e8298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f1157e8318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55f1157e8390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55f1157e85f0 <line:447:22>
| `-NonNullAttr 0x55f1157e8648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55f1157e88f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55f1157e86a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f1157e8720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55f1157e8798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55f1157e89b0 <col:43>
| `-NonNullAttr 0x55f1157e8a08 <col:84, col:98> 1
|-FunctionDecl 0x55f1157e8cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55f1157e8a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f1157e8ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55f1157e8b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55f1157e8d80 <line:452:22>
| `-NonNullAttr 0x55f1157e8dd8 <col:63, col:77> 3
|-FunctionDecl 0x55f1157e90e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55f1157e8e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f1157e8ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55f1157e8f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55f1157e91a0 <line:456:22>
| `-NonNullAttr 0x55f1157e91f8 <col:63, col:80> 2 3
|-FunctionDecl 0x55f1157e93e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55f1157e9248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f1157e92c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55f1157e9498 <line:458:22>
|-FunctionDecl 0x55f1157e9868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55f1157e9560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55f1157e9700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55f1157e9918 <col:52, col:69> 1 2
|-FunctionDecl 0x55f1157e9ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55f1157e99a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55f1157e9a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55f1157e9ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55f1157e9b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55f1157e9c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55f1157e9e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55f1157e9d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55f1157e9fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55f1157ea040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55f1157ea0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55f1157ea1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55f1157ea240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55f1157ea410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe004_rmo.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55f1157ea508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55f1157ea5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55f1157ea560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55f1157ea0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x55f1157ea040 ''
| `-AlignedAttr 0x55f1157ea618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55f1157ea690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55f1157ea7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55f1157ea858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55f1157ea8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55f1157ea928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55f1157eab30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55f1157eaa20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55f1157eac78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55f1157eabe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55f1157eae70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f1157ead30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55f1157eaf18 <line:487:22>
|-RecordDecl 0x55f1157eaf70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55f1157eb288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55f1157eb0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55f1157eb168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55f1157eb338 <col:86>
| `-ReturnsTwiceAttr 0x55f1157eb390 <col:12> Implicit
|-FunctionDecl 0x55f1157eb6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55f1157eb460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55f1157eb570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55f1157eb768 <line:493:22>
| `-NonNullAttr 0x55f1157eb7c0 <col:63, col:77> 1
|-FunctionDecl 0x55f1157eb938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f1157eb808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f1157eb9e0 <line:495:22>
| `-NonNullAttr 0x55f1157eba38 <col:63, col:77> 1
|-FunctionDecl 0x55f1157ebb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f1157eba88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f1157ebbe8 <line:497:22>
| `-NonNullAttr 0x55f1157ebc40 <col:52, col:66> 1
|-FunctionDecl 0x55f1157ebd40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f1157ebc88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f1157ebde8 <line:499:22>
| `-NonNullAttr 0x55f1157ebe40 <col:52, col:66> 1
|-FunctionDecl 0x55f1157ec088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f1157ebe98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f1157ebf28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55f1157ec138 <col:36>
| `-NonNullAttr 0x55f1157ec190 <col:66, col:83> 1 2
|-FunctionDecl 0x55f1157ec290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f1157ec1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f1157ec338 <line:504:22>
| `-NonNullAttr 0x55f1157ec390 <col:52, col:66> 1
|-FunctionDecl 0x55f1157ec628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f1157ec440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f1157ec4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55f1157ec6d8 <line:508:22>
| `-NonNullAttr 0x55f1157ec730 <col:63, col:80> 1 2
|-FunctionDecl 0x55f1157ec9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55f1157ec778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f1157ec7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55f1157ec878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55f1157ecab0 <line:512:22>
| `-NonNullAttr 0x55f1157ecb08 <col:63, col:80> 1 3
|-FunctionDecl 0x55f1157ecc10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f1157ecb58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f1157eccb8 <line:514:22>
| `-NonNullAttr 0x55f1157ecd10 <col:63, col:77> 1
|-FunctionDecl 0x55f1157ecf38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55f1157ecdc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55f1157ecfe0 <line:516:22>
| `-NonNullAttr 0x55f1157ed038 <col:63, col:77> 1
|-FunctionDecl 0x55f1157ed140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55f1157ed088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55f1157ed1e8 <line:518:22>
| `-NonNullAttr 0x55f1157ed240 <col:63, col:77> 1
|-FunctionDecl 0x55f1157ed468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f1157ed288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f1157ed308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f1157ed518 <line:522:22>
| `-NonNullAttr 0x55f1157ed570 <col:63, col:80> 1 2
|-FunctionDecl 0x55f1157ed778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f1157ed5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f1157ed638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55f1157ed828 <line:525:22>
| `-NonNullAttr 0x55f1157ed880 <col:63, col:77> 1
|-FunctionDecl 0x55f1157eda28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f1157ed8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f1157ed948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55f1157edad8 <line:528:22>
| `-NonNullAttr 0x55f1157edb30 <col:63, col:80> 1 2
|-FunctionDecl 0x55f1157edcb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f1157edb78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f1157edbf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55f1157edd68 <line:530:22>
| `-NonNullAttr 0x55f1157eddc0 <col:63, col:77> 1
|-FunctionDecl 0x55f1157eef90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f1157ede08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f1157eeeb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55f1157ef040 <line:534:22>
| `-NonNullAttr 0x55f1157ef098 <col:63, col:80> 1 2
|-FunctionDecl 0x55f1157ef228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f1157ef0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f1157ef168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55f1157ef2d8 <line:537:22>
| `-NonNullAttr 0x55f1157ef330 <col:63, col:77> 1
|-FunctionDecl 0x55f1157ef4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f1157ef378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f1157ef3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55f1157ef588 <line:541:22>
| `-NonNullAttr 0x55f1157ef5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f1157ef768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f1157ef628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f1157ef6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55f1157ef818 <line:544:22>
| `-NonNullAttr 0x55f1157ef870 <col:63, col:77> 1
|-FunctionDecl 0x55f1157efa58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55f1157ef8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f1157ef938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55f1157efb08 <line:547:22>
| `-NonNullAttr 0x55f1157efb60 <col:63, col:80> 1 2
|-FunctionDecl 0x55f1157efce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f1157efba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f1157efc28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55f1157efd98 <line:550:22>
| `-NonNullAttr 0x55f1157efdf0 <col:63, col:77> 1
|-FunctionDecl 0x55f1157f1168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55f1157f0f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55f1157f1020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55f1157f1218 <col:29>
| `-NonNullAttr 0x55f1157f1270 <col:70, col:84> 1
|-FunctionDecl 0x55f1157f13e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f1157f12b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f1157f1490 <line:555:22>
| `-NonNullAttr 0x55f1157f14e8 <col:63, col:77> 1
|-FunctionDecl 0x55f1157f15f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f1157f1538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f1157f1698 <line:557:22>
| `-NonNullAttr 0x55f1157f16f0 <col:52, col:66> 1
|-FunctionDecl 0x55f1157f17f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f1157f1738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f1157f1898 <line:559:19>
| `-NonNullAttr 0x55f1157f18f0 <col:49, col:63> 1
|-FunctionDecl 0x55f1157f1b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f1157f1938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55f1157f19c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55f1157f1bd8 <col:39>
| `-NonNullAttr 0x55f1157f1c30 <col:69, col:86> 1 2
|-FunctionDecl 0x55f1157f1d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f1157f1c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f1157f1dd8 <line:564:22>
| `-NonNullAttr 0x55f1157f1e30 <col:52, col:66> 1
|-FunctionDecl 0x55f1157f1f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f1157f1ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f1157f2040 <line:566:22>
| `-NonNullAttr 0x55f1157f2098 <col:52, col:66> 1
|-FunctionDecl 0x55f1157f2258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f1157f20e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55f1157f2178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55f1157f2308 <col:39>
| `-NonNullAttr 0x55f1157f2360 <col:69, col:86> 1 2
|-FunctionDecl 0x55f1157f2460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f1157f23a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f1157f2508 <line:571:22>
| `-NonNullAttr 0x55f1157f2560 <col:52, col:66> 1
|-FunctionDecl 0x55f1157f2748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55f1157f2610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55f1157f27f0 <line:573:22>
| `-NonNullAttr 0x55f1157f2848 <col:63, col:77> 1
|-FunctionDecl 0x55f1157f2950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55f1157f2898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55f1157f29f8 <line:575:22>
| `-NonNullAttr 0x55f1157f2a50 <col:63, col:77> 1
|-FunctionDecl 0x55f1157f2c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f1157f2a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55f1157f2b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f1157f2d28 <line:579:22>
| `-NonNullAttr 0x55f1157f2d80 <col:63, col:80> 1 2
|-FunctionDecl 0x55f1157f2fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55f1157f2dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55f1157f2e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55f1157f3058 <line:582:22>
| `-NonNullAttr 0x55f1157f30b0 <col:63, col:77> 1
|-FunctionDecl 0x55f1157f3258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f1157f30f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55f1157f3178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55f1157f3308 <line:586:22>
| `-NonNullAttr 0x55f1157f3360 <col:63, col:80> 1 2
|-FunctionDecl 0x55f1157f34e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55f1157f33a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55f1157f3428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55f1157f3598 <col:36>
| `-NonNullAttr 0x55f1157f35f0 <col:77, col:91> 1
|-FunctionDecl 0x55f1157f3928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55f1157f36d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55f1157f37e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55f1157f39d8 <line:591:22>
| `-NonNullAttr 0x55f1157f3a30 <col:63, col:77> 1
|-FunctionDecl 0x55f1157f3ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55f1157f3a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55f1157f3c50 <line:593:22>
| `-NonNullAttr 0x55f1157f3ca8 <col:63, col:77> 1
|-FunctionDecl 0x55f1157f3db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55f1157f3cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55f1157f3e58 <line:595:22>
| `-NonNullAttr 0x55f1157f3eb0 <col:52, col:66> 1
|-FunctionDecl 0x55f1157f3fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55f1157f3f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55f1157f4070 <line:597:22>
| `-NonNullAttr 0x55f1157f40c8 <col:52, col:66> 1
|-FunctionDecl 0x55f1157f42f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55f1157f4118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55f1157f4190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55f1157f43a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55f1157f46d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f1157f4428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55f1157f44a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f1157f4530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55f1157f4790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55f1157f49a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55f1157f4870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55f1157f4a50 <line:606:22>
| `-NonNullAttr 0x55f1157f4aa8 <col:63, col:77> 1
|-FunctionDecl 0x55f1157f4bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55f1157f4af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55f1157f4c58 <line:608:22>
| `-NonNullAttr 0x55f1157f4cb0 <col:63, col:77> 1
|-FunctionDecl 0x55f1157f4f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f1157f4cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55f1157f4d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f1157f4fc0 <line:612:22>
| `-NonNullAttr 0x55f1157f5018 <col:63, col:80> 1 2
|-FunctionDecl 0x55f1157f5228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55f1157f5068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55f1157f50e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55f1157f52d8 <col:37>
| `-NonNullAttr 0x55f1157f5330 <col:78, col:92> 1
|-FunctionDecl 0x55f1157f5548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55f1157f5378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55f1157f5420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55f1157f55f8 <line:618:22>
| `-NonNullAttr 0x55f1157f5650 <col:63, col:80> 1 2
|-FunctionDecl 0x55f1157f5818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55f1157f5698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55f1157f5710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55f1157f58c8 <line:621:22>
| `-NonNullAttr 0x55f1157f5920 <col:63, col:77> 1
|-FunctionDecl 0x55f1157f5bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55f1157f5a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55f1157f5a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55f1157f5c78 <line:623:22>
| `-NonNullAttr 0x55f1157f5cd0 <col:63, col:77> 1
|-FunctionDecl 0x55f1157f5e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f1157f5d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f1157f5f20 <line:625:22>
| `-NonNullAttr 0x55f1157f5f78 <col:63, col:77> 1
|-FunctionDecl 0x55f1157f6080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f1157f5fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f1157f6128 <line:627:22>
| `-NonNullAttr 0x55f1157f6180 <col:52, col:66> 1
|-FunctionDecl 0x55f1157f6280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f1157f61c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f1157f6328 <line:629:22>
| `-NonNullAttr 0x55f1157f6380 <col:52, col:66> 1
|-FunctionDecl 0x55f1157f6480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f1157f63c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f1157f6528 <line:631:22>
| `-NonNullAttr 0x55f1157f6580 <col:52, col:66> 1
|-FunctionDecl 0x55f1157f6958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55f1157f6660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55f1157f6770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55f1157f67f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55f1157f6a10 <line:635:22>
| `-NonNullAttr 0x55f1157f6a68 <col:63, col:77> 1
|-FunctionDecl 0x55f1157f6be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55f1157f6ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55f1157f6c90 <line:637:22>
| `-NonNullAttr 0x55f1157f6ce8 <col:63, col:77> 1
|-FunctionDecl 0x55f1157f6df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55f1157f6d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55f1157f6e98 <line:639:22>
| `-NonNullAttr 0x55f1157f6ef0 <col:52, col:66> 1
|-FunctionDecl 0x55f1157f70e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55f1157f6fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55f1157f7190 <line:641:22>
| `-NonNullAttr 0x55f1157f71e8 <col:63, col:77> 1
|-FunctionDecl 0x55f1157f72f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55f1157f7238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55f1157f7398 <line:643:22>
| `-NonNullAttr 0x55f1157f73f0 <col:63, col:77> 1
|-FunctionDecl 0x55f1157f7618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f1157f7438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55f1157f74b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f1157f76c8 <line:647:22>
| `-NonNullAttr 0x55f1157f7720 <col:63, col:80> 1 2
|-FunctionDecl 0x55f1157f7928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55f1157f7768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55f1157f77e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55f1157f79d8 <line:650:22>
| `-NonNullAttr 0x55f1157f7a30 <col:63, col:77> 1
|-FunctionDecl 0x55f1157f7d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55f1157f7b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55f1157f7c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55f1157f7e28 <line:653:22>
| `-NonNullAttr 0x55f1157f7e80 <col:63, col:77> 1
|-FunctionDecl 0x55f1157f7fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55f1157f7ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55f1157f8090 <col:69>
|-FunctionDecl 0x55f1157f8208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55f1157f80f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55f1157f82b0 <col:72>
|-FunctionDecl 0x55f1157f84e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55f1157f8318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55f1157f83c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55f1157f8598 <col:44>
|-FunctionDecl 0x55f1157f87b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55f1157f8600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f1157f8678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55f1157f8868 <line:660:22>
| `-NonNullAttr 0x55f1157f88c0 <col:63, col:77> 2
|-FunctionDecl 0x55f1157f8d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55f1157f89a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55f1157f8ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55f1157f8bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55f1157f8dc0 <col:47>
|-FunctionDecl 0x55f1157f9f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55f1157f8e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55f1157fa0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55f1157fa020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55f1157fa210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55f1157fa178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55f1157fa2d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55f1157fa398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55f1157fa458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55f1157fa510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55f1157fa590 prev 0x55f1157fa510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55f1157fa5f8 <col:24> 'int' 0
|-VarDecl 0x55f1157fa630 <line:673:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55f1157fa6b0 prev 0x55f1157fa630 <line:674:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55f1157fa718 <col:27> 'int' 0
|-VarDecl 0x55f1157fa750 <line:675:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x55f1157fa7d0 prev 0x55f1157fa750 <line:676:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x55f1157fa838 <col:27> 'int' 0
|-VarDecl 0x55f1157fa868 <line:677:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55f1157fa8e0 <line:678:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55f1157fa960 <line:679:1, col:5> col:5 used x 'int'
|-VarDecl 0x55f1157fa9e0 prev 0x55f1157fa960 <line:680:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55f1157faa48 <col:9> 'int' 0
|-VarDecl 0x55f1157faa78 <line:681:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x55f1157faaf8 <line:682:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x55f1157fab70 <line:683:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x55f1157fabe8 <line:684:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x55f1157fac60 <line:685:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x55f1157facd8 <line:686:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x55f1157fad50 <line:687:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x55f1157fadc8 <line:688:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x55f1157fae40 <line:689:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x55f1157faeb8 <line:690:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x55f1157faf70 <line:691:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x55f1157faff0 <line:692:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x55f1157fb070 <line:693:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x55f1157fb0e8 <line:694:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x55f1157fb168 <line:695:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x55f1157fb1e0 <line:696:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x55f1157fb260 <line:697:1, col:5> col:5 used y 'int'
|-VarDecl 0x55f1157fb2e0 prev 0x55f1157fb260 <line:698:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55f1157fb348 <col:9> 'int' 0
|-VarDecl 0x55f1157fb378 <line:699:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55f1157fb3f0 <line:700:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55f1157fb508 prev 0x55f1157f9f60 <line:701:1, line:720:1> line:701:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55f1157fb470 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55f1157fc798 <line:702:1, line:720:1>
|   |-CallExpr 0x55f1157fb618 <line:703:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f1157fb600 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f1157fb5b0 <col:3> 'void ()' Function 0x55f1157a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f1157fb678 <line:704:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55f1157fb638 <col:3> 'int' lvalue Var 0x55f1157fb2e0 'y' 'int'
|   | `-IntegerLiteral 0x55f1157fb658 <col:7> 'int' 2
|   |-CallExpr 0x55f1157fb6d0 <line:705:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f1157fb6b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f1157fb698 <col:3> 'void ()' Function 0x55f1157a1410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f1157fb728 <line:706:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f1157fb710 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f1157fb6f0 <col:3> 'void ()' Function 0x55f1157a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f1157fb788 <line:707:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55f1157fb748 <col:3> 'int' lvalue Var 0x55f1157fa9e0 'x' 'int'
|   | `-IntegerLiteral 0x55f1157fb768 <col:7> 'int' 1
|   |-CallExpr 0x55f1157fb7e0 <line:708:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f1157fb7c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f1157fb7a8 <col:3> 'void ()' Function 0x55f1157a1410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f1157fb838 <line:709:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f1157fb820 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f1157fb800 <col:3> 'void ()' Function 0x55f1157a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f1157fbb20 <line:710:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55f1157fb858 <col:3> 'int' lvalue Var 0x55f1157fa9e0 'x' 'int'
|   | `-ConditionalOperator 0x55f1157fbaf0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55f1157fb918 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55f1157fb8d0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55f1157fb8b8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55f1157fb878 <col:7> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55f1157fb900 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55f1157fb8e8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55f1157fb898 <col:25> '_Bool' lvalue Var 0x55f1157fabe8 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55f1157fbad8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f1157fb938 <col:42> 'int' lvalue Var 0x55f1157fb070 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55f1157fbab8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55f1157fba88 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55f1157fb9f8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55f1157fb9b0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55f1157fb998 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55f1157fb958 <col:55> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55f1157fb9e0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55f1157fb9c8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55f1157fb978 <col:73> '_Bool' lvalue Var 0x55f1157fadc8 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55f1157fba58 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f1157fba18 <col:90> 'int' lvalue Var 0x55f1157fb168 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55f1157fba70 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f1157fba38 <col:102> 'int' lvalue Var 0x55f1157fa9e0 'x' 'int'
|   |-BinaryOperator 0x55f1157fbd28 <line:711:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f1157fbb40 <col:3> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f1157fbd10 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f1157fbce0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f1157fbc00 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f1157fbbb8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f1157fbba0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f1157fbb60 <col:20> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f1157fbbe8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f1157fbbd0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f1157fbb80 <col:38> '_Bool' lvalue Var 0x55f1157fabe8 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55f1157fbc98 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f1157fbc50 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f1157fbc20 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f1157fbcc8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f1157fbcb0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f1157fbc78 <col:66> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f1157fc030 <line:712:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f1157fbd48 <col:3> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f1157fc018 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f1157fbfe8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f1157fbee8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f1157fbe08 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f1157fbdc0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f1157fbda8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f1157fbd68 <col:20> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f1157fbdf0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f1157fbdd8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f1157fbd88 <col:38> '_Bool' lvalue Var 0x55f1157fabe8 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55f1157fbec8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f1157fbe80 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f1157fbe68 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f1157fbe28 <col:56> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f1157fbeb0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f1157fbe98 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f1157fbe48 <col:74> '_Bool' lvalue Var 0x55f1157fadc8 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55f1157fbfa0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f1157fbf38 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f1157fbf08 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f1157fbfd0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f1157fbfb8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f1157fbf80 <col:102> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55f1157fc238 <line:713:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f1157fc050 <col:3> '_Bool' lvalue Var 0x55f1157fabe8 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55f1157fc220 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f1157fc1f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f1157fc110 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f1157fc0c8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f1157fc0b0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f1157fc070 <col:20> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f1157fc0f8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f1157fc0e0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f1157fc090 <col:38> '_Bool' lvalue Var 0x55f1157fabe8 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55f1157fc1a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f1157fc160 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f1157fc130 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f1157fc1d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f1157fc1c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f1157fc188 <col:66> '_Bool' lvalue Var 0x55f1157fabe8 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55f1157fc520 <line:714:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f1157fc258 <col:3> '_Bool' lvalue Var 0x55f1157fadc8 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55f1157fc508 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f1157fc4d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f1157fc3f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f1157fc318 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f1157fc2d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f1157fc2b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f1157fc278 <col:20> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f1157fc300 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f1157fc2e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f1157fc298 <col:38> '_Bool' lvalue Var 0x55f1157fabe8 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55f1157fc3d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f1157fc390 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f1157fc378 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f1157fc338 <col:56> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f1157fc3c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f1157fc3a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f1157fc358 <col:74> '_Bool' lvalue Var 0x55f1157fadc8 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55f1157fc490 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f1157fc448 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f1157fc418 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f1157fc4c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f1157fc4a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f1157fc470 <col:102> '_Bool' lvalue Var 0x55f1157fadc8 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55f1157fc578 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f1157fc560 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f1157fc540 <col:3> 'void ()' Function 0x55f1157a1410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f1157fc5d0 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f1157fc5b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f1157fc598 <col:3> 'void ()' Function 0x55f1157a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f1157fc688 <line:717:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55f1157fc5f0 <col:3> 'int' lvalue Var 0x55f1157fa590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55f1157fc668 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55f1157fc650 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f1157fc610 <col:22> 'int' lvalue Var 0x55f1157fa590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55f1157fc630 <col:41> 'int' 1
|   |-CallExpr 0x55f1157fc6e0 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f1157fc6c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f1157fc6a8 <col:3> 'void ()' Function 0x55f1157a1410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55f1157fc788 <line:719:3, col:36>
|     `-CallExpr 0x55f1157fc768 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55f1157fc750 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55f1157fc700 <col:10> 'void *(void)' Function 0x55f1157a0e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55f1157fc8e0 prev 0x55f1157fa0b8 <line:721:1, line:749:1> line:721:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55f1157fc848 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55f1157fe0a0 <line:722:1, line:749:1>
|   |-CallExpr 0x55f1157fc9c0 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f1157fc9a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f1157fc988 <col:3> 'void ()' Function 0x55f1157a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f1157fca38 <line:724:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55f1157fc9e0 <col:3> 'int' lvalue Var 0x55f1157fb168 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55f1157fca20 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f1157fca00 <col:15> 'int' lvalue Var 0x55f1157fb070 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55f1157fca98 <line:725:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55f1157fca58 <col:3> 'int' lvalue Var 0x55f1157fb070 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x55f1157fca78 <col:15> 'int' 2
|   |-BinaryOperator 0x55f1157fcb10 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f1157fcab8 <col:3> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f1157fcaf8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f1157fcad8 <col:20> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f1157fcba8 <line:727:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55f1157fcb30 <col:3> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55f1157fcb80 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55f1157fcb50 <col:27> 'int' 1
|   |-CallExpr 0x55f1157fcd28 <line:728:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55f1157fcd10 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55f1157fcbc8 <col:3> 'void (int)' Function 0x55f1157a10d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55f1157fccc8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55f1157fcca8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55f1157fcc88 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55f1157fcc40 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55f1157fcc28 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55f1157fcbe8 <col:23> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55f1157fcc70 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55f1157fcc58 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55f1157fcc08 <col:41> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f1157fcda8 <line:729:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f1157fcd50 <col:3> '_Bool' lvalue Var 0x55f1157fad50 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55f1157fcd90 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f1157fcd70 <col:20> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55f1157fce20 <line:730:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f1157fcdc8 <col:3> '_Bool' lvalue Var 0x55f1157fadc8 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55f1157fce08 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f1157fcde8 <col:20> '_Bool' lvalue Var 0x55f1157fabe8 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55f1157fce98 <line:731:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f1157fce40 <col:3> '_Bool' lvalue Var 0x55f1157fae40 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55f1157fce80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f1157fce60 <col:20> '_Bool' lvalue Var 0x55f1157fac60 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55f1157fcf10 <line:732:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f1157fceb8 <col:3> '_Bool' lvalue Var 0x55f1157faeb8 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55f1157fcef8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f1157fced8 <col:20> '_Bool' lvalue Var 0x55f1157facd8 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55f1157fcfb8 <line:733:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55f1157fcf30 <col:3> '_Bool' lvalue Var 0x55f1157fac60 'x$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x55f1157fcf90 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55f1157fcf50 <col:27> 'int' 1
|   |-CallExpr 0x55f1157fd010 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f1157fcff8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f1157fcfd8 <col:3> 'void ()' Function 0x55f1157a1410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f1157fd068 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f1157fd050 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f1157fd030 <col:3> 'void ()' Function 0x55f1157a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f1157fd0c8 <line:736:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55f1157fd088 <col:3> 'int' lvalue Var 0x55f1157fb2e0 'y' 'int'
|   | `-IntegerLiteral 0x55f1157fd0a8 <col:7> 'int' 1
|   |-CallExpr 0x55f1157fd120 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f1157fd108 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f1157fd0e8 <col:3> 'void ()' Function 0x55f1157a1410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f1157fd178 <line:738:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f1157fd160 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f1157fd140 <col:3> 'void ()' Function 0x55f1157a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f1157fd460 <line:739:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55f1157fd198 <col:3> 'int' lvalue Var 0x55f1157fa9e0 'x' 'int'
|   | `-ConditionalOperator 0x55f1157fd430 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55f1157fd258 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55f1157fd210 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55f1157fd1f8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55f1157fd1b8 <col:7> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55f1157fd240 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55f1157fd228 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55f1157fd1d8 <col:25> '_Bool' lvalue Var 0x55f1157fac60 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55f1157fd418 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f1157fd278 <col:42> 'int' lvalue Var 0x55f1157fb070 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55f1157fd3f8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55f1157fd3c8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55f1157fd338 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55f1157fd2f0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55f1157fd2d8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55f1157fd298 <col:55> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55f1157fd320 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55f1157fd308 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55f1157fd2b8 <col:73> '_Bool' lvalue Var 0x55f1157fae40 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55f1157fd398 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f1157fd358 <col:90> 'int' lvalue Var 0x55f1157fb168 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55f1157fd3b0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f1157fd378 <col:102> 'int' lvalue Var 0x55f1157fa9e0 'x' 'int'
|   |-BinaryOperator 0x55f1157fd668 <line:740:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f1157fd480 <col:3> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f1157fd650 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f1157fd620 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f1157fd540 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f1157fd4f8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f1157fd4e0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f1157fd4a0 <col:20> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f1157fd528 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f1157fd510 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f1157fd4c0 <col:38> '_Bool' lvalue Var 0x55f1157fac60 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f1157fd5d8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f1157fd590 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f1157fd560 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f1157fd608 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f1157fd5f0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f1157fd5b8 <col:66> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f1157fd950 <line:741:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f1157fd688 <col:3> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f1157fd938 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f1157fd908 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f1157fd828 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f1157fd748 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f1157fd700 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f1157fd6e8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f1157fd6a8 <col:20> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f1157fd730 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f1157fd718 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f1157fd6c8 <col:38> '_Bool' lvalue Var 0x55f1157fac60 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55f1157fd808 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f1157fd7c0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f1157fd7a8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f1157fd768 <col:56> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f1157fd7f0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f1157fd7d8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f1157fd788 <col:74> '_Bool' lvalue Var 0x55f1157fae40 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f1157fd8c0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f1157fd878 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f1157fd848 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f1157fd8f0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f1157fd8d8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f1157fd8a0 <col:102> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55f1157fdb58 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f1157fd970 <col:3> '_Bool' lvalue Var 0x55f1157fac60 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55f1157fdb40 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f1157fdb10 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f1157fda30 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f1157fd9e8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f1157fd9d0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f1157fd990 <col:20> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f1157fda18 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f1157fda00 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f1157fd9b0 <col:38> '_Bool' lvalue Var 0x55f1157fac60 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f1157fdac8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f1157fda80 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f1157fda50 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f1157fdaf8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f1157fdae0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f1157fdaa8 <col:66> '_Bool' lvalue Var 0x55f1157fac60 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55f1157fde40 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f1157fdb78 <col:3> '_Bool' lvalue Var 0x55f1157fae40 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55f1157fde28 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f1157fddf8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f1157fdd18 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f1157fdc38 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f1157fdbf0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f1157fdbd8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f1157fdb98 <col:20> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f1157fdc20 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f1157fdc08 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f1157fdbb8 <col:38> '_Bool' lvalue Var 0x55f1157fac60 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55f1157fdcf8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f1157fdcb0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f1157fdc98 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f1157fdc58 <col:56> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f1157fdce0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f1157fdcc8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f1157fdc78 <col:74> '_Bool' lvalue Var 0x55f1157fae40 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f1157fddb0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f1157fdd68 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f1157fdd38 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f1157fdde0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f1157fddc8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f1157fdd90 <col:102> '_Bool' lvalue Var 0x55f1157fae40 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55f1157fde98 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f1157fde80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f1157fde60 <col:3> 'void ()' Function 0x55f1157a1410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f1157fdef0 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f1157fded8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f1157fdeb8 <col:3> 'void ()' Function 0x55f1157a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f1157fdfc0 <line:746:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55f1157fdf10 <col:3> 'int' lvalue Var 0x55f1157fa590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55f1157fdfa0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55f1157fdf70 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f1157fdf30 <col:22> 'int' lvalue Var 0x55f1157fa590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55f1157fdf50 <col:41> 'int' 1
|   |-CallExpr 0x55f1157fe018 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f1157fe000 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f1157fdfe0 <col:3> 'void ()' Function 0x55f1157a1410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55f1157fe090 <line:748:3, col:36>
|     `-CallExpr 0x55f1157fe070 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55f1157fe058 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55f1157fe038 <col:10> 'void *(void)' Function 0x55f1157a0e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55f1157fe230 prev 0x55f1157fa210 <line:750:1, line:769:1> line:750:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55f1157fe198 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55f1157ff480 <line:751:1, line:769:1>
|   |-CallExpr 0x55f1157fe310 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f1157fe2f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f1157fe2d8 <col:3> 'void ()' Function 0x55f1157a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f1157fe388 <line:753:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55f1157fe330 <col:3> 'int' lvalue Var 0x55f1157fa6b0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55f1157fe370 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f1157fe350 <col:25> 'int' lvalue Var 0x55f1157fb2e0 'y' 'int'
|   |-CallExpr 0x55f1157fe3e0 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f1157fe3c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f1157fe3a8 <col:3> 'void ()' Function 0x55f1157a1410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f1157fe438 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f1157fe420 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f1157fe400 <col:3> 'void ()' Function 0x55f1157a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f1157fe4b0 <line:756:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55f1157fe458 <col:3> 'int' lvalue Var 0x55f1157fa7d0 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x55f1157fe498 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f1157fe478 <col:25> 'int' lvalue Var 0x55f1157fb2e0 'y' 'int'
|   |-CallExpr 0x55f1157fe508 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f1157fe4f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f1157fe4d0 <col:3> 'void ()' Function 0x55f1157a1410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f1157fe560 <line:758:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f1157fe548 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f1157fe528 <col:3> 'void ()' Function 0x55f1157a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f1157fe848 <line:759:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55f1157fe580 <col:3> 'int' lvalue Var 0x55f1157fa9e0 'x' 'int'
|   | `-ConditionalOperator 0x55f1157fe818 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55f1157fe640 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55f1157fe5f8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55f1157fe5e0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55f1157fe5a0 <col:7> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55f1157fe628 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55f1157fe610 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55f1157fe5c0 <col:25> '_Bool' lvalue Var 0x55f1157facd8 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55f1157fe800 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f1157fe660 <col:42> 'int' lvalue Var 0x55f1157fb070 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55f1157fe7e0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55f1157fe7b0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55f1157fe720 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55f1157fe6d8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55f1157fe6c0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55f1157fe680 <col:55> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55f1157fe708 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55f1157fe6f0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55f1157fe6a0 <col:73> '_Bool' lvalue Var 0x55f1157faeb8 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55f1157fe780 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f1157fe740 <col:90> 'int' lvalue Var 0x55f1157fb168 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55f1157fe798 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f1157fe760 <col:102> 'int' lvalue Var 0x55f1157fa9e0 'x' 'int'
|   |-BinaryOperator 0x55f1157fea50 <line:760:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f1157fe868 <col:3> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f1157fea38 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f1157fea08 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f1157fe928 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f1157fe8e0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f1157fe8c8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f1157fe888 <col:20> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f1157fe910 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f1157fe8f8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f1157fe8a8 <col:38> '_Bool' lvalue Var 0x55f1157facd8 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55f1157fe9c0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f1157fe978 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f1157fe948 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f1157fe9f0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f1157fe9d8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f1157fe9a0 <col:66> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f1157fed38 <line:761:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f1157fea70 <col:3> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f1157fed20 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f1157fecf0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f1157fec10 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f1157feb30 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f1157feae8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f1157fead0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f1157fea90 <col:20> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f1157feb18 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f1157feb00 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f1157feab0 <col:38> '_Bool' lvalue Var 0x55f1157facd8 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55f1157febf0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f1157feba8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f1157feb90 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f1157feb50 <col:56> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f1157febd8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f1157febc0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f1157feb70 <col:74> '_Bool' lvalue Var 0x55f1157faeb8 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55f1157feca8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f1157fec60 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f1157fec30 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f1157fecd8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f1157fecc0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f1157fec88 <col:102> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55f1157fef40 <line:762:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f1157fed58 <col:3> '_Bool' lvalue Var 0x55f1157facd8 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55f1157fef28 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f1157feef8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f1157fee18 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f1157fedd0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f1157fedb8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f1157fed78 <col:20> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f1157fee00 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f1157fede8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f1157fed98 <col:38> '_Bool' lvalue Var 0x55f1157facd8 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55f1157feeb0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f1157fee68 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f1157fee38 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f1157feee0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f1157feec8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f1157fee90 <col:66> '_Bool' lvalue Var 0x55f1157facd8 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55f1157ff238 <line:763:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f1157fef60 <col:3> '_Bool' lvalue Var 0x55f1157faeb8 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55f1157ff220 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f1157ff1f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f1157ff110 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f1157ff030 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f1157fefe8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f1157fefd0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f1157fef80 <col:20> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f1157ff018 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f1157ff000 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f1157fefb0 <col:38> '_Bool' lvalue Var 0x55f1157facd8 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55f1157ff0f0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f1157ff0a8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f1157ff090 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f1157ff050 <col:56> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f1157ff0d8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f1157ff0c0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f1157ff070 <col:74> '_Bool' lvalue Var 0x55f1157faeb8 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55f1157ff1a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f1157ff160 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f1157ff130 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f1157ff1d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f1157ff1c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f1157ff188 <col:102> '_Bool' lvalue Var 0x55f1157faeb8 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55f1157ff290 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f1157ff278 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f1157ff258 <col:3> 'void ()' Function 0x55f1157a1410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f1157ff2e8 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f1157ff2d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f1157ff2b0 <col:3> 'void ()' Function 0x55f1157a1350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f1157ff3a0 <line:766:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55f1157ff308 <col:3> 'int' lvalue Var 0x55f1157fa590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55f1157ff380 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55f1157ff368 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f1157ff328 <col:22> 'int' lvalue Var 0x55f1157fa590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55f1157ff348 <col:41> 'int' 1
|   |-CallExpr 0x55f1157ff3f8 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f1157ff3e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f1157ff3c0 <col:3> 'void ()' Function 0x55f1157a1410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55f1157ff470 <line:768:3, col:36>
|     `-CallExpr 0x55f1157ff450 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55f1157ff438 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55f1157ff418 <col:10> 'void *(void)' Function 0x55f1157a0e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55f1157ff538 prev 0x55f1157fa2d8 <line:770:1, line:772:1> line:770:6 fence 'void ()'
| `-CompoundStmt 0x55f1157ff5d8 <line:771:1, line:772:1>
|-FunctionDecl 0x55f1157ff608 prev 0x55f1157fa398 <line:773:1, line:775:1> line:773:6 isync 'void ()'
| `-CompoundStmt 0x55f1157ff6a8 <line:774:1, line:775:1>
|-FunctionDecl 0x55f1157ff6d8 prev 0x55f1157fa458 <line:776:1, line:778:1> line:776:6 lwfence 'void ()'
| `-CompoundStmt 0x55f1157ff778 <line:777:1, line:778:1>
`-FunctionDecl 0x55f1157ff7e8 <line:779:1, line:816:1> line:779:5 main 'int ()'
  `-CompoundStmt 0x55f115803e48 <line:780:1, line:816:1>
    |-DeclStmt 0x55f1157ff900 <line:781:3, col:18>
    | `-VarDecl 0x55f1157ff898 <col:3, col:13> col:13 used t1890 'pthread_t':'unsigned long'
    |-CallExpr 0x55f1157ffb08 <line:782:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55f1157ffaf0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f1157ff918 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55f1157e18f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55f1157ff958 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55f1157ff938 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55f1157ff898 't1890' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55f1157ffb48 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55f1157ff9d0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55f1157ff9a8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55f1157ff970 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55f1157ffb60 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f1157ff9f0 <col:39> 'void *(void *)' Function 0x55f1157fb508 'P0' 'void *(void *)'
    | `-ParenExpr 0x55f1157ffa70 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55f1157ffa48 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55f1157ffa10 <col:52> 'int' 0
    |-DeclStmt 0x55f1157ffbf0 <line:783:3, col:18>
    | `-VarDecl 0x55f1157ffb88 <col:3, col:13> col:13 used t1891 'pthread_t':'unsigned long'
    |-CallExpr 0x55f1157ffd98 <line:784:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55f1157ffd80 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f1157ffc08 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55f1157e18f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55f1157ffc48 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55f1157ffc28 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55f1157ffb88 't1891' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55f1157ffdd8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55f1157ffcc0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55f1157ffc98 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55f1157ffc60 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55f1157ffdf0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f1157ffce0 <col:39> 'void *(void *)' Function 0x55f1157fc8e0 'P1' 'void *(void *)'
    | `-ParenExpr 0x55f1157ffd60 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55f1157ffd38 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55f1157ffd00 <col:52> 'int' 0
    |-DeclStmt 0x55f1157ffe80 <line:785:3, col:18>
    | `-VarDecl 0x55f1157ffe18 <col:3, col:13> col:13 used t1892 'pthread_t':'unsigned long'
    |-CallExpr 0x55f115800038 <line:786:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55f115800020 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f1157ffe98 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55f1157e18f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55f1157ffed8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55f1157ffeb8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55f1157ffe18 't1892' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55f115800078 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55f1157fff50 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55f1157fff28 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55f1157ffef0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55f115800090 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f1157fff70 <col:39> 'void *(void *)' Function 0x55f1157fe230 'P2' 'void *(void *)'
    | `-ParenExpr 0x55f115800000 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55f1157fffd8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55f1157fff90 <col:52> 'int' 0
    |-CallExpr 0x55f1158000e0 <line:787:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55f1158000c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f1158000a8 <col:3> 'void ()' Function 0x55f1157a1350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55f1158001b0 <line:788:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55f115800100 <col:3> '_Bool' lvalue Var 0x55f1157fa868 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55f115800198 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55f115800178 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55f115800160 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55f115800120 <col:21> 'int' lvalue Var 0x55f1157fa590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55f115800140 <col:41> 'int' 3
    |-CallExpr 0x55f115800208 <line:789:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55f1158001f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f1158001d0 <col:3> 'void ()' Function 0x55f1157a1410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55f115800280 <line:790:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55f115800268 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f115800228 <col:3> 'void (int)' Function 0x55f1157a0ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55f1158002c0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55f1158002a8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55f115800248 <col:21> '_Bool' lvalue Var 0x55f1157fa868 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55f115800310 <line:791:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55f1158002f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f1158002d8 <col:3> 'void ()' Function 0x55f1157a1350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55f1158005f8 <line:792:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55f115800330 <col:3> 'int' lvalue Var 0x55f1157fa9e0 'x' 'int'
    | `-ConditionalOperator 0x55f1158005c8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55f1158003f0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55f1158003a8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55f115800390 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55f115800350 <col:7> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55f1158003d8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55f1158003c0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55f115800370 <col:25> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55f1158005b0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f115800410 <col:42> 'int' lvalue Var 0x55f1157fb070 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55f115800590 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55f115800560 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55f1158004d0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55f115800488 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55f115800470 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55f115800430 <col:55> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55f1158004b8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55f1158004a0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55f115800450 <col:73> '_Bool' lvalue Var 0x55f1157fad50 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55f115800530 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55f1158004f0 <col:90> 'int' lvalue Var 0x55f1157fb168 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55f115800548 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55f115800510 <col:102> 'int' lvalue Var 0x55f1157fa9e0 'x' 'int'
    |-BinaryOperator 0x55f115800800 <line:793:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55f115800618 <col:3> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55f1158007e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f1158007b8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55f1158006d8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55f115800690 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55f115800678 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55f115800638 <col:20> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55f1158006c0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55f1158006a8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55f115800658 <col:38> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f115800770 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f115800728 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f1158006f8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55f1158007a0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f115800788 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f115800750 <col:66> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55f115800ae8 <line:794:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55f115800820 <col:3> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55f115800ad0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f115800aa0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55f1158009c0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55f1158008e0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55f115800898 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55f115800880 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55f115800840 <col:20> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55f1158008c8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55f1158008b0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55f115800860 <col:38> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55f1158009a0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55f115800958 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55f115800940 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55f115800900 <col:56> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55f115800988 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55f115800970 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55f115800920 <col:74> '_Bool' lvalue Var 0x55f1157fad50 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f115800a58 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f115800a10 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f1158009e0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55f115800a88 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f115800a70 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f115800a38 <col:102> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55f115800cf0 <line:795:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55f115800b08 <col:3> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55f115800cd8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f115800ca8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55f115800bc8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55f115800b80 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55f115800b68 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55f115800b28 <col:20> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55f115800bb0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55f115800b98 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55f115800b48 <col:38> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f115800c60 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f115800c18 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f115800be8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55f115800c90 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f115800c78 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f115800c40 <col:66> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55f115800fe8 <line:796:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55f115800d10 <col:3> '_Bool' lvalue Var 0x55f1157fad50 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55f115800fd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f115800f90 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55f115800eb0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55f115800dd0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55f115800d88 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55f115800d70 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55f115800d30 <col:20> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55f115800db8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55f115800da0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55f115800d50 <col:38> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55f115800e90 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55f115800e48 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55f115800e30 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55f115800df0 <col:56> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55f115800e78 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55f115800e60 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55f115800e10 <col:74> '_Bool' lvalue Var 0x55f1157fad50 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f115800f48 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f115800f00 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f115800ed0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55f115800f78 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f115800f60 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f115800f28 <col:102> '_Bool' lvalue Var 0x55f1157fad50 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55f115801040 <line:797:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55f115801028 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f115801008 <col:3> 'void ()' Function 0x55f1157a1410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55f115801098 <line:798:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55f115801080 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f115801060 <col:3> 'void ()' Function 0x55f1157a1350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55f115801148 <line:799:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x55f1158010b8 <col:3> '_Bool' lvalue Var 0x55f1157fb378 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x55f115801130 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x55f115801110 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x55f1158010f8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55f1158010d8 <col:19> 'void *(void)' Function 0x55f1157a0e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x55f1158011f8 <line:800:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x55f115801168 <col:3> '_Bool' lvalue Var 0x55f1157fb3f0 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x55f1158011e0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x55f1158011c0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x55f1158011a8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55f115801188 <col:19> 'void *(void)' Function 0x55f1157a0e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x55f115801270 <line:801:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x55f115801218 <col:3> '_Bool' lvalue Var 0x55f1157faa78 'x$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x55f115801258 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x55f115801238 <col:21> '_Bool' lvalue Var 0x55f1157fb3f0 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x55f1158012e8 <line:802:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55f115801290 <col:3> 'int' lvalue Var 0x55f1157faaf8 'x$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x55f1158012d0 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55f1158012b0 <col:15> 'int' lvalue Var 0x55f1157fa9e0 'x' 'int'
    |-BinaryOperator 0x55f115801720 <line:803:3, col:162> 'int' '='
    | |-DeclRefExpr 0x55f115801308 <col:3> 'int' lvalue Var 0x55f1157fa9e0 'x' 'int'
    | `-ConditionalOperator 0x55f1158016f0 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x55f115801518 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x55f115801438 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x55f115801360 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x55f115801348 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x55f115801328 <col:8> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x55f115801418 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x55f1158013b0 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x55f115801398 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x55f115801378 <col:27> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x55f115801400 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x55f1158013e8 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x55f1158013c8 <col:46> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x55f1158014f8 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x55f115801490 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x55f115801478 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55f115801458 <col:65> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x55f1158014e0 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x55f1158014c8 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x55f1158014a8 <col:84> '_Bool' lvalue Var 0x55f1157fad50 'x$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55f1158016d8 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f115801538 <col:101> 'int' lvalue Var 0x55f1157fa9e0 'x' 'int'
    |   `-ParenExpr 0x55f1158016b8 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x55f115801688 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x55f1158015f8 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55f1158015b0 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55f115801598 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55f115801558 <col:106> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55f1158015e0 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55f1158015c8 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55f115801578 <col:124> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55f115801658 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55f115801618 <col:141> 'int' lvalue Var 0x55f1157fb070 'x$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x55f115801670 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55f115801638 <col:153> 'int' lvalue Var 0x55f1157fb168 'x$w_buff1' 'int'
    |-BinaryOperator 0x55f115801c30 <line:804:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55f115801740 <col:3> 'int' lvalue Var 0x55f1157fb070 'x$w_buff0' 'int'
    | `-ConditionalOperator 0x55f115801c00 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55f115801bd0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55f115801bb8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55f115801760 <col:15> '_Bool' lvalue Var 0x55f1157fb3f0 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55f115801be8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f115801780 <col:31> 'int' lvalue Var 0x55f1157fb070 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55f115801b98 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55f115801b68 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55f115801990 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55f1158018b0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55f1158017d8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55f1158017c0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55f1158017a0 <col:45> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55f115801890 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55f115801828 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55f115801810 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55f1158017f0 <col:64> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55f115801878 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55f115801860 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55f115801840 <col:83> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55f115801970 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55f115801908 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55f1158018f0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55f1158018d0 <col:102> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55f115801958 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55f115801940 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55f115801920 <col:121> '_Bool' lvalue Var 0x55f1157fad50 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55f115801b50 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55f1158019b0 <col:138> 'int' lvalue Var 0x55f1157fb070 'x$w_buff0' 'int'
    |       `-ParenExpr 0x55f115801b30 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55f115801b00 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55f115801a70 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55f115801a28 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55f115801a10 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55f1158019d0 <col:151> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55f115801a58 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55f115801a40 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55f1158019f0 <col:169> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55f115801ad0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55f115801a90 <col:186> 'int' lvalue Var 0x55f1157fb070 'x$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x55f115801ae8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55f115801ab0 <col:198> 'int' lvalue Var 0x55f1157fb070 'x$w_buff0' 'int'
    |-BinaryOperator 0x55f115802160 <line:805:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55f115801c50 <col:3> 'int' lvalue Var 0x55f1157fb168 'x$w_buff1' 'int'
    | `-ConditionalOperator 0x55f115802130 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55f115802100 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55f1158020e8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55f115801c70 <col:15> '_Bool' lvalue Var 0x55f1157fb3f0 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55f115802118 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f115801c90 <col:31> 'int' lvalue Var 0x55f1157fb168 'x$w_buff1' 'int'
    |   `-ParenExpr 0x55f1158020c8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55f115802098 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55f115801ea0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55f115801dc0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55f115801ce8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55f115801cd0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55f115801cb0 <col:45> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55f115801da0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55f115801d38 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55f115801d20 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55f115801d00 <col:64> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55f115801d88 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55f115801d70 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55f115801d50 <col:83> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55f115801e80 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55f115801e18 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55f115801e00 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55f115801de0 <col:102> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55f115801e68 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55f115801e50 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55f115801e30 <col:121> '_Bool' lvalue Var 0x55f1157fad50 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55f115802080 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55f115801ec0 <col:138> 'int' lvalue Var 0x55f1157fb168 'x$w_buff1' 'int'
    |       `-ParenExpr 0x55f115802060 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55f115802030 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55f115801f80 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55f115801f38 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55f115801f20 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55f115801ee0 <col:151> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55f115801f68 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55f115801f50 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55f115801f00 <col:169> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55f115802000 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55f115801fa0 <col:186> 'int' lvalue Var 0x55f1157fb168 'x$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x55f115802018 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55f115801fe0 <col:198> 'int' lvalue Var 0x55f1157fb168 'x$w_buff1' 'int'
    |-BinaryOperator 0x55f115802708 <line:806:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55f115802180 <col:3> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55f1158026f0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f1158026c0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55f115802678 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f115802660 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f1158021a0 <col:20> '_Bool' lvalue Var 0x55f1157fb3f0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55f1158026a8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f115802690 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f1158021c0 <col:36> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x55f115802640 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55f115802610 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55f1158023d0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55f1158022f0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55f115802218 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55f115802200 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55f1158021e0 <col:55> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55f1158022d0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55f115802268 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55f115802250 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55f115802230 <col:74> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55f1158022b8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55f1158022a0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55f115802280 <col:93> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55f1158023b0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55f115802348 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55f115802330 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55f115802310 <col:112> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55f115802398 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55f115802380 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55f115802360 <col:131> '_Bool' lvalue Var 0x55f1157fad50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55f1158025f8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55f1158025e0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55f1158023f0 <col:148> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x55f1158025c0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55f115802590 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55f1158024b0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55f115802468 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55f115802450 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55f115802410 <col:166> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55f115802498 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55f115802480 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55f115802430 <col:184> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55f115802548 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55f115802500 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55f1158024d0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55f115802578 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55f115802560 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55f115802528 <col:212> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55f115802cd0 <line:807:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55f115802728 <col:3> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55f115802cb8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f115802c88 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55f115802c40 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f115802c28 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f115802748 <col:20> '_Bool' lvalue Var 0x55f1157fb3f0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55f115802c70 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f115802c58 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f115802768 <col:36> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x55f115802c08 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55f115802bd8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55f115802978 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55f115802898 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55f1158027c0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55f1158027a8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55f115802788 <col:55> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55f115802878 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55f115802810 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55f1158027f8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55f1158027d8 <col:74> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55f115802860 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55f115802848 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55f115802828 <col:93> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55f115802958 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55f1158028f0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55f1158028d8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55f1158028b8 <col:112> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55f115802940 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55f115802928 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55f115802908 <col:131> '_Bool' lvalue Var 0x55f1157fad50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55f115802bc0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55f115802ba8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55f115802998 <col:148> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x55f115802b88 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55f115802b58 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55f115802a58 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55f115802a10 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55f1158029f8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55f1158029b8 <col:166> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55f115802a40 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55f115802a28 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55f1158029d8 <col:184> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55f115802b28 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55f115802aa8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55f115802a78 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55f115802b40 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55f115802b00 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55f115802ad0 <col:219> 'int' 0
    |-BinaryOperator 0x55f115803290 <line:808:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55f115802cf0 <col:3> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55f115803278 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f115803248 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55f115803200 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f1158031e8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f115802d10 <col:20> '_Bool' lvalue Var 0x55f1157fb3f0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55f115803230 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f115803218 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f115802d30 <col:36> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x55f1158031c8 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55f115803198 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55f115802f40 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55f115802e60 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55f115802d88 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55f115802d70 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55f115802d50 <col:55> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55f115802e40 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55f115802dd8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55f115802dc0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55f115802da0 <col:74> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55f115802e28 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55f115802e10 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55f115802df0 <col:93> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55f115802f20 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55f115802eb8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55f115802ea0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55f115802e80 <col:112> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55f115802f08 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55f115802ef0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55f115802ed0 <col:131> '_Bool' lvalue Var 0x55f1157fad50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55f115803180 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55f115803168 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55f115802f60 <col:148> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x55f115803148 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55f115803118 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55f115803038 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55f115802ff0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55f115802fc0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55f115802f80 <col:166> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55f115803020 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55f115803008 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55f115802fa0 <col:184> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55f1158030d0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55f115803088 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55f115803058 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55f115803100 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55f1158030e8 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55f1158030b0 <col:212> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55f115803858 <line:809:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55f1158032b0 <col:3> '_Bool' lvalue Var 0x55f1157fad50 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55f115803840 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f115803810 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55f1158037c8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f1158037b0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f1158032d0 <col:20> '_Bool' lvalue Var 0x55f1157fb3f0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55f1158037f8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f1158037e0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f1158032f0 <col:36> '_Bool' lvalue Var 0x55f1157fad50 'x$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x55f115803790 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55f115803760 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55f115803500 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55f115803420 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55f115803348 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55f115803330 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55f115803310 <col:55> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55f115803400 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55f115803398 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55f115803380 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55f115803360 <col:74> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55f1158033e8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55f1158033d0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55f1158033b0 <col:93> '_Bool' lvalue Var 0x55f1157fb1e0 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55f1158034e0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55f115803478 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55f115803460 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55f115803440 <col:112> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55f1158034c8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55f1158034b0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55f115803490 <col:131> '_Bool' lvalue Var 0x55f1157fad50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55f115803748 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55f115803730 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55f115803520 <col:148> '_Bool' lvalue Var 0x55f1157fad50 'x$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x55f115803710 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55f1158036e0 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55f1158035e0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55f115803598 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55f115803580 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55f115803540 <col:166> '_Bool' lvalue Var 0x55f1157fb0e8 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55f1158035c8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55f1158035b0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55f115803560 <col:184> '_Bool' lvalue Var 0x55f1157fab70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55f1158036b0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55f115803630 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55f115803600 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55f1158036c8 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55f115803688 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55f115803658 <col:219> 'int' 0
    |-BinaryOperator 0x55f115803b28 <line:810:3, col:95> '_Bool' '='
    | |-DeclRefExpr 0x55f115803878 <col:3> '_Bool' lvalue Var 0x55f1157fa8e0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55f115803b10 <col:21, col:95> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55f115803af8 <col:21, col:95> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55f115803ad8 <col:22, col:95> 'int'
    |       `-BinaryOperator 0x55f115803ab8 <col:23, col:94> 'int' '&&'
    |         |-BinaryOperator 0x55f115803a20 <col:23, col:66> 'int' '&&'
    |         | |-BinaryOperator 0x55f115803988 <col:23, col:38> 'int' '&&'
    |         | | |-BinaryOperator 0x55f1158038f0 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55f1158038d8 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55f115803898 <col:23> 'int' lvalue Var 0x55f1157fa9e0 'x' 'int'
    |         | | | `-IntegerLiteral 0x55f1158038b8 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x55f115803968 <col:33, col:38> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55f115803950 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55f115803910 <col:33> 'int' lvalue Var 0x55f1157fb2e0 'y' 'int'
    |         | |   `-IntegerLiteral 0x55f115803930 <col:38> 'int' 2
    |         | `-BinaryOperator 0x55f115803a00 <col:43, col:66> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55f1158039e8 <col:43> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55f1158039a8 <col:43> 'int' lvalue Var 0x55f1157fa6b0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x55f1158039c8 <col:66> 'int' 1
    |         `-BinaryOperator 0x55f115803a98 <col:71, col:94> 'int' '=='
    |           |-ImplicitCastExpr 0x55f115803a80 <col:71> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55f115803a40 <col:71> 'int' lvalue Var 0x55f1157fa7d0 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x55f115803a60 <col:94> 'int' 1
    |-BinaryOperator 0x55f115803c58 <line:811:3, col:37> 'int' '='
    | |-DeclRefExpr 0x55f115803b48 <col:3> 'int' lvalue Var 0x55f1157fa9e0 'x' 'int'
    | `-ConditionalOperator 0x55f115803c28 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x55f115803be0 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55f115803bc8 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55f115803b68 <col:7> '_Bool' lvalue Var 0x55f1157faa78 'x$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x55f115803bf8 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f115803b88 <col:25> 'int' lvalue Var 0x55f1157faaf8 'x$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x55f115803c10 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55f115803ba8 <col:37> 'int' lvalue Var 0x55f1157fa9e0 'x' 'int'
    |-BinaryOperator 0x55f115803cf0 <line:812:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x55f115803c78 <col:3> '_Bool' lvalue Var 0x55f1157faa78 'x$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x55f115803cc8 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x55f115803c98 <col:28> 'int' 0
    |-CallExpr 0x55f115803d48 <line:813:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55f115803d30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f115803d10 <col:3> 'void ()' Function 0x55f1157a1410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55f115803dc0 <line:814:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55f115803da8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f115803d68 <col:3> 'void (int)' Function 0x55f1157a10d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55f115803e00 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55f115803de8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55f115803d88 <col:21> '_Bool' lvalue Var 0x55f1157fa8e0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55f115803e38 <line:815:3, col:10>
      `-IntegerLiteral 0x55f115803e18 <col:10> 'int' 0
