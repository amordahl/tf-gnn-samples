TranslationUnitDecl 0x5561e323ff88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5561e3240848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5561e3240520 '__int128'
|-TypedefDecl 0x5561e32408b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5561e3240540 'unsigned __int128'
|-TypedefDecl 0x5561e3240bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5561e3240990 'struct __NSConstantString_tag'
|   `-Record 0x5561e3240910 '__NSConstantString_tag'
|-TypedefDecl 0x5561e3240c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5561e3240c20 'char *'
|   `-BuiltinType 0x5561e3240020 'char'
|-TypedefDecl 0x5561e327fb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5561e3240f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5561e3240d40 'struct __va_list_tag'
|     `-Record 0x5561e3240cc0 '__va_list_tag'
|-FunctionDecl 0x5561e327fca0 <pthread-wmm/rfi001_power.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5561e327fbd0 <col:31> col:34 'int'
|-FunctionDecl 0x5561e327fe68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5561e327ff90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5561e32800d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5561e3280048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5561e3280308 <col:40, col:99>
|   |-IfStmt 0x5561e32802d8 <col:42, col:88>
|   | |-UnaryOperator 0x5561e32801b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5561e32801a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5561e3280180 <col:47> 'int' lvalue ParmVar 0x5561e3280048 'expression' 'int'
|   | `-CompoundStmt 0x5561e32802c0 <col:59, col:88>
|   |   `-LabelStmt 0x5561e32802a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5561e3280238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5561e3280220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5561e32801d0 <col:68> 'void () __attribute__((noreturn))' Function 0x5561e327ff90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5561e32802f0 <col:89>
|   `-ReturnStmt 0x5561e32802f8 <col:91>
|-FunctionDecl 0x5561e3280350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5561e3280410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5561e3280790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5561e32804c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5561e3280548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5561e32805c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5561e3280648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5561e3280850 <line:10:22>
|-FunctionDecl 0x5561e32a68a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5561e32808c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5561e3280940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5561e32809c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5561e3280a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5561e32a6960 <line:13:22>
|-FunctionDecl 0x5561e32a6c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5561e32a69d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5561e32a6a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5561e32a6ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5561e32a6cc8 <line:15:22>
|-TypedefDecl 0x5561e32a6d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5561e32400e0 'unsigned char'
|-TypedefDecl 0x5561e32a6da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5561e3240100 'unsigned short'
|-TypedefDecl 0x5561e32a6e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5561e3240120 'unsigned int'
|-TypedefDecl 0x5561e32a6e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5561e3240140 'unsigned long'
|-TypedefDecl 0x5561e32a6ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5561e3240040 'signed char'
|-TypedefDecl 0x5561e32a6f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5561e32400e0 'unsigned char'
|-TypedefDecl 0x5561e32a6fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5561e3240060 'short'
|-TypedefDecl 0x5561e32a7048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5561e3240100 'unsigned short'
|-TypedefDecl 0x5561e32a70b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5561e3240080 'int'
|-TypedefDecl 0x5561e32a7128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5561e3240120 'unsigned int'
|-TypedefDecl 0x5561e32a7198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5561e32400a0 'long'
|-TypedefDecl 0x5561e32a7208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5561e3240140 'unsigned long'
|-TypedefDecl 0x5561e32a7278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5561e32400a0 'long'
|-TypedefDecl 0x5561e32a72e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5561e3240140 'unsigned long'
|-TypedefDecl 0x5561e32a7358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5561e3240140 'unsigned long'
|-TypedefDecl 0x5561e32a73c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5561e3240120 'unsigned int'
|-TypedefDecl 0x5561e32a7438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5561e3240120 'unsigned int'
|-TypedefDecl 0x5561e32a74a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5561e3240140 'unsigned long'
|-TypedefDecl 0x5561e32a7518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5561e3240140 'unsigned long'
|-TypedefDecl 0x5561e32a7588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5561e3240120 'unsigned int'
|-TypedefDecl 0x5561e32a75f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5561e3240140 'unsigned long'
|-TypedefDecl 0x5561e32a7668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5561e32400a0 'long'
|-TypedefDecl 0x5561e32a76d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5561e32400a0 'long'
|-TypedefDecl 0x5561e32a7748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5561e3240080 'int'
|-RecordDecl 0x5561e32a77a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5561e32a7918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5561e32a79d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5561e32a7970 'struct __fsid_t' sugar
|   `-RecordType 0x5561e32a7820 '__fsid_t'
|     `-Record 0x5561e32a77a0 ''
|-TypedefDecl 0x5561e32a7a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5561e32400a0 'long'
|-TypedefDecl 0x5561e32a7ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5561e3240140 'unsigned long'
|-TypedefDecl 0x5561e32a7b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5561e3240140 'unsigned long'
|-TypedefDecl 0x5561e32a7ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5561e3240120 'unsigned int'
|-TypedefDecl 0x5561e32a7c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5561e32400a0 'long'
|-TypedefDecl 0x5561e32a7c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5561e3240120 'unsigned int'
|-TypedefDecl 0x5561e32a7cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5561e32400a0 'long'
|-TypedefDecl 0x5561e32a7d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5561e3240080 'int'
|-TypedefDecl 0x5561e32a7dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5561e3240080 'int'
|-TypedefDecl 0x5561e32a7e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5561e3240080 'int'
|-TypedefDecl 0x5561e32a7eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5561e32407a0 'void *'
|   `-BuiltinType 0x5561e323ffe0 'void'
|-TypedefDecl 0x5561e32a7f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5561e32400a0 'long'
|-TypedefDecl 0x5561e32a7f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5561e32400a0 'long'
|-TypedefDecl 0x5561e32a8008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5561e32400a0 'long'
|-TypedefDecl 0x5561e32a8078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5561e3240140 'unsigned long'
|-TypedefDecl 0x5561e32a80e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5561e3240140 'unsigned long'
|-TypedefDecl 0x5561e32a8158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5561e3240140 'unsigned long'
|-TypedefDecl 0x5561e32a81c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5561e3240140 'unsigned long'
|-TypedefDecl 0x5561e32a8238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5561e32400a0 'long'
|-TypedefDecl 0x5561e32a82a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5561e32400a0 'long'
|-TypedefDecl 0x5561e32a8318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5561e32400a0 'long'
|-TypedefDecl 0x5561e32a8388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5561e3240140 'unsigned long'
|-TypedefDecl 0x5561e32a8418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5561e32a83e0 '__off64_t' sugar
|   |-Typedef 0x5561e32a76d8 '__off64_t'
|   `-BuiltinType 0x5561e32400a0 'long'
|-TypedefDecl 0x5561e32a8510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5561e32a84d0 '__quad_t *'
|   `-TypedefType 0x5561e32a8470 '__quad_t' sugar
|     |-Typedef 0x5561e32a7278 '__quad_t'
|     `-BuiltinType 0x5561e32400a0 'long'
|-TypedefDecl 0x5561e32a8580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5561e3240c20 'char *'
|   `-BuiltinType 0x5561e3240020 'char'
|-TypedefDecl 0x5561e32a85f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5561e32400a0 'long'
|-TypedefDecl 0x5561e32a8660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5561e3240120 'unsigned int'
|-FunctionDecl 0x5561e32a87a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5561e32a86d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5561e32a8ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5561e32a8ad8 <line:72:3, col:34>
|     `-CallExpr 0x5561e32a8a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5561e32a8a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5561e32a8a10 <col:10> '<builtin fn type>' Function 0x5561e32a8880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5561e32a8ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5561e32a8a30 <col:29> 'unsigned int' lvalue ParmVar 0x5561e32a86d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5561e32a8880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5561e32a8920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5561e32a8990 <col:10> Implicit
| `-ConstAttr 0x5561e32a89e8 <col:10> Implicit
|-FunctionDecl 0x5561e32a8c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5561e32a8b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5561e32a8f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5561e32a8f48 <line:77:3, col:34>
|     `-CallExpr 0x5561e32a8f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5561e32a8ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5561e32a8e78 <col:10> '<builtin fn type>' Function 0x5561e32a8ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5561e32a8f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5561e32a8e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5561e32a8b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5561e32a8ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5561e32a8d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5561e32a8df8 <col:10> Implicit
| `-ConstAttr 0x5561e32a8e50 <col:10> Implicit
|-TypedefDecl 0x5561e32a8f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5561e3240140 'unsigned long'
|-TypedefDecl 0x5561e32a9018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5561e32a8fe0 '__time_t' sugar
|   |-Typedef 0x5561e32a7c18 '__time_t'
|   `-BuiltinType 0x5561e32400a0 'long'
|-RecordDecl 0x5561e32a9070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5561e32a9128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5561e32a91b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5561e32a9248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5561e32a9210 '__pid_t' sugar
|   |-Typedef 0x5561e32a7748 '__pid_t'
|   `-BuiltinType 0x5561e3240080 'int'
|-RecordDecl 0x5561e32a92a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5561e32a9360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5561e32a93b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5561e32a9470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5561e32a94d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5561e3240140 'unsigned long'
|-RecordDecl 0x5561e32a9530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5561e32a97c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5561e32ab8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5561e32a9810 'struct cpu_set_t' sugar
|   `-RecordType 0x5561e32a95b0 'cpu_set_t'
|     `-Record 0x5561e32a9530 ''
|-FunctionDecl 0x5561e32abb88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5561e32ab958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5561e32aba60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5561e32abc38 <line:107:19>
|-FunctionDecl 0x5561e32abe10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5561e32abca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5561e32abeb8 <col:69>
|-FunctionDecl 0x5561e32ac030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5561e32abf20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5561e32ac0d8 <col:64>
|-FunctionDecl 0x5561e32ac398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5561e32ac140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5561e32ac278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5561e32ac448 <line:113:22>
|-FunctionDecl 0x5561e32ac6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5561e32ac4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5561e32ac5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5561e32ac778 <col:88>
|-FunctionDecl 0x5561e32aca98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5561e32ac7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5561e32ac8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5561e32ac950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5561e32acb50 <col:62>
|-FunctionDecl 0x5561e32accc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5561e32acbb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5561e32acd70 <col:63>
|-FunctionDecl 0x5561e32ace98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5561e32acf38 <col:47>
|-FunctionDecl 0x5561e32ad040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5561e32acfa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5561e32ad0e8 <col:69>
|-FunctionDecl 0x5561e32ad1f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5561e32ad158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5561e32ad298 <col:69>
|-FunctionDecl 0x5561e32ad558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5561e32ad300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5561e32ad438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5561e32ad608 <col:88>
|-TypedefDecl 0x5561e32ad698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5561e32ad660 '__clock_t' sugar
|   |-Typedef 0x5561e32a7a58 '__clock_t'
|   `-BuiltinType 0x5561e32400a0 'long'
|-TypedefDecl 0x5561e32ad728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5561e32ad6f0 '__clockid_t' sugar
|   |-Typedef 0x5561e32a7e48 '__clockid_t'
|   `-BuiltinType 0x5561e3240080 'int'
|-TypedefDecl 0x5561e32ad7b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5561e32ad780 '__timer_t' sugar
|   |-Typedef 0x5561e32a7eb8 '__timer_t'
|   `-PointerType 0x5561e32407a0 'void *'
|     `-BuiltinType 0x5561e323ffe0 'void'
|-RecordDecl 0x5561e32ad810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5561e32ad8e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5561e32ad950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5561e32ad9b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5561e32ada20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5561e32ada88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5561e32adaf0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5561e32adb58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5561e32adbc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5561e32adc28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5561e32adc90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5561e32adcf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5561e32add48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5561e32ade18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5561e32ade88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5561e32adf30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5561e32ae100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5561e32ae1a0 <col:45>
|-FunctionDecl 0x5561e32ae380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5561e32ae270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5561e32ae428 <col:54>
|-FunctionDecl 0x5561e32ae628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5561e32ae490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5561e32ae508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5561e32ae6d8 <line:157:22>
| `-ConstAttr 0x5561e32ae730 <col:63>
|-FunctionDecl 0x5561e32af560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5561e32ae828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5561e32af608 <col:56>
|-FunctionDecl 0x5561e32af9b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5561e32af678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5561e32af6f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5561e32af770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5561e32af868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5561e32afa70 <col:54>
|-RecordDecl 0x5561e32afac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5561e32afb78 parent 0x5561e323ff88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5561e32afdd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5561e32afe78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5561e32afee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5561e32aff48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5561e32b0038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5561e32b0158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5561e32b0100 'struct __locale_struct *'
|   `-ElaboratedType 0x5561e32b0090 'struct __locale_struct' sugar
|     `-RecordType 0x5561e32afb50 'struct __locale_struct'
|       `-Record 0x5561e32afac8 '__locale_struct'
|-TypedefDecl 0x5561e32b0208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5561e32b01d0 '__locale_t' sugar
|   |-Typedef 0x5561e32b0158 '__locale_t'
|   `-PointerType 0x5561e32b0100 'struct __locale_struct *'
|     `-ElaboratedType 0x5561e32b0090 'struct __locale_struct' sugar
|       `-RecordType 0x5561e32afb50 'struct __locale_struct'
|         `-Record 0x5561e32afac8 '__locale_struct'
|-FunctionDecl 0x5561e32b0610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5561e32b0278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5561e32b02f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5561e32b0370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5561e32b0400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5561e32b0478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5561e32b06d8 <col:40>
|-FunctionDecl 0x5561e32b08c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5561e32b07a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5561e32b0970 <col:66>
|-FunctionDecl 0x5561e32b0a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5561e32b09d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5561e32b0b28 <col:69>
|-FunctionDecl 0x5561e32b0d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5561e32b0b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5561e32b0c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5561e32b0e08 <col:52>
|-FunctionDecl 0x5561e32b0fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5561e32b0e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5561e32b0f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5561e32b1060 <col:55>
|-FunctionDecl 0x5561e32b11f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5561e32b10e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5561e32b12a0 <col:62>
|-FunctionDecl 0x5561e32b1418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5561e32b1308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5561e32b14c0 <col:60>
|-FunctionDecl 0x5561e32b1718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5561e32b1578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5561e32b15f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5561e32b17c8 <col:44>
|-FunctionDecl 0x5561e32b19d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5561e32b1830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5561e32b18b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5561e32b1a88 <col:49>
|-VarDecl 0x5561e32b1b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5561e32b1c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5561e32b1c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5561e32b1d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5561e32b1e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5561e32b1f20 <col:42>
|-VarDecl 0x5561e32b1f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5561e32b2010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5561e32b2198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5561e32b2088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5561e32b2240 <col:57>
|-FunctionDecl 0x5561e32b2350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5561e32b22c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5561e32b23f8 <col:56>
|-FunctionDecl 0x5561e32b3540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5561e32b2478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5561e32b35e8 <col:59>
|-FunctionDecl 0x5561e32b36f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5561e32b3658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5561e32b3798 <col:48>
| `-ConstAttr 0x5561e32b37f0 <col:89>
|-FunctionDecl 0x5561e32b3a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5561e32b38a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5561e32b3938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5561e32b3cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5561e32b3b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5561e32b3bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5561e32b3d68 <col:88>
|-FunctionDecl 0x5561e32b3f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5561e32b3dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5561e32b3e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5561e32b3fb0 <col:88>
|-FunctionDecl 0x5561e32b41c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5561e32b4018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5561e32b40a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5561e32b4278 <line:208:22>
|-FunctionDecl 0x5561e32b45e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5561e32b42e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5561e32b4360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5561e32b43f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5561e32b4480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5561e32b48e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5561e32b46e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5561e32b47c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5561e32b4998 <col:85>
|-FunctionDecl 0x5561e32b4d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5561e32b4a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5561e32b4b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5561e32b4c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5561e32b4e40 <col:52>
|-FunctionDecl 0x5561e32b4fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5561e32b4ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5561e32b5060 <col:61>
|-FunctionDecl 0x5561e32b5560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5561e32b50c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5561e32b5148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5561e32b5278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5561e32b5368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5561e32b5620 <col:62>
|-FunctionDecl 0x5561e32b5838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5561e32b5688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5561e32b5718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5561e32b58e8 <line:221:22>
|-FunctionDecl 0x5561e32b59e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5561e32b5950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5561e32b5a90 <col:65>
|-TypedefDecl 0x5561e32b5b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5561e3240140 'unsigned long'
|-RecordDecl 0x5561e32b5b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5561e32b5ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5561e32b5d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5561e32b5db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5561e32b5d60 'union pthread_attr_t' sugar
|   `-RecordType 0x5561e32b5be0 'union pthread_attr_t'
|     `-Record 0x5561e32b5b58 'pthread_attr_t'
|-RecordDecl 0x5561e32b5e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5561e32b5f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5561e32b6000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5561e32b60b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5561e32b6050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5561e32b5e90 'struct __pthread_internal_list'
|     `-Record 0x5561e32b5e10 '__pthread_internal_list'
|-RecordDecl 0x5561e32b6120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5561e32b61c8 parent 0x5561e323ff88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5561e32b62a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5561e32b6308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5561e32b6370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5561e32b63d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5561e32b6440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5561e32b64a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5561e32ba580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5561e32ba630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5561e32ba720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5561e32ba788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5561e32ba910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5561e32ba8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5561e32b61a0 'pthread_mutex_t'
|     `-Record 0x5561e32b6120 ''
|-RecordDecl 0x5561e32ba980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5561e32baac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5561e32bab28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5561e32babe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5561e32bab80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5561e32baa00 'pthread_mutexattr_t'
|     `-Record 0x5561e32ba980 ''
|-RecordDecl 0x5561e32bac50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5561e32bacf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5561e32badc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5561e32bae28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5561e32bae90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5561e32baef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5561e32baf60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5561e32bafc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5561e32bb030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5561e32bb098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5561e32bb150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi001_power.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/rfi001_power.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5561e32bb240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5561e32bb2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5561e32bb3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5561e32bb380 'union pthread_cond_t' sugar
|   `-RecordType 0x5561e32bacd0 'pthread_cond_t'
|     `-Record 0x5561e32bac50 ''
|-RecordDecl 0x5561e32bb450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5561e32bb590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5561e32bb5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5561e32bb6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5561e32bb650 'union pthread_condattr_t' sugar
|   `-RecordType 0x5561e32bb4d0 'pthread_condattr_t'
|     `-Record 0x5561e32bb450 ''
|-TypedefDecl 0x5561e32bb738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5561e3240120 'unsigned int'
|-TypedefDecl 0x5561e32bb7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5561e3240080 'int'
|-RecordDecl 0x5561e32bb800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5561e32bb8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5561e32bb970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5561e32bb9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5561e32bba40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5561e32bbaa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5561e32bbb10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5561e32bbb78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5561e32bbbe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5561e32bbc48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5561e32bbcb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5561e32bbd18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5561e32bbd80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5561e32bbe30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi001_power.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/rfi001_power.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5561e32bbed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5561e32bbf40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5561e32bc090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5561e32bc030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5561e32bb880 'pthread_rwlock_t'
|     `-Record 0x5561e32bb800 ''
|-RecordDecl 0x5561e32bc100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5561e32bc240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5561e32bc2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5561e32bc360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5561e32bc300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5561e32bc180 'pthread_rwlockattr_t'
|     `-Record 0x5561e32bc100 ''
|-TypedefDecl 0x5561e32bc3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5561e3240084 'volatile int' volatile
|   `-BuiltinType 0x5561e3240080 'int'
|-RecordDecl 0x5561e32bc440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5561e32be5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5561e32be618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5561e32be6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5561e32be670 'union pthread_barrier_t' sugar
|   `-RecordType 0x5561e32bc4c0 'pthread_barrier_t'
|     `-Record 0x5561e32bc440 ''
|-RecordDecl 0x5561e32be740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5561e32be840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5561e32be8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5561e32be960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5561e32be900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5561e32be7c0 'pthread_barrierattr_t'
|     `-Record 0x5561e32be740 ''
|-TypedefDecl 0x5561e32bea78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5561e32bea10 'long [8]' 8 
|   `-BuiltinType 0x5561e32400a0 'long'
|-EnumDecl 0x5561e32bead0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5561e32beb98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5561e32bebe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5561e32bec38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5561e32bed08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5561e32bed58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5561e32beda8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5561e32bedf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5561e32bee80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5561e32bee68 <col:26> 'int'
| |   `-DeclRefExpr 0x5561e32bee48 <col:26> 'int' EnumConstant 0x5561e32bed08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5561e32bef08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5561e32beef0 <col:29> 'int'
| |   `-DeclRefExpr 0x5561e32beed0 <col:29> 'int' EnumConstant 0x5561e32bed58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5561e32bef90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5561e32bef78 <col:30> 'int'
| |   `-DeclRefExpr 0x5561e32bef58 <col:30> 'int' EnumConstant 0x5561e32beda8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5561e32bf018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5561e32bf000 <col:27> 'int'
|     `-DeclRefExpr 0x5561e32befe0 <col:27> 'int' EnumConstant 0x5561e32bee80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5561e32bf068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5561e32bf138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5561e32bf1c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5561e32bf1a8 <col:30> 'int'
| |   `-DeclRefExpr 0x5561e32bf188 <col:30> 'int' EnumConstant 0x5561e32bf138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5561e32bf210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5561e32bf298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5561e32bf280 <col:29> 'int'
|     `-DeclRefExpr 0x5561e32bf260 <col:29> 'int' EnumConstant 0x5561e32bf210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5561e32bf2e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5561e32bf3b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5561e32bf408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5561e32bf458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5561e32bf4a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5561e32bf5c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5561e32bf610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5561e32bf660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5561e32bf6e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5561e32bf6d0 <col:31> 'int'
|     `-DeclRefExpr 0x5561e32bf6b0 <col:31> 'int' EnumConstant 0x5561e32bf5c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5561e32bf738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5561e32bf808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5561e32bf858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5561e32bf8a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5561e32bf978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5561e32bf9c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5561e32bfa18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5561e32bfae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5561e32bfb38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5561e32bfb88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5561e32bfdc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5561e32bfe30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5561e32bfe98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5561e32bffb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5561e32c0008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5561e32c00d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5561e32c0128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5561e32c0178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5561e32c0248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5561e32c0298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5561e32c08f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5561e32c0390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5561e32c04a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5561e32c06e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5561e32c0760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5561e32c09b8 <col:47>
| |-NonNullAttr 0x5561e32c0a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x5561e32c0a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5561e32c0b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5561e32c0aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5561e32c0dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5561e32c0c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5561e32c0ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5561e32c0f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5561e32c0e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5561e32c1040 <col:60>
|-FunctionDecl 0x5561e32c1190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5561e32c1230 <col:54>
| `-ConstAttr 0x5561e32c1288 <col:95>
|-FunctionDecl 0x5561e32c1458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5561e32c12c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5561e32c1338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5561e32c1508 <line:394:19>
| `-ConstAttr 0x5561e32c1560 <col:60>
|-FunctionDecl 0x5561e32c1f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5561e32c1e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5561e32c2010 <col:71>
| `-NonNullAttr 0x5561e32c2068 <col:112, col:126> 1
|-FunctionDecl 0x5561e32c2170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5561e32c20b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5561e32c2218 <line:397:22>
| `-NonNullAttr 0x5561e32c2270 <col:63, col:77> 1
|-FunctionDecl 0x5561e32c2498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5561e32c22b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5561e32c2338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5561e32c2548 <line:400:22>
| `-NonNullAttr 0x5561e32c25a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5561e32c27a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5561e32c25e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5561e32c2668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5561e32c2858 <line:403:22>
| `-NonNullAttr 0x5561e32c28b0 <col:63, col:77> 1
|-FunctionDecl 0x5561e32c2b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5561e32c28f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5561e32c29a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5561e32c2bb8 <line:406:22>
| `-NonNullAttr 0x5561e32c2c10 <col:63, col:80> 1 2
|-FunctionDecl 0x5561e32c3e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5561e32c2c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5561e32c2cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5561e32c3ef8 <line:409:22>
| `-NonNullAttr 0x5561e32c3f50 <col:63, col:77> 1
|-FunctionDecl 0x5561e32c4188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5561e32c3f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5561e32c4028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5561e32c4238 <line:412:22>
| `-NonNullAttr 0x5561e32c4290 <col:63, col:80> 1 2
|-FunctionDecl 0x5561e32c44c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5561e32c42d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5561e32c4368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5561e32c4578 <col:37>
| `-NonNullAttr 0x5561e32c45d0 <col:78, col:95> 1 2
|-FunctionDecl 0x5561e32c47b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5561e32c4618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5561e32c4698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5561e32c4868 <line:418:22>
| `-NonNullAttr 0x5561e32c48c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5561e32c4a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5561e32c4908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5561e32c4988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5561e32c4af8 <line:420:22>
| `-NonNullAttr 0x5561e32c4b50 <col:63, col:77> 1
|-FunctionDecl 0x5561e32c4cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5561e32c4b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5561e32c4c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5561e32c4da8 <line:423:22>
| `-NonNullAttr 0x5561e32c5e30 <col:63, col:80> 1 2
|-FunctionDecl 0x5561e32c5fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5561e32c5e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5561e32c5ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5561e32c6068 <line:426:22>
| `-NonNullAttr 0x5561e32c60c0 <col:63, col:77> 1
|-FunctionDecl 0x5561e32c6268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5561e32c6108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5561e32c6188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5561e32c6318 <line:429:22>
| `-NonNullAttr 0x5561e32c6370 <col:63, col:80> 1 2
|-FunctionDecl 0x5561e32c64f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5561e32c63b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5561e32c6438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5561e32c65a8 <line:431:22>
| `-NonNullAttr 0x5561e32c6600 <col:63, col:77> 1
|-FunctionDecl 0x5561e32c6828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5561e32c6648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5561e32c66c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5561e32c68d8 <line:434:22>
| |-NonNullAttr 0x5561e32c6930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5561e32c6968 <col:100> "" ""
|-FunctionDecl 0x5561e32c6b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5561e32c69b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5561e32c6a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5561e32c6c28 <line:437:22>
| |-NonNullAttr 0x5561e32c6c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x5561e32c6cb8 <col:97> "" ""
|-FunctionDecl 0x5561e32c6eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5561e32c6d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5561e32c6d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5561e32c6f68 <line:440:22>
| `-NonNullAttr 0x5561e32c6fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x5561e32c7140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5561e32c7008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5561e32c7080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5561e32c71f0 <line:443:22>
| `-NonNullAttr 0x5561e32c7248 <col:63, col:77> 1
|-FunctionDecl 0x5561e32c7538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5561e32c7298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5561e32c7318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5561e32c7390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5561e32c75f0 <line:447:22>
| `-NonNullAttr 0x5561e32c7648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5561e32c78f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5561e32c76a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5561e32c7720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5561e32c7798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5561e32c79b0 <col:43>
| `-NonNullAttr 0x5561e32c7a08 <col:84, col:98> 1
|-FunctionDecl 0x5561e32c7cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5561e32c7a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5561e32c7ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5561e32c7b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5561e32c7d80 <line:452:22>
| `-NonNullAttr 0x5561e32c7dd8 <col:63, col:77> 3
|-FunctionDecl 0x5561e32c80e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5561e32c7e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5561e32c7ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5561e32c7f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5561e32c81a0 <line:456:22>
| `-NonNullAttr 0x5561e32c81f8 <col:63, col:80> 2 3
|-FunctionDecl 0x5561e32c83e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5561e32c8248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5561e32c82c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5561e32c8498 <line:458:22>
|-FunctionDecl 0x5561e32c8868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5561e32c8560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5561e32c8700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5561e32c8918 <col:52, col:69> 1 2
|-FunctionDecl 0x5561e32c8ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5561e32c89a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5561e32c8a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5561e32c8ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5561e32c8b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5561e32c8c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5561e32c8e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5561e32c8d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5561e32c8fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5561e32c9040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5561e32c90e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5561e32c91d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5561e32c9240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5561e32c9410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/rfi001_power.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5561e32c9508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5561e32c95c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5561e32c9560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5561e32c90c0 '__pthread_unwind_buf_t'
| |   `-Record 0x5561e32c9040 ''
| `-AlignedAttr 0x5561e32c9618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5561e32c9690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5561e32c97f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5561e32c9858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5561e32c98c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5561e32c9928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5561e32c9b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5561e32c9a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5561e32c9c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5561e32c9be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5561e32c9e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5561e32c9d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5561e32c9f18 <line:487:22>
|-RecordDecl 0x5561e32c9f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5561e32ca288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5561e32ca0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5561e32ca168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5561e32ca338 <col:86>
| `-ReturnsTwiceAttr 0x5561e32ca390 <col:12> Implicit
|-FunctionDecl 0x5561e32ca6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5561e32ca460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5561e32ca570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5561e32ca768 <line:493:22>
| `-NonNullAttr 0x5561e32ca7c0 <col:63, col:77> 1
|-FunctionDecl 0x5561e32ca938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5561e32ca808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5561e32ca9e0 <line:495:22>
| `-NonNullAttr 0x5561e32caa38 <col:63, col:77> 1
|-FunctionDecl 0x5561e32cab40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5561e32caa88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5561e32cabe8 <line:497:22>
| `-NonNullAttr 0x5561e32cac40 <col:52, col:66> 1
|-FunctionDecl 0x5561e32cad40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5561e32cac88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5561e32cade8 <line:499:22>
| `-NonNullAttr 0x5561e32cae40 <col:52, col:66> 1
|-FunctionDecl 0x5561e32cb088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5561e32cae98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5561e32caf28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5561e32cb138 <col:36>
| `-NonNullAttr 0x5561e32cb190 <col:66, col:83> 1 2
|-FunctionDecl 0x5561e32cb290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5561e32cb1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5561e32cb338 <line:504:22>
| `-NonNullAttr 0x5561e32cb390 <col:52, col:66> 1
|-FunctionDecl 0x5561e32cb628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5561e32cb440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5561e32cb4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5561e32cb6d8 <line:508:22>
| `-NonNullAttr 0x5561e32cb730 <col:63, col:80> 1 2
|-FunctionDecl 0x5561e32cb9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5561e32cb778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5561e32cb7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5561e32cb878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5561e32cbab0 <line:512:22>
| `-NonNullAttr 0x5561e32cbb08 <col:63, col:80> 1 3
|-FunctionDecl 0x5561e32cbc10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5561e32cbb58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5561e32cbcb8 <line:514:22>
| `-NonNullAttr 0x5561e32cbd10 <col:63, col:77> 1
|-FunctionDecl 0x5561e32cbf38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5561e32cbdc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5561e32cbfe0 <line:516:22>
| `-NonNullAttr 0x5561e32cc038 <col:63, col:77> 1
|-FunctionDecl 0x5561e32cc140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5561e32cc088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5561e32cc1e8 <line:518:22>
| `-NonNullAttr 0x5561e32cc240 <col:63, col:77> 1
|-FunctionDecl 0x5561e32cc468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5561e32cc288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5561e32cc308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5561e32cc518 <line:522:22>
| `-NonNullAttr 0x5561e32cc570 <col:63, col:80> 1 2
|-FunctionDecl 0x5561e32cc778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5561e32cc5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5561e32cc638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5561e32cc828 <line:525:22>
| `-NonNullAttr 0x5561e32cc880 <col:63, col:77> 1
|-FunctionDecl 0x5561e32cca28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5561e32cc8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5561e32cc948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5561e32ccad8 <line:528:22>
| `-NonNullAttr 0x5561e32ccb30 <col:63, col:80> 1 2
|-FunctionDecl 0x5561e32cccb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5561e32ccb78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5561e32ccbf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5561e32ccd68 <line:530:22>
| `-NonNullAttr 0x5561e32ccdc0 <col:63, col:77> 1
|-FunctionDecl 0x5561e32cdf90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5561e32cce08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5561e32cdeb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5561e32ce040 <line:534:22>
| `-NonNullAttr 0x5561e32ce098 <col:63, col:80> 1 2
|-FunctionDecl 0x5561e32ce228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5561e32ce0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5561e32ce168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5561e32ce2d8 <line:537:22>
| `-NonNullAttr 0x5561e32ce330 <col:63, col:77> 1
|-FunctionDecl 0x5561e32ce4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5561e32ce378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5561e32ce3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5561e32ce588 <line:541:22>
| `-NonNullAttr 0x5561e32ce5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5561e32ce768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5561e32ce628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5561e32ce6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5561e32ce818 <line:544:22>
| `-NonNullAttr 0x5561e32ce870 <col:63, col:77> 1
|-FunctionDecl 0x5561e32cea58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5561e32ce8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5561e32ce938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5561e32ceb08 <line:547:22>
| `-NonNullAttr 0x5561e32ceb60 <col:63, col:80> 1 2
|-FunctionDecl 0x5561e32cece8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5561e32ceba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5561e32cec28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5561e32ced98 <line:550:22>
| `-NonNullAttr 0x5561e32cedf0 <col:63, col:77> 1
|-FunctionDecl 0x5561e32d0168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5561e32cff10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5561e32d0020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5561e32d0218 <col:29>
| `-NonNullAttr 0x5561e32d0270 <col:70, col:84> 1
|-FunctionDecl 0x5561e32d03e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5561e32d02b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5561e32d0490 <line:555:22>
| `-NonNullAttr 0x5561e32d04e8 <col:63, col:77> 1
|-FunctionDecl 0x5561e32d05f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5561e32d0538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5561e32d0698 <line:557:22>
| `-NonNullAttr 0x5561e32d06f0 <col:52, col:66> 1
|-FunctionDecl 0x5561e32d07f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5561e32d0738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5561e32d0898 <line:559:19>
| `-NonNullAttr 0x5561e32d08f0 <col:49, col:63> 1
|-FunctionDecl 0x5561e32d0b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5561e32d0938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5561e32d09c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5561e32d0bd8 <col:39>
| `-NonNullAttr 0x5561e32d0c30 <col:69, col:86> 1 2
|-FunctionDecl 0x5561e32d0d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5561e32d0c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5561e32d0dd8 <line:564:22>
| `-NonNullAttr 0x5561e32d0e30 <col:52, col:66> 1
|-FunctionDecl 0x5561e32d0f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5561e32d0ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5561e32d1040 <line:566:22>
| `-NonNullAttr 0x5561e32d1098 <col:52, col:66> 1
|-FunctionDecl 0x5561e32d1258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5561e32d10e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5561e32d1178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5561e32d1308 <col:39>
| `-NonNullAttr 0x5561e32d1360 <col:69, col:86> 1 2
|-FunctionDecl 0x5561e32d1460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5561e32d13a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5561e32d1508 <line:571:22>
| `-NonNullAttr 0x5561e32d1560 <col:52, col:66> 1
|-FunctionDecl 0x5561e32d1748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5561e32d1610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5561e32d17f0 <line:573:22>
| `-NonNullAttr 0x5561e32d1848 <col:63, col:77> 1
|-FunctionDecl 0x5561e32d1950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5561e32d1898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5561e32d19f8 <line:575:22>
| `-NonNullAttr 0x5561e32d1a50 <col:63, col:77> 1
|-FunctionDecl 0x5561e32d1c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5561e32d1a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5561e32d1b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5561e32d1d28 <line:579:22>
| `-NonNullAttr 0x5561e32d1d80 <col:63, col:80> 1 2
|-FunctionDecl 0x5561e32d1fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5561e32d1dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5561e32d1e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5561e32d2058 <line:582:22>
| `-NonNullAttr 0x5561e32d20b0 <col:63, col:77> 1
|-FunctionDecl 0x5561e32d2258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5561e32d20f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5561e32d2178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5561e32d2308 <line:586:22>
| `-NonNullAttr 0x5561e32d2360 <col:63, col:80> 1 2
|-FunctionDecl 0x5561e32d24e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5561e32d23a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5561e32d2428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5561e32d2598 <col:36>
| `-NonNullAttr 0x5561e32d25f0 <col:77, col:91> 1
|-FunctionDecl 0x5561e32d2928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5561e32d26d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5561e32d27e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5561e32d29d8 <line:591:22>
| `-NonNullAttr 0x5561e32d2a30 <col:63, col:77> 1
|-FunctionDecl 0x5561e32d2ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5561e32d2a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5561e32d2c50 <line:593:22>
| `-NonNullAttr 0x5561e32d2ca8 <col:63, col:77> 1
|-FunctionDecl 0x5561e32d2db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5561e32d2cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5561e32d2e58 <line:595:22>
| `-NonNullAttr 0x5561e32d2eb0 <col:52, col:66> 1
|-FunctionDecl 0x5561e32d2fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5561e32d2f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5561e32d3070 <line:597:22>
| `-NonNullAttr 0x5561e32d30c8 <col:52, col:66> 1
|-FunctionDecl 0x5561e32d32f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5561e32d3118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5561e32d3190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5561e32d33a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5561e32d36d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5561e32d3428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5561e32d34a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5561e32d3530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5561e32d3790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5561e32d39a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5561e32d3870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5561e32d3a50 <line:606:22>
| `-NonNullAttr 0x5561e32d3aa8 <col:63, col:77> 1
|-FunctionDecl 0x5561e32d3bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5561e32d3af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5561e32d3c58 <line:608:22>
| `-NonNullAttr 0x5561e32d3cb0 <col:63, col:77> 1
|-FunctionDecl 0x5561e32d3f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5561e32d3cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5561e32d3d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5561e32d3fc0 <line:612:22>
| `-NonNullAttr 0x5561e32d4018 <col:63, col:80> 1 2
|-FunctionDecl 0x5561e32d4228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5561e32d4068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5561e32d40e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5561e32d42d8 <col:37>
| `-NonNullAttr 0x5561e32d4330 <col:78, col:92> 1
|-FunctionDecl 0x5561e32d4548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5561e32d4378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5561e32d4420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5561e32d45f8 <line:618:22>
| `-NonNullAttr 0x5561e32d4650 <col:63, col:80> 1 2
|-FunctionDecl 0x5561e32d4818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5561e32d4698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5561e32d4710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5561e32d48c8 <line:621:22>
| `-NonNullAttr 0x5561e32d4920 <col:63, col:77> 1
|-FunctionDecl 0x5561e32d4bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5561e32d4a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5561e32d4a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5561e32d4c78 <line:623:22>
| `-NonNullAttr 0x5561e32d4cd0 <col:63, col:77> 1
|-FunctionDecl 0x5561e32d4e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5561e32d4d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5561e32d4f20 <line:625:22>
| `-NonNullAttr 0x5561e32d4f78 <col:63, col:77> 1
|-FunctionDecl 0x5561e32d5080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5561e32d4fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5561e32d5128 <line:627:22>
| `-NonNullAttr 0x5561e32d5180 <col:52, col:66> 1
|-FunctionDecl 0x5561e32d5280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5561e32d51c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5561e32d5328 <line:629:22>
| `-NonNullAttr 0x5561e32d5380 <col:52, col:66> 1
|-FunctionDecl 0x5561e32d5480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5561e32d53c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5561e32d5528 <line:631:22>
| `-NonNullAttr 0x5561e32d5580 <col:52, col:66> 1
|-FunctionDecl 0x5561e32d5958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5561e32d5660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5561e32d5770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5561e32d57f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5561e32d5a10 <line:635:22>
| `-NonNullAttr 0x5561e32d5a68 <col:63, col:77> 1
|-FunctionDecl 0x5561e32d5be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5561e32d5ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5561e32d5c90 <line:637:22>
| `-NonNullAttr 0x5561e32d5ce8 <col:63, col:77> 1
|-FunctionDecl 0x5561e32d5df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5561e32d5d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5561e32d5e98 <line:639:22>
| `-NonNullAttr 0x5561e32d5ef0 <col:52, col:66> 1
|-FunctionDecl 0x5561e32d60e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5561e32d5fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5561e32d6190 <line:641:22>
| `-NonNullAttr 0x5561e32d61e8 <col:63, col:77> 1
|-FunctionDecl 0x5561e32d62f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5561e32d6238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5561e32d6398 <line:643:22>
| `-NonNullAttr 0x5561e32d63f0 <col:63, col:77> 1
|-FunctionDecl 0x5561e32d6618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5561e32d6438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5561e32d64b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5561e32d66c8 <line:647:22>
| `-NonNullAttr 0x5561e32d6720 <col:63, col:80> 1 2
|-FunctionDecl 0x5561e32d6928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5561e32d6768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5561e32d67e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5561e32d69d8 <line:650:22>
| `-NonNullAttr 0x5561e32d6a30 <col:63, col:77> 1
|-FunctionDecl 0x5561e32d6d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5561e32d6b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5561e32d6c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5561e32d6e28 <line:653:22>
| `-NonNullAttr 0x5561e32d6e80 <col:63, col:77> 1
|-FunctionDecl 0x5561e32d6fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5561e32d6ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5561e32d7090 <col:69>
|-FunctionDecl 0x5561e32d7208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5561e32d70f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5561e32d72b0 <col:72>
|-FunctionDecl 0x5561e32d74e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5561e32d7318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5561e32d73c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5561e32d7598 <col:44>
|-FunctionDecl 0x5561e32d77b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5561e32d7600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5561e32d7678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5561e32d7868 <line:660:22>
| `-NonNullAttr 0x5561e32d78c0 <col:63, col:77> 2
|-FunctionDecl 0x5561e32d7d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5561e32d79a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5561e32d7ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5561e32d7bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5561e32d7dc0 <col:47>
|-FunctionDecl 0x5561e32d8f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5561e32d7e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5561e32d90b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5561e32d9020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5561e32d9180 <line:667:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5561e32d9240 <line:668:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5561e32d9300 <line:669:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5561e32d93b8 <line:670:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5561e32d9438 prev 0x5561e32d93b8 <line:671:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5561e32d94a0 <col:24> 'int' 0
|-VarDecl 0x5561e32d94d8 <line:672:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5561e32d9558 prev 0x5561e32d94d8 <line:673:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5561e32d95c0 <col:27> 'int' 0
|-VarDecl 0x5561e32d95f8 <line:674:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x5561e32d9678 prev 0x5561e32d95f8 <line:675:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x5561e32d96e0 <col:27> 'int' 0
|-VarDecl 0x5561e32d9710 <line:676:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5561e32d9788 <line:677:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5561e32d9808 <line:678:1, col:5> col:5 used x 'int'
|-VarDecl 0x5561e32d9888 prev 0x5561e32d9808 <line:679:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5561e32d98f0 <col:9> 'int' 0
|-VarDecl 0x5561e32d9920 <line:680:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x5561e32d99a0 <line:681:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x5561e32d9a18 <line:682:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x5561e32d9a90 <line:683:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x5561e32d9b08 <line:684:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x5561e32d9b80 <line:685:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x5561e32d9bf8 <line:686:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x5561e32d9c70 <line:687:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x5561e32d9ce8 <line:688:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x5561e32d9d68 <line:689:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x5561e32d9de8 <line:690:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x5561e32d9e60 <line:691:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x5561e32d9ee0 <line:692:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x5561e32d9f70 <line:693:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x5561e32d9ff0 <line:694:1, col:5> col:5 used y 'int'
|-VarDecl 0x5561e32da070 prev 0x5561e32d9ff0 <line:695:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5561e32da0d8 <col:9> 'int' 0
|-VarDecl 0x5561e32da110 <line:696:1, col:5> col:5 used z 'int'
|-VarDecl 0x5561e32da190 prev 0x5561e32da110 <line:697:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5561e32da1f8 <col:9> 'int' 0
|-VarDecl 0x5561e32da228 <line:698:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5561e32da2a0 <line:699:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5561e32da3b8 prev 0x5561e32d8f60 <line:700:1, line:727:1> line:700:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5561e32da320 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5561e32dbb58 <line:701:1, line:727:1>
|   |-CallExpr 0x5561e32da4c8 <line:702:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5561e32da4b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5561e32da460 <col:3> 'void ()' Function 0x5561e3280350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5561e32da540 <line:703:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5561e32da4e8 <col:3> 'int' lvalue Var 0x5561e32d9ee0 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5561e32da528 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5561e32da508 <col:15> 'int' lvalue Var 0x5561e32d9de8 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5561e32da5a0 <line:704:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5561e32da560 <col:3> 'int' lvalue Var 0x5561e32d9de8 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x5561e32da580 <col:15> 'int' 1
|   |-BinaryOperator 0x5561e32da618 <line:705:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5561e32da5c0 <col:3> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5561e32da600 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5561e32da5e0 <col:20> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5561e32da6b0 <line:706:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5561e32da638 <col:3> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5561e32da688 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5561e32da658 <col:27> 'int' 1
|   |-CallExpr 0x5561e32da838 <line:707:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5561e32da820 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5561e32da6d0 <col:3> 'void (int)' Function 0x5561e32800d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5561e32da7d0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5561e32da7b0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5561e32da790 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5561e32da748 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5561e32da730 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5561e32da6f0 <col:23> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5561e32da778 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5561e32da760 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5561e32da710 <col:41> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5561e32da8b8 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5561e32da860 <col:3> '_Bool' lvalue Var 0x5561e32d9b80 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5561e32da8a0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5561e32da880 <col:20> '_Bool' lvalue Var 0x5561e32d9a18 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5561e32da930 <line:709:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5561e32da8d8 <col:3> '_Bool' lvalue Var 0x5561e32d9bf8 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5561e32da918 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5561e32da8f8 <col:20> '_Bool' lvalue Var 0x5561e32d9a90 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5561e32da9a8 <line:710:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5561e32da950 <col:3> '_Bool' lvalue Var 0x5561e32d9c70 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5561e32da990 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5561e32da970 <col:20> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5561e32daa40 <line:711:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5561e32da9c8 <col:3> '_Bool' lvalue Var 0x5561e32d9a90 'x$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x5561e32daa18 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5561e32da9e8 <col:27> 'int' 1
|   |-CallExpr 0x5561e32daa98 <line:712:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5561e32daa80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5561e32daa60 <col:3> 'void ()' Function 0x5561e3280410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5561e32daaf0 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5561e32daad8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5561e32daab8 <col:3> 'void ()' Function 0x5561e3280350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5561e32dab50 <line:714:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5561e32dab10 <col:3> 'int' lvalue Var 0x5561e32da070 'y' 'int'
|   | `-IntegerLiteral 0x5561e32dab30 <col:7> 'int' 1
|   |-CallExpr 0x5561e32daba8 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5561e32dab90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5561e32dab70 <col:3> 'void ()' Function 0x5561e3280410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5561e32dac00 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5561e32dabe8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5561e32dabc8 <col:3> 'void ()' Function 0x5561e3280350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5561e32daee8 <line:717:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5561e32dac20 <col:3> 'int' lvalue Var 0x5561e32d9888 'x' 'int'
|   | `-ConditionalOperator 0x5561e32daeb8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5561e32dace0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5561e32dac98 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5561e32dac80 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5561e32dac40 <col:7> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5561e32dacc8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5561e32dacb0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5561e32dac60 <col:25> '_Bool' lvalue Var 0x5561e32d9a90 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5561e32daea0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5561e32dad00 <col:42> 'int' lvalue Var 0x5561e32d9de8 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5561e32dae80 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5561e32dae50 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5561e32dadc0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5561e32dad78 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5561e32dad60 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5561e32dad20 <col:55> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5561e32dada8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5561e32dad90 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5561e32dad40 <col:73> '_Bool' lvalue Var 0x5561e32d9bf8 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5561e32dae20 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5561e32dade0 <col:90> 'int' lvalue Var 0x5561e32d9ee0 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5561e32dae38 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5561e32dae00 <col:102> 'int' lvalue Var 0x5561e32d9888 'x' 'int'
|   |-BinaryOperator 0x5561e32db108 <line:718:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5561e32daf08 <col:3> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5561e32db0f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5561e32db0c0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5561e32dafe0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5561e32daf98 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5561e32daf80 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5561e32daf28 <col:20> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5561e32dafc8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5561e32dafb0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5561e32daf48 <col:38> '_Bool' lvalue Var 0x5561e32d9a90 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5561e32db078 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5561e32db030 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5561e32db000 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5561e32db0a8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5561e32db090 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5561e32db058 <col:66> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5561e32db3f0 <line:719:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5561e32db128 <col:3> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5561e32db3d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5561e32db3a8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5561e32db2c8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5561e32db1e8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5561e32db1a0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5561e32db188 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5561e32db148 <col:20> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5561e32db1d0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5561e32db1b8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5561e32db168 <col:38> '_Bool' lvalue Var 0x5561e32d9a90 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5561e32db2a8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5561e32db260 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5561e32db248 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5561e32db208 <col:56> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5561e32db290 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5561e32db278 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5561e32db228 <col:74> '_Bool' lvalue Var 0x5561e32d9bf8 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5561e32db360 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5561e32db318 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5561e32db2e8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5561e32db390 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5561e32db378 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5561e32db340 <col:102> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5561e32db5f8 <line:720:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5561e32db410 <col:3> '_Bool' lvalue Var 0x5561e32d9a90 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5561e32db5e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5561e32db5b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5561e32db4d0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5561e32db488 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5561e32db470 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5561e32db430 <col:20> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5561e32db4b8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5561e32db4a0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5561e32db450 <col:38> '_Bool' lvalue Var 0x5561e32d9a90 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5561e32db568 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5561e32db520 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5561e32db4f0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5561e32db598 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5561e32db580 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5561e32db548 <col:66> '_Bool' lvalue Var 0x5561e32d9a90 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5561e32db8e0 <line:721:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5561e32db618 <col:3> '_Bool' lvalue Var 0x5561e32d9bf8 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5561e32db8c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5561e32db898 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5561e32db7b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5561e32db6d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5561e32db690 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5561e32db678 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5561e32db638 <col:20> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5561e32db6c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5561e32db6a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5561e32db658 <col:38> '_Bool' lvalue Var 0x5561e32d9a90 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5561e32db798 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5561e32db750 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5561e32db738 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5561e32db6f8 <col:56> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5561e32db780 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5561e32db768 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5561e32db718 <col:74> '_Bool' lvalue Var 0x5561e32d9bf8 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5561e32db850 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5561e32db808 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5561e32db7d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5561e32db880 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5561e32db868 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5561e32db830 <col:102> '_Bool' lvalue Var 0x5561e32d9bf8 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5561e32db938 <line:722:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5561e32db920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5561e32db900 <col:3> 'void ()' Function 0x5561e3280410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5561e32db990 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5561e32db978 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5561e32db958 <col:3> 'void ()' Function 0x5561e3280350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5561e32dba48 <line:724:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5561e32db9b0 <col:3> 'int' lvalue Var 0x5561e32d9438 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5561e32dba28 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5561e32dba10 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5561e32db9d0 <col:22> 'int' lvalue Var 0x5561e32d9438 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5561e32db9f0 <col:41> 'int' 1
|   |-CallExpr 0x5561e32dbaa0 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5561e32dba88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5561e32dba68 <col:3> 'void ()' Function 0x5561e3280410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5561e32dbb48 <line:726:3, col:36>
|     `-CallExpr 0x5561e32dbb28 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5561e32dbb10 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5561e32dbac0 <col:10> 'void *(void)' Function 0x5561e327fe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5561e32dbce0 prev 0x5561e32d90b8 <line:728:1, line:766:1> line:728:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5561e32dbc48 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5561e32dfae8 <line:729:1, line:766:1>
|   |-CallExpr 0x5561e32dbdc0 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5561e32dbda8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5561e32dbd88 <col:3> 'void ()' Function 0x5561e3280350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5561e32dbe20 <line:731:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5561e32dbde0 <col:3> 'int' lvalue Var 0x5561e32da070 'y' 'int'
|   | `-IntegerLiteral 0x5561e32dbe00 <col:7> 'int' 2
|   |-CallExpr 0x5561e32dbe78 <line:732:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5561e32dbe60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5561e32dbe40 <col:3> 'void ()' Function 0x5561e3280410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5561e32dbed0 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5561e32dbeb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5561e32dbe98 <col:3> 'void ()' Function 0x5561e3280350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5561e32dbf30 <line:734:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5561e32dbef0 <col:3> 'int' lvalue Var 0x5561e32da190 'z' 'int'
|   | `-IntegerLiteral 0x5561e32dbf10 <col:7> 'int' 1
|   |-CallExpr 0x5561e32dbfa8 <line:735:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5561e32dbf90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5561e32dbf50 <col:3> 'void ()' Function 0x5561e3280410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5561e32dc000 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5561e32dbfe8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5561e32dbfc8 <col:3> 'void ()' Function 0x5561e3280350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5561e32dc078 <line:737:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5561e32dc020 <col:3> 'int' lvalue Var 0x5561e32d9558 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5561e32dc060 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5561e32dc040 <col:25> 'int' lvalue Var 0x5561e32da190 'z' 'int'
|   |-CallExpr 0x5561e32dc0d0 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5561e32dc0b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5561e32dc098 <col:3> 'void ()' Function 0x5561e3280410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5561e32dc128 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5561e32dc110 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5561e32dc0f0 <col:3> 'void ()' Function 0x5561e3280350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5561e32dc1d8 <line:740:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5561e32dc148 <col:3> '_Bool' lvalue Var 0x5561e32da228 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5561e32dc1c0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5561e32dc1a0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5561e32dc188 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5561e32dc168 <col:19> 'void *(void)' Function 0x5561e327fe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5561e32dc288 <line:741:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5561e32dc1f8 <col:3> '_Bool' lvalue Var 0x5561e32da2a0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5561e32dc270 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5561e32dc250 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5561e32dc238 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5561e32dc218 <col:19> 'void *(void)' Function 0x5561e327fe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5561e32dc300 <line:742:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5561e32dc2a8 <col:3> '_Bool' lvalue Var 0x5561e32d9920 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5561e32dc2e8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5561e32dc2c8 <col:21> '_Bool' lvalue Var 0x5561e32da2a0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5561e32dc378 <line:743:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5561e32dc320 <col:3> 'int' lvalue Var 0x5561e32d99a0 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5561e32dc360 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5561e32dc340 <col:15> 'int' lvalue Var 0x5561e32d9888 'x' 'int'
|   |-BinaryOperator 0x5561e32dc7b0 <line:744:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5561e32dc398 <col:3> 'int' lvalue Var 0x5561e32d9888 'x' 'int'
|   | `-ConditionalOperator 0x5561e32dc780 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5561e32dc5a8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5561e32dc4c8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5561e32dc3f0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5561e32dc3d8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5561e32dc3b8 <col:8> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5561e32dc4a8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5561e32dc440 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5561e32dc428 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5561e32dc408 <col:27> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x5561e32dc490 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5561e32dc478 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5561e32dc458 <col:46> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5561e32dc588 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5561e32dc520 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5561e32dc508 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5561e32dc4e8 <col:65> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x5561e32dc570 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5561e32dc558 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5561e32dc538 <col:84> '_Bool' lvalue Var 0x5561e32d9c70 'x$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5561e32dc768 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5561e32dc5c8 <col:101> 'int' lvalue Var 0x5561e32d9888 'x' 'int'
|   |   `-ParenExpr 0x5561e32dc748 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5561e32dc718 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5561e32dc688 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5561e32dc640 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5561e32dc628 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5561e32dc5e8 <col:106> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5561e32dc670 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5561e32dc658 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5561e32dc608 <col:124> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5561e32dc6e8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5561e32dc6a8 <col:141> 'int' lvalue Var 0x5561e32d9de8 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5561e32dc700 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5561e32dc6c8 <col:153> 'int' lvalue Var 0x5561e32d9ee0 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5561e32dccc0 <line:745:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5561e32dc7d0 <col:3> 'int' lvalue Var 0x5561e32d9de8 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x5561e32dcc90 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5561e32dcc60 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5561e32dcc48 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5561e32dc7f0 <col:15> '_Bool' lvalue Var 0x5561e32da2a0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5561e32dcc78 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5561e32dc810 <col:31> 'int' lvalue Var 0x5561e32d9de8 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5561e32dcc28 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5561e32dcbf8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5561e32dca20 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5561e32dc940 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5561e32dc868 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5561e32dc850 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5561e32dc830 <col:45> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5561e32dc920 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5561e32dc8b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5561e32dc8a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5561e32dc880 <col:64> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5561e32dc908 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5561e32dc8f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5561e32dc8d0 <col:83> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5561e32dca00 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5561e32dc998 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5561e32dc980 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5561e32dc960 <col:102> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5561e32dc9e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5561e32dc9d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5561e32dc9b0 <col:121> '_Bool' lvalue Var 0x5561e32d9c70 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5561e32dcbe0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5561e32dca40 <col:138> 'int' lvalue Var 0x5561e32d9de8 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x5561e32dcbc0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5561e32dcb90 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5561e32dcb00 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5561e32dcab8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5561e32dcaa0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5561e32dca60 <col:151> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5561e32dcae8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5561e32dcad0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5561e32dca80 <col:169> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5561e32dcb60 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5561e32dcb20 <col:186> 'int' lvalue Var 0x5561e32d9de8 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5561e32dcb78 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5561e32dcb40 <col:198> 'int' lvalue Var 0x5561e32d9de8 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5561e32dd1e0 <line:746:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5561e32dcce0 <col:3> 'int' lvalue Var 0x5561e32d9ee0 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x5561e32dd1b0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5561e32dd180 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5561e32dd168 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5561e32dcd00 <col:15> '_Bool' lvalue Var 0x5561e32da2a0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5561e32dd198 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5561e32dcd20 <col:31> 'int' lvalue Var 0x5561e32d9ee0 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x5561e32dd148 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5561e32dd118 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5561e32dcf30 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5561e32dce50 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5561e32dcd78 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5561e32dcd60 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5561e32dcd40 <col:45> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5561e32dce30 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5561e32dcdc8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5561e32dcdb0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5561e32dcd90 <col:64> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5561e32dce18 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5561e32dce00 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5561e32dcde0 <col:83> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5561e32dcf10 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5561e32dcea8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5561e32dce90 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5561e32dce70 <col:102> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5561e32dcef8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5561e32dcee0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5561e32dcec0 <col:121> '_Bool' lvalue Var 0x5561e32d9c70 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5561e32dd100 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5561e32dcf50 <col:138> 'int' lvalue Var 0x5561e32d9ee0 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x5561e32dd0e0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5561e32dd0b0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5561e32dd020 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5561e32dcfd8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5561e32dcfc0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5561e32dcf70 <col:151> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5561e32dd008 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5561e32dcff0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5561e32dcfa0 <col:169> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5561e32dd080 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5561e32dd040 <col:186> 'int' lvalue Var 0x5561e32d9ee0 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5561e32dd098 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5561e32dd060 <col:198> 'int' lvalue Var 0x5561e32d9ee0 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5561e32dd788 <line:747:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5561e32dd200 <col:3> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5561e32dd770 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5561e32dd740 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5561e32dd6f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5561e32dd6e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5561e32dd220 <col:20> '_Bool' lvalue Var 0x5561e32da2a0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5561e32dd728 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5561e32dd710 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5561e32dd240 <col:36> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5561e32dd6c0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5561e32dd690 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5561e32dd450 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5561e32dd370 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5561e32dd298 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5561e32dd280 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5561e32dd260 <col:55> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5561e32dd350 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5561e32dd2e8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5561e32dd2d0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5561e32dd2b0 <col:74> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5561e32dd338 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5561e32dd320 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5561e32dd300 <col:93> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5561e32dd430 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5561e32dd3c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5561e32dd3b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5561e32dd390 <col:112> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5561e32dd418 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5561e32dd400 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5561e32dd3e0 <col:131> '_Bool' lvalue Var 0x5561e32d9c70 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5561e32dd678 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5561e32dd660 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5561e32dd470 <col:148> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5561e32dd640 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5561e32dd610 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5561e32dd530 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5561e32dd4e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5561e32dd4d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5561e32dd490 <col:166> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5561e32dd518 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5561e32dd500 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5561e32dd4b0 <col:184> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5561e32dd5c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5561e32dd580 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5561e32dd550 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5561e32dd5f8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5561e32dd5e0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5561e32dd5a8 <col:212> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5561e32ddd50 <line:748:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5561e32dd7a8 <col:3> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5561e32ddd38 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5561e32ddd08 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5561e32ddcc0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5561e32ddca8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5561e32dd7c8 <col:20> '_Bool' lvalue Var 0x5561e32da2a0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5561e32ddcf0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5561e32ddcd8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5561e32dd7e8 <col:36> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5561e32ddc88 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5561e32ddc58 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5561e32dd9f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5561e32dd918 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5561e32dd840 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5561e32dd828 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5561e32dd808 <col:55> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5561e32dd8f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5561e32dd890 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5561e32dd878 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5561e32dd858 <col:74> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5561e32dd8e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5561e32dd8c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5561e32dd8a8 <col:93> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5561e32dd9d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5561e32dd970 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5561e32dd958 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5561e32dd938 <col:112> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5561e32dd9c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5561e32dd9a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5561e32dd988 <col:131> '_Bool' lvalue Var 0x5561e32d9c70 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5561e32ddc40 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5561e32ddc28 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5561e32dda18 <col:148> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5561e32ddc08 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5561e32ddbd8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5561e32ddad8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5561e32dda90 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5561e32dda78 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5561e32dda38 <col:166> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5561e32ddac0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5561e32ddaa8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5561e32dda58 <col:184> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5561e32ddba8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5561e32ddb28 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5561e32ddaf8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5561e32ddbc0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5561e32ddb80 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5561e32ddb50 <col:219> 'int' 0
|   |-BinaryOperator 0x5561e32de308 <line:749:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5561e32ddd70 <col:3> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5561e32de2f0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5561e32de2c0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5561e32de278 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5561e32de260 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5561e32ddd90 <col:20> '_Bool' lvalue Var 0x5561e32da2a0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5561e32de2a8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5561e32de290 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5561e32dddb0 <col:36> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x5561e32de240 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5561e32de210 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5561e32ddfd0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5561e32ddee0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5561e32dde08 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5561e32dddf0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5561e32dddd0 <col:55> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5561e32ddec0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5561e32dde58 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5561e32dde40 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5561e32dde20 <col:74> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5561e32ddea8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5561e32dde90 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5561e32dde70 <col:93> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5561e32ddfb0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5561e32ddf38 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5561e32ddf20 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5561e32ddf00 <col:112> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5561e32ddf88 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5561e32ddf70 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5561e32ddf50 <col:131> '_Bool' lvalue Var 0x5561e32d9c70 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5561e32de1f8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5561e32de1e0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5561e32ddff0 <col:148> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x5561e32de1c0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5561e32de190 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5561e32de0b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5561e32de068 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5561e32de050 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5561e32de010 <col:166> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5561e32de098 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5561e32de080 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5561e32de030 <col:184> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5561e32de148 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5561e32de100 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5561e32de0d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5561e32de178 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5561e32de160 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5561e32de128 <col:212> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5561e32de8d0 <line:750:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5561e32de328 <col:3> '_Bool' lvalue Var 0x5561e32d9c70 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5561e32de8b8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5561e32de888 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5561e32de840 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5561e32de828 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5561e32de348 <col:20> '_Bool' lvalue Var 0x5561e32da2a0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5561e32de870 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5561e32de858 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5561e32de368 <col:36> '_Bool' lvalue Var 0x5561e32d9c70 'x$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x5561e32de808 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5561e32de7d8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5561e32de578 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5561e32de498 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5561e32de3c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5561e32de3a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5561e32de388 <col:55> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5561e32de478 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5561e32de410 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5561e32de3f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5561e32de3d8 <col:74> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5561e32de460 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5561e32de448 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5561e32de428 <col:93> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5561e32de558 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5561e32de4f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5561e32de4d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5561e32de4b8 <col:112> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5561e32de540 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5561e32de528 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5561e32de508 <col:131> '_Bool' lvalue Var 0x5561e32d9c70 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5561e32de7c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5561e32de7a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5561e32de598 <col:148> '_Bool' lvalue Var 0x5561e32d9c70 'x$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x5561e32de788 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5561e32de758 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5561e32de658 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5561e32de610 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5561e32de5f8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5561e32de5b8 <col:166> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5561e32de640 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5561e32de628 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5561e32de5d8 <col:184> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5561e32de728 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5561e32de6a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5561e32de678 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5561e32de740 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5561e32de700 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5561e32de6d0 <col:219> 'int' 0
|   |-BinaryOperator 0x5561e32de948 <line:751:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5561e32de8f0 <col:3> 'int' lvalue Var 0x5561e32d9678 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x5561e32de930 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5561e32de910 <col:25> 'int' lvalue Var 0x5561e32d9888 'x' 'int'
|   |-BinaryOperator 0x5561e32dea78 <line:752:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5561e32de968 <col:3> 'int' lvalue Var 0x5561e32d9888 'x' 'int'
|   | `-ConditionalOperator 0x5561e32dea48 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5561e32dea00 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5561e32de9e8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5561e32de988 <col:7> '_Bool' lvalue Var 0x5561e32d9920 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5561e32dea18 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5561e32de9a8 <col:25> 'int' lvalue Var 0x5561e32d99a0 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5561e32dea30 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5561e32de9c8 <col:37> 'int' lvalue Var 0x5561e32d9888 'x' 'int'
|   |-BinaryOperator 0x5561e32deb10 <line:753:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5561e32dea98 <col:3> '_Bool' lvalue Var 0x5561e32d9920 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5561e32deae8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5561e32deab8 <col:28> 'int' 0
|   |-CallExpr 0x5561e32deb68 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5561e32deb50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5561e32deb30 <col:3> 'void ()' Function 0x5561e3280410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5561e32debc0 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5561e32deba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5561e32deb88 <col:3> 'void ()' Function 0x5561e3280350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5561e32deea8 <line:756:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5561e32debe0 <col:3> 'int' lvalue Var 0x5561e32d9888 'x' 'int'
|   | `-ConditionalOperator 0x5561e32dee78 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5561e32deca0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5561e32dec58 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5561e32dec40 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5561e32dec00 <col:7> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5561e32dec88 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5561e32dec70 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5561e32dec20 <col:25> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5561e32dee60 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5561e32decc0 <col:42> 'int' lvalue Var 0x5561e32d9de8 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5561e32dee40 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5561e32dee10 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5561e32ded80 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5561e32ded38 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5561e32ded20 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5561e32dece0 <col:55> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5561e32ded68 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5561e32ded50 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5561e32ded00 <col:73> '_Bool' lvalue Var 0x5561e32d9c70 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5561e32dede0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5561e32deda0 <col:90> 'int' lvalue Var 0x5561e32d9ee0 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5561e32dedf8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5561e32dedc0 <col:102> 'int' lvalue Var 0x5561e32d9888 'x' 'int'
|   |-BinaryOperator 0x5561e32df0c8 <line:757:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5561e32deec8 <col:3> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5561e32df0b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5561e32df080 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5561e32def88 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5561e32def40 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5561e32def28 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5561e32deee8 <col:20> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5561e32def70 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5561e32def58 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5561e32def08 <col:38> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5561e32df038 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5561e32deff0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5561e32defc0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5561e32df068 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5561e32df050 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5561e32df018 <col:66> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5561e32df3b0 <line:758:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5561e32df0e8 <col:3> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5561e32df398 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5561e32df368 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5561e32df288 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5561e32df1a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5561e32df160 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5561e32df148 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5561e32df108 <col:20> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5561e32df190 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5561e32df178 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5561e32df128 <col:38> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5561e32df268 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5561e32df220 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5561e32df208 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5561e32df1c8 <col:56> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5561e32df250 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5561e32df238 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5561e32df1e8 <col:74> '_Bool' lvalue Var 0x5561e32d9c70 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5561e32df320 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5561e32df2d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5561e32df2a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5561e32df350 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5561e32df338 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5561e32df300 <col:102> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5561e32df5b8 <line:759:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5561e32df3d0 <col:3> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5561e32df5a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5561e32df570 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5561e32df490 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5561e32df448 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5561e32df430 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5561e32df3f0 <col:20> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5561e32df478 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5561e32df460 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5561e32df410 <col:38> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5561e32df528 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5561e32df4e0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5561e32df4b0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5561e32df558 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5561e32df540 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5561e32df508 <col:66> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5561e32df8a0 <line:760:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5561e32df5d8 <col:3> '_Bool' lvalue Var 0x5561e32d9c70 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5561e32df888 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5561e32df858 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5561e32df778 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5561e32df698 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5561e32df650 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5561e32df638 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5561e32df5f8 <col:20> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5561e32df680 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5561e32df668 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5561e32df618 <col:38> '_Bool' lvalue Var 0x5561e32d9b08 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5561e32df758 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5561e32df710 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5561e32df6f8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5561e32df6b8 <col:56> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5561e32df740 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5561e32df728 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5561e32df6d8 <col:74> '_Bool' lvalue Var 0x5561e32d9c70 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5561e32df810 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5561e32df7c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5561e32df798 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5561e32df840 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5561e32df828 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5561e32df7f0 <col:102> '_Bool' lvalue Var 0x5561e32d9c70 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5561e32df8f8 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5561e32df8e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5561e32df8c0 <col:3> 'void ()' Function 0x5561e3280410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5561e32df950 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5561e32df938 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5561e32df918 <col:3> 'void ()' Function 0x5561e3280350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5561e32dfa08 <line:763:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5561e32df970 <col:3> 'int' lvalue Var 0x5561e32d9438 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5561e32df9e8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5561e32df9d0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5561e32df990 <col:22> 'int' lvalue Var 0x5561e32d9438 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5561e32df9b0 <col:41> 'int' 1
|   |-CallExpr 0x5561e32dfa60 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5561e32dfa48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5561e32dfa28 <col:3> 'void ()' Function 0x5561e3280410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5561e32dfad8 <line:765:3, col:36>
|     `-CallExpr 0x5561e32dfab8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5561e32dfaa0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5561e32dfa80 <col:10> 'void *(void)' Function 0x5561e327fe68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5561e32dfc38 prev 0x5561e32d9180 <line:767:1, line:769:1> line:767:6 fence 'void ()'
| `-CompoundStmt 0x5561e32dfcd8 <line:768:1, line:769:1>
|-FunctionDecl 0x5561e32dfd08 prev 0x5561e32d9240 <line:770:1, line:772:1> line:770:6 isync 'void ()'
| `-CompoundStmt 0x5561e32dfda8 <line:771:1, line:772:1>
|-FunctionDecl 0x5561e32dfdd8 prev 0x5561e32d9300 <line:773:1, line:775:1> line:773:6 lwfence 'void ()'
| `-CompoundStmt 0x5561e32dfe78 <line:774:1, line:775:1>
`-FunctionDecl 0x5561e32dfee8 <line:776:1, line:798:1> line:776:5 main 'int ()'
  `-CompoundStmt 0x5561e32e18d0 <line:777:1, line:798:1>
    |-DeclStmt 0x5561e32e0038 <line:778:3, col:18>
    | `-VarDecl 0x5561e32dffd0 <col:3, col:13> col:13 used t1603 'pthread_t':'unsigned long'
    |-CallExpr 0x5561e32e0248 <line:779:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5561e32e0230 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5561e32e0050 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5561e32c08f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5561e32e0090 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5561e32e0070 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5561e32dffd0 't1603' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5561e32e0288 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5561e32e0108 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5561e32e00e0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5561e32e00a8 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5561e32e02a0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5561e32e0128 <col:39> 'void *(void *)' Function 0x5561e32da3b8 'P0' 'void *(void *)'
    | `-ParenExpr 0x5561e32e01a8 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5561e32e0180 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5561e32e0148 <col:52> 'int' 0
    |-DeclStmt 0x5561e32e0330 <line:780:3, col:18>
    | `-VarDecl 0x5561e32e02c8 <col:3, col:13> col:13 used t1604 'pthread_t':'unsigned long'
    |-CallExpr 0x5561e32e04d8 <line:781:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5561e32e04c0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5561e32e0348 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5561e32c08f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5561e32e0388 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5561e32e0368 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5561e32e02c8 't1604' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5561e32e0518 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5561e32e0400 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5561e32e03d8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5561e32e03a0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5561e32e0530 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5561e32e0420 <col:39> 'void *(void *)' Function 0x5561e32dbce0 'P1' 'void *(void *)'
    | `-ParenExpr 0x5561e32e04a0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5561e32e0478 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5561e32e0440 <col:52> 'int' 0
    |-CallExpr 0x5561e32e0580 <line:782:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5561e32e0568 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5561e32e0548 <col:3> 'void ()' Function 0x5561e3280350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5561e32e0650 <line:783:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5561e32e05a0 <col:3> '_Bool' lvalue Var 0x5561e32d9710 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5561e32e0638 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5561e32e0618 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5561e32e0600 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5561e32e05c0 <col:21> 'int' lvalue Var 0x5561e32d9438 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5561e32e05e0 <col:41> 'int' 2
    |-CallExpr 0x5561e32e06a8 <line:784:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5561e32e0690 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5561e32e0670 <col:3> 'void ()' Function 0x5561e3280410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5561e32e0720 <line:785:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5561e32e0708 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5561e32e06c8 <col:3> 'void (int)' Function 0x5561e327fca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5561e32e0760 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5561e32e0748 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5561e32e06e8 <col:21> '_Bool' lvalue Var 0x5561e32d9710 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5561e32e07b0 <line:786:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5561e32e0798 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5561e32e0778 <col:3> 'void ()' Function 0x5561e3280350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5561e32e0a98 <line:787:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5561e32e07d0 <col:3> 'int' lvalue Var 0x5561e32d9888 'x' 'int'
    | `-ConditionalOperator 0x5561e32e0a68 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5561e32e0890 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5561e32e0848 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5561e32e0830 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5561e32e07f0 <col:7> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5561e32e0878 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5561e32e0860 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5561e32e0810 <col:25> '_Bool' lvalue Var 0x5561e32d9a18 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5561e32e0a50 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5561e32e08b0 <col:42> 'int' lvalue Var 0x5561e32d9de8 'x$w_buff0' 'int'
    |   `-ParenExpr 0x5561e32e0a30 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5561e32e0a00 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5561e32e0970 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5561e32e0928 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5561e32e0910 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5561e32e08d0 <col:55> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5561e32e0958 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5561e32e0940 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5561e32e08f0 <col:73> '_Bool' lvalue Var 0x5561e32d9b80 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5561e32e09d0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5561e32e0990 <col:90> 'int' lvalue Var 0x5561e32d9ee0 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5561e32e09e8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5561e32e09b0 <col:102> 'int' lvalue Var 0x5561e32d9888 'x' 'int'
    |-BinaryOperator 0x5561e32e0ca0 <line:788:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5561e32e0ab8 <col:3> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5561e32e0c88 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5561e32e0c58 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5561e32e0b78 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5561e32e0b30 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5561e32e0b18 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5561e32e0ad8 <col:20> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5561e32e0b60 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5561e32e0b48 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5561e32e0af8 <col:38> '_Bool' lvalue Var 0x5561e32d9a18 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5561e32e0c10 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5561e32e0bc8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5561e32e0b98 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5561e32e0c40 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5561e32e0c28 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5561e32e0bf0 <col:66> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5561e32e0f88 <line:789:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5561e32e0cc0 <col:3> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5561e32e0f70 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5561e32e0f40 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5561e32e0e60 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5561e32e0d80 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5561e32e0d38 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5561e32e0d20 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5561e32e0ce0 <col:20> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5561e32e0d68 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5561e32e0d50 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5561e32e0d00 <col:38> '_Bool' lvalue Var 0x5561e32d9a18 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5561e32e0e40 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5561e32e0df8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5561e32e0de0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5561e32e0da0 <col:56> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5561e32e0e28 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5561e32e0e10 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5561e32e0dc0 <col:74> '_Bool' lvalue Var 0x5561e32d9b80 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5561e32e0ef8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5561e32e0eb0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5561e32e0e80 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5561e32e0f28 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5561e32e0f10 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5561e32e0ed8 <col:102> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5561e32e11a8 <line:790:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5561e32e0fa8 <col:3> '_Bool' lvalue Var 0x5561e32d9a18 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5561e32e1190 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5561e32e1160 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5561e32e1080 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5561e32e1038 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5561e32e1020 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5561e32e0fe0 <col:20> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5561e32e1068 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5561e32e1050 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5561e32e1000 <col:38> '_Bool' lvalue Var 0x5561e32d9a18 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5561e32e1118 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5561e32e10d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5561e32e10a0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5561e32e1148 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5561e32e1130 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5561e32e10f8 <col:66> '_Bool' lvalue Var 0x5561e32d9a18 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5561e32e1490 <line:791:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5561e32e11c8 <col:3> '_Bool' lvalue Var 0x5561e32d9b80 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5561e32e1478 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5561e32e1448 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5561e32e1368 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5561e32e1288 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5561e32e1240 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5561e32e1228 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5561e32e11e8 <col:20> '_Bool' lvalue Var 0x5561e32d9e60 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5561e32e1270 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5561e32e1258 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5561e32e1208 <col:38> '_Bool' lvalue Var 0x5561e32d9a18 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5561e32e1348 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5561e32e1300 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5561e32e12e8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5561e32e12a8 <col:56> '_Bool' lvalue Var 0x5561e32d9f70 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5561e32e1330 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5561e32e1318 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5561e32e12c8 <col:74> '_Bool' lvalue Var 0x5561e32d9b80 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5561e32e1400 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5561e32e13b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5561e32e1388 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5561e32e1430 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5561e32e1418 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5561e32e13e0 <col:102> '_Bool' lvalue Var 0x5561e32d9b80 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5561e32e14e8 <line:792:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5561e32e14d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5561e32e14b0 <col:3> 'void ()' Function 0x5561e3280410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5561e32e1540 <line:793:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5561e32e1528 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5561e32e1508 <col:3> 'void ()' Function 0x5561e3280350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5561e32e1778 <line:794:3, col:85> '_Bool' '='
    | |-DeclRefExpr 0x5561e32e1560 <col:3> '_Bool' lvalue Var 0x5561e32d9788 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5561e32e1760 <col:21, col:85> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5561e32e1748 <col:21, col:85> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5561e32e1728 <col:22, col:85> 'int'
    |       `-BinaryOperator 0x5561e32e1708 <col:23, col:84> 'int' '&&'
    |         |-BinaryOperator 0x5561e32e1670 <col:23, col:56> 'int' '&&'
    |         | |-BinaryOperator 0x5561e32e15d8 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x5561e32e15c0 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x5561e32e1580 <col:23> 'int' lvalue Var 0x5561e32da070 'y' 'int'
    |         | | `-IntegerLiteral 0x5561e32e15a0 <col:28> 'int' 2
    |         | `-BinaryOperator 0x5561e32e1650 <col:33, col:56> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5561e32e1638 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5561e32e15f8 <col:33> 'int' lvalue Var 0x5561e32d9558 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x5561e32e1618 <col:56> 'int' 1
    |         `-BinaryOperator 0x5561e32e16e8 <col:61, col:84> 'int' '=='
    |           |-ImplicitCastExpr 0x5561e32e16d0 <col:61> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5561e32e1690 <col:61> 'int' lvalue Var 0x5561e32d9678 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x5561e32e16b0 <col:84> 'int' 0
    |-CallExpr 0x5561e32e17d0 <line:795:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5561e32e17b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5561e32e1798 <col:3> 'void ()' Function 0x5561e3280410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5561e32e1848 <line:796:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5561e32e1830 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5561e32e17f0 <col:3> 'void (int)' Function 0x5561e32800d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5561e32e1888 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5561e32e1870 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5561e32e1810 <col:21> '_Bool' lvalue Var 0x5561e32d9788 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5561e32e18c0 <line:797:3, col:10>
      `-IntegerLiteral 0x5561e32e18a0 <col:10> 'int' 0
