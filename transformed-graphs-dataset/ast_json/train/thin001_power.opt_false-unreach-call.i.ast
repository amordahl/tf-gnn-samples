TranslationUnitDecl 0x55f3d1fd9f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55f3d1fda848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55f3d1fda520 '__int128'
|-TypedefDecl 0x55f3d1fda8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55f3d1fda540 'unsigned __int128'
|-TypedefDecl 0x55f3d1fdabc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55f3d1fda990 'struct __NSConstantString_tag'
|   `-Record 0x55f3d1fda910 '__NSConstantString_tag'
|-TypedefDecl 0x55f3d1fdac68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55f3d1fdac20 'char *'
|   `-BuiltinType 0x55f3d1fda020 'char'
|-TypedefDecl 0x55f3d2019b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55f3d1fdaf00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55f3d1fdad40 'struct __va_list_tag'
|     `-Record 0x55f3d1fdacc0 '__va_list_tag'
|-FunctionDecl 0x55f3d2019ca0 <pthread-wmm/thin001_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55f3d2019bd0 <col:31> col:34 'int'
|-FunctionDecl 0x55f3d2019e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55f3d2019f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55f3d201a0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55f3d201a048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55f3d201a308 <col:40, col:99>
|   |-IfStmt 0x55f3d201a2d8 <col:42, col:88>
|   | |-UnaryOperator 0x55f3d201a1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55f3d201a1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55f3d201a180 <col:47> 'int' lvalue ParmVar 0x55f3d201a048 'expression' 'int'
|   | `-CompoundStmt 0x55f3d201a2c0 <col:59, col:88>
|   |   `-LabelStmt 0x55f3d201a2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55f3d201a238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55f3d201a220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55f3d201a1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x55f3d2019f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55f3d201a2f0 <col:89>
|   `-ReturnStmt 0x55f3d201a2f8 <col:91>
|-FunctionDecl 0x55f3d201a350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55f3d201a410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55f3d201a790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f3d201a4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55f3d201a548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55f3d201a5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55f3d201a648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55f3d201a850 <line:10:22>
|-FunctionDecl 0x55f3d20408a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f3d201a8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55f3d201a940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55f3d201a9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55f3d201aa40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55f3d2040960 <line:13:22>
|-FunctionDecl 0x55f3d2040c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f3d20409d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55f3d2040a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55f3d2040ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55f3d2040cc8 <line:15:22>
|-TypedefDecl 0x55f3d2040d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55f3d1fda0e0 'unsigned char'
|-TypedefDecl 0x55f3d2040da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55f3d1fda100 'unsigned short'
|-TypedefDecl 0x55f3d2040e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55f3d1fda120 'unsigned int'
|-TypedefDecl 0x55f3d2040e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55f3d1fda140 'unsigned long'
|-TypedefDecl 0x55f3d2040ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55f3d1fda040 'signed char'
|-TypedefDecl 0x55f3d2040f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55f3d1fda0e0 'unsigned char'
|-TypedefDecl 0x55f3d2040fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55f3d1fda060 'short'
|-TypedefDecl 0x55f3d2041048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55f3d1fda100 'unsigned short'
|-TypedefDecl 0x55f3d20410b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55f3d1fda080 'int'
|-TypedefDecl 0x55f3d2041128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55f3d1fda120 'unsigned int'
|-TypedefDecl 0x55f3d2041198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55f3d1fda0a0 'long'
|-TypedefDecl 0x55f3d2041208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55f3d1fda140 'unsigned long'
|-TypedefDecl 0x55f3d2041278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55f3d1fda0a0 'long'
|-TypedefDecl 0x55f3d20412e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55f3d1fda140 'unsigned long'
|-TypedefDecl 0x55f3d2041358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55f3d1fda140 'unsigned long'
|-TypedefDecl 0x55f3d20413c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55f3d1fda120 'unsigned int'
|-TypedefDecl 0x55f3d2041438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55f3d1fda120 'unsigned int'
|-TypedefDecl 0x55f3d20414a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55f3d1fda140 'unsigned long'
|-TypedefDecl 0x55f3d2041518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55f3d1fda140 'unsigned long'
|-TypedefDecl 0x55f3d2041588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55f3d1fda120 'unsigned int'
|-TypedefDecl 0x55f3d20415f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55f3d1fda140 'unsigned long'
|-TypedefDecl 0x55f3d2041668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55f3d1fda0a0 'long'
|-TypedefDecl 0x55f3d20416d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55f3d1fda0a0 'long'
|-TypedefDecl 0x55f3d2041748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55f3d1fda080 'int'
|-RecordDecl 0x55f3d20417a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55f3d2041918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55f3d20419d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55f3d2041970 'struct __fsid_t' sugar
|   `-RecordType 0x55f3d2041820 '__fsid_t'
|     `-Record 0x55f3d20417a0 ''
|-TypedefDecl 0x55f3d2041a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55f3d1fda0a0 'long'
|-TypedefDecl 0x55f3d2041ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55f3d1fda140 'unsigned long'
|-TypedefDecl 0x55f3d2041b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55f3d1fda140 'unsigned long'
|-TypedefDecl 0x55f3d2041ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55f3d1fda120 'unsigned int'
|-TypedefDecl 0x55f3d2041c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55f3d1fda0a0 'long'
|-TypedefDecl 0x55f3d2041c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55f3d1fda120 'unsigned int'
|-TypedefDecl 0x55f3d2041cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55f3d1fda0a0 'long'
|-TypedefDecl 0x55f3d2041d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55f3d1fda080 'int'
|-TypedefDecl 0x55f3d2041dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55f3d1fda080 'int'
|-TypedefDecl 0x55f3d2041e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55f3d1fda080 'int'
|-TypedefDecl 0x55f3d2041eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55f3d1fda7a0 'void *'
|   `-BuiltinType 0x55f3d1fd9fe0 'void'
|-TypedefDecl 0x55f3d2041f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55f3d1fda0a0 'long'
|-TypedefDecl 0x55f3d2041f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55f3d1fda0a0 'long'
|-TypedefDecl 0x55f3d2042008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55f3d1fda0a0 'long'
|-TypedefDecl 0x55f3d2042078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55f3d1fda140 'unsigned long'
|-TypedefDecl 0x55f3d20420e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55f3d1fda140 'unsigned long'
|-TypedefDecl 0x55f3d2042158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55f3d1fda140 'unsigned long'
|-TypedefDecl 0x55f3d20421c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55f3d1fda140 'unsigned long'
|-TypedefDecl 0x55f3d2042238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55f3d1fda0a0 'long'
|-TypedefDecl 0x55f3d20422a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55f3d1fda0a0 'long'
|-TypedefDecl 0x55f3d2042318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55f3d1fda0a0 'long'
|-TypedefDecl 0x55f3d2042388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55f3d1fda140 'unsigned long'
|-TypedefDecl 0x55f3d2042418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55f3d20423e0 '__off64_t' sugar
|   |-Typedef 0x55f3d20416d8 '__off64_t'
|   `-BuiltinType 0x55f3d1fda0a0 'long'
|-TypedefDecl 0x55f3d2042510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55f3d20424d0 '__quad_t *'
|   `-TypedefType 0x55f3d2042470 '__quad_t' sugar
|     |-Typedef 0x55f3d2041278 '__quad_t'
|     `-BuiltinType 0x55f3d1fda0a0 'long'
|-TypedefDecl 0x55f3d2042580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55f3d1fdac20 'char *'
|   `-BuiltinType 0x55f3d1fda020 'char'
|-TypedefDecl 0x55f3d20425f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55f3d1fda0a0 'long'
|-TypedefDecl 0x55f3d2042660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55f3d1fda120 'unsigned int'
|-FunctionDecl 0x55f3d20427a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55f3d20426d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55f3d2042ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55f3d2042ad8 <line:72:3, col:34>
|     `-CallExpr 0x55f3d2042a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55f3d2042a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55f3d2042a10 <col:10> '<builtin fn type>' Function 0x55f3d2042880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55f3d2042ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55f3d2042a30 <col:29> 'unsigned int' lvalue ParmVar 0x55f3d20426d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55f3d2042880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55f3d2042920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55f3d2042990 <col:10> Implicit
| `-ConstAttr 0x55f3d20429e8 <col:10> Implicit
|-FunctionDecl 0x55f3d2042c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55f3d2042b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55f3d2042f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55f3d2042f48 <line:77:3, col:34>
|     `-CallExpr 0x55f3d2042f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55f3d2042ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55f3d2042e78 <col:10> '<builtin fn type>' Function 0x55f3d2042ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55f3d2042f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55f3d2042e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55f3d2042b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55f3d2042ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55f3d2042d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55f3d2042df8 <col:10> Implicit
| `-ConstAttr 0x55f3d2042e50 <col:10> Implicit
|-TypedefDecl 0x55f3d2042f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55f3d1fda140 'unsigned long'
|-TypedefDecl 0x55f3d2043018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55f3d2042fe0 '__time_t' sugar
|   |-Typedef 0x55f3d2041c18 '__time_t'
|   `-BuiltinType 0x55f3d1fda0a0 'long'
|-RecordDecl 0x55f3d2043070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55f3d2043128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55f3d20431b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55f3d2043248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55f3d2043210 '__pid_t' sugar
|   |-Typedef 0x55f3d2041748 '__pid_t'
|   `-BuiltinType 0x55f3d1fda080 'int'
|-RecordDecl 0x55f3d20432a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55f3d2043360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55f3d20433b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55f3d2043470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55f3d20434d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55f3d1fda140 'unsigned long'
|-RecordDecl 0x55f3d2043530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55f3d20437c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55f3d20458b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55f3d2043810 'struct cpu_set_t' sugar
|   `-RecordType 0x55f3d20435b0 'cpu_set_t'
|     `-Record 0x55f3d2043530 ''
|-FunctionDecl 0x55f3d2045b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55f3d2045958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55f3d2045a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55f3d2045c38 <line:107:19>
|-FunctionDecl 0x55f3d2045e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55f3d2045ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55f3d2045eb8 <col:69>
|-FunctionDecl 0x55f3d2046030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55f3d2045f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55f3d20460d8 <col:64>
|-FunctionDecl 0x55f3d2046398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55f3d2046140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f3d2046278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55f3d2046448 <line:113:22>
|-FunctionDecl 0x55f3d20466c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55f3d20464b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f3d20465a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55f3d2046778 <col:88>
|-FunctionDecl 0x55f3d2046a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55f3d20467e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f3d20468c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55f3d2046950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55f3d2046b50 <col:62>
|-FunctionDecl 0x55f3d2046cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55f3d2046bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55f3d2046d70 <col:63>
|-FunctionDecl 0x55f3d2046e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55f3d2046f38 <col:47>
|-FunctionDecl 0x55f3d2047040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55f3d2046fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55f3d20470e8 <col:69>
|-FunctionDecl 0x55f3d20471f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55f3d2047158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55f3d2047298 <col:69>
|-FunctionDecl 0x55f3d2047558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55f3d2047300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f3d2047438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55f3d2047608 <col:88>
|-TypedefDecl 0x55f3d2047698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55f3d2047660 '__clock_t' sugar
|   |-Typedef 0x55f3d2041a58 '__clock_t'
|   `-BuiltinType 0x55f3d1fda0a0 'long'
|-TypedefDecl 0x55f3d2047728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55f3d20476f0 '__clockid_t' sugar
|   |-Typedef 0x55f3d2041e48 '__clockid_t'
|   `-BuiltinType 0x55f3d1fda080 'int'
|-TypedefDecl 0x55f3d20477b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55f3d2047780 '__timer_t' sugar
|   |-Typedef 0x55f3d2041eb8 '__timer_t'
|   `-PointerType 0x55f3d1fda7a0 'void *'
|     `-BuiltinType 0x55f3d1fd9fe0 'void'
|-RecordDecl 0x55f3d2047810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55f3d20478e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55f3d2047950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55f3d20479b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55f3d2047a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55f3d2047a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55f3d2047af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55f3d2047b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55f3d2047bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55f3d2047c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55f3d2047c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55f3d2047cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55f3d2047d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55f3d2047e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55f3d2047e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55f3d2047f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55f3d2048100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55f3d20481a0 <col:45>
|-FunctionDecl 0x55f3d2048380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55f3d2048270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55f3d2048428 <col:54>
|-FunctionDecl 0x55f3d2048628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55f3d2048490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55f3d2048508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55f3d20486d8 <line:157:22>
| `-ConstAttr 0x55f3d2048730 <col:63>
|-FunctionDecl 0x55f3d2049560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55f3d2048828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55f3d2049608 <col:56>
|-FunctionDecl 0x55f3d20499b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55f3d2049678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55f3d20496f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55f3d2049770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55f3d2049868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55f3d2049a70 <col:54>
|-RecordDecl 0x55f3d2049ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55f3d2049b78 parent 0x55f3d1fd9f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55f3d2049dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55f3d2049e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55f3d2049ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55f3d2049f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55f3d204a038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55f3d204a158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55f3d204a100 'struct __locale_struct *'
|   `-ElaboratedType 0x55f3d204a090 'struct __locale_struct' sugar
|     `-RecordType 0x55f3d2049b50 'struct __locale_struct'
|       `-Record 0x55f3d2049ac8 '__locale_struct'
|-TypedefDecl 0x55f3d204a208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55f3d204a1d0 '__locale_t' sugar
|   |-Typedef 0x55f3d204a158 '__locale_t'
|   `-PointerType 0x55f3d204a100 'struct __locale_struct *'
|     `-ElaboratedType 0x55f3d204a090 'struct __locale_struct' sugar
|       `-RecordType 0x55f3d2049b50 'struct __locale_struct'
|         `-Record 0x55f3d2049ac8 '__locale_struct'
|-FunctionDecl 0x55f3d204a610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55f3d204a278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55f3d204a2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55f3d204a370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55f3d204a400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55f3d204a478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55f3d204a6d8 <col:40>
|-FunctionDecl 0x55f3d204a8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55f3d204a7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55f3d204a970 <col:66>
|-FunctionDecl 0x55f3d204aa80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55f3d204a9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55f3d204ab28 <col:69>
|-FunctionDecl 0x55f3d204ad58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55f3d204ab90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55f3d204ac20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55f3d204ae08 <col:52>
|-FunctionDecl 0x55f3d204afb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55f3d204ae70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55f3d204af00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55f3d204b060 <col:55>
|-FunctionDecl 0x55f3d204b1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55f3d204b0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55f3d204b2a0 <col:62>
|-FunctionDecl 0x55f3d204b418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55f3d204b308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55f3d204b4c0 <col:60>
|-FunctionDecl 0x55f3d204b718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55f3d204b578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55f3d204b5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55f3d204b7c8 <col:44>
|-FunctionDecl 0x55f3d204b9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55f3d204b830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55f3d204b8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55f3d204ba88 <col:49>
|-VarDecl 0x55f3d204bb88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55f3d204bc08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55f3d204bc88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55f3d204bd50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55f3d204be80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55f3d204bf20 <col:42>
|-VarDecl 0x55f3d204bf90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55f3d204c010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55f3d204c198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55f3d204c088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55f3d204c240 <col:57>
|-FunctionDecl 0x55f3d204c350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55f3d204c2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55f3d204c3f8 <col:56>
|-FunctionDecl 0x55f3d204d540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55f3d204c478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55f3d204d5e8 <col:59>
|-FunctionDecl 0x55f3d204d6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55f3d204d658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55f3d204d798 <col:48>
| `-ConstAttr 0x55f3d204d7f0 <col:89>
|-FunctionDecl 0x55f3d204da58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55f3d204d8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55f3d204d938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55f3d204dcb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55f3d204db48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f3d204dbd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55f3d204dd68 <col:88>
|-FunctionDecl 0x55f3d204df00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55f3d204ddd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f3d204de60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55f3d204dfb0 <col:88>
|-FunctionDecl 0x55f3d204e1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55f3d204e018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f3d204e0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55f3d204e278 <line:208:22>
|-FunctionDecl 0x55f3d204e5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55f3d204e2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f3d204e360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55f3d204e3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55f3d204e480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55f3d204e8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55f3d204e6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55f3d204e7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55f3d204e998 <col:85>
|-FunctionDecl 0x55f3d204ed88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55f3d204ea00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f3d204eb38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55f3d204ec40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55f3d204ee40 <col:52>
|-FunctionDecl 0x55f3d204efb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55f3d204eea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55f3d204f060 <col:61>
|-FunctionDecl 0x55f3d204f560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55f3d204f0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55f3d204f148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55f3d204f278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55f3d204f368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55f3d204f620 <col:62>
|-FunctionDecl 0x55f3d204f838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55f3d204f688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55f3d204f718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55f3d204f8e8 <line:221:22>
|-FunctionDecl 0x55f3d204f9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55f3d204f950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55f3d204fa90 <col:65>
|-TypedefDecl 0x55f3d204fb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55f3d1fda140 'unsigned long'
|-RecordDecl 0x55f3d204fb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55f3d204fca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55f3d204fd08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f3d204fdb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55f3d204fd60 'union pthread_attr_t' sugar
|   `-RecordType 0x55f3d204fbe0 'union pthread_attr_t'
|     `-Record 0x55f3d204fb58 'pthread_attr_t'
|-RecordDecl 0x55f3d204fe10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55f3d204ff88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55f3d2050000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55f3d20500b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55f3d2050050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55f3d204fe90 'struct __pthread_internal_list'
|     `-Record 0x55f3d204fe10 '__pthread_internal_list'
|-RecordDecl 0x55f3d2050120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55f3d20501c8 parent 0x55f3d1fd9f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55f3d20502a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55f3d2050308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55f3d2050370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55f3d20503d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55f3d2050440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55f3d20504a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55f3d2054580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55f3d2054630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55f3d2054720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55f3d2054788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f3d2054910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55f3d20548b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55f3d20501a0 'pthread_mutex_t'
|     `-Record 0x55f3d2050120 ''
|-RecordDecl 0x55f3d2054980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55f3d2054ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55f3d2054b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55f3d2054be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55f3d2054b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55f3d2054a00 'pthread_mutexattr_t'
|     `-Record 0x55f3d2054980 ''
|-RecordDecl 0x55f3d2054c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55f3d2054cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55f3d2054dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55f3d2054e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55f3d2054e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55f3d2054ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55f3d2054f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55f3d2054fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55f3d2055030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55f3d2055098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55f3d2055150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/thin001_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/thin001_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55f3d2055240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55f3d20552a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55f3d20553e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55f3d2055380 'union pthread_cond_t' sugar
|   `-RecordType 0x55f3d2054cd0 'pthread_cond_t'
|     `-Record 0x55f3d2054c50 ''
|-RecordDecl 0x55f3d2055450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55f3d2055590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55f3d20555f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55f3d20556b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55f3d2055650 'union pthread_condattr_t' sugar
|   `-RecordType 0x55f3d20554d0 'pthread_condattr_t'
|     `-Record 0x55f3d2055450 ''
|-TypedefDecl 0x55f3d2055738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55f3d1fda120 'unsigned int'
|-TypedefDecl 0x55f3d20557a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55f3d1fda080 'int'
|-RecordDecl 0x55f3d2055800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55f3d20558a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55f3d2055970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55f3d20559d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55f3d2055a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55f3d2055aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55f3d2055b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55f3d2055b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55f3d2055be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55f3d2055c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55f3d2055cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55f3d2055d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55f3d2055d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55f3d2055e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/thin001_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/thin001_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55f3d2055ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55f3d2055f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f3d2056090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55f3d2056030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55f3d2055880 'pthread_rwlock_t'
|     `-Record 0x55f3d2055800 ''
|-RecordDecl 0x55f3d2056100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55f3d2056240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55f3d20562a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f3d2056360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55f3d2056300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55f3d2056180 'pthread_rwlockattr_t'
|     `-Record 0x55f3d2056100 ''
|-TypedefDecl 0x55f3d20563e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55f3d1fda084 'volatile int' volatile
|   `-BuiltinType 0x55f3d1fda080 'int'
|-RecordDecl 0x55f3d2056440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55f3d20585b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55f3d2058618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f3d20586d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55f3d2058670 'union pthread_barrier_t' sugar
|   `-RecordType 0x55f3d20564c0 'pthread_barrier_t'
|     `-Record 0x55f3d2056440 ''
|-RecordDecl 0x55f3d2058740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55f3d2058840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55f3d20588a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55f3d2058960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55f3d2058900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55f3d20587c0 'pthread_barrierattr_t'
|     `-Record 0x55f3d2058740 ''
|-TypedefDecl 0x55f3d2058a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55f3d2058a10 'long [8]' 8 
|   `-BuiltinType 0x55f3d1fda0a0 'long'
|-EnumDecl 0x55f3d2058ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55f3d2058b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55f3d2058be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55f3d2058c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55f3d2058d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55f3d2058d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55f3d2058da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55f3d2058df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55f3d2058e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55f3d2058e68 <col:26> 'int'
| |   `-DeclRefExpr 0x55f3d2058e48 <col:26> 'int' EnumConstant 0x55f3d2058d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55f3d2058f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55f3d2058ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x55f3d2058ed0 <col:29> 'int' EnumConstant 0x55f3d2058d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55f3d2058f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55f3d2058f78 <col:30> 'int'
| |   `-DeclRefExpr 0x55f3d2058f58 <col:30> 'int' EnumConstant 0x55f3d2058da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55f3d2059018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55f3d2059000 <col:27> 'int'
|     `-DeclRefExpr 0x55f3d2058fe0 <col:27> 'int' EnumConstant 0x55f3d2058e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55f3d2059068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55f3d2059138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55f3d20591c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55f3d20591a8 <col:30> 'int'
| |   `-DeclRefExpr 0x55f3d2059188 <col:30> 'int' EnumConstant 0x55f3d2059138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55f3d2059210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55f3d2059298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55f3d2059280 <col:29> 'int'
|     `-DeclRefExpr 0x55f3d2059260 <col:29> 'int' EnumConstant 0x55f3d2059210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55f3d20592e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55f3d20593b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55f3d2059408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55f3d2059458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55f3d20594a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55f3d20595c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55f3d2059610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55f3d2059660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55f3d20596e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55f3d20596d0 <col:31> 'int'
|     `-DeclRefExpr 0x55f3d20596b0 <col:31> 'int' EnumConstant 0x55f3d20595c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55f3d2059738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55f3d2059808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55f3d2059858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55f3d20598a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55f3d2059978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55f3d20599c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55f3d2059a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55f3d2059ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55f3d2059b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55f3d2059b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55f3d2059dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55f3d2059e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55f3d2059e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55f3d2059fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55f3d205a008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55f3d205a0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55f3d205a128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55f3d205a178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55f3d205a248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55f3d205a298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55f3d205a8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55f3d205a390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55f3d205a4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f3d205a6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55f3d205a760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55f3d205a9b8 <col:47>
| |-NonNullAttr 0x55f3d205aa10 <col:77, col:94> 1 3
| `-CallbackAttr 0x55f3d205aa48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55f3d205ab70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55f3d205aaa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55f3d205adc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55f3d205ac28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55f3d205aca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55f3d205af98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55f3d205ae88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55f3d205b040 <col:60>
|-FunctionDecl 0x55f3d205b190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55f3d205b230 <col:54>
| `-ConstAttr 0x55f3d205b288 <col:95>
|-FunctionDecl 0x55f3d205b458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55f3d205b2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f3d205b338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55f3d205b508 <line:394:19>
| `-ConstAttr 0x55f3d205b560 <col:60>
|-FunctionDecl 0x55f3d205bf68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55f3d205be30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55f3d205c010 <col:71>
| `-NonNullAttr 0x55f3d205c068 <col:112, col:126> 1
|-FunctionDecl 0x55f3d205c170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55f3d205c0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55f3d205c218 <line:397:22>
| `-NonNullAttr 0x55f3d205c270 <col:63, col:77> 1
|-FunctionDecl 0x55f3d205c498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55f3d205c2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55f3d205c338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55f3d205c548 <line:400:22>
| `-NonNullAttr 0x55f3d205c5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f3d205c7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f3d205c5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f3d205c668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55f3d205c858 <line:403:22>
| `-NonNullAttr 0x55f3d205c8b0 <col:63, col:77> 1
|-FunctionDecl 0x55f3d205cb08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55f3d205c8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55f3d205c9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55f3d205cbb8 <line:406:22>
| `-NonNullAttr 0x55f3d205cc10 <col:63, col:80> 1 2
|-FunctionDecl 0x55f3d205de48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55f3d205cc58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f3d205ccd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55f3d205def8 <line:409:22>
| `-NonNullAttr 0x55f3d205df50 <col:63, col:77> 1
|-FunctionDecl 0x55f3d205e188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55f3d205df98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f3d205e028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55f3d205e238 <line:412:22>
| `-NonNullAttr 0x55f3d205e290 <col:63, col:80> 1 2
|-FunctionDecl 0x55f3d205e4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55f3d205e2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f3d205e368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55f3d205e578 <col:37>
| `-NonNullAttr 0x55f3d205e5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x55f3d205e7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f3d205e618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f3d205e698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55f3d205e868 <line:418:22>
| `-NonNullAttr 0x55f3d205e8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f3d205ea48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f3d205e908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f3d205e988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55f3d205eaf8 <line:420:22>
| `-NonNullAttr 0x55f3d205eb50 <col:63, col:77> 1
|-FunctionDecl 0x55f3d205ecf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f3d205eb98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f3d205ec18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55f3d205eda8 <line:423:22>
| `-NonNullAttr 0x55f3d205fe30 <col:63, col:80> 1 2
|-FunctionDecl 0x55f3d205ffb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f3d205fe78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f3d205fef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55f3d2060068 <line:426:22>
| `-NonNullAttr 0x55f3d20600c0 <col:63, col:77> 1
|-FunctionDecl 0x55f3d2060268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f3d2060108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f3d2060188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55f3d2060318 <line:429:22>
| `-NonNullAttr 0x55f3d2060370 <col:63, col:80> 1 2
|-FunctionDecl 0x55f3d20604f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f3d20603b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f3d2060438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55f3d20605a8 <line:431:22>
| `-NonNullAttr 0x55f3d2060600 <col:63, col:77> 1
|-FunctionDecl 0x55f3d2060828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55f3d2060648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f3d20606c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55f3d20608d8 <line:434:22>
| |-NonNullAttr 0x55f3d2060930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55f3d2060968 <col:100> "" ""
|-FunctionDecl 0x55f3d2060b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55f3d20609b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f3d2060a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55f3d2060c28 <line:437:22>
| |-NonNullAttr 0x55f3d2060c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x55f3d2060cb8 <col:97> "" ""
|-FunctionDecl 0x55f3d2060eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55f3d2060d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f3d2060d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55f3d2060f68 <line:440:22>
| `-NonNullAttr 0x55f3d2060fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f3d2061140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55f3d2061008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f3d2061080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55f3d20611f0 <line:443:22>
| `-NonNullAttr 0x55f3d2061248 <col:63, col:77> 1
|-FunctionDecl 0x55f3d2061538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55f3d2061298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f3d2061318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55f3d2061390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55f3d20615f0 <line:447:22>
| `-NonNullAttr 0x55f3d2061648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55f3d20618f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55f3d20616a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f3d2061720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55f3d2061798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55f3d20619b0 <col:43>
| `-NonNullAttr 0x55f3d2061a08 <col:84, col:98> 1
|-FunctionDecl 0x55f3d2061cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55f3d2061a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f3d2061ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55f3d2061b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55f3d2061d80 <line:452:22>
| `-NonNullAttr 0x55f3d2061dd8 <col:63, col:77> 3
|-FunctionDecl 0x55f3d20620e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55f3d2061e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f3d2061ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55f3d2061f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55f3d20621a0 <line:456:22>
| `-NonNullAttr 0x55f3d20621f8 <col:63, col:80> 2 3
|-FunctionDecl 0x55f3d20623e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55f3d2062248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f3d20622c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55f3d2062498 <line:458:22>
|-FunctionDecl 0x55f3d2062868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55f3d2062560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55f3d2062700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55f3d2062918 <col:52, col:69> 1 2
|-FunctionDecl 0x55f3d2062ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55f3d20629a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55f3d2062a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55f3d2062ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55f3d2062b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55f3d2062c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55f3d2062e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55f3d2062d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55f3d2062fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55f3d2063040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55f3d20630e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55f3d20631d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55f3d2063240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55f3d2063410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/thin001_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55f3d2063508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55f3d20635c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55f3d2063560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55f3d20630c0 '__pthread_unwind_buf_t'
| |   `-Record 0x55f3d2063040 ''
| `-AlignedAttr 0x55f3d2063618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55f3d2063690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55f3d20637f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55f3d2063858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55f3d20638c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55f3d2063928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55f3d2063b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55f3d2063a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55f3d2063c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55f3d2063be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55f3d2063e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f3d2063d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55f3d2063f18 <line:487:22>
|-RecordDecl 0x55f3d2063f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55f3d2064288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55f3d20640e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55f3d2064168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55f3d2064338 <col:86>
| `-ReturnsTwiceAttr 0x55f3d2064390 <col:12> Implicit
|-FunctionDecl 0x55f3d20646b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55f3d2064460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55f3d2064570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55f3d2064768 <line:493:22>
| `-NonNullAttr 0x55f3d20647c0 <col:63, col:77> 1
|-FunctionDecl 0x55f3d2064938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f3d2064808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f3d20649e0 <line:495:22>
| `-NonNullAttr 0x55f3d2064a38 <col:63, col:77> 1
|-FunctionDecl 0x55f3d2064b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f3d2064a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f3d2064be8 <line:497:22>
| `-NonNullAttr 0x55f3d2064c40 <col:52, col:66> 1
|-FunctionDecl 0x55f3d2064d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f3d2064c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f3d2064de8 <line:499:22>
| `-NonNullAttr 0x55f3d2064e40 <col:52, col:66> 1
|-FunctionDecl 0x55f3d2065088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f3d2064e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f3d2064f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55f3d2065138 <col:36>
| `-NonNullAttr 0x55f3d2065190 <col:66, col:83> 1 2
|-FunctionDecl 0x55f3d2065290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f3d20651d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f3d2065338 <line:504:22>
| `-NonNullAttr 0x55f3d2065390 <col:52, col:66> 1
|-FunctionDecl 0x55f3d2065628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f3d2065440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f3d20654c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55f3d20656d8 <line:508:22>
| `-NonNullAttr 0x55f3d2065730 <col:63, col:80> 1 2
|-FunctionDecl 0x55f3d20659f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55f3d2065778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f3d20657f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55f3d2065878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55f3d2065ab0 <line:512:22>
| `-NonNullAttr 0x55f3d2065b08 <col:63, col:80> 1 3
|-FunctionDecl 0x55f3d2065c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f3d2065b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f3d2065cb8 <line:514:22>
| `-NonNullAttr 0x55f3d2065d10 <col:63, col:77> 1
|-FunctionDecl 0x55f3d2065f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55f3d2065dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55f3d2065fe0 <line:516:22>
| `-NonNullAttr 0x55f3d2066038 <col:63, col:77> 1
|-FunctionDecl 0x55f3d2066140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55f3d2066088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55f3d20661e8 <line:518:22>
| `-NonNullAttr 0x55f3d2066240 <col:63, col:77> 1
|-FunctionDecl 0x55f3d2066468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f3d2066288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f3d2066308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f3d2066518 <line:522:22>
| `-NonNullAttr 0x55f3d2066570 <col:63, col:80> 1 2
|-FunctionDecl 0x55f3d2066778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f3d20665b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f3d2066638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55f3d2066828 <line:525:22>
| `-NonNullAttr 0x55f3d2066880 <col:63, col:77> 1
|-FunctionDecl 0x55f3d2066a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f3d20668c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f3d2066948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55f3d2066ad8 <line:528:22>
| `-NonNullAttr 0x55f3d2066b30 <col:63, col:80> 1 2
|-FunctionDecl 0x55f3d2066cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f3d2066b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f3d2066bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55f3d2066d68 <line:530:22>
| `-NonNullAttr 0x55f3d2066dc0 <col:63, col:77> 1
|-FunctionDecl 0x55f3d2067f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f3d2066e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f3d2067eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55f3d2068040 <line:534:22>
| `-NonNullAttr 0x55f3d2068098 <col:63, col:80> 1 2
|-FunctionDecl 0x55f3d2068228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f3d20680e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f3d2068168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55f3d20682d8 <line:537:22>
| `-NonNullAttr 0x55f3d2068330 <col:63, col:77> 1
|-FunctionDecl 0x55f3d20684d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f3d2068378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f3d20683f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55f3d2068588 <line:541:22>
| `-NonNullAttr 0x55f3d20685e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f3d2068768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f3d2068628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f3d20686a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55f3d2068818 <line:544:22>
| `-NonNullAttr 0x55f3d2068870 <col:63, col:77> 1
|-FunctionDecl 0x55f3d2068a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55f3d20688b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f3d2068938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55f3d2068b08 <line:547:22>
| `-NonNullAttr 0x55f3d2068b60 <col:63, col:80> 1 2
|-FunctionDecl 0x55f3d2068ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f3d2068ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f3d2068c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55f3d2068d98 <line:550:22>
| `-NonNullAttr 0x55f3d2068df0 <col:63, col:77> 1
|-FunctionDecl 0x55f3d206a168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55f3d2069f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55f3d206a020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55f3d206a218 <col:29>
| `-NonNullAttr 0x55f3d206a270 <col:70, col:84> 1
|-FunctionDecl 0x55f3d206a3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f3d206a2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f3d206a490 <line:555:22>
| `-NonNullAttr 0x55f3d206a4e8 <col:63, col:77> 1
|-FunctionDecl 0x55f3d206a5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f3d206a538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f3d206a698 <line:557:22>
| `-NonNullAttr 0x55f3d206a6f0 <col:52, col:66> 1
|-FunctionDecl 0x55f3d206a7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f3d206a738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f3d206a898 <line:559:19>
| `-NonNullAttr 0x55f3d206a8f0 <col:49, col:63> 1
|-FunctionDecl 0x55f3d206ab28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f3d206a938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55f3d206a9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55f3d206abd8 <col:39>
| `-NonNullAttr 0x55f3d206ac30 <col:69, col:86> 1 2
|-FunctionDecl 0x55f3d206ad30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f3d206ac78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f3d206add8 <line:564:22>
| `-NonNullAttr 0x55f3d206ae30 <col:52, col:66> 1
|-FunctionDecl 0x55f3d206af98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f3d206aee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f3d206b040 <line:566:22>
| `-NonNullAttr 0x55f3d206b098 <col:52, col:66> 1
|-FunctionDecl 0x55f3d206b258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f3d206b0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55f3d206b178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55f3d206b308 <col:39>
| `-NonNullAttr 0x55f3d206b360 <col:69, col:86> 1 2
|-FunctionDecl 0x55f3d206b460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f3d206b3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f3d206b508 <line:571:22>
| `-NonNullAttr 0x55f3d206b560 <col:52, col:66> 1
|-FunctionDecl 0x55f3d206b748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55f3d206b610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55f3d206b7f0 <line:573:22>
| `-NonNullAttr 0x55f3d206b848 <col:63, col:77> 1
|-FunctionDecl 0x55f3d206b950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55f3d206b898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55f3d206b9f8 <line:575:22>
| `-NonNullAttr 0x55f3d206ba50 <col:63, col:77> 1
|-FunctionDecl 0x55f3d206bc78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f3d206ba98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55f3d206bb18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f3d206bd28 <line:579:22>
| `-NonNullAttr 0x55f3d206bd80 <col:63, col:80> 1 2
|-FunctionDecl 0x55f3d206bfa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55f3d206bdc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55f3d206be48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55f3d206c058 <line:582:22>
| `-NonNullAttr 0x55f3d206c0b0 <col:63, col:77> 1
|-FunctionDecl 0x55f3d206c258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f3d206c0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55f3d206c178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55f3d206c308 <line:586:22>
| `-NonNullAttr 0x55f3d206c360 <col:63, col:80> 1 2
|-FunctionDecl 0x55f3d206c4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55f3d206c3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55f3d206c428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55f3d206c598 <col:36>
| `-NonNullAttr 0x55f3d206c5f0 <col:77, col:91> 1
|-FunctionDecl 0x55f3d206c928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55f3d206c6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55f3d206c7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55f3d206c9d8 <line:591:22>
| `-NonNullAttr 0x55f3d206ca30 <col:63, col:77> 1
|-FunctionDecl 0x55f3d206cba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55f3d206ca78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55f3d206cc50 <line:593:22>
| `-NonNullAttr 0x55f3d206cca8 <col:63, col:77> 1
|-FunctionDecl 0x55f3d206cdb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55f3d206ccf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55f3d206ce58 <line:595:22>
| `-NonNullAttr 0x55f3d206ceb0 <col:52, col:66> 1
|-FunctionDecl 0x55f3d206cfc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55f3d206cf10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55f3d206d070 <line:597:22>
| `-NonNullAttr 0x55f3d206d0c8 <col:52, col:66> 1
|-FunctionDecl 0x55f3d206d2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55f3d206d118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55f3d206d190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55f3d206d3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55f3d206d6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f3d206d428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55f3d206d4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f3d206d530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55f3d206d790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55f3d206d9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55f3d206d870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55f3d206da50 <line:606:22>
| `-NonNullAttr 0x55f3d206daa8 <col:63, col:77> 1
|-FunctionDecl 0x55f3d206dbb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55f3d206daf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55f3d206dc58 <line:608:22>
| `-NonNullAttr 0x55f3d206dcb0 <col:63, col:77> 1
|-FunctionDecl 0x55f3d206df10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f3d206dcf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55f3d206dd78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f3d206dfc0 <line:612:22>
| `-NonNullAttr 0x55f3d206e018 <col:63, col:80> 1 2
|-FunctionDecl 0x55f3d206e228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55f3d206e068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55f3d206e0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55f3d206e2d8 <col:37>
| `-NonNullAttr 0x55f3d206e330 <col:78, col:92> 1
|-FunctionDecl 0x55f3d206e548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55f3d206e378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55f3d206e420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55f3d206e5f8 <line:618:22>
| `-NonNullAttr 0x55f3d206e650 <col:63, col:80> 1 2
|-FunctionDecl 0x55f3d206e818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55f3d206e698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55f3d206e710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55f3d206e8c8 <line:621:22>
| `-NonNullAttr 0x55f3d206e920 <col:63, col:77> 1
|-FunctionDecl 0x55f3d206ebc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55f3d206ea00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55f3d206ea80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55f3d206ec78 <line:623:22>
| `-NonNullAttr 0x55f3d206ecd0 <col:63, col:77> 1
|-FunctionDecl 0x55f3d206ee48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f3d206ed18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f3d206ef20 <line:625:22>
| `-NonNullAttr 0x55f3d206ef78 <col:63, col:77> 1
|-FunctionDecl 0x55f3d206f080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f3d206efc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f3d206f128 <line:627:22>
| `-NonNullAttr 0x55f3d206f180 <col:52, col:66> 1
|-FunctionDecl 0x55f3d206f280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f3d206f1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f3d206f328 <line:629:22>
| `-NonNullAttr 0x55f3d206f380 <col:52, col:66> 1
|-FunctionDecl 0x55f3d206f480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f3d206f3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f3d206f528 <line:631:22>
| `-NonNullAttr 0x55f3d206f580 <col:52, col:66> 1
|-FunctionDecl 0x55f3d206f958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55f3d206f660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55f3d206f770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55f3d206f7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55f3d206fa10 <line:635:22>
| `-NonNullAttr 0x55f3d206fa68 <col:63, col:77> 1
|-FunctionDecl 0x55f3d206fbe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55f3d206fab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55f3d206fc90 <line:637:22>
| `-NonNullAttr 0x55f3d206fce8 <col:63, col:77> 1
|-FunctionDecl 0x55f3d206fdf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55f3d206fd38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55f3d206fe98 <line:639:22>
| `-NonNullAttr 0x55f3d206fef0 <col:52, col:66> 1
|-FunctionDecl 0x55f3d20700e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55f3d206ffb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55f3d2070190 <line:641:22>
| `-NonNullAttr 0x55f3d20701e8 <col:63, col:77> 1
|-FunctionDecl 0x55f3d20702f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55f3d2070238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55f3d2070398 <line:643:22>
| `-NonNullAttr 0x55f3d20703f0 <col:63, col:77> 1
|-FunctionDecl 0x55f3d2070618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f3d2070438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55f3d20704b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f3d20706c8 <line:647:22>
| `-NonNullAttr 0x55f3d2070720 <col:63, col:80> 1 2
|-FunctionDecl 0x55f3d2070928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55f3d2070768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55f3d20707e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55f3d20709d8 <line:650:22>
| `-NonNullAttr 0x55f3d2070a30 <col:63, col:77> 1
|-FunctionDecl 0x55f3d2070d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55f3d2070b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55f3d2070c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55f3d2070e28 <line:653:22>
| `-NonNullAttr 0x55f3d2070e80 <col:63, col:77> 1
|-FunctionDecl 0x55f3d2070fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55f3d2070ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55f3d2071090 <col:69>
|-FunctionDecl 0x55f3d2071208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55f3d20710f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55f3d20712b0 <col:72>
|-FunctionDecl 0x55f3d20714e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55f3d2071318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55f3d20713c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55f3d2071598 <col:44>
|-FunctionDecl 0x55f3d20717b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55f3d2071600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f3d2071678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55f3d2071868 <line:660:22>
| `-NonNullAttr 0x55f3d20718c0 <col:63, col:77> 2
|-FunctionDecl 0x55f3d2071d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55f3d20719a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55f3d2071ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55f3d2071bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55f3d2071dc0 <col:47>
|-FunctionDecl 0x55f3d2072f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55f3d2071e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55f3d20730b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55f3d2073020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55f3d2073210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55f3d2073178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55f3d20732d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55f3d2073398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55f3d2073458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55f3d2073510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55f3d2073590 prev 0x55f3d2073510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55f3d20735f8 <col:24> 'int' 0
|-VarDecl 0x55f3d2073630 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55f3d20736b0 prev 0x55f3d2073630 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55f3d2073718 <col:27> 'int' 0
|-VarDecl 0x55f3d2073750 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55f3d20737d0 prev 0x55f3d2073750 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55f3d2073838 <col:27> 'int' 0
|-VarDecl 0x55f3d2073870 <line:677:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55f3d20738f0 prev 0x55f3d2073870 <line:678:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55f3d2073958 <col:27> 'int' 0
|-VarDecl 0x55f3d2073988 <line:679:1, col:7> col:7 __unbuffered_p2_EAX$flush_delayed '_Bool'
|-VarDecl 0x55f3d2073a08 <line:680:1, col:5> col:5 __unbuffered_p2_EAX$mem_tmp 'int'
|-VarDecl 0x55f3d2073a80 <line:681:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x55f3d2073af8 <line:682:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x55f3d2073b70 <line:683:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x55f3d2073be8 <line:684:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x55f3d2073c60 <line:685:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x55f3d2073cd8 <line:686:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x55f3d2073d50 <line:687:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x55f3d2073dc8 <line:688:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x55f3d2073e40 <line:689:1, col:7> col:7 used __unbuffered_p2_EAX$read_delayed '_Bool'
|-VarDecl 0x55f3d2073ec0 <line:690:1, col:6> col:6 used __unbuffered_p2_EAX$read_delayed_var 'int *'
|-VarDecl 0x55f3d2073f70 <line:691:1, col:5> col:5 __unbuffered_p2_EAX$w_buff0 'int'
|-VarDecl 0x55f3d2073fe8 <line:692:1, col:7> col:7 __unbuffered_p2_EAX$w_buff0_used '_Bool'
|-VarDecl 0x55f3d2074068 <line:693:1, col:5> col:5 __unbuffered_p2_EAX$w_buff1 'int'
|-VarDecl 0x55f3d20740e0 <line:694:1, col:7> col:7 __unbuffered_p2_EAX$w_buff1_used '_Bool'
|-VarDecl 0x55f3d2074158 <line:695:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55f3d20741d0 <line:696:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55f3d2074250 <line:697:1, col:5> col:5 used x 'int'
|-VarDecl 0x55f3d20742d0 prev 0x55f3d2074250 <line:698:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55f3d2074338 <col:9> 'int' 0
|-VarDecl 0x55f3d2074370 <line:699:1, col:5> col:5 used y 'int'
|-VarDecl 0x55f3d20743f0 prev 0x55f3d2074370 <line:700:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55f3d2074458 <col:9> 'int' 0
|-VarDecl 0x55f3d2074488 <line:701:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x55f3d2074508 <line:702:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x55f3d2074580 <line:703:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x55f3d20745f8 <line:704:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x55f3d2074670 <line:705:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x55f3d20746e8 <line:706:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x55f3d2074760 <line:707:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x55f3d20747d8 <line:708:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x55f3d2074850 <line:709:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x55f3d20748c8 <line:710:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x55f3d2074940 <line:711:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x55f3d20749c0 <line:712:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x55f3d2074a40 <line:713:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x55f3d2074ab8 <line:714:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x55f3d2074b38 <line:715:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x55f3d2074bb0 <line:716:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x55f3d2074c30 <line:717:1, col:5> col:5 used z 'int'
|-VarDecl 0x55f3d2074cb0 prev 0x55f3d2074c30 <line:718:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55f3d2074d18 <col:9> 'int' 0
|-VarDecl 0x55f3d2074d48 <line:719:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55f3d2074dc0 <line:720:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x55f3d2074e38 <line:721:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55f3d2074f80 prev 0x55f3d2072f60 <line:722:1, line:736:1> line:722:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55f3d2074eb8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55f3d2075548 <line:723:1, line:736:1>
|   |-CallExpr 0x55f3d2075098 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f3d2075080 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3d2075028 <col:3> 'void ()' Function 0x55f3d201a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f3d2075110 <line:725:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55f3d20750b8 <col:3> 'int' lvalue Var 0x55f3d20736b0 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55f3d20750f8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f3d20750d8 <col:25> 'int' lvalue Var 0x55f3d2074cb0 'z' 'int'
|   |-CallExpr 0x55f3d2075168 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f3d2075150 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3d2075130 <col:3> 'void ()' Function 0x55f3d201a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f3d20751c0 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f3d20751a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3d2075188 <col:3> 'void ()' Function 0x55f3d201a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f3d2075220 <line:728:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55f3d20751e0 <col:3> 'int' lvalue Var 0x55f3d20742d0 'x' 'int'
|   | `-IntegerLiteral 0x55f3d2075200 <col:7> 'int' 1
|   |-CallExpr 0x55f3d2075278 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f3d2075260 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3d2075240 <col:3> 'void ()' Function 0x55f3d201a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f3d20752d0 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f3d20752b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3d2075298 <col:3> 'void ()' Function 0x55f3d201a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55f3d2075328 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f3d2075310 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3d20752f0 <col:3> 'void ()' Function 0x55f3d201a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f3d2075380 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f3d2075368 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3d2075348 <col:3> 'void ()' Function 0x55f3d201a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f3d2075438 <line:733:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55f3d20753a0 <col:3> 'int' lvalue Var 0x55f3d2073590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55f3d2075418 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55f3d2075400 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f3d20753c0 <col:22> 'int' lvalue Var 0x55f3d2073590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55f3d20753e0 <col:41> 'int' 1
|   |-CallExpr 0x55f3d2075490 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f3d2075478 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3d2075458 <col:3> 'void ()' Function 0x55f3d201a410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55f3d2075538 <line:735:3, col:36>
|     `-CallExpr 0x55f3d2075518 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55f3d2075500 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55f3d20754b0 <col:10> 'void *(void)' Function 0x55f3d2019e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55f3d2075668 prev 0x55f3d20730b8 <line:737:1, line:765:1> line:737:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55f3d20755d0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55f3d2076e40 <line:738:1, line:765:1>
|   |-CallExpr 0x55f3d2075748 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f3d2075730 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3d2075710 <col:3> 'void ()' Function 0x55f3d201a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f3d20757c0 <line:740:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55f3d2075768 <col:3> 'int' lvalue Var 0x55f3d20737d0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55f3d20757a8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f3d2075788 <col:25> 'int' lvalue Var 0x55f3d20742d0 'x' 'int'
|   |-CallExpr 0x55f3d2075818 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f3d2075800 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3d20757e0 <col:3> 'void ()' Function 0x55f3d201a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f3d2075870 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f3d2075858 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3d2075838 <col:3> 'void ()' Function 0x55f3d201a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f3d20758e8 <line:743:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55f3d2075890 <col:3> 'int' lvalue Var 0x55f3d2074b38 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55f3d20758d0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f3d20758b0 <col:15> 'int' lvalue Var 0x55f3d2074a40 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55f3d2075948 <line:744:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55f3d2075908 <col:3> 'int' lvalue Var 0x55f3d2074a40 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x55f3d2075928 <col:15> 'int' 1
|   |-BinaryOperator 0x55f3d20759c0 <line:745:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f3d2075968 <col:3> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f3d20759a8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f3d2075988 <col:20> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f3d2075a58 <line:746:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55f3d20759e0 <col:3> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55f3d2075a30 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55f3d2075a00 <col:27> 'int' 1
|   |-CallExpr 0x55f3d2075bd8 <line:747:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55f3d2075bc0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55f3d2075a78 <col:3> 'void (int)' Function 0x55f3d201a0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55f3d2075b78 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55f3d2075b58 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55f3d2075b38 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55f3d2075af0 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55f3d2075ad8 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55f3d2075a98 <col:23> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55f3d2075b20 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55f3d2075b08 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55f3d2075ab8 <col:41> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f3d2075c58 <line:748:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f3d2075c00 <col:3> '_Bool' lvalue Var 0x55f3d2074760 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55f3d2075c40 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f3d2075c20 <col:20> '_Bool' lvalue Var 0x55f3d2074580 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55f3d2075cd0 <line:749:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f3d2075c78 <col:3> '_Bool' lvalue Var 0x55f3d20747d8 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55f3d2075cb8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f3d2075c98 <col:20> '_Bool' lvalue Var 0x55f3d20745f8 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55f3d2075d48 <line:750:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f3d2075cf0 <col:3> '_Bool' lvalue Var 0x55f3d2074850 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55f3d2075d30 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f3d2075d10 <col:20> '_Bool' lvalue Var 0x55f3d2074670 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55f3d2075dc0 <line:751:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f3d2075d68 <col:3> '_Bool' lvalue Var 0x55f3d20748c8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55f3d2075da8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f3d2075d88 <col:20> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55f3d2075e58 <line:752:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55f3d2075de0 <col:3> '_Bool' lvalue Var 0x55f3d2074670 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x55f3d2075e30 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55f3d2075e00 <col:27> 'int' 1
|   |-CallExpr 0x55f3d2075eb0 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f3d2075e98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3d2075e78 <col:3> 'void ()' Function 0x55f3d201a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f3d2075f08 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f3d2075ef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3d2075ed0 <col:3> 'void ()' Function 0x55f3d201a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f3d2076218 <line:755:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55f3d2075f28 <col:3> 'int' lvalue Var 0x55f3d20743f0 'y' 'int'
|   | `-ConditionalOperator 0x55f3d20761e8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55f3d2076010 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55f3d2075fc8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55f3d2075fb0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55f3d2075f48 <col:7> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55f3d2075ff8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55f3d2075fe0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55f3d2075f90 <col:25> '_Bool' lvalue Var 0x55f3d2074670 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55f3d20761d0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f3d2076030 <col:42> 'int' lvalue Var 0x55f3d2074a40 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55f3d20761b0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55f3d2076180 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55f3d20760f0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55f3d20760a8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55f3d2076090 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55f3d2076050 <col:55> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55f3d20760d8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55f3d20760c0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55f3d2076070 <col:73> '_Bool' lvalue Var 0x55f3d2074850 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55f3d2076150 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f3d2076110 <col:90> 'int' lvalue Var 0x55f3d2074b38 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55f3d2076168 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f3d2076130 <col:102> 'int' lvalue Var 0x55f3d20743f0 'y' 'int'
|   |-BinaryOperator 0x55f3d2076420 <line:756:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f3d2076238 <col:3> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f3d2076408 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f3d20763d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f3d20762f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f3d20762b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f3d2076298 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f3d2076258 <col:20> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f3d20762e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f3d20762c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f3d2076278 <col:38> '_Bool' lvalue Var 0x55f3d2074670 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f3d2076390 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f3d2076348 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f3d2076318 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f3d20763c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f3d20763a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f3d2076370 <col:66> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f3d2076708 <line:757:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f3d2076440 <col:3> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f3d20766f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f3d20766c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f3d20765e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f3d2076500 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f3d20764b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f3d20764a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f3d2076460 <col:20> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f3d20764e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f3d20764d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f3d2076480 <col:38> '_Bool' lvalue Var 0x55f3d2074670 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55f3d20765c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f3d2076578 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f3d2076560 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f3d2076520 <col:56> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f3d20765a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f3d2076590 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f3d2076540 <col:74> '_Bool' lvalue Var 0x55f3d2074850 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f3d2076678 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f3d2076630 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f3d2076600 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f3d20766a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f3d2076690 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f3d2076658 <col:102> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55f3d2076910 <line:758:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f3d2076728 <col:3> '_Bool' lvalue Var 0x55f3d2074670 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55f3d20768f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f3d20768c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f3d20767e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f3d20767a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f3d2076788 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f3d2076748 <col:20> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f3d20767d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f3d20767b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f3d2076768 <col:38> '_Bool' lvalue Var 0x55f3d2074670 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f3d2076880 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f3d2076838 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f3d2076808 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f3d20768b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f3d2076898 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f3d2076860 <col:66> '_Bool' lvalue Var 0x55f3d2074670 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55f3d2076bf8 <line:759:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f3d2076930 <col:3> '_Bool' lvalue Var 0x55f3d2074850 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55f3d2076be0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f3d2076bb0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f3d2076ad0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f3d20769f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f3d20769a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f3d2076990 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f3d2076950 <col:20> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f3d20769d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f3d20769c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f3d2076970 <col:38> '_Bool' lvalue Var 0x55f3d2074670 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55f3d2076ab0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f3d2076a68 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f3d2076a50 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f3d2076a10 <col:56> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f3d2076a98 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f3d2076a80 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f3d2076a30 <col:74> '_Bool' lvalue Var 0x55f3d2074850 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f3d2076b68 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f3d2076b20 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f3d2076af0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f3d2076b98 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f3d2076b80 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f3d2076b48 <col:102> '_Bool' lvalue Var 0x55f3d2074850 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55f3d2076c50 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f3d2076c38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3d2076c18 <col:3> 'void ()' Function 0x55f3d201a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f3d2076ca8 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f3d2076c90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3d2076c70 <col:3> 'void ()' Function 0x55f3d201a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f3d2076d60 <line:762:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55f3d2076cc8 <col:3> 'int' lvalue Var 0x55f3d2073590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55f3d2076d40 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55f3d2076d28 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f3d2076ce8 <col:22> 'int' lvalue Var 0x55f3d2073590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55f3d2076d08 <col:41> 'int' 1
|   |-CallExpr 0x55f3d2076db8 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f3d2076da0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3d2076d80 <col:3> 'void ()' Function 0x55f3d201a410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55f3d2076e30 <line:764:3, col:36>
|     `-CallExpr 0x55f3d2076e10 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55f3d2076df8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55f3d2076dd8 <col:10> 'void *(void)' Function 0x55f3d2019e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55f3d2077038 prev 0x55f3d2073210 <line:766:1, line:801:1> line:766:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55f3d2076fa0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55f3d207c5f8 <line:767:1, line:801:1>
|   |-CallExpr 0x55f3d2077118 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f3d2077100 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3d20770e0 <col:3> 'void ()' Function 0x55f3d201a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f3d20771c8 <line:769:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55f3d2077138 <col:3> '_Bool' lvalue Var 0x55f3d2074d48 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55f3d20771b0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55f3d2077190 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55f3d2077178 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55f3d2077158 <col:19> 'void *(void)' Function 0x55f3d2019e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55f3d2077278 <line:770:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55f3d20771e8 <col:3> '_Bool' lvalue Var 0x55f3d2074e38 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55f3d2077260 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55f3d2077240 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55f3d2077228 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55f3d2077208 <col:19> 'void *(void)' Function 0x55f3d2019e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55f3d20772f0 <line:771:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55f3d2077298 <col:3> '_Bool' lvalue Var 0x55f3d2074488 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55f3d20772d8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f3d20772b8 <col:21> '_Bool' lvalue Var 0x55f3d2074e38 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55f3d2077368 <line:772:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55f3d2077310 <col:3> 'int' lvalue Var 0x55f3d2074508 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55f3d2077350 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f3d2077330 <col:15> 'int' lvalue Var 0x55f3d20743f0 'y' 'int'
|   |-BinaryOperator 0x55f3d2077418 <line:773:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55f3d2077388 <col:3> '_Bool' lvalue Var 0x55f3d2074dc0 'weak$$choice1' '_Bool'
|   | `-ImplicitCastExpr 0x55f3d2077400 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55f3d20773e0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55f3d20773c8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55f3d20773a8 <col:19> 'void *(void)' Function 0x55f3d2019e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55f3d2077e40 <line:774:3, col:363> 'int' '='
|   | |-DeclRefExpr 0x55f3d2077438 <col:3> 'int' lvalue Var 0x55f3d20743f0 'y' 'int'
|   | `-ConditionalOperator 0x55f3d2077e10 <col:7, col:363> 'int'
|   |   |-UnaryOperator 0x55f3d2077490 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | `-ImplicitCastExpr 0x55f3d2077478 <col:8> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55f3d2077458 <col:8> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |   |-ImplicitCastExpr 0x55f3d2077df8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f3d20774a8 <col:25> 'int' lvalue Var 0x55f3d20743f0 'y' 'int'
|   |   `-ParenExpr 0x55f3d2077dd8 <col:29, col:363> 'int'
|   |     `-ConditionalOperator 0x55f3d2077da8 <col:30, col:362> 'int'
|   |       |-BinaryOperator 0x55f3d2077568 <col:30, col:48> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55f3d2077520 <col:30> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55f3d2077508 <col:30> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55f3d20774c8 <col:30> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55f3d2077550 <col:48> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55f3d2077538 <col:48> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55f3d20774e8 <col:48> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55f3d2077d90 <col:65> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f3d2077588 <col:65> 'int' lvalue Var 0x55f3d2074a40 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55f3d2077d70 <col:77, col:362> 'int'
|   |         `-ConditionalOperator 0x55f3d2077d40 <col:78, col:361> 'int'
|   |           |-BinaryOperator 0x55f3d2077728 <col:78, col:134> 'int' '&&'
|   |           | |-BinaryOperator 0x55f3d20776b8 <col:78, col:115> 'int' '&&'
|   |           | | |-BinaryOperator 0x55f3d2077648 <col:78, col:97> 'int' '&&'
|   |           | | | |-ImplicitCastExpr 0x55f3d2077630 <col:78> 'int' <IntegralCast>
|   |           | | | | `-ImplicitCastExpr 0x55f3d2077618 <col:78> '_Bool' <LValueToRValue>
|   |           | | | |   `-DeclRefExpr 0x55f3d20775a8 <col:78> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |           | | | `-UnaryOperator 0x55f3d2077600 <col:96, col:97> 'int' prefix '!' cannot overflow
|   |           | | |   `-ImplicitCastExpr 0x55f3d20775e8 <col:97> '_Bool' <LValueToRValue>
|   |           | | |     `-DeclRefExpr 0x55f3d20775c8 <col:97> '_Bool' lvalue Var 0x55f3d20748c8 'y$r_buff1_thd3' '_Bool'
|   |           | | `-ImplicitCastExpr 0x55f3d20776a0 <col:115> 'int' <IntegralCast>
|   |           | |   `-ImplicitCastExpr 0x55f3d2077688 <col:115> '_Bool' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x55f3d2077668 <col:115> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   |           | `-UnaryOperator 0x55f3d2077710 <col:133, col:134> 'int' prefix '!' cannot overflow
|   |           |   `-ImplicitCastExpr 0x55f3d20776f8 <col:134> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55f3d20776d8 <col:134> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |           |-ParenExpr 0x55f3d2077910 <col:151, col:211> 'int'
|   |           | `-ConditionalOperator 0x55f3d20778e0 <col:152, col:210> 'int'
|   |           |   |-ImplicitCastExpr 0x55f3d20778b0 <col:152> 'int' <IntegralCast>
|   |           |   | `-ImplicitCastExpr 0x55f3d2077898 <col:152> '_Bool' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x55f3d2077748 <col:152> '_Bool' lvalue Var 0x55f3d2074d48 'weak$$choice0' '_Bool'
|   |           |   |-ImplicitCastExpr 0x55f3d20778c8 <col:168> 'int' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x55f3d2077768 <col:168> 'int' lvalue Var 0x55f3d20743f0 'y' 'int'
|   |           |   `-ParenExpr 0x55f3d2077878 <col:172, col:210> 'int'
|   |           |     `-ConditionalOperator 0x55f3d2077848 <col:173, col:201> 'int'
|   |           |       |-ImplicitCastExpr 0x55f3d2077800 <col:173> 'int' <IntegralCast>
|   |           |       | `-ImplicitCastExpr 0x55f3d20777e8 <col:173> '_Bool' <LValueToRValue>
|   |           |       |   `-DeclRefExpr 0x55f3d2077788 <col:173> '_Bool' lvalue Var 0x55f3d2074dc0 'weak$$choice1' '_Bool'
|   |           |       |-ImplicitCastExpr 0x55f3d2077818 <col:189> 'int' <LValueToRValue>
|   |           |       | `-DeclRefExpr 0x55f3d20777a8 <col:189> 'int' lvalue Var 0x55f3d2074a40 'y$w_buff0' 'int'
|   |           |       `-ImplicitCastExpr 0x55f3d2077830 <col:201> 'int' <LValueToRValue>
|   |           |         `-DeclRefExpr 0x55f3d20777c8 <col:201> 'int' lvalue Var 0x55f3d2074b38 'y$w_buff1' 'int'
|   |           `-ParenExpr 0x55f3d2077d20 <col:215, col:361> 'int'
|   |             `-ConditionalOperator 0x55f3d2077cf0 <col:216, col:360> 'int'
|   |               |-BinaryOperator 0x55f3d2077ab0 <col:216, col:271> 'int' '&&'
|   |               | |-BinaryOperator 0x55f3d2077a40 <col:216, col:252> 'int' '&&'
|   |               | | |-BinaryOperator 0x55f3d20779d0 <col:216, col:234> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55f3d2077988 <col:216> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55f3d2077970 <col:216> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55f3d2077930 <col:216> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |               | | | `-ImplicitCastExpr 0x55f3d20779b8 <col:234> 'int' <IntegralCast>
|   |               | | |   `-ImplicitCastExpr 0x55f3d20779a0 <col:234> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55f3d2077950 <col:234> '_Bool' lvalue Var 0x55f3d20748c8 'y$r_buff1_thd3' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55f3d2077a28 <col:252> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55f3d2077a10 <col:252> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55f3d20779f0 <col:252> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55f3d2077a98 <col:270, col:271> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55f3d2077a80 <col:271> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55f3d2077a60 <col:271> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |               |-ParenExpr 0x55f3d2077bc0 <col:288, col:326> 'int'
|   |               | `-ConditionalOperator 0x55f3d2077b90 <col:289, col:317> 'int'
|   |               |   |-ImplicitCastExpr 0x55f3d2077b48 <col:289> 'int' <IntegralCast>
|   |               |   | `-ImplicitCastExpr 0x55f3d2077b30 <col:289> '_Bool' <LValueToRValue>
|   |               |   |   `-DeclRefExpr 0x55f3d2077ad0 <col:289> '_Bool' lvalue Var 0x55f3d2074d48 'weak$$choice0' '_Bool'
|   |               |   |-ImplicitCastExpr 0x55f3d2077b60 <col:305> 'int' <LValueToRValue>
|   |               |   | `-DeclRefExpr 0x55f3d2077af0 <col:305> 'int' lvalue Var 0x55f3d2074b38 'y$w_buff1' 'int'
|   |               |   `-ImplicitCastExpr 0x55f3d2077b78 <col:317> 'int' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55f3d2077b10 <col:317> 'int' lvalue Var 0x55f3d2074a40 'y$w_buff0' 'int'
|   |               `-ParenExpr 0x55f3d2077cd0 <col:330, col:360> 'int'
|   |                 `-ConditionalOperator 0x55f3d2077ca0 <col:331, col:359> 'int'
|   |                   |-ImplicitCastExpr 0x55f3d2077c58 <col:331> 'int' <IntegralCast>
|   |                   | `-ImplicitCastExpr 0x55f3d2077c40 <col:331> '_Bool' <LValueToRValue>
|   |                   |   `-DeclRefExpr 0x55f3d2077be0 <col:331> '_Bool' lvalue Var 0x55f3d2074d48 'weak$$choice0' '_Bool'
|   |                   |-ImplicitCastExpr 0x55f3d2077c70 <col:347> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55f3d2077c00 <col:347> 'int' lvalue Var 0x55f3d2074a40 'y$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x55f3d2077c88 <col:359> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55f3d2077c20 <col:359> 'int' lvalue Var 0x55f3d20743f0 'y' 'int'
|   |-BinaryOperator 0x55f3d20785f0 <line:775:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x55f3d2077e60 <col:3> 'int' lvalue Var 0x55f3d2074a40 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55f3d20785c0 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x55f3d2078590 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55f3d2078578 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55f3d2077e80 <col:15> '_Bool' lvalue Var 0x55f3d2074e38 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55f3d20785a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f3d2077ea0 <col:31> 'int' lvalue Var 0x55f3d2074a40 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55f3d2078558 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x55f3d2078528 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x55f3d2077ef8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x55f3d2077ee0 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55f3d2077ec0 <col:45> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x55f3d2078510 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f3d2077f10 <col:62> 'int' lvalue Var 0x55f3d2074a40 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55f3d20784f0 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x55f3d20784c0 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x55f3d2077fe0 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55f3d2077f88 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55f3d2077f70 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55f3d2077f30 <col:75> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55f3d2077fc8 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55f3d2077fb0 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55f3d2077f50 <col:93> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55f3d20784a8 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55f3d2078000 <col:110> 'int' lvalue Var 0x55f3d2074a40 'y$w_buff0' 'int'
|   |           `-ParenExpr 0x55f3d2078488 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x55f3d2078458 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x55f3d20781a0 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x55f3d2078130 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x55f3d20780c0 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55f3d20780a8 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55f3d2078090 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55f3d2078020 <col:123> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x55f3d2078078 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x55f3d2078060 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55f3d2078040 <col:142> '_Bool' lvalue Var 0x55f3d20748c8 'y$r_buff1_thd3' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55f3d2078118 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55f3d2078100 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55f3d20780e0 <col:160> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55f3d2078188 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55f3d2078170 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55f3d2078150 <col:179> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |               |-ImplicitCastExpr 0x55f3d2078440 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x55f3d20781c0 <col:196> 'int' lvalue Var 0x55f3d2074a40 'y$w_buff0' 'int'
|   |               `-ParenExpr 0x55f3d2078420 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x55f3d20783f0 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x55f3d2078360 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x55f3d20782f0 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x55f3d2078280 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x55f3d2078238 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x55f3d2078220 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x55f3d20781e0 <col:209> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x55f3d2078268 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x55f3d2078250 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x55f3d2078200 <col:227> '_Bool' lvalue Var 0x55f3d20748c8 'y$r_buff1_thd3' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x55f3d20782d8 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x55f3d20782c0 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x55f3d20782a0 <col:245> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x55f3d2078348 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x55f3d2078330 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x55f3d2078310 <col:264> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |                   |-ImplicitCastExpr 0x55f3d20783c0 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55f3d2078380 <col:281> 'int' lvalue Var 0x55f3d2074a40 'y$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x55f3d20783d8 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55f3d20783a0 <col:293> 'int' lvalue Var 0x55f3d2074a40 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55f3d2078d90 <line:776:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x55f3d2078610 <col:3> 'int' lvalue Var 0x55f3d2074b38 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55f3d2078d60 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x55f3d2078d30 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55f3d2078d18 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55f3d2078630 <col:15> '_Bool' lvalue Var 0x55f3d2074e38 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55f3d2078d48 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f3d2078650 <col:31> 'int' lvalue Var 0x55f3d2074b38 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55f3d2078cf8 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x55f3d2078cc8 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x55f3d20786a8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x55f3d2078690 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55f3d2078670 <col:45> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x55f3d2078cb0 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f3d20786c0 <col:62> 'int' lvalue Var 0x55f3d2074b38 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55f3d2078c90 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x55f3d2078c60 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x55f3d2078780 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55f3d2078738 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55f3d2078720 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55f3d20786e0 <col:75> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55f3d2078768 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55f3d2078750 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55f3d2078700 <col:93> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55f3d2078c48 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55f3d20787a0 <col:110> 'int' lvalue Var 0x55f3d2074b38 'y$w_buff1' 'int'
|   |           `-ParenExpr 0x55f3d2078c28 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x55f3d2078bf8 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x55f3d2078940 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x55f3d20788d0 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x55f3d2078860 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55f3d2078848 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55f3d2078830 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55f3d20787c0 <col:123> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x55f3d2078818 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x55f3d2078800 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55f3d20787e0 <col:142> '_Bool' lvalue Var 0x55f3d20748c8 'y$r_buff1_thd3' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55f3d20788b8 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55f3d20788a0 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55f3d2078880 <col:160> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55f3d2078928 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55f3d2078910 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55f3d20788f0 <col:179> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |               |-ImplicitCastExpr 0x55f3d2078be0 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x55f3d2078960 <col:196> 'int' lvalue Var 0x55f3d2074b38 'y$w_buff1' 'int'
|   |               `-ParenExpr 0x55f3d2078bc0 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x55f3d2078b90 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x55f3d2078b00 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x55f3d2078a90 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x55f3d2078a20 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x55f3d20789d8 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x55f3d20789c0 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x55f3d2078980 <col:209> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x55f3d2078a08 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x55f3d20789f0 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x55f3d20789a0 <col:227> '_Bool' lvalue Var 0x55f3d20748c8 'y$r_buff1_thd3' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x55f3d2078a78 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x55f3d2078a60 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x55f3d2078a40 <col:245> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x55f3d2078ae8 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x55f3d2078ad0 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x55f3d2078ab0 <col:264> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |                   |-ImplicitCastExpr 0x55f3d2078b60 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55f3d2078b20 <col:281> 'int' lvalue Var 0x55f3d2074b38 'y$w_buff1' 'int'
|   |                   `-ImplicitCastExpr 0x55f3d2078b78 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55f3d2078b40 <col:293> 'int' lvalue Var 0x55f3d2074b38 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55f3d2079690 <line:777:3, col:349> '_Bool' '='
|   | |-DeclRefExpr 0x55f3d2078db0 <col:3> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f3d2079678 <col:20, col:349> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f3d2079648 <col:20, col:349> 'int'
|   |     |-ImplicitCastExpr 0x55f3d2079600 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f3d20795e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f3d2078dd0 <col:20> '_Bool' lvalue Var 0x55f3d2074e38 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f3d2079630 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f3d2079618 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f3d2078df0 <col:36> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55f3d20795c8 <col:53, col:349> 'int'
|   |       `-ConditionalOperator 0x55f3d2079598 <col:54, col:348> 'int'
|   |         |-UnaryOperator 0x55f3d2078e48 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55f3d2078e30 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f3d2078e10 <col:55> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55f3d2079580 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f3d2079568 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f3d2078e60 <col:72> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55f3d2079548 <col:89, col:348> 'int'
|   |           `-ConditionalOperator 0x55f3d2079518 <col:90, col:347> 'int'
|   |             |-BinaryOperator 0x55f3d2078f20 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f3d2078ed8 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f3d2078ec0 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f3d2078e80 <col:90> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f3d2078f08 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f3d2078ef0 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f3d2078ea0 <col:108> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55f3d2079500 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f3d2078f70 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f3d2078f40 <col:132> 'int' 0
|   |             `-ParenExpr 0x55f3d20794e0 <col:136, col:347> 'int'
|   |               `-ConditionalOperator 0x55f3d20794b0 <col:137, col:346> 'int'
|   |                 |-BinaryOperator 0x55f3d2079140 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55f3d20790d0 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55f3d2079060 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55f3d2079048 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55f3d2079030 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55f3d2078fc0 <col:137> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55f3d2079018 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55f3d2079000 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55f3d2078fe0 <col:156> '_Bool' lvalue Var 0x55f3d20748c8 'y$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55f3d20790b8 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55f3d20790a0 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55f3d2079080 <col:174> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55f3d2079128 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55f3d2079110 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55f3d20790f0 <col:193> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |                 |-BinaryOperator 0x55f3d2079200 <col:210, col:228> 'int' '||'
|   |                 | |-ImplicitCastExpr 0x55f3d20791e8 <col:210> 'int' <IntegralCast>
|   |                 | | `-ImplicitCastExpr 0x55f3d20791d0 <col:210> '_Bool' <LValueToRValue>
|   |                 | |   `-DeclRefExpr 0x55f3d2079160 <col:210> '_Bool' lvalue Var 0x55f3d2074d48 'weak$$choice0' '_Bool'
|   |                 | `-UnaryOperator 0x55f3d20791b8 <col:227, col:228> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55f3d20791a0 <col:228> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55f3d2079180 <col:228> '_Bool' lvalue Var 0x55f3d2074dc0 'weak$$choice1' '_Bool'
|   |                 `-ParenExpr 0x55f3d2079490 <col:244, col:346> 'int'
|   |                   `-ConditionalOperator 0x55f3d2079460 <col:245, col:333> 'int'
|   |                     |-BinaryOperator 0x55f3d20793a0 <col:245, col:300> 'int' '&&'
|   |                     | |-BinaryOperator 0x55f3d2079330 <col:245, col:281> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55f3d20792c0 <col:245, col:263> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55f3d2079278 <col:245> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55f3d2079260 <col:245> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55f3d2079220 <col:245> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55f3d20792a8 <col:263> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55f3d2079290 <col:263> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55f3d2079240 <col:263> '_Bool' lvalue Var 0x55f3d20748c8 'y$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55f3d2079318 <col:281> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55f3d2079300 <col:281> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55f3d20792e0 <col:281> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55f3d2079388 <col:299, col:300> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55f3d2079370 <col:300> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55f3d2079350 <col:300> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x55f3d2079418 <col:317> 'int' <IntegralCast>
|   |                     | `-ImplicitCastExpr 0x55f3d2079400 <col:317> '_Bool' <LValueToRValue>
|   |                     |   `-DeclRefExpr 0x55f3d20793c0 <col:317> '_Bool' lvalue Var 0x55f3d2074d48 'weak$$choice0' '_Bool'
|   |                     `-ImplicitCastExpr 0x55f3d2079448 <col:333> 'int' <IntegralCast>
|   |                       `-ImplicitCastExpr 0x55f3d2079430 <col:333> '_Bool' <LValueToRValue>
|   |                         `-DeclRefExpr 0x55f3d20793e0 <col:333> '_Bool' lvalue Var 0x55f3d2074d48 'weak$$choice0' '_Bool'
|   |-BinaryOperator 0x55f3d2079f38 <line:778:3, col:321> '_Bool' '='
|   | |-DeclRefExpr 0x55f3d20796b0 <col:3> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f3d2079f20 <col:20, col:321> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f3d2079ef0 <col:20, col:321> 'int'
|   |     |-ImplicitCastExpr 0x55f3d2079ea8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f3d2079e90 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f3d20796d0 <col:20> '_Bool' lvalue Var 0x55f3d2074e38 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f3d2079ed8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f3d2079ec0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f3d20796f0 <col:36> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55f3d2079e70 <col:53, col:321> 'int'
|   |       `-ConditionalOperator 0x55f3d2079e40 <col:54, col:320> 'int'
|   |         |-UnaryOperator 0x55f3d2079748 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55f3d2079730 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f3d2079710 <col:55> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55f3d2079e28 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f3d2079e10 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f3d2079760 <col:72> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55f3d2079df0 <col:89, col:320> 'int'
|   |           `-ConditionalOperator 0x55f3d2079dc0 <col:90, col:319> 'int'
|   |             |-BinaryOperator 0x55f3d2079820 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f3d20797d8 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f3d20797c0 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f3d2079780 <col:90> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f3d2079808 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f3d20797f0 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f3d20797a0 <col:108> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55f3d2079da8 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f3d2079870 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f3d2079840 <col:132> 'int' 0
|   |             `-ParenExpr 0x55f3d2079d88 <col:136, col:319> 'int'
|   |               `-ConditionalOperator 0x55f3d2079d58 <col:137, col:318> 'int'
|   |                 |-BinaryOperator 0x55f3d2079a18 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55f3d20799a8 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55f3d2079938 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55f3d2079920 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55f3d2079908 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55f3d2079898 <col:137> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55f3d20798f0 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55f3d20798d8 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55f3d20798b8 <col:156> '_Bool' lvalue Var 0x55f3d20748c8 'y$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55f3d2079990 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55f3d2079978 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55f3d2079958 <col:174> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55f3d2079a00 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55f3d20799e8 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55f3d20799c8 <col:193> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |                 |-ImplicitCastExpr 0x55f3d2079d40 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x55f3d2079d28 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x55f3d2079a38 <col:210> '_Bool' lvalue Var 0x55f3d2074d48 'weak$$choice0' '_Bool'
|   |                 `-ParenExpr 0x55f3d2079d08 <col:226, col:318> 'int'
|   |                   `-ConditionalOperator 0x55f3d2079cd8 <col:227, col:317> 'int'
|   |                     |-BinaryOperator 0x55f3d2079bd8 <col:227, col:282> 'int' '&&'
|   |                     | |-BinaryOperator 0x55f3d2079b68 <col:227, col:263> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55f3d2079af8 <col:227, col:245> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55f3d2079ab0 <col:227> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55f3d2079a98 <col:227> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55f3d2079a58 <col:227> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55f3d2079ae0 <col:245> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55f3d2079ac8 <col:245> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55f3d2079a78 <col:245> '_Bool' lvalue Var 0x55f3d20748c8 'y$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55f3d2079b50 <col:263> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55f3d2079b38 <col:263> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55f3d2079b18 <col:263> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55f3d2079bc0 <col:281, col:282> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55f3d2079ba8 <col:282> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55f3d2079b88 <col:282> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x55f3d2079ca8 <col:299, col:306> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55f3d2079c28 <col:299, col:306> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55f3d2079bf8 <col:306> 'int' 0
|   |                     `-ImplicitCastExpr 0x55f3d2079cc0 <col:310, col:317> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55f3d2079c80 <col:310, col:317> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55f3d2079c50 <col:317> 'int' 0
|   |-BinaryOperator 0x55f3d207a7f8 <line:779:3, col:322> '_Bool' '='
|   | |-DeclRefExpr 0x55f3d2079f58 <col:3> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55f3d207a7e0 <col:20, col:322> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f3d207a7b0 <col:20, col:322> 'int'
|   |     |-ImplicitCastExpr 0x55f3d207a768 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f3d207a750 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f3d2079f78 <col:20> '_Bool' lvalue Var 0x55f3d2074e38 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f3d207a798 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f3d207a780 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f3d2079f98 <col:36> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x55f3d207a730 <col:53, col:322> 'int'
|   |       `-ConditionalOperator 0x55f3d207a700 <col:54, col:321> 'int'
|   |         |-UnaryOperator 0x55f3d207a008 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55f3d2079ff0 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f3d2079fd0 <col:55> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55f3d207a6e8 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f3d207a6d0 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f3d207a020 <col:72> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x55f3d207a6b0 <col:89, col:321> 'int'
|   |           `-ConditionalOperator 0x55f3d207a680 <col:90, col:320> 'int'
|   |             |-BinaryOperator 0x55f3d207a0e0 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f3d207a098 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f3d207a080 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f3d207a040 <col:90> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f3d207a0c8 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f3d207a0b0 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f3d207a060 <col:108> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55f3d207a668 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f3d207a130 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f3d207a100 <col:132> 'int' 0
|   |             `-ParenExpr 0x55f3d207a648 <col:136, col:320> 'int'
|   |               `-ConditionalOperator 0x55f3d207a618 <col:137, col:319> 'int'
|   |                 |-BinaryOperator 0x55f3d207a2d8 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55f3d207a268 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55f3d207a1f8 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55f3d207a1e0 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55f3d207a1c8 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55f3d207a158 <col:137> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55f3d207a1b0 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55f3d207a198 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55f3d207a178 <col:156> '_Bool' lvalue Var 0x55f3d20748c8 'y$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55f3d207a250 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55f3d207a238 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55f3d207a218 <col:174> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55f3d207a2c0 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55f3d207a2a8 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55f3d207a288 <col:193> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |                 |-ImplicitCastExpr 0x55f3d207a600 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x55f3d207a5e8 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x55f3d207a2f8 <col:210> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |                 `-ParenExpr 0x55f3d207a5c8 <col:227, col:319> 'int'
|   |                   `-ConditionalOperator 0x55f3d207a598 <col:228, col:318> 'int'
|   |                     |-BinaryOperator 0x55f3d207a498 <col:228, col:283> 'int' '&&'
|   |                     | |-BinaryOperator 0x55f3d207a428 <col:228, col:264> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55f3d207a3b8 <col:228, col:246> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55f3d207a370 <col:228> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55f3d207a358 <col:228> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55f3d207a318 <col:228> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55f3d207a3a0 <col:246> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55f3d207a388 <col:246> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55f3d207a338 <col:246> '_Bool' lvalue Var 0x55f3d20748c8 'y$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55f3d207a410 <col:264> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55f3d207a3f8 <col:264> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55f3d207a3d8 <col:264> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55f3d207a480 <col:282, col:283> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55f3d207a468 <col:283> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55f3d207a448 <col:283> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x55f3d207a568 <col:300, col:307> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55f3d207a4e8 <col:300, col:307> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55f3d207a4b8 <col:307> 'int' 0
|   |                     `-ImplicitCastExpr 0x55f3d207a580 <col:311, col:318> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55f3d207a540 <col:311, col:318> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55f3d207a510 <col:318> 'int' 0
|   |-BinaryOperator 0x55f3d207b1c0 <line:780:3, col:351> '_Bool' '='
|   | |-DeclRefExpr 0x55f3d207a818 <col:3> '_Bool' lvalue Var 0x55f3d20748c8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55f3d207b1a8 <col:20, col:351> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f3d207b178 <col:20, col:351> 'int'
|   |     |-ImplicitCastExpr 0x55f3d207b130 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f3d207b118 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f3d207a838 <col:20> '_Bool' lvalue Var 0x55f3d2074e38 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f3d207b160 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f3d207b148 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f3d207a858 <col:36> '_Bool' lvalue Var 0x55f3d20748c8 'y$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x55f3d207b0f8 <col:53, col:351> 'int'
|   |       `-ConditionalOperator 0x55f3d207b0c8 <col:54, col:350> 'int'
|   |         |-UnaryOperator 0x55f3d207a8b0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55f3d207a898 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f3d207a878 <col:55> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55f3d207b0b0 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f3d207b098 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f3d207a8c8 <col:72> '_Bool' lvalue Var 0x55f3d20748c8 'y$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x55f3d207b078 <col:89, col:350> 'int'
|   |           `-ConditionalOperator 0x55f3d207b048 <col:90, col:349> 'int'
|   |             |-BinaryOperator 0x55f3d207a988 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f3d207a940 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f3d207a928 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f3d207a8e8 <col:90> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f3d207a970 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f3d207a958 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f3d207a908 <col:108> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55f3d207b030 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f3d207a9d8 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f3d207a9a8 <col:132> 'int' 0
|   |             `-ParenExpr 0x55f3d207b010 <col:136, col:349> 'int'
|   |               `-ConditionalOperator 0x55f3d207afe0 <col:137, col:348> 'int'
|   |                 |-BinaryOperator 0x55f3d207ab80 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55f3d207ab10 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55f3d207aaa0 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55f3d207aa88 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55f3d207aa70 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55f3d207aa00 <col:137> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55f3d207aa58 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55f3d207aa40 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55f3d207aa20 <col:156> '_Bool' lvalue Var 0x55f3d20748c8 'y$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55f3d207aaf8 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55f3d207aae0 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55f3d207aac0 <col:174> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55f3d207ab68 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55f3d207ab50 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55f3d207ab30 <col:193> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |                 |-ParenExpr 0x55f3d207ace0 <col:210, col:252> 'int'
|   |                 | `-ConditionalOperator 0x55f3d207acb0 <col:211, col:251> 'int'
|   |                 |   |-ImplicitCastExpr 0x55f3d207ac50 <col:211> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x55f3d207ac38 <col:211> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x55f3d207aba0 <col:211> '_Bool' lvalue Var 0x55f3d2074d48 'weak$$choice0' '_Bool'
|   |                 |   |-ImplicitCastExpr 0x55f3d207ac80 <col:227> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x55f3d207ac68 <col:227> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x55f3d207abc0 <col:227> '_Bool' lvalue Var 0x55f3d20748c8 'y$r_buff1_thd3' '_Bool'
|   |                 |   `-ImplicitCastExpr 0x55f3d207ac98 <col:244, col:251> 'int' <IntegralCast>
|   |                 |     `-CStyleCastExpr 0x55f3d207ac10 <col:244, col:251> '_Bool' <IntegralToBoolean>
|   |                 |       `-IntegerLiteral 0x55f3d207abe0 <col:251> 'int' 0
|   |                 `-ParenExpr 0x55f3d207afb0 <col:256, col:348> 'int'
|   |                   `-ConditionalOperator 0x55f3d207af80 <col:257, col:347> 'int'
|   |                     |-BinaryOperator 0x55f3d207ae80 <col:257, col:312> 'int' '&&'
|   |                     | |-BinaryOperator 0x55f3d207ae10 <col:257, col:293> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55f3d207ada0 <col:257, col:275> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55f3d207ad58 <col:257> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55f3d207ad40 <col:257> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55f3d207ad00 <col:257> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55f3d207ad88 <col:275> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55f3d207ad70 <col:275> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55f3d207ad20 <col:275> '_Bool' lvalue Var 0x55f3d20748c8 'y$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55f3d207adf8 <col:293> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55f3d207ade0 <col:293> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55f3d207adc0 <col:293> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55f3d207ae68 <col:311, col:312> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55f3d207ae50 <col:312> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55f3d207ae30 <col:312> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x55f3d207af50 <col:329, col:336> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55f3d207aed0 <col:329, col:336> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55f3d207aea0 <col:336> 'int' 0
|   |                     `-ImplicitCastExpr 0x55f3d207af68 <col:340, col:347> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55f3d207af28 <col:340, col:347> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55f3d207aef8 <col:347> 'int' 0
|   |-BinaryOperator 0x55f3d207b258 <line:781:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55f3d207b1e0 <col:3> '_Bool' lvalue Var 0x55f3d2073e40 '__unbuffered_p2_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55f3d207b230 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55f3d207b200 <col:45> 'int' 1
|   |-BinaryOperator 0x55f3d207b2d0 <line:782:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x55f3d207b278 <col:3> 'int *' lvalue Var 0x55f3d2073ec0 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x55f3d207b2b8 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x55f3d207b298 <col:43> 'int' lvalue Var 0x55f3d20743f0 'y' 'int'
|   |-BinaryOperator 0x55f3d207b348 <line:783:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55f3d207b2f0 <col:3> 'int' lvalue Var 0x55f3d20738f0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55f3d207b330 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f3d207b310 <col:25> 'int' lvalue Var 0x55f3d20743f0 'y' 'int'
|   |-BinaryOperator 0x55f3d207b478 <line:784:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55f3d207b368 <col:3> 'int' lvalue Var 0x55f3d20743f0 'y' 'int'
|   | `-ConditionalOperator 0x55f3d207b448 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55f3d207b400 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55f3d207b3e8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55f3d207b388 <col:7> '_Bool' lvalue Var 0x55f3d2074488 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55f3d207b418 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f3d207b3a8 <col:25> 'int' lvalue Var 0x55f3d2074508 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55f3d207b430 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55f3d207b3c8 <col:37> 'int' lvalue Var 0x55f3d20743f0 'y' 'int'
|   |-BinaryOperator 0x55f3d207b510 <line:785:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55f3d207b498 <col:3> '_Bool' lvalue Var 0x55f3d2074488 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55f3d207b4e8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55f3d207b4b8 <col:28> 'int' 0
|   |-CallExpr 0x55f3d207b568 <line:786:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f3d207b550 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3d207b530 <col:3> 'void ()' Function 0x55f3d201a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f3d207b5c0 <line:787:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f3d207b5a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3d207b588 <col:3> 'void ()' Function 0x55f3d201a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f3d207b620 <line:788:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55f3d207b5e0 <col:3> 'int' lvalue Var 0x55f3d2074cb0 'z' 'int'
|   | `-IntegerLiteral 0x55f3d207b600 <col:7> 'int' 1
|   |-CallExpr 0x55f3d207b678 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f3d207b660 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3d207b640 <col:3> 'void ()' Function 0x55f3d201a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f3d207b6d0 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f3d207b6b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3d207b698 <col:3> 'void ()' Function 0x55f3d201a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f3d207b9b8 <line:791:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55f3d207b6f0 <col:3> 'int' lvalue Var 0x55f3d20743f0 'y' 'int'
|   | `-ConditionalOperator 0x55f3d207b988 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55f3d207b7b0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55f3d207b768 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55f3d207b750 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55f3d207b710 <col:7> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55f3d207b798 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55f3d207b780 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55f3d207b730 <col:25> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55f3d207b970 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f3d207b7d0 <col:42> 'int' lvalue Var 0x55f3d2074a40 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55f3d207b950 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55f3d207b920 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55f3d207b890 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55f3d207b848 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55f3d207b830 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55f3d207b7f0 <col:55> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55f3d207b878 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55f3d207b860 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55f3d207b810 <col:73> '_Bool' lvalue Var 0x55f3d20748c8 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55f3d207b8f0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f3d207b8b0 <col:90> 'int' lvalue Var 0x55f3d2074b38 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55f3d207b908 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f3d207b8d0 <col:102> 'int' lvalue Var 0x55f3d20743f0 'y' 'int'
|   |-BinaryOperator 0x55f3d207bbc0 <line:792:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f3d207b9d8 <col:3> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f3d207bba8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f3d207bb78 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f3d207ba98 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f3d207ba50 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f3d207ba38 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f3d207b9f8 <col:20> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f3d207ba80 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f3d207ba68 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f3d207ba18 <col:38> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55f3d207bb30 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f3d207bae8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f3d207bab8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f3d207bb60 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f3d207bb48 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f3d207bb10 <col:66> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f3d207bea8 <line:793:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f3d207bbe0 <col:3> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f3d207be90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f3d207be60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f3d207bd80 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f3d207bca0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f3d207bc58 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f3d207bc40 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f3d207bc00 <col:20> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f3d207bc88 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f3d207bc70 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f3d207bc20 <col:38> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55f3d207bd60 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f3d207bd18 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f3d207bd00 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f3d207bcc0 <col:56> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f3d207bd48 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f3d207bd30 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f3d207bce0 <col:74> '_Bool' lvalue Var 0x55f3d20748c8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55f3d207be18 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f3d207bdd0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f3d207bda0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f3d207be48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f3d207be30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f3d207bdf8 <col:102> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55f3d207c0c8 <line:794:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f3d207bec8 <col:3> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55f3d207c0b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f3d207c080 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f3d207bf88 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f3d207bf40 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f3d207bf28 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f3d207bee8 <col:20> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f3d207bf70 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f3d207bf58 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f3d207bf08 <col:38> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55f3d207c038 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f3d207bff0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f3d207bfa8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f3d207c068 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f3d207c050 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f3d207c018 <col:66> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55f3d207c3b0 <line:795:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f3d207c0e8 <col:3> '_Bool' lvalue Var 0x55f3d20748c8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55f3d207c398 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f3d207c368 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f3d207c288 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f3d207c1a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f3d207c160 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f3d207c148 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f3d207c108 <col:20> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f3d207c190 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f3d207c178 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f3d207c128 <col:38> '_Bool' lvalue Var 0x55f3d20746e8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55f3d207c268 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f3d207c220 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f3d207c208 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f3d207c1c8 <col:56> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f3d207c250 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f3d207c238 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f3d207c1e8 <col:74> '_Bool' lvalue Var 0x55f3d20748c8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55f3d207c320 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f3d207c2d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f3d207c2a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f3d207c350 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f3d207c338 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f3d207c300 <col:102> '_Bool' lvalue Var 0x55f3d20748c8 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55f3d207c408 <line:796:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f3d207c3f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3d207c3d0 <col:3> 'void ()' Function 0x55f3d201a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f3d207c460 <line:797:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f3d207c448 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3d207c428 <col:3> 'void ()' Function 0x55f3d201a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f3d207c518 <line:798:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55f3d207c480 <col:3> 'int' lvalue Var 0x55f3d2073590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55f3d207c4f8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55f3d207c4e0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f3d207c4a0 <col:22> 'int' lvalue Var 0x55f3d2073590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55f3d207c4c0 <col:41> 'int' 1
|   |-CallExpr 0x55f3d207c570 <line:799:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f3d207c558 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3d207c538 <col:3> 'void ()' Function 0x55f3d201a410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55f3d207c5e8 <line:800:3, col:36>
|     `-CallExpr 0x55f3d207c5c8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55f3d207c5b0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55f3d207c590 <col:10> 'void *(void)' Function 0x55f3d2019e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55f3d207c730 prev 0x55f3d20732d8 <line:802:1, line:804:1> line:802:6 fence 'void ()'
| `-CompoundStmt 0x55f3d207c7d0 <line:803:1, line:804:1>
|-FunctionDecl 0x55f3d207c800 prev 0x55f3d2073398 <line:805:1, line:807:1> line:805:6 isync 'void ()'
| `-CompoundStmt 0x55f3d207c8a0 <line:806:1, line:807:1>
|-FunctionDecl 0x55f3d207c8d0 prev 0x55f3d2073458 <line:808:1, line:810:1> line:808:6 lwfence 'void ()'
| `-CompoundStmt 0x55f3d207c970 <line:809:1, line:810:1>
`-FunctionDecl 0x55f3d207c9d8 <line:811:1, line:837:1> line:811:5 main 'int ()'
  `-CompoundStmt 0x55f3d207e920 <line:812:1, line:837:1>
    |-DeclStmt 0x55f3d207caf0 <line:813:3, col:18>
    | `-VarDecl 0x55f3d207ca88 <col:3, col:13> col:13 used t2686 'pthread_t':'unsigned long'
    |-CallExpr 0x55f3d207ccf8 <line:814:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55f3d207cce0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f3d207cb08 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55f3d205a8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55f3d207cb48 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55f3d207cb28 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55f3d207ca88 't2686' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55f3d207cd38 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55f3d207cbc0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55f3d207cb98 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55f3d207cb60 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55f3d207cd50 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f3d207cbe0 <col:39> 'void *(void *)' Function 0x55f3d2074f80 'P0' 'void *(void *)'
    | `-ParenExpr 0x55f3d207cc60 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55f3d207cc38 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55f3d207cc00 <col:52> 'int' 0
    |-DeclStmt 0x55f3d207cde0 <line:815:3, col:18>
    | `-VarDecl 0x55f3d207cd78 <col:3, col:13> col:13 used t2687 'pthread_t':'unsigned long'
    |-CallExpr 0x55f3d207cf88 <line:816:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55f3d207cf70 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f3d207cdf8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55f3d205a8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55f3d207ce38 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55f3d207ce18 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55f3d207cd78 't2687' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55f3d207cfc8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55f3d207ceb0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55f3d207ce88 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55f3d207ce50 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55f3d207d000 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f3d207ced0 <col:39> 'void *(void *)' Function 0x55f3d2075668 'P1' 'void *(void *)'
    | `-ParenExpr 0x55f3d207cf50 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55f3d207cf28 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55f3d207cef0 <col:52> 'int' 0
    |-DeclStmt 0x55f3d207d090 <line:817:3, col:18>
    | `-VarDecl 0x55f3d207d028 <col:3, col:13> col:13 used t2688 'pthread_t':'unsigned long'
    |-CallExpr 0x55f3d207d238 <line:818:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55f3d207d220 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f3d207d0a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55f3d205a8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55f3d207d0e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55f3d207d0c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55f3d207d028 't2688' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55f3d207d278 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55f3d207d160 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55f3d207d138 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55f3d207d100 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55f3d207d290 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f3d207d180 <col:39> 'void *(void *)' Function 0x55f3d2077038 'P2' 'void *(void *)'
    | `-ParenExpr 0x55f3d207d200 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55f3d207d1d8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55f3d207d1a0 <col:52> 'int' 0
    |-CallExpr 0x55f3d207d2e0 <line:819:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55f3d207d2c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f3d207d2a8 <col:3> 'void ()' Function 0x55f3d201a350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55f3d207d3b0 <line:820:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55f3d207d300 <col:3> '_Bool' lvalue Var 0x55f3d2074158 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55f3d207d398 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55f3d207d378 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55f3d207d360 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55f3d207d320 <col:21> 'int' lvalue Var 0x55f3d2073590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55f3d207d340 <col:41> 'int' 3
    |-CallExpr 0x55f3d207d408 <line:821:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55f3d207d3f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f3d207d3d0 <col:3> 'void ()' Function 0x55f3d201a410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55f3d207d480 <line:822:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55f3d207d468 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f3d207d428 <col:3> 'void (int)' Function 0x55f3d2019ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55f3d207d4c0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55f3d207d4a8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55f3d207d448 <col:21> '_Bool' lvalue Var 0x55f3d2074158 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55f3d207d510 <line:823:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55f3d207d4f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f3d207d4d8 <col:3> 'void ()' Function 0x55f3d201a350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55f3d207d7f8 <line:824:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55f3d207d530 <col:3> 'int' lvalue Var 0x55f3d20743f0 'y' 'int'
    | `-ConditionalOperator 0x55f3d207d7c8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55f3d207d5f0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55f3d207d5a8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55f3d207d590 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55f3d207d550 <col:7> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55f3d207d5d8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55f3d207d5c0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55f3d207d570 <col:25> '_Bool' lvalue Var 0x55f3d2074580 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55f3d207d7b0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f3d207d610 <col:42> 'int' lvalue Var 0x55f3d2074a40 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55f3d207d790 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55f3d207d760 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55f3d207d6d0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55f3d207d688 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55f3d207d670 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55f3d207d630 <col:55> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55f3d207d6b8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55f3d207d6a0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55f3d207d650 <col:73> '_Bool' lvalue Var 0x55f3d2074760 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55f3d207d730 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55f3d207d6f0 <col:90> 'int' lvalue Var 0x55f3d2074b38 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55f3d207d748 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55f3d207d710 <col:102> 'int' lvalue Var 0x55f3d20743f0 'y' 'int'
    |-BinaryOperator 0x55f3d207da00 <line:825:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55f3d207d818 <col:3> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55f3d207d9e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f3d207d9b8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55f3d207d8d8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55f3d207d890 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55f3d207d878 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55f3d207d838 <col:20> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55f3d207d8c0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55f3d207d8a8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55f3d207d858 <col:38> '_Bool' lvalue Var 0x55f3d2074580 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f3d207d970 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f3d207d928 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f3d207d8f8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55f3d207d9a0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f3d207d988 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f3d207d950 <col:66> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55f3d207dce8 <line:826:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55f3d207da20 <col:3> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55f3d207dcd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f3d207dca0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55f3d207dbc0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55f3d207dae0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55f3d207da98 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55f3d207da80 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55f3d207da40 <col:20> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55f3d207dac8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55f3d207dab0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55f3d207da60 <col:38> '_Bool' lvalue Var 0x55f3d2074580 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55f3d207dba0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55f3d207db58 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55f3d207db40 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55f3d207db00 <col:56> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55f3d207db88 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55f3d207db70 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55f3d207db20 <col:74> '_Bool' lvalue Var 0x55f3d2074760 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f3d207dc58 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f3d207dc10 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f3d207dbe0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55f3d207dc88 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f3d207dc70 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f3d207dc38 <col:102> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55f3d207def0 <line:827:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55f3d207dd08 <col:3> '_Bool' lvalue Var 0x55f3d2074580 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55f3d207ded8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f3d207dea8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55f3d207ddc8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55f3d207dd80 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55f3d207dd68 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55f3d207dd28 <col:20> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55f3d207ddb0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55f3d207dd98 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55f3d207dd48 <col:38> '_Bool' lvalue Var 0x55f3d2074580 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f3d207de60 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f3d207de18 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f3d207dde8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55f3d207de90 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f3d207de78 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f3d207de40 <col:66> '_Bool' lvalue Var 0x55f3d2074580 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55f3d207e1f8 <line:828:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55f3d207df10 <col:3> '_Bool' lvalue Var 0x55f3d2074760 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55f3d207e1e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f3d207e1b0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55f3d207e0d0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55f3d207dfd0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55f3d207df88 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55f3d207df70 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55f3d207df30 <col:20> '_Bool' lvalue Var 0x55f3d2074ab8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55f3d207dfb8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55f3d207dfa0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55f3d207df50 <col:38> '_Bool' lvalue Var 0x55f3d2074580 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55f3d207e0b0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55f3d207e068 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55f3d207e050 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55f3d207e010 <col:56> '_Bool' lvalue Var 0x55f3d2074bb0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55f3d207e098 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55f3d207e080 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55f3d207e030 <col:74> '_Bool' lvalue Var 0x55f3d2074760 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f3d207e168 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f3d207e120 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f3d207e0f0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55f3d207e198 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f3d207e180 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f3d207e148 <col:102> '_Bool' lvalue Var 0x55f3d2074760 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55f3d207e250 <line:829:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55f3d207e238 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f3d207e218 <col:3> 'void ()' Function 0x55f3d201a410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55f3d207e2a8 <line:830:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55f3d207e290 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f3d207e270 <col:3> 'void ()' Function 0x55f3d201a350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55f3d207e358 <line:831:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x55f3d207e2c8 <col:3> '_Bool' lvalue Var 0x55f3d2074dc0 'weak$$choice1' '_Bool'
    | `-ImplicitCastExpr 0x55f3d207e340 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x55f3d207e320 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x55f3d207e308 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55f3d207e2e8 <col:19> 'void *(void)' Function 0x55f3d2019e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x55f3d207e590 <line:832:3, col:140> 'int' '='
    | |-DeclRefExpr 0x55f3d207e378 <col:3> 'int' lvalue Var 0x55f3d20738f0 '__unbuffered_p2_EAX' 'int'
    | `-ConditionalOperator 0x55f3d207e560 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x55f3d207e530 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55f3d207e518 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55f3d207e398 <col:25> '_Bool' lvalue Var 0x55f3d2073e40 '__unbuffered_p2_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x55f3d207e4d8 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x55f3d207e4a8 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x55f3d207e460 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x55f3d207e448 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55f3d207e3b8 <col:61> '_Bool' lvalue Var 0x55f3d2074dc0 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x55f3d207e478 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x55f3d207e410 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x55f3d207e3f8 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x55f3d207e3d8 <col:78> 'int *' lvalue Var 0x55f3d2073ec0 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x55f3d207e490 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55f3d207e428 <col:117> 'int' lvalue Var 0x55f3d20738f0 '__unbuffered_p2_EAX' 'int'
    |   `-ImplicitCastExpr 0x55f3d207e548 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55f3d207e4f8 <col:140> 'int' lvalue Var 0x55f3d20738f0 '__unbuffered_p2_EAX' 'int'
    |-BinaryOperator 0x55f3d207e7c8 <line:833:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x55f3d207e5b0 <col:3> '_Bool' lvalue Var 0x55f3d20741d0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55f3d207e7b0 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55f3d207e798 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55f3d207e778 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x55f3d207e758 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x55f3d207e6c0 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x55f3d207e628 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x55f3d207e610 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x55f3d207e5d0 <col:23> 'int' lvalue Var 0x55f3d20736b0 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x55f3d207e5f0 <col:46> 'int' 1
    |         | `-BinaryOperator 0x55f3d207e6a0 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55f3d207e688 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55f3d207e648 <col:51> 'int' lvalue Var 0x55f3d20737d0 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x55f3d207e668 <col:74> 'int' 1
    |         `-BinaryOperator 0x55f3d207e738 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x55f3d207e720 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55f3d207e6e0 <col:79> 'int' lvalue Var 0x55f3d20738f0 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x55f3d207e700 <col:102> 'int' 1
    |-CallExpr 0x55f3d207e820 <line:834:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55f3d207e808 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f3d207e7e8 <col:3> 'void ()' Function 0x55f3d201a410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55f3d207e898 <line:835:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55f3d207e880 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f3d207e840 <col:3> 'void (int)' Function 0x55f3d201a0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55f3d207e8d8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55f3d207e8c0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55f3d207e860 <col:21> '_Bool' lvalue Var 0x55f3d20741d0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55f3d207e910 <line:836:3, col:10>
      `-IntegerLiteral 0x55f3d207e8f0 <col:10> 'int' 0
