TranslationUnitDecl 0x55f43be6cf88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55f43be6d848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55f43be6d520 '__int128'
|-TypedefDecl 0x55f43be6d8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55f43be6d540 'unsigned __int128'
|-TypedefDecl 0x55f43be6dbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55f43be6d990 'struct __NSConstantString_tag'
|   `-Record 0x55f43be6d910 '__NSConstantString_tag'
|-TypedefDecl 0x55f43be6dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55f43be6dc20 'char *'
|   `-BuiltinType 0x55f43be6d020 'char'
|-TypedefDecl 0x55f43beacb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55f43be6df00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55f43be6dd40 'struct __va_list_tag'
|     `-Record 0x55f43be6dcc0 '__va_list_tag'
|-FunctionDecl 0x55f43beacc80 <pthread-wmm/safe019_power.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55f43beace50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55f43beacd80 <col:31> col:34 'int'
|-FunctionDecl 0x55f43beacfc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55f43bead0f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55f43bead238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55f43bead1a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55f43bead468 <col:40, col:99>
|   |-IfStmt 0x55f43bead438 <col:42, col:88>
|   | |-UnaryOperator 0x55f43bead318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55f43bead300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55f43bead2e0 <col:47> 'int' lvalue ParmVar 0x55f43bead1a8 'expression' 'int'
|   | `-CompoundStmt 0x55f43bead420 <col:59, col:88>
|   |   `-LabelStmt 0x55f43bead408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55f43bead398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55f43bead380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55f43bead330 <col:68> 'void () __attribute__((noreturn))' Function 0x55f43bead0f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55f43bead450 <col:89>
|   `-ReturnStmt 0x55f43bead458 <col:91>
|-FunctionDecl 0x55f43bead4b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55f43bead570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55f43bead8f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f43bead628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55f43bead6a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55f43bead728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55f43bead7a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55f43bead9b0 <line:11:22>
|-FunctionDecl 0x55f43bed2f10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f43beada20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55f43beadaa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55f43bed2d40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55f43bed2dc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55f43bed2fd0 <line:14:22>
|-FunctionDecl 0x55f43bed3280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f43bed3040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55f43bed30c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55f43bed3140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55f43bed3338 <line:16:22>
|-TypedefDecl 0x55f43bed33a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55f43be6d0e0 'unsigned char'
|-TypedefDecl 0x55f43bed3418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55f43be6d100 'unsigned short'
|-TypedefDecl 0x55f43bed3488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55f43be6d120 'unsigned int'
|-TypedefDecl 0x55f43bed34f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55f43be6d140 'unsigned long'
|-TypedefDecl 0x55f43bed3568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55f43be6d040 'signed char'
|-TypedefDecl 0x55f43bed35d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55f43be6d0e0 'unsigned char'
|-TypedefDecl 0x55f43bed3648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55f43be6d060 'short'
|-TypedefDecl 0x55f43bed36b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55f43be6d100 'unsigned short'
|-TypedefDecl 0x55f43bed3728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55f43be6d080 'int'
|-TypedefDecl 0x55f43bed3798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55f43be6d120 'unsigned int'
|-TypedefDecl 0x55f43bed3808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55f43be6d0a0 'long'
|-TypedefDecl 0x55f43bed3878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55f43be6d140 'unsigned long'
|-TypedefDecl 0x55f43bed38e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55f43be6d0a0 'long'
|-TypedefDecl 0x55f43bed3958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55f43be6d140 'unsigned long'
|-TypedefDecl 0x55f43bed39c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55f43be6d140 'unsigned long'
|-TypedefDecl 0x55f43bed3a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55f43be6d120 'unsigned int'
|-TypedefDecl 0x55f43bed3aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55f43be6d120 'unsigned int'
|-TypedefDecl 0x55f43bed3b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55f43be6d140 'unsigned long'
|-TypedefDecl 0x55f43bed3b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55f43be6d140 'unsigned long'
|-TypedefDecl 0x55f43bed3bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55f43be6d120 'unsigned int'
|-TypedefDecl 0x55f43bed3c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55f43be6d140 'unsigned long'
|-TypedefDecl 0x55f43bed3cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55f43be6d0a0 'long'
|-TypedefDecl 0x55f43bed3d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55f43be6d0a0 'long'
|-TypedefDecl 0x55f43bed3dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55f43be6d080 'int'
|-RecordDecl 0x55f43bed3e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55f43bed3f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55f43bed4030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55f43bed3fd0 'struct __fsid_t' sugar
|   `-RecordType 0x55f43bed3eb0 '__fsid_t'
|     `-Record 0x55f43bed3e30 ''
|-TypedefDecl 0x55f43bed40b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55f43be6d0a0 'long'
|-TypedefDecl 0x55f43bed4128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55f43be6d140 'unsigned long'
|-TypedefDecl 0x55f43bed4198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55f43be6d140 'unsigned long'
|-TypedefDecl 0x55f43bed4208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55f43be6d120 'unsigned int'
|-TypedefDecl 0x55f43bed4278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55f43be6d0a0 'long'
|-TypedefDecl 0x55f43bed42e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55f43be6d120 'unsigned int'
|-TypedefDecl 0x55f43bed4358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55f43be6d0a0 'long'
|-TypedefDecl 0x55f43bed43c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55f43be6d080 'int'
|-TypedefDecl 0x55f43bed4438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55f43be6d080 'int'
|-TypedefDecl 0x55f43bed44a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55f43be6d080 'int'
|-TypedefDecl 0x55f43bed4518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55f43be6d7a0 'void *'
|   `-BuiltinType 0x55f43be6cfe0 'void'
|-TypedefDecl 0x55f43bed4588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55f43be6d0a0 'long'
|-TypedefDecl 0x55f43bed45f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55f43be6d0a0 'long'
|-TypedefDecl 0x55f43bed4668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55f43be6d0a0 'long'
|-TypedefDecl 0x55f43bed46d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55f43be6d140 'unsigned long'
|-TypedefDecl 0x55f43bed4748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55f43be6d140 'unsigned long'
|-TypedefDecl 0x55f43bed47b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55f43be6d140 'unsigned long'
|-TypedefDecl 0x55f43bed4828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55f43be6d140 'unsigned long'
|-TypedefDecl 0x55f43bed4898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55f43be6d0a0 'long'
|-TypedefDecl 0x55f43bed4908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55f43be6d0a0 'long'
|-TypedefDecl 0x55f43bed4978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55f43be6d0a0 'long'
|-TypedefDecl 0x55f43bed49e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55f43be6d140 'unsigned long'
|-TypedefDecl 0x55f43bed4a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55f43bed4a40 '__off64_t' sugar
|   |-Typedef 0x55f43bed3d68 '__off64_t'
|   `-BuiltinType 0x55f43be6d0a0 'long'
|-TypedefDecl 0x55f43bed4b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55f43bed4b30 '__quad_t *'
|   `-TypedefType 0x55f43bed4ad0 '__quad_t' sugar
|     |-Typedef 0x55f43bed38e8 '__quad_t'
|     `-BuiltinType 0x55f43be6d0a0 'long'
|-TypedefDecl 0x55f43bed4be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55f43be6dc20 'char *'
|   `-BuiltinType 0x55f43be6d020 'char'
|-TypedefDecl 0x55f43bed4c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55f43be6d0a0 'long'
|-TypedefDecl 0x55f43bed4cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55f43be6d120 'unsigned int'
|-FunctionDecl 0x55f43bed4e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55f43bed4d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55f43bed5148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55f43bed5138 <line:73:3, col:34>
|     `-CallExpr 0x55f43bed50f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55f43bed50e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55f43bed5070 <col:10> '<builtin fn type>' Function 0x55f43bed4ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55f43bed5120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55f43bed5090 <col:29> 'unsigned int' lvalue ParmVar 0x55f43bed4d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x55f43bed4ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55f43bed4f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55f43bed4ff0 <col:10> Implicit
| `-ConstAttr 0x55f43bed5048 <col:10> Implicit
|-FunctionDecl 0x55f43bed52a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55f43bed5198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55f43bed55b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55f43bed55a8 <line:78:3, col:34>
|     `-CallExpr 0x55f43bed5568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55f43bed5550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55f43bed54d8 <col:10> '<builtin fn type>' Function 0x55f43bed5348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55f43bed5590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55f43bed54f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55f43bed5198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55f43bed5348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55f43bed53e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55f43bed5458 <col:10> Implicit
| `-ConstAttr 0x55f43bed54b0 <col:10> Implicit
|-TypedefDecl 0x55f43bed55e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55f43be6d140 'unsigned long'
|-TypedefDecl 0x55f43bed5678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55f43bed5640 '__time_t' sugar
|   |-Typedef 0x55f43bed4278 '__time_t'
|   `-BuiltinType 0x55f43be6d0a0 'long'
|-RecordDecl 0x55f43bed56d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55f43bed5788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55f43bed5818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55f43bed58a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55f43bed5870 '__pid_t' sugar
|   |-Typedef 0x55f43bed3dd8 '__pid_t'
|   `-BuiltinType 0x55f43be6d080 'int'
|-RecordDecl 0x55f43bed5900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55f43bed59c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55f43bed5a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55f43bed5ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55f43bed5b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55f43be6d140 'unsigned long'
|-RecordDecl 0x55f43bed5b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55f43bed7e70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55f43bed7f20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55f43bed7ec0 'struct cpu_set_t' sugar
|   `-RecordType 0x55f43bed5c10 'cpu_set_t'
|     `-Record 0x55f43bed5b90 ''
|-FunctionDecl 0x55f43bed81f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55f43bed7fc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55f43bed80d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55f43bed82a8 <line:108:19>
|-FunctionDecl 0x55f43bed8480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55f43bed8310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55f43bed8528 <col:69>
|-FunctionDecl 0x55f43bed86a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55f43bed8590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55f43bed8748 <col:64>
|-FunctionDecl 0x55f43bed8a08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55f43bed87b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f43bed88e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55f43bed8ab8 <line:114:22>
|-FunctionDecl 0x55f43bed8e60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55f43bed8b20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f43bed8c18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55f43bed8f10 <col:88>
|-FunctionDecl 0x55f43bed91c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55f43bed8f78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f43bed8ff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55f43bed9088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55f43bed9280 <col:62>
|-FunctionDecl 0x55f43bed93f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55f43bed92e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55f43bed94a0 <col:63>
|-FunctionDecl 0x55f43bed95c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55f43bed9668 <col:47>
|-FunctionDecl 0x55f43bed9770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55f43bed96d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55f43bed9818 <col:69>
|-FunctionDecl 0x55f43bed9920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55f43bed9888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55f43bed99c8 <col:69>
|-FunctionDecl 0x55f43bed9c88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55f43bed9a30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f43bed9b68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55f43bed9d38 <col:88>
|-TypedefDecl 0x55f43bed9dc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55f43bed9d90 '__clock_t' sugar
|   |-Typedef 0x55f43bed40b8 '__clock_t'
|   `-BuiltinType 0x55f43be6d0a0 'long'
|-TypedefDecl 0x55f43beda7e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55f43bed9e20 '__clockid_t' sugar
|   |-Typedef 0x55f43bed44a8 '__clockid_t'
|   `-BuiltinType 0x55f43be6d080 'int'
|-TypedefDecl 0x55f43beda878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55f43beda840 '__timer_t' sugar
|   |-Typedef 0x55f43bed4518 '__timer_t'
|   `-PointerType 0x55f43be6d7a0 'void *'
|     `-BuiltinType 0x55f43be6cfe0 'void'
|-RecordDecl 0x55f43beda8d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55f43beda990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55f43beda9f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55f43bedaa60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55f43bedaac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55f43bedab30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55f43bedab98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55f43bedac00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55f43bedac68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55f43bedacd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55f43bedad38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55f43bedada0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55f43bedadf0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55f43bedaeb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55f43bedaf28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55f43bedafd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55f43bedb1a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55f43bedb240 <col:45>
|-FunctionDecl 0x55f43bedb420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55f43bedb310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55f43bedb4c8 <col:54>
|-FunctionDecl 0x55f43bedb6c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55f43bedb530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55f43bedb5a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55f43bedb778 <line:158:22>
| `-ConstAttr 0x55f43bedc410 <col:63>
|-FunctionDecl 0x55f43bedc610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55f43bedc508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55f43bedc6b8 <col:56>
|-FunctionDecl 0x55f43bedca60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55f43bedc728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55f43bedc7a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55f43bedc820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55f43bedc918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55f43bedcb20 <col:54>
|-RecordDecl 0x55f43bedcb78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55f43bedcc28 parent 0x55f43be6cf88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55f43bedce88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55f43bedcf28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55f43bedcf90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55f43bedcff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55f43bedd0e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55f43bedd208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55f43bedd1b0 'struct __locale_struct *'
|   `-ElaboratedType 0x55f43bedd140 'struct __locale_struct' sugar
|     `-RecordType 0x55f43bedcc00 'struct __locale_struct'
|       `-Record 0x55f43bedcb78 '__locale_struct'
|-TypedefDecl 0x55f43bedd2b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55f43bedd280 '__locale_t' sugar
|   |-Typedef 0x55f43bedd208 '__locale_t'
|   `-PointerType 0x55f43bedd1b0 'struct __locale_struct *'
|     `-ElaboratedType 0x55f43bedd140 'struct __locale_struct' sugar
|       `-RecordType 0x55f43bedcc00 'struct __locale_struct'
|         `-Record 0x55f43bedcb78 '__locale_struct'
|-FunctionDecl 0x55f43bedd6b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55f43bedd328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55f43bedd3a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55f43bedd438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55f43bedd4c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55f43bedd540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55f43bedd778 <col:40>
|-FunctionDecl 0x55f43bedd968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55f43bedd840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55f43bedda10 <col:66>
|-FunctionDecl 0x55f43beddb20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55f43bedda78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55f43beddbc8 <col:69>
|-FunctionDecl 0x55f43bedddf8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55f43beddc30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55f43beddcc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55f43beddea8 <col:52>
|-FunctionDecl 0x55f43bede050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55f43beddf10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55f43beddfa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55f43bede100 <col:55>
|-FunctionDecl 0x55f43bede298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55f43bede180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55f43bede340 <col:62>
|-FunctionDecl 0x55f43bede578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55f43bede3a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55f43bede620 <col:60>
|-FunctionDecl 0x55f43bede848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55f43bede6a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55f43bede720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55f43bede8f8 <col:44>
|-FunctionDecl 0x55f43bedeb08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55f43bede960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55f43bede9e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55f43bedebb8 <col:49>
|-VarDecl 0x55f43bedecb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55f43beded38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55f43bededb8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55f43bedee80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55f43bedefb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55f43bedf050 <col:42>
|-VarDecl 0x55f43bedf0c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55f43bedf140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55f43bedf2c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55f43bedf1b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55f43bedf370 <col:57>
|-FunctionDecl 0x55f43bee04f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55f43bedf3f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55f43bee0598 <col:56>
|-FunctionDecl 0x55f43bee06a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55f43bee0618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55f43bee0750 <col:59>
|-FunctionDecl 0x55f43bee0858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55f43bee07c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55f43bee0900 <col:48>
| `-ConstAttr 0x55f43bee0958 <col:89>
|-FunctionDecl 0x55f43bee0bb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55f43bee0a08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55f43bee0a98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55f43bee0e18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55f43bee0ca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f43bee0d38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55f43bee0ec8 <col:88>
|-FunctionDecl 0x55f43bee1060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55f43bee0f30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f43bee0fc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55f43bee1110 <col:88>
|-FunctionDecl 0x55f43bee1328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55f43bee1178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f43bee1208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55f43bee13d8 <line:209:22>
|-FunctionDecl 0x55f43bee1778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55f43bee1440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f43bee1500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55f43bee1590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55f43bee1620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55f43bee1a78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55f43bee1878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55f43bee1950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55f43bee1b28 <col:85>
|-FunctionDecl 0x55f43bee1f18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55f43bee1b90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f43bee1cc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55f43bee1dd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55f43bee1fd0 <col:52>
|-FunctionDecl 0x55f43bee2148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55f43bee2038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55f43bee21f0 <col:61>
|-FunctionDecl 0x55f43bee2668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55f43bee2258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55f43bee22d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55f43bee2408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55f43bee2510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55f43bee2728 <col:62>
|-FunctionDecl 0x55f43bee2948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55f43bee2790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55f43bee2820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55f43bee29f8 <line:222:22>
|-FunctionDecl 0x55f43bee2af8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55f43bee2a60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55f43bee2ba0 <col:65>
|-TypedefDecl 0x55f43bee2c10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55f43be6d140 'unsigned long'
|-RecordDecl 0x55f43bee2c68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55f43bee2db0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55f43bee2e18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f43bee2ec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55f43bee2e70 'union pthread_attr_t' sugar
|   `-RecordType 0x55f43bee2cf0 'union pthread_attr_t'
|     `-Record 0x55f43bee2c68 'pthread_attr_t'
|-RecordDecl 0x55f43bee2f20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55f43bee3098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55f43bee3110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55f43bee31c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55f43bee3160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55f43bee2fa0 'struct __pthread_internal_list'
|     `-Record 0x55f43bee2f20 '__pthread_internal_list'
|-RecordDecl 0x55f43bee3230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55f43bee32d8 parent 0x55f43be6cf88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55f43bee33b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55f43bee3418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55f43bee3480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55f43bee7530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55f43bee7598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55f43bee7600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55f43bee7688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55f43bee7740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55f43bee7830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55f43bee7898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f43bee7a20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55f43bee79c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55f43bee32b0 'pthread_mutex_t'
|     `-Record 0x55f43bee3230 ''
|-RecordDecl 0x55f43bee7a90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55f43bee7bd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55f43bee7c38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55f43bee7cf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55f43bee7c90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55f43bee7b10 'pthread_mutexattr_t'
|     `-Record 0x55f43bee7a90 ''
|-RecordDecl 0x55f43bee7d60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55f43bee7e08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55f43bee7ed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55f43bee7f38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55f43bee7fa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55f43bee8008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55f43bee8070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55f43bee80d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55f43bee8140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55f43bee81a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55f43bee8260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe019_power.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe019_power.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55f43bee8350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55f43bee83b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55f43bee8540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55f43bee8490 'union pthread_cond_t' sugar
|   `-RecordType 0x55f43bee7de0 'pthread_cond_t'
|     `-Record 0x55f43bee7d60 ''
|-RecordDecl 0x55f43bee85b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55f43bee86b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55f43bee8718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55f43bee87d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55f43bee8770 'union pthread_condattr_t' sugar
|   `-RecordType 0x55f43bee8630 'pthread_condattr_t'
|     `-Record 0x55f43bee85b0 ''
|-TypedefDecl 0x55f43bee8858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55f43be6d120 'unsigned int'
|-TypedefDecl 0x55f43bee88c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55f43be6d080 'int'
|-RecordDecl 0x55f43bee8920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55f43bee89c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55f43bee8a90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55f43bee8af8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55f43bee8b60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55f43bee8bc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55f43bee8c30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55f43bee8c98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55f43bee8d00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55f43bee8d68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55f43bee8dd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55f43bee8e38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55f43bee8ea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55f43bee8f50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe019_power.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe019_power.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55f43bee8ff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55f43bee9060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f43bee91b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55f43bee9150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55f43bee89a0 'pthread_rwlock_t'
|     `-Record 0x55f43bee8920 ''
|-RecordDecl 0x55f43bee9220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55f43bee9360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55f43bee93c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f43bee9480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55f43bee9420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55f43bee92a0 'pthread_rwlockattr_t'
|     `-Record 0x55f43bee9220 ''
|-TypedefDecl 0x55f43beeb560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55f43be6d084 'volatile int' volatile
|   `-BuiltinType 0x55f43be6d080 'int'
|-RecordDecl 0x55f43beeb5b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55f43beeb700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55f43beeb768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f43beeb820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55f43beeb7c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55f43beeb640 'pthread_barrier_t'
|     `-Record 0x55f43beeb5b8 ''
|-RecordDecl 0x55f43beeb890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55f43beeb990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55f43beeb9f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55f43beebab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55f43beeba50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55f43beeb910 'pthread_barrierattr_t'
|     `-Record 0x55f43beeb890 ''
|-TypedefDecl 0x55f43beebbc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55f43beebb60 'long [8]' 8 
|   `-BuiltinType 0x55f43be6d0a0 'long'
|-EnumDecl 0x55f43beebc20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55f43beebce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55f43beebd38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55f43beebd88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55f43beebe58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55f43beebea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55f43beebef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55f43beebf48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55f43beebfd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55f43beebfb8 <col:26> 'int'
| |   `-DeclRefExpr 0x55f43beebf98 <col:26> 'int' EnumConstant 0x55f43beebe58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55f43beec058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55f43beec040 <col:29> 'int'
| |   `-DeclRefExpr 0x55f43beec020 <col:29> 'int' EnumConstant 0x55f43beebea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55f43beec0e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55f43beec0c8 <col:30> 'int'
| |   `-DeclRefExpr 0x55f43beec0a8 <col:30> 'int' EnumConstant 0x55f43beebef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55f43beec168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55f43beec150 <col:27> 'int'
|     `-DeclRefExpr 0x55f43beec130 <col:27> 'int' EnumConstant 0x55f43beebfd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55f43beec1b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55f43beec288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55f43beec310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55f43beec2f8 <col:30> 'int'
| |   `-DeclRefExpr 0x55f43beec2d8 <col:30> 'int' EnumConstant 0x55f43beec288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55f43beec360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55f43beec3e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55f43beec3d0 <col:29> 'int'
|     `-DeclRefExpr 0x55f43beec3b0 <col:29> 'int' EnumConstant 0x55f43beec360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55f43beec438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55f43beec508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55f43beec570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55f43beec5c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55f43beec610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55f43beec6d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55f43beec728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55f43beec778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55f43beec800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55f43beec7e8 <col:31> 'int'
|     `-DeclRefExpr 0x55f43beec7c8 <col:31> 'int' EnumConstant 0x55f43beec6d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55f43beec850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55f43beec918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55f43beec968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55f43beec9b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55f43beeca88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55f43beecad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55f43beecb28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55f43beecbf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55f43beecc48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55f43beecc98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55f43beeced8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55f43beecf40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55f43beecfa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55f43beed0c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55f43beed118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55f43beed1e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55f43beed238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55f43beed288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55f43beed358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55f43beed3a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55f43beed9d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55f43beed4a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55f43beed5c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f43beed7c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55f43beed840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55f43beeda98 <col:47>
| |-NonNullAttr 0x55f43beedaf0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55f43beedb28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55f43beedc50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55f43beedb80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55f43beedea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55f43beedd08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55f43beedd88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55f43beee078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55f43beedf68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55f43beee120 <col:60>
|-FunctionDecl 0x55f43beee270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55f43beee310 <col:54>
| `-ConstAttr 0x55f43beee368 <col:95>
|-FunctionDecl 0x55f43beeeda0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55f43beee3a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f43beee418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55f43beeee50 <line:395:19>
| `-ConstAttr 0x55f43beeeea8 <col:60>
|-FunctionDecl 0x55f43beef078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55f43beeef40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55f43beef120 <col:71>
| `-NonNullAttr 0x55f43beef178 <col:112, col:126> 1
|-FunctionDecl 0x55f43beef280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55f43beef1c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55f43beef328 <line:398:22>
| `-NonNullAttr 0x55f43beef380 <col:63, col:77> 1
|-FunctionDecl 0x55f43beef5a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55f43beef3c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55f43beef448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55f43beef658 <line:401:22>
| `-NonNullAttr 0x55f43beef6b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f43beef8b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f43beef6f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f43beef778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55f43beef968 <line:404:22>
| `-NonNullAttr 0x55f43beef9c0 <col:63, col:77> 1
|-FunctionDecl 0x55f43beefc18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55f43beefa08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55f43beefab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55f43beefcc8 <line:407:22>
| `-NonNullAttr 0x55f43beefd20 <col:63, col:80> 1 2
|-FunctionDecl 0x55f43bef0f78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55f43bef0dc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f43bef0e38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55f43bef1028 <line:410:22>
| `-NonNullAttr 0x55f43bef1080 <col:63, col:77> 1
|-FunctionDecl 0x55f43bef12b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55f43bef10c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f43bef1158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55f43bef1368 <line:413:22>
| `-NonNullAttr 0x55f43bef13c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f43bef15f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55f43bef1408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f43bef1498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55f43bef16a8 <col:37>
| `-NonNullAttr 0x55f43bef1700 <col:78, col:95> 1 2
|-FunctionDecl 0x55f43bef18e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f43bef1748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f43bef17c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55f43bef1998 <line:419:22>
| `-NonNullAttr 0x55f43bef19f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f43bef1b78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f43bef1a38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f43bef1ab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55f43bef1c28 <line:421:22>
| `-NonNullAttr 0x55f43bef1c80 <col:63, col:77> 1
|-FunctionDecl 0x55f43bef2e58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f43bef1cc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f43bef1d48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55f43bef2f08 <line:424:22>
| `-NonNullAttr 0x55f43bef2f60 <col:63, col:80> 1 2
|-FunctionDecl 0x55f43bef30e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f43bef2fa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f43bef3028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55f43bef3198 <line:427:22>
| `-NonNullAttr 0x55f43bef31f0 <col:63, col:77> 1
|-FunctionDecl 0x55f43bef3398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f43bef3238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f43bef32b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55f43bef3448 <line:430:22>
| `-NonNullAttr 0x55f43bef34a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f43bef3628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f43bef34e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f43bef3568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55f43bef36d8 <line:432:22>
| `-NonNullAttr 0x55f43bef3730 <col:63, col:77> 1
|-FunctionDecl 0x55f43bef3958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55f43bef3778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f43bef37f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55f43bef3a08 <line:435:22>
| |-NonNullAttr 0x55f43bef3a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55f43bef3a98 <col:100> "" ""
|-FunctionDecl 0x55f43bef3ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55f43bef3ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f43bef3b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55f43bef3d58 <line:438:22>
| |-NonNullAttr 0x55f43bef3db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x55f43bef3df8 <col:97> "" ""
|-FunctionDecl 0x55f43bef3fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55f43bef3e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f43bef3ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55f43bef4098 <line:441:22>
| `-NonNullAttr 0x55f43bef40f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f43bef4270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55f43bef4138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f43bef41b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55f43bef4320 <line:444:22>
| `-NonNullAttr 0x55f43bef4378 <col:63, col:77> 1
|-FunctionDecl 0x55f43bef4668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55f43bef43c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f43bef4448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55f43bef44c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55f43bef4720 <line:448:22>
| `-NonNullAttr 0x55f43bef4778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55f43bef4a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55f43bef47d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f43bef4850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55f43bef48c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55f43bef4ae0 <col:43>
| `-NonNullAttr 0x55f43bef4b38 <col:84, col:98> 1
|-FunctionDecl 0x55f43bef4e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55f43bef4b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f43bef4c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55f43bef4c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55f43bef4ef8 <line:453:22>
| `-NonNullAttr 0x55f43bef4f50 <col:63, col:77> 3
|-FunctionDecl 0x55f43bef5228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55f43bef4f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f43bef5018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55f43bef50a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55f43bef52e0 <line:457:22>
| `-NonNullAttr 0x55f43bef5338 <col:63, col:80> 2 3
|-FunctionDecl 0x55f43bef5528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55f43bef5388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f43bef5408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55f43bef55d8 <line:459:22>
|-FunctionDecl 0x55f43bef59a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55f43bef56a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55f43bef5840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55f43bef5a58 <col:52, col:69> 1 2
|-FunctionDecl 0x55f43bef5c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55f43bef5ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55f43bef5b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55f43bef5e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55f43bef5cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55f43bef5d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55f43bef5f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55f43bef5ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55f43bef60a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55f43bef6148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55f43bef61f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55f43bef62e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55f43bef6350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55f43bef6520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe019_power.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55f43bef6618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55f43bef66d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55f43bef6670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55f43bef61d0 '__pthread_unwind_buf_t'
| |   `-Record 0x55f43bef6148 ''
| `-AlignedAttr 0x55f43bef6728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55f43bef67a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55f43bef6900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55f43bef6968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55f43bef69d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55f43bef6a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55f43bef6c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55f43bef6b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55f43bef6e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55f43bef6cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55f43bef6fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f43bef6ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55f43bef7088 <line:488:22>
|-RecordDecl 0x55f43bef70e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55f43bef73f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55f43bef7258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55f43bef72d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55f43bef74a8 <col:86>
| `-ReturnsTwiceAttr 0x55f43bef7500 <col:12> Implicit
|-FunctionDecl 0x55f43bef7828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55f43bef75d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55f43bef76e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55f43bef78d8 <line:494:22>
| `-NonNullAttr 0x55f43bef7930 <col:63, col:77> 1
|-FunctionDecl 0x55f43bef7aa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f43bef7978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f43bef7b50 <line:496:22>
| `-NonNullAttr 0x55f43bef7ba8 <col:63, col:77> 1
|-FunctionDecl 0x55f43bef7cb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f43bef7bf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f43bef7d58 <line:498:22>
| `-NonNullAttr 0x55f43bef7db0 <col:52, col:66> 1
|-FunctionDecl 0x55f43bef7ee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f43bef7e30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f43bef7f90 <line:500:22>
| `-NonNullAttr 0x55f43bef7fe8 <col:52, col:66> 1
|-FunctionDecl 0x55f43bef8228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f43bef8038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f43bef80c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55f43bef82d8 <col:36>
| `-NonNullAttr 0x55f43bef8330 <col:66, col:83> 1 2
|-FunctionDecl 0x55f43bef8430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f43bef8378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f43bef84d8 <line:505:22>
| `-NonNullAttr 0x55f43bef8530 <col:52, col:66> 1
|-FunctionDecl 0x55f43bef87c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f43bef85e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f43bef8660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55f43bef8878 <line:509:22>
| `-NonNullAttr 0x55f43bef88d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f43bef8b98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55f43bef8918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f43bef8998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55f43bef8a18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55f43bef8c50 <line:513:22>
| `-NonNullAttr 0x55f43bef8ca8 <col:63, col:80> 1 3
|-FunctionDecl 0x55f43bef8e40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f43bef8cf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f43bef8ee8 <line:515:22>
| `-NonNullAttr 0x55f43bef8f40 <col:63, col:77> 1
|-FunctionDecl 0x55f43bef9128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55f43bef8ff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55f43bef91d0 <line:517:22>
| `-NonNullAttr 0x55f43bef9228 <col:63, col:77> 1
|-FunctionDecl 0x55f43bef9330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55f43bef9278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55f43bef93d8 <line:519:22>
| `-NonNullAttr 0x55f43bef9430 <col:63, col:77> 1
|-FunctionDecl 0x55f43bef9658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f43bef9478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f43bef94f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f43bef9708 <line:523:22>
| `-NonNullAttr 0x55f43bef9760 <col:63, col:80> 1 2
|-FunctionDecl 0x55f43bef9968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f43bef97a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f43bef9828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55f43bef9a18 <line:526:22>
| `-NonNullAttr 0x55f43bef9a70 <col:63, col:77> 1
|-FunctionDecl 0x55f43bef9c18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f43bef9ab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f43bef9b38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55f43bef9cc8 <line:529:22>
| `-NonNullAttr 0x55f43bef9d20 <col:63, col:80> 1 2
|-FunctionDecl 0x55f43befaf20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f43bef9d68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f43befae60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55f43befafd0 <line:531:22>
| `-NonNullAttr 0x55f43befb028 <col:63, col:77> 1
|-FunctionDecl 0x55f43befb1d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f43befb078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f43befb0f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55f43befb288 <line:535:22>
| `-NonNullAttr 0x55f43befb2e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f43befb468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f43befb328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f43befb3a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55f43befb518 <line:538:22>
| `-NonNullAttr 0x55f43befb570 <col:63, col:77> 1
|-FunctionDecl 0x55f43befb718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f43befb5b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f43befb638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55f43befb7c8 <line:542:22>
| `-NonNullAttr 0x55f43befb820 <col:63, col:80> 1 2
|-FunctionDecl 0x55f43befb9a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f43befb868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f43befb8e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55f43befba58 <line:545:22>
| `-NonNullAttr 0x55f43befbab0 <col:63, col:77> 1
|-FunctionDecl 0x55f43befbc98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55f43befbaf8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f43befbb78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55f43befbd48 <line:548:22>
| `-NonNullAttr 0x55f43befbda0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f43befcf58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f43befbde8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f43befce98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55f43befd008 <line:551:22>
| `-NonNullAttr 0x55f43befd060 <col:63, col:77> 1
|-FunctionDecl 0x55f43befd398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55f43befd140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55f43befd250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55f43befd448 <col:29>
| `-NonNullAttr 0x55f43befd4a0 <col:70, col:84> 1
|-FunctionDecl 0x55f43befd618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f43befd4e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f43befd6c0 <line:556:22>
| `-NonNullAttr 0x55f43befd718 <col:63, col:77> 1
|-FunctionDecl 0x55f43befd820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f43befd768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f43befd8c8 <line:558:22>
| `-NonNullAttr 0x55f43befd920 <col:52, col:66> 1
|-FunctionDecl 0x55f43befda20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f43befd968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f43befdac8 <line:560:19>
| `-NonNullAttr 0x55f43befdb20 <col:49, col:63> 1
|-FunctionDecl 0x55f43befdd58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f43befdb68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55f43befdbf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55f43befde08 <col:39>
| `-NonNullAttr 0x55f43befde90 <col:69, col:86> 1 2
|-FunctionDecl 0x55f43befdf90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f43befded8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f43befe038 <line:565:22>
| `-NonNullAttr 0x55f43befe090 <col:52, col:66> 1
|-FunctionDecl 0x55f43befe190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f43befe0d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f43befe238 <line:567:22>
| `-NonNullAttr 0x55f43befe290 <col:52, col:66> 1
|-FunctionDecl 0x55f43befe448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f43befe2d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55f43befe368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55f43befe4f8 <col:39>
| `-NonNullAttr 0x55f43befe550 <col:69, col:86> 1 2
|-FunctionDecl 0x55f43befe650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f43befe598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f43befe6f8 <line:572:22>
| `-NonNullAttr 0x55f43befe750 <col:52, col:66> 1
|-FunctionDecl 0x55f43befe938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55f43befe800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55f43befe9e0 <line:574:22>
| `-NonNullAttr 0x55f43befea38 <col:63, col:77> 1
|-FunctionDecl 0x55f43befeb40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55f43befea88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55f43befebe8 <line:576:22>
| `-NonNullAttr 0x55f43befec40 <col:63, col:77> 1
|-FunctionDecl 0x55f43befeea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f43befec88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55f43befed08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f43befef50 <line:580:22>
| `-NonNullAttr 0x55f43befefa8 <col:63, col:80> 1 2
|-FunctionDecl 0x55f43beff1b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55f43befeff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55f43beff078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55f43beff268 <line:583:22>
| `-NonNullAttr 0x55f43beff2c0 <col:63, col:77> 1
|-FunctionDecl 0x55f43beff468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f43beff308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55f43beff388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55f43beff518 <line:587:22>
| `-NonNullAttr 0x55f43beff570 <col:63, col:80> 1 2
|-FunctionDecl 0x55f43beff6f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55f43beff5b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55f43beff638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55f43beff7a8 <col:36>
| `-NonNullAttr 0x55f43beff800 <col:77, col:91> 1
|-FunctionDecl 0x55f43beffb38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55f43beff8e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55f43beff9f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55f43beffbe8 <line:592:22>
| `-NonNullAttr 0x55f43beffc40 <col:63, col:77> 1
|-FunctionDecl 0x55f43beffdb8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55f43beffc88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55f43beffe60 <line:594:22>
| `-NonNullAttr 0x55f43beffee0 <col:63, col:77> 1
|-FunctionDecl 0x55f43befffe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55f43befff28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55f43bf00088 <line:596:22>
| `-NonNullAttr 0x55f43bf000e0 <col:52, col:66> 1
|-FunctionDecl 0x55f43bf001e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55f43bf00128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55f43bf00288 <line:598:22>
| `-NonNullAttr 0x55f43bf002e0 <col:52, col:66> 1
|-FunctionDecl 0x55f43bf00508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55f43bf00328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55f43bf003a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55f43bf005b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55f43bf008e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f43bf00638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55f43bf006b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f43bf00740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55f43bf009a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55f43bf00bb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55f43bf00a80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55f43bf00c60 <line:607:22>
| `-NonNullAttr 0x55f43bf00cb8 <col:63, col:77> 1
|-FunctionDecl 0x55f43bf00dc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55f43bf00d08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55f43bf00e68 <line:609:22>
| `-NonNullAttr 0x55f43bf00ef0 <col:63, col:77> 1
|-FunctionDecl 0x55f43bf01118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f43bf00f38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55f43bf00fb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f43bf011c8 <line:613:22>
| `-NonNullAttr 0x55f43bf01220 <col:63, col:80> 1 2
|-FunctionDecl 0x55f43bf01428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55f43bf01268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55f43bf012e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55f43bf014d8 <col:37>
| `-NonNullAttr 0x55f43bf01530 <col:78, col:92> 1
|-FunctionDecl 0x55f43bf01748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55f43bf01578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55f43bf01620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55f43bf017f8 <line:619:22>
| `-NonNullAttr 0x55f43bf01850 <col:63, col:80> 1 2
|-FunctionDecl 0x55f43bf01a18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55f43bf01898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55f43bf01910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55f43bf01ac8 <line:622:22>
| `-NonNullAttr 0x55f43bf01b20 <col:63, col:77> 1
|-FunctionDecl 0x55f43bf01dc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55f43bf01c00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55f43bf01c80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55f43bf01e78 <line:624:22>
| `-NonNullAttr 0x55f43bf01f00 <col:63, col:77> 1
|-FunctionDecl 0x55f43bf02078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f43bf01f48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f43bf02120 <line:626:22>
| `-NonNullAttr 0x55f43bf02178 <col:63, col:77> 1
|-FunctionDecl 0x55f43bf02280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f43bf021c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f43bf02328 <line:628:22>
| `-NonNullAttr 0x55f43bf02380 <col:52, col:66> 1
|-FunctionDecl 0x55f43bf02480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f43bf023c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f43bf02528 <line:630:22>
| `-NonNullAttr 0x55f43bf02580 <col:52, col:66> 1
|-FunctionDecl 0x55f43bf02680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f43bf025c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f43bf02728 <line:632:22>
| `-NonNullAttr 0x55f43bf02780 <col:52, col:66> 1
|-FunctionDecl 0x55f43bf02b58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55f43bf02860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55f43bf02970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55f43bf029f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55f43bf02c10 <line:636:22>
| `-NonNullAttr 0x55f43bf02c68 <col:63, col:77> 1
|-FunctionDecl 0x55f43bf02de8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55f43bf02cb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55f43bf02e90 <line:638:22>
| `-NonNullAttr 0x55f43bf02f10 <col:63, col:77> 1
|-FunctionDecl 0x55f43bf03010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55f43bf02f58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55f43bf030b8 <line:640:22>
| `-NonNullAttr 0x55f43bf03110 <col:52, col:66> 1
|-FunctionDecl 0x55f43bf032f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55f43bf031c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55f43bf033a0 <line:642:22>
| `-NonNullAttr 0x55f43bf033f8 <col:63, col:77> 1
|-FunctionDecl 0x55f43bf03500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55f43bf03448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55f43bf035a8 <line:644:22>
| `-NonNullAttr 0x55f43bf03600 <col:63, col:77> 1
|-FunctionDecl 0x55f43bf03828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f43bf03648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55f43bf036c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f43bf038d8 <line:648:22>
| `-NonNullAttr 0x55f43bf03930 <col:63, col:80> 1 2
|-FunctionDecl 0x55f43bf03b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55f43bf03978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55f43bf039f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55f43bf03be8 <line:651:22>
| `-NonNullAttr 0x55f43bf03c40 <col:63, col:77> 1
|-FunctionDecl 0x55f43bf03fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55f43bf03d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55f43bf03e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55f43bf04058 <line:654:22>
| `-NonNullAttr 0x55f43bf040b0 <col:63, col:77> 1
|-FunctionDecl 0x55f43bf04208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55f43bf040f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55f43bf042b0 <col:69>
|-FunctionDecl 0x55f43bf04428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55f43bf04318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55f43bf044d0 <col:72>
|-FunctionDecl 0x55f43bf04708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55f43bf04538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55f43bf045e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55f43bf047b8 <col:44>
|-FunctionDecl 0x55f43bf049d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55f43bf04820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f43bf04898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55f43bf04a88 <line:661:22>
| `-NonNullAttr 0x55f43bf04ae0 <col:63, col:77> 2
|-FunctionDecl 0x55f43bf05f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55f43bf04bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55f43bf04cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55f43bf04de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55f43bf06008 <col:47>
|-FunctionDecl 0x55f43bf06110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55f43bf06078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55f43bf06268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55f43bf061d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55f43bf063c0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55f43bf06328 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55f43bf06518 <line:669:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x55f43bf06480 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55f43bf065e0 <line:670:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55f43bf066a0 <line:671:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55f43bf06760 <line:672:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55f43bf06818 <line:673:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55f43bf06898 prev 0x55f43bf06818 <line:674:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55f43bf06900 <col:24> 'int' 0
|-VarDecl 0x55f43bf06938 <line:675:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55f43bf069b8 prev 0x55f43bf06938 <line:676:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55f43bf06a20 <col:27> 'int' 0
|-VarDecl 0x55f43bf06a50 <line:677:1, col:7> col:7 __unbuffered_p0_EAX$flush_delayed '_Bool'
|-VarDecl 0x55f43bf06ad0 <line:678:1, col:5> col:5 __unbuffered_p0_EAX$mem_tmp 'int'
|-VarDecl 0x55f43bf06b48 <line:679:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x55f43bf06bc0 <line:680:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x55f43bf06c38 <line:681:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x55f43bf06cb0 <line:682:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x55f43bf06d28 <line:683:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd4 '_Bool'
|-VarDecl 0x55f43bf06da0 <line:684:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x55f43bf06e18 <line:685:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x55f43bf06e90 <line:686:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x55f43bf06f20 <line:687:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x55f43bf06f98 <line:688:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd4 '_Bool'
|-VarDecl 0x55f43bf07010 <line:689:1, col:7> col:7 used __unbuffered_p0_EAX$read_delayed '_Bool'
|-VarDecl 0x55f43bf07090 <line:690:1, col:6> col:6 used __unbuffered_p0_EAX$read_delayed_var 'int *'
|-VarDecl 0x55f43bf07110 <line:691:1, col:5> col:5 __unbuffered_p0_EAX$w_buff0 'int'
|-VarDecl 0x55f43bf07188 <line:692:1, col:7> col:7 __unbuffered_p0_EAX$w_buff0_used '_Bool'
|-VarDecl 0x55f43bf07208 <line:693:1, col:5> col:5 __unbuffered_p0_EAX$w_buff1 'int'
|-VarDecl 0x55f43bf07280 <line:694:1, col:7> col:7 __unbuffered_p0_EAX$w_buff1_used '_Bool'
|-VarDecl 0x55f43bf07300 <line:695:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x55f43bf07380 prev 0x55f43bf07300 <line:696:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x55f43bf073e8 <col:27> 'int' 0
|-VarDecl 0x55f43bf07420 <line:697:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55f43bf074a0 prev 0x55f43bf07420 <line:698:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55f43bf07508 <col:27> 'int' 0
|-VarDecl 0x55f43bf07538 <line:699:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55f43bf075b0 <line:700:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55f43bf07630 <line:701:1, col:5> col:5 used x 'int'
|-VarDecl 0x55f43bf076b0 prev 0x55f43bf07630 <line:702:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55f43bf07718 <col:9> 'int' 0
|-VarDecl 0x55f43bf07750 <line:703:1, col:5> col:5 used y 'int'
|-VarDecl 0x55f43bf077d0 prev 0x55f43bf07750 <line:704:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55f43bf07838 <col:9> 'int' 0
|-VarDecl 0x55f43bf07868 <line:705:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x55f43bf078e8 <line:706:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x55f43bf07960 <line:707:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x55f43bf079d8 <line:708:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x55f43bf07a50 <line:709:1, col:7> col:7 y$r_buff0_thd2 '_Bool'
|-VarDecl 0x55f43bf07ac8 <line:710:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x55f43bf07b40 <line:711:1, col:7> col:7 used y$r_buff0_thd4 '_Bool'
|-VarDecl 0x55f43bf07bb8 <line:712:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x55f43bf07c30 <line:713:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x55f43bf07ca8 <line:714:1, col:7> col:7 y$r_buff1_thd2 '_Bool'
|-VarDecl 0x55f43bf07d20 <line:715:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x55f43bf07d98 <line:716:1, col:7> col:7 used y$r_buff1_thd4 '_Bool'
|-VarDecl 0x55f43bf07e10 <line:717:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x55f43bf07e90 <line:718:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x55f43bf07f30 <line:719:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x55f43bf07fa8 <line:720:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x55f43bf08028 <line:721:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x55f43bf080a0 <line:722:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x55f43bf08118 <line:723:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55f43bf08190 <line:724:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x55f43bf08208 <line:725:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55f43bf08320 prev 0x55f43bf06110 <line:726:1, line:756:1> line:726:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55f43bf08288 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55f43bf0cc58 <line:727:1, line:756:1>
|   |-CallExpr 0x55f43bf08438 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f43bf08420 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf083c8 <col:3> 'void ()' Function 0x55f43bead4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f43bf08508 <line:729:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55f43bf08458 <col:3> '_Bool' lvalue Var 0x55f43bf08118 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55f43bf084e8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55f43bf084d0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55f43bf08478 <col:19> '_Bool (void)' Function 0x55f43beacc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55f43bf085a0 <line:730:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55f43bf08528 <col:3> '_Bool' lvalue Var 0x55f43bf08208 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55f43bf08580 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55f43bf08568 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55f43bf08548 <col:19> '_Bool (void)' Function 0x55f43beacc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55f43bf08618 <line:731:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55f43bf085c0 <col:3> '_Bool' lvalue Var 0x55f43bf07868 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55f43bf08600 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f43bf085e0 <col:21> '_Bool' lvalue Var 0x55f43bf08208 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55f43bf08690 <line:732:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55f43bf08638 <col:3> 'int' lvalue Var 0x55f43bf078e8 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55f43bf08678 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f43bf08658 <col:15> 'int' lvalue Var 0x55f43bf077d0 'y' 'int'
|   |-BinaryOperator 0x55f43bf08728 <line:733:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55f43bf086b0 <col:3> '_Bool' lvalue Var 0x55f43bf08190 'weak$$choice1' '_Bool'
|   | `-CallExpr 0x55f43bf08708 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55f43bf086f0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55f43bf086d0 <col:19> '_Bool (void)' Function 0x55f43beacc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55f43bf09160 <line:734:3, col:363> 'int' '='
|   | |-DeclRefExpr 0x55f43bf08748 <col:3> 'int' lvalue Var 0x55f43bf077d0 'y' 'int'
|   | `-ConditionalOperator 0x55f43bf09130 <col:7, col:363> 'int'
|   |   |-UnaryOperator 0x55f43bf087a0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | `-ImplicitCastExpr 0x55f43bf08788 <col:8> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55f43bf08768 <col:8> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |   |-ImplicitCastExpr 0x55f43bf09118 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f43bf087b8 <col:25> 'int' lvalue Var 0x55f43bf077d0 'y' 'int'
|   |   `-ParenExpr 0x55f43bf090f8 <col:29, col:363> 'int'
|   |     `-ConditionalOperator 0x55f43bf090c8 <col:30, col:362> 'int'
|   |       |-BinaryOperator 0x55f43bf08878 <col:30, col:48> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55f43bf08830 <col:30> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55f43bf08818 <col:30> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55f43bf087d8 <col:30> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55f43bf08860 <col:48> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55f43bf08848 <col:48> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55f43bf087f8 <col:48> '_Bool' lvalue Var 0x55f43bf079d8 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55f43bf090b0 <col:65> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f43bf08898 <col:65> 'int' lvalue Var 0x55f43bf07f30 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55f43bf09090 <col:77, col:362> 'int'
|   |         `-ConditionalOperator 0x55f43bf09060 <col:78, col:361> 'int'
|   |           |-BinaryOperator 0x55f43bf08a38 <col:78, col:134> 'int' '&&'
|   |           | |-BinaryOperator 0x55f43bf089c8 <col:78, col:115> 'int' '&&'
|   |           | | |-BinaryOperator 0x55f43bf08958 <col:78, col:97> 'int' '&&'
|   |           | | | |-ImplicitCastExpr 0x55f43bf08940 <col:78> 'int' <IntegralCast>
|   |           | | | | `-ImplicitCastExpr 0x55f43bf08928 <col:78> '_Bool' <LValueToRValue>
|   |           | | | |   `-DeclRefExpr 0x55f43bf088b8 <col:78> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |           | | | `-UnaryOperator 0x55f43bf08910 <col:96, col:97> 'int' prefix '!' cannot overflow
|   |           | | |   `-ImplicitCastExpr 0x55f43bf088f8 <col:97> '_Bool' <LValueToRValue>
|   |           | | |     `-DeclRefExpr 0x55f43bf088d8 <col:97> '_Bool' lvalue Var 0x55f43bf07c30 'y$r_buff1_thd1' '_Bool'
|   |           | | `-ImplicitCastExpr 0x55f43bf089b0 <col:115> 'int' <IntegralCast>
|   |           | |   `-ImplicitCastExpr 0x55f43bf08998 <col:115> '_Bool' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x55f43bf08978 <col:115> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   |           | `-UnaryOperator 0x55f43bf08a20 <col:133, col:134> 'int' prefix '!' cannot overflow
|   |           |   `-ImplicitCastExpr 0x55f43bf08a08 <col:134> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55f43bf089e8 <col:134> '_Bool' lvalue Var 0x55f43bf079d8 'y$r_buff0_thd1' '_Bool'
|   |           |-ParenExpr 0x55f43bf08c20 <col:151, col:211> 'int'
|   |           | `-ConditionalOperator 0x55f43bf08bf0 <col:152, col:210> 'int'
|   |           |   |-ImplicitCastExpr 0x55f43bf08bc0 <col:152> 'int' <IntegralCast>
|   |           |   | `-ImplicitCastExpr 0x55f43bf08ba8 <col:152> '_Bool' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x55f43bf08a58 <col:152> '_Bool' lvalue Var 0x55f43bf08118 'weak$$choice0' '_Bool'
|   |           |   |-ImplicitCastExpr 0x55f43bf08bd8 <col:168> 'int' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x55f43bf08a78 <col:168> 'int' lvalue Var 0x55f43bf077d0 'y' 'int'
|   |           |   `-ParenExpr 0x55f43bf08b88 <col:172, col:210> 'int'
|   |           |     `-ConditionalOperator 0x55f43bf08b58 <col:173, col:201> 'int'
|   |           |       |-ImplicitCastExpr 0x55f43bf08b10 <col:173> 'int' <IntegralCast>
|   |           |       | `-ImplicitCastExpr 0x55f43bf08af8 <col:173> '_Bool' <LValueToRValue>
|   |           |       |   `-DeclRefExpr 0x55f43bf08a98 <col:173> '_Bool' lvalue Var 0x55f43bf08190 'weak$$choice1' '_Bool'
|   |           |       |-ImplicitCastExpr 0x55f43bf08b28 <col:189> 'int' <LValueToRValue>
|   |           |       | `-DeclRefExpr 0x55f43bf08ab8 <col:189> 'int' lvalue Var 0x55f43bf07f30 'y$w_buff0' 'int'
|   |           |       `-ImplicitCastExpr 0x55f43bf08b40 <col:201> 'int' <LValueToRValue>
|   |           |         `-DeclRefExpr 0x55f43bf08ad8 <col:201> 'int' lvalue Var 0x55f43bf08028 'y$w_buff1' 'int'
|   |           `-ParenExpr 0x55f43bf09040 <col:215, col:361> 'int'
|   |             `-ConditionalOperator 0x55f43bf09010 <col:216, col:360> 'int'
|   |               |-BinaryOperator 0x55f43bf08dc0 <col:216, col:271> 'int' '&&'
|   |               | |-BinaryOperator 0x55f43bf08d50 <col:216, col:252> 'int' '&&'
|   |               | | |-BinaryOperator 0x55f43bf08ce0 <col:216, col:234> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55f43bf08c98 <col:216> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55f43bf08c80 <col:216> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55f43bf08c40 <col:216> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |               | | | `-ImplicitCastExpr 0x55f43bf08cc8 <col:234> 'int' <IntegralCast>
|   |               | | |   `-ImplicitCastExpr 0x55f43bf08cb0 <col:234> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55f43bf08c60 <col:234> '_Bool' lvalue Var 0x55f43bf07c30 'y$r_buff1_thd1' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55f43bf08d38 <col:252> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55f43bf08d20 <col:252> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55f43bf08d00 <col:252> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55f43bf08da8 <col:270, col:271> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55f43bf08d90 <col:271> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55f43bf08d70 <col:271> '_Bool' lvalue Var 0x55f43bf079d8 'y$r_buff0_thd1' '_Bool'
|   |               |-ParenExpr 0x55f43bf08ed0 <col:288, col:326> 'int'
|   |               | `-ConditionalOperator 0x55f43bf08ea0 <col:289, col:317> 'int'
|   |               |   |-ImplicitCastExpr 0x55f43bf08e58 <col:289> 'int' <IntegralCast>
|   |               |   | `-ImplicitCastExpr 0x55f43bf08e40 <col:289> '_Bool' <LValueToRValue>
|   |               |   |   `-DeclRefExpr 0x55f43bf08de0 <col:289> '_Bool' lvalue Var 0x55f43bf08118 'weak$$choice0' '_Bool'
|   |               |   |-ImplicitCastExpr 0x55f43bf08e70 <col:305> 'int' <LValueToRValue>
|   |               |   | `-DeclRefExpr 0x55f43bf08e00 <col:305> 'int' lvalue Var 0x55f43bf08028 'y$w_buff1' 'int'
|   |               |   `-ImplicitCastExpr 0x55f43bf08e88 <col:317> 'int' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55f43bf08e20 <col:317> 'int' lvalue Var 0x55f43bf07f30 'y$w_buff0' 'int'
|   |               `-ParenExpr 0x55f43bf08ff0 <col:330, col:360> 'int'
|   |                 `-ConditionalOperator 0x55f43bf08fc0 <col:331, col:359> 'int'
|   |                   |-ImplicitCastExpr 0x55f43bf08f78 <col:331> 'int' <IntegralCast>
|   |                   | `-ImplicitCastExpr 0x55f43bf08f60 <col:331> '_Bool' <LValueToRValue>
|   |                   |   `-DeclRefExpr 0x55f43bf08ef0 <col:331> '_Bool' lvalue Var 0x55f43bf08118 'weak$$choice0' '_Bool'
|   |                   |-ImplicitCastExpr 0x55f43bf08f90 <col:347> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55f43bf08f10 <col:347> 'int' lvalue Var 0x55f43bf07f30 'y$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x55f43bf08fa8 <col:359> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55f43bf08f40 <col:359> 'int' lvalue Var 0x55f43bf077d0 'y' 'int'
|   |-BinaryOperator 0x55f43bf09900 <line:735:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x55f43bf09180 <col:3> 'int' lvalue Var 0x55f43bf07f30 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55f43bf098d0 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x55f43bf098a0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55f43bf09888 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55f43bf091a0 <col:15> '_Bool' lvalue Var 0x55f43bf08208 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55f43bf098b8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f43bf091c0 <col:31> 'int' lvalue Var 0x55f43bf07f30 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55f43bf09868 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x55f43bf09838 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x55f43bf09218 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x55f43bf09200 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55f43bf091e0 <col:45> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x55f43bf09820 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f43bf09230 <col:62> 'int' lvalue Var 0x55f43bf07f30 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55f43bf09800 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x55f43bf097d0 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x55f43bf092f0 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55f43bf092a8 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55f43bf09290 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55f43bf09250 <col:75> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55f43bf092d8 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55f43bf092c0 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55f43bf09270 <col:93> '_Bool' lvalue Var 0x55f43bf079d8 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55f43bf097b8 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55f43bf09310 <col:110> 'int' lvalue Var 0x55f43bf07f30 'y$w_buff0' 'int'
|   |           `-ParenExpr 0x55f43bf09798 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x55f43bf09768 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x55f43bf094b0 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x55f43bf09440 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x55f43bf093d0 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55f43bf093b8 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55f43bf093a0 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55f43bf09330 <col:123> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x55f43bf09388 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x55f43bf09370 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55f43bf09350 <col:142> '_Bool' lvalue Var 0x55f43bf07c30 'y$r_buff1_thd1' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55f43bf09428 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55f43bf09410 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55f43bf093f0 <col:160> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55f43bf09498 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55f43bf09480 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55f43bf09460 <col:179> '_Bool' lvalue Var 0x55f43bf079d8 'y$r_buff0_thd1' '_Bool'
|   |               |-ImplicitCastExpr 0x55f43bf09750 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x55f43bf094d0 <col:196> 'int' lvalue Var 0x55f43bf07f30 'y$w_buff0' 'int'
|   |               `-ParenExpr 0x55f43bf09730 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x55f43bf09700 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x55f43bf09670 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x55f43bf09600 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x55f43bf09590 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x55f43bf09548 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x55f43bf09530 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x55f43bf094f0 <col:209> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x55f43bf09578 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x55f43bf09560 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x55f43bf09510 <col:227> '_Bool' lvalue Var 0x55f43bf07c30 'y$r_buff1_thd1' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x55f43bf095e8 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x55f43bf095d0 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x55f43bf095b0 <col:245> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x55f43bf09658 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x55f43bf09640 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x55f43bf09620 <col:264> '_Bool' lvalue Var 0x55f43bf079d8 'y$r_buff0_thd1' '_Bool'
|   |                   |-ImplicitCastExpr 0x55f43bf096d0 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55f43bf09690 <col:281> 'int' lvalue Var 0x55f43bf07f30 'y$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x55f43bf096e8 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55f43bf096b0 <col:293> 'int' lvalue Var 0x55f43bf07f30 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55f43bf0a0b8 <line:736:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x55f43bf09920 <col:3> 'int' lvalue Var 0x55f43bf08028 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55f43bf0a088 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x55f43bf0a058 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55f43bf0a040 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55f43bf09940 <col:15> '_Bool' lvalue Var 0x55f43bf08208 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55f43bf0a070 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f43bf09960 <col:31> 'int' lvalue Var 0x55f43bf08028 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55f43bf0a020 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x55f43bf09ff0 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x55f43bf099b8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x55f43bf099a0 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55f43bf09980 <col:45> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x55f43bf09fd8 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f43bf099d0 <col:62> 'int' lvalue Var 0x55f43bf08028 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55f43bf09fb8 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x55f43bf09f88 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x55f43bf09a90 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55f43bf09a48 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55f43bf09a30 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55f43bf099f0 <col:75> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55f43bf09a78 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55f43bf09a60 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55f43bf09a10 <col:93> '_Bool' lvalue Var 0x55f43bf079d8 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55f43bf09f70 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55f43bf09ab0 <col:110> 'int' lvalue Var 0x55f43bf08028 'y$w_buff1' 'int'
|   |           `-ParenExpr 0x55f43bf09f50 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x55f43bf09f08 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x55f43bf09c50 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x55f43bf09be0 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x55f43bf09b70 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55f43bf09b58 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55f43bf09b40 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55f43bf09ad0 <col:123> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x55f43bf09b28 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x55f43bf09b10 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55f43bf09af0 <col:142> '_Bool' lvalue Var 0x55f43bf07c30 'y$r_buff1_thd1' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55f43bf09bc8 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55f43bf09bb0 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55f43bf09b90 <col:160> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55f43bf09c38 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55f43bf09c20 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55f43bf09c00 <col:179> '_Bool' lvalue Var 0x55f43bf079d8 'y$r_buff0_thd1' '_Bool'
|   |               |-ImplicitCastExpr 0x55f43bf09ef0 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x55f43bf09c70 <col:196> 'int' lvalue Var 0x55f43bf08028 'y$w_buff1' 'int'
|   |               `-ParenExpr 0x55f43bf09ed0 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x55f43bf09ea0 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x55f43bf09e10 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x55f43bf09da0 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x55f43bf09d30 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x55f43bf09ce8 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x55f43bf09cd0 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x55f43bf09c90 <col:209> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x55f43bf09d18 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x55f43bf09d00 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x55f43bf09cb0 <col:227> '_Bool' lvalue Var 0x55f43bf07c30 'y$r_buff1_thd1' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x55f43bf09d88 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x55f43bf09d70 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x55f43bf09d50 <col:245> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x55f43bf09df8 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x55f43bf09de0 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x55f43bf09dc0 <col:264> '_Bool' lvalue Var 0x55f43bf079d8 'y$r_buff0_thd1' '_Bool'
|   |                   |-ImplicitCastExpr 0x55f43bf09e70 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55f43bf09e30 <col:281> 'int' lvalue Var 0x55f43bf08028 'y$w_buff1' 'int'
|   |                   `-ImplicitCastExpr 0x55f43bf09e88 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55f43bf09e50 <col:293> 'int' lvalue Var 0x55f43bf08028 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55f43bf0a990 <line:737:3, col:349> '_Bool' '='
|   | |-DeclRefExpr 0x55f43bf0a0d8 <col:3> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f43bf0a978 <col:20, col:349> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f43bf0a948 <col:20, col:349> 'int'
|   |     |-ImplicitCastExpr 0x55f43bf0a900 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f43bf0a8e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f43bf0a0f8 <col:20> '_Bool' lvalue Var 0x55f43bf08208 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f43bf0a930 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f43bf0a918 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f43bf0a118 <col:36> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55f43bf0a8c8 <col:53, col:349> 'int'
|   |       `-ConditionalOperator 0x55f43bf0a898 <col:54, col:348> 'int'
|   |         |-UnaryOperator 0x55f43bf0a170 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55f43bf0a158 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f43bf0a138 <col:55> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55f43bf0a880 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f43bf0a868 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f43bf0a188 <col:72> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55f43bf0a848 <col:89, col:348> 'int'
|   |           `-ConditionalOperator 0x55f43bf0a818 <col:90, col:347> 'int'
|   |             |-BinaryOperator 0x55f43bf0a248 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f43bf0a200 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f43bf0a1e8 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f43bf0a1a8 <col:90> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f43bf0a230 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f43bf0a218 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f43bf0a1c8 <col:108> '_Bool' lvalue Var 0x55f43bf079d8 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55f43bf0a800 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f43bf0a298 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f43bf0a268 <col:132> 'int' 0
|   |             `-ParenExpr 0x55f43bf0a7e0 <col:136, col:347> 'int'
|   |               `-ConditionalOperator 0x55f43bf0a7b0 <col:137, col:346> 'int'
|   |                 |-BinaryOperator 0x55f43bf0a440 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55f43bf0a3d0 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55f43bf0a360 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55f43bf0a348 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55f43bf0a330 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55f43bf0a2c0 <col:137> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55f43bf0a318 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55f43bf0a300 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55f43bf0a2e0 <col:156> '_Bool' lvalue Var 0x55f43bf07c30 'y$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55f43bf0a3b8 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55f43bf0a3a0 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55f43bf0a380 <col:174> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55f43bf0a428 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55f43bf0a410 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55f43bf0a3f0 <col:193> '_Bool' lvalue Var 0x55f43bf079d8 'y$r_buff0_thd1' '_Bool'
|   |                 |-BinaryOperator 0x55f43bf0a500 <col:210, col:228> 'int' '||'
|   |                 | |-ImplicitCastExpr 0x55f43bf0a4e8 <col:210> 'int' <IntegralCast>
|   |                 | | `-ImplicitCastExpr 0x55f43bf0a4d0 <col:210> '_Bool' <LValueToRValue>
|   |                 | |   `-DeclRefExpr 0x55f43bf0a460 <col:210> '_Bool' lvalue Var 0x55f43bf08118 'weak$$choice0' '_Bool'
|   |                 | `-UnaryOperator 0x55f43bf0a4b8 <col:227, col:228> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55f43bf0a4a0 <col:228> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55f43bf0a480 <col:228> '_Bool' lvalue Var 0x55f43bf08190 'weak$$choice1' '_Bool'
|   |                 `-ParenExpr 0x55f43bf0a790 <col:244, col:346> 'int'
|   |                   `-ConditionalOperator 0x55f43bf0a760 <col:245, col:333> 'int'
|   |                     |-BinaryOperator 0x55f43bf0a6a0 <col:245, col:300> 'int' '&&'
|   |                     | |-BinaryOperator 0x55f43bf0a630 <col:245, col:281> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55f43bf0a5c0 <col:245, col:263> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55f43bf0a578 <col:245> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55f43bf0a560 <col:245> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55f43bf0a520 <col:245> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55f43bf0a5a8 <col:263> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55f43bf0a590 <col:263> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55f43bf0a540 <col:263> '_Bool' lvalue Var 0x55f43bf07c30 'y$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55f43bf0a618 <col:281> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55f43bf0a600 <col:281> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55f43bf0a5e0 <col:281> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55f43bf0a688 <col:299, col:300> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55f43bf0a670 <col:300> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55f43bf0a650 <col:300> '_Bool' lvalue Var 0x55f43bf079d8 'y$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x55f43bf0a718 <col:317> 'int' <IntegralCast>
|   |                     | `-ImplicitCastExpr 0x55f43bf0a700 <col:317> '_Bool' <LValueToRValue>
|   |                     |   `-DeclRefExpr 0x55f43bf0a6c0 <col:317> '_Bool' lvalue Var 0x55f43bf08118 'weak$$choice0' '_Bool'
|   |                     `-ImplicitCastExpr 0x55f43bf0a748 <col:333> 'int' <IntegralCast>
|   |                       `-ImplicitCastExpr 0x55f43bf0a730 <col:333> '_Bool' <LValueToRValue>
|   |                         `-DeclRefExpr 0x55f43bf0a6e0 <col:333> '_Bool' lvalue Var 0x55f43bf08118 'weak$$choice0' '_Bool'
|   |-BinaryOperator 0x55f43bf0b248 <line:738:3, col:321> '_Bool' '='
|   | |-DeclRefExpr 0x55f43bf0a9b0 <col:3> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f43bf0b230 <col:20, col:321> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f43bf0b200 <col:20, col:321> 'int'
|   |     |-ImplicitCastExpr 0x55f43bf0b1b8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f43bf0b1a0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f43bf0a9d0 <col:20> '_Bool' lvalue Var 0x55f43bf08208 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f43bf0b1e8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f43bf0b1d0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f43bf0a9f0 <col:36> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55f43bf0b180 <col:53, col:321> 'int'
|   |       `-ConditionalOperator 0x55f43bf0b150 <col:54, col:320> 'int'
|   |         |-UnaryOperator 0x55f43bf0aa48 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55f43bf0aa30 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f43bf0aa10 <col:55> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55f43bf0b138 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f43bf0b120 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f43bf0aa60 <col:72> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55f43bf0b100 <col:89, col:320> 'int'
|   |           `-ConditionalOperator 0x55f43bf0b0d0 <col:90, col:319> 'int'
|   |             |-BinaryOperator 0x55f43bf0ab20 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f43bf0aad8 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f43bf0aac0 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f43bf0aa80 <col:90> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f43bf0ab08 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f43bf0aaf0 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f43bf0aaa0 <col:108> '_Bool' lvalue Var 0x55f43bf079d8 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55f43bf0b0b8 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f43bf0ab70 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f43bf0ab40 <col:132> 'int' 0
|   |             `-ParenExpr 0x55f43bf0b098 <col:136, col:319> 'int'
|   |               `-ConditionalOperator 0x55f43bf0b068 <col:137, col:318> 'int'
|   |                 |-BinaryOperator 0x55f43bf0ad18 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55f43bf0aca8 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55f43bf0ac38 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55f43bf0ac20 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55f43bf0ac08 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55f43bf0ab98 <col:137> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55f43bf0abf0 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55f43bf0abd8 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55f43bf0abb8 <col:156> '_Bool' lvalue Var 0x55f43bf07c30 'y$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55f43bf0ac90 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55f43bf0ac78 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55f43bf0ac58 <col:174> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55f43bf0ad00 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55f43bf0ace8 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55f43bf0acc8 <col:193> '_Bool' lvalue Var 0x55f43bf079d8 'y$r_buff0_thd1' '_Bool'
|   |                 |-ImplicitCastExpr 0x55f43bf0b050 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x55f43bf0b038 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x55f43bf0ad38 <col:210> '_Bool' lvalue Var 0x55f43bf08118 'weak$$choice0' '_Bool'
|   |                 `-ParenExpr 0x55f43bf0b018 <col:226, col:318> 'int'
|   |                   `-ConditionalOperator 0x55f43bf0afe8 <col:227, col:317> 'int'
|   |                     |-BinaryOperator 0x55f43bf0aed8 <col:227, col:282> 'int' '&&'
|   |                     | |-BinaryOperator 0x55f43bf0ae68 <col:227, col:263> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55f43bf0adf8 <col:227, col:245> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55f43bf0adb0 <col:227> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55f43bf0ad98 <col:227> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55f43bf0ad58 <col:227> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55f43bf0ade0 <col:245> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55f43bf0adc8 <col:245> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55f43bf0ad78 <col:245> '_Bool' lvalue Var 0x55f43bf07c30 'y$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55f43bf0ae50 <col:263> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55f43bf0ae38 <col:263> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55f43bf0ae18 <col:263> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55f43bf0aec0 <col:281, col:282> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55f43bf0aea8 <col:282> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55f43bf0ae88 <col:282> '_Bool' lvalue Var 0x55f43bf079d8 'y$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x55f43bf0afb8 <col:299, col:306> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55f43bf0af28 <col:299, col:306> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55f43bf0aef8 <col:306> 'int' 0
|   |                     `-ImplicitCastExpr 0x55f43bf0afd0 <col:310, col:317> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55f43bf0af90 <col:310, col:317> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55f43bf0af60 <col:317> 'int' 0
|   |-BinaryOperator 0x55f43bf0baf0 <line:739:3, col:322> '_Bool' '='
|   | |-DeclRefExpr 0x55f43bf0b268 <col:3> '_Bool' lvalue Var 0x55f43bf079d8 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55f43bf0bad8 <col:20, col:322> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f43bf0baa8 <col:20, col:322> 'int'
|   |     |-ImplicitCastExpr 0x55f43bf0ba60 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f43bf0ba48 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f43bf0b288 <col:20> '_Bool' lvalue Var 0x55f43bf08208 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f43bf0ba90 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f43bf0ba78 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f43bf0b2a8 <col:36> '_Bool' lvalue Var 0x55f43bf079d8 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55f43bf0ba28 <col:53, col:322> 'int'
|   |       `-ConditionalOperator 0x55f43bf0b9f8 <col:54, col:321> 'int'
|   |         |-UnaryOperator 0x55f43bf0b300 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55f43bf0b2e8 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f43bf0b2c8 <col:55> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55f43bf0b9e0 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f43bf0b9c8 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f43bf0b318 <col:72> '_Bool' lvalue Var 0x55f43bf079d8 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55f43bf0b9a8 <col:89, col:321> 'int'
|   |           `-ConditionalOperator 0x55f43bf0b978 <col:90, col:320> 'int'
|   |             |-BinaryOperator 0x55f43bf0b3d8 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f43bf0b390 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f43bf0b378 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f43bf0b338 <col:90> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f43bf0b3c0 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f43bf0b3a8 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f43bf0b358 <col:108> '_Bool' lvalue Var 0x55f43bf079d8 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55f43bf0b960 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f43bf0b428 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f43bf0b3f8 <col:132> 'int' 0
|   |             `-ParenExpr 0x55f43bf0b940 <col:136, col:320> 'int'
|   |               `-ConditionalOperator 0x55f43bf0b910 <col:137, col:319> 'int'
|   |                 |-BinaryOperator 0x55f43bf0b5d0 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55f43bf0b560 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55f43bf0b4f0 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55f43bf0b4d8 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55f43bf0b4c0 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55f43bf0b450 <col:137> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55f43bf0b4a8 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55f43bf0b490 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55f43bf0b470 <col:156> '_Bool' lvalue Var 0x55f43bf07c30 'y$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55f43bf0b548 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55f43bf0b530 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55f43bf0b510 <col:174> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55f43bf0b5b8 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55f43bf0b5a0 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55f43bf0b580 <col:193> '_Bool' lvalue Var 0x55f43bf079d8 'y$r_buff0_thd1' '_Bool'
|   |                 |-ImplicitCastExpr 0x55f43bf0b8f8 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x55f43bf0b8e0 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x55f43bf0b5f0 <col:210> '_Bool' lvalue Var 0x55f43bf079d8 'y$r_buff0_thd1' '_Bool'
|   |                 `-ParenExpr 0x55f43bf0b8c0 <col:227, col:319> 'int'
|   |                   `-ConditionalOperator 0x55f43bf0b890 <col:228, col:318> 'int'
|   |                     |-BinaryOperator 0x55f43bf0b790 <col:228, col:283> 'int' '&&'
|   |                     | |-BinaryOperator 0x55f43bf0b720 <col:228, col:264> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55f43bf0b6b0 <col:228, col:246> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55f43bf0b668 <col:228> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55f43bf0b650 <col:228> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55f43bf0b610 <col:228> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55f43bf0b698 <col:246> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55f43bf0b680 <col:246> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55f43bf0b630 <col:246> '_Bool' lvalue Var 0x55f43bf07c30 'y$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55f43bf0b708 <col:264> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55f43bf0b6f0 <col:264> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55f43bf0b6d0 <col:264> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55f43bf0b778 <col:282, col:283> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55f43bf0b760 <col:283> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55f43bf0b740 <col:283> '_Bool' lvalue Var 0x55f43bf079d8 'y$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x55f43bf0b860 <col:300, col:307> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55f43bf0b7e0 <col:300, col:307> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55f43bf0b7b0 <col:307> 'int' 0
|   |                     `-ImplicitCastExpr 0x55f43bf0b878 <col:311, col:318> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55f43bf0b838 <col:311, col:318> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55f43bf0b808 <col:318> 'int' 0
|   |-BinaryOperator 0x55f43bf0c4b8 <line:740:3, col:351> '_Bool' '='
|   | |-DeclRefExpr 0x55f43bf0bb10 <col:3> '_Bool' lvalue Var 0x55f43bf07c30 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55f43bf0c4a0 <col:20, col:351> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f43bf0c470 <col:20, col:351> 'int'
|   |     |-ImplicitCastExpr 0x55f43bf0c428 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f43bf0c410 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f43bf0bb30 <col:20> '_Bool' lvalue Var 0x55f43bf08208 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f43bf0c458 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f43bf0c440 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f43bf0bb50 <col:36> '_Bool' lvalue Var 0x55f43bf07c30 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55f43bf0c3f0 <col:53, col:351> 'int'
|   |       `-ConditionalOperator 0x55f43bf0c3c0 <col:54, col:350> 'int'
|   |         |-UnaryOperator 0x55f43bf0bba8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55f43bf0bb90 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f43bf0bb70 <col:55> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55f43bf0c3a8 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f43bf0c390 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f43bf0bbc0 <col:72> '_Bool' lvalue Var 0x55f43bf07c30 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55f43bf0c370 <col:89, col:350> 'int'
|   |           `-ConditionalOperator 0x55f43bf0c340 <col:90, col:349> 'int'
|   |             |-BinaryOperator 0x55f43bf0bc80 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f43bf0bc38 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f43bf0bc20 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f43bf0bbe0 <col:90> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f43bf0bc68 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f43bf0bc50 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f43bf0bc00 <col:108> '_Bool' lvalue Var 0x55f43bf079d8 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55f43bf0c328 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f43bf0bcd0 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f43bf0bca0 <col:132> 'int' 0
|   |             `-ParenExpr 0x55f43bf0c308 <col:136, col:349> 'int'
|   |               `-ConditionalOperator 0x55f43bf0c2d8 <col:137, col:348> 'int'
|   |                 |-BinaryOperator 0x55f43bf0be78 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55f43bf0be08 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55f43bf0bd98 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55f43bf0bd80 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55f43bf0bd68 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55f43bf0bcf8 <col:137> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55f43bf0bd50 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55f43bf0bd38 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55f43bf0bd18 <col:156> '_Bool' lvalue Var 0x55f43bf07c30 'y$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55f43bf0bdf0 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55f43bf0bdd8 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55f43bf0bdb8 <col:174> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55f43bf0be60 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55f43bf0be48 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55f43bf0be28 <col:193> '_Bool' lvalue Var 0x55f43bf079d8 'y$r_buff0_thd1' '_Bool'
|   |                 |-ParenExpr 0x55f43bf0bfe8 <col:210, col:252> 'int'
|   |                 | `-ConditionalOperator 0x55f43bf0bfb8 <col:211, col:251> 'int'
|   |                 |   |-ImplicitCastExpr 0x55f43bf0bf48 <col:211> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x55f43bf0bf30 <col:211> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x55f43bf0be98 <col:211> '_Bool' lvalue Var 0x55f43bf08118 'weak$$choice0' '_Bool'
|   |                 |   |-ImplicitCastExpr 0x55f43bf0bf88 <col:227> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x55f43bf0bf70 <col:227> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x55f43bf0beb8 <col:227> '_Bool' lvalue Var 0x55f43bf07c30 'y$r_buff1_thd1' '_Bool'
|   |                 |   `-ImplicitCastExpr 0x55f43bf0bfa0 <col:244, col:251> 'int' <IntegralCast>
|   |                 |     `-CStyleCastExpr 0x55f43bf0bf08 <col:244, col:251> '_Bool' <IntegralToBoolean>
|   |                 |       `-IntegerLiteral 0x55f43bf0bed8 <col:251> 'int' 0
|   |                 `-ParenExpr 0x55f43bf0c2b8 <col:256, col:348> 'int'
|   |                   `-ConditionalOperator 0x55f43bf0c288 <col:257, col:347> 'int'
|   |                     |-BinaryOperator 0x55f43bf0c188 <col:257, col:312> 'int' '&&'
|   |                     | |-BinaryOperator 0x55f43bf0c118 <col:257, col:293> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55f43bf0c0a8 <col:257, col:275> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55f43bf0c060 <col:257> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55f43bf0c048 <col:257> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55f43bf0c008 <col:257> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55f43bf0c090 <col:275> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55f43bf0c078 <col:275> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55f43bf0c028 <col:275> '_Bool' lvalue Var 0x55f43bf07c30 'y$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55f43bf0c100 <col:293> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55f43bf0c0e8 <col:293> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55f43bf0c0c8 <col:293> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55f43bf0c170 <col:311, col:312> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55f43bf0c158 <col:312> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55f43bf0c138 <col:312> '_Bool' lvalue Var 0x55f43bf079d8 'y$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x55f43bf0c258 <col:329, col:336> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55f43bf0c1d8 <col:329, col:336> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55f43bf0c1a8 <col:336> 'int' 0
|   |                     `-ImplicitCastExpr 0x55f43bf0c270 <col:340, col:347> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55f43bf0c230 <col:340, col:347> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55f43bf0c200 <col:347> 'int' 0
|   |-BinaryOperator 0x55f43bf0c550 <line:741:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55f43bf0c4d8 <col:3> '_Bool' lvalue Var 0x55f43bf07010 '__unbuffered_p0_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55f43bf0c528 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55f43bf0c4f8 <col:45> 'int' 1
|   |-BinaryOperator 0x55f43bf0c5c8 <line:742:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x55f43bf0c570 <col:3> 'int *' lvalue Var 0x55f43bf07090 '__unbuffered_p0_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x55f43bf0c5b0 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x55f43bf0c590 <col:43> 'int' lvalue Var 0x55f43bf077d0 'y' 'int'
|   |-BinaryOperator 0x55f43bf0c640 <line:743:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55f43bf0c5e8 <col:3> 'int' lvalue Var 0x55f43bf069b8 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55f43bf0c628 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f43bf0c608 <col:25> 'int' lvalue Var 0x55f43bf077d0 'y' 'int'
|   |-BinaryOperator 0x55f43bf0c770 <line:744:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55f43bf0c660 <col:3> 'int' lvalue Var 0x55f43bf077d0 'y' 'int'
|   | `-ConditionalOperator 0x55f43bf0c740 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55f43bf0c6f8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55f43bf0c6e0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55f43bf0c680 <col:7> '_Bool' lvalue Var 0x55f43bf07868 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55f43bf0c710 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f43bf0c6a0 <col:25> 'int' lvalue Var 0x55f43bf078e8 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55f43bf0c728 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55f43bf0c6c0 <col:37> 'int' lvalue Var 0x55f43bf077d0 'y' 'int'
|   |-BinaryOperator 0x55f43bf0c808 <line:745:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55f43bf0c790 <col:3> '_Bool' lvalue Var 0x55f43bf07868 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55f43bf0c7e0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55f43bf0c7b0 <col:28> 'int' 0
|   |-CallExpr 0x55f43bf0c860 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0c848 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0c828 <col:3> 'void ()' Function 0x55f43bead570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f43bf0c8b8 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0c8a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0c880 <col:3> 'void ()' Function 0x55f43bead4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f43bf0c930 <line:748:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55f43bf0c8d8 <col:3> 'int' lvalue Var 0x55f43bf07380 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x55f43bf0c918 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f43bf0c8f8 <col:25> 'int' lvalue Var 0x55f43bf076b0 'x' 'int'
|   |-CallExpr 0x55f43bf0c988 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0c970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0c950 <col:3> 'void ()' Function 0x55f43bead570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f43bf0c9e0 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0c9c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0c9a8 <col:3> 'void ()' Function 0x55f43bead4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55f43bf0ca38 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0ca20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0ca00 <col:3> 'void ()' Function 0x55f43bead570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f43bf0ca90 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0ca78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0ca58 <col:3> 'void ()' Function 0x55f43bead4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f43bf0cb48 <line:753:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55f43bf0cab0 <col:3> 'int' lvalue Var 0x55f43bf06898 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55f43bf0cb28 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55f43bf0cb10 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f43bf0cad0 <col:22> 'int' lvalue Var 0x55f43bf06898 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55f43bf0caf0 <col:41> 'int' 1
|   |-CallExpr 0x55f43bf0cba0 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0cb88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0cb68 <col:3> 'void ()' Function 0x55f43bead570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55f43bf0cc48 <line:755:3, col:36>
|     `-CallExpr 0x55f43bf0cc28 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55f43bf0cc10 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55f43bf0cbc0 <col:10> 'void *(void)' Function 0x55f43beacfc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55f43bf0cdf8 prev 0x55f43bf06268 <line:757:1, line:768:1> line:757:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55f43bf0cd60 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55f43bf0d258 <line:758:1, line:768:1>
|   |-CallExpr 0x55f43bf0ced8 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0cec0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0cea0 <col:3> 'void ()' Function 0x55f43bead4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f43bf0cf38 <line:760:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55f43bf0cef8 <col:3> 'int' lvalue Var 0x55f43bf076b0 'x' 'int'
|   | `-IntegerLiteral 0x55f43bf0cf18 <col:7> 'int' 1
|   |-CallExpr 0x55f43bf0cfb8 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0cfa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0cf80 <col:3> 'void ()' Function 0x55f43bead570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f43bf0d010 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0cff8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0cfd8 <col:3> 'void ()' Function 0x55f43bead4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55f43bf0d068 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0d050 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0d030 <col:3> 'void ()' Function 0x55f43bead570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f43bf0d0c0 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0d0a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0d088 <col:3> 'void ()' Function 0x55f43bead4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f43bf0d178 <line:765:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55f43bf0d0e0 <col:3> 'int' lvalue Var 0x55f43bf06898 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55f43bf0d158 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55f43bf0d140 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f43bf0d100 <col:22> 'int' lvalue Var 0x55f43bf06898 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55f43bf0d120 <col:41> 'int' 1
|   |-CallExpr 0x55f43bf0d1d0 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0d1b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0d198 <col:3> 'void ()' Function 0x55f43bead570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55f43bf0d248 <line:767:3, col:36>
|     `-CallExpr 0x55f43bf0d228 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55f43bf0d210 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55f43bf0d1f0 <col:10> 'void *(void)' Function 0x55f43beacfc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55f43bf0d360 prev 0x55f43bf063c0 <line:769:1, line:788:1> line:769:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55f43bf0d2c8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55f43bf0e598 <line:770:1, line:788:1>
|   |-CallExpr 0x55f43bf0d440 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0d428 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0d408 <col:3> 'void ()' Function 0x55f43bead4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f43bf0d4b8 <line:772:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55f43bf0d460 <col:3> 'int' lvalue Var 0x55f43bf074a0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55f43bf0d4a0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f43bf0d480 <col:25> 'int' lvalue Var 0x55f43bf076b0 'x' 'int'
|   |-CallExpr 0x55f43bf0d510 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0d4f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0d4d8 <col:3> 'void ()' Function 0x55f43bead570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f43bf0d568 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0d550 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0d530 <col:3> 'void ()' Function 0x55f43bead4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f43bf0d5c8 <line:775:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55f43bf0d588 <col:3> 'int' lvalue Var 0x55f43bf077d0 'y' 'int'
|   | `-IntegerLiteral 0x55f43bf0d5a8 <col:7> 'int' 1
|   |-CallExpr 0x55f43bf0d620 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0d608 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0d5e8 <col:3> 'void ()' Function 0x55f43bead570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f43bf0d678 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0d660 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0d640 <col:3> 'void ()' Function 0x55f43bead4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f43bf0d960 <line:778:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55f43bf0d698 <col:3> 'int' lvalue Var 0x55f43bf077d0 'y' 'int'
|   | `-ConditionalOperator 0x55f43bf0d930 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55f43bf0d758 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55f43bf0d710 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55f43bf0d6f8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55f43bf0d6b8 <col:7> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55f43bf0d740 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55f43bf0d728 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55f43bf0d6d8 <col:25> '_Bool' lvalue Var 0x55f43bf07ac8 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55f43bf0d918 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f43bf0d778 <col:42> 'int' lvalue Var 0x55f43bf07f30 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55f43bf0d8f8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55f43bf0d8c8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55f43bf0d838 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55f43bf0d7f0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55f43bf0d7d8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55f43bf0d798 <col:55> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55f43bf0d820 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55f43bf0d808 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55f43bf0d7b8 <col:73> '_Bool' lvalue Var 0x55f43bf07d20 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55f43bf0d898 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f43bf0d858 <col:90> 'int' lvalue Var 0x55f43bf08028 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55f43bf0d8b0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f43bf0d878 <col:102> 'int' lvalue Var 0x55f43bf077d0 'y' 'int'
|   |-BinaryOperator 0x55f43bf0db68 <line:779:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f43bf0d980 <col:3> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f43bf0db50 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f43bf0db20 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f43bf0da40 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f43bf0d9f8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f43bf0d9e0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f43bf0d9a0 <col:20> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f43bf0da28 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f43bf0da10 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f43bf0d9c0 <col:38> '_Bool' lvalue Var 0x55f43bf07ac8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55f43bf0dad8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f43bf0da90 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f43bf0da60 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f43bf0db08 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f43bf0daf0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f43bf0dab8 <col:66> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f43bf0de50 <line:780:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f43bf0db88 <col:3> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f43bf0de38 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f43bf0de08 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f43bf0dd28 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f43bf0dc48 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f43bf0dc00 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f43bf0dbe8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f43bf0dba8 <col:20> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f43bf0dc30 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f43bf0dc18 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f43bf0dbc8 <col:38> '_Bool' lvalue Var 0x55f43bf07ac8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55f43bf0dd08 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f43bf0dcc0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f43bf0dca8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f43bf0dc68 <col:56> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f43bf0dcf0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f43bf0dcd8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f43bf0dc88 <col:74> '_Bool' lvalue Var 0x55f43bf07d20 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55f43bf0ddc0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f43bf0dd78 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f43bf0dd48 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f43bf0ddf0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f43bf0ddd8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f43bf0dda0 <col:102> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55f43bf0e068 <line:781:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f43bf0de70 <col:3> '_Bool' lvalue Var 0x55f43bf07ac8 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55f43bf0e050 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f43bf0e020 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f43bf0df30 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f43bf0dee8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f43bf0ded0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f43bf0de90 <col:20> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f43bf0df18 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f43bf0df00 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f43bf0deb0 <col:38> '_Bool' lvalue Var 0x55f43bf07ac8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55f43bf0dfd8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f43bf0df90 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f43bf0df50 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f43bf0e008 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f43bf0dff0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f43bf0dfb8 <col:66> '_Bool' lvalue Var 0x55f43bf07ac8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55f43bf0e350 <line:782:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f43bf0e088 <col:3> '_Bool' lvalue Var 0x55f43bf07d20 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55f43bf0e338 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f43bf0e308 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f43bf0e228 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f43bf0e148 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f43bf0e100 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f43bf0e0e8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f43bf0e0a8 <col:20> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f43bf0e130 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f43bf0e118 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f43bf0e0c8 <col:38> '_Bool' lvalue Var 0x55f43bf07ac8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55f43bf0e208 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f43bf0e1c0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f43bf0e1a8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f43bf0e168 <col:56> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f43bf0e1f0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f43bf0e1d8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f43bf0e188 <col:74> '_Bool' lvalue Var 0x55f43bf07d20 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55f43bf0e2c0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f43bf0e278 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f43bf0e248 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f43bf0e2f0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f43bf0e2d8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f43bf0e2a0 <col:102> '_Bool' lvalue Var 0x55f43bf07d20 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55f43bf0e3a8 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0e390 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0e370 <col:3> 'void ()' Function 0x55f43bead570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f43bf0e400 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0e3e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0e3c8 <col:3> 'void ()' Function 0x55f43bead4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f43bf0e4b8 <line:785:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55f43bf0e420 <col:3> 'int' lvalue Var 0x55f43bf06898 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55f43bf0e498 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55f43bf0e480 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f43bf0e440 <col:22> 'int' lvalue Var 0x55f43bf06898 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55f43bf0e460 <col:41> 'int' 1
|   |-CallExpr 0x55f43bf0e510 <line:786:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0e4f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0e4d8 <col:3> 'void ()' Function 0x55f43bead570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55f43bf0e588 <line:787:3, col:36>
|     `-CallExpr 0x55f43bf0e568 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55f43bf0e550 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55f43bf0e530 <col:10> 'void *(void)' Function 0x55f43beacfc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55f43bf0e6e0 prev 0x55f43bf06518 <line:789:1, line:805:1> line:789:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x55f43bf0e648 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55f43bf0f800 <line:790:1, line:805:1>
|   |-CallExpr 0x55f43bf0e7c0 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0e7a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0e788 <col:3> 'void ()' Function 0x55f43bead4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f43bf0e820 <line:792:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55f43bf0e7e0 <col:3> 'int' lvalue Var 0x55f43bf077d0 'y' 'int'
|   | `-IntegerLiteral 0x55f43bf0e800 <col:7> 'int' 2
|   |-CallExpr 0x55f43bf0e878 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0e860 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0e840 <col:3> 'void ()' Function 0x55f43bead570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f43bf0e8d0 <line:794:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0e8b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0e898 <col:3> 'void ()' Function 0x55f43bead4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f43bf0ebb8 <line:795:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55f43bf0e8f0 <col:3> 'int' lvalue Var 0x55f43bf077d0 'y' 'int'
|   | `-ConditionalOperator 0x55f43bf0eb88 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55f43bf0e9b0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55f43bf0e968 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55f43bf0e950 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55f43bf0e910 <col:7> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55f43bf0e998 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55f43bf0e980 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55f43bf0e930 <col:25> '_Bool' lvalue Var 0x55f43bf07b40 'y$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55f43bf0eb70 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f43bf0e9d0 <col:42> 'int' lvalue Var 0x55f43bf07f30 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55f43bf0eb50 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55f43bf0eb20 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55f43bf0ea90 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55f43bf0ea48 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55f43bf0ea30 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55f43bf0e9f0 <col:55> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55f43bf0ea78 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55f43bf0ea60 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55f43bf0ea10 <col:73> '_Bool' lvalue Var 0x55f43bf07d98 'y$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55f43bf0eaf0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f43bf0eab0 <col:90> 'int' lvalue Var 0x55f43bf08028 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55f43bf0eb08 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f43bf0ead0 <col:102> 'int' lvalue Var 0x55f43bf077d0 'y' 'int'
|   |-BinaryOperator 0x55f43bf0edc0 <line:796:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f43bf0ebd8 <col:3> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f43bf0eda8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f43bf0ed78 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f43bf0ec98 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f43bf0ec50 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f43bf0ec38 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f43bf0ebf8 <col:20> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f43bf0ec80 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f43bf0ec68 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f43bf0ec18 <col:38> '_Bool' lvalue Var 0x55f43bf07b40 'y$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55f43bf0ed30 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f43bf0ece8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f43bf0ecb8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f43bf0ed60 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f43bf0ed48 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f43bf0ed10 <col:66> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f43bf0f0c8 <line:797:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f43bf0ede0 <col:3> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f43bf0f0b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f43bf0f080 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f43bf0efa0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f43bf0eea0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f43bf0ee58 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f43bf0ee40 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f43bf0ee00 <col:20> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f43bf0ee88 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f43bf0ee70 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f43bf0ee20 <col:38> '_Bool' lvalue Var 0x55f43bf07b40 'y$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55f43bf0ef60 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f43bf0ef18 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f43bf0ef00 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f43bf0eec0 <col:56> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f43bf0ef48 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f43bf0ef30 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f43bf0eee0 <col:74> '_Bool' lvalue Var 0x55f43bf07d98 'y$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55f43bf0f038 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f43bf0eff0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f43bf0efc0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f43bf0f068 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f43bf0f050 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f43bf0f018 <col:102> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55f43bf0f2d0 <line:798:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f43bf0f0e8 <col:3> '_Bool' lvalue Var 0x55f43bf07b40 'y$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55f43bf0f2b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f43bf0f288 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f43bf0f1a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f43bf0f160 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f43bf0f148 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f43bf0f108 <col:20> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f43bf0f190 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f43bf0f178 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f43bf0f128 <col:38> '_Bool' lvalue Var 0x55f43bf07b40 'y$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55f43bf0f240 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f43bf0f1f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f43bf0f1c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f43bf0f270 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f43bf0f258 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f43bf0f220 <col:66> '_Bool' lvalue Var 0x55f43bf07b40 'y$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55f43bf0f5b8 <line:799:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f43bf0f2f0 <col:3> '_Bool' lvalue Var 0x55f43bf07d98 'y$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55f43bf0f5a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f43bf0f570 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f43bf0f490 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f43bf0f3b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f43bf0f368 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f43bf0f350 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f43bf0f310 <col:20> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f43bf0f398 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f43bf0f380 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f43bf0f330 <col:38> '_Bool' lvalue Var 0x55f43bf07b40 'y$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55f43bf0f470 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f43bf0f428 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f43bf0f410 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f43bf0f3d0 <col:56> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f43bf0f458 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f43bf0f440 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f43bf0f3f0 <col:74> '_Bool' lvalue Var 0x55f43bf07d98 'y$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55f43bf0f528 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f43bf0f4e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f43bf0f4b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f43bf0f558 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f43bf0f540 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f43bf0f508 <col:102> '_Bool' lvalue Var 0x55f43bf07d98 'y$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x55f43bf0f610 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0f5f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0f5d8 <col:3> 'void ()' Function 0x55f43bead570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f43bf0f668 <line:801:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0f650 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0f630 <col:3> 'void ()' Function 0x55f43bead4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f43bf0f720 <line:802:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55f43bf0f688 <col:3> 'int' lvalue Var 0x55f43bf06898 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55f43bf0f700 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55f43bf0f6e8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f43bf0f6a8 <col:22> 'int' lvalue Var 0x55f43bf06898 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55f43bf0f6c8 <col:41> 'int' 1
|   |-CallExpr 0x55f43bf0f778 <line:803:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f43bf0f760 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f43bf0f740 <col:3> 'void ()' Function 0x55f43bead570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55f43bf0f7f0 <line:804:3, col:36>
|     `-CallExpr 0x55f43bf0f7d0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55f43bf0f7b8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55f43bf0f798 <col:10> 'void *(void)' Function 0x55f43beacfc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55f43bf0f8a0 prev 0x55f43bf065e0 <line:806:1, line:808:1> line:806:6 fence 'void ()'
| `-CompoundStmt 0x55f43bf0f940 <line:807:1, line:808:1>
|-FunctionDecl 0x55f43bf0f970 prev 0x55f43bf066a0 <line:809:1, line:811:1> line:809:6 isync 'void ()'
| `-CompoundStmt 0x55f43bf0fa10 <line:810:1, line:811:1>
|-FunctionDecl 0x55f43bf0fa40 prev 0x55f43bf06760 <line:812:1, line:814:1> line:812:6 lwfence 'void ()'
| `-CompoundStmt 0x55f43bf0fae0 <line:813:1, line:814:1>
`-FunctionDecl 0x55f43bf0fb48 <line:815:1, line:856:1> line:815:5 main 'int ()'
  `-CompoundStmt 0x55f43bf15758 <line:816:1, line:856:1>
    |-DeclStmt 0x55f43bf0fc60 <line:817:3, col:18>
    | `-VarDecl 0x55f43bf0fbf8 <col:3, col:13> col:13 used t2227 'pthread_t':'unsigned long'
    |-CallExpr 0x55f43bf0fe68 <line:818:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55f43bf0fe50 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f43bf0fc78 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55f43beed9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55f43bf0fcb8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55f43bf0fc98 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55f43bf0fbf8 't2227' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55f43bf0fea8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55f43bf0fd30 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55f43bf0fd08 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55f43bf0fcd0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55f43bf0fec0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f43bf0fd50 <col:39> 'void *(void *)' Function 0x55f43bf08320 'P0' 'void *(void *)'
    | `-ParenExpr 0x55f43bf0fdd0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55f43bf0fda8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55f43bf0fd70 <col:52> 'int' 0
    |-DeclStmt 0x55f43bf0ff50 <line:819:3, col:18>
    | `-VarDecl 0x55f43bf0fee8 <col:3, col:13> col:13 used t2228 'pthread_t':'unsigned long'
    |-CallExpr 0x55f43bf10120 <line:820:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55f43bf10108 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f43bf0ff68 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55f43beed9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55f43bf0ffd0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55f43bf0ffb0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55f43bf0fee8 't2228' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55f43bf10160 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55f43bf10048 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55f43bf10020 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55f43bf0ffe8 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55f43bf10178 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f43bf10068 <col:39> 'void *(void *)' Function 0x55f43bf0cdf8 'P1' 'void *(void *)'
    | `-ParenExpr 0x55f43bf100e8 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55f43bf100c0 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55f43bf10088 <col:52> 'int' 0
    |-DeclStmt 0x55f43bf10208 <line:821:3, col:18>
    | `-VarDecl 0x55f43bf101a0 <col:3, col:13> col:13 used t2229 'pthread_t':'unsigned long'
    |-CallExpr 0x55f43bf103b0 <line:822:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55f43bf10398 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f43bf10220 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55f43beed9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55f43bf10260 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55f43bf10240 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55f43bf101a0 't2229' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55f43bf103f0 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55f43bf102d8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55f43bf102b0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55f43bf10278 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55f43bf10408 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f43bf102f8 <col:39> 'void *(void *)' Function 0x55f43bf0d360 'P2' 'void *(void *)'
    | `-ParenExpr 0x55f43bf10378 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55f43bf10350 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55f43bf10318 <col:52> 'int' 0
    |-DeclStmt 0x55f43bf10498 <line:823:3, col:18>
    | `-VarDecl 0x55f43bf10430 <col:3, col:13> col:13 used t2230 'pthread_t':'unsigned long'
    |-CallExpr 0x55f43bf10640 <line:824:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55f43bf10628 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f43bf104b0 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55f43beed9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55f43bf104f0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55f43bf104d0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55f43bf10430 't2230' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55f43bf10680 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55f43bf10568 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55f43bf10540 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55f43bf10508 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55f43bf10698 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f43bf10588 <col:39> 'void *(void *)' Function 0x55f43bf0e6e0 'P3' 'void *(void *)'
    | `-ParenExpr 0x55f43bf10608 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55f43bf105e0 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55f43bf105a8 <col:52> 'int' 0
    |-CallExpr 0x55f43bf106e8 <line:825:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55f43bf106d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f43bf106b0 <col:3> 'void ()' Function 0x55f43bead4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55f43bf107b8 <line:826:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55f43bf10708 <col:3> '_Bool' lvalue Var 0x55f43bf07538 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55f43bf107a0 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55f43bf10780 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55f43bf10768 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55f43bf10728 <col:21> 'int' lvalue Var 0x55f43bf06898 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55f43bf10748 <col:41> 'int' 4
    |-CallExpr 0x55f43bf10810 <line:827:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55f43bf107f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f43bf107d8 <col:3> 'void ()' Function 0x55f43bead570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55f43bf108b8 <line:828:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55f43bf108a0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f43bf10830 <col:3> 'void (int)' Function 0x55f43beace50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55f43bf108f8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55f43bf108e0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55f43bf10850 <col:21> '_Bool' lvalue Var 0x55f43bf07538 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55f43bf10948 <line:829:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55f43bf10930 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f43bf10910 <col:3> 'void ()' Function 0x55f43bead4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55f43bf10c30 <line:830:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55f43bf10968 <col:3> 'int' lvalue Var 0x55f43bf077d0 'y' 'int'
    | `-ConditionalOperator 0x55f43bf10c00 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55f43bf10a28 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55f43bf109e0 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55f43bf109c8 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55f43bf10988 <col:7> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55f43bf10a10 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55f43bf109f8 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55f43bf109a8 <col:25> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55f43bf10be8 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f43bf10a48 <col:42> 'int' lvalue Var 0x55f43bf07f30 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55f43bf10bc8 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55f43bf10b98 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55f43bf10b08 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55f43bf10ac0 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55f43bf10aa8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55f43bf10a68 <col:55> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55f43bf10af0 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55f43bf10ad8 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55f43bf10a88 <col:73> '_Bool' lvalue Var 0x55f43bf07bb8 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55f43bf10b68 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55f43bf10b28 <col:90> 'int' lvalue Var 0x55f43bf08028 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55f43bf10b80 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55f43bf10b48 <col:102> 'int' lvalue Var 0x55f43bf077d0 'y' 'int'
    |-BinaryOperator 0x55f43bf10e38 <line:831:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55f43bf10c50 <col:3> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55f43bf10e20 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f43bf10df0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55f43bf10d10 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55f43bf10cc8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55f43bf10cb0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55f43bf10c70 <col:20> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55f43bf10cf8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55f43bf10ce0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55f43bf10c90 <col:38> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f43bf10da8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f43bf10d60 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f43bf10d30 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55f43bf10dd8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f43bf10dc0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f43bf10d88 <col:66> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55f43bf12148 <line:832:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55f43bf10e58 <col:3> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55f43bf12130 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f43bf12100 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55f43bf12020 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55f43bf10f18 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55f43bf10ed0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55f43bf10eb8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55f43bf10e78 <col:20> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55f43bf10f00 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55f43bf10ee8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55f43bf10e98 <col:38> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55f43bf12000 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55f43bf10f90 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55f43bf10f78 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55f43bf10f38 <col:56> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55f43bf11fe8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55f43bf11fd0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55f43bf10f58 <col:74> '_Bool' lvalue Var 0x55f43bf07bb8 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f43bf120b8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f43bf12070 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f43bf12040 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55f43bf120e8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f43bf120d0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f43bf12098 <col:102> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55f43bf12350 <line:833:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55f43bf12168 <col:3> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55f43bf12338 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f43bf12308 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55f43bf12228 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55f43bf121e0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55f43bf121c8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55f43bf12188 <col:20> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55f43bf12210 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55f43bf121f8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55f43bf121a8 <col:38> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f43bf122c0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f43bf12278 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f43bf12248 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55f43bf122f0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f43bf122d8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f43bf122a0 <col:66> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55f43bf12638 <line:834:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55f43bf12370 <col:3> '_Bool' lvalue Var 0x55f43bf07bb8 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55f43bf12620 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f43bf125f0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55f43bf12510 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55f43bf12430 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55f43bf123e8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55f43bf123d0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55f43bf12390 <col:20> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55f43bf12418 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55f43bf12400 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55f43bf123b0 <col:38> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55f43bf124f0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55f43bf124a8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55f43bf12490 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55f43bf12450 <col:56> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55f43bf124d8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55f43bf124c0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55f43bf12470 <col:74> '_Bool' lvalue Var 0x55f43bf07bb8 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f43bf125a8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f43bf12560 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f43bf12530 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55f43bf125d8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f43bf125c0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f43bf12588 <col:102> '_Bool' lvalue Var 0x55f43bf07bb8 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55f43bf12690 <line:835:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55f43bf12678 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f43bf12658 <col:3> 'void ()' Function 0x55f43bead570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55f43bf126e8 <line:836:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55f43bf126d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f43bf126b0 <col:3> 'void ()' Function 0x55f43bead4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55f43bf12780 <line:837:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55f43bf12708 <col:3> '_Bool' lvalue Var 0x55f43bf08118 'weak$$choice0' '_Bool'
    | `-CallExpr 0x55f43bf12760 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55f43bf12748 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55f43bf12728 <col:19> '_Bool (void)' Function 0x55f43beacc80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55f43bf12818 <line:838:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55f43bf127a0 <col:3> '_Bool' lvalue Var 0x55f43bf08208 'weak$$choice2' '_Bool'
    | `-CallExpr 0x55f43bf127f8 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55f43bf127e0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55f43bf127c0 <col:19> '_Bool (void)' Function 0x55f43beacc80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55f43bf12890 <line:839:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x55f43bf12838 <col:3> '_Bool' lvalue Var 0x55f43bf07868 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x55f43bf12878 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x55f43bf12858 <col:21> '_Bool' lvalue Var 0x55f43bf08208 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x55f43bf12908 <line:840:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55f43bf128b0 <col:3> 'int' lvalue Var 0x55f43bf078e8 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x55f43bf128f0 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55f43bf128d0 <col:15> 'int' lvalue Var 0x55f43bf077d0 'y' 'int'
    |-BinaryOperator 0x55f43bf12d40 <line:841:3, col:162> 'int' '='
    | |-DeclRefExpr 0x55f43bf12928 <col:3> 'int' lvalue Var 0x55f43bf077d0 'y' 'int'
    | `-ConditionalOperator 0x55f43bf12d10 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x55f43bf12b38 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x55f43bf12a58 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x55f43bf12980 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x55f43bf12968 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x55f43bf12948 <col:8> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x55f43bf12a38 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x55f43bf129d0 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x55f43bf129b8 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x55f43bf12998 <col:27> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x55f43bf12a20 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x55f43bf12a08 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x55f43bf129e8 <col:46> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x55f43bf12b18 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x55f43bf12ab0 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x55f43bf12a98 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55f43bf12a78 <col:65> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x55f43bf12b00 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x55f43bf12ae8 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x55f43bf12ac8 <col:84> '_Bool' lvalue Var 0x55f43bf07bb8 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55f43bf12cf8 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f43bf12b58 <col:101> 'int' lvalue Var 0x55f43bf077d0 'y' 'int'
    |   `-ParenExpr 0x55f43bf12cd8 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x55f43bf12ca8 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x55f43bf12c18 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55f43bf12bd0 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55f43bf12bb8 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55f43bf12b78 <col:106> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55f43bf12c00 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55f43bf12be8 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55f43bf12b98 <col:124> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55f43bf12c78 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55f43bf12c38 <col:141> 'int' lvalue Var 0x55f43bf07f30 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x55f43bf12c90 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55f43bf12c58 <col:153> 'int' lvalue Var 0x55f43bf08028 'y$w_buff1' 'int'
    |-BinaryOperator 0x55f43bf13260 <line:842:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55f43bf12d60 <col:3> 'int' lvalue Var 0x55f43bf07f30 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x55f43bf13230 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55f43bf13200 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55f43bf131e8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55f43bf12d80 <col:15> '_Bool' lvalue Var 0x55f43bf08208 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55f43bf13218 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f43bf12da0 <col:31> 'int' lvalue Var 0x55f43bf07f30 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55f43bf131c8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55f43bf13198 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55f43bf12fb0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55f43bf12ed0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55f43bf12df8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55f43bf12de0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55f43bf12dc0 <col:45> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55f43bf12eb0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55f43bf12e48 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55f43bf12e30 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55f43bf12e10 <col:64> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55f43bf12e98 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55f43bf12e80 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55f43bf12e60 <col:83> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55f43bf12f90 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55f43bf12f28 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55f43bf12f10 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55f43bf12ef0 <col:102> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55f43bf12f78 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55f43bf12f60 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55f43bf12f40 <col:121> '_Bool' lvalue Var 0x55f43bf07bb8 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55f43bf13180 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55f43bf12fe0 <col:138> 'int' lvalue Var 0x55f43bf07f30 'y$w_buff0' 'int'
    |       `-ParenExpr 0x55f43bf13160 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55f43bf13130 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55f43bf130a0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55f43bf13058 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55f43bf13040 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55f43bf13000 <col:151> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55f43bf13088 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55f43bf13070 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55f43bf13020 <col:169> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55f43bf13100 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55f43bf130c0 <col:186> 'int' lvalue Var 0x55f43bf07f30 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x55f43bf13118 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55f43bf130e0 <col:198> 'int' lvalue Var 0x55f43bf07f30 'y$w_buff0' 'int'
    |-BinaryOperator 0x55f43bf13770 <line:843:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55f43bf13280 <col:3> 'int' lvalue Var 0x55f43bf08028 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x55f43bf13740 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55f43bf13710 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55f43bf136f8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55f43bf132a0 <col:15> '_Bool' lvalue Var 0x55f43bf08208 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55f43bf13728 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f43bf132c0 <col:31> 'int' lvalue Var 0x55f43bf08028 'y$w_buff1' 'int'
    |   `-ParenExpr 0x55f43bf136d8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55f43bf136a8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55f43bf134d0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55f43bf133f0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55f43bf13318 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55f43bf13300 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55f43bf132e0 <col:45> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55f43bf133d0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55f43bf13368 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55f43bf13350 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55f43bf13330 <col:64> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55f43bf133b8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55f43bf133a0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55f43bf13380 <col:83> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55f43bf134b0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55f43bf13448 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55f43bf13430 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55f43bf13410 <col:102> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55f43bf13498 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55f43bf13480 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55f43bf13460 <col:121> '_Bool' lvalue Var 0x55f43bf07bb8 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55f43bf13690 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55f43bf134f0 <col:138> 'int' lvalue Var 0x55f43bf08028 'y$w_buff1' 'int'
    |       `-ParenExpr 0x55f43bf13670 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55f43bf13640 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55f43bf135b0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55f43bf13568 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55f43bf13550 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55f43bf13510 <col:151> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55f43bf13598 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55f43bf13580 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55f43bf13530 <col:169> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55f43bf13610 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55f43bf135d0 <col:186> 'int' lvalue Var 0x55f43bf08028 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x55f43bf13628 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55f43bf135f0 <col:198> 'int' lvalue Var 0x55f43bf08028 'y$w_buff1' 'int'
    |-BinaryOperator 0x55f43bf13d18 <line:844:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55f43bf13790 <col:3> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55f43bf13d00 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f43bf13cd0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55f43bf13c88 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f43bf13c70 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f43bf137b0 <col:20> '_Bool' lvalue Var 0x55f43bf08208 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55f43bf13cb8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f43bf13ca0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f43bf137d0 <col:36> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x55f43bf13c50 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55f43bf13c20 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55f43bf139e0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55f43bf13900 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55f43bf13828 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55f43bf13810 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55f43bf137f0 <col:55> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55f43bf138e0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55f43bf13878 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55f43bf13860 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55f43bf13840 <col:74> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55f43bf138c8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55f43bf138b0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55f43bf13890 <col:93> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55f43bf139c0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55f43bf13958 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55f43bf13940 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55f43bf13920 <col:112> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55f43bf139a8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55f43bf13990 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55f43bf13970 <col:131> '_Bool' lvalue Var 0x55f43bf07bb8 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55f43bf13c08 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55f43bf13bf0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55f43bf13a00 <col:148> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x55f43bf13bd0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55f43bf13ba0 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55f43bf13ac0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55f43bf13a78 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55f43bf13a60 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55f43bf13a20 <col:166> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55f43bf13aa8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55f43bf13a90 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55f43bf13a40 <col:184> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55f43bf13b58 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55f43bf13b10 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55f43bf13ae0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55f43bf13b88 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55f43bf13b70 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55f43bf13b38 <col:212> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55f43bf14308 <line:845:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55f43bf13d38 <col:3> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55f43bf142f0 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f43bf142c0 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55f43bf14278 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f43bf14260 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f43bf13d58 <col:20> '_Bool' lvalue Var 0x55f43bf08208 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55f43bf142a8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f43bf14290 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f43bf13d78 <col:36> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x55f43bf14240 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55f43bf14210 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55f43bf13f88 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55f43bf13ea8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55f43bf13dd0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55f43bf13db8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55f43bf13d98 <col:55> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55f43bf13e88 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55f43bf13e20 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55f43bf13e08 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55f43bf13de8 <col:74> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55f43bf13e70 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55f43bf13e58 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55f43bf13e38 <col:93> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55f43bf13f68 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55f43bf13f00 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55f43bf13ee8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55f43bf13ec8 <col:112> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55f43bf13f50 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55f43bf13f38 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55f43bf13f18 <col:131> '_Bool' lvalue Var 0x55f43bf07bb8 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55f43bf141f8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55f43bf141e0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55f43bf13fa8 <col:148> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x55f43bf141c0 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55f43bf14190 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55f43bf14090 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55f43bf14048 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55f43bf14030 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55f43bf13ff0 <col:166> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55f43bf14078 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55f43bf14060 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55f43bf14010 <col:184> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55f43bf14160 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55f43bf140e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55f43bf140b0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55f43bf14178 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55f43bf14138 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55f43bf14108 <col:219> 'int' 0
    |-BinaryOperator 0x55f43bf148b0 <line:846:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55f43bf14328 <col:3> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55f43bf14898 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f43bf14868 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55f43bf14820 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f43bf14808 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f43bf14348 <col:20> '_Bool' lvalue Var 0x55f43bf08208 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55f43bf14850 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f43bf14838 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f43bf14368 <col:36> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x55f43bf147e8 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55f43bf147b8 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55f43bf14578 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55f43bf14498 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55f43bf143c0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55f43bf143a8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55f43bf14388 <col:55> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55f43bf14478 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55f43bf14410 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55f43bf143f8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55f43bf143d8 <col:74> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55f43bf14460 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55f43bf14448 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55f43bf14428 <col:93> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55f43bf14558 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55f43bf144f0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55f43bf144d8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55f43bf144b8 <col:112> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55f43bf14540 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55f43bf14528 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55f43bf14508 <col:131> '_Bool' lvalue Var 0x55f43bf07bb8 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55f43bf147a0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55f43bf14788 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55f43bf14598 <col:148> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x55f43bf14768 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55f43bf14738 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55f43bf14658 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55f43bf14610 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55f43bf145f8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55f43bf145b8 <col:166> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55f43bf14640 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55f43bf14628 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55f43bf145d8 <col:184> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55f43bf146f0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55f43bf146a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55f43bf14678 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55f43bf14720 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55f43bf14708 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55f43bf146d0 <col:212> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55f43bf14e78 <line:847:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55f43bf148d0 <col:3> '_Bool' lvalue Var 0x55f43bf07bb8 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55f43bf14e60 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f43bf14e30 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55f43bf14de8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f43bf14dd0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f43bf148f0 <col:20> '_Bool' lvalue Var 0x55f43bf08208 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55f43bf14e18 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f43bf14e00 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f43bf14910 <col:36> '_Bool' lvalue Var 0x55f43bf07bb8 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x55f43bf14db0 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55f43bf14d80 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55f43bf14b20 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55f43bf14a40 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55f43bf14968 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55f43bf14950 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55f43bf14930 <col:55> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55f43bf14a20 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55f43bf149b8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55f43bf149a0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55f43bf14980 <col:74> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55f43bf14a08 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55f43bf149f0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55f43bf149d0 <col:93> '_Bool' lvalue Var 0x55f43bf080a0 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55f43bf14b00 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55f43bf14a98 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55f43bf14a80 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55f43bf14a60 <col:112> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55f43bf14ae8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55f43bf14ad0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55f43bf14ab0 <col:131> '_Bool' lvalue Var 0x55f43bf07bb8 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55f43bf14d68 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55f43bf14d50 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55f43bf14b40 <col:148> '_Bool' lvalue Var 0x55f43bf07bb8 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x55f43bf14d30 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55f43bf14d00 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55f43bf14c00 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55f43bf14bb8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55f43bf14ba0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55f43bf14b60 <col:166> '_Bool' lvalue Var 0x55f43bf07fa8 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55f43bf14be8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55f43bf14bd0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55f43bf14b80 <col:184> '_Bool' lvalue Var 0x55f43bf07960 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55f43bf14cd0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55f43bf14c50 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55f43bf14c20 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55f43bf14ce8 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55f43bf14ca8 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55f43bf14c78 <col:219> 'int' 0
    |-BinaryOperator 0x55f43bf14f10 <line:848:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55f43bf14e98 <col:3> '_Bool' lvalue Var 0x55f43bf08190 'weak$$choice1' '_Bool'
    | `-CallExpr 0x55f43bf14ef0 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55f43bf14ed8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55f43bf14eb8 <col:19> '_Bool (void)' Function 0x55f43beacc80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55f43bf15168 <line:849:3, col:140> 'int' '='
    | |-DeclRefExpr 0x55f43bf14f30 <col:3> 'int' lvalue Var 0x55f43bf069b8 '__unbuffered_p0_EAX' 'int'
    | `-ConditionalOperator 0x55f43bf15138 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x55f43bf15108 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55f43bf150f0 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55f43bf14f50 <col:25> '_Bool' lvalue Var 0x55f43bf07010 '__unbuffered_p0_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x55f43bf150b0 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x55f43bf15080 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x55f43bf15038 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x55f43bf15020 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55f43bf14f70 <col:61> '_Bool' lvalue Var 0x55f43bf08190 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x55f43bf15050 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x55f43bf14fc8 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x55f43bf14fb0 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x55f43bf14f90 <col:78> 'int *' lvalue Var 0x55f43bf07090 '__unbuffered_p0_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x55f43bf15068 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55f43bf15000 <col:117> 'int' lvalue Var 0x55f43bf069b8 '__unbuffered_p0_EAX' 'int'
    |   `-ImplicitCastExpr 0x55f43bf15120 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55f43bf150d0 <col:140> 'int' lvalue Var 0x55f43bf069b8 '__unbuffered_p0_EAX' 'int'
    |-BinaryOperator 0x55f43bf15438 <line:850:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x55f43bf15188 <col:3> '_Bool' lvalue Var 0x55f43bf075b0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55f43bf15420 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55f43bf15408 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55f43bf153e8 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x55f43bf153c8 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x55f43bf15330 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x55f43bf15298 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x55f43bf15200 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55f43bf151e8 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55f43bf151a8 <col:23> 'int' lvalue Var 0x55f43bf077d0 'y' 'int'
    |         | | | `-IntegerLiteral 0x55f43bf151c8 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x55f43bf15278 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55f43bf15260 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55f43bf15220 <col:33> 'int' lvalue Var 0x55f43bf069b8 '__unbuffered_p0_EAX' 'int'
    |         | |   `-IntegerLiteral 0x55f43bf15240 <col:56> 'int' 2
    |         | `-BinaryOperator 0x55f43bf15310 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55f43bf152f8 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55f43bf152b8 <col:61> 'int' lvalue Var 0x55f43bf07380 '__unbuffered_p0_EBX' 'int'
    |         |   `-IntegerLiteral 0x55f43bf152d8 <col:84> 'int' 0
    |         `-BinaryOperator 0x55f43bf153a8 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x55f43bf15390 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55f43bf15350 <col:89> 'int' lvalue Var 0x55f43bf074a0 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x55f43bf15370 <col:112> 'int' 1
    |-BinaryOperator 0x55f43bf15568 <line:851:3, col:37> 'int' '='
    | |-DeclRefExpr 0x55f43bf15458 <col:3> 'int' lvalue Var 0x55f43bf077d0 'y' 'int'
    | `-ConditionalOperator 0x55f43bf15538 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x55f43bf154f0 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55f43bf154d8 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55f43bf15478 <col:7> '_Bool' lvalue Var 0x55f43bf07868 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x55f43bf15508 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f43bf15498 <col:25> 'int' lvalue Var 0x55f43bf078e8 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x55f43bf15520 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55f43bf154b8 <col:37> 'int' lvalue Var 0x55f43bf077d0 'y' 'int'
    |-BinaryOperator 0x55f43bf15600 <line:852:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x55f43bf15588 <col:3> '_Bool' lvalue Var 0x55f43bf07868 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x55f43bf155d8 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x55f43bf155a8 <col:28> 'int' 0
    |-CallExpr 0x55f43bf15658 <line:853:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55f43bf15640 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f43bf15620 <col:3> 'void ()' Function 0x55f43bead570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55f43bf156d0 <line:854:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55f43bf156b8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f43bf15678 <col:3> 'void (int)' Function 0x55f43bead238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55f43bf15710 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55f43bf156f8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55f43bf15698 <col:21> '_Bool' lvalue Var 0x55f43bf075b0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55f43bf15748 <line:855:3, col:10>
      `-IntegerLiteral 0x55f43bf15728 <col:10> 'int' 0
