TranslationUnitDecl 0x558e53e4a4d8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x558e53e4ad98 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x558e53e4aa70 '__int128'
|-TypedefDecl 0x558e53e4ae08 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x558e53e4aa90 'unsigned __int128'
|-TypedefDecl 0x558e53e4b110 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x558e53e4aee0 'struct __NSConstantString_tag'
|   `-Record 0x558e53e4ae60 '__NSConstantString_tag'
|-TypedefDecl 0x558e53e4b1b8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x558e53e4b170 'char *'
|   `-BuiltinType 0x558e53e4a570 'char'
|-TypedefDecl 0x558e53e8a400 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x558e53e4b450 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x558e53e4b290 'struct __va_list_tag'
|     `-Record 0x558e53e4b210 '__va_list_tag'
|-FunctionDecl 0x558e53e8a4e0 <ldv-regression/test24_false-unreach-call.c:1:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x558e53e8a628 <line:2:1, col:34> col:12 used __VERIFIER_nondet_int 'int ()' extern
|-RecordDecl 0x558e53e8a6c8 <line:4:1, line:6:1> line:4:8 struct dummy definition
| |-FieldDecl 0x558e53e8a790 <line:5:3, col:7> col:7 referenced a 'int'
| `-FieldDecl 0x558e53e8a7f8 <col:3, col:10> col:10 referenced b 'int'
|-FunctionDecl 0x558e53e8aab8 <line:8:1, line:11:1> line:8:5 used check 'int (struct dummy *, int)'
| |-ParmVarDecl 0x558e53e8a918 <col:11, col:25> col:25 used ad1 'struct dummy *'
| |-ParmVarDecl 0x558e53e8a998 <col:30, col:34> col:34 used b 'int'
| `-CompoundStmt 0x558e53e8aca8 <line:9:1, line:11:1>
|   `-ReturnStmt 0x558e53e8ac98 <line:10:3, col:22>
|     `-BinaryOperator 0x558e53e8ac78 <col:10, col:22> 'int' '=='
|       |-ImplicitCastExpr 0x558e53e8ac48 <col:10, col:17> 'int' <LValueToRValue>
|       | `-MemberExpr 0x558e53e8abf8 <col:10, col:17> 'int' lvalue .a 0x558e53e8a790
|       |   `-ArraySubscriptExpr 0x558e53e8abd8 <col:10, col:15> 'struct dummy':'struct dummy' lvalue
|       |     |-ImplicitCastExpr 0x558e53e8aba8 <col:10> 'struct dummy *' <LValueToRValue>
|       |     | `-DeclRefExpr 0x558e53e8ab68 <col:10> 'struct dummy *' lvalue ParmVar 0x558e53e8a918 'ad1' 'struct dummy *'
|       |     `-ImplicitCastExpr 0x558e53e8abc0 <col:14> 'int' <LValueToRValue>
|       |       `-DeclRefExpr 0x558e53e8ab88 <col:14> 'int' lvalue ParmVar 0x558e53e8a998 'b' 'int'
|       `-ImplicitCastExpr 0x558e53e8ac60 <col:22> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x558e53e8ac28 <col:22> 'int' lvalue ParmVar 0x558e53e8a998 'b' 'int'
`-FunctionDecl 0x558e53e8ace8 <line:13:1, line:39:1> line:13:5 main 'int ()'
  `-CompoundStmt 0x558e53eb01f0 <line:14:1, line:39:1>
    |-DeclStmt 0x558e53e8afe0 <line:15:3, col:29>
    | |-VarDecl 0x558e53e8aed0 <col:3, col:22> col:16 used ad1 'struct dummy [20]'
    | `-VarDecl 0x558e53e8af60 <col:3, col:26> col:26 used ad2 'struct dummy *'
    |-DeclStmt 0x558e53e8b1d0 <line:16:3, col:16>
    | |-VarDecl 0x558e53e8b010 <col:3, col:7> col:7 used i 'int'
    | |-VarDecl 0x558e53e8b090 <col:3, col:10> col:10 used j 'int'
    | `-VarDecl 0x558e53e8b148 <col:3, col:14> col:14 used pa 'int *'
    |-ForStmt 0x558e53eaf7a0 <line:17:3, line:20:3>
    | |-BinaryOperator 0x558e53e8b228 <line:17:7, col:9> 'int' '='
    | | |-DeclRefExpr 0x558e53e8b1e8 <col:7> 'int' lvalue Var 0x558e53e8b090 'j' 'int'
    | | `-IntegerLiteral 0x558e53e8b208 <col:9> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x558e53e8b2a0 <col:12, col:14> 'int' '<'
    | | |-ImplicitCastExpr 0x558e53e8b288 <col:12> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x558e53e8b248 <col:12> 'int' lvalue Var 0x558e53e8b090 'j' 'int'
    | | `-IntegerLiteral 0x558e53e8b268 <col:14> 'int' 20
    | |-UnaryOperator 0x558e53e8b2e0 <col:18, col:19> 'int' postfix '++'
    | | `-DeclRefExpr 0x558e53e8b2c0 <col:18> 'int' lvalue Var 0x558e53e8b090 'j' 'int'
    | `-CompoundStmt 0x558e53eaf780 <col:23, line:20:3>
    |   |-BinaryOperator 0x558e53eaf628 <line:18:5, col:38> 'int' '='
    |   | |-MemberExpr 0x558e53e8b388 <col:5, col:12> 'int' lvalue .a 0x558e53e8a790
    |   | | `-ArraySubscriptExpr 0x558e53e8b368 <col:5, col:10> 'struct dummy':'struct dummy' lvalue
    |   | |   |-ImplicitCastExpr 0x558e53e8b338 <col:5> 'struct dummy *' <ArrayToPointerDecay>
    |   | |   | `-DeclRefExpr 0x558e53e8b2f8 <col:5> 'struct dummy [20]' lvalue Var 0x558e53e8aed0 'ad1' 'struct dummy [20]'
    |   | |   `-ImplicitCastExpr 0x558e53e8b350 <col:9> 'int' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x558e53e8b318 <col:9> 'int' lvalue Var 0x558e53e8b090 'j' 'int'
    |   | `-CallExpr 0x558e53eaf608 <col:16, col:38> 'int'
    |   |   `-ImplicitCastExpr 0x558e53eaf5f0 <col:16> 'int (*)()' <FunctionToPointerDecay>
    |   |     `-DeclRefExpr 0x558e53e8b3b8 <col:16> 'int ()' Function 0x558e53e8a628 '__VERIFIER_nondet_int' 'int ()'
    |   `-BinaryOperator 0x558e53eaf760 <line:19:5, col:38> 'int' '='
    |     |-MemberExpr 0x558e53eaf6d8 <col:5, col:12> 'int' lvalue .b 0x558e53e8a7f8
    |     | `-ArraySubscriptExpr 0x558e53eaf6b8 <col:5, col:10> 'struct dummy':'struct dummy' lvalue
    |     |   |-ImplicitCastExpr 0x558e53eaf688 <col:5> 'struct dummy *' <ArrayToPointerDecay>
    |     |   | `-DeclRefExpr 0x558e53eaf648 <col:5> 'struct dummy [20]' lvalue Var 0x558e53e8aed0 'ad1' 'struct dummy [20]'
    |     |   `-ImplicitCastExpr 0x558e53eaf6a0 <col:9> 'int' <LValueToRValue>
    |     |     `-DeclRefExpr 0x558e53eaf668 <col:9> 'int' lvalue Var 0x558e53e8b090 'j' 'int'
    |     `-CallExpr 0x558e53eaf740 <col:16, col:38> 'int'
    |       `-ImplicitCastExpr 0x558e53eaf728 <col:16> 'int (*)()' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0x558e53eaf708 <col:16> 'int ()' Function 0x558e53e8a628 '__VERIFIER_nondet_int' 'int ()'
    |-BinaryOperator 0x558e53eaf850 <line:21:3, col:29> 'int' '='
    | |-DeclRefExpr 0x558e53eaf7d8 <col:3> 'int' lvalue Var 0x558e53e8b010 'i' 'int'
    | `-CallExpr 0x558e53eaf830 <col:7, col:29> 'int'
    |   `-ImplicitCastExpr 0x558e53eaf818 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x558e53eaf7f8 <col:7> 'int ()' Function 0x558e53e8a628 '__VERIFIER_nondet_int' 'int ()'
    |-IfStmt 0x558e53eb00d8 <line:22:3, line:33:3>
    | |-BinaryOperator 0x558e53eaf960 <line:22:7, col:21> 'int' '&&'
    | | |-BinaryOperator 0x558e53eaf8c8 <col:7, col:12> 'int' '>='
    | | | |-ImplicitCastExpr 0x558e53eaf8b0 <col:7> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x558e53eaf870 <col:7> 'int' lvalue Var 0x558e53e8b010 'i' 'int'
    | | | `-IntegerLiteral 0x558e53eaf890 <col:12> 'int' 0
    | | `-BinaryOperator 0x558e53eaf940 <col:17, col:21> 'int' '<'
    | |   |-ImplicitCastExpr 0x558e53eaf928 <col:17> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x558e53eaf8e8 <col:17> 'int' lvalue Var 0x558e53e8b010 'i' 'int'
    | |   `-IntegerLiteral 0x558e53eaf908 <col:21> 'int' 10
    | `-CompoundStmt 0x558e53eb0098 <col:25, line:33:3>
    |   |-BinaryOperator 0x558e53eaf9d8 <line:23:5, col:11> 'struct dummy *' '='
    |   | |-DeclRefExpr 0x558e53eaf980 <col:5> 'struct dummy *' lvalue Var 0x558e53e8af60 'ad2' 'struct dummy *'
    |   | `-ImplicitCastExpr 0x558e53eaf9c0 <col:11> 'struct dummy *' <ArrayToPointerDecay>
    |   |   `-DeclRefExpr 0x558e53eaf9a0 <col:11> 'struct dummy [20]' lvalue Var 0x558e53e8aed0 'ad1' 'struct dummy [20]'
    |   |-BinaryOperator 0x558e53eafaf0 <line:24:5, col:16> 'int' '='
    |   | |-MemberExpr 0x558e53eafa88 <col:5, col:12> 'int' lvalue .a 0x558e53e8a790
    |   | | `-ArraySubscriptExpr 0x558e53eafa68 <col:5, col:10> 'struct dummy':'struct dummy' lvalue
    |   | |   |-ImplicitCastExpr 0x558e53eafa38 <col:5> 'struct dummy *' <ArrayToPointerDecay>
    |   | |   | `-DeclRefExpr 0x558e53eaf9f8 <col:5> 'struct dummy [20]' lvalue Var 0x558e53e8aed0 'ad1' 'struct dummy [20]'
    |   | |   `-ImplicitCastExpr 0x558e53eafa50 <col:9> 'int' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x558e53eafa18 <col:9> 'int' lvalue Var 0x558e53e8b010 'i' 'int'
    |   | `-ImplicitCastExpr 0x558e53eafad8 <col:16> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x558e53eafab8 <col:16> 'int' lvalue Var 0x558e53e8b010 'i' 'int'
    |   |-BinaryOperator 0x558e53eafc08 <line:25:5, col:18> 'int *' '='
    |   | |-DeclRefExpr 0x558e53eafb10 <col:5> 'int *' lvalue Var 0x558e53e8b148 'pa' 'int *'
    |   | `-UnaryOperator 0x558e53eafbf0 <col:10, col:18> 'int *' prefix '&' cannot overflow
    |   |   `-MemberExpr 0x558e53eafbc0 <col:11, col:18> 'int' lvalue .a 0x558e53e8a790
    |   |     `-ArraySubscriptExpr 0x558e53eafba0 <col:11, col:16> 'struct dummy':'struct dummy' lvalue
    |   |       |-ImplicitCastExpr 0x558e53eafb70 <col:11> 'struct dummy *' <ArrayToPointerDecay>
    |   |       | `-DeclRefExpr 0x558e53eafb30 <col:11> 'struct dummy [20]' lvalue Var 0x558e53e8aed0 'ad1' 'struct dummy [20]'
    |   |       `-ImplicitCastExpr 0x558e53eafb88 <col:15> 'int' <LValueToRValue>
    |   |         `-DeclRefExpr 0x558e53eafb50 <col:15> 'int' lvalue Var 0x558e53e8b010 'i' 'int'
    |   |-BinaryOperator 0x558e53eafd60 <line:26:5, col:21> 'int' '='
    |   | |-DeclRefExpr 0x558e53eafc28 <col:5> 'int' lvalue Var 0x558e53e8b010 'i' 'int'
    |   | `-BinaryOperator 0x558e53eafd40 <col:10, col:21> 'int' '+'
    |   |   |-ImplicitCastExpr 0x558e53eafd28 <col:10, col:17> 'int' <LValueToRValue>
    |   |   | `-MemberExpr 0x558e53eafcd8 <col:10, col:17> 'int' lvalue .a 0x558e53e8a790
    |   |   |   `-ArraySubscriptExpr 0x558e53eafcb8 <col:10, col:15> 'struct dummy':'struct dummy' lvalue
    |   |   |     |-ImplicitCastExpr 0x558e53eafc88 <col:10> 'struct dummy *' <LValueToRValue>
    |   |   |     | `-DeclRefExpr 0x558e53eafc48 <col:10> 'struct dummy *' lvalue Var 0x558e53e8af60 'ad2' 'struct dummy *'
    |   |   |     `-ImplicitCastExpr 0x558e53eafca0 <col:14> 'int' <LValueToRValue>
    |   |   |       `-DeclRefExpr 0x558e53eafc68 <col:14> 'int' lvalue Var 0x558e53e8b010 'i' 'int'
    |   |   `-IntegerLiteral 0x558e53eafd08 <col:21> 'int' 10
    |   |-WhileStmt 0x558e53eafe90 <line:27:5, line:29:5>
    |   | |-BinaryOperator 0x558e53eafe20 <line:27:12, col:17> 'int' '<'
    |   | | |-ImplicitCastExpr 0x558e53eafdf0 <col:12> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x558e53eafd80 <col:12> 'int' lvalue Var 0x558e53e8b010 'i' 'int'
    |   | | `-ImplicitCastExpr 0x558e53eafe08 <col:16, col:17> 'int' <LValueToRValue>
    |   | |   `-UnaryOperator 0x558e53eafdd8 <col:16, col:17> 'int' lvalue prefix '*' cannot overflow
    |   | |     `-ImplicitCastExpr 0x558e53eafdc0 <col:17> 'int *' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x558e53eafda0 <col:17> 'int *' lvalue Var 0x558e53e8b148 'pa' 'int *'
    |   | `-CompoundStmt 0x558e53eafe78 <col:21, line:29:5>
    |   |   `-UnaryOperator 0x558e53eafe60 <line:28:7, col:9> 'int' prefix '++'
    |   |     `-DeclRefExpr 0x558e53eafe40 <col:9> 'int' lvalue Var 0x558e53e8b010 'i' 'int'
    |   `-IfStmt 0x558e53eb0080 <line:30:5, line:32:5>
    |     |-UnaryOperator 0x558e53eaffe8 <line:30:9, col:22> 'int' prefix '!' cannot overflow
    |     | `-CallExpr 0x558e53eaff88 <col:10, col:22> 'int'
    |     |   |-ImplicitCastExpr 0x558e53eaff70 <col:10> 'int (*)(struct dummy *, int)' <FunctionToPointerDecay>
    |     |   | `-DeclRefExpr 0x558e53eafea8 <col:10> 'int (struct dummy *, int)' Function 0x558e53e8aab8 'check' 'int (struct dummy *, int)'
    |     |   |-ImplicitCastExpr 0x558e53eaffb8 <col:16> 'struct dummy *' <ArrayToPointerDecay>
    |     |   | `-DeclRefExpr 0x558e53eafec8 <col:16> 'struct dummy [20]' lvalue Var 0x558e53e8aed0 'ad1' 'struct dummy [20]'
    |     |   `-ImplicitCastExpr 0x558e53eaffd0 <col:21> 'int' <LValueToRValue>
    |     |     `-DeclRefExpr 0x558e53eafee8 <col:21> 'int' lvalue Var 0x558e53e8b010 'i' 'int'
    |     `-CompoundStmt 0x558e53eb0068 <col:25, line:32:5>
    |       `-GotoStmt 0x558e53eb0050 <line:31:7, col:12> 'ERROR' 0x558e53eb0000
    |-ReturnStmt 0x558e53eb0110 <line:35:3, col:10>
    | `-IntegerLiteral 0x558e53eb00f0 <col:10> 'int' 0
    |-LabelStmt 0x558e53eb01a8 <line:37:3, col:27> 'ERROR'
    | `-CallExpr 0x558e53eb0188 <col:10, col:27> 'void'
    |   `-ImplicitCastExpr 0x558e53eb0170 <col:10> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x558e53eb0120 <col:10> 'void () __attribute__((noreturn))' Function 0x558e53e8a4e0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
    `-ReturnStmt 0x558e53eb01e0 <line:38:3, col:10>
      `-IntegerLiteral 0x558e53eb01c0 <col:10> 'int' 1
