TranslationUnitDecl 0x55867106af88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55867106b848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55867106b520 '__int128'
|-TypedefDecl 0x55867106b8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55867106b540 'unsigned __int128'
|-TypedefDecl 0x55867106bbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55867106b990 'struct __NSConstantString_tag'
|   `-Record 0x55867106b910 '__NSConstantString_tag'
|-TypedefDecl 0x55867106bc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55867106bc20 'char *'
|   `-BuiltinType 0x55867106b020 'char'
|-TypedefDecl 0x5586710aab60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55867106bf00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55867106bd40 'struct __va_list_tag'
|     `-Record 0x55867106bcc0 '__va_list_tag'
|-FunctionDecl 0x5586710aaca0 <pthread-wmm/mix049_power.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5586710aabd0 <col:31> col:34 'int'
|-FunctionDecl 0x5586710aae68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5586710aaf90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5586710ab0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5586710ab048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5586710ab308 <col:40, col:99>
|   |-IfStmt 0x5586710ab2d8 <col:42, col:88>
|   | |-UnaryOperator 0x5586710ab1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5586710ab1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5586710ab180 <col:47> 'int' lvalue ParmVar 0x5586710ab048 'expression' 'int'
|   | `-CompoundStmt 0x5586710ab2c0 <col:59, col:88>
|   |   `-LabelStmt 0x5586710ab2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5586710ab238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5586710ab220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5586710ab1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x5586710aaf90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5586710ab2f0 <col:89>
|   `-ReturnStmt 0x5586710ab2f8 <col:91>
|-FunctionDecl 0x5586710ab350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5586710ab410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5586710ab790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5586710ab4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5586710ab548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5586710ab5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5586710ab648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5586710ab850 <line:10:22>
|-FunctionDecl 0x5586710d18a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5586710ab8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5586710ab940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5586710ab9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5586710aba40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5586710d1960 <line:13:22>
|-FunctionDecl 0x5586710d1c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5586710d19d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5586710d1a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5586710d1ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5586710d1cc8 <line:15:22>
|-TypedefDecl 0x5586710d1d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55867106b0e0 'unsigned char'
|-TypedefDecl 0x5586710d1da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55867106b100 'unsigned short'
|-TypedefDecl 0x5586710d1e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55867106b120 'unsigned int'
|-TypedefDecl 0x5586710d1e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55867106b140 'unsigned long'
|-TypedefDecl 0x5586710d1ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55867106b040 'signed char'
|-TypedefDecl 0x5586710d1f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55867106b0e0 'unsigned char'
|-TypedefDecl 0x5586710d1fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55867106b060 'short'
|-TypedefDecl 0x5586710d2048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55867106b100 'unsigned short'
|-TypedefDecl 0x5586710d20b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55867106b080 'int'
|-TypedefDecl 0x5586710d2128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55867106b120 'unsigned int'
|-TypedefDecl 0x5586710d2198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55867106b0a0 'long'
|-TypedefDecl 0x5586710d2208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55867106b140 'unsigned long'
|-TypedefDecl 0x5586710d2278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55867106b0a0 'long'
|-TypedefDecl 0x5586710d22e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55867106b140 'unsigned long'
|-TypedefDecl 0x5586710d2358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55867106b140 'unsigned long'
|-TypedefDecl 0x5586710d23c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55867106b120 'unsigned int'
|-TypedefDecl 0x5586710d2438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55867106b120 'unsigned int'
|-TypedefDecl 0x5586710d24a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55867106b140 'unsigned long'
|-TypedefDecl 0x5586710d2518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55867106b140 'unsigned long'
|-TypedefDecl 0x5586710d2588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55867106b120 'unsigned int'
|-TypedefDecl 0x5586710d25f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55867106b140 'unsigned long'
|-TypedefDecl 0x5586710d2668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55867106b0a0 'long'
|-TypedefDecl 0x5586710d26d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55867106b0a0 'long'
|-TypedefDecl 0x5586710d2748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55867106b080 'int'
|-RecordDecl 0x5586710d27a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5586710d2918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5586710d29d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5586710d2970 'struct __fsid_t' sugar
|   `-RecordType 0x5586710d2820 '__fsid_t'
|     `-Record 0x5586710d27a0 ''
|-TypedefDecl 0x5586710d2a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55867106b0a0 'long'
|-TypedefDecl 0x5586710d2ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55867106b140 'unsigned long'
|-TypedefDecl 0x5586710d2b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55867106b140 'unsigned long'
|-TypedefDecl 0x5586710d2ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55867106b120 'unsigned int'
|-TypedefDecl 0x5586710d2c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55867106b0a0 'long'
|-TypedefDecl 0x5586710d2c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55867106b120 'unsigned int'
|-TypedefDecl 0x5586710d2cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55867106b0a0 'long'
|-TypedefDecl 0x5586710d2d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55867106b080 'int'
|-TypedefDecl 0x5586710d2dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55867106b080 'int'
|-TypedefDecl 0x5586710d2e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55867106b080 'int'
|-TypedefDecl 0x5586710d2eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55867106b7a0 'void *'
|   `-BuiltinType 0x55867106afe0 'void'
|-TypedefDecl 0x5586710d2f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55867106b0a0 'long'
|-TypedefDecl 0x5586710d2f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55867106b0a0 'long'
|-TypedefDecl 0x5586710d3008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55867106b0a0 'long'
|-TypedefDecl 0x5586710d3078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55867106b140 'unsigned long'
|-TypedefDecl 0x5586710d30e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55867106b140 'unsigned long'
|-TypedefDecl 0x5586710d3158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55867106b140 'unsigned long'
|-TypedefDecl 0x5586710d31c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55867106b140 'unsigned long'
|-TypedefDecl 0x5586710d3238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55867106b0a0 'long'
|-TypedefDecl 0x5586710d32a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55867106b0a0 'long'
|-TypedefDecl 0x5586710d3318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55867106b0a0 'long'
|-TypedefDecl 0x5586710d3388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55867106b140 'unsigned long'
|-TypedefDecl 0x5586710d3418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5586710d33e0 '__off64_t' sugar
|   |-Typedef 0x5586710d26d8 '__off64_t'
|   `-BuiltinType 0x55867106b0a0 'long'
|-TypedefDecl 0x5586710d3510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5586710d34d0 '__quad_t *'
|   `-TypedefType 0x5586710d3470 '__quad_t' sugar
|     |-Typedef 0x5586710d2278 '__quad_t'
|     `-BuiltinType 0x55867106b0a0 'long'
|-TypedefDecl 0x5586710d3580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55867106bc20 'char *'
|   `-BuiltinType 0x55867106b020 'char'
|-TypedefDecl 0x5586710d35f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55867106b0a0 'long'
|-TypedefDecl 0x5586710d3660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55867106b120 'unsigned int'
|-FunctionDecl 0x5586710d37a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5586710d36d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5586710d3ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5586710d3ad8 <line:72:3, col:34>
|     `-CallExpr 0x5586710d3a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5586710d3a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5586710d3a10 <col:10> '<builtin fn type>' Function 0x5586710d3880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5586710d3ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5586710d3a30 <col:29> 'unsigned int' lvalue ParmVar 0x5586710d36d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5586710d3880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5586710d3920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5586710d3990 <col:10> Implicit
| `-ConstAttr 0x5586710d39e8 <col:10> Implicit
|-FunctionDecl 0x5586710d3c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5586710d3b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5586710d3f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5586710d3f48 <line:77:3, col:34>
|     `-CallExpr 0x5586710d3f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5586710d3ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5586710d3e78 <col:10> '<builtin fn type>' Function 0x5586710d3ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5586710d3f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5586710d3e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5586710d3b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5586710d3ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5586710d3d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5586710d3df8 <col:10> Implicit
| `-ConstAttr 0x5586710d3e50 <col:10> Implicit
|-TypedefDecl 0x5586710d3f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55867106b140 'unsigned long'
|-TypedefDecl 0x5586710d4018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5586710d3fe0 '__time_t' sugar
|   |-Typedef 0x5586710d2c18 '__time_t'
|   `-BuiltinType 0x55867106b0a0 'long'
|-RecordDecl 0x5586710d4070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5586710d4128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5586710d41b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5586710d4248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5586710d4210 '__pid_t' sugar
|   |-Typedef 0x5586710d2748 '__pid_t'
|   `-BuiltinType 0x55867106b080 'int'
|-RecordDecl 0x5586710d42a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5586710d4360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5586710d43b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5586710d4470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5586710d44d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55867106b140 'unsigned long'
|-RecordDecl 0x5586710d4530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5586710d47c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5586710d68b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5586710d4810 'struct cpu_set_t' sugar
|   `-RecordType 0x5586710d45b0 'cpu_set_t'
|     `-Record 0x5586710d4530 ''
|-FunctionDecl 0x5586710d6b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5586710d6958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5586710d6a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5586710d6c38 <line:107:19>
|-FunctionDecl 0x5586710d6e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5586710d6ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5586710d6eb8 <col:69>
|-FunctionDecl 0x5586710d7030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5586710d6f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5586710d70d8 <col:64>
|-FunctionDecl 0x5586710d7398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5586710d7140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5586710d7278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5586710d7448 <line:113:22>
|-FunctionDecl 0x5586710d76c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5586710d74b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5586710d75a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5586710d7778 <col:88>
|-FunctionDecl 0x5586710d7a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5586710d77e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5586710d78c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5586710d7950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5586710d7b50 <col:62>
|-FunctionDecl 0x5586710d7cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5586710d7bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5586710d7d70 <col:63>
|-FunctionDecl 0x5586710d7e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5586710d7f38 <col:47>
|-FunctionDecl 0x5586710d8040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5586710d7fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5586710d80e8 <col:69>
|-FunctionDecl 0x5586710d81f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5586710d8158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5586710d8298 <col:69>
|-FunctionDecl 0x5586710d8558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5586710d8300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5586710d8438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5586710d8608 <col:88>
|-TypedefDecl 0x5586710d8698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5586710d8660 '__clock_t' sugar
|   |-Typedef 0x5586710d2a58 '__clock_t'
|   `-BuiltinType 0x55867106b0a0 'long'
|-TypedefDecl 0x5586710d8728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5586710d86f0 '__clockid_t' sugar
|   |-Typedef 0x5586710d2e48 '__clockid_t'
|   `-BuiltinType 0x55867106b080 'int'
|-TypedefDecl 0x5586710d87b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5586710d8780 '__timer_t' sugar
|   |-Typedef 0x5586710d2eb8 '__timer_t'
|   `-PointerType 0x55867106b7a0 'void *'
|     `-BuiltinType 0x55867106afe0 'void'
|-RecordDecl 0x5586710d8810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5586710d88e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5586710d8950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5586710d89b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5586710d8a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5586710d8a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5586710d8af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5586710d8b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5586710d8bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5586710d8c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5586710d8c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5586710d8cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5586710d8d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5586710d8e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5586710d8e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5586710d8f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5586710d9100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5586710d91a0 <col:45>
|-FunctionDecl 0x5586710d9380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5586710d9270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5586710d9428 <col:54>
|-FunctionDecl 0x5586710d9628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5586710d9490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5586710d9508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5586710d96d8 <line:157:22>
| `-ConstAttr 0x5586710d9730 <col:63>
|-FunctionDecl 0x5586710da560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5586710d9828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5586710da608 <col:56>
|-FunctionDecl 0x5586710da9b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5586710da678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5586710da6f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5586710da770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5586710da868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5586710daa70 <col:54>
|-RecordDecl 0x5586710daac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5586710dab78 parent 0x55867106af88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5586710dadd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5586710dae78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5586710daee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5586710daf48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5586710db038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5586710db158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5586710db100 'struct __locale_struct *'
|   `-ElaboratedType 0x5586710db090 'struct __locale_struct' sugar
|     `-RecordType 0x5586710dab50 'struct __locale_struct'
|       `-Record 0x5586710daac8 '__locale_struct'
|-TypedefDecl 0x5586710db208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5586710db1d0 '__locale_t' sugar
|   |-Typedef 0x5586710db158 '__locale_t'
|   `-PointerType 0x5586710db100 'struct __locale_struct *'
|     `-ElaboratedType 0x5586710db090 'struct __locale_struct' sugar
|       `-RecordType 0x5586710dab50 'struct __locale_struct'
|         `-Record 0x5586710daac8 '__locale_struct'
|-FunctionDecl 0x5586710db610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5586710db278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5586710db2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5586710db370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5586710db400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5586710db478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5586710db6d8 <col:40>
|-FunctionDecl 0x5586710db8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5586710db7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5586710db970 <col:66>
|-FunctionDecl 0x5586710dba80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5586710db9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5586710dbb28 <col:69>
|-FunctionDecl 0x5586710dbd58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5586710dbb90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5586710dbc20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5586710dbe08 <col:52>
|-FunctionDecl 0x5586710dbfb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5586710dbe70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5586710dbf00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5586710dc060 <col:55>
|-FunctionDecl 0x5586710dc1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5586710dc0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5586710dc2a0 <col:62>
|-FunctionDecl 0x5586710dc418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5586710dc308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5586710dc4c0 <col:60>
|-FunctionDecl 0x5586710dc718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5586710dc578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5586710dc5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5586710dc7c8 <col:44>
|-FunctionDecl 0x5586710dc9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5586710dc830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5586710dc8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5586710dca88 <col:49>
|-VarDecl 0x5586710dcb88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5586710dcc08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5586710dcc88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5586710dcd50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5586710dce80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5586710dcf20 <col:42>
|-VarDecl 0x5586710dcf90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5586710dd010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5586710dd198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5586710dd088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5586710dd240 <col:57>
|-FunctionDecl 0x5586710dd350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5586710dd2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5586710dd3f8 <col:56>
|-FunctionDecl 0x5586710de540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5586710dd478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5586710de5e8 <col:59>
|-FunctionDecl 0x5586710de6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5586710de658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5586710de798 <col:48>
| `-ConstAttr 0x5586710de7f0 <col:89>
|-FunctionDecl 0x5586710dea58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5586710de8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5586710de938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5586710decb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5586710deb48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5586710debd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5586710ded68 <col:88>
|-FunctionDecl 0x5586710def00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5586710dedd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5586710dee60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5586710defb0 <col:88>
|-FunctionDecl 0x5586710df1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5586710df018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5586710df0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5586710df278 <line:208:22>
|-FunctionDecl 0x5586710df5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5586710df2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5586710df360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5586710df3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5586710df480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5586710df8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5586710df6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5586710df7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5586710df998 <col:85>
|-FunctionDecl 0x5586710dfd88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5586710dfa00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5586710dfb38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5586710dfc40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5586710dfe40 <col:52>
|-FunctionDecl 0x5586710dffb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5586710dfea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5586710e0060 <col:61>
|-FunctionDecl 0x5586710e0560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5586710e00c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5586710e0148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5586710e0278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5586710e0368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5586710e0620 <col:62>
|-FunctionDecl 0x5586710e0838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5586710e0688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5586710e0718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5586710e08e8 <line:221:22>
|-FunctionDecl 0x5586710e09e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5586710e0950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5586710e0a90 <col:65>
|-TypedefDecl 0x5586710e0b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55867106b140 'unsigned long'
|-RecordDecl 0x5586710e0b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5586710e0ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5586710e0d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5586710e0db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5586710e0d60 'union pthread_attr_t' sugar
|   `-RecordType 0x5586710e0be0 'union pthread_attr_t'
|     `-Record 0x5586710e0b58 'pthread_attr_t'
|-RecordDecl 0x5586710e0e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5586710e0f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5586710e1000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5586710e10b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5586710e1050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5586710e0e90 'struct __pthread_internal_list'
|     `-Record 0x5586710e0e10 '__pthread_internal_list'
|-RecordDecl 0x5586710e1120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5586710e11c8 parent 0x55867106af88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5586710e12a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5586710e1308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5586710e1370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5586710e13d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5586710e1440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5586710e14a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5586710e5580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5586710e5630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5586710e5720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5586710e5788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5586710e5910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5586710e58b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5586710e11a0 'pthread_mutex_t'
|     `-Record 0x5586710e1120 ''
|-RecordDecl 0x5586710e5980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5586710e5ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5586710e5b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5586710e5be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5586710e5b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5586710e5a00 'pthread_mutexattr_t'
|     `-Record 0x5586710e5980 ''
|-RecordDecl 0x5586710e5c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5586710e5cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5586710e5dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5586710e5e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5586710e5e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5586710e5ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5586710e5f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5586710e5fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5586710e6030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5586710e6098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5586710e6150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix049_power.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix049_power.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5586710e6240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5586710e62a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5586710e63e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5586710e6380 'union pthread_cond_t' sugar
|   `-RecordType 0x5586710e5cd0 'pthread_cond_t'
|     `-Record 0x5586710e5c50 ''
|-RecordDecl 0x5586710e6450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5586710e6590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5586710e65f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5586710e66b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5586710e6650 'union pthread_condattr_t' sugar
|   `-RecordType 0x5586710e64d0 'pthread_condattr_t'
|     `-Record 0x5586710e6450 ''
|-TypedefDecl 0x5586710e6738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55867106b120 'unsigned int'
|-TypedefDecl 0x5586710e67a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55867106b080 'int'
|-RecordDecl 0x5586710e6800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5586710e68a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5586710e6970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5586710e69d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5586710e6a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5586710e6aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5586710e6b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5586710e6b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5586710e6be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5586710e6c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5586710e6cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5586710e6d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5586710e6d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5586710e6e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix049_power.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix049_power.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5586710e6ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5586710e6f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5586710e7090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5586710e7030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5586710e6880 'pthread_rwlock_t'
|     `-Record 0x5586710e6800 ''
|-RecordDecl 0x5586710e7100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5586710e7240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5586710e72a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5586710e7360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5586710e7300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5586710e7180 'pthread_rwlockattr_t'
|     `-Record 0x5586710e7100 ''
|-TypedefDecl 0x5586710e73e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55867106b084 'volatile int' volatile
|   `-BuiltinType 0x55867106b080 'int'
|-RecordDecl 0x5586710e7440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5586710e95b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5586710e9618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5586710e96d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5586710e9670 'union pthread_barrier_t' sugar
|   `-RecordType 0x5586710e74c0 'pthread_barrier_t'
|     `-Record 0x5586710e7440 ''
|-RecordDecl 0x5586710e9740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5586710e9840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5586710e98a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5586710e9960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5586710e9900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5586710e97c0 'pthread_barrierattr_t'
|     `-Record 0x5586710e9740 ''
|-TypedefDecl 0x5586710e9a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5586710e9a10 'long [8]' 8 
|   `-BuiltinType 0x55867106b0a0 'long'
|-EnumDecl 0x5586710e9ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5586710e9b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5586710e9be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5586710e9c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5586710e9d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5586710e9d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5586710e9da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5586710e9df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5586710e9e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5586710e9e68 <col:26> 'int'
| |   `-DeclRefExpr 0x5586710e9e48 <col:26> 'int' EnumConstant 0x5586710e9d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5586710e9f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5586710e9ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x5586710e9ed0 <col:29> 'int' EnumConstant 0x5586710e9d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5586710e9f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5586710e9f78 <col:30> 'int'
| |   `-DeclRefExpr 0x5586710e9f58 <col:30> 'int' EnumConstant 0x5586710e9da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5586710ea018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5586710ea000 <col:27> 'int'
|     `-DeclRefExpr 0x5586710e9fe0 <col:27> 'int' EnumConstant 0x5586710e9e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5586710ea068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5586710ea138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5586710ea1c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5586710ea1a8 <col:30> 'int'
| |   `-DeclRefExpr 0x5586710ea188 <col:30> 'int' EnumConstant 0x5586710ea138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5586710ea210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5586710ea298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5586710ea280 <col:29> 'int'
|     `-DeclRefExpr 0x5586710ea260 <col:29> 'int' EnumConstant 0x5586710ea210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5586710ea2e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5586710ea3b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5586710ea408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5586710ea458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5586710ea4a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5586710ea5c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5586710ea610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5586710ea660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5586710ea6e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5586710ea6d0 <col:31> 'int'
|     `-DeclRefExpr 0x5586710ea6b0 <col:31> 'int' EnumConstant 0x5586710ea5c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5586710ea738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5586710ea808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5586710ea858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5586710ea8a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5586710ea978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5586710ea9c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5586710eaa18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5586710eaae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5586710eab38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5586710eab88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5586710eadc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5586710eae30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5586710eae98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5586710eafb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5586710eb008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5586710eb0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5586710eb128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5586710eb178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5586710eb248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5586710eb298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5586710eb8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5586710eb390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5586710eb4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5586710eb6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5586710eb760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5586710eb9b8 <col:47>
| |-NonNullAttr 0x5586710eba10 <col:77, col:94> 1 3
| `-CallbackAttr 0x5586710eba48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5586710ebb70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5586710ebaa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5586710ebdc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5586710ebc28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5586710ebca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5586710ebf98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5586710ebe88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5586710ec040 <col:60>
|-FunctionDecl 0x5586710ec190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5586710ec230 <col:54>
| `-ConstAttr 0x5586710ec288 <col:95>
|-FunctionDecl 0x5586710ec458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5586710ec2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5586710ec338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5586710ec508 <line:394:19>
| `-ConstAttr 0x5586710ec560 <col:60>
|-FunctionDecl 0x5586710ecf68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5586710ece30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5586710ed010 <col:71>
| `-NonNullAttr 0x5586710ed068 <col:112, col:126> 1
|-FunctionDecl 0x5586710ed170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5586710ed0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5586710ed218 <line:397:22>
| `-NonNullAttr 0x5586710ed270 <col:63, col:77> 1
|-FunctionDecl 0x5586710ed498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5586710ed2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5586710ed338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5586710ed548 <line:400:22>
| `-NonNullAttr 0x5586710ed5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5586710ed7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5586710ed5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5586710ed668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5586710ed858 <line:403:22>
| `-NonNullAttr 0x5586710ed8b0 <col:63, col:77> 1
|-FunctionDecl 0x5586710edb08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5586710ed8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5586710ed9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5586710edbb8 <line:406:22>
| `-NonNullAttr 0x5586710edc10 <col:63, col:80> 1 2
|-FunctionDecl 0x5586710eee48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5586710edc58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5586710edcd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5586710eeef8 <line:409:22>
| `-NonNullAttr 0x5586710eef50 <col:63, col:77> 1
|-FunctionDecl 0x5586710ef188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5586710eef98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5586710ef028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5586710ef238 <line:412:22>
| `-NonNullAttr 0x5586710ef290 <col:63, col:80> 1 2
|-FunctionDecl 0x5586710ef4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5586710ef2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5586710ef368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5586710ef578 <col:37>
| `-NonNullAttr 0x5586710ef5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x5586710ef7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5586710ef618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5586710ef698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5586710ef868 <line:418:22>
| `-NonNullAttr 0x5586710ef8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5586710efa48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5586710ef908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5586710ef988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5586710efaf8 <line:420:22>
| `-NonNullAttr 0x5586710efb50 <col:63, col:77> 1
|-FunctionDecl 0x5586710efcf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5586710efb98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5586710efc18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5586710efda8 <line:423:22>
| `-NonNullAttr 0x5586710f0e30 <col:63, col:80> 1 2
|-FunctionDecl 0x5586710f0fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5586710f0e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5586710f0ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5586710f1068 <line:426:22>
| `-NonNullAttr 0x5586710f10c0 <col:63, col:77> 1
|-FunctionDecl 0x5586710f1268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5586710f1108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5586710f1188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5586710f1318 <line:429:22>
| `-NonNullAttr 0x5586710f1370 <col:63, col:80> 1 2
|-FunctionDecl 0x5586710f14f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5586710f13b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5586710f1438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5586710f15a8 <line:431:22>
| `-NonNullAttr 0x5586710f1600 <col:63, col:77> 1
|-FunctionDecl 0x5586710f1828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5586710f1648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5586710f16c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5586710f18d8 <line:434:22>
| |-NonNullAttr 0x5586710f1930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5586710f1968 <col:100> "" ""
|-FunctionDecl 0x5586710f1b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5586710f19b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5586710f1a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5586710f1c28 <line:437:22>
| |-NonNullAttr 0x5586710f1c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x5586710f1cb8 <col:97> "" ""
|-FunctionDecl 0x5586710f1eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5586710f1d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5586710f1d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5586710f1f68 <line:440:22>
| `-NonNullAttr 0x5586710f1fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x5586710f2140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5586710f2008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5586710f2080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5586710f21f0 <line:443:22>
| `-NonNullAttr 0x5586710f2248 <col:63, col:77> 1
|-FunctionDecl 0x5586710f2538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5586710f2298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5586710f2318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5586710f2390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5586710f25f0 <line:447:22>
| `-NonNullAttr 0x5586710f2648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5586710f28f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5586710f26a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5586710f2720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5586710f2798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5586710f29b0 <col:43>
| `-NonNullAttr 0x5586710f2a08 <col:84, col:98> 1
|-FunctionDecl 0x5586710f2cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5586710f2a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5586710f2ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5586710f2b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5586710f2d80 <line:452:22>
| `-NonNullAttr 0x5586710f2dd8 <col:63, col:77> 3
|-FunctionDecl 0x5586710f30e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5586710f2e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5586710f2ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5586710f2f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5586710f31a0 <line:456:22>
| `-NonNullAttr 0x5586710f31f8 <col:63, col:80> 2 3
|-FunctionDecl 0x5586710f33e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5586710f3248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5586710f32c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5586710f3498 <line:458:22>
|-FunctionDecl 0x5586710f3868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5586710f3560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5586710f3700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5586710f3918 <col:52, col:69> 1 2
|-FunctionDecl 0x5586710f3ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5586710f39a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5586710f3a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5586710f3ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5586710f3b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5586710f3c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5586710f3e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5586710f3d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5586710f3fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5586710f4040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5586710f40e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5586710f41d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5586710f4240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5586710f4410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix049_power.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5586710f4508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5586710f45c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5586710f4560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5586710f40c0 '__pthread_unwind_buf_t'
| |   `-Record 0x5586710f4040 ''
| `-AlignedAttr 0x5586710f4618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5586710f4690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5586710f47f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5586710f4858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5586710f48c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5586710f4928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5586710f4b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5586710f4a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5586710f4c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5586710f4be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5586710f4e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5586710f4d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5586710f4f18 <line:487:22>
|-RecordDecl 0x5586710f4f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5586710f5288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5586710f50e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5586710f5168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5586710f5338 <col:86>
| `-ReturnsTwiceAttr 0x5586710f5390 <col:12> Implicit
|-FunctionDecl 0x5586710f56b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5586710f5460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5586710f5570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5586710f5768 <line:493:22>
| `-NonNullAttr 0x5586710f57c0 <col:63, col:77> 1
|-FunctionDecl 0x5586710f5938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5586710f5808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5586710f59e0 <line:495:22>
| `-NonNullAttr 0x5586710f5a38 <col:63, col:77> 1
|-FunctionDecl 0x5586710f5b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5586710f5a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5586710f5be8 <line:497:22>
| `-NonNullAttr 0x5586710f5c40 <col:52, col:66> 1
|-FunctionDecl 0x5586710f5d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5586710f5c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5586710f5de8 <line:499:22>
| `-NonNullAttr 0x5586710f5e40 <col:52, col:66> 1
|-FunctionDecl 0x5586710f6088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5586710f5e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5586710f5f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5586710f6138 <col:36>
| `-NonNullAttr 0x5586710f6190 <col:66, col:83> 1 2
|-FunctionDecl 0x5586710f6290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5586710f61d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5586710f6338 <line:504:22>
| `-NonNullAttr 0x5586710f6390 <col:52, col:66> 1
|-FunctionDecl 0x5586710f6628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5586710f6440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5586710f64c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5586710f66d8 <line:508:22>
| `-NonNullAttr 0x5586710f6730 <col:63, col:80> 1 2
|-FunctionDecl 0x5586710f69f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5586710f6778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5586710f67f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5586710f6878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5586710f6ab0 <line:512:22>
| `-NonNullAttr 0x5586710f6b08 <col:63, col:80> 1 3
|-FunctionDecl 0x5586710f6c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5586710f6b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5586710f6cb8 <line:514:22>
| `-NonNullAttr 0x5586710f6d10 <col:63, col:77> 1
|-FunctionDecl 0x5586710f6f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5586710f6dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5586710f6fe0 <line:516:22>
| `-NonNullAttr 0x5586710f7038 <col:63, col:77> 1
|-FunctionDecl 0x5586710f7140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5586710f7088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5586710f71e8 <line:518:22>
| `-NonNullAttr 0x5586710f7240 <col:63, col:77> 1
|-FunctionDecl 0x5586710f7468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5586710f7288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5586710f7308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5586710f7518 <line:522:22>
| `-NonNullAttr 0x5586710f7570 <col:63, col:80> 1 2
|-FunctionDecl 0x5586710f7778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5586710f75b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5586710f7638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5586710f7828 <line:525:22>
| `-NonNullAttr 0x5586710f7880 <col:63, col:77> 1
|-FunctionDecl 0x5586710f7a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5586710f78c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5586710f7948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5586710f7ad8 <line:528:22>
| `-NonNullAttr 0x5586710f7b30 <col:63, col:80> 1 2
|-FunctionDecl 0x5586710f7cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5586710f7b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5586710f7bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5586710f7d68 <line:530:22>
| `-NonNullAttr 0x5586710f7dc0 <col:63, col:77> 1
|-FunctionDecl 0x5586710f8f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5586710f7e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5586710f8eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5586710f9040 <line:534:22>
| `-NonNullAttr 0x5586710f9098 <col:63, col:80> 1 2
|-FunctionDecl 0x5586710f9228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5586710f90e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5586710f9168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5586710f92d8 <line:537:22>
| `-NonNullAttr 0x5586710f9330 <col:63, col:77> 1
|-FunctionDecl 0x5586710f94d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5586710f9378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5586710f93f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5586710f9588 <line:541:22>
| `-NonNullAttr 0x5586710f95e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5586710f9768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5586710f9628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5586710f96a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5586710f9818 <line:544:22>
| `-NonNullAttr 0x5586710f9870 <col:63, col:77> 1
|-FunctionDecl 0x5586710f9a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5586710f98b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5586710f9938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5586710f9b08 <line:547:22>
| `-NonNullAttr 0x5586710f9b60 <col:63, col:80> 1 2
|-FunctionDecl 0x5586710f9ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5586710f9ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5586710f9c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5586710f9d98 <line:550:22>
| `-NonNullAttr 0x5586710f9df0 <col:63, col:77> 1
|-FunctionDecl 0x5586710fb168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5586710faf10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5586710fb020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5586710fb218 <col:29>
| `-NonNullAttr 0x5586710fb270 <col:70, col:84> 1
|-FunctionDecl 0x5586710fb3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5586710fb2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5586710fb490 <line:555:22>
| `-NonNullAttr 0x5586710fb4e8 <col:63, col:77> 1
|-FunctionDecl 0x5586710fb5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5586710fb538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5586710fb698 <line:557:22>
| `-NonNullAttr 0x5586710fb6f0 <col:52, col:66> 1
|-FunctionDecl 0x5586710fb7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5586710fb738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5586710fb898 <line:559:19>
| `-NonNullAttr 0x5586710fb8f0 <col:49, col:63> 1
|-FunctionDecl 0x5586710fbb28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5586710fb938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5586710fb9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5586710fbbd8 <col:39>
| `-NonNullAttr 0x5586710fbc30 <col:69, col:86> 1 2
|-FunctionDecl 0x5586710fbd30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5586710fbc78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5586710fbdd8 <line:564:22>
| `-NonNullAttr 0x5586710fbe30 <col:52, col:66> 1
|-FunctionDecl 0x5586710fbf98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5586710fbee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5586710fc040 <line:566:22>
| `-NonNullAttr 0x5586710fc098 <col:52, col:66> 1
|-FunctionDecl 0x5586710fc258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5586710fc0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5586710fc178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5586710fc308 <col:39>
| `-NonNullAttr 0x5586710fc360 <col:69, col:86> 1 2
|-FunctionDecl 0x5586710fc460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5586710fc3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5586710fc508 <line:571:22>
| `-NonNullAttr 0x5586710fc560 <col:52, col:66> 1
|-FunctionDecl 0x5586710fc748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5586710fc610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5586710fc7f0 <line:573:22>
| `-NonNullAttr 0x5586710fc848 <col:63, col:77> 1
|-FunctionDecl 0x5586710fc950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5586710fc898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5586710fc9f8 <line:575:22>
| `-NonNullAttr 0x5586710fca50 <col:63, col:77> 1
|-FunctionDecl 0x5586710fcc78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5586710fca98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5586710fcb18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5586710fcd28 <line:579:22>
| `-NonNullAttr 0x5586710fcd80 <col:63, col:80> 1 2
|-FunctionDecl 0x5586710fcfa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5586710fcdc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5586710fce48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5586710fd058 <line:582:22>
| `-NonNullAttr 0x5586710fd0b0 <col:63, col:77> 1
|-FunctionDecl 0x5586710fd258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5586710fd0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5586710fd178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5586710fd308 <line:586:22>
| `-NonNullAttr 0x5586710fd360 <col:63, col:80> 1 2
|-FunctionDecl 0x5586710fd4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5586710fd3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5586710fd428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5586710fd598 <col:36>
| `-NonNullAttr 0x5586710fd5f0 <col:77, col:91> 1
|-FunctionDecl 0x5586710fd928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5586710fd6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5586710fd7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5586710fd9d8 <line:591:22>
| `-NonNullAttr 0x5586710fda30 <col:63, col:77> 1
|-FunctionDecl 0x5586710fdba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5586710fda78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5586710fdc50 <line:593:22>
| `-NonNullAttr 0x5586710fdca8 <col:63, col:77> 1
|-FunctionDecl 0x5586710fddb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5586710fdcf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5586710fde58 <line:595:22>
| `-NonNullAttr 0x5586710fdeb0 <col:52, col:66> 1
|-FunctionDecl 0x5586710fdfc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5586710fdf10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5586710fe070 <line:597:22>
| `-NonNullAttr 0x5586710fe0c8 <col:52, col:66> 1
|-FunctionDecl 0x5586710fe2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5586710fe118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5586710fe190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5586710fe3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5586710fe6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5586710fe428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5586710fe4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5586710fe530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5586710fe790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5586710fe9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5586710fe870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5586710fea50 <line:606:22>
| `-NonNullAttr 0x5586710feaa8 <col:63, col:77> 1
|-FunctionDecl 0x5586710febb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5586710feaf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5586710fec58 <line:608:22>
| `-NonNullAttr 0x5586710fecb0 <col:63, col:77> 1
|-FunctionDecl 0x5586710fef10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5586710fecf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5586710fed78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5586710fefc0 <line:612:22>
| `-NonNullAttr 0x5586710ff018 <col:63, col:80> 1 2
|-FunctionDecl 0x5586710ff228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5586710ff068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5586710ff0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5586710ff2d8 <col:37>
| `-NonNullAttr 0x5586710ff330 <col:78, col:92> 1
|-FunctionDecl 0x5586710ff548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5586710ff378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5586710ff420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5586710ff5f8 <line:618:22>
| `-NonNullAttr 0x5586710ff650 <col:63, col:80> 1 2
|-FunctionDecl 0x5586710ff818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5586710ff698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5586710ff710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5586710ff8c8 <line:621:22>
| `-NonNullAttr 0x5586710ff920 <col:63, col:77> 1
|-FunctionDecl 0x5586710ffbc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5586710ffa00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5586710ffa80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5586710ffc78 <line:623:22>
| `-NonNullAttr 0x5586710ffcd0 <col:63, col:77> 1
|-FunctionDecl 0x5586710ffe48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5586710ffd18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5586710fff20 <line:625:22>
| `-NonNullAttr 0x5586710fff78 <col:63, col:77> 1
|-FunctionDecl 0x558671100080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5586710fffc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558671100128 <line:627:22>
| `-NonNullAttr 0x558671100180 <col:52, col:66> 1
|-FunctionDecl 0x558671100280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5586711001c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558671100328 <line:629:22>
| `-NonNullAttr 0x558671100380 <col:52, col:66> 1
|-FunctionDecl 0x558671100480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5586711003c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558671100528 <line:631:22>
| `-NonNullAttr 0x558671100580 <col:52, col:66> 1
|-FunctionDecl 0x558671100958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x558671100660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x558671100770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5586711007f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x558671100a10 <line:635:22>
| `-NonNullAttr 0x558671100a68 <col:63, col:77> 1
|-FunctionDecl 0x558671100be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x558671100ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x558671100c90 <line:637:22>
| `-NonNullAttr 0x558671100ce8 <col:63, col:77> 1
|-FunctionDecl 0x558671100df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x558671100d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x558671100e98 <line:639:22>
| `-NonNullAttr 0x558671100ef0 <col:52, col:66> 1
|-FunctionDecl 0x5586711010e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x558671100fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x558671101190 <line:641:22>
| `-NonNullAttr 0x5586711011e8 <col:63, col:77> 1
|-FunctionDecl 0x5586711012f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x558671101238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x558671101398 <line:643:22>
| `-NonNullAttr 0x5586711013f0 <col:63, col:77> 1
|-FunctionDecl 0x558671101618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558671101438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5586711014b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5586711016c8 <line:647:22>
| `-NonNullAttr 0x558671101720 <col:63, col:80> 1 2
|-FunctionDecl 0x558671101928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x558671101768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5586711017e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5586711019d8 <line:650:22>
| `-NonNullAttr 0x558671101a30 <col:63, col:77> 1
|-FunctionDecl 0x558671101d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x558671101b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x558671101c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x558671101e28 <line:653:22>
| `-NonNullAttr 0x558671101e80 <col:63, col:77> 1
|-FunctionDecl 0x558671101fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x558671101ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x558671102090 <col:69>
|-FunctionDecl 0x558671102208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5586711020f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5586711022b0 <col:72>
|-FunctionDecl 0x5586711024e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x558671102318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5586711023c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x558671102598 <col:44>
|-FunctionDecl 0x5586711027b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x558671102600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558671102678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x558671102868 <line:660:22>
| `-NonNullAttr 0x5586711028c0 <col:63, col:77> 2
|-FunctionDecl 0x558671102d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5586711029a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x558671102ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x558671102bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x558671102dc0 <col:47>
|-FunctionDecl 0x558671103f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x558671102e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5586711040b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x558671104020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558671104210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x558671104178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5586711042d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x558671104398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x558671104458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x558671104510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x558671104590 prev 0x558671104510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5586711045f8 <col:24> 'int' 0
|-VarDecl 0x558671104630 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5586711046b0 prev 0x558671104630 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x558671104718 <col:27> 'int' 0
|-VarDecl 0x558671104750 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5586711047d0 prev 0x558671104750 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x558671104838 <col:27> 'int' 0
|-VarDecl 0x558671104870 <line:677:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5586711048f0 prev 0x558671104870 <line:678:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x558671104958 <col:27> 'int' 0
|-VarDecl 0x558671104988 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x558671104a00 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x558671104a80 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x558671104b00 prev 0x558671104a80 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x558671104b68 <col:9> 'int' 0
|-VarDecl 0x558671104ba0 <line:683:1, col:5> col:5 used y 'int'
|-VarDecl 0x558671104c20 prev 0x558671104ba0 <line:684:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x558671104c88 <col:9> 'int' 0
|-VarDecl 0x558671104cc0 <line:685:1, col:5> col:5 used z 'int'
|-VarDecl 0x558671104d40 prev 0x558671104cc0 <line:686:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x558671104da8 <col:9> 'int' 0
|-VarDecl 0x558671104dd8 <line:687:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x558671104e58 <line:688:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x558671104ed0 <line:689:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x558671104f70 <line:690:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x558671104fe8 <line:691:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x558671105060 <line:692:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x5586711050d8 <line:693:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x558671105150 <line:694:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x5586711051c8 <line:695:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x558671105240 <line:696:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x5586711052b8 <line:697:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x558671105338 <line:698:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x5586711053b8 <line:699:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x558671105430 <line:700:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x5586711054b0 <line:701:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x558671105528 <line:702:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x5586711055a0 <line:703:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x558671105618 <line:704:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x558671105730 prev 0x558671103f60 <line:705:1, line:733:1> line:705:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x558671105698 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558671106f90 <line:706:1, line:733:1>
|   |-CallExpr 0x558671105848 <line:707:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558671105830 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5586711057d8 <col:3> 'void ()' Function 0x5586710ab350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5586711058c0 <line:708:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x558671105868 <col:3> 'int' lvalue Var 0x5586711054b0 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5586711058a8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558671105888 <col:15> 'int' lvalue Var 0x5586711053b8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x558671105920 <line:709:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5586711058e0 <col:3> 'int' lvalue Var 0x5586711053b8 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x558671105900 <col:15> 'int' 1
|   |-BinaryOperator 0x558671105998 <line:710:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558671105940 <col:3> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558671105980 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558671105960 <col:20> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558671105a30 <line:711:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5586711059b8 <col:3> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x558671105a08 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5586711059d8 <col:27> 'int' 1
|   |-CallExpr 0x558671105bb8 <line:712:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x558671105ba0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x558671105a50 <col:3> 'void (int)' Function 0x5586710ab0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x558671105b50 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x558671105b30 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x558671105b10 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x558671105ac8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x558671105ab0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x558671105a70 <col:23> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x558671105af8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x558671105ae0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x558671105a90 <col:41> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558671105c38 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558671105be0 <col:3> '_Bool' lvalue Var 0x5586711050d8 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x558671105c20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558671105c00 <col:20> '_Bool' lvalue Var 0x558671104ed0 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x558671105cb0 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558671105c58 <col:3> '_Bool' lvalue Var 0x558671105150 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x558671105c98 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558671105c78 <col:20> '_Bool' lvalue Var 0x558671104f70 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x558671105d28 <line:715:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558671105cd0 <col:3> '_Bool' lvalue Var 0x5586711051c8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x558671105d10 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558671105cf0 <col:20> '_Bool' lvalue Var 0x558671104fe8 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x558671105da0 <line:716:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558671105d48 <col:3> '_Bool' lvalue Var 0x558671105240 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558671105d88 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558671105d68 <col:20> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x558671105e38 <line:717:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x558671105dc0 <col:3> '_Bool' lvalue Var 0x558671104f70 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x558671105e10 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x558671105de0 <col:27> 'int' 1
|   |-CallExpr 0x558671105e90 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558671105e78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558671105e58 <col:3> 'void ()' Function 0x5586710ab410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558671105ee8 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558671105ed0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558671105eb0 <col:3> 'void ()' Function 0x5586710ab350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558671105f80 <line:720:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558671105f08 <col:3> 'int' lvalue Var 0x5586711046b0 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x558671105f48 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558671105f28 <col:25> 'int' lvalue Var 0x558671104b00 'x' 'int'
|   |-CallExpr 0x558671105fd8 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558671105fc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558671105fa0 <col:3> 'void ()' Function 0x5586710ab410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558671106030 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558671106018 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558671105ff8 <col:3> 'void ()' Function 0x5586710ab350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558671106318 <line:723:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x558671106050 <col:3> 'int' lvalue Var 0x558671104d40 'z' 'int'
|   | `-ConditionalOperator 0x5586711062e8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x558671106110 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5586711060c8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5586711060b0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x558671106070 <col:7> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5586711060f8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5586711060e0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x558671106090 <col:25> '_Bool' lvalue Var 0x558671104f70 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5586711062d0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558671106130 <col:42> 'int' lvalue Var 0x5586711053b8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5586711062b0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x558671106280 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5586711061f0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5586711061a8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558671106190 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558671106150 <col:55> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5586711061d8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5586711061c0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558671106170 <col:73> '_Bool' lvalue Var 0x558671105150 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x558671106250 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558671106210 <col:90> 'int' lvalue Var 0x5586711054b0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x558671106268 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558671106230 <col:102> 'int' lvalue Var 0x558671104d40 'z' 'int'
|   |-BinaryOperator 0x558671106520 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558671106338 <col:3> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558671106508 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5586711064d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5586711063f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5586711063b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558671106398 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558671106358 <col:20> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5586711063e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5586711063c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558671106378 <col:38> '_Bool' lvalue Var 0x558671104f70 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558671106490 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558671106448 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558671106418 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5586711064c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5586711064a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558671106470 <col:66> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558671106808 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558671106540 <col:3> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5586711067f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5586711067c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5586711066e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558671106600 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5586711065b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5586711065a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558671106560 <col:20> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5586711065e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5586711065d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558671106580 <col:38> '_Bool' lvalue Var 0x558671104f70 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5586711066c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558671106678 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558671106660 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558671106620 <col:56> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5586711066a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558671106690 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558671106640 <col:74> '_Bool' lvalue Var 0x558671105150 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558671106778 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558671106730 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558671106700 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5586711067a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558671106790 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558671106758 <col:102> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x558671106a10 <line:726:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558671106828 <col:3> '_Bool' lvalue Var 0x558671104f70 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5586711069f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5586711069c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5586711068e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5586711068a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558671106888 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558671106848 <col:20> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5586711068d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5586711068b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558671106868 <col:38> '_Bool' lvalue Var 0x558671104f70 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558671106980 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558671106938 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558671106908 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5586711069b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558671106998 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558671106960 <col:66> '_Bool' lvalue Var 0x558671104f70 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x558671106cf8 <line:727:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558671106a30 <col:3> '_Bool' lvalue Var 0x558671105150 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x558671106ce0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558671106cb0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558671106bd0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558671106af0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558671106aa8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558671106a90 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558671106a50 <col:20> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558671106ad8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558671106ac0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558671106a70 <col:38> '_Bool' lvalue Var 0x558671104f70 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x558671106bb0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558671106b68 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558671106b50 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558671106b10 <col:56> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558671106b98 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558671106b80 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558671106b30 <col:74> '_Bool' lvalue Var 0x558671105150 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558671106c68 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558671106c20 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558671106bf0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558671106c98 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558671106c80 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558671106c48 <col:102> '_Bool' lvalue Var 0x558671105150 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x558671106d50 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558671106d38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558671106d18 <col:3> 'void ()' Function 0x5586710ab410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558671106da8 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558671106d90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558671106d70 <col:3> 'void ()' Function 0x5586710ab350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558671106e60 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558671106dc8 <col:3> 'int' lvalue Var 0x558671104590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558671106e40 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558671106e28 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558671106de8 <col:22> 'int' lvalue Var 0x558671104590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558671106e08 <col:41> 'int' 1
|   |-CallExpr 0x558671106eb8 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558671106ea0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558671106e80 <col:3> 'void ()' Function 0x5586710ab410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558671106f68 <line:732:3, col:36>
|     `-CallExpr 0x558671106f48 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558671106f30 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558671106ed8 <col:10> 'void *(void)' Function 0x5586710aae68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558671107120 prev 0x5586711040b8 <line:734:1, line:753:1> line:734:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x558671107088 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558671108360 <line:735:1, line:753:1>
|   |-CallExpr 0x558671107200 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5586711071e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5586711071c8 <col:3> 'void ()' Function 0x5586710ab350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558671107260 <line:737:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558671107220 <col:3> 'int' lvalue Var 0x558671104b00 'x' 'int'
|   | `-IntegerLiteral 0x558671107240 <col:7> 'int' 1
|   |-CallExpr 0x5586711072b8 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5586711072a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558671107280 <col:3> 'void ()' Function 0x5586710ab410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558671107310 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5586711072f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5586711072d8 <col:3> 'void ()' Function 0x5586710ab350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558671107388 <line:740:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558671107330 <col:3> 'int' lvalue Var 0x5586711047d0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x558671107370 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558671107350 <col:25> 'int' lvalue Var 0x558671104c20 'y' 'int'
|   |-CallExpr 0x5586711073e0 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5586711073c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5586711073a8 <col:3> 'void ()' Function 0x5586710ab410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558671107438 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558671107420 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558671107400 <col:3> 'void ()' Function 0x5586710ab350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558671107720 <line:743:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x558671107458 <col:3> 'int' lvalue Var 0x558671104d40 'z' 'int'
|   | `-ConditionalOperator 0x5586711076f0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x558671107518 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5586711074d0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5586711074b8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x558671107478 <col:7> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x558671107500 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5586711074e8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x558671107498 <col:25> '_Bool' lvalue Var 0x558671104fe8 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5586711076d8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558671107538 <col:42> 'int' lvalue Var 0x5586711053b8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5586711076b8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x558671107688 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5586711075f8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5586711075b0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558671107598 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558671107558 <col:55> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5586711075e0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5586711075c8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558671107578 <col:73> '_Bool' lvalue Var 0x5586711051c8 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x558671107658 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558671107618 <col:90> 'int' lvalue Var 0x5586711054b0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x558671107670 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558671107638 <col:102> 'int' lvalue Var 0x558671104d40 'z' 'int'
|   |-BinaryOperator 0x558671107928 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558671107740 <col:3> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558671107910 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5586711078e0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558671107800 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5586711077b8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5586711077a0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558671107760 <col:20> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5586711077e8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5586711077d0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558671107780 <col:38> '_Bool' lvalue Var 0x558671104fe8 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558671107898 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558671107850 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558671107820 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5586711078c8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5586711078b0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558671107878 <col:66> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558671107c10 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558671107948 <col:3> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558671107bf8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558671107bc8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558671107ae8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558671107a08 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5586711079c0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5586711079a8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558671107968 <col:20> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5586711079f0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5586711079d8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558671107988 <col:38> '_Bool' lvalue Var 0x558671104fe8 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x558671107ac8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558671107a80 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558671107a68 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558671107a28 <col:56> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558671107ab0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558671107a98 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558671107a48 <col:74> '_Bool' lvalue Var 0x5586711051c8 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558671107b80 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558671107b38 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558671107b08 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558671107bb0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558671107b98 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558671107b60 <col:102> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x558671107e18 <line:746:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558671107c30 <col:3> '_Bool' lvalue Var 0x558671104fe8 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x558671107e00 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558671107dd0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558671107cf0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558671107ca8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558671107c90 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558671107c50 <col:20> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558671107cd8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558671107cc0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558671107c70 <col:38> '_Bool' lvalue Var 0x558671104fe8 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558671107d88 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558671107d40 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558671107d10 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558671107db8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558671107da0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558671107d68 <col:66> '_Bool' lvalue Var 0x558671104fe8 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x558671108118 <line:747:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558671107e38 <col:3> '_Bool' lvalue Var 0x5586711051c8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x558671108100 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5586711080d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558671107ff0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558671107ef8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558671107eb0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558671107e98 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558671107e58 <col:20> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558671107ee0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558671107ec8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558671107e78 <col:38> '_Bool' lvalue Var 0x558671104fe8 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x558671107fd0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558671107f70 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558671107f58 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558671107f18 <col:56> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558671107fb8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558671107fa0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558671107f38 <col:74> '_Bool' lvalue Var 0x5586711051c8 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558671108088 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558671108040 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558671108010 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5586711080b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5586711080a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558671108068 <col:102> '_Bool' lvalue Var 0x5586711051c8 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x558671108170 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558671108158 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558671108138 <col:3> 'void ()' Function 0x5586710ab410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5586711081c8 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5586711081b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558671108190 <col:3> 'void ()' Function 0x5586710ab350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558671108280 <line:750:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5586711081e8 <col:3> 'int' lvalue Var 0x558671104590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558671108260 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558671108248 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558671108208 <col:22> 'int' lvalue Var 0x558671104590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558671108228 <col:41> 'int' 1
|   |-CallExpr 0x5586711082d8 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5586711082c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5586711082a0 <col:3> 'void ()' Function 0x5586710ab410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558671108350 <line:752:3, col:36>
|     `-CallExpr 0x558671108330 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558671108318 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5586711082f8 <col:10> 'void *(void)' Function 0x5586710aae68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5586711084a8 prev 0x558671104210 <line:754:1, line:786:1> line:754:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x558671108410 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55867110c0a0 <line:755:1, line:786:1>
|   |-CallExpr 0x558671108588 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558671108570 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558671108550 <col:3> 'void ()' Function 0x5586710ab350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5586711085e8 <line:757:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5586711085a8 <col:3> 'int' lvalue Var 0x558671104c20 'y' 'int'
|   | `-IntegerLiteral 0x5586711085c8 <col:7> 'int' 1
|   |-CallExpr 0x558671108640 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558671108628 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558671108608 <col:3> 'void ()' Function 0x5586710ab410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558671108698 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558671108680 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558671108660 <col:3> 'void ()' Function 0x5586710ab350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558671108748 <line:760:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5586711086b8 <col:3> '_Bool' lvalue Var 0x5586711055a0 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x558671108730 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x558671108710 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5586711086f8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5586711086d8 <col:19> 'void *(void)' Function 0x5586710aae68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5586711087f8 <line:761:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x558671108768 <col:3> '_Bool' lvalue Var 0x558671105618 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5586711087e0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5586711087c0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5586711087a8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x558671108788 <col:19> 'void *(void)' Function 0x5586710aae68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x558671108870 <line:762:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x558671108818 <col:3> '_Bool' lvalue Var 0x558671104dd8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x558671108858 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558671108838 <col:21> '_Bool' lvalue Var 0x558671105618 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5586711088e8 <line:763:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x558671108890 <col:3> 'int' lvalue Var 0x558671104e58 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5586711088d0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5586711088b0 <col:15> 'int' lvalue Var 0x558671104d40 'z' 'int'
|   |-BinaryOperator 0x558671108d20 <line:764:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x558671108908 <col:3> 'int' lvalue Var 0x558671104d40 'z' 'int'
|   | `-ConditionalOperator 0x558671108cf0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x558671108b18 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x558671108a38 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x558671108960 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x558671108948 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x558671108928 <col:8> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x558671108a18 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5586711089b0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x558671108998 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x558671108978 <col:27> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x558671108a00 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5586711089e8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5586711089c8 <col:46> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x558671108af8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x558671108a90 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x558671108a78 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x558671108a58 <col:65> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x558671108ae0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x558671108ac8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x558671108aa8 <col:84> '_Bool' lvalue Var 0x558671105240 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x558671108cd8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558671108b38 <col:101> 'int' lvalue Var 0x558671104d40 'z' 'int'
|   |   `-ParenExpr 0x558671108cb8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x558671108c88 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x558671108bf8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558671108bb0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558671108b98 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558671108b58 <col:106> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558671108be0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558671108bc8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558671108b78 <col:124> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x558671108c58 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558671108c18 <col:141> 'int' lvalue Var 0x5586711053b8 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x558671108c70 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558671108c38 <col:153> 'int' lvalue Var 0x5586711054b0 'z$w_buff1' 'int'
|   |-BinaryOperator 0x558671109250 <line:765:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x558671108d40 <col:3> 'int' lvalue Var 0x5586711053b8 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x558671109220 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5586711091f0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5586711091d8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x558671108d60 <col:15> '_Bool' lvalue Var 0x558671105618 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x558671109208 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558671108d80 <col:31> 'int' lvalue Var 0x5586711053b8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5586711091b8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x558671109188 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x558671108fb0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x558671108eb0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x558671108dd8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x558671108dc0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x558671108da0 <col:45> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x558671108e90 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x558671108e28 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x558671108e10 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x558671108df0 <col:64> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x558671108e78 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x558671108e60 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x558671108e40 <col:83> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x558671108f70 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x558671108f08 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x558671108ef0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x558671108ed0 <col:102> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x558671108f58 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x558671108f40 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x558671108f20 <col:121> '_Bool' lvalue Var 0x558671105240 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x558671109170 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558671108fd0 <col:138> 'int' lvalue Var 0x5586711053b8 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x558671109150 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x558671109120 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x558671109090 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x558671109048 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x558671109030 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x558671108ff0 <col:151> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x558671109078 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x558671109060 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x558671109010 <col:169> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5586711090f0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5586711090b0 <col:186> 'int' lvalue Var 0x5586711053b8 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x558671109108 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5586711090d0 <col:198> 'int' lvalue Var 0x5586711053b8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x558671109760 <line:766:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x558671109270 <col:3> 'int' lvalue Var 0x5586711054b0 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x558671109730 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x558671109700 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5586711096e8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x558671109290 <col:15> '_Bool' lvalue Var 0x558671105618 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x558671109718 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5586711092b0 <col:31> 'int' lvalue Var 0x5586711054b0 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x5586711096c8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x558671109698 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5586711094c0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5586711093e0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x558671109308 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5586711092f0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5586711092d0 <col:45> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5586711093c0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x558671109358 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x558671109340 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x558671109320 <col:64> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5586711093a8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x558671109390 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x558671109370 <col:83> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5586711094a0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x558671109438 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x558671109420 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x558671109400 <col:102> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x558671109488 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x558671109470 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x558671109450 <col:121> '_Bool' lvalue Var 0x558671105240 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x558671109680 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5586711094e0 <col:138> 'int' lvalue Var 0x5586711054b0 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x558671109660 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x558671109630 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5586711095a0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x558671109558 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x558671109540 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x558671109500 <col:151> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x558671109588 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x558671109570 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x558671109520 <col:169> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x558671109600 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5586711095c0 <col:186> 'int' lvalue Var 0x5586711054b0 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x558671109618 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5586711095e0 <col:198> 'int' lvalue Var 0x5586711054b0 'z$w_buff1' 'int'
|   |-BinaryOperator 0x558671109d08 <line:767:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x558671109780 <col:3> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558671109cf0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558671109cc0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x558671109c78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558671109c60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5586711097a0 <col:20> '_Bool' lvalue Var 0x558671105618 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558671109ca8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558671109c90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5586711097c0 <col:36> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x558671109c40 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x558671109c10 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5586711099d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5586711098f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x558671109818 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x558671109800 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5586711097e0 <col:55> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5586711098d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x558671109868 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x558671109850 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x558671109830 <col:74> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5586711098b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5586711098a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x558671109880 <col:93> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5586711099b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x558671109948 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x558671109930 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x558671109910 <col:112> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x558671109998 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x558671109980 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x558671109960 <col:131> '_Bool' lvalue Var 0x558671105240 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x558671109bf8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558671109be0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5586711099f0 <col:148> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x558671109bc0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x558671109b90 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x558671109ab0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558671109a68 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558671109a50 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558671109a10 <col:166> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558671109a98 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558671109a80 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558671109a30 <col:184> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x558671109b48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558671109b00 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558671109ad0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x558671109b78 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x558671109b60 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x558671109b28 <col:212> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55867110a2f8 <line:768:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x558671109d28 <col:3> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55867110a2e0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55867110a2b0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55867110a268 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55867110a250 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558671109d48 <col:20> '_Bool' lvalue Var 0x558671105618 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55867110a298 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55867110a280 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558671109d68 <col:36> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55867110a230 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55867110a200 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x558671109f78 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x558671109e98 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x558671109dc0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x558671109da8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x558671109d88 <col:55> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x558671109e78 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x558671109e10 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x558671109df8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x558671109dd8 <col:74> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x558671109e60 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x558671109e48 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x558671109e28 <col:93> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x558671109f58 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x558671109ef0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x558671109ed8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x558671109eb8 <col:112> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x558671109f40 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x558671109f28 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x558671109f08 <col:131> '_Bool' lvalue Var 0x558671105240 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55867110a1e8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55867110a1d0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558671109fc0 <col:148> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55867110a1b0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55867110a180 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55867110a080 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55867110a038 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55867110a020 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558671109fe0 <col:166> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55867110a068 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55867110a050 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55867110a000 <col:184> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55867110a150 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55867110a0d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55867110a0a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55867110a168 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55867110a128 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55867110a0f8 <col:219> 'int' 0
|   |-BinaryOperator 0x55867110a8a0 <line:769:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55867110a318 <col:3> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55867110a888 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55867110a858 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55867110a810 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55867110a7f8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55867110a338 <col:20> '_Bool' lvalue Var 0x558671105618 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55867110a840 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55867110a828 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55867110a358 <col:36> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x55867110a7d8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55867110a7a8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55867110a568 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55867110a488 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55867110a3b0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55867110a398 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55867110a378 <col:55> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55867110a468 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55867110a400 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55867110a3e8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55867110a3c8 <col:74> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55867110a450 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55867110a438 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55867110a418 <col:93> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55867110a548 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55867110a4e0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55867110a4c8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55867110a4a8 <col:112> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55867110a530 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55867110a518 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55867110a4f8 <col:131> '_Bool' lvalue Var 0x558671105240 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55867110a790 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55867110a778 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55867110a588 <col:148> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x55867110a758 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55867110a728 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55867110a648 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55867110a600 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55867110a5e8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55867110a5a8 <col:166> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55867110a630 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55867110a618 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55867110a5c8 <col:184> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55867110a6e0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55867110a698 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55867110a668 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55867110a710 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55867110a6f8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55867110a6c0 <col:212> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55867110ae68 <line:770:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55867110a8c0 <col:3> '_Bool' lvalue Var 0x558671105240 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55867110ae50 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55867110ae20 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55867110add8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55867110adc0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55867110a8e0 <col:20> '_Bool' lvalue Var 0x558671105618 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55867110ae08 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55867110adf0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55867110a900 <col:36> '_Bool' lvalue Var 0x558671105240 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x55867110ada0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55867110ad70 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55867110ab10 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55867110aa30 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55867110a958 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55867110a940 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55867110a920 <col:55> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55867110aa10 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55867110a9a8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55867110a990 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55867110a970 <col:74> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55867110a9f8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55867110a9e0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55867110a9c0 <col:93> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55867110aaf0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55867110aa88 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55867110aa70 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55867110aa50 <col:112> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55867110aad8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55867110aac0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55867110aaa0 <col:131> '_Bool' lvalue Var 0x558671105240 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55867110ad58 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55867110ad40 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55867110ab30 <col:148> '_Bool' lvalue Var 0x558671105240 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x55867110ad20 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55867110acf0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55867110abf0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55867110aba8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55867110ab90 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55867110ab50 <col:166> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55867110abd8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55867110abc0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55867110ab70 <col:184> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55867110acc0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55867110ac40 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55867110ac10 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55867110acd8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55867110ac98 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55867110ac68 <col:219> 'int' 0
|   |-BinaryOperator 0x55867110aee0 <line:771:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55867110ae88 <col:3> 'int' lvalue Var 0x5586711048f0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55867110aec8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55867110aea8 <col:25> 'int' lvalue Var 0x558671104d40 'z' 'int'
|   |-BinaryOperator 0x55867110b030 <line:772:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55867110af00 <col:3> 'int' lvalue Var 0x558671104d40 'z' 'int'
|   | `-ConditionalOperator 0x55867110b000 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55867110af98 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55867110af80 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55867110af20 <col:7> '_Bool' lvalue Var 0x558671104dd8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55867110afd0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55867110af40 <col:25> 'int' lvalue Var 0x558671104e58 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55867110afe8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55867110af60 <col:37> 'int' lvalue Var 0x558671104d40 'z' 'int'
|   |-BinaryOperator 0x55867110b0c8 <line:773:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55867110b050 <col:3> '_Bool' lvalue Var 0x558671104dd8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55867110b0a0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55867110b070 <col:28> 'int' 0
|   |-CallExpr 0x55867110b120 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55867110b108 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55867110b0e8 <col:3> 'void ()' Function 0x5586710ab410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55867110b178 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55867110b160 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55867110b140 <col:3> 'void ()' Function 0x5586710ab350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55867110b460 <line:776:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55867110b198 <col:3> 'int' lvalue Var 0x558671104d40 'z' 'int'
|   | `-ConditionalOperator 0x55867110b430 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55867110b258 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55867110b210 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55867110b1f8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55867110b1b8 <col:7> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55867110b240 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55867110b228 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55867110b1d8 <col:25> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55867110b418 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55867110b278 <col:42> 'int' lvalue Var 0x5586711053b8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55867110b3f8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55867110b3c8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55867110b338 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55867110b2f0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55867110b2d8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55867110b298 <col:55> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55867110b320 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55867110b308 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55867110b2b8 <col:73> '_Bool' lvalue Var 0x558671105240 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55867110b398 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55867110b358 <col:90> 'int' lvalue Var 0x5586711054b0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55867110b3b0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55867110b378 <col:102> 'int' lvalue Var 0x558671104d40 'z' 'int'
|   |-BinaryOperator 0x55867110b668 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55867110b480 <col:3> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55867110b650 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55867110b620 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55867110b540 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55867110b4f8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55867110b4e0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55867110b4a0 <col:20> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55867110b528 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55867110b510 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55867110b4c0 <col:38> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55867110b5d8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55867110b590 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55867110b560 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55867110b608 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55867110b5f0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55867110b5b8 <col:66> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55867110b950 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55867110b688 <col:3> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55867110b938 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55867110b908 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55867110b828 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55867110b748 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55867110b700 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55867110b6e8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55867110b6a8 <col:20> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55867110b730 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55867110b718 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55867110b6c8 <col:38> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55867110b808 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55867110b7c0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55867110b7a8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55867110b768 <col:56> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55867110b7f0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55867110b7d8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55867110b788 <col:74> '_Bool' lvalue Var 0x558671105240 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55867110b8c0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55867110b878 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55867110b848 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55867110b8f0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55867110b8d8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55867110b8a0 <col:102> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55867110bb58 <line:779:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55867110b970 <col:3> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55867110bb40 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55867110bb10 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55867110ba30 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55867110b9e8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55867110b9d0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55867110b990 <col:20> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55867110ba18 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55867110ba00 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55867110b9b0 <col:38> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55867110bac8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55867110ba80 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55867110ba50 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55867110baf8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55867110bae0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55867110baa8 <col:66> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55867110be40 <line:780:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55867110bb78 <col:3> '_Bool' lvalue Var 0x558671105240 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55867110be28 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55867110bdf8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55867110bd18 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55867110bc38 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55867110bbf0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55867110bbd8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55867110bb98 <col:20> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55867110bc20 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55867110bc08 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55867110bbb8 <col:38> '_Bool' lvalue Var 0x558671105060 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55867110bcf8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55867110bcb0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55867110bc98 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55867110bc58 <col:56> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55867110bce0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55867110bcc8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55867110bc78 <col:74> '_Bool' lvalue Var 0x558671105240 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55867110bdb0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55867110bd68 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55867110bd38 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55867110bde0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55867110bdc8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55867110bd90 <col:102> '_Bool' lvalue Var 0x558671105240 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55867110be98 <line:781:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55867110be80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55867110be60 <col:3> 'void ()' Function 0x5586710ab410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55867110bef0 <line:782:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55867110bed8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55867110beb8 <col:3> 'void ()' Function 0x5586710ab350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55867110bfa8 <line:783:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55867110bf10 <col:3> 'int' lvalue Var 0x558671104590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55867110bf88 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55867110bf70 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55867110bf30 <col:22> 'int' lvalue Var 0x558671104590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55867110bf50 <col:41> 'int' 1
|   |-CallExpr 0x55867110c018 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55867110c000 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55867110bfe0 <col:3> 'void ()' Function 0x5586710ab410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55867110c090 <line:785:3, col:36>
|     `-CallExpr 0x55867110c070 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55867110c058 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55867110c038 <col:10> 'void *(void)' Function 0x5586710aae68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55867110c1c0 prev 0x5586711042d8 <line:787:1, line:789:1> line:787:6 fence 'void ()'
| `-CompoundStmt 0x55867110c260 <line:788:1, line:789:1>
|-FunctionDecl 0x55867110c290 prev 0x558671104398 <line:790:1, line:792:1> line:790:6 isync 'void ()'
| `-CompoundStmt 0x55867110c330 <line:791:1, line:792:1>
|-FunctionDecl 0x55867110c360 prev 0x558671104458 <line:793:1, line:795:1> line:793:6 lwfence 'void ()'
| `-CompoundStmt 0x55867110c400 <line:794:1, line:795:1>
`-FunctionDecl 0x55867110c468 <line:796:1, line:820:1> line:796:5 main 'int ()'
  `-CompoundStmt 0x55867110e0c0 <line:797:1, line:820:1>
    |-DeclStmt 0x55867110c580 <line:798:3, col:18>
    | `-VarDecl 0x55867110c518 <col:3, col:13> col:13 used t1299 'pthread_t':'unsigned long'
    |-CallExpr 0x55867110c788 <line:799:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55867110c770 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55867110c598 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5586710eb8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55867110c5d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55867110c5b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55867110c518 't1299' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55867110c7c8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55867110c650 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55867110c628 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55867110c5f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55867110c7e0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55867110c670 <col:39> 'void *(void *)' Function 0x558671105730 'P0' 'void *(void *)'
    | `-ParenExpr 0x55867110c6f0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55867110c6c8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55867110c690 <col:52> 'int' 0
    |-DeclStmt 0x55867110c870 <line:800:3, col:18>
    | `-VarDecl 0x55867110c808 <col:3, col:13> col:13 used t1300 'pthread_t':'unsigned long'
    |-CallExpr 0x55867110ca18 <line:801:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55867110ca00 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55867110c888 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5586710eb8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55867110c8c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55867110c8a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55867110c808 't1300' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55867110ca58 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55867110c940 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55867110c918 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55867110c8e0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55867110ca70 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55867110c960 <col:39> 'void *(void *)' Function 0x558671107120 'P1' 'void *(void *)'
    | `-ParenExpr 0x55867110c9e0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55867110c9b8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55867110c980 <col:52> 'int' 0
    |-DeclStmt 0x55867110cb00 <line:802:3, col:18>
    | `-VarDecl 0x55867110ca98 <col:3, col:13> col:13 used t1301 'pthread_t':'unsigned long'
    |-CallExpr 0x55867110cca8 <line:803:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55867110cc90 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55867110cb18 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5586710eb8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55867110cb58 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55867110cb38 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55867110ca98 't1301' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55867110cce8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55867110cbd0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55867110cba8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55867110cb70 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55867110cd00 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55867110cbf0 <col:39> 'void *(void *)' Function 0x5586711084a8 'P2' 'void *(void *)'
    | `-ParenExpr 0x55867110cc70 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55867110cc48 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55867110cc10 <col:52> 'int' 0
    |-CallExpr 0x55867110cd50 <line:804:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55867110cd38 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55867110cd18 <col:3> 'void ()' Function 0x5586710ab350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55867110ce20 <line:805:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55867110cd70 <col:3> '_Bool' lvalue Var 0x558671104988 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55867110ce08 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55867110cde8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55867110cdd0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55867110cd90 <col:21> 'int' lvalue Var 0x558671104590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55867110cdb0 <col:41> 'int' 3
    |-CallExpr 0x55867110ce78 <line:806:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55867110ce60 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55867110ce40 <col:3> 'void ()' Function 0x5586710ab410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55867110cef0 <line:807:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55867110ced8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55867110ce98 <col:3> 'void (int)' Function 0x5586710aaca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55867110cf30 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55867110cf18 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55867110ceb8 <col:21> '_Bool' lvalue Var 0x558671104988 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55867110cf80 <line:808:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55867110cf68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55867110cf48 <col:3> 'void ()' Function 0x5586710ab350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55867110d278 <line:809:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55867110cfa0 <col:3> 'int' lvalue Var 0x558671104d40 'z' 'int'
    | `-ConditionalOperator 0x55867110d248 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55867110d070 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55867110d028 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55867110d010 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55867110cfc0 <col:7> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55867110d058 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55867110d040 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55867110cff0 <col:25> '_Bool' lvalue Var 0x558671104ed0 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55867110d230 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55867110d090 <col:42> 'int' lvalue Var 0x5586711053b8 'z$w_buff0' 'int'
    |   `-ParenExpr 0x55867110d210 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55867110d1e0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55867110d150 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55867110d108 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55867110d0f0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55867110d0b0 <col:55> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55867110d138 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55867110d120 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55867110d0d0 <col:73> '_Bool' lvalue Var 0x5586711050d8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55867110d1b0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55867110d170 <col:90> 'int' lvalue Var 0x5586711054b0 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55867110d1c8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55867110d190 <col:102> 'int' lvalue Var 0x558671104d40 'z' 'int'
    |-BinaryOperator 0x55867110d480 <line:810:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55867110d298 <col:3> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55867110d468 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55867110d438 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55867110d358 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55867110d310 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55867110d2f8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55867110d2b8 <col:20> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55867110d340 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55867110d328 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55867110d2d8 <col:38> '_Bool' lvalue Var 0x558671104ed0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55867110d3f0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55867110d3a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55867110d378 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55867110d420 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55867110d408 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55867110d3d0 <col:66> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55867110d768 <line:811:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55867110d4a0 <col:3> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55867110d750 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55867110d720 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55867110d640 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55867110d560 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55867110d518 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55867110d500 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55867110d4c0 <col:20> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55867110d548 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55867110d530 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55867110d4e0 <col:38> '_Bool' lvalue Var 0x558671104ed0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55867110d620 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55867110d5d8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55867110d5c0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55867110d580 <col:56> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55867110d608 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55867110d5f0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55867110d5a0 <col:74> '_Bool' lvalue Var 0x5586711050d8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55867110d6d8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55867110d690 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55867110d660 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55867110d708 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55867110d6f0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55867110d6b8 <col:102> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55867110d970 <line:812:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55867110d788 <col:3> '_Bool' lvalue Var 0x558671104ed0 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55867110d958 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55867110d928 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55867110d848 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55867110d800 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55867110d7e8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55867110d7a8 <col:20> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55867110d830 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55867110d818 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55867110d7c8 <col:38> '_Bool' lvalue Var 0x558671104ed0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55867110d8e0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55867110d898 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55867110d868 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55867110d910 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55867110d8f8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55867110d8c0 <col:66> '_Bool' lvalue Var 0x558671104ed0 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55867110dc58 <line:813:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55867110d990 <col:3> '_Bool' lvalue Var 0x5586711050d8 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55867110dc40 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55867110dc10 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55867110db30 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55867110da50 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55867110da08 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55867110d9f0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55867110d9b0 <col:20> '_Bool' lvalue Var 0x558671105430 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55867110da38 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55867110da20 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55867110d9d0 <col:38> '_Bool' lvalue Var 0x558671104ed0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55867110db10 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55867110dac8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55867110dab0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55867110da70 <col:56> '_Bool' lvalue Var 0x558671105528 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55867110daf8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55867110dae0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55867110da90 <col:74> '_Bool' lvalue Var 0x5586711050d8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55867110dbc8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55867110db80 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55867110db50 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55867110dbf8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55867110dbe0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55867110dba8 <col:102> '_Bool' lvalue Var 0x5586711050d8 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55867110dcb0 <line:814:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55867110dc98 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55867110dc78 <col:3> 'void ()' Function 0x5586710ab410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55867110dd08 <line:815:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55867110dcf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55867110dcd0 <col:3> 'void ()' Function 0x5586710ab350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55867110df40 <line:816:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x55867110dd28 <col:3> '_Bool' lvalue Var 0x558671104a00 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55867110df28 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55867110df10 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55867110def0 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x55867110ded0 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x55867110de38 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x55867110dda0 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x55867110dd88 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x55867110dd48 <col:23> 'int' lvalue Var 0x5586711046b0 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x55867110dd68 <col:46> 'int' 0
    |         | `-BinaryOperator 0x55867110de18 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55867110de00 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55867110ddc0 <col:51> 'int' lvalue Var 0x5586711047d0 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x55867110dde0 <col:74> 'int' 0
    |         `-BinaryOperator 0x55867110deb0 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x55867110de98 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55867110de58 <col:79> 'int' lvalue Var 0x5586711048f0 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x55867110de78 <col:102> 'int' 0
    |-CallExpr 0x55867110df98 <line:817:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55867110df80 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55867110df60 <col:3> 'void ()' Function 0x5586710ab410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55867110e038 <line:818:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55867110e020 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55867110dfb8 <col:3> 'void (int)' Function 0x5586710ab0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55867110e078 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55867110e060 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55867110e000 <col:21> '_Bool' lvalue Var 0x558671104a00 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55867110e0b0 <line:819:3, col:10>
      `-IntegerLiteral 0x55867110e090 <col:10> 'int' 0
