TranslationUnitDecl 0x565150213f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x565150214848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x565150214520 '__int128'
|-TypedefDecl 0x5651502148b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x565150214540 'unsigned __int128'
|-TypedefDecl 0x565150214bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x565150214990 'struct __NSConstantString_tag'
|   `-Record 0x565150214910 '__NSConstantString_tag'
|-TypedefDecl 0x565150214c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x565150214c20 'char *'
|   `-BuiltinType 0x565150214020 'char'
|-TypedefDecl 0x565150253b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x565150214f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x565150214d40 'struct __va_list_tag'
|     `-Record 0x565150214cc0 '__va_list_tag'
|-FunctionDecl 0x565150253ca0 <pthread-wmm/safe001_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x565150253bd0 <col:31> col:34 'int'
|-FunctionDecl 0x565150253e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x565150253f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5651502540d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x565150254048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x565150254308 <col:40, col:99>
|   |-IfStmt 0x5651502542d8 <col:42, col:88>
|   | |-UnaryOperator 0x5651502541b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5651502541a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x565150254180 <col:47> 'int' lvalue ParmVar 0x565150254048 'expression' 'int'
|   | `-CompoundStmt 0x5651502542c0 <col:59, col:88>
|   |   `-LabelStmt 0x5651502542a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x565150254238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x565150254220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5651502541d0 <col:68> 'void () __attribute__((noreturn))' Function 0x565150253f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5651502542f0 <col:89>
|   `-ReturnStmt 0x5651502542f8 <col:91>
|-FunctionDecl 0x565150254350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x565150254410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x565150254790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5651502544c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x565150254548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5651502545c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x565150254648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x565150254850 <line:10:22>
|-FunctionDecl 0x56515027a8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5651502548c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x565150254940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5651502549c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x565150254a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56515027a960 <line:13:22>
|-FunctionDecl 0x56515027ac10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56515027a9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x56515027aa50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x56515027aad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x56515027acc8 <line:15:22>
|-TypedefDecl 0x56515027ad38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5651502140e0 'unsigned char'
|-TypedefDecl 0x56515027ada8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x565150214100 'unsigned short'
|-TypedefDecl 0x56515027ae18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x565150214120 'unsigned int'
|-TypedefDecl 0x56515027ae88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x565150214140 'unsigned long'
|-TypedefDecl 0x56515027aef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x565150214040 'signed char'
|-TypedefDecl 0x56515027af68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5651502140e0 'unsigned char'
|-TypedefDecl 0x56515027afd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x565150214060 'short'
|-TypedefDecl 0x56515027b048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x565150214100 'unsigned short'
|-TypedefDecl 0x56515027b0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x565150214080 'int'
|-TypedefDecl 0x56515027b128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x565150214120 'unsigned int'
|-TypedefDecl 0x56515027b198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5651502140a0 'long'
|-TypedefDecl 0x56515027b208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x565150214140 'unsigned long'
|-TypedefDecl 0x56515027b278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5651502140a0 'long'
|-TypedefDecl 0x56515027b2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x565150214140 'unsigned long'
|-TypedefDecl 0x56515027b358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x565150214140 'unsigned long'
|-TypedefDecl 0x56515027b3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x565150214120 'unsigned int'
|-TypedefDecl 0x56515027b438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x565150214120 'unsigned int'
|-TypedefDecl 0x56515027b4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x565150214140 'unsigned long'
|-TypedefDecl 0x56515027b518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x565150214140 'unsigned long'
|-TypedefDecl 0x56515027b588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x565150214120 'unsigned int'
|-TypedefDecl 0x56515027b5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x565150214140 'unsigned long'
|-TypedefDecl 0x56515027b668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5651502140a0 'long'
|-TypedefDecl 0x56515027b6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5651502140a0 'long'
|-TypedefDecl 0x56515027b748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x565150214080 'int'
|-RecordDecl 0x56515027b7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x56515027b918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x56515027b9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x56515027b970 'struct __fsid_t' sugar
|   `-RecordType 0x56515027b820 '__fsid_t'
|     `-Record 0x56515027b7a0 ''
|-TypedefDecl 0x56515027ba58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5651502140a0 'long'
|-TypedefDecl 0x56515027bac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x565150214140 'unsigned long'
|-TypedefDecl 0x56515027bb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x565150214140 'unsigned long'
|-TypedefDecl 0x56515027bba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x565150214120 'unsigned int'
|-TypedefDecl 0x56515027bc18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5651502140a0 'long'
|-TypedefDecl 0x56515027bc88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x565150214120 'unsigned int'
|-TypedefDecl 0x56515027bcf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5651502140a0 'long'
|-TypedefDecl 0x56515027bd68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x565150214080 'int'
|-TypedefDecl 0x56515027bdd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x565150214080 'int'
|-TypedefDecl 0x56515027be48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x565150214080 'int'
|-TypedefDecl 0x56515027beb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5651502147a0 'void *'
|   `-BuiltinType 0x565150213fe0 'void'
|-TypedefDecl 0x56515027bf28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5651502140a0 'long'
|-TypedefDecl 0x56515027bf98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5651502140a0 'long'
|-TypedefDecl 0x56515027c008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5651502140a0 'long'
|-TypedefDecl 0x56515027c078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x565150214140 'unsigned long'
|-TypedefDecl 0x56515027c0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x565150214140 'unsigned long'
|-TypedefDecl 0x56515027c158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x565150214140 'unsigned long'
|-TypedefDecl 0x56515027c1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x565150214140 'unsigned long'
|-TypedefDecl 0x56515027c238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5651502140a0 'long'
|-TypedefDecl 0x56515027c2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5651502140a0 'long'
|-TypedefDecl 0x56515027c318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5651502140a0 'long'
|-TypedefDecl 0x56515027c388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x565150214140 'unsigned long'
|-TypedefDecl 0x56515027c418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x56515027c3e0 '__off64_t' sugar
|   |-Typedef 0x56515027b6d8 '__off64_t'
|   `-BuiltinType 0x5651502140a0 'long'
|-TypedefDecl 0x56515027c510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x56515027c4d0 '__quad_t *'
|   `-TypedefType 0x56515027c470 '__quad_t' sugar
|     |-Typedef 0x56515027b278 '__quad_t'
|     `-BuiltinType 0x5651502140a0 'long'
|-TypedefDecl 0x56515027c580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x565150214c20 'char *'
|   `-BuiltinType 0x565150214020 'char'
|-TypedefDecl 0x56515027c5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5651502140a0 'long'
|-TypedefDecl 0x56515027c660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x565150214120 'unsigned int'
|-FunctionDecl 0x56515027c7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x56515027c6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x56515027cae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x56515027cad8 <line:72:3, col:34>
|     `-CallExpr 0x56515027ca98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x56515027ca80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56515027ca10 <col:10> '<builtin fn type>' Function 0x56515027c880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x56515027cac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56515027ca30 <col:29> 'unsigned int' lvalue ParmVar 0x56515027c6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x56515027c880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x56515027c920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x56515027c990 <col:10> Implicit
| `-ConstAttr 0x56515027c9e8 <col:10> Implicit
|-FunctionDecl 0x56515027cc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x56515027cb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x56515027cf58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x56515027cf48 <line:77:3, col:34>
|     `-CallExpr 0x56515027cf08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x56515027cef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56515027ce78 <col:10> '<builtin fn type>' Function 0x56515027cce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x56515027cf30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x56515027ce98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x56515027cb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x56515027cce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x56515027cd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x56515027cdf8 <col:10> Implicit
| `-ConstAttr 0x56515027ce50 <col:10> Implicit
|-TypedefDecl 0x56515027cf88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x565150214140 'unsigned long'
|-TypedefDecl 0x56515027d018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x56515027cfe0 '__time_t' sugar
|   |-Typedef 0x56515027bc18 '__time_t'
|   `-BuiltinType 0x5651502140a0 'long'
|-RecordDecl 0x56515027d070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x56515027d128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x56515027d1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x56515027d248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x56515027d210 '__pid_t' sugar
|   |-Typedef 0x56515027b748 '__pid_t'
|   `-BuiltinType 0x565150214080 'int'
|-RecordDecl 0x56515027d2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x56515027d360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x56515027d3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x56515027d470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x56515027d4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x565150214140 'unsigned long'
|-RecordDecl 0x56515027d530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x56515027d7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x56515027f8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x56515027d810 'struct cpu_set_t' sugar
|   `-RecordType 0x56515027d5b0 'cpu_set_t'
|     `-Record 0x56515027d530 ''
|-FunctionDecl 0x56515027fb88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x56515027f958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56515027fa60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x56515027fc38 <line:107:19>
|-FunctionDecl 0x56515027fe10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x56515027fca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x56515027feb8 <col:69>
|-FunctionDecl 0x565150280030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x56515027ff20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5651502800d8 <col:64>
|-FunctionDecl 0x565150280398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x565150280140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x565150280278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x565150280448 <line:113:22>
|-FunctionDecl 0x5651502806c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5651502804b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5651502805a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x565150280778 <col:88>
|-FunctionDecl 0x565150280a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5651502807e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5651502808c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x565150280950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x565150280b50 <col:62>
|-FunctionDecl 0x565150280cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x565150280bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x565150280d70 <col:63>
|-FunctionDecl 0x565150280e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x565150280f38 <col:47>
|-FunctionDecl 0x565150281040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x565150280fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5651502810e8 <col:69>
|-FunctionDecl 0x5651502811f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x565150281158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x565150281298 <col:69>
|-FunctionDecl 0x565150281558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x565150281300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x565150281438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x565150281608 <col:88>
|-TypedefDecl 0x565150281698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x565150281660 '__clock_t' sugar
|   |-Typedef 0x56515027ba58 '__clock_t'
|   `-BuiltinType 0x5651502140a0 'long'
|-TypedefDecl 0x565150281728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5651502816f0 '__clockid_t' sugar
|   |-Typedef 0x56515027be48 '__clockid_t'
|   `-BuiltinType 0x565150214080 'int'
|-TypedefDecl 0x5651502817b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x565150281780 '__timer_t' sugar
|   |-Typedef 0x56515027beb8 '__timer_t'
|   `-PointerType 0x5651502147a0 'void *'
|     `-BuiltinType 0x565150213fe0 'void'
|-RecordDecl 0x565150281810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5651502818e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x565150281950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5651502819b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x565150281a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x565150281a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x565150281af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x565150281b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x565150281bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x565150281c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x565150281c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x565150281cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x565150281d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x565150281e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x565150281e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x565150281f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x565150282100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5651502821a0 <col:45>
|-FunctionDecl 0x565150282380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x565150282270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x565150282428 <col:54>
|-FunctionDecl 0x565150282628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x565150282490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x565150282508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5651502826d8 <line:157:22>
| `-ConstAttr 0x565150282730 <col:63>
|-FunctionDecl 0x565150283560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x565150282828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x565150283608 <col:56>
|-FunctionDecl 0x5651502839b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x565150283678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5651502836f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x565150283770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x565150283868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x565150283a70 <col:54>
|-RecordDecl 0x565150283ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x565150283b78 parent 0x565150213f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x565150283dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x565150283e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x565150283ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x565150283f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x565150284038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x565150284158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x565150284100 'struct __locale_struct *'
|   `-ElaboratedType 0x565150284090 'struct __locale_struct' sugar
|     `-RecordType 0x565150283b50 'struct __locale_struct'
|       `-Record 0x565150283ac8 '__locale_struct'
|-TypedefDecl 0x565150284208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5651502841d0 '__locale_t' sugar
|   |-Typedef 0x565150284158 '__locale_t'
|   `-PointerType 0x565150284100 'struct __locale_struct *'
|     `-ElaboratedType 0x565150284090 'struct __locale_struct' sugar
|       `-RecordType 0x565150283b50 'struct __locale_struct'
|         `-Record 0x565150283ac8 '__locale_struct'
|-FunctionDecl 0x565150284610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x565150284278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5651502842f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x565150284370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x565150284400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x565150284478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5651502846d8 <col:40>
|-FunctionDecl 0x5651502848c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5651502847a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x565150284970 <col:66>
|-FunctionDecl 0x565150284a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5651502849d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x565150284b28 <col:69>
|-FunctionDecl 0x565150284d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x565150284b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x565150284c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x565150284e08 <col:52>
|-FunctionDecl 0x565150284fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x565150284e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x565150284f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x565150285060 <col:55>
|-FunctionDecl 0x5651502851f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5651502850e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5651502852a0 <col:62>
|-FunctionDecl 0x565150285418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x565150285308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5651502854c0 <col:60>
|-FunctionDecl 0x565150285718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x565150285578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5651502855f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5651502857c8 <col:44>
|-FunctionDecl 0x5651502859d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x565150285830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5651502858b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x565150285a88 <col:49>
|-VarDecl 0x565150285b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x565150285c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x565150285c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x565150285d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x565150285e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x565150285f20 <col:42>
|-VarDecl 0x565150285f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x565150286010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x565150286198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x565150286088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x565150286240 <col:57>
|-FunctionDecl 0x565150286350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5651502862c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5651502863f8 <col:56>
|-FunctionDecl 0x565150287540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x565150286478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5651502875e8 <col:59>
|-FunctionDecl 0x5651502876f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x565150287658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x565150287798 <col:48>
| `-ConstAttr 0x5651502877f0 <col:89>
|-FunctionDecl 0x565150287a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5651502878a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x565150287938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x565150287cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x565150287b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x565150287bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x565150287d68 <col:88>
|-FunctionDecl 0x565150287f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x565150287dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x565150287e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x565150287fb0 <col:88>
|-FunctionDecl 0x5651502881c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x565150288018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5651502880a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x565150288278 <line:208:22>
|-FunctionDecl 0x5651502885e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5651502882e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x565150288360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5651502883f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x565150288480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5651502888e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5651502886e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5651502887c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x565150288998 <col:85>
|-FunctionDecl 0x565150288d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x565150288a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x565150288b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x565150288c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x565150288e40 <col:52>
|-FunctionDecl 0x565150288fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x565150288ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x565150289060 <col:61>
|-FunctionDecl 0x565150289560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5651502890c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x565150289148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x565150289278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x565150289368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x565150289620 <col:62>
|-FunctionDecl 0x565150289838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x565150289688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x565150289718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5651502898e8 <line:221:22>
|-FunctionDecl 0x5651502899e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x565150289950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x565150289a90 <col:65>
|-TypedefDecl 0x565150289b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x565150214140 'unsigned long'
|-RecordDecl 0x565150289b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x565150289ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x565150289d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x565150289db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x565150289d60 'union pthread_attr_t' sugar
|   `-RecordType 0x565150289be0 'union pthread_attr_t'
|     `-Record 0x565150289b58 'pthread_attr_t'
|-RecordDecl 0x565150289e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x565150289f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x56515028a000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x56515028a0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x56515028a050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x565150289e90 'struct __pthread_internal_list'
|     `-Record 0x565150289e10 '__pthread_internal_list'
|-RecordDecl 0x56515028a120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x56515028a1c8 parent 0x565150213f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x56515028a2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56515028a308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x56515028a370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x56515028a3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x56515028a440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x56515028a4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x56515028e580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x56515028e630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x56515028e720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x56515028e788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56515028e910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x56515028e8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x56515028a1a0 'pthread_mutex_t'
|     `-Record 0x56515028a120 ''
|-RecordDecl 0x56515028e980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x56515028eac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56515028eb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56515028ebe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x56515028eb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x56515028ea00 'pthread_mutexattr_t'
|     `-Record 0x56515028e980 ''
|-RecordDecl 0x56515028ec50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x56515028ecf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x56515028edc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56515028ee28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x56515028ee90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x56515028eef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x56515028ef60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x56515028efc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x56515028f030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x56515028f098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x56515028f150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe001_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe001_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x56515028f240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x56515028f2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x56515028f3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x56515028f380 'union pthread_cond_t' sugar
|   `-RecordType 0x56515028ecd0 'pthread_cond_t'
|     `-Record 0x56515028ec50 ''
|-RecordDecl 0x56515028f450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x56515028f590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56515028f5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56515028f6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x56515028f650 'union pthread_condattr_t' sugar
|   `-RecordType 0x56515028f4d0 'pthread_condattr_t'
|     `-Record 0x56515028f450 ''
|-TypedefDecl 0x56515028f738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x565150214120 'unsigned int'
|-TypedefDecl 0x56515028f7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x565150214080 'int'
|-RecordDecl 0x56515028f800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x56515028f8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x56515028f970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56515028f9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x56515028fa40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x56515028faa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x56515028fb10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x56515028fb78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x56515028fbe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x56515028fc48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x56515028fcb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x56515028fd18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x56515028fd80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x56515028fe30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe001_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe001_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x56515028fed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56515028ff40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x565150290090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x565150290030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x56515028f880 'pthread_rwlock_t'
|     `-Record 0x56515028f800 ''
|-RecordDecl 0x565150290100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x565150290240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5651502902a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x565150290360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x565150290300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x565150290180 'pthread_rwlockattr_t'
|     `-Record 0x565150290100 ''
|-TypedefDecl 0x5651502903e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x565150214084 'volatile int' volatile
|   `-BuiltinType 0x565150214080 'int'
|-RecordDecl 0x565150290440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5651502925b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x565150292618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5651502926d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x565150292670 'union pthread_barrier_t' sugar
|   `-RecordType 0x5651502904c0 'pthread_barrier_t'
|     `-Record 0x565150290440 ''
|-RecordDecl 0x565150292740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x565150292840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5651502928a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x565150292960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x565150292900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5651502927c0 'pthread_barrierattr_t'
|     `-Record 0x565150292740 ''
|-TypedefDecl 0x565150292a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x565150292a10 'long [8]' 8 
|   `-BuiltinType 0x5651502140a0 'long'
|-EnumDecl 0x565150292ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x565150292b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x565150292be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x565150292c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x565150292d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x565150292d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x565150292da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x565150292df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x565150292e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x565150292e68 <col:26> 'int'
| |   `-DeclRefExpr 0x565150292e48 <col:26> 'int' EnumConstant 0x565150292d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x565150292f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x565150292ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x565150292ed0 <col:29> 'int' EnumConstant 0x565150292d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x565150292f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x565150292f78 <col:30> 'int'
| |   `-DeclRefExpr 0x565150292f58 <col:30> 'int' EnumConstant 0x565150292da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x565150293018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x565150293000 <col:27> 'int'
|     `-DeclRefExpr 0x565150292fe0 <col:27> 'int' EnumConstant 0x565150292e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x565150293068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x565150293138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5651502931c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5651502931a8 <col:30> 'int'
| |   `-DeclRefExpr 0x565150293188 <col:30> 'int' EnumConstant 0x565150293138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x565150293210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x565150293298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x565150293280 <col:29> 'int'
|     `-DeclRefExpr 0x565150293260 <col:29> 'int' EnumConstant 0x565150293210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5651502932e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5651502933b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x565150293408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x565150293458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5651502934a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5651502935c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x565150293610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x565150293660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5651502936e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5651502936d0 <col:31> 'int'
|     `-DeclRefExpr 0x5651502936b0 <col:31> 'int' EnumConstant 0x5651502935c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x565150293738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x565150293808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x565150293858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5651502938a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x565150293978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5651502939c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x565150293a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x565150293ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x565150293b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x565150293b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x565150293dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x565150293e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x565150293e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x565150293fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x565150294008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5651502940d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x565150294128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x565150294178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x565150294248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x565150294298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5651502948f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x565150294390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5651502944a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5651502946e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x565150294760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5651502949b8 <col:47>
| |-NonNullAttr 0x565150294a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x565150294a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x565150294b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x565150294aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x565150294dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x565150294c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x565150294ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x565150294f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x565150294e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x565150295040 <col:60>
|-FunctionDecl 0x565150295190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x565150295230 <col:54>
| `-ConstAttr 0x565150295288 <col:95>
|-FunctionDecl 0x565150295458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5651502952c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x565150295338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x565150295508 <line:394:19>
| `-ConstAttr 0x565150295560 <col:60>
|-FunctionDecl 0x565150295f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x565150295e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x565150296010 <col:71>
| `-NonNullAttr 0x565150296068 <col:112, col:126> 1
|-FunctionDecl 0x565150296170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5651502960b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x565150296218 <line:397:22>
| `-NonNullAttr 0x565150296270 <col:63, col:77> 1
|-FunctionDecl 0x565150296498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5651502962b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x565150296338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x565150296548 <line:400:22>
| `-NonNullAttr 0x5651502965a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5651502967a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5651502965e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x565150296668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x565150296858 <line:403:22>
| `-NonNullAttr 0x5651502968b0 <col:63, col:77> 1
|-FunctionDecl 0x565150296b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5651502968f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5651502969a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x565150296bb8 <line:406:22>
| `-NonNullAttr 0x565150296c10 <col:63, col:80> 1 2
|-FunctionDecl 0x565150297e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x565150296c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x565150296cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x565150297ef8 <line:409:22>
| `-NonNullAttr 0x565150297f50 <col:63, col:77> 1
|-FunctionDecl 0x565150298188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x565150297f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x565150298028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x565150298238 <line:412:22>
| `-NonNullAttr 0x565150298290 <col:63, col:80> 1 2
|-FunctionDecl 0x5651502984c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5651502982d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x565150298368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x565150298578 <col:37>
| `-NonNullAttr 0x5651502985d0 <col:78, col:95> 1 2
|-FunctionDecl 0x5651502987b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x565150298618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x565150298698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x565150298868 <line:418:22>
| `-NonNullAttr 0x5651502988c0 <col:63, col:80> 1 2
|-FunctionDecl 0x565150298a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x565150298908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x565150298988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x565150298af8 <line:420:22>
| `-NonNullAttr 0x565150298b50 <col:63, col:77> 1
|-FunctionDecl 0x565150298cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x565150298b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x565150298c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x565150298da8 <line:423:22>
| `-NonNullAttr 0x565150299e30 <col:63, col:80> 1 2
|-FunctionDecl 0x565150299fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x565150299e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x565150299ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x56515029a068 <line:426:22>
| `-NonNullAttr 0x56515029a0c0 <col:63, col:77> 1
|-FunctionDecl 0x56515029a268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56515029a108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56515029a188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56515029a318 <line:429:22>
| `-NonNullAttr 0x56515029a370 <col:63, col:80> 1 2
|-FunctionDecl 0x56515029a4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56515029a3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56515029a438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x56515029a5a8 <line:431:22>
| `-NonNullAttr 0x56515029a600 <col:63, col:77> 1
|-FunctionDecl 0x56515029a828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x56515029a648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56515029a6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x56515029a8d8 <line:434:22>
| |-NonNullAttr 0x56515029a930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x56515029a968 <col:100> "" ""
|-FunctionDecl 0x56515029ab78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x56515029a9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56515029aa38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x56515029ac28 <line:437:22>
| |-NonNullAttr 0x56515029ac80 <col:63, col:77> 1
| `-DeprecatedAttr 0x56515029acb8 <col:97> "" ""
|-FunctionDecl 0x56515029aeb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56515029ad08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56515029ad80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56515029af68 <line:440:22>
| `-NonNullAttr 0x56515029afc0 <col:63, col:80> 1 2
|-FunctionDecl 0x56515029b140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56515029b008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56515029b080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56515029b1f0 <line:443:22>
| `-NonNullAttr 0x56515029b248 <col:63, col:77> 1
|-FunctionDecl 0x56515029b538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56515029b298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56515029b318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x56515029b390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56515029b5f0 <line:447:22>
| `-NonNullAttr 0x56515029b648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x56515029b8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x56515029b6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56515029b720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x56515029b798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56515029b9b0 <col:43>
| `-NonNullAttr 0x56515029ba08 <col:84, col:98> 1
|-FunctionDecl 0x56515029bcc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56515029ba58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56515029bad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x56515029bb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x56515029bd80 <line:452:22>
| `-NonNullAttr 0x56515029bdd8 <col:63, col:77> 3
|-FunctionDecl 0x56515029c0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56515029be50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56515029bed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x56515029bf60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56515029c1a0 <line:456:22>
| `-NonNullAttr 0x56515029c1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x56515029c3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x56515029c248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56515029c2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x56515029c498 <line:458:22>
|-FunctionDecl 0x56515029c868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x56515029c560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x56515029c700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x56515029c918 <col:52, col:69> 1 2
|-FunctionDecl 0x56515029cac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x56515029c9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x56515029ca20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x56515029cca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x56515029cb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x56515029cc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x56515029ce60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x56515029cd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x56515029cfa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x56515029d040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x56515029d0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x56515029d1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x56515029d240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x56515029d410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe001_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x56515029d508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x56515029d5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x56515029d560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x56515029d0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x56515029d040 ''
| `-AlignedAttr 0x56515029d618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x56515029d690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x56515029d7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x56515029d858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x56515029d8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x56515029d928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x56515029db30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56515029da20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56515029dc78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56515029dbe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56515029de70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56515029dd30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x56515029df18 <line:487:22>
|-RecordDecl 0x56515029df70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x56515029e288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x56515029e0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x56515029e168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x56515029e338 <col:86>
| `-ReturnsTwiceAttr 0x56515029e390 <col:12> Implicit
|-FunctionDecl 0x56515029e6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56515029e460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x56515029e570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x56515029e768 <line:493:22>
| `-NonNullAttr 0x56515029e7c0 <col:63, col:77> 1
|-FunctionDecl 0x56515029e938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56515029e808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56515029e9e0 <line:495:22>
| `-NonNullAttr 0x56515029ea38 <col:63, col:77> 1
|-FunctionDecl 0x56515029eb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56515029ea88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56515029ebe8 <line:497:22>
| `-NonNullAttr 0x56515029ec40 <col:52, col:66> 1
|-FunctionDecl 0x56515029ed40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56515029ec88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56515029ede8 <line:499:22>
| `-NonNullAttr 0x56515029ee40 <col:52, col:66> 1
|-FunctionDecl 0x56515029f088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56515029ee98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56515029ef28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56515029f138 <col:36>
| `-NonNullAttr 0x56515029f190 <col:66, col:83> 1 2
|-FunctionDecl 0x56515029f290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56515029f1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56515029f338 <line:504:22>
| `-NonNullAttr 0x56515029f390 <col:52, col:66> 1
|-FunctionDecl 0x56515029f628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56515029f440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56515029f4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56515029f6d8 <line:508:22>
| `-NonNullAttr 0x56515029f730 <col:63, col:80> 1 2
|-FunctionDecl 0x56515029f9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x56515029f778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56515029f7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x56515029f878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x56515029fab0 <line:512:22>
| `-NonNullAttr 0x56515029fb08 <col:63, col:80> 1 3
|-FunctionDecl 0x56515029fc10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56515029fb58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56515029fcb8 <line:514:22>
| `-NonNullAttr 0x56515029fd10 <col:63, col:77> 1
|-FunctionDecl 0x56515029ff38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56515029fdc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56515029ffe0 <line:516:22>
| `-NonNullAttr 0x5651502a0038 <col:63, col:77> 1
|-FunctionDecl 0x5651502a0140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5651502a0088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5651502a01e8 <line:518:22>
| `-NonNullAttr 0x5651502a0240 <col:63, col:77> 1
|-FunctionDecl 0x5651502a0468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5651502a0288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5651502a0308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5651502a0518 <line:522:22>
| `-NonNullAttr 0x5651502a0570 <col:63, col:80> 1 2
|-FunctionDecl 0x5651502a0778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5651502a05b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5651502a0638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5651502a0828 <line:525:22>
| `-NonNullAttr 0x5651502a0880 <col:63, col:77> 1
|-FunctionDecl 0x5651502a0a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5651502a08c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5651502a0948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5651502a0ad8 <line:528:22>
| `-NonNullAttr 0x5651502a0b30 <col:63, col:80> 1 2
|-FunctionDecl 0x5651502a0cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5651502a0b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5651502a0bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5651502a0d68 <line:530:22>
| `-NonNullAttr 0x5651502a0dc0 <col:63, col:77> 1
|-FunctionDecl 0x5651502a1f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5651502a0e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5651502a1eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5651502a2040 <line:534:22>
| `-NonNullAttr 0x5651502a2098 <col:63, col:80> 1 2
|-FunctionDecl 0x5651502a2228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5651502a20e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5651502a2168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5651502a22d8 <line:537:22>
| `-NonNullAttr 0x5651502a2330 <col:63, col:77> 1
|-FunctionDecl 0x5651502a24d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5651502a2378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5651502a23f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5651502a2588 <line:541:22>
| `-NonNullAttr 0x5651502a25e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5651502a2768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5651502a2628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5651502a26a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5651502a2818 <line:544:22>
| `-NonNullAttr 0x5651502a2870 <col:63, col:77> 1
|-FunctionDecl 0x5651502a2a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5651502a28b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5651502a2938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5651502a2b08 <line:547:22>
| `-NonNullAttr 0x5651502a2b60 <col:63, col:80> 1 2
|-FunctionDecl 0x5651502a2ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5651502a2ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5651502a2c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5651502a2d98 <line:550:22>
| `-NonNullAttr 0x5651502a2df0 <col:63, col:77> 1
|-FunctionDecl 0x5651502a4168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5651502a3f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5651502a4020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5651502a4218 <col:29>
| `-NonNullAttr 0x5651502a4270 <col:70, col:84> 1
|-FunctionDecl 0x5651502a43e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5651502a42b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5651502a4490 <line:555:22>
| `-NonNullAttr 0x5651502a44e8 <col:63, col:77> 1
|-FunctionDecl 0x5651502a45f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5651502a4538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5651502a4698 <line:557:22>
| `-NonNullAttr 0x5651502a46f0 <col:52, col:66> 1
|-FunctionDecl 0x5651502a47f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5651502a4738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5651502a4898 <line:559:19>
| `-NonNullAttr 0x5651502a48f0 <col:49, col:63> 1
|-FunctionDecl 0x5651502a4b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5651502a4938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5651502a49c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5651502a4bd8 <col:39>
| `-NonNullAttr 0x5651502a4c30 <col:69, col:86> 1 2
|-FunctionDecl 0x5651502a4d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5651502a4c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5651502a4dd8 <line:564:22>
| `-NonNullAttr 0x5651502a4e30 <col:52, col:66> 1
|-FunctionDecl 0x5651502a4f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5651502a4ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5651502a5040 <line:566:22>
| `-NonNullAttr 0x5651502a5098 <col:52, col:66> 1
|-FunctionDecl 0x5651502a5258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5651502a50e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5651502a5178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5651502a5308 <col:39>
| `-NonNullAttr 0x5651502a5360 <col:69, col:86> 1 2
|-FunctionDecl 0x5651502a5460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5651502a53a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5651502a5508 <line:571:22>
| `-NonNullAttr 0x5651502a5560 <col:52, col:66> 1
|-FunctionDecl 0x5651502a5748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5651502a5610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5651502a57f0 <line:573:22>
| `-NonNullAttr 0x5651502a5848 <col:63, col:77> 1
|-FunctionDecl 0x5651502a5950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5651502a5898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5651502a59f8 <line:575:22>
| `-NonNullAttr 0x5651502a5a50 <col:63, col:77> 1
|-FunctionDecl 0x5651502a5c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5651502a5a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5651502a5b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5651502a5d28 <line:579:22>
| `-NonNullAttr 0x5651502a5d80 <col:63, col:80> 1 2
|-FunctionDecl 0x5651502a5fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5651502a5dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5651502a5e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5651502a6058 <line:582:22>
| `-NonNullAttr 0x5651502a60b0 <col:63, col:77> 1
|-FunctionDecl 0x5651502a6258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5651502a60f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5651502a6178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5651502a6308 <line:586:22>
| `-NonNullAttr 0x5651502a6360 <col:63, col:80> 1 2
|-FunctionDecl 0x5651502a64e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5651502a63a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5651502a6428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5651502a6598 <col:36>
| `-NonNullAttr 0x5651502a65f0 <col:77, col:91> 1
|-FunctionDecl 0x5651502a6928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5651502a66d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5651502a67e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5651502a69d8 <line:591:22>
| `-NonNullAttr 0x5651502a6a30 <col:63, col:77> 1
|-FunctionDecl 0x5651502a6ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5651502a6a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5651502a6c50 <line:593:22>
| `-NonNullAttr 0x5651502a6ca8 <col:63, col:77> 1
|-FunctionDecl 0x5651502a6db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5651502a6cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5651502a6e58 <line:595:22>
| `-NonNullAttr 0x5651502a6eb0 <col:52, col:66> 1
|-FunctionDecl 0x5651502a6fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5651502a6f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5651502a7070 <line:597:22>
| `-NonNullAttr 0x5651502a70c8 <col:52, col:66> 1
|-FunctionDecl 0x5651502a72f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5651502a7118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5651502a7190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5651502a73a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5651502a76d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5651502a7428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5651502a74a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5651502a7530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5651502a7790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5651502a79a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5651502a7870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5651502a7a50 <line:606:22>
| `-NonNullAttr 0x5651502a7aa8 <col:63, col:77> 1
|-FunctionDecl 0x5651502a7bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5651502a7af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5651502a7c58 <line:608:22>
| `-NonNullAttr 0x5651502a7cb0 <col:63, col:77> 1
|-FunctionDecl 0x5651502a7f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5651502a7cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5651502a7d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5651502a7fc0 <line:612:22>
| `-NonNullAttr 0x5651502a8018 <col:63, col:80> 1 2
|-FunctionDecl 0x5651502a8228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5651502a8068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5651502a80e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5651502a82d8 <col:37>
| `-NonNullAttr 0x5651502a8330 <col:78, col:92> 1
|-FunctionDecl 0x5651502a8548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5651502a8378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5651502a8420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5651502a85f8 <line:618:22>
| `-NonNullAttr 0x5651502a8650 <col:63, col:80> 1 2
|-FunctionDecl 0x5651502a8818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5651502a8698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5651502a8710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5651502a88c8 <line:621:22>
| `-NonNullAttr 0x5651502a8920 <col:63, col:77> 1
|-FunctionDecl 0x5651502a8bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5651502a8a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5651502a8a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5651502a8c78 <line:623:22>
| `-NonNullAttr 0x5651502a8cd0 <col:63, col:77> 1
|-FunctionDecl 0x5651502a8e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5651502a8d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5651502a8f20 <line:625:22>
| `-NonNullAttr 0x5651502a8f78 <col:63, col:77> 1
|-FunctionDecl 0x5651502a9080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5651502a8fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5651502a9128 <line:627:22>
| `-NonNullAttr 0x5651502a9180 <col:52, col:66> 1
|-FunctionDecl 0x5651502a9280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5651502a91c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5651502a9328 <line:629:22>
| `-NonNullAttr 0x5651502a9380 <col:52, col:66> 1
|-FunctionDecl 0x5651502a9480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5651502a93c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5651502a9528 <line:631:22>
| `-NonNullAttr 0x5651502a9580 <col:52, col:66> 1
|-FunctionDecl 0x5651502a9958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5651502a9660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5651502a9770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5651502a97f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5651502a9a10 <line:635:22>
| `-NonNullAttr 0x5651502a9a68 <col:63, col:77> 1
|-FunctionDecl 0x5651502a9be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5651502a9ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5651502a9c90 <line:637:22>
| `-NonNullAttr 0x5651502a9ce8 <col:63, col:77> 1
|-FunctionDecl 0x5651502a9df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5651502a9d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5651502a9e98 <line:639:22>
| `-NonNullAttr 0x5651502a9ef0 <col:52, col:66> 1
|-FunctionDecl 0x5651502aa0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5651502a9fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5651502aa190 <line:641:22>
| `-NonNullAttr 0x5651502aa1e8 <col:63, col:77> 1
|-FunctionDecl 0x5651502aa2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5651502aa238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5651502aa398 <line:643:22>
| `-NonNullAttr 0x5651502aa3f0 <col:63, col:77> 1
|-FunctionDecl 0x5651502aa618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5651502aa438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5651502aa4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5651502aa6c8 <line:647:22>
| `-NonNullAttr 0x5651502aa720 <col:63, col:80> 1 2
|-FunctionDecl 0x5651502aa928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5651502aa768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5651502aa7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5651502aa9d8 <line:650:22>
| `-NonNullAttr 0x5651502aaa30 <col:63, col:77> 1
|-FunctionDecl 0x5651502aad78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5651502aab10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5651502aac30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5651502aae28 <line:653:22>
| `-NonNullAttr 0x5651502aae80 <col:63, col:77> 1
|-FunctionDecl 0x5651502aafe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5651502aaec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5651502ab090 <col:69>
|-FunctionDecl 0x5651502ab208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5651502ab0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5651502ab2b0 <col:72>
|-FunctionDecl 0x5651502ab4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5651502ab318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5651502ab3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5651502ab598 <col:44>
|-FunctionDecl 0x5651502ab7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5651502ab600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5651502ab678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5651502ab868 <line:660:22>
| `-NonNullAttr 0x5651502ab8c0 <col:63, col:77> 2
|-FunctionDecl 0x5651502abd08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5651502ab9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5651502abab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5651502abbc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5651502abdc0 <col:47>
|-FunctionDecl 0x5651502acf60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5651502abe30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5651502ad0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5651502ad020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5651502ad210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5651502ad178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5651502ad2d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5651502ad398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5651502ad458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5651502ad510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5651502ad590 prev 0x5651502ad510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5651502ad5f8 <col:24> 'int' 0
|-VarDecl 0x5651502ad630 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5651502ad6b0 prev 0x5651502ad630 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5651502ad718 <col:27> 'int' 0
|-VarDecl 0x5651502ad750 <line:675:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5651502ad7d0 prev 0x5651502ad750 <line:676:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5651502ad838 <col:27> 'int' 0
|-VarDecl 0x5651502ad868 <line:677:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5651502ad8e0 <line:678:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5651502ad960 <line:679:1, col:5> col:5 used x 'int'
|-VarDecl 0x5651502ad9e0 prev 0x5651502ad960 <line:680:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5651502ada48 <col:9> 'int' 0
|-VarDecl 0x5651502ada78 <line:681:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x5651502adaf8 <line:682:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x5651502adb70 <line:683:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x5651502adbe8 <line:684:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x5651502adc60 <line:685:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x5651502adcd8 <line:686:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x5651502add50 <line:687:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x5651502addc8 <line:688:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x5651502ade40 <line:689:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x5651502adeb8 <line:690:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x5651502adf70 <line:691:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x5651502adff0 <line:692:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x5651502ae070 <line:693:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x5651502ae0e8 <line:694:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x5651502ae168 <line:695:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x5651502ae1e0 <line:696:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x5651502ae260 <line:697:1, col:5> col:5 used y 'int'
|-VarDecl 0x5651502ae2e0 prev 0x5651502ae260 <line:698:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5651502ae348 <col:9> 'int' 0
|-VarDecl 0x5651502ae378 <line:699:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5651502ae3f0 <line:700:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5651502ae508 prev 0x5651502acf60 <line:701:1, line:720:1> line:701:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5651502ae470 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5651502af7c8 <line:702:1, line:720:1>
|   |-CallExpr 0x5651502ae618 <line:703:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5651502ae600 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651502ae5b0 <col:3> 'void ()' Function 0x565150254350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5651502ae690 <line:704:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5651502ae638 <col:3> 'int' lvalue Var 0x5651502ad6b0 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5651502ae678 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5651502ae658 <col:25> 'int' lvalue Var 0x5651502ae2e0 'y' 'int'
|   |-CallExpr 0x5651502ae6e8 <line:705:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5651502ae6d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651502ae6b0 <col:3> 'void ()' Function 0x565150254410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5651502ae740 <line:706:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5651502ae728 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651502ae708 <col:3> 'void ()' Function 0x565150254350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5651502ae7a0 <line:707:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5651502ae760 <col:3> 'int' lvalue Var 0x5651502ad9e0 'x' 'int'
|   | `-IntegerLiteral 0x5651502ae780 <col:7> 'int' 1
|   |-CallExpr 0x5651502ae7f8 <line:708:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5651502ae7e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651502ae7c0 <col:3> 'void ()' Function 0x565150254410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5651502ae850 <line:709:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5651502ae838 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651502ae818 <col:3> 'void ()' Function 0x565150254350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5651502aeb38 <line:710:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5651502ae870 <col:3> 'int' lvalue Var 0x5651502ad9e0 'x' 'int'
|   | `-ConditionalOperator 0x5651502aeb08 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5651502ae930 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5651502ae8e8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5651502ae8d0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5651502ae890 <col:7> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5651502ae918 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5651502ae900 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5651502ae8b0 <col:25> '_Bool' lvalue Var 0x5651502adbe8 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5651502aeaf0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5651502ae950 <col:42> 'int' lvalue Var 0x5651502ae070 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5651502aead0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5651502aeaa0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5651502aea10 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5651502ae9c8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5651502ae9b0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5651502ae970 <col:55> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5651502ae9f8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5651502ae9e0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5651502ae990 <col:73> '_Bool' lvalue Var 0x5651502addc8 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5651502aea70 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5651502aea30 <col:90> 'int' lvalue Var 0x5651502ae168 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5651502aea88 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5651502aea50 <col:102> 'int' lvalue Var 0x5651502ad9e0 'x' 'int'
|   |-BinaryOperator 0x5651502aed40 <line:711:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5651502aeb58 <col:3> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5651502aed28 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5651502aecf8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5651502aec18 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5651502aebd0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5651502aebb8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5651502aeb78 <col:20> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5651502aec00 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5651502aebe8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5651502aeb98 <col:38> '_Bool' lvalue Var 0x5651502adbe8 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5651502aecb0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5651502aec68 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5651502aec38 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5651502aece0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5651502aecc8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5651502aec90 <col:66> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5651502af058 <line:712:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5651502aed60 <col:3> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5651502af040 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5651502af010 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5651502aef00 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5651502aee20 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5651502aedd8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5651502aedc0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5651502aed80 <col:20> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5651502aee08 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5651502aedf0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5651502aeda0 <col:38> '_Bool' lvalue Var 0x5651502adbe8 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5651502aeee0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5651502aee98 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5651502aee80 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5651502aee40 <col:56> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5651502aeec8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5651502aeeb0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5651502aee60 <col:74> '_Bool' lvalue Var 0x5651502addc8 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5651502aefc8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5651502aef80 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5651502aef20 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5651502aeff8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5651502aefe0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5651502aefa8 <col:102> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5651502af260 <line:713:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5651502af078 <col:3> '_Bool' lvalue Var 0x5651502adbe8 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5651502af248 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5651502af218 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5651502af138 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5651502af0f0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5651502af0d8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5651502af098 <col:20> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5651502af120 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5651502af108 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5651502af0b8 <col:38> '_Bool' lvalue Var 0x5651502adbe8 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5651502af1d0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5651502af188 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5651502af158 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5651502af200 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5651502af1e8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5651502af1b0 <col:66> '_Bool' lvalue Var 0x5651502adbe8 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5651502af548 <line:714:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5651502af280 <col:3> '_Bool' lvalue Var 0x5651502addc8 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5651502af530 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5651502af500 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5651502af420 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5651502af340 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5651502af2f8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5651502af2e0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5651502af2a0 <col:20> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5651502af328 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5651502af310 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5651502af2c0 <col:38> '_Bool' lvalue Var 0x5651502adbe8 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5651502af400 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5651502af3b8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5651502af3a0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5651502af360 <col:56> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5651502af3e8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5651502af3d0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5651502af380 <col:74> '_Bool' lvalue Var 0x5651502addc8 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5651502af4b8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5651502af470 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5651502af440 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5651502af4e8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5651502af4d0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5651502af498 <col:102> '_Bool' lvalue Var 0x5651502addc8 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5651502af5a0 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5651502af588 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651502af568 <col:3> 'void ()' Function 0x565150254410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5651502af5f8 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5651502af5e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651502af5c0 <col:3> 'void ()' Function 0x565150254350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5651502af6b0 <line:717:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5651502af618 <col:3> 'int' lvalue Var 0x5651502ad590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5651502af690 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5651502af678 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5651502af638 <col:22> 'int' lvalue Var 0x5651502ad590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5651502af658 <col:41> 'int' 1
|   |-CallExpr 0x5651502af708 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5651502af6f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651502af6d0 <col:3> 'void ()' Function 0x565150254410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5651502af7b8 <line:719:3, col:36>
|     `-CallExpr 0x5651502af798 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5651502af780 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5651502af728 <col:10> 'void *(void)' Function 0x565150253e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5651502af910 prev 0x5651502ad0b8 <line:721:1, line:749:1> line:721:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5651502af878 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5651502b10d8 <line:722:1, line:749:1>
|   |-CallExpr 0x5651502af9f0 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5651502af9d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651502af9b8 <col:3> 'void ()' Function 0x565150254350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5651502afa68 <line:724:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5651502afa10 <col:3> 'int' lvalue Var 0x5651502ae168 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5651502afa50 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5651502afa30 <col:15> 'int' lvalue Var 0x5651502ae070 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5651502afac8 <line:725:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5651502afa88 <col:3> 'int' lvalue Var 0x5651502ae070 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x5651502afaa8 <col:15> 'int' 2
|   |-BinaryOperator 0x5651502afb40 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5651502afae8 <col:3> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5651502afb28 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5651502afb08 <col:20> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5651502afbd8 <line:727:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5651502afb60 <col:3> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5651502afbb0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5651502afb80 <col:27> 'int' 1
|   |-CallExpr 0x5651502afd58 <line:728:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5651502afd40 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5651502afbf8 <col:3> 'void (int)' Function 0x5651502540d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5651502afcf8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5651502afcd8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5651502afcb8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5651502afc70 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5651502afc58 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5651502afc18 <col:23> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5651502afca0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5651502afc88 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5651502afc38 <col:41> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5651502afdd8 <line:729:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5651502afd80 <col:3> '_Bool' lvalue Var 0x5651502add50 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5651502afdc0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5651502afda0 <col:20> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5651502afe50 <line:730:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5651502afdf8 <col:3> '_Bool' lvalue Var 0x5651502addc8 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5651502afe38 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5651502afe18 <col:20> '_Bool' lvalue Var 0x5651502adbe8 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5651502afec8 <line:731:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5651502afe70 <col:3> '_Bool' lvalue Var 0x5651502ade40 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5651502afeb0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5651502afe90 <col:20> '_Bool' lvalue Var 0x5651502adc60 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5651502aff40 <line:732:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5651502afee8 <col:3> '_Bool' lvalue Var 0x5651502adeb8 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5651502aff28 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5651502aff08 <col:20> '_Bool' lvalue Var 0x5651502adcd8 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5651502affe8 <line:733:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5651502aff60 <col:3> '_Bool' lvalue Var 0x5651502adc60 'x$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x5651502affc0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5651502aff90 <col:27> 'int' 1
|   |-CallExpr 0x5651502b0040 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5651502b0028 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651502b0008 <col:3> 'void ()' Function 0x565150254410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5651502b0098 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5651502b0080 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651502b0060 <col:3> 'void ()' Function 0x565150254350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5651502b00f8 <line:736:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5651502b00b8 <col:3> 'int' lvalue Var 0x5651502ae2e0 'y' 'int'
|   | `-IntegerLiteral 0x5651502b00d8 <col:7> 'int' 1
|   |-CallExpr 0x5651502b0150 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5651502b0138 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651502b0118 <col:3> 'void ()' Function 0x565150254410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5651502b01a8 <line:738:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5651502b0190 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651502b0170 <col:3> 'void ()' Function 0x565150254350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5651502b0490 <line:739:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5651502b01c8 <col:3> 'int' lvalue Var 0x5651502ad9e0 'x' 'int'
|   | `-ConditionalOperator 0x5651502b0460 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5651502b0288 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5651502b0240 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5651502b0228 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5651502b01e8 <col:7> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5651502b0270 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5651502b0258 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5651502b0208 <col:25> '_Bool' lvalue Var 0x5651502adc60 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5651502b0448 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5651502b02a8 <col:42> 'int' lvalue Var 0x5651502ae070 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5651502b0428 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5651502b03f8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5651502b0368 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5651502b0320 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5651502b0308 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5651502b02c8 <col:55> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5651502b0350 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5651502b0338 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5651502b02e8 <col:73> '_Bool' lvalue Var 0x5651502ade40 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5651502b03c8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5651502b0388 <col:90> 'int' lvalue Var 0x5651502ae168 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5651502b03e0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5651502b03a8 <col:102> 'int' lvalue Var 0x5651502ad9e0 'x' 'int'
|   |-BinaryOperator 0x5651502b0698 <line:740:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5651502b04b0 <col:3> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5651502b0680 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5651502b0650 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5651502b0570 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5651502b0528 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5651502b0510 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5651502b04d0 <col:20> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5651502b0558 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5651502b0540 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5651502b04f0 <col:38> '_Bool' lvalue Var 0x5651502adc60 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5651502b0608 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5651502b05c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5651502b0590 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5651502b0638 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5651502b0620 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5651502b05e8 <col:66> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5651502b0980 <line:741:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5651502b06b8 <col:3> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5651502b0968 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5651502b0938 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5651502b0858 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5651502b0778 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5651502b0730 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5651502b0718 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5651502b06d8 <col:20> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5651502b0760 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5651502b0748 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5651502b06f8 <col:38> '_Bool' lvalue Var 0x5651502adc60 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5651502b0838 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5651502b07f0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5651502b07d8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5651502b0798 <col:56> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5651502b0820 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5651502b0808 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5651502b07b8 <col:74> '_Bool' lvalue Var 0x5651502ade40 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5651502b08f0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5651502b08a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5651502b0878 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5651502b0920 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5651502b0908 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5651502b08d0 <col:102> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5651502b0b88 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5651502b09a0 <col:3> '_Bool' lvalue Var 0x5651502adc60 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5651502b0b70 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5651502b0b40 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5651502b0a60 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5651502b0a18 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5651502b0a00 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5651502b09c0 <col:20> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5651502b0a48 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5651502b0a30 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5651502b09e0 <col:38> '_Bool' lvalue Var 0x5651502adc60 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5651502b0af8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5651502b0ab0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5651502b0a80 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5651502b0b28 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5651502b0b10 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5651502b0ad8 <col:66> '_Bool' lvalue Var 0x5651502adc60 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5651502b0e70 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5651502b0ba8 <col:3> '_Bool' lvalue Var 0x5651502ade40 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5651502b0e58 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5651502b0e28 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5651502b0d48 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5651502b0c68 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5651502b0c20 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5651502b0c08 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5651502b0bc8 <col:20> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5651502b0c50 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5651502b0c38 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5651502b0be8 <col:38> '_Bool' lvalue Var 0x5651502adc60 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5651502b0d28 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5651502b0ce0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5651502b0cc8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5651502b0c88 <col:56> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5651502b0d10 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5651502b0cf8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5651502b0ca8 <col:74> '_Bool' lvalue Var 0x5651502ade40 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5651502b0de0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5651502b0d98 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5651502b0d68 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5651502b0e10 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5651502b0df8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5651502b0dc0 <col:102> '_Bool' lvalue Var 0x5651502ade40 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5651502b0ec8 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5651502b0eb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651502b0e90 <col:3> 'void ()' Function 0x565150254410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5651502b0f20 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5651502b0f08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651502b0ee8 <col:3> 'void ()' Function 0x565150254350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5651502b0ff8 <line:746:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5651502b0f40 <col:3> 'int' lvalue Var 0x5651502ad590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5651502b0fd8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5651502b0fc0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5651502b0f60 <col:22> 'int' lvalue Var 0x5651502ad590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5651502b0fa0 <col:41> 'int' 1
|   |-CallExpr 0x5651502b1050 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5651502b1038 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651502b1018 <col:3> 'void ()' Function 0x565150254410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5651502b10c8 <line:748:3, col:36>
|     `-CallExpr 0x5651502b10a8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5651502b1090 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5651502b1070 <col:10> 'void *(void)' Function 0x565150253e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5651502b1268 prev 0x5651502ad210 <line:750:1, line:769:1> line:750:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5651502b11d0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5651502b24a0 <line:751:1, line:769:1>
|   |-CallExpr 0x5651502b1348 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5651502b1330 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651502b1310 <col:3> 'void ()' Function 0x565150254350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5651502b13c0 <line:753:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5651502b1368 <col:3> 'int' lvalue Var 0x5651502ad7d0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5651502b13a8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5651502b1388 <col:25> 'int' lvalue Var 0x5651502ae2e0 'y' 'int'
|   |-CallExpr 0x5651502b1418 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5651502b1400 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651502b13e0 <col:3> 'void ()' Function 0x565150254410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5651502b1470 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5651502b1458 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651502b1438 <col:3> 'void ()' Function 0x565150254350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5651502b14d0 <line:756:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5651502b1490 <col:3> 'int' lvalue Var 0x5651502ae2e0 'y' 'int'
|   | `-IntegerLiteral 0x5651502b14b0 <col:7> 'int' 2
|   |-CallExpr 0x5651502b1528 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5651502b1510 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651502b14f0 <col:3> 'void ()' Function 0x565150254410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5651502b1580 <line:758:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5651502b1568 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651502b1548 <col:3> 'void ()' Function 0x565150254350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5651502b1868 <line:759:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5651502b15a0 <col:3> 'int' lvalue Var 0x5651502ad9e0 'x' 'int'
|   | `-ConditionalOperator 0x5651502b1838 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5651502b1660 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5651502b1618 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5651502b1600 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5651502b15c0 <col:7> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5651502b1648 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5651502b1630 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5651502b15e0 <col:25> '_Bool' lvalue Var 0x5651502adcd8 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5651502b1820 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5651502b1680 <col:42> 'int' lvalue Var 0x5651502ae070 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5651502b1800 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5651502b17d0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5651502b1740 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5651502b16f8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5651502b16e0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5651502b16a0 <col:55> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5651502b1728 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5651502b1710 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5651502b16c0 <col:73> '_Bool' lvalue Var 0x5651502adeb8 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5651502b17a0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5651502b1760 <col:90> 'int' lvalue Var 0x5651502ae168 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5651502b17b8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5651502b1780 <col:102> 'int' lvalue Var 0x5651502ad9e0 'x' 'int'
|   |-BinaryOperator 0x5651502b1a70 <line:760:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5651502b1888 <col:3> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5651502b1a58 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5651502b1a28 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5651502b1948 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5651502b1900 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5651502b18e8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5651502b18a8 <col:20> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5651502b1930 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5651502b1918 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5651502b18c8 <col:38> '_Bool' lvalue Var 0x5651502adcd8 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5651502b19e0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5651502b1998 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5651502b1968 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5651502b1a10 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5651502b19f8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5651502b19c0 <col:66> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5651502b1d58 <line:761:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5651502b1a90 <col:3> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5651502b1d40 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5651502b1d10 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5651502b1c30 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5651502b1b50 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5651502b1b08 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5651502b1af0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5651502b1ab0 <col:20> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5651502b1b38 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5651502b1b20 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5651502b1ad0 <col:38> '_Bool' lvalue Var 0x5651502adcd8 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5651502b1c10 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5651502b1bc8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5651502b1bb0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5651502b1b70 <col:56> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5651502b1bf8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5651502b1be0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5651502b1b90 <col:74> '_Bool' lvalue Var 0x5651502adeb8 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5651502b1cc8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5651502b1c80 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5651502b1c50 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5651502b1cf8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5651502b1ce0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5651502b1ca8 <col:102> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5651502b1f60 <line:762:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5651502b1d78 <col:3> '_Bool' lvalue Var 0x5651502adcd8 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5651502b1f48 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5651502b1f18 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5651502b1e38 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5651502b1df0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5651502b1dd8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5651502b1d98 <col:20> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5651502b1e20 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5651502b1e08 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5651502b1db8 <col:38> '_Bool' lvalue Var 0x5651502adcd8 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5651502b1ed0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5651502b1e88 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5651502b1e58 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5651502b1f00 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5651502b1ee8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5651502b1eb0 <col:66> '_Bool' lvalue Var 0x5651502adcd8 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5651502b2258 <line:763:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5651502b1f80 <col:3> '_Bool' lvalue Var 0x5651502adeb8 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5651502b2240 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5651502b2210 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5651502b2130 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5651502b2050 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5651502b2008 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5651502b1ff0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5651502b1fb0 <col:20> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5651502b2038 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5651502b2020 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5651502b1fd0 <col:38> '_Bool' lvalue Var 0x5651502adcd8 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5651502b2110 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5651502b20c8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5651502b20b0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5651502b2070 <col:56> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5651502b20f8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5651502b20e0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5651502b2090 <col:74> '_Bool' lvalue Var 0x5651502adeb8 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5651502b21c8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5651502b2180 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5651502b2150 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5651502b21f8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5651502b21e0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5651502b21a8 <col:102> '_Bool' lvalue Var 0x5651502adeb8 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5651502b22b0 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5651502b2298 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651502b2278 <col:3> 'void ()' Function 0x565150254410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5651502b2308 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5651502b22f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651502b22d0 <col:3> 'void ()' Function 0x565150254350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5651502b23c0 <line:766:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5651502b2328 <col:3> 'int' lvalue Var 0x5651502ad590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5651502b23a0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5651502b2388 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5651502b2348 <col:22> 'int' lvalue Var 0x5651502ad590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5651502b2368 <col:41> 'int' 1
|   |-CallExpr 0x5651502b2418 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5651502b2400 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651502b23e0 <col:3> 'void ()' Function 0x565150254410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5651502b2490 <line:768:3, col:36>
|     `-CallExpr 0x5651502b2470 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5651502b2458 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5651502b2438 <col:10> 'void *(void)' Function 0x565150253e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5651502b2558 prev 0x5651502ad2d8 <line:770:1, line:772:1> line:770:6 fence 'void ()'
| `-CompoundStmt 0x5651502b25f8 <line:771:1, line:772:1>
|-FunctionDecl 0x5651502b2628 prev 0x5651502ad398 <line:773:1, line:775:1> line:773:6 isync 'void ()'
| `-CompoundStmt 0x5651502b26c8 <line:774:1, line:775:1>
|-FunctionDecl 0x5651502b26f8 prev 0x5651502ad458 <line:776:1, line:778:1> line:776:6 lwfence 'void ()'
| `-CompoundStmt 0x5651502b2798 <line:777:1, line:778:1>
`-FunctionDecl 0x5651502b2808 <line:779:1, line:816:1> line:779:5 main 'int ()'
  `-CompoundStmt 0x5651502b6e60 <line:780:1, line:816:1>
    |-DeclStmt 0x5651502b2920 <line:781:3, col:18>
    | `-VarDecl 0x5651502b28b8 <col:3, col:13> col:13 used t1806 'pthread_t':'unsigned long'
    |-CallExpr 0x5651502b2b28 <line:782:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5651502b2b10 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5651502b2938 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5651502948f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5651502b2978 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5651502b2958 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5651502b28b8 't1806' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5651502b2b68 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5651502b29f0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5651502b29c8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5651502b2990 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5651502b2b80 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5651502b2a10 <col:39> 'void *(void *)' Function 0x5651502ae508 'P0' 'void *(void *)'
    | `-ParenExpr 0x5651502b2a90 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5651502b2a68 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5651502b2a30 <col:52> 'int' 0
    |-DeclStmt 0x5651502b2c10 <line:783:3, col:18>
    | `-VarDecl 0x5651502b2ba8 <col:3, col:13> col:13 used t1807 'pthread_t':'unsigned long'
    |-CallExpr 0x5651502b2db8 <line:784:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5651502b2da0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5651502b2c28 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5651502948f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5651502b2c68 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5651502b2c48 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5651502b2ba8 't1807' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5651502b2df8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5651502b2ce0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5651502b2cb8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5651502b2c80 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5651502b2e10 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5651502b2d00 <col:39> 'void *(void *)' Function 0x5651502af910 'P1' 'void *(void *)'
    | `-ParenExpr 0x5651502b2d80 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5651502b2d58 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5651502b2d20 <col:52> 'int' 0
    |-DeclStmt 0x5651502b2ea0 <line:785:3, col:18>
    | `-VarDecl 0x5651502b2e38 <col:3, col:13> col:13 used t1808 'pthread_t':'unsigned long'
    |-CallExpr 0x5651502b3058 <line:786:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5651502b3040 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5651502b2eb8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5651502948f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5651502b2ef8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5651502b2ed8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5651502b2e38 't1808' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5651502b3098 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5651502b2f70 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5651502b2f48 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5651502b2f10 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5651502b30b0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5651502b2f90 <col:39> 'void *(void *)' Function 0x5651502b1268 'P2' 'void *(void *)'
    | `-ParenExpr 0x5651502b3020 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5651502b2ff8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5651502b2fc0 <col:52> 'int' 0
    |-CallExpr 0x5651502b3100 <line:787:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5651502b30e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5651502b30c8 <col:3> 'void ()' Function 0x565150254350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5651502b31d0 <line:788:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5651502b3120 <col:3> '_Bool' lvalue Var 0x5651502ad868 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5651502b31b8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5651502b3198 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5651502b3180 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5651502b3140 <col:21> 'int' lvalue Var 0x5651502ad590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5651502b3160 <col:41> 'int' 3
    |-CallExpr 0x5651502b3228 <line:789:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5651502b3210 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5651502b31f0 <col:3> 'void ()' Function 0x565150254410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5651502b32a0 <line:790:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5651502b3288 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5651502b3248 <col:3> 'void (int)' Function 0x565150253ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5651502b32e0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5651502b32c8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5651502b3268 <col:21> '_Bool' lvalue Var 0x5651502ad868 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5651502b3330 <line:791:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5651502b3318 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5651502b32f8 <col:3> 'void ()' Function 0x565150254350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5651502b3618 <line:792:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5651502b3350 <col:3> 'int' lvalue Var 0x5651502ad9e0 'x' 'int'
    | `-ConditionalOperator 0x5651502b35e8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5651502b3410 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5651502b33c8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5651502b33b0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5651502b3370 <col:7> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5651502b33f8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5651502b33e0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5651502b3390 <col:25> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5651502b35d0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5651502b3430 <col:42> 'int' lvalue Var 0x5651502ae070 'x$w_buff0' 'int'
    |   `-ParenExpr 0x5651502b35b0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5651502b3580 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5651502b34f0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5651502b34a8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5651502b3490 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5651502b3450 <col:55> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5651502b34d8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5651502b34c0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5651502b3470 <col:73> '_Bool' lvalue Var 0x5651502add50 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5651502b3550 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5651502b3510 <col:90> 'int' lvalue Var 0x5651502ae168 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5651502b3568 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5651502b3530 <col:102> 'int' lvalue Var 0x5651502ad9e0 'x' 'int'
    |-BinaryOperator 0x5651502b3820 <line:793:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5651502b3638 <col:3> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5651502b3808 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5651502b37d8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5651502b36f8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5651502b36b0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5651502b3698 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5651502b3658 <col:20> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5651502b36e0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5651502b36c8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5651502b3678 <col:38> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5651502b3790 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5651502b3748 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5651502b3718 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5651502b37c0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5651502b37a8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5651502b3770 <col:66> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5651502b3b08 <line:794:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5651502b3840 <col:3> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5651502b3af0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5651502b3ac0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5651502b39e0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5651502b3900 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5651502b38b8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5651502b38a0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5651502b3860 <col:20> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5651502b38e8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5651502b38d0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5651502b3880 <col:38> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5651502b39c0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5651502b3978 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5651502b3960 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5651502b3920 <col:56> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5651502b39a8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5651502b3990 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5651502b3940 <col:74> '_Bool' lvalue Var 0x5651502add50 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5651502b3a78 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5651502b3a30 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5651502b3a00 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5651502b3aa8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5651502b3a90 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5651502b3a58 <col:102> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5651502b3d10 <line:795:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5651502b3b28 <col:3> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5651502b3cf8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5651502b3cc8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5651502b3be8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5651502b3ba0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5651502b3b88 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5651502b3b48 <col:20> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5651502b3bd0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5651502b3bb8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5651502b3b68 <col:38> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5651502b3c80 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5651502b3c38 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5651502b3c08 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5651502b3cb0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5651502b3c98 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5651502b3c60 <col:66> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5651502b4018 <line:796:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5651502b3d30 <col:3> '_Bool' lvalue Var 0x5651502add50 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5651502b4000 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5651502b3fd0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5651502b3ed0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5651502b3df0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5651502b3da8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5651502b3d90 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5651502b3d50 <col:20> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5651502b3dd8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5651502b3dc0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5651502b3d70 <col:38> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5651502b3eb0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5651502b3e68 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5651502b3e50 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5651502b3e10 <col:56> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5651502b3e98 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5651502b3e80 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5651502b3e30 <col:74> '_Bool' lvalue Var 0x5651502add50 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5651502b3f68 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5651502b3f20 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5651502b3ef0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5651502b3f98 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5651502b3f80 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5651502b3f48 <col:102> '_Bool' lvalue Var 0x5651502add50 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5651502b4070 <line:797:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5651502b4058 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5651502b4038 <col:3> 'void ()' Function 0x565150254410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5651502b40c8 <line:798:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5651502b40b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5651502b4090 <col:3> 'void ()' Function 0x565150254350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5651502b4178 <line:799:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x5651502b40e8 <col:3> '_Bool' lvalue Var 0x5651502ae378 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x5651502b4160 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x5651502b4140 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x5651502b4128 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5651502b4108 <col:19> 'void *(void)' Function 0x565150253e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x5651502b4228 <line:800:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x5651502b4198 <col:3> '_Bool' lvalue Var 0x5651502ae3f0 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x5651502b4210 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x5651502b41f0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x5651502b41d8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5651502b41b8 <col:19> 'void *(void)' Function 0x565150253e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x5651502b42a0 <line:801:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x5651502b4248 <col:3> '_Bool' lvalue Var 0x5651502ada78 'x$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x5651502b4288 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x5651502b4268 <col:21> '_Bool' lvalue Var 0x5651502ae3f0 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x5651502b4318 <line:802:3, col:15> 'int' '='
    | |-DeclRefExpr 0x5651502b42c0 <col:3> 'int' lvalue Var 0x5651502adaf8 'x$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x5651502b4300 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x5651502b42e0 <col:15> 'int' lvalue Var 0x5651502ad9e0 'x' 'int'
    |-BinaryOperator 0x5651502b4750 <line:803:3, col:162> 'int' '='
    | |-DeclRefExpr 0x5651502b4338 <col:3> 'int' lvalue Var 0x5651502ad9e0 'x' 'int'
    | `-ConditionalOperator 0x5651502b4720 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x5651502b4548 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x5651502b4468 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x5651502b4390 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x5651502b4378 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x5651502b4358 <col:8> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x5651502b4448 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x5651502b43e0 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x5651502b43c8 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x5651502b43a8 <col:27> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x5651502b4430 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x5651502b4418 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x5651502b43f8 <col:46> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x5651502b4528 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x5651502b44c0 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x5651502b44a8 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x5651502b4488 <col:65> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x5651502b4510 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x5651502b44f8 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x5651502b44d8 <col:84> '_Bool' lvalue Var 0x5651502add50 'x$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5651502b4708 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5651502b4568 <col:101> 'int' lvalue Var 0x5651502ad9e0 'x' 'int'
    |   `-ParenExpr 0x5651502b46e8 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x5651502b46b8 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x5651502b4628 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5651502b45e0 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5651502b45c8 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5651502b4588 <col:106> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5651502b4610 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5651502b45f8 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5651502b45a8 <col:124> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5651502b4688 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5651502b4648 <col:141> 'int' lvalue Var 0x5651502ae070 'x$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x5651502b46a0 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5651502b4668 <col:153> 'int' lvalue Var 0x5651502ae168 'x$w_buff1' 'int'
    |-BinaryOperator 0x5651502b4c60 <line:804:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5651502b4770 <col:3> 'int' lvalue Var 0x5651502ae070 'x$w_buff0' 'int'
    | `-ConditionalOperator 0x5651502b4c30 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5651502b4c00 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5651502b4be8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5651502b4790 <col:15> '_Bool' lvalue Var 0x5651502ae3f0 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5651502b4c18 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5651502b47b0 <col:31> 'int' lvalue Var 0x5651502ae070 'x$w_buff0' 'int'
    |   `-ParenExpr 0x5651502b4bc8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5651502b4b98 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5651502b49c0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5651502b48e0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5651502b4808 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5651502b47f0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5651502b47d0 <col:45> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5651502b48c0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5651502b4858 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5651502b4840 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5651502b4820 <col:64> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5651502b48a8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5651502b4890 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5651502b4870 <col:83> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5651502b49a0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5651502b4938 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5651502b4920 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5651502b4900 <col:102> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5651502b4988 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5651502b4970 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5651502b4950 <col:121> '_Bool' lvalue Var 0x5651502add50 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5651502b4b80 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5651502b49e0 <col:138> 'int' lvalue Var 0x5651502ae070 'x$w_buff0' 'int'
    |       `-ParenExpr 0x5651502b4b60 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5651502b4b30 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5651502b4aa0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5651502b4a58 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5651502b4a40 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5651502b4a00 <col:151> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5651502b4a88 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5651502b4a70 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5651502b4a20 <col:169> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5651502b4b00 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5651502b4ac0 <col:186> 'int' lvalue Var 0x5651502ae070 'x$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x5651502b4b18 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5651502b4ae0 <col:198> 'int' lvalue Var 0x5651502ae070 'x$w_buff0' 'int'
    |-BinaryOperator 0x5651502b5180 <line:805:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5651502b4c80 <col:3> 'int' lvalue Var 0x5651502ae168 'x$w_buff1' 'int'
    | `-ConditionalOperator 0x5651502b5150 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5651502b5120 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5651502b5108 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5651502b4ca0 <col:15> '_Bool' lvalue Var 0x5651502ae3f0 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5651502b5138 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5651502b4cc0 <col:31> 'int' lvalue Var 0x5651502ae168 'x$w_buff1' 'int'
    |   `-ParenExpr 0x5651502b50e8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5651502b50b8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5651502b4ed0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5651502b4df0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5651502b4d18 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5651502b4d00 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5651502b4ce0 <col:45> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5651502b4dd0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5651502b4d68 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5651502b4d50 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5651502b4d30 <col:64> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5651502b4db8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5651502b4da0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5651502b4d80 <col:83> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5651502b4eb0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5651502b4e48 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5651502b4e30 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5651502b4e10 <col:102> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5651502b4e98 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5651502b4e80 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5651502b4e60 <col:121> '_Bool' lvalue Var 0x5651502add50 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5651502b50a0 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5651502b4ef0 <col:138> 'int' lvalue Var 0x5651502ae168 'x$w_buff1' 'int'
    |       `-ParenExpr 0x5651502b5080 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5651502b5050 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5651502b4fb0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5651502b4f68 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5651502b4f50 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5651502b4f10 <col:151> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5651502b4f98 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5651502b4f80 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5651502b4f30 <col:169> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5651502b5020 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5651502b4fe0 <col:186> 'int' lvalue Var 0x5651502ae168 'x$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x5651502b5038 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5651502b5000 <col:198> 'int' lvalue Var 0x5651502ae168 'x$w_buff1' 'int'
    |-BinaryOperator 0x5651502b5728 <line:806:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5651502b51a0 <col:3> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5651502b5710 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5651502b56e0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5651502b5698 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5651502b5680 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5651502b51c0 <col:20> '_Bool' lvalue Var 0x5651502ae3f0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5651502b56c8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5651502b56b0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5651502b51e0 <col:36> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x5651502b5660 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5651502b5630 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5651502b53f0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5651502b5310 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5651502b5238 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5651502b5220 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5651502b5200 <col:55> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5651502b52f0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5651502b5288 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5651502b5270 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5651502b5250 <col:74> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5651502b52d8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5651502b52c0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5651502b52a0 <col:93> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5651502b53d0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5651502b5368 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5651502b5350 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5651502b5330 <col:112> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5651502b53b8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5651502b53a0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5651502b5380 <col:131> '_Bool' lvalue Var 0x5651502add50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5651502b5618 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5651502b5600 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5651502b5410 <col:148> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x5651502b55e0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5651502b55b0 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5651502b54d0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5651502b5488 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5651502b5470 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5651502b5430 <col:166> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5651502b54b8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5651502b54a0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5651502b5450 <col:184> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5651502b5568 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5651502b5520 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5651502b54f0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5651502b5598 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5651502b5580 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5651502b5548 <col:212> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5651502b5cf0 <line:807:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5651502b5748 <col:3> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5651502b5cd8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5651502b5ca8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5651502b5c60 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5651502b5c48 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5651502b5768 <col:20> '_Bool' lvalue Var 0x5651502ae3f0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5651502b5c90 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5651502b5c78 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5651502b5788 <col:36> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x5651502b5c28 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5651502b5bf8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5651502b5998 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5651502b58b8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5651502b57e0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5651502b57c8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5651502b57a8 <col:55> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5651502b5898 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5651502b5830 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5651502b5818 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5651502b57f8 <col:74> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5651502b5880 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5651502b5868 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5651502b5848 <col:93> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5651502b5978 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5651502b5910 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5651502b58f8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5651502b58d8 <col:112> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5651502b5960 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5651502b5948 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5651502b5928 <col:131> '_Bool' lvalue Var 0x5651502add50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5651502b5be0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5651502b5bc8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5651502b59b8 <col:148> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x5651502b5ba8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5651502b5b78 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5651502b5a78 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5651502b5a30 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5651502b5a18 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5651502b59d8 <col:166> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5651502b5a60 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5651502b5a48 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5651502b59f8 <col:184> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5651502b5b48 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5651502b5ac8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5651502b5a98 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5651502b5b60 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5651502b5b20 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5651502b5af0 <col:219> 'int' 0
    |-BinaryOperator 0x5651502b62a8 <line:808:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5651502b5d10 <col:3> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5651502b6290 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5651502b6260 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5651502b6218 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5651502b6200 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5651502b5d30 <col:20> '_Bool' lvalue Var 0x5651502ae3f0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5651502b6248 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5651502b6230 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5651502b5d50 <col:36> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x5651502b61e0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5651502b61b0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5651502b5f60 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5651502b5e80 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5651502b5da8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5651502b5d90 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5651502b5d70 <col:55> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5651502b5e60 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5651502b5df8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5651502b5de0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5651502b5dc0 <col:74> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5651502b5e48 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5651502b5e30 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5651502b5e10 <col:93> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5651502b5f40 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5651502b5ed8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5651502b5ec0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5651502b5ea0 <col:112> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5651502b5f28 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5651502b5f10 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5651502b5ef0 <col:131> '_Bool' lvalue Var 0x5651502add50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5651502b6198 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5651502b6180 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5651502b5f80 <col:148> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x5651502b6160 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5651502b6130 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5651502b6050 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5651502b6008 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5651502b5ff0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5651502b5fa0 <col:166> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5651502b6038 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5651502b6020 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5651502b5fc0 <col:184> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5651502b60e8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5651502b60a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5651502b6070 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5651502b6118 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5651502b6100 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5651502b60c8 <col:212> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5651502b6870 <line:809:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5651502b62c8 <col:3> '_Bool' lvalue Var 0x5651502add50 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5651502b6858 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5651502b6828 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5651502b67e0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5651502b67c8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5651502b62e8 <col:20> '_Bool' lvalue Var 0x5651502ae3f0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5651502b6810 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5651502b67f8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5651502b6308 <col:36> '_Bool' lvalue Var 0x5651502add50 'x$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x5651502b67a8 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5651502b6778 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5651502b6518 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5651502b6438 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5651502b6360 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5651502b6348 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5651502b6328 <col:55> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5651502b6418 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5651502b63b0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5651502b6398 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5651502b6378 <col:74> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5651502b6400 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5651502b63e8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5651502b63c8 <col:93> '_Bool' lvalue Var 0x5651502ae1e0 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5651502b64f8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5651502b6490 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5651502b6478 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5651502b6458 <col:112> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5651502b64e0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5651502b64c8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5651502b64a8 <col:131> '_Bool' lvalue Var 0x5651502add50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5651502b6760 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5651502b6748 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5651502b6538 <col:148> '_Bool' lvalue Var 0x5651502add50 'x$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x5651502b6728 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5651502b66f8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5651502b65f8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5651502b65b0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5651502b6598 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5651502b6558 <col:166> '_Bool' lvalue Var 0x5651502ae0e8 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5651502b65e0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5651502b65c8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5651502b6578 <col:184> '_Bool' lvalue Var 0x5651502adb70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5651502b66c8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5651502b6648 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5651502b6618 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5651502b66e0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5651502b66a0 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5651502b6670 <col:219> 'int' 0
    |-BinaryOperator 0x5651502b6b40 <line:810:3, col:95> '_Bool' '='
    | |-DeclRefExpr 0x5651502b6890 <col:3> '_Bool' lvalue Var 0x5651502ad8e0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5651502b6b28 <col:21, col:95> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5651502b6b10 <col:21, col:95> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5651502b6af0 <col:22, col:95> 'int'
    |       `-BinaryOperator 0x5651502b6ad0 <col:23, col:94> 'int' '&&'
    |         |-BinaryOperator 0x5651502b6a38 <col:23, col:66> 'int' '&&'
    |         | |-BinaryOperator 0x5651502b69a0 <col:23, col:38> 'int' '&&'
    |         | | |-BinaryOperator 0x5651502b6908 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x5651502b68f0 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x5651502b68b0 <col:23> 'int' lvalue Var 0x5651502ad9e0 'x' 'int'
    |         | | | `-IntegerLiteral 0x5651502b68d0 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x5651502b6980 <col:33, col:38> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5651502b6968 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5651502b6928 <col:33> 'int' lvalue Var 0x5651502ae2e0 'y' 'int'
    |         | |   `-IntegerLiteral 0x5651502b6948 <col:38> 'int' 2
    |         | `-BinaryOperator 0x5651502b6a18 <col:43, col:66> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5651502b6a00 <col:43> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5651502b69c0 <col:43> 'int' lvalue Var 0x5651502ad6b0 '__unbuffered_p0_EAX' 'int'
    |         |   `-IntegerLiteral 0x5651502b69e0 <col:66> 'int' 2
    |         `-BinaryOperator 0x5651502b6ab0 <col:71, col:94> 'int' '=='
    |           |-ImplicitCastExpr 0x5651502b6a98 <col:71> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5651502b6a58 <col:71> 'int' lvalue Var 0x5651502ad7d0 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x5651502b6a78 <col:94> 'int' 1
    |-BinaryOperator 0x5651502b6c70 <line:811:3, col:37> 'int' '='
    | |-DeclRefExpr 0x5651502b6b60 <col:3> 'int' lvalue Var 0x5651502ad9e0 'x' 'int'
    | `-ConditionalOperator 0x5651502b6c40 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x5651502b6bf8 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5651502b6be0 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5651502b6b80 <col:7> '_Bool' lvalue Var 0x5651502ada78 'x$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x5651502b6c10 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5651502b6ba0 <col:25> 'int' lvalue Var 0x5651502adaf8 'x$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x5651502b6c28 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x5651502b6bc0 <col:37> 'int' lvalue Var 0x5651502ad9e0 'x' 'int'
    |-BinaryOperator 0x5651502b6d08 <line:812:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x5651502b6c90 <col:3> '_Bool' lvalue Var 0x5651502ada78 'x$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x5651502b6ce0 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x5651502b6cb0 <col:28> 'int' 0
    |-CallExpr 0x5651502b6d60 <line:813:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5651502b6d48 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5651502b6d28 <col:3> 'void ()' Function 0x565150254410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5651502b6dd8 <line:814:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5651502b6dc0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5651502b6d80 <col:3> 'void (int)' Function 0x5651502540d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5651502b6e18 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5651502b6e00 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5651502b6da0 <col:21> '_Bool' lvalue Var 0x5651502ad8e0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5651502b6e50 <line:815:3, col:10>
      `-IntegerLiteral 0x5651502b6e30 <col:10> 'int' 0
