TranslationUnitDecl 0x55f273da9f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55f273daa848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55f273daa520 '__int128'
|-TypedefDecl 0x55f273daa8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55f273daa540 'unsigned __int128'
|-TypedefDecl 0x55f273daabc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55f273daa990 'struct __NSConstantString_tag'
|   `-Record 0x55f273daa910 '__NSConstantString_tag'
|-TypedefDecl 0x55f273daac68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55f273daac20 'char *'
|   `-BuiltinType 0x55f273daa020 'char'
|-TypedefDecl 0x55f273de9b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55f273daaf00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55f273daad40 'struct __va_list_tag'
|     `-Record 0x55f273daacc0 '__va_list_tag'
|-FunctionDecl 0x55f273de9c80 <pthread-wmm/rfi009_pso.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55f273de9e50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55f273de9d80 <col:31> col:34 'int'
|-FunctionDecl 0x55f273de9fc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55f273dea0f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55f273dea238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55f273dea1a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55f273dea468 <col:40, col:99>
|   |-IfStmt 0x55f273dea438 <col:42, col:88>
|   | |-UnaryOperator 0x55f273dea318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55f273dea300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55f273dea2e0 <col:47> 'int' lvalue ParmVar 0x55f273dea1a8 'expression' 'int'
|   | `-CompoundStmt 0x55f273dea420 <col:59, col:88>
|   |   `-LabelStmt 0x55f273dea408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55f273dea398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55f273dea380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55f273dea330 <col:68> 'void () __attribute__((noreturn))' Function 0x55f273dea0f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55f273dea450 <col:89>
|   `-ReturnStmt 0x55f273dea458 <col:91>
|-FunctionDecl 0x55f273dea4b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55f273dea570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55f273dea8f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f273dea628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55f273dea6a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55f273dea728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55f273dea7a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55f273dea9b0 <line:11:22>
|-FunctionDecl 0x55f273e0ff10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f273deaa20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55f273deaaa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55f273e0fd40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55f273e0fdc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55f273e0ffd0 <line:14:22>
|-FunctionDecl 0x55f273e10280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f273e10040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55f273e100c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55f273e10140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55f273e10338 <line:16:22>
|-TypedefDecl 0x55f273e103a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55f273daa0e0 'unsigned char'
|-TypedefDecl 0x55f273e10418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55f273daa100 'unsigned short'
|-TypedefDecl 0x55f273e10488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55f273daa120 'unsigned int'
|-TypedefDecl 0x55f273e104f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55f273daa140 'unsigned long'
|-TypedefDecl 0x55f273e10568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55f273daa040 'signed char'
|-TypedefDecl 0x55f273e105d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55f273daa0e0 'unsigned char'
|-TypedefDecl 0x55f273e10648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55f273daa060 'short'
|-TypedefDecl 0x55f273e106b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55f273daa100 'unsigned short'
|-TypedefDecl 0x55f273e10728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55f273daa080 'int'
|-TypedefDecl 0x55f273e10798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55f273daa120 'unsigned int'
|-TypedefDecl 0x55f273e10808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55f273daa0a0 'long'
|-TypedefDecl 0x55f273e10878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55f273daa140 'unsigned long'
|-TypedefDecl 0x55f273e108e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55f273daa0a0 'long'
|-TypedefDecl 0x55f273e10958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55f273daa140 'unsigned long'
|-TypedefDecl 0x55f273e109c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55f273daa140 'unsigned long'
|-TypedefDecl 0x55f273e10a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55f273daa120 'unsigned int'
|-TypedefDecl 0x55f273e10aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55f273daa120 'unsigned int'
|-TypedefDecl 0x55f273e10b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55f273daa140 'unsigned long'
|-TypedefDecl 0x55f273e10b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55f273daa140 'unsigned long'
|-TypedefDecl 0x55f273e10bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55f273daa120 'unsigned int'
|-TypedefDecl 0x55f273e10c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55f273daa140 'unsigned long'
|-TypedefDecl 0x55f273e10cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55f273daa0a0 'long'
|-TypedefDecl 0x55f273e10d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55f273daa0a0 'long'
|-TypedefDecl 0x55f273e10dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55f273daa080 'int'
|-RecordDecl 0x55f273e10e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55f273e10f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55f273e11030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55f273e10fd0 'struct __fsid_t' sugar
|   `-RecordType 0x55f273e10eb0 '__fsid_t'
|     `-Record 0x55f273e10e30 ''
|-TypedefDecl 0x55f273e110b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55f273daa0a0 'long'
|-TypedefDecl 0x55f273e11128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55f273daa140 'unsigned long'
|-TypedefDecl 0x55f273e11198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55f273daa140 'unsigned long'
|-TypedefDecl 0x55f273e11208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55f273daa120 'unsigned int'
|-TypedefDecl 0x55f273e11278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55f273daa0a0 'long'
|-TypedefDecl 0x55f273e112e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55f273daa120 'unsigned int'
|-TypedefDecl 0x55f273e11358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55f273daa0a0 'long'
|-TypedefDecl 0x55f273e113c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55f273daa080 'int'
|-TypedefDecl 0x55f273e11438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55f273daa080 'int'
|-TypedefDecl 0x55f273e114a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55f273daa080 'int'
|-TypedefDecl 0x55f273e11518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55f273daa7a0 'void *'
|   `-BuiltinType 0x55f273da9fe0 'void'
|-TypedefDecl 0x55f273e11588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55f273daa0a0 'long'
|-TypedefDecl 0x55f273e115f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55f273daa0a0 'long'
|-TypedefDecl 0x55f273e11668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55f273daa0a0 'long'
|-TypedefDecl 0x55f273e116d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55f273daa140 'unsigned long'
|-TypedefDecl 0x55f273e11748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55f273daa140 'unsigned long'
|-TypedefDecl 0x55f273e117b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55f273daa140 'unsigned long'
|-TypedefDecl 0x55f273e11828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55f273daa140 'unsigned long'
|-TypedefDecl 0x55f273e11898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55f273daa0a0 'long'
|-TypedefDecl 0x55f273e11908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55f273daa0a0 'long'
|-TypedefDecl 0x55f273e11978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55f273daa0a0 'long'
|-TypedefDecl 0x55f273e119e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55f273daa140 'unsigned long'
|-TypedefDecl 0x55f273e11a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55f273e11a40 '__off64_t' sugar
|   |-Typedef 0x55f273e10d68 '__off64_t'
|   `-BuiltinType 0x55f273daa0a0 'long'
|-TypedefDecl 0x55f273e11b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55f273e11b30 '__quad_t *'
|   `-TypedefType 0x55f273e11ad0 '__quad_t' sugar
|     |-Typedef 0x55f273e108e8 '__quad_t'
|     `-BuiltinType 0x55f273daa0a0 'long'
|-TypedefDecl 0x55f273e11be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55f273daac20 'char *'
|   `-BuiltinType 0x55f273daa020 'char'
|-TypedefDecl 0x55f273e11c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55f273daa0a0 'long'
|-TypedefDecl 0x55f273e11cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55f273daa120 'unsigned int'
|-FunctionDecl 0x55f273e11e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55f273e11d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55f273e12148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55f273e12138 <line:73:3, col:34>
|     `-CallExpr 0x55f273e120f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55f273e120e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55f273e12070 <col:10> '<builtin fn type>' Function 0x55f273e11ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55f273e12120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55f273e12090 <col:29> 'unsigned int' lvalue ParmVar 0x55f273e11d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x55f273e11ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55f273e11f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55f273e11ff0 <col:10> Implicit
| `-ConstAttr 0x55f273e12048 <col:10> Implicit
|-FunctionDecl 0x55f273e122a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55f273e12198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55f273e125b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55f273e125a8 <line:78:3, col:34>
|     `-CallExpr 0x55f273e12568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55f273e12550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55f273e124d8 <col:10> '<builtin fn type>' Function 0x55f273e12348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55f273e12590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55f273e124f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55f273e12198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55f273e12348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55f273e123e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55f273e12458 <col:10> Implicit
| `-ConstAttr 0x55f273e124b0 <col:10> Implicit
|-TypedefDecl 0x55f273e125e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55f273daa140 'unsigned long'
|-TypedefDecl 0x55f273e12678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55f273e12640 '__time_t' sugar
|   |-Typedef 0x55f273e11278 '__time_t'
|   `-BuiltinType 0x55f273daa0a0 'long'
|-RecordDecl 0x55f273e126d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55f273e12788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55f273e12818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55f273e128a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55f273e12870 '__pid_t' sugar
|   |-Typedef 0x55f273e10dd8 '__pid_t'
|   `-BuiltinType 0x55f273daa080 'int'
|-RecordDecl 0x55f273e12900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55f273e129c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55f273e12a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55f273e12ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55f273e12b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55f273daa140 'unsigned long'
|-RecordDecl 0x55f273e12b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55f273e14e70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55f273e14f20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55f273e14ec0 'struct cpu_set_t' sugar
|   `-RecordType 0x55f273e12c10 'cpu_set_t'
|     `-Record 0x55f273e12b90 ''
|-FunctionDecl 0x55f273e151f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55f273e14fc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55f273e150d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55f273e152a8 <line:108:19>
|-FunctionDecl 0x55f273e15480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55f273e15310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55f273e15528 <col:69>
|-FunctionDecl 0x55f273e156a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55f273e15590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55f273e15748 <col:64>
|-FunctionDecl 0x55f273e15a08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55f273e157b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f273e158e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55f273e15ab8 <line:114:22>
|-FunctionDecl 0x55f273e15e60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55f273e15b20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f273e15c18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55f273e15f10 <col:88>
|-FunctionDecl 0x55f273e161c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55f273e15f78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f273e15ff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55f273e16088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55f273e16280 <col:62>
|-FunctionDecl 0x55f273e163f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55f273e162e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55f273e164a0 <col:63>
|-FunctionDecl 0x55f273e165c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55f273e16668 <col:47>
|-FunctionDecl 0x55f273e16770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55f273e166d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55f273e16818 <col:69>
|-FunctionDecl 0x55f273e16920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55f273e16888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55f273e169c8 <col:69>
|-FunctionDecl 0x55f273e16c88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55f273e16a30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f273e16b68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55f273e16d38 <col:88>
|-TypedefDecl 0x55f273e16dc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55f273e16d90 '__clock_t' sugar
|   |-Typedef 0x55f273e110b8 '__clock_t'
|   `-BuiltinType 0x55f273daa0a0 'long'
|-TypedefDecl 0x55f273e177e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55f273e16e20 '__clockid_t' sugar
|   |-Typedef 0x55f273e114a8 '__clockid_t'
|   `-BuiltinType 0x55f273daa080 'int'
|-TypedefDecl 0x55f273e17878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55f273e17840 '__timer_t' sugar
|   |-Typedef 0x55f273e11518 '__timer_t'
|   `-PointerType 0x55f273daa7a0 'void *'
|     `-BuiltinType 0x55f273da9fe0 'void'
|-RecordDecl 0x55f273e178d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55f273e17990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55f273e179f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55f273e17a60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55f273e17ac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55f273e17b30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55f273e17b98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55f273e17c00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55f273e17c68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55f273e17cd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55f273e17d38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55f273e17da0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55f273e17df0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55f273e17eb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55f273e17f28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55f273e17fd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55f273e181a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55f273e18240 <col:45>
|-FunctionDecl 0x55f273e18420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55f273e18310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55f273e184c8 <col:54>
|-FunctionDecl 0x55f273e186c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55f273e18530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55f273e185a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55f273e18778 <line:158:22>
| `-ConstAttr 0x55f273e19410 <col:63>
|-FunctionDecl 0x55f273e19610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55f273e19508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55f273e196b8 <col:56>
|-FunctionDecl 0x55f273e19a60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55f273e19728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55f273e197a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55f273e19820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55f273e19918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55f273e19b20 <col:54>
|-RecordDecl 0x55f273e19b78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55f273e19c28 parent 0x55f273da9f88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55f273e19e88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55f273e19f28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55f273e19f90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55f273e19ff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55f273e1a0e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55f273e1a208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55f273e1a1b0 'struct __locale_struct *'
|   `-ElaboratedType 0x55f273e1a140 'struct __locale_struct' sugar
|     `-RecordType 0x55f273e19c00 'struct __locale_struct'
|       `-Record 0x55f273e19b78 '__locale_struct'
|-TypedefDecl 0x55f273e1a2b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55f273e1a280 '__locale_t' sugar
|   |-Typedef 0x55f273e1a208 '__locale_t'
|   `-PointerType 0x55f273e1a1b0 'struct __locale_struct *'
|     `-ElaboratedType 0x55f273e1a140 'struct __locale_struct' sugar
|       `-RecordType 0x55f273e19c00 'struct __locale_struct'
|         `-Record 0x55f273e19b78 '__locale_struct'
|-FunctionDecl 0x55f273e1a6b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55f273e1a328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55f273e1a3a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55f273e1a438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55f273e1a4c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55f273e1a540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55f273e1a778 <col:40>
|-FunctionDecl 0x55f273e1a968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55f273e1a840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55f273e1aa10 <col:66>
|-FunctionDecl 0x55f273e1ab20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55f273e1aa78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55f273e1abc8 <col:69>
|-FunctionDecl 0x55f273e1adf8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55f273e1ac30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55f273e1acc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55f273e1aea8 <col:52>
|-FunctionDecl 0x55f273e1b050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55f273e1af10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55f273e1afa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55f273e1b100 <col:55>
|-FunctionDecl 0x55f273e1b298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55f273e1b180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55f273e1b340 <col:62>
|-FunctionDecl 0x55f273e1b578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55f273e1b3a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55f273e1b620 <col:60>
|-FunctionDecl 0x55f273e1b848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55f273e1b6a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55f273e1b720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55f273e1b8f8 <col:44>
|-FunctionDecl 0x55f273e1bb08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55f273e1b960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55f273e1b9e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55f273e1bbb8 <col:49>
|-VarDecl 0x55f273e1bcb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55f273e1bd38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55f273e1bdb8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55f273e1be80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55f273e1bfb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55f273e1c050 <col:42>
|-VarDecl 0x55f273e1c0c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55f273e1c140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55f273e1c2c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55f273e1c1b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55f273e1c370 <col:57>
|-FunctionDecl 0x55f273e1d4f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55f273e1c3f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55f273e1d598 <col:56>
|-FunctionDecl 0x55f273e1d6a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55f273e1d618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55f273e1d750 <col:59>
|-FunctionDecl 0x55f273e1d858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55f273e1d7c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55f273e1d900 <col:48>
| `-ConstAttr 0x55f273e1d958 <col:89>
|-FunctionDecl 0x55f273e1dbb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55f273e1da08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55f273e1da98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55f273e1de18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55f273e1dca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f273e1dd38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55f273e1dec8 <col:88>
|-FunctionDecl 0x55f273e1e060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55f273e1df30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f273e1dfc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55f273e1e110 <col:88>
|-FunctionDecl 0x55f273e1e328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55f273e1e178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f273e1e208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55f273e1e3d8 <line:209:22>
|-FunctionDecl 0x55f273e1e778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55f273e1e440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f273e1e500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55f273e1e590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55f273e1e620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55f273e1ea78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55f273e1e878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55f273e1e950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55f273e1eb28 <col:85>
|-FunctionDecl 0x55f273e1ef18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55f273e1eb90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f273e1ecc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55f273e1edd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55f273e1efd0 <col:52>
|-FunctionDecl 0x55f273e1f148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55f273e1f038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55f273e1f1f0 <col:61>
|-FunctionDecl 0x55f273e1f668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55f273e1f258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55f273e1f2d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55f273e1f408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55f273e1f510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55f273e1f728 <col:62>
|-FunctionDecl 0x55f273e1f948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55f273e1f790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55f273e1f820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55f273e1f9f8 <line:222:22>
|-FunctionDecl 0x55f273e1faf8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55f273e1fa60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55f273e1fba0 <col:65>
|-TypedefDecl 0x55f273e1fc10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55f273daa140 'unsigned long'
|-RecordDecl 0x55f273e1fc68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55f273e1fdb0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55f273e1fe18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f273e1fec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55f273e1fe70 'union pthread_attr_t' sugar
|   `-RecordType 0x55f273e1fcf0 'union pthread_attr_t'
|     `-Record 0x55f273e1fc68 'pthread_attr_t'
|-RecordDecl 0x55f273e1ff20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55f273e20098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55f273e20110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55f273e201c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55f273e20160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55f273e1ffa0 'struct __pthread_internal_list'
|     `-Record 0x55f273e1ff20 '__pthread_internal_list'
|-RecordDecl 0x55f273e20230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55f273e202d8 parent 0x55f273da9f88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55f273e203b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55f273e20418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55f273e20480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55f273e24530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55f273e24598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55f273e24600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55f273e24688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55f273e24740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55f273e24830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55f273e24898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f273e24a20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55f273e249c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55f273e202b0 'pthread_mutex_t'
|     `-Record 0x55f273e20230 ''
|-RecordDecl 0x55f273e24a90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55f273e24bd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55f273e24c38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55f273e24cf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55f273e24c90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55f273e24b10 'pthread_mutexattr_t'
|     `-Record 0x55f273e24a90 ''
|-RecordDecl 0x55f273e24d60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55f273e24e08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55f273e24ed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55f273e24f38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55f273e24fa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55f273e25008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55f273e25070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55f273e250d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55f273e25140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55f273e251a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55f273e25260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi009_pso.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/rfi009_pso.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55f273e25350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55f273e253b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55f273e25540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55f273e25490 'union pthread_cond_t' sugar
|   `-RecordType 0x55f273e24de0 'pthread_cond_t'
|     `-Record 0x55f273e24d60 ''
|-RecordDecl 0x55f273e255b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55f273e256b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55f273e25718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55f273e257d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55f273e25770 'union pthread_condattr_t' sugar
|   `-RecordType 0x55f273e25630 'pthread_condattr_t'
|     `-Record 0x55f273e255b0 ''
|-TypedefDecl 0x55f273e25858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55f273daa120 'unsigned int'
|-TypedefDecl 0x55f273e258c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55f273daa080 'int'
|-RecordDecl 0x55f273e25920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55f273e259c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55f273e25a90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55f273e25af8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55f273e25b60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55f273e25bc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55f273e25c30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55f273e25c98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55f273e25d00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55f273e25d68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55f273e25dd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55f273e25e38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55f273e25ea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55f273e25f50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi009_pso.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/rfi009_pso.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55f273e25ff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55f273e26060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f273e261b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55f273e26150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55f273e259a0 'pthread_rwlock_t'
|     `-Record 0x55f273e25920 ''
|-RecordDecl 0x55f273e26220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55f273e26360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55f273e263c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f273e26480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55f273e26420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55f273e262a0 'pthread_rwlockattr_t'
|     `-Record 0x55f273e26220 ''
|-TypedefDecl 0x55f273e28560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55f273daa084 'volatile int' volatile
|   `-BuiltinType 0x55f273daa080 'int'
|-RecordDecl 0x55f273e285b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55f273e28700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55f273e28768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f273e28820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55f273e287c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55f273e28640 'pthread_barrier_t'
|     `-Record 0x55f273e285b8 ''
|-RecordDecl 0x55f273e28890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55f273e28990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55f273e289f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55f273e28ab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55f273e28a50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55f273e28910 'pthread_barrierattr_t'
|     `-Record 0x55f273e28890 ''
|-TypedefDecl 0x55f273e28bc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55f273e28b60 'long [8]' 8 
|   `-BuiltinType 0x55f273daa0a0 'long'
|-EnumDecl 0x55f273e28c20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55f273e28ce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55f273e28d38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55f273e28d88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55f273e28e58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55f273e28ea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55f273e28ef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55f273e28f48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55f273e28fd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55f273e28fb8 <col:26> 'int'
| |   `-DeclRefExpr 0x55f273e28f98 <col:26> 'int' EnumConstant 0x55f273e28e58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55f273e29058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55f273e29040 <col:29> 'int'
| |   `-DeclRefExpr 0x55f273e29020 <col:29> 'int' EnumConstant 0x55f273e28ea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55f273e290e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55f273e290c8 <col:30> 'int'
| |   `-DeclRefExpr 0x55f273e290a8 <col:30> 'int' EnumConstant 0x55f273e28ef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55f273e29168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55f273e29150 <col:27> 'int'
|     `-DeclRefExpr 0x55f273e29130 <col:27> 'int' EnumConstant 0x55f273e28fd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55f273e291b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55f273e29288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55f273e29310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55f273e292f8 <col:30> 'int'
| |   `-DeclRefExpr 0x55f273e292d8 <col:30> 'int' EnumConstant 0x55f273e29288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55f273e29360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55f273e293e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55f273e293d0 <col:29> 'int'
|     `-DeclRefExpr 0x55f273e293b0 <col:29> 'int' EnumConstant 0x55f273e29360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55f273e29438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55f273e29508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55f273e29570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55f273e295c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55f273e29610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55f273e296d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55f273e29728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55f273e29778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55f273e29800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55f273e297e8 <col:31> 'int'
|     `-DeclRefExpr 0x55f273e297c8 <col:31> 'int' EnumConstant 0x55f273e296d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55f273e29850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55f273e29918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55f273e29968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55f273e299b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55f273e29a88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55f273e29ad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55f273e29b28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55f273e29bf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55f273e29c48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55f273e29c98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55f273e29ed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55f273e29f40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55f273e29fa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55f273e2a0c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55f273e2a118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55f273e2a1e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55f273e2a238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55f273e2a288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55f273e2a358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55f273e2a3a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55f273e2a9d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55f273e2a4a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55f273e2a5c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f273e2a7c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55f273e2a840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55f273e2aa98 <col:47>
| |-NonNullAttr 0x55f273e2aaf0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55f273e2ab28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55f273e2ac50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55f273e2ab80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55f273e2aea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55f273e2ad08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55f273e2ad88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55f273e2b078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55f273e2af68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55f273e2b120 <col:60>
|-FunctionDecl 0x55f273e2b270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55f273e2b310 <col:54>
| `-ConstAttr 0x55f273e2b368 <col:95>
|-FunctionDecl 0x55f273e2bda0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55f273e2b3a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f273e2b418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55f273e2be50 <line:395:19>
| `-ConstAttr 0x55f273e2bea8 <col:60>
|-FunctionDecl 0x55f273e2c078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55f273e2bf40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55f273e2c120 <col:71>
| `-NonNullAttr 0x55f273e2c178 <col:112, col:126> 1
|-FunctionDecl 0x55f273e2c280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55f273e2c1c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55f273e2c328 <line:398:22>
| `-NonNullAttr 0x55f273e2c380 <col:63, col:77> 1
|-FunctionDecl 0x55f273e2c5a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55f273e2c3c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55f273e2c448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55f273e2c658 <line:401:22>
| `-NonNullAttr 0x55f273e2c6b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f273e2c8b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f273e2c6f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f273e2c778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55f273e2c968 <line:404:22>
| `-NonNullAttr 0x55f273e2c9c0 <col:63, col:77> 1
|-FunctionDecl 0x55f273e2cc18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55f273e2ca08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55f273e2cab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55f273e2ccc8 <line:407:22>
| `-NonNullAttr 0x55f273e2cd20 <col:63, col:80> 1 2
|-FunctionDecl 0x55f273e2df78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55f273e2ddc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f273e2de38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55f273e2e028 <line:410:22>
| `-NonNullAttr 0x55f273e2e080 <col:63, col:77> 1
|-FunctionDecl 0x55f273e2e2b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55f273e2e0c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f273e2e158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55f273e2e368 <line:413:22>
| `-NonNullAttr 0x55f273e2e3c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f273e2e5f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55f273e2e408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f273e2e498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55f273e2e6a8 <col:37>
| `-NonNullAttr 0x55f273e2e700 <col:78, col:95> 1 2
|-FunctionDecl 0x55f273e2e8e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f273e2e748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f273e2e7c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55f273e2e998 <line:419:22>
| `-NonNullAttr 0x55f273e2e9f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f273e2eb78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f273e2ea38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f273e2eab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55f273e2ec28 <line:421:22>
| `-NonNullAttr 0x55f273e2ec80 <col:63, col:77> 1
|-FunctionDecl 0x55f273e2fe58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f273e2ecc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f273e2ed48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55f273e2ff08 <line:424:22>
| `-NonNullAttr 0x55f273e2ff60 <col:63, col:80> 1 2
|-FunctionDecl 0x55f273e300e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f273e2ffa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f273e30028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55f273e30198 <line:427:22>
| `-NonNullAttr 0x55f273e301f0 <col:63, col:77> 1
|-FunctionDecl 0x55f273e30398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f273e30238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f273e302b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55f273e30448 <line:430:22>
| `-NonNullAttr 0x55f273e304a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f273e30628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f273e304e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f273e30568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55f273e306d8 <line:432:22>
| `-NonNullAttr 0x55f273e30730 <col:63, col:77> 1
|-FunctionDecl 0x55f273e30958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55f273e30778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f273e307f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55f273e30a08 <line:435:22>
| |-NonNullAttr 0x55f273e30a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55f273e30a98 <col:100> "" ""
|-FunctionDecl 0x55f273e30ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55f273e30ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f273e30b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55f273e30d58 <line:438:22>
| |-NonNullAttr 0x55f273e30db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x55f273e30df8 <col:97> "" ""
|-FunctionDecl 0x55f273e30fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55f273e30e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f273e30ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55f273e31098 <line:441:22>
| `-NonNullAttr 0x55f273e310f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f273e31270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55f273e31138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f273e311b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55f273e31320 <line:444:22>
| `-NonNullAttr 0x55f273e31378 <col:63, col:77> 1
|-FunctionDecl 0x55f273e31668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55f273e313c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f273e31448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55f273e314c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55f273e31720 <line:448:22>
| `-NonNullAttr 0x55f273e31778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55f273e31a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55f273e317d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f273e31850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55f273e318c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55f273e31ae0 <col:43>
| `-NonNullAttr 0x55f273e31b38 <col:84, col:98> 1
|-FunctionDecl 0x55f273e31e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55f273e31b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f273e31c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55f273e31c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55f273e31ef8 <line:453:22>
| `-NonNullAttr 0x55f273e31f50 <col:63, col:77> 3
|-FunctionDecl 0x55f273e32228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55f273e31f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f273e32018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55f273e320a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55f273e322e0 <line:457:22>
| `-NonNullAttr 0x55f273e32338 <col:63, col:80> 2 3
|-FunctionDecl 0x55f273e32528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55f273e32388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f273e32408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55f273e325d8 <line:459:22>
|-FunctionDecl 0x55f273e329a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55f273e326a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55f273e32840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55f273e32a58 <col:52, col:69> 1 2
|-FunctionDecl 0x55f273e32c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55f273e32ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55f273e32b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55f273e32e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55f273e32cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55f273e32d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55f273e32f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55f273e32ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55f273e330a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55f273e33148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55f273e331f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55f273e332e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55f273e33350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55f273e33520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/rfi009_pso.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55f273e33618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55f273e336d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55f273e33670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55f273e331d0 '__pthread_unwind_buf_t'
| |   `-Record 0x55f273e33148 ''
| `-AlignedAttr 0x55f273e33728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55f273e337a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55f273e33900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55f273e33968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55f273e339d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55f273e33a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55f273e33c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55f273e33b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55f273e33e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55f273e33cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55f273e33fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f273e33ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55f273e34088 <line:488:22>
|-RecordDecl 0x55f273e340e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55f273e343f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55f273e34258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55f273e342d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55f273e344a8 <col:86>
| `-ReturnsTwiceAttr 0x55f273e34500 <col:12> Implicit
|-FunctionDecl 0x55f273e34828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55f273e345d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55f273e346e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55f273e348d8 <line:494:22>
| `-NonNullAttr 0x55f273e34930 <col:63, col:77> 1
|-FunctionDecl 0x55f273e34aa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f273e34978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f273e34b50 <line:496:22>
| `-NonNullAttr 0x55f273e34ba8 <col:63, col:77> 1
|-FunctionDecl 0x55f273e34cb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f273e34bf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f273e34d58 <line:498:22>
| `-NonNullAttr 0x55f273e34db0 <col:52, col:66> 1
|-FunctionDecl 0x55f273e34ee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f273e34e30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f273e34f90 <line:500:22>
| `-NonNullAttr 0x55f273e34fe8 <col:52, col:66> 1
|-FunctionDecl 0x55f273e35228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f273e35038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f273e350c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55f273e352d8 <col:36>
| `-NonNullAttr 0x55f273e35330 <col:66, col:83> 1 2
|-FunctionDecl 0x55f273e35430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f273e35378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f273e354d8 <line:505:22>
| `-NonNullAttr 0x55f273e35530 <col:52, col:66> 1
|-FunctionDecl 0x55f273e357c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f273e355e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f273e35660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55f273e35878 <line:509:22>
| `-NonNullAttr 0x55f273e358d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f273e35b98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55f273e35918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f273e35998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55f273e35a18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55f273e35c50 <line:513:22>
| `-NonNullAttr 0x55f273e35ca8 <col:63, col:80> 1 3
|-FunctionDecl 0x55f273e35e40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f273e35cf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f273e35ee8 <line:515:22>
| `-NonNullAttr 0x55f273e35f40 <col:63, col:77> 1
|-FunctionDecl 0x55f273e36128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55f273e35ff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55f273e361d0 <line:517:22>
| `-NonNullAttr 0x55f273e36228 <col:63, col:77> 1
|-FunctionDecl 0x55f273e36330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55f273e36278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55f273e363d8 <line:519:22>
| `-NonNullAttr 0x55f273e36430 <col:63, col:77> 1
|-FunctionDecl 0x55f273e36658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f273e36478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f273e364f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f273e36708 <line:523:22>
| `-NonNullAttr 0x55f273e36760 <col:63, col:80> 1 2
|-FunctionDecl 0x55f273e36968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f273e367a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f273e36828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55f273e36a18 <line:526:22>
| `-NonNullAttr 0x55f273e36a70 <col:63, col:77> 1
|-FunctionDecl 0x55f273e36c18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f273e36ab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f273e36b38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55f273e36cc8 <line:529:22>
| `-NonNullAttr 0x55f273e36d20 <col:63, col:80> 1 2
|-FunctionDecl 0x55f273e37f20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f273e36d68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f273e37e60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55f273e37fd0 <line:531:22>
| `-NonNullAttr 0x55f273e38028 <col:63, col:77> 1
|-FunctionDecl 0x55f273e381d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f273e38078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f273e380f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55f273e38288 <line:535:22>
| `-NonNullAttr 0x55f273e382e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f273e38468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f273e38328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f273e383a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55f273e38518 <line:538:22>
| `-NonNullAttr 0x55f273e38570 <col:63, col:77> 1
|-FunctionDecl 0x55f273e38718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f273e385b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f273e38638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55f273e387c8 <line:542:22>
| `-NonNullAttr 0x55f273e38820 <col:63, col:80> 1 2
|-FunctionDecl 0x55f273e389a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f273e38868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f273e388e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55f273e38a58 <line:545:22>
| `-NonNullAttr 0x55f273e38ab0 <col:63, col:77> 1
|-FunctionDecl 0x55f273e38c98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55f273e38af8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f273e38b78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55f273e38d48 <line:548:22>
| `-NonNullAttr 0x55f273e38da0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f273e39f58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f273e38de8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f273e39e98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55f273e3a008 <line:551:22>
| `-NonNullAttr 0x55f273e3a060 <col:63, col:77> 1
|-FunctionDecl 0x55f273e3a398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55f273e3a140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55f273e3a250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55f273e3a448 <col:29>
| `-NonNullAttr 0x55f273e3a4a0 <col:70, col:84> 1
|-FunctionDecl 0x55f273e3a618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f273e3a4e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f273e3a6c0 <line:556:22>
| `-NonNullAttr 0x55f273e3a718 <col:63, col:77> 1
|-FunctionDecl 0x55f273e3a820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f273e3a768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f273e3a8c8 <line:558:22>
| `-NonNullAttr 0x55f273e3a920 <col:52, col:66> 1
|-FunctionDecl 0x55f273e3aa20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f273e3a968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f273e3aac8 <line:560:19>
| `-NonNullAttr 0x55f273e3ab20 <col:49, col:63> 1
|-FunctionDecl 0x55f273e3ad58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f273e3ab68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55f273e3abf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55f273e3ae08 <col:39>
| `-NonNullAttr 0x55f273e3ae90 <col:69, col:86> 1 2
|-FunctionDecl 0x55f273e3af90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f273e3aed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f273e3b038 <line:565:22>
| `-NonNullAttr 0x55f273e3b090 <col:52, col:66> 1
|-FunctionDecl 0x55f273e3b190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f273e3b0d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f273e3b238 <line:567:22>
| `-NonNullAttr 0x55f273e3b290 <col:52, col:66> 1
|-FunctionDecl 0x55f273e3b448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f273e3b2d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55f273e3b368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55f273e3b4f8 <col:39>
| `-NonNullAttr 0x55f273e3b550 <col:69, col:86> 1 2
|-FunctionDecl 0x55f273e3b650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f273e3b598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f273e3b6f8 <line:572:22>
| `-NonNullAttr 0x55f273e3b750 <col:52, col:66> 1
|-FunctionDecl 0x55f273e3b938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55f273e3b800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55f273e3b9e0 <line:574:22>
| `-NonNullAttr 0x55f273e3ba38 <col:63, col:77> 1
|-FunctionDecl 0x55f273e3bb40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55f273e3ba88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55f273e3bbe8 <line:576:22>
| `-NonNullAttr 0x55f273e3bc40 <col:63, col:77> 1
|-FunctionDecl 0x55f273e3bea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f273e3bc88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55f273e3bd08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f273e3bf50 <line:580:22>
| `-NonNullAttr 0x55f273e3bfa8 <col:63, col:80> 1 2
|-FunctionDecl 0x55f273e3c1b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55f273e3bff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55f273e3c078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55f273e3c268 <line:583:22>
| `-NonNullAttr 0x55f273e3c2c0 <col:63, col:77> 1
|-FunctionDecl 0x55f273e3c468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f273e3c308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55f273e3c388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55f273e3c518 <line:587:22>
| `-NonNullAttr 0x55f273e3c570 <col:63, col:80> 1 2
|-FunctionDecl 0x55f273e3c6f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55f273e3c5b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55f273e3c638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55f273e3c7a8 <col:36>
| `-NonNullAttr 0x55f273e3c800 <col:77, col:91> 1
|-FunctionDecl 0x55f273e3cb38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55f273e3c8e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55f273e3c9f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55f273e3cbe8 <line:592:22>
| `-NonNullAttr 0x55f273e3cc40 <col:63, col:77> 1
|-FunctionDecl 0x55f273e3cdb8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55f273e3cc88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55f273e3ce60 <line:594:22>
| `-NonNullAttr 0x55f273e3cee0 <col:63, col:77> 1
|-FunctionDecl 0x55f273e3cfe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55f273e3cf28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55f273e3d088 <line:596:22>
| `-NonNullAttr 0x55f273e3d0e0 <col:52, col:66> 1
|-FunctionDecl 0x55f273e3d1e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55f273e3d128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55f273e3d288 <line:598:22>
| `-NonNullAttr 0x55f273e3d2e0 <col:52, col:66> 1
|-FunctionDecl 0x55f273e3d508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55f273e3d328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55f273e3d3a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55f273e3d5b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55f273e3d8e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f273e3d638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55f273e3d6b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f273e3d740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55f273e3d9a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55f273e3dbb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55f273e3da80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55f273e3dc60 <line:607:22>
| `-NonNullAttr 0x55f273e3dcb8 <col:63, col:77> 1
|-FunctionDecl 0x55f273e3ddc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55f273e3dd08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55f273e3de68 <line:609:22>
| `-NonNullAttr 0x55f273e3def0 <col:63, col:77> 1
|-FunctionDecl 0x55f273e3e118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f273e3df38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55f273e3dfb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f273e3e1c8 <line:613:22>
| `-NonNullAttr 0x55f273e3e220 <col:63, col:80> 1 2
|-FunctionDecl 0x55f273e3e428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55f273e3e268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55f273e3e2e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55f273e3e4d8 <col:37>
| `-NonNullAttr 0x55f273e3e530 <col:78, col:92> 1
|-FunctionDecl 0x55f273e3e748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55f273e3e578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55f273e3e620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55f273e3e7f8 <line:619:22>
| `-NonNullAttr 0x55f273e3e850 <col:63, col:80> 1 2
|-FunctionDecl 0x55f273e3ea18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55f273e3e898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55f273e3e910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55f273e3eac8 <line:622:22>
| `-NonNullAttr 0x55f273e3eb20 <col:63, col:77> 1
|-FunctionDecl 0x55f273e3edc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55f273e3ec00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55f273e3ec80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55f273e3ee78 <line:624:22>
| `-NonNullAttr 0x55f273e3ef00 <col:63, col:77> 1
|-FunctionDecl 0x55f273e3f078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f273e3ef48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f273e3f120 <line:626:22>
| `-NonNullAttr 0x55f273e3f178 <col:63, col:77> 1
|-FunctionDecl 0x55f273e3f280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f273e3f1c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f273e3f328 <line:628:22>
| `-NonNullAttr 0x55f273e3f380 <col:52, col:66> 1
|-FunctionDecl 0x55f273e3f480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f273e3f3c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f273e3f528 <line:630:22>
| `-NonNullAttr 0x55f273e3f580 <col:52, col:66> 1
|-FunctionDecl 0x55f273e3f680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f273e3f5c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f273e3f728 <line:632:22>
| `-NonNullAttr 0x55f273e3f780 <col:52, col:66> 1
|-FunctionDecl 0x55f273e3fb58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55f273e3f860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55f273e3f970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55f273e3f9f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55f273e3fc10 <line:636:22>
| `-NonNullAttr 0x55f273e3fc68 <col:63, col:77> 1
|-FunctionDecl 0x55f273e3fde8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55f273e3fcb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55f273e3fe90 <line:638:22>
| `-NonNullAttr 0x55f273e3ff10 <col:63, col:77> 1
|-FunctionDecl 0x55f273e40010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55f273e3ff58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55f273e400b8 <line:640:22>
| `-NonNullAttr 0x55f273e40110 <col:52, col:66> 1
|-FunctionDecl 0x55f273e402f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55f273e401c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55f273e403a0 <line:642:22>
| `-NonNullAttr 0x55f273e403f8 <col:63, col:77> 1
|-FunctionDecl 0x55f273e40500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55f273e40448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55f273e405a8 <line:644:22>
| `-NonNullAttr 0x55f273e40600 <col:63, col:77> 1
|-FunctionDecl 0x55f273e40828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f273e40648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55f273e406c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f273e408d8 <line:648:22>
| `-NonNullAttr 0x55f273e40930 <col:63, col:80> 1 2
|-FunctionDecl 0x55f273e40b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55f273e40978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55f273e409f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55f273e40be8 <line:651:22>
| `-NonNullAttr 0x55f273e40c40 <col:63, col:77> 1
|-FunctionDecl 0x55f273e40fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55f273e40d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55f273e40e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55f273e41058 <line:654:22>
| `-NonNullAttr 0x55f273e410b0 <col:63, col:77> 1
|-FunctionDecl 0x55f273e41208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55f273e410f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55f273e412b0 <col:69>
|-FunctionDecl 0x55f273e41428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55f273e41318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55f273e414d0 <col:72>
|-FunctionDecl 0x55f273e41708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55f273e41538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55f273e415e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55f273e417b8 <col:44>
|-FunctionDecl 0x55f273e419d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55f273e41820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f273e41898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55f273e41a88 <line:661:22>
| `-NonNullAttr 0x55f273e41ae0 <col:63, col:77> 2
|-FunctionDecl 0x55f273e42f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55f273e41bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55f273e41cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55f273e41de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55f273e43008 <col:47>
|-FunctionDecl 0x55f273e43110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55f273e43078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55f273e43268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55f273e431d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55f273e433c0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55f273e43328 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55f273e43488 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55f273e43548 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55f273e43608 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55f273e436c0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55f273e43740 prev 0x55f273e436c0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55f273e437a8 <col:24> 'int' 0
|-VarDecl 0x55f273e437e0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55f273e43860 prev 0x55f273e437e0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55f273e438c8 <col:27> 'int' 0
|-VarDecl 0x55f273e43900 <line:676:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x55f273e43980 prev 0x55f273e43900 <line:677:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x55f273e439e8 <col:27> 'int' 0
|-VarDecl 0x55f273e43a20 <line:678:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55f273e43aa0 prev 0x55f273e43a20 <line:679:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55f273e43b08 <col:27> 'int' 0
|-VarDecl 0x55f273e43b40 <line:680:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x55f273e43bc0 prev 0x55f273e43b40 <line:681:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x55f273e43c28 <col:27> 'int' 0
|-VarDecl 0x55f273e43c58 <line:682:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55f273e43cd0 <line:683:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55f273e43d50 <line:684:1, col:5> col:5 used x 'int'
|-VarDecl 0x55f273e43dd0 prev 0x55f273e43d50 <line:685:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55f273e43e38 <col:9> 'int' 0
|-VarDecl 0x55f273e43e70 <line:686:1, col:5> col:5 used y 'int'
|-VarDecl 0x55f273e43f20 prev 0x55f273e43e70 <line:687:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55f273e43f88 <col:9> 'int' 0
|-VarDecl 0x55f273e43fb8 <line:688:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x55f273e44038 <line:689:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x55f273e440b0 <line:690:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x55f273e44128 <line:691:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x55f273e441a0 <line:692:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x55f273e44218 <line:693:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x55f273e44290 <line:694:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x55f273e44308 <line:695:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x55f273e44380 <line:696:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x55f273e443f8 <line:697:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x55f273e44470 <line:698:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x55f273e444f0 <line:699:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x55f273e44570 <line:700:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x55f273e445e8 <line:701:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x55f273e44668 <line:702:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x55f273e446e0 <line:703:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x55f273e44758 <line:704:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55f273e447d0 <line:705:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55f273e448e8 prev 0x55f273e43110 <line:706:1, line:733:1> line:706:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55f273e44850 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55f273e47848 <line:707:1, line:733:1>
|   |-CallExpr 0x55f273e449f8 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f273e449e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f273e44990 <col:3> 'void ()' Function 0x55f273dea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f273e44a70 <line:709:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55f273e44a18 <col:3> 'int' lvalue Var 0x55f273e43860 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55f273e44a58 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f273e44a38 <col:25> 'int' lvalue Var 0x55f273e43dd0 'x' 'int'
|   |-CallExpr 0x55f273e44ac8 <line:710:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f273e44ab0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f273e44a90 <col:3> 'void ()' Function 0x55f273dea570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f273e44b20 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f273e44b08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f273e44ae8 <col:3> 'void ()' Function 0x55f273dea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f273e44be8 <line:712:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e44b40 <col:3> '_Bool' lvalue Var 0x55f273e44758 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55f273e44bc8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55f273e44bb0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55f273e44b60 <col:19> '_Bool (void)' Function 0x55f273de9c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55f273e44c80 <line:713:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e44c08 <col:3> '_Bool' lvalue Var 0x55f273e447d0 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55f273e44c60 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55f273e44c48 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55f273e44c28 <col:19> '_Bool (void)' Function 0x55f273de9c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55f273e44cf8 <line:714:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e44ca0 <col:3> '_Bool' lvalue Var 0x55f273e43fb8 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55f273e44ce0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f273e44cc0 <col:21> '_Bool' lvalue Var 0x55f273e447d0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55f273e44d70 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55f273e44d18 <col:3> 'int' lvalue Var 0x55f273e44038 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55f273e44d58 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f273e44d38 <col:15> 'int' lvalue Var 0x55f273e43f20 'y' 'int'
|   |-BinaryOperator 0x55f273e451c0 <line:716:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55f273e44d90 <col:3> 'int' lvalue Var 0x55f273e43f20 'y' 'int'
|   | `-ConditionalOperator 0x55f273e45190 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55f273e44fb8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55f273e44ec0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55f273e44de8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55f273e44dd0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55f273e44db0 <col:8> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55f273e44ea0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55f273e44e38 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55f273e44e20 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55f273e44e00 <col:27> '_Bool' lvalue Var 0x55f273e44128 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x55f273e44e88 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55f273e44e70 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55f273e44e50 <col:46> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55f273e44f98 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55f273e44f30 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55f273e44f00 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55f273e44ee0 <col:65> '_Bool' lvalue Var 0x55f273e44128 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x55f273e44f80 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55f273e44f68 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55f273e44f48 <col:84> '_Bool' lvalue Var 0x55f273e44308 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55f273e45178 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f273e44fd8 <col:101> 'int' lvalue Var 0x55f273e43f20 'y' 'int'
|   |   `-ParenExpr 0x55f273e45158 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55f273e45128 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55f273e45098 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55f273e45050 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55f273e45038 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55f273e44ff8 <col:106> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55f273e45080 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55f273e45068 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55f273e45018 <col:124> '_Bool' lvalue Var 0x55f273e44128 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55f273e450f8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f273e450b8 <col:141> 'int' lvalue Var 0x55f273e44570 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55f273e45110 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f273e450d8 <col:153> 'int' lvalue Var 0x55f273e44668 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55f273e456d0 <line:717:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55f273e451e0 <col:3> 'int' lvalue Var 0x55f273e44570 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55f273e456a0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55f273e45670 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55f273e45658 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55f273e45200 <col:15> '_Bool' lvalue Var 0x55f273e447d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55f273e45688 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f273e45220 <col:31> 'int' lvalue Var 0x55f273e44570 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55f273e45638 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55f273e45608 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55f273e45430 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55f273e45350 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55f273e45278 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55f273e45260 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55f273e45240 <col:45> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55f273e45330 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55f273e452c8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55f273e452b0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55f273e45290 <col:64> '_Bool' lvalue Var 0x55f273e44128 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55f273e45318 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55f273e45300 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55f273e452e0 <col:83> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55f273e45410 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55f273e453a8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55f273e45390 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55f273e45370 <col:102> '_Bool' lvalue Var 0x55f273e44128 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55f273e453f8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55f273e453e0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55f273e453c0 <col:121> '_Bool' lvalue Var 0x55f273e44308 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55f273e455f0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f273e45450 <col:138> 'int' lvalue Var 0x55f273e44570 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55f273e455d0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55f273e455a0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55f273e45510 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55f273e454c8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55f273e454b0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55f273e45470 <col:151> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55f273e454f8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55f273e454e0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55f273e45490 <col:169> '_Bool' lvalue Var 0x55f273e44128 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55f273e45570 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55f273e45530 <col:186> 'int' lvalue Var 0x55f273e44570 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55f273e45588 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55f273e45550 <col:198> 'int' lvalue Var 0x55f273e44570 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55f273e45be0 <line:718:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55f273e456f0 <col:3> 'int' lvalue Var 0x55f273e44668 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55f273e45bb0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55f273e45b80 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55f273e45b68 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55f273e45710 <col:15> '_Bool' lvalue Var 0x55f273e447d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55f273e45b98 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f273e45730 <col:31> 'int' lvalue Var 0x55f273e44668 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55f273e45b48 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55f273e45b18 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55f273e45940 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55f273e45860 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55f273e45788 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55f273e45770 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55f273e45750 <col:45> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55f273e45840 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55f273e457d8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55f273e457c0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55f273e457a0 <col:64> '_Bool' lvalue Var 0x55f273e44128 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55f273e45828 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55f273e45810 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55f273e457f0 <col:83> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55f273e45920 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55f273e458b8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55f273e458a0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55f273e45880 <col:102> '_Bool' lvalue Var 0x55f273e44128 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55f273e45908 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55f273e458f0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55f273e458d0 <col:121> '_Bool' lvalue Var 0x55f273e44308 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55f273e45b00 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f273e45960 <col:138> 'int' lvalue Var 0x55f273e44668 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55f273e45ae0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55f273e45ab0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55f273e45a20 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55f273e459d8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55f273e459c0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55f273e45980 <col:151> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55f273e45a08 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55f273e459f0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55f273e459a0 <col:169> '_Bool' lvalue Var 0x55f273e44128 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55f273e45a80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55f273e45a40 <col:186> 'int' lvalue Var 0x55f273e44668 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55f273e45a98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55f273e45a60 <col:198> 'int' lvalue Var 0x55f273e44668 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55f273e46198 <line:719:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e45c00 <col:3> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f273e46180 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f273e46150 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55f273e46108 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f273e460f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f273e45c20 <col:20> '_Bool' lvalue Var 0x55f273e447d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f273e46138 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f273e46120 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f273e45c40 <col:36> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55f273e460d0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55f273e460a0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55f273e45e50 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55f273e45d70 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55f273e45c98 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55f273e45c80 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55f273e45c60 <col:55> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55f273e45d50 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55f273e45ce8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55f273e45cd0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55f273e45cb0 <col:74> '_Bool' lvalue Var 0x55f273e44128 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55f273e45d38 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55f273e45d20 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55f273e45d00 <col:93> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55f273e45e30 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55f273e45dc8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55f273e45db0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55f273e45d90 <col:112> '_Bool' lvalue Var 0x55f273e44128 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55f273e45e18 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55f273e45e00 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55f273e45de0 <col:131> '_Bool' lvalue Var 0x55f273e44308 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55f273e46088 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f273e46070 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f273e45e70 <col:148> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55f273e46050 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55f273e46020 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55f273e45f40 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f273e45ee8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f273e45ed0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f273e45e90 <col:166> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f273e45f18 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f273e45f00 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f273e45eb0 <col:184> '_Bool' lvalue Var 0x55f273e44128 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55f273e45fd8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f273e45f90 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f273e45f60 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55f273e46008 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55f273e45ff0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55f273e45fb8 <col:212> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f273e46760 <line:720:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e461b8 <col:3> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f273e46748 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f273e46718 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55f273e466d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f273e466b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f273e461d8 <col:20> '_Bool' lvalue Var 0x55f273e447d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f273e46700 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f273e466e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f273e461f8 <col:36> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55f273e46698 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55f273e46668 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55f273e46408 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55f273e46328 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55f273e46250 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55f273e46238 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55f273e46218 <col:55> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55f273e46308 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55f273e462a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55f273e46288 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55f273e46268 <col:74> '_Bool' lvalue Var 0x55f273e44128 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55f273e462f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55f273e462d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55f273e462b8 <col:93> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55f273e463e8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55f273e46380 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55f273e46368 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55f273e46348 <col:112> '_Bool' lvalue Var 0x55f273e44128 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55f273e463d0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55f273e463b8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55f273e46398 <col:131> '_Bool' lvalue Var 0x55f273e44308 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55f273e46650 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f273e46638 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f273e46428 <col:148> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55f273e46618 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55f273e465e8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55f273e464e8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f273e464a0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f273e46488 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f273e46448 <col:166> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f273e464d0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f273e464b8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f273e46468 <col:184> '_Bool' lvalue Var 0x55f273e44128 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55f273e465b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f273e46538 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f273e46508 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55f273e465d0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55f273e46590 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55f273e46560 <col:219> 'int' 0
|   |-BinaryOperator 0x55f273e46d08 <line:721:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e46780 <col:3> '_Bool' lvalue Var 0x55f273e44128 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55f273e46cf0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f273e46cc0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55f273e46c78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f273e46c60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f273e467a0 <col:20> '_Bool' lvalue Var 0x55f273e447d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f273e46ca8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f273e46c90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f273e467c0 <col:36> '_Bool' lvalue Var 0x55f273e44128 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55f273e46c40 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55f273e46c10 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55f273e469d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55f273e468f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55f273e46818 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55f273e46800 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55f273e467e0 <col:55> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55f273e468d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55f273e46868 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55f273e46850 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55f273e46830 <col:74> '_Bool' lvalue Var 0x55f273e44128 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55f273e468b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55f273e468a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55f273e46880 <col:93> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55f273e469b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55f273e46948 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55f273e46930 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55f273e46910 <col:112> '_Bool' lvalue Var 0x55f273e44128 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55f273e46998 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55f273e46980 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55f273e46960 <col:131> '_Bool' lvalue Var 0x55f273e44308 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55f273e46bf8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f273e46be0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f273e469f0 <col:148> '_Bool' lvalue Var 0x55f273e44128 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55f273e46bc0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55f273e46b90 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55f273e46ab0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f273e46a68 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f273e46a50 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f273e46a10 <col:166> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f273e46a98 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f273e46a80 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f273e46a30 <col:184> '_Bool' lvalue Var 0x55f273e44128 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55f273e46b48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f273e46b00 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f273e46ad0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55f273e46b78 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55f273e46b60 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55f273e46b28 <col:212> '_Bool' lvalue Var 0x55f273e44128 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55f273e472e0 <line:722:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e46d28 <col:3> '_Bool' lvalue Var 0x55f273e44308 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55f273e472c8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f273e47298 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55f273e47250 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f273e47238 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f273e46d48 <col:20> '_Bool' lvalue Var 0x55f273e447d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f273e47280 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f273e47268 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f273e46d68 <col:36> '_Bool' lvalue Var 0x55f273e44308 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55f273e47218 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55f273e471e8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55f273e46f88 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55f273e46e98 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55f273e46dc0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55f273e46da8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55f273e46d88 <col:55> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55f273e46e78 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55f273e46e10 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55f273e46df8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55f273e46dd8 <col:74> '_Bool' lvalue Var 0x55f273e44128 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55f273e46e60 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55f273e46e48 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55f273e46e28 <col:93> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55f273e46f68 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55f273e46ef0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55f273e46ed8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55f273e46eb8 <col:112> '_Bool' lvalue Var 0x55f273e44128 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55f273e46f50 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55f273e46f28 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55f273e46f08 <col:131> '_Bool' lvalue Var 0x55f273e44308 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55f273e471d0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f273e471b8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f273e46fa8 <col:148> '_Bool' lvalue Var 0x55f273e44308 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55f273e47198 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55f273e47168 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55f273e47068 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f273e47020 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f273e47008 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f273e46fc8 <col:166> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f273e47050 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f273e47038 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f273e46fe8 <col:184> '_Bool' lvalue Var 0x55f273e44128 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55f273e47138 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f273e470b8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f273e47088 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55f273e47150 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55f273e47110 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55f273e470e0 <col:219> 'int' 0
|   |-BinaryOperator 0x55f273e47358 <line:723:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55f273e47300 <col:3> 'int' lvalue Var 0x55f273e43980 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x55f273e47340 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f273e47320 <col:25> 'int' lvalue Var 0x55f273e43f20 'y' 'int'
|   |-BinaryOperator 0x55f273e47488 <line:724:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55f273e47378 <col:3> 'int' lvalue Var 0x55f273e43f20 'y' 'int'
|   | `-ConditionalOperator 0x55f273e47458 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55f273e47410 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55f273e473f8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55f273e47398 <col:7> '_Bool' lvalue Var 0x55f273e43fb8 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55f273e47428 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f273e473b8 <col:25> 'int' lvalue Var 0x55f273e44038 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55f273e47440 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55f273e473d8 <col:37> 'int' lvalue Var 0x55f273e43f20 'y' 'int'
|   |-BinaryOperator 0x55f273e47520 <line:725:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e474a8 <col:3> '_Bool' lvalue Var 0x55f273e43fb8 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55f273e474f8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55f273e474c8 <col:28> 'int' 0
|   |-CallExpr 0x55f273e47578 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f273e47560 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f273e47540 <col:3> 'void ()' Function 0x55f273dea570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f273e475d0 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f273e475b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f273e47598 <col:3> 'void ()' Function 0x55f273dea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55f273e47628 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f273e47610 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f273e475f0 <col:3> 'void ()' Function 0x55f273dea570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f273e47680 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f273e47668 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f273e47648 <col:3> 'void ()' Function 0x55f273dea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f273e47738 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55f273e476a0 <col:3> 'int' lvalue Var 0x55f273e43740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55f273e47718 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55f273e47700 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f273e476c0 <col:22> 'int' lvalue Var 0x55f273e43740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55f273e476e0 <col:41> 'int' 1
|   |-CallExpr 0x55f273e47790 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f273e47778 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f273e47758 <col:3> 'void ()' Function 0x55f273dea570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55f273e47838 <line:732:3, col:36>
|     `-CallExpr 0x55f273e47818 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55f273e47800 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55f273e477b0 <col:10> 'void *(void)' Function 0x55f273de9fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55f273e479d0 prev 0x55f273e43268 <line:734:1, line:778:1> line:734:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55f273e47938 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55f273e4bc50 <line:735:1, line:778:1>
|   |-CallExpr 0x55f273e47ab0 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f273e47a98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f273e47a78 <col:3> 'void ()' Function 0x55f273dea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f273e47b28 <line:737:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55f273e47ad0 <col:3> 'int' lvalue Var 0x55f273e44668 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55f273e47b10 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f273e47af0 <col:15> 'int' lvalue Var 0x55f273e44570 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55f273e47b88 <line:738:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55f273e47b48 <col:3> 'int' lvalue Var 0x55f273e44570 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x55f273e47b68 <col:15> 'int' 1
|   |-BinaryOperator 0x55f273e47c00 <line:739:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e47ba8 <col:3> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f273e47be8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f273e47bc8 <col:20> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f273e47c98 <line:740:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e47c20 <col:3> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55f273e47c70 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55f273e47c40 <col:27> 'int' 1
|   |-CallExpr 0x55f273e47e18 <line:741:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55f273e47e00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55f273e47cb8 <col:3> 'void (int)' Function 0x55f273dea238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55f273e47db8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55f273e47d98 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55f273e47d78 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55f273e47d30 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55f273e47d18 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55f273e47cd8 <col:23> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55f273e47d60 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55f273e47d48 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55f273e47cf8 <col:41> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f273e47e98 <line:742:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e47e40 <col:3> '_Bool' lvalue Var 0x55f273e44290 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55f273e47e80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f273e47e60 <col:20> '_Bool' lvalue Var 0x55f273e440b0 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55f273e47f10 <line:743:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e47eb8 <col:3> '_Bool' lvalue Var 0x55f273e44308 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55f273e47ef8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f273e47ed8 <col:20> '_Bool' lvalue Var 0x55f273e44128 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55f273e47f98 <line:744:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e47f30 <col:3> '_Bool' lvalue Var 0x55f273e44380 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55f273e47f80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f273e47f60 <col:20> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55f273e48010 <line:745:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e47fb8 <col:3> '_Bool' lvalue Var 0x55f273e443f8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55f273e47ff8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f273e47fd8 <col:20> '_Bool' lvalue Var 0x55f273e44218 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55f273e480a8 <line:746:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e48030 <col:3> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x55f273e48080 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55f273e48050 <col:27> 'int' 1
|   |-CallExpr 0x55f273e48100 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f273e480e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f273e480c8 <col:3> 'void ()' Function 0x55f273dea570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f273e48158 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f273e48140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f273e48120 <col:3> 'void ()' Function 0x55f273dea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f273e481f0 <line:749:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e48178 <col:3> '_Bool' lvalue Var 0x55f273e44758 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55f273e481d0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55f273e481b8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55f273e48198 <col:19> '_Bool (void)' Function 0x55f273de9c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55f273e48288 <line:750:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e48210 <col:3> '_Bool' lvalue Var 0x55f273e447d0 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55f273e48268 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55f273e48250 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55f273e48230 <col:19> '_Bool (void)' Function 0x55f273de9c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55f273e48300 <line:751:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e482a8 <col:3> '_Bool' lvalue Var 0x55f273e43fb8 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55f273e482e8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f273e482c8 <col:21> '_Bool' lvalue Var 0x55f273e447d0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55f273e48378 <line:752:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55f273e48320 <col:3> 'int' lvalue Var 0x55f273e44038 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55f273e48360 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f273e48340 <col:15> 'int' lvalue Var 0x55f273e43f20 'y' 'int'
|   |-BinaryOperator 0x55f273e487b0 <line:753:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55f273e48398 <col:3> 'int' lvalue Var 0x55f273e43f20 'y' 'int'
|   | `-ConditionalOperator 0x55f273e48780 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55f273e485a8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55f273e484c8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55f273e483f0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55f273e483d8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55f273e483b8 <col:8> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55f273e484a8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55f273e48440 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55f273e48428 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55f273e48408 <col:27> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55f273e48490 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55f273e48478 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55f273e48458 <col:46> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55f273e48588 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55f273e48520 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55f273e48508 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55f273e484e8 <col:65> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55f273e48570 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55f273e48558 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55f273e48538 <col:84> '_Bool' lvalue Var 0x55f273e44380 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55f273e48768 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f273e485c8 <col:101> 'int' lvalue Var 0x55f273e43f20 'y' 'int'
|   |   `-ParenExpr 0x55f273e48748 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55f273e48718 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55f273e48688 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55f273e48640 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55f273e48628 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55f273e485e8 <col:106> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55f273e48670 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55f273e48658 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55f273e48608 <col:124> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55f273e486e8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f273e486a8 <col:141> 'int' lvalue Var 0x55f273e44570 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55f273e48700 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f273e486c8 <col:153> 'int' lvalue Var 0x55f273e44668 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55f273e48cc0 <line:754:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55f273e487d0 <col:3> 'int' lvalue Var 0x55f273e44570 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55f273e48c90 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55f273e48c60 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55f273e48c48 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55f273e487f0 <col:15> '_Bool' lvalue Var 0x55f273e447d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55f273e48c78 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f273e48810 <col:31> 'int' lvalue Var 0x55f273e44570 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55f273e48c28 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55f273e48bf8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55f273e48a20 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55f273e48940 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55f273e48868 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55f273e48850 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55f273e48830 <col:45> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55f273e48920 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55f273e488b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55f273e488a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55f273e48880 <col:64> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55f273e48908 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55f273e488f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55f273e488d0 <col:83> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55f273e48a00 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55f273e48998 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55f273e48980 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55f273e48960 <col:102> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55f273e489e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55f273e489d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55f273e489b0 <col:121> '_Bool' lvalue Var 0x55f273e44380 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55f273e48be0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f273e48a40 <col:138> 'int' lvalue Var 0x55f273e44570 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55f273e48bc0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55f273e48b90 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55f273e48b00 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55f273e48ab8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55f273e48aa0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55f273e48a60 <col:151> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55f273e48ae8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55f273e48ad0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55f273e48a80 <col:169> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55f273e48b60 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55f273e48b20 <col:186> 'int' lvalue Var 0x55f273e44570 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55f273e48b78 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55f273e48b40 <col:198> 'int' lvalue Var 0x55f273e44570 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55f273e491f0 <line:755:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55f273e48ce0 <col:3> 'int' lvalue Var 0x55f273e44668 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55f273e491c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55f273e49190 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55f273e49178 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55f273e48d00 <col:15> '_Bool' lvalue Var 0x55f273e447d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55f273e491a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f273e48d20 <col:31> 'int' lvalue Var 0x55f273e44668 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55f273e49158 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55f273e49128 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55f273e48f30 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55f273e48e50 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55f273e48d78 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55f273e48d60 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55f273e48d40 <col:45> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55f273e48e30 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55f273e48dc8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55f273e48db0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55f273e48d90 <col:64> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55f273e48e18 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55f273e48e00 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55f273e48de0 <col:83> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55f273e48f10 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55f273e48ea8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55f273e48e90 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55f273e48e70 <col:102> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55f273e48ef8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55f273e48ee0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55f273e48ec0 <col:121> '_Bool' lvalue Var 0x55f273e44380 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55f273e49110 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f273e48f70 <col:138> 'int' lvalue Var 0x55f273e44668 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55f273e490f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55f273e490c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55f273e49030 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55f273e48fe8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55f273e48fd0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55f273e48f90 <col:151> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55f273e49018 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55f273e49000 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55f273e48fb0 <col:169> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55f273e49090 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55f273e49050 <col:186> 'int' lvalue Var 0x55f273e44668 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55f273e490a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55f273e49070 <col:198> 'int' lvalue Var 0x55f273e44668 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55f273e49798 <line:756:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e49210 <col:3> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f273e49780 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f273e49750 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55f273e49708 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f273e496f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f273e49230 <col:20> '_Bool' lvalue Var 0x55f273e447d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f273e49738 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f273e49720 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f273e49250 <col:36> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55f273e496d0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55f273e496a0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55f273e49460 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55f273e49380 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55f273e492a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55f273e49290 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55f273e49270 <col:55> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55f273e49360 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55f273e492f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55f273e492e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55f273e492c0 <col:74> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55f273e49348 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55f273e49330 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55f273e49310 <col:93> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55f273e49440 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55f273e493d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55f273e493c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55f273e493a0 <col:112> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55f273e49428 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55f273e49410 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55f273e493f0 <col:131> '_Bool' lvalue Var 0x55f273e44380 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55f273e49688 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f273e49670 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f273e49480 <col:148> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55f273e49650 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55f273e49620 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55f273e49540 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f273e494f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f273e494e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f273e494a0 <col:166> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f273e49528 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f273e49510 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f273e494c0 <col:184> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55f273e495d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f273e49590 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f273e49560 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55f273e49608 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55f273e495f0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55f273e495b8 <col:212> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f273e49d60 <line:757:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e497b8 <col:3> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f273e49d48 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f273e49d18 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55f273e49cd0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f273e49cb8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f273e497d8 <col:20> '_Bool' lvalue Var 0x55f273e447d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f273e49d00 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f273e49ce8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f273e497f8 <col:36> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55f273e49c98 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55f273e49c68 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55f273e49a08 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55f273e49928 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55f273e49850 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55f273e49838 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55f273e49818 <col:55> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55f273e49908 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55f273e498a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55f273e49888 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55f273e49868 <col:74> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55f273e498f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55f273e498d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55f273e498b8 <col:93> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55f273e499e8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55f273e49980 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55f273e49968 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55f273e49948 <col:112> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55f273e499d0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55f273e499b8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55f273e49998 <col:131> '_Bool' lvalue Var 0x55f273e44380 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55f273e49c50 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f273e49c38 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f273e49a28 <col:148> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55f273e49c18 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55f273e49be8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55f273e49ae8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f273e49aa0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f273e49a88 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f273e49a48 <col:166> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f273e49ad0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f273e49ab8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f273e49a68 <col:184> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55f273e49bb8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f273e49b38 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f273e49b08 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55f273e49bd0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55f273e49b90 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55f273e49b60 <col:219> 'int' 0
|   |-BinaryOperator 0x55f273e4a328 <line:758:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e49d80 <col:3> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55f273e4a310 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f273e4a2e0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55f273e4a298 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f273e4a280 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f273e49da0 <col:20> '_Bool' lvalue Var 0x55f273e447d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f273e4a2c8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f273e4a2b0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f273e49dc0 <col:36> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55f273e4a260 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55f273e4a230 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55f273e49ff0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55f273e49ef0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55f273e49e18 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55f273e49e00 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55f273e49de0 <col:55> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55f273e49ed0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55f273e49e68 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55f273e49e50 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55f273e49e30 <col:74> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55f273e49eb8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55f273e49ea0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55f273e49e80 <col:93> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55f273e49fd0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55f273e49f48 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55f273e49f30 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55f273e49f10 <col:112> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55f273e49fb8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55f273e49fa0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55f273e49f80 <col:131> '_Bool' lvalue Var 0x55f273e44380 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55f273e4a218 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f273e4a200 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f273e4a010 <col:148> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55f273e4a1e0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55f273e4a1b0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55f273e4a0d0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f273e4a088 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f273e4a070 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f273e4a030 <col:166> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f273e4a0b8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f273e4a0a0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f273e4a050 <col:184> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55f273e4a168 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f273e4a120 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f273e4a0f0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55f273e4a198 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55f273e4a180 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55f273e4a148 <col:212> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55f273e4a8f0 <line:759:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e4a348 <col:3> '_Bool' lvalue Var 0x55f273e44380 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55f273e4a8d8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f273e4a8a8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55f273e4a860 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f273e4a848 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f273e4a368 <col:20> '_Bool' lvalue Var 0x55f273e447d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f273e4a890 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f273e4a878 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f273e4a388 <col:36> '_Bool' lvalue Var 0x55f273e44380 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55f273e4a828 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55f273e4a7f8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55f273e4a598 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55f273e4a4b8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55f273e4a3e0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55f273e4a3c8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55f273e4a3a8 <col:55> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55f273e4a498 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55f273e4a430 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55f273e4a418 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55f273e4a3f8 <col:74> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55f273e4a480 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55f273e4a468 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55f273e4a448 <col:93> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55f273e4a578 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55f273e4a510 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55f273e4a4f8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55f273e4a4d8 <col:112> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55f273e4a560 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55f273e4a548 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55f273e4a528 <col:131> '_Bool' lvalue Var 0x55f273e44380 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55f273e4a7e0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f273e4a7c8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f273e4a5b8 <col:148> '_Bool' lvalue Var 0x55f273e44380 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55f273e4a7a8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55f273e4a778 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55f273e4a678 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f273e4a630 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f273e4a618 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f273e4a5d8 <col:166> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f273e4a660 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f273e4a648 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f273e4a5f8 <col:184> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55f273e4a748 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f273e4a6c8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f273e4a698 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55f273e4a760 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55f273e4a720 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55f273e4a6f0 <col:219> 'int' 0
|   |-BinaryOperator 0x55f273e4a968 <line:760:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55f273e4a910 <col:3> 'int' lvalue Var 0x55f273e43aa0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55f273e4a950 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f273e4a930 <col:25> 'int' lvalue Var 0x55f273e43f20 'y' 'int'
|   |-BinaryOperator 0x55f273e4aa98 <line:761:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55f273e4a988 <col:3> 'int' lvalue Var 0x55f273e43f20 'y' 'int'
|   | `-ConditionalOperator 0x55f273e4aa68 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55f273e4aa20 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55f273e4aa08 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55f273e4a9a8 <col:7> '_Bool' lvalue Var 0x55f273e43fb8 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55f273e4aa38 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f273e4a9c8 <col:25> 'int' lvalue Var 0x55f273e44038 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55f273e4aa50 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55f273e4a9e8 <col:37> 'int' lvalue Var 0x55f273e43f20 'y' 'int'
|   |-BinaryOperator 0x55f273e4ab30 <line:762:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e4aab8 <col:3> '_Bool' lvalue Var 0x55f273e43fb8 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55f273e4ab08 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55f273e4aad8 <col:28> 'int' 0
|   |-CallExpr 0x55f273e4ab88 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f273e4ab70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f273e4ab50 <col:3> 'void ()' Function 0x55f273dea570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f273e4abe0 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f273e4abc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f273e4aba8 <col:3> 'void ()' Function 0x55f273dea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f273e4ac58 <line:765:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55f273e4ac00 <col:3> 'int' lvalue Var 0x55f273e43bc0 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x55f273e4ac40 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f273e4ac20 <col:25> 'int' lvalue Var 0x55f273e43dd0 'x' 'int'
|   |-CallExpr 0x55f273e4acb0 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f273e4ac98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f273e4ac78 <col:3> 'void ()' Function 0x55f273dea570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f273e4ad08 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f273e4acf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f273e4acd0 <col:3> 'void ()' Function 0x55f273dea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f273e4b028 <line:768:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55f273e4ad28 <col:3> 'int' lvalue Var 0x55f273e43f20 'y' 'int'
|   | `-ConditionalOperator 0x55f273e4aff8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55f273e4ade8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55f273e4ada0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55f273e4ad88 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55f273e4ad48 <col:7> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55f273e4add0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55f273e4adb8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55f273e4ad68 <col:25> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55f273e4afe0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f273e4ae08 <col:42> 'int' lvalue Var 0x55f273e44570 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55f273e4afc0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55f273e4af90 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55f273e4aec8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55f273e4ae80 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55f273e4ae68 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55f273e4ae28 <col:55> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55f273e4aeb0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55f273e4ae98 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55f273e4ae48 <col:73> '_Bool' lvalue Var 0x55f273e44380 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55f273e4af28 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f273e4aee8 <col:90> 'int' lvalue Var 0x55f273e44668 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55f273e4af40 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f273e4af08 <col:102> 'int' lvalue Var 0x55f273e43f20 'y' 'int'
|   |-BinaryOperator 0x55f273e4b230 <line:769:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e4b048 <col:3> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f273e4b218 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f273e4b1e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f273e4b108 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f273e4b0c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f273e4b0a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f273e4b068 <col:20> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f273e4b0f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f273e4b0d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f273e4b088 <col:38> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f273e4b1a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f273e4b158 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f273e4b128 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f273e4b1d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f273e4b1b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f273e4b180 <col:66> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f273e4b518 <line:770:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e4b250 <col:3> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f273e4b500 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f273e4b4d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f273e4b3f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f273e4b310 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f273e4b2c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f273e4b2b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f273e4b270 <col:20> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f273e4b2f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f273e4b2e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f273e4b290 <col:38> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55f273e4b3d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f273e4b388 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f273e4b370 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f273e4b330 <col:56> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f273e4b3b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f273e4b3a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f273e4b350 <col:74> '_Bool' lvalue Var 0x55f273e44380 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f273e4b488 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f273e4b440 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f273e4b410 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f273e4b4b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f273e4b4a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f273e4b468 <col:102> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55f273e4b720 <line:771:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e4b538 <col:3> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55f273e4b708 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f273e4b6d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f273e4b5f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f273e4b5b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f273e4b598 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f273e4b558 <col:20> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f273e4b5e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f273e4b5c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f273e4b578 <col:38> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f273e4b690 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f273e4b648 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f273e4b618 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f273e4b6c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f273e4b6a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f273e4b670 <col:66> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55f273e4ba08 <line:772:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e4b740 <col:3> '_Bool' lvalue Var 0x55f273e44380 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55f273e4b9f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f273e4b9c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f273e4b8e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f273e4b800 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f273e4b7b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f273e4b7a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f273e4b760 <col:20> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f273e4b7e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f273e4b7d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f273e4b780 <col:38> '_Bool' lvalue Var 0x55f273e441a0 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55f273e4b8c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f273e4b878 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f273e4b860 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f273e4b820 <col:56> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f273e4b8a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f273e4b890 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f273e4b840 <col:74> '_Bool' lvalue Var 0x55f273e44380 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f273e4b978 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f273e4b930 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f273e4b900 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f273e4b9a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f273e4b990 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f273e4b958 <col:102> '_Bool' lvalue Var 0x55f273e44380 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55f273e4ba60 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f273e4ba48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f273e4ba28 <col:3> 'void ()' Function 0x55f273dea570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f273e4bab8 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f273e4baa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f273e4ba80 <col:3> 'void ()' Function 0x55f273dea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f273e4bb70 <line:775:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55f273e4bad8 <col:3> 'int' lvalue Var 0x55f273e43740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55f273e4bb50 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55f273e4bb38 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f273e4baf8 <col:22> 'int' lvalue Var 0x55f273e43740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55f273e4bb18 <col:41> 'int' 1
|   |-CallExpr 0x55f273e4bbc8 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f273e4bbb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f273e4bb90 <col:3> 'void ()' Function 0x55f273dea570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55f273e4bc40 <line:777:3, col:36>
|     `-CallExpr 0x55f273e4bc20 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55f273e4bc08 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55f273e4bbe8 <col:10> 'void *(void)' Function 0x55f273de9fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55f273e4be60 prev 0x55f273e433c0 <line:779:1, line:795:1> line:779:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55f273e4bdc8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55f273e4cfb0 <line:780:1, line:795:1>
|   |-CallExpr 0x55f273e4bf40 <line:781:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f273e4bf28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f273e4bf08 <col:3> 'void ()' Function 0x55f273dea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f273e4bfc0 <line:782:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55f273e4bf60 <col:3> 'int' lvalue Var 0x55f273e43dd0 'x' 'int'
|   | `-IntegerLiteral 0x55f273e4bfa0 <col:7> 'int' 1
|   |-CallExpr 0x55f273e4c018 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f273e4c000 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f273e4bfe0 <col:3> 'void ()' Function 0x55f273dea570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f273e4c070 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f273e4c058 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f273e4c038 <col:3> 'void ()' Function 0x55f273dea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f273e4c358 <line:785:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55f273e4c090 <col:3> 'int' lvalue Var 0x55f273e43f20 'y' 'int'
|   | `-ConditionalOperator 0x55f273e4c328 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55f273e4c150 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55f273e4c108 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55f273e4c0f0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55f273e4c0b0 <col:7> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55f273e4c138 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55f273e4c120 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55f273e4c0d0 <col:25> '_Bool' lvalue Var 0x55f273e44218 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55f273e4c310 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f273e4c170 <col:42> 'int' lvalue Var 0x55f273e44570 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55f273e4c2f0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55f273e4c2c0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55f273e4c230 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55f273e4c1e8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55f273e4c1d0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55f273e4c190 <col:55> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55f273e4c218 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55f273e4c200 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55f273e4c1b0 <col:73> '_Bool' lvalue Var 0x55f273e443f8 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55f273e4c290 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f273e4c250 <col:90> 'int' lvalue Var 0x55f273e44668 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55f273e4c2a8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f273e4c270 <col:102> 'int' lvalue Var 0x55f273e43f20 'y' 'int'
|   |-BinaryOperator 0x55f273e4c560 <line:786:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e4c378 <col:3> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f273e4c548 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f273e4c518 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f273e4c438 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f273e4c3f0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f273e4c3d8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f273e4c398 <col:20> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f273e4c420 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f273e4c408 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f273e4c3b8 <col:38> '_Bool' lvalue Var 0x55f273e44218 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55f273e4c4d0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f273e4c488 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f273e4c458 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f273e4c500 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f273e4c4e8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f273e4c4b0 <col:66> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f273e4c848 <line:787:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e4c580 <col:3> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f273e4c830 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f273e4c800 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f273e4c720 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f273e4c640 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f273e4c5f8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f273e4c5e0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f273e4c5a0 <col:20> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f273e4c628 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f273e4c610 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f273e4c5c0 <col:38> '_Bool' lvalue Var 0x55f273e44218 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55f273e4c700 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f273e4c6b8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f273e4c6a0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f273e4c660 <col:56> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f273e4c6e8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f273e4c6d0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f273e4c680 <col:74> '_Bool' lvalue Var 0x55f273e443f8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55f273e4c7b8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f273e4c770 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f273e4c740 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f273e4c7e8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f273e4c7d0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f273e4c798 <col:102> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55f273e4ca50 <line:788:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e4c868 <col:3> '_Bool' lvalue Var 0x55f273e44218 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55f273e4ca38 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f273e4ca08 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f273e4c928 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f273e4c8e0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f273e4c8c8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f273e4c888 <col:20> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f273e4c910 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f273e4c8f8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f273e4c8a8 <col:38> '_Bool' lvalue Var 0x55f273e44218 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55f273e4c9c0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f273e4c978 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f273e4c948 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f273e4c9f0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f273e4c9d8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f273e4c9a0 <col:66> '_Bool' lvalue Var 0x55f273e44218 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55f273e4cd38 <line:789:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f273e4ca70 <col:3> '_Bool' lvalue Var 0x55f273e443f8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55f273e4cd20 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f273e4ccf0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f273e4cc10 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f273e4cb30 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f273e4cae8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f273e4cad0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f273e4ca90 <col:20> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f273e4cb18 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f273e4cb00 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f273e4cab0 <col:38> '_Bool' lvalue Var 0x55f273e44218 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55f273e4cbf0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f273e4cba8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f273e4cb90 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f273e4cb50 <col:56> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f273e4cbd8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f273e4cbc0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f273e4cb70 <col:74> '_Bool' lvalue Var 0x55f273e443f8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55f273e4cca8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f273e4cc60 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f273e4cc30 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f273e4ccd8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f273e4ccc0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f273e4cc88 <col:102> '_Bool' lvalue Var 0x55f273e443f8 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55f273e4cd90 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f273e4cd78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f273e4cd58 <col:3> 'void ()' Function 0x55f273dea570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f273e4cde8 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f273e4cdd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f273e4cdb0 <col:3> 'void ()' Function 0x55f273dea4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f273e4cea0 <line:792:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55f273e4ce08 <col:3> 'int' lvalue Var 0x55f273e43740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55f273e4ce80 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55f273e4ce68 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f273e4ce28 <col:22> 'int' lvalue Var 0x55f273e43740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55f273e4ce48 <col:41> 'int' 1
|   |-CallExpr 0x55f273e4cef8 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f273e4cee0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f273e4cec0 <col:3> 'void ()' Function 0x55f273dea570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55f273e4cf70 <line:794:3, col:36>
|     `-CallExpr 0x55f273e4cf50 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55f273e4cf38 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55f273e4cf18 <col:10> 'void *(void)' Function 0x55f273de9fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55f273e4d050 prev 0x55f273e43488 <line:796:1, line:798:1> line:796:6 fence 'void ()'
| `-CompoundStmt 0x55f273e4d0f0 <line:797:1, line:798:1>
|-FunctionDecl 0x55f273e4d120 prev 0x55f273e43548 <line:799:1, line:801:1> line:799:6 isync 'void ()'
| `-CompoundStmt 0x55f273e4d1c0 <line:800:1, line:801:1>
|-FunctionDecl 0x55f273e4d1f0 prev 0x55f273e43608 <line:802:1, line:804:1> line:802:6 lwfence 'void ()'
| `-CompoundStmt 0x55f273e4d290 <line:803:1, line:804:1>
`-FunctionDecl 0x55f273e4d2f8 <line:805:1, line:829:1> line:805:5 main 'int ()'
  `-CompoundStmt 0x55f273e4efe0 <line:806:1, line:829:1>
    |-DeclStmt 0x55f273e4d410 <line:807:3, col:18>
    | `-VarDecl 0x55f273e4d3a8 <col:3, col:13> col:13 used t1748 'pthread_t':'unsigned long'
    |-CallExpr 0x55f273e4d618 <line:808:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55f273e4d600 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f273e4d428 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55f273e2a9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55f273e4d468 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55f273e4d448 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55f273e4d3a8 't1748' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55f273e4d658 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55f273e4d4e0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55f273e4d4b8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55f273e4d480 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55f273e4d670 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f273e4d500 <col:39> 'void *(void *)' Function 0x55f273e448e8 'P0' 'void *(void *)'
    | `-ParenExpr 0x55f273e4d580 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55f273e4d558 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55f273e4d520 <col:52> 'int' 0
    |-DeclStmt 0x55f273e4d700 <line:809:3, col:18>
    | `-VarDecl 0x55f273e4d698 <col:3, col:13> col:13 used t1749 'pthread_t':'unsigned long'
    |-CallExpr 0x55f273e4d8a8 <line:810:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55f273e4d890 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f273e4d718 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55f273e2a9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55f273e4d758 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55f273e4d738 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55f273e4d698 't1749' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55f273e4d8e8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55f273e4d7d0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55f273e4d7a8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55f273e4d770 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55f273e4d900 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f273e4d7f0 <col:39> 'void *(void *)' Function 0x55f273e479d0 'P1' 'void *(void *)'
    | `-ParenExpr 0x55f273e4d870 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55f273e4d848 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55f273e4d810 <col:52> 'int' 0
    |-DeclStmt 0x55f273e4d990 <line:811:3, col:18>
    | `-VarDecl 0x55f273e4d928 <col:3, col:13> col:13 used t1750 'pthread_t':'unsigned long'
    |-CallExpr 0x55f273e4db38 <line:812:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55f273e4db20 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f273e4d9a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55f273e2a9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55f273e4d9e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55f273e4d9c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55f273e4d928 't1750' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55f273e4db78 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55f273e4da60 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55f273e4da38 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55f273e4da00 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55f273e4db90 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f273e4da80 <col:39> 'void *(void *)' Function 0x55f273e4be60 'P2' 'void *(void *)'
    | `-ParenExpr 0x55f273e4db00 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55f273e4dad8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55f273e4daa0 <col:52> 'int' 0
    |-CallExpr 0x55f273e4dbe0 <line:813:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55f273e4dbc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f273e4dba8 <col:3> 'void ()' Function 0x55f273dea4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55f273e4dcb0 <line:814:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55f273e4dc00 <col:3> '_Bool' lvalue Var 0x55f273e43c58 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55f273e4dc98 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55f273e4dc78 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55f273e4dc60 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55f273e4dc20 <col:21> 'int' lvalue Var 0x55f273e43740 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55f273e4dc40 <col:41> 'int' 3
    |-CallExpr 0x55f273e4dd08 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55f273e4dcf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f273e4dcd0 <col:3> 'void ()' Function 0x55f273dea570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55f273e4dd80 <line:816:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55f273e4dd68 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f273e4dd28 <col:3> 'void (int)' Function 0x55f273de9e50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55f273e4ddc0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55f273e4dda8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55f273e4dd48 <col:21> '_Bool' lvalue Var 0x55f273e43c58 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55f273e4de10 <line:817:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55f273e4ddf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f273e4ddd8 <col:3> 'void ()' Function 0x55f273dea4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55f273e4e118 <line:818:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55f273e4de30 <col:3> 'int' lvalue Var 0x55f273e43f20 'y' 'int'
    | `-ConditionalOperator 0x55f273e4e0e8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55f273e4def0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55f273e4dea8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55f273e4de90 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55f273e4de50 <col:7> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55f273e4ded8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55f273e4dec0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55f273e4de70 <col:25> '_Bool' lvalue Var 0x55f273e440b0 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55f273e4e0d0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f273e4df10 <col:42> 'int' lvalue Var 0x55f273e44570 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55f273e4e0b0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55f273e4e080 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55f273e4dff0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55f273e4df88 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55f273e4df70 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55f273e4df30 <col:55> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55f273e4dfd8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55f273e4dfc0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55f273e4df50 <col:73> '_Bool' lvalue Var 0x55f273e44290 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55f273e4e050 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55f273e4e010 <col:90> 'int' lvalue Var 0x55f273e44668 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55f273e4e068 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55f273e4e030 <col:102> 'int' lvalue Var 0x55f273e43f20 'y' 'int'
    |-BinaryOperator 0x55f273e4e320 <line:819:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55f273e4e138 <col:3> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55f273e4e308 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f273e4e2d8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55f273e4e1f8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55f273e4e1b0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55f273e4e198 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55f273e4e158 <col:20> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55f273e4e1e0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55f273e4e1c8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55f273e4e178 <col:38> '_Bool' lvalue Var 0x55f273e440b0 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f273e4e290 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f273e4e248 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f273e4e218 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55f273e4e2c0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f273e4e2a8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f273e4e270 <col:66> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55f273e4e608 <line:820:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55f273e4e340 <col:3> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55f273e4e5f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f273e4e5c0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55f273e4e4e0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55f273e4e400 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55f273e4e3b8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55f273e4e3a0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55f273e4e360 <col:20> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55f273e4e3e8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55f273e4e3d0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55f273e4e380 <col:38> '_Bool' lvalue Var 0x55f273e440b0 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55f273e4e4c0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55f273e4e478 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55f273e4e460 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55f273e4e420 <col:56> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55f273e4e4a8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55f273e4e490 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55f273e4e440 <col:74> '_Bool' lvalue Var 0x55f273e44290 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f273e4e578 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f273e4e530 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f273e4e500 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55f273e4e5a8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f273e4e590 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f273e4e558 <col:102> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55f273e4e810 <line:821:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55f273e4e628 <col:3> '_Bool' lvalue Var 0x55f273e440b0 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55f273e4e7f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f273e4e7c8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55f273e4e6e8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55f273e4e6a0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55f273e4e688 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55f273e4e648 <col:20> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55f273e4e6d0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55f273e4e6b8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55f273e4e668 <col:38> '_Bool' lvalue Var 0x55f273e440b0 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f273e4e780 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f273e4e738 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f273e4e708 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55f273e4e7b0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f273e4e798 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f273e4e760 <col:66> '_Bool' lvalue Var 0x55f273e440b0 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55f273e4eaf8 <line:822:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55f273e4e830 <col:3> '_Bool' lvalue Var 0x55f273e44290 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55f273e4eae0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f273e4eab0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55f273e4e9d0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55f273e4e8f0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55f273e4e8a8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55f273e4e890 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55f273e4e850 <col:20> '_Bool' lvalue Var 0x55f273e445e8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55f273e4e8d8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55f273e4e8c0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55f273e4e870 <col:38> '_Bool' lvalue Var 0x55f273e440b0 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55f273e4e9b0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55f273e4e968 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55f273e4e950 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55f273e4e910 <col:56> '_Bool' lvalue Var 0x55f273e446e0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55f273e4e998 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55f273e4e980 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55f273e4e930 <col:74> '_Bool' lvalue Var 0x55f273e44290 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f273e4ea68 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f273e4ea20 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f273e4e9f0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55f273e4ea98 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f273e4ea80 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f273e4ea48 <col:102> '_Bool' lvalue Var 0x55f273e44290 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55f273e4eb50 <line:823:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55f273e4eb38 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f273e4eb18 <col:3> 'void ()' Function 0x55f273dea570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55f273e4eba8 <line:824:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55f273e4eb90 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f273e4eb70 <col:3> 'void ()' Function 0x55f273dea4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55f273e4ee78 <line:825:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x55f273e4ebc8 <col:3> '_Bool' lvalue Var 0x55f273e43cd0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55f273e4ee60 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55f273e4ee48 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55f273e4ee28 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x55f273e4ee08 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x55f273e4ed70 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x55f273e4ecd8 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x55f273e4ec40 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55f273e4ec28 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55f273e4ebe8 <col:23> 'int' lvalue Var 0x55f273e43860 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x55f273e4ec08 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x55f273e4ecb8 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55f273e4eca0 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55f273e4ec60 <col:51> 'int' lvalue Var 0x55f273e43980 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x55f273e4ec80 <col:74> 'int' 0
    |         | `-BinaryOperator 0x55f273e4ed50 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55f273e4ed38 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55f273e4ecf8 <col:79> 'int' lvalue Var 0x55f273e43aa0 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x55f273e4ed18 <col:102> 'int' 1
    |         `-BinaryOperator 0x55f273e4ede8 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x55f273e4edd0 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55f273e4ed90 <col:107> 'int' lvalue Var 0x55f273e43bc0 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x55f273e4edb0 <col:130> 'int' 0
    |-CallExpr 0x55f273e4eed0 <line:826:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55f273e4eeb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f273e4ee98 <col:3> 'void ()' Function 0x55f273dea570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55f273e4ef48 <line:827:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55f273e4ef30 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f273e4eef0 <col:3> 'void (int)' Function 0x55f273dea238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55f273e4ef88 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55f273e4ef70 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55f273e4ef10 <col:21> '_Bool' lvalue Var 0x55f273e43cd0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55f273e4efd0 <line:828:3, col:10>
      `-IntegerLiteral 0x55f273e4efa0 <col:10> 'int' 0
