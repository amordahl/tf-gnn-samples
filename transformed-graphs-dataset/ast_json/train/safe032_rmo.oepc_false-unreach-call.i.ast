TranslationUnitDecl 0x5592f3839f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5592f383a848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5592f383a520 '__int128'
|-TypedefDecl 0x5592f383a8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5592f383a540 'unsigned __int128'
|-TypedefDecl 0x5592f383abc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5592f383a990 'struct __NSConstantString_tag'
|   `-Record 0x5592f383a910 '__NSConstantString_tag'
|-TypedefDecl 0x5592f383ac68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5592f383ac20 'char *'
|   `-BuiltinType 0x5592f383a020 'char'
|-TypedefDecl 0x5592f3879b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5592f383af00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5592f383ad40 'struct __va_list_tag'
|     `-Record 0x5592f383acc0 '__va_list_tag'
|-FunctionDecl 0x5592f3879c80 <pthread-wmm/safe032_rmo.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x5592f3879e50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5592f3879d80 <col:31> col:34 'int'
|-FunctionDecl 0x5592f3879fc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5592f387a0f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5592f387a238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5592f387a1a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5592f387a468 <col:40, col:99>
|   |-IfStmt 0x5592f387a438 <col:42, col:88>
|   | |-UnaryOperator 0x5592f387a318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5592f387a300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5592f387a2e0 <col:47> 'int' lvalue ParmVar 0x5592f387a1a8 'expression' 'int'
|   | `-CompoundStmt 0x5592f387a420 <col:59, col:88>
|   |   `-LabelStmt 0x5592f387a408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5592f387a398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5592f387a380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5592f387a330 <col:68> 'void () __attribute__((noreturn))' Function 0x5592f387a0f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5592f387a450 <col:89>
|   `-ReturnStmt 0x5592f387a458 <col:91>
|-FunctionDecl 0x5592f387a4b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5592f387a570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5592f387a8f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5592f387a628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5592f387a6a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5592f387a728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5592f387a7a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5592f387a9b0 <line:11:22>
|-FunctionDecl 0x5592f389ff10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5592f387aa20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5592f387aaa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5592f389fd40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5592f389fdc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5592f389ffd0 <line:14:22>
|-FunctionDecl 0x5592f38a0280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5592f38a0040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5592f38a00c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5592f38a0140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5592f38a0338 <line:16:22>
|-TypedefDecl 0x5592f38a03a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5592f383a0e0 'unsigned char'
|-TypedefDecl 0x5592f38a0418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5592f383a100 'unsigned short'
|-TypedefDecl 0x5592f38a0488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5592f383a120 'unsigned int'
|-TypedefDecl 0x5592f38a04f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5592f383a140 'unsigned long'
|-TypedefDecl 0x5592f38a0568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5592f383a040 'signed char'
|-TypedefDecl 0x5592f38a05d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5592f383a0e0 'unsigned char'
|-TypedefDecl 0x5592f38a0648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5592f383a060 'short'
|-TypedefDecl 0x5592f38a06b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5592f383a100 'unsigned short'
|-TypedefDecl 0x5592f38a0728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5592f383a080 'int'
|-TypedefDecl 0x5592f38a0798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5592f383a120 'unsigned int'
|-TypedefDecl 0x5592f38a0808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5592f383a0a0 'long'
|-TypedefDecl 0x5592f38a0878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5592f383a140 'unsigned long'
|-TypedefDecl 0x5592f38a08e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5592f383a0a0 'long'
|-TypedefDecl 0x5592f38a0958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5592f383a140 'unsigned long'
|-TypedefDecl 0x5592f38a09c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5592f383a140 'unsigned long'
|-TypedefDecl 0x5592f38a0a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5592f383a120 'unsigned int'
|-TypedefDecl 0x5592f38a0aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5592f383a120 'unsigned int'
|-TypedefDecl 0x5592f38a0b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5592f383a140 'unsigned long'
|-TypedefDecl 0x5592f38a0b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5592f383a140 'unsigned long'
|-TypedefDecl 0x5592f38a0bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5592f383a120 'unsigned int'
|-TypedefDecl 0x5592f38a0c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5592f383a140 'unsigned long'
|-TypedefDecl 0x5592f38a0cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5592f383a0a0 'long'
|-TypedefDecl 0x5592f38a0d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5592f383a0a0 'long'
|-TypedefDecl 0x5592f38a0dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5592f383a080 'int'
|-RecordDecl 0x5592f38a0e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x5592f38a0f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5592f38a1030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5592f38a0fd0 'struct __fsid_t' sugar
|   `-RecordType 0x5592f38a0eb0 '__fsid_t'
|     `-Record 0x5592f38a0e30 ''
|-TypedefDecl 0x5592f38a10b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5592f383a0a0 'long'
|-TypedefDecl 0x5592f38a1128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5592f383a140 'unsigned long'
|-TypedefDecl 0x5592f38a1198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5592f383a140 'unsigned long'
|-TypedefDecl 0x5592f38a1208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5592f383a120 'unsigned int'
|-TypedefDecl 0x5592f38a1278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5592f383a0a0 'long'
|-TypedefDecl 0x5592f38a12e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5592f383a120 'unsigned int'
|-TypedefDecl 0x5592f38a1358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5592f383a0a0 'long'
|-TypedefDecl 0x5592f38a13c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5592f383a080 'int'
|-TypedefDecl 0x5592f38a1438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5592f383a080 'int'
|-TypedefDecl 0x5592f38a14a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5592f383a080 'int'
|-TypedefDecl 0x5592f38a1518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5592f383a7a0 'void *'
|   `-BuiltinType 0x5592f3839fe0 'void'
|-TypedefDecl 0x5592f38a1588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5592f383a0a0 'long'
|-TypedefDecl 0x5592f38a15f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5592f383a0a0 'long'
|-TypedefDecl 0x5592f38a1668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5592f383a0a0 'long'
|-TypedefDecl 0x5592f38a16d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5592f383a140 'unsigned long'
|-TypedefDecl 0x5592f38a1748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5592f383a140 'unsigned long'
|-TypedefDecl 0x5592f38a17b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5592f383a140 'unsigned long'
|-TypedefDecl 0x5592f38a1828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5592f383a140 'unsigned long'
|-TypedefDecl 0x5592f38a1898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5592f383a0a0 'long'
|-TypedefDecl 0x5592f38a1908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5592f383a0a0 'long'
|-TypedefDecl 0x5592f38a1978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5592f383a0a0 'long'
|-TypedefDecl 0x5592f38a19e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5592f383a140 'unsigned long'
|-TypedefDecl 0x5592f38a1a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5592f38a1a40 '__off64_t' sugar
|   |-Typedef 0x5592f38a0d68 '__off64_t'
|   `-BuiltinType 0x5592f383a0a0 'long'
|-TypedefDecl 0x5592f38a1b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5592f38a1b30 '__quad_t *'
|   `-TypedefType 0x5592f38a1ad0 '__quad_t' sugar
|     |-Typedef 0x5592f38a08e8 '__quad_t'
|     `-BuiltinType 0x5592f383a0a0 'long'
|-TypedefDecl 0x5592f38a1be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5592f383ac20 'char *'
|   `-BuiltinType 0x5592f383a020 'char'
|-TypedefDecl 0x5592f38a1c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5592f383a0a0 'long'
|-TypedefDecl 0x5592f38a1cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5592f383a120 'unsigned int'
|-FunctionDecl 0x5592f38a1e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5592f38a1d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5592f38a2148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x5592f38a2138 <line:73:3, col:34>
|     `-CallExpr 0x5592f38a20f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5592f38a20e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5592f38a2070 <col:10> '<builtin fn type>' Function 0x5592f38a1ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5592f38a2120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5592f38a2090 <col:29> 'unsigned int' lvalue ParmVar 0x5592f38a1d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x5592f38a1ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5592f38a1f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5592f38a1ff0 <col:10> Implicit
| `-ConstAttr 0x5592f38a2048 <col:10> Implicit
|-FunctionDecl 0x5592f38a22a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5592f38a2198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5592f38a25b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x5592f38a25a8 <line:78:3, col:34>
|     `-CallExpr 0x5592f38a2568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5592f38a2550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5592f38a24d8 <col:10> '<builtin fn type>' Function 0x5592f38a2348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5592f38a2590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5592f38a24f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5592f38a2198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5592f38a2348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5592f38a23e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5592f38a2458 <col:10> Implicit
| `-ConstAttr 0x5592f38a24b0 <col:10> Implicit
|-TypedefDecl 0x5592f38a25e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5592f383a140 'unsigned long'
|-TypedefDecl 0x5592f38a2678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5592f38a2640 '__time_t' sugar
|   |-Typedef 0x5592f38a1278 '__time_t'
|   `-BuiltinType 0x5592f383a0a0 'long'
|-RecordDecl 0x5592f38a26d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x5592f38a2788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5592f38a2818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5592f38a28a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5592f38a2870 '__pid_t' sugar
|   |-Typedef 0x5592f38a0dd8 '__pid_t'
|   `-BuiltinType 0x5592f383a080 'int'
|-RecordDecl 0x5592f38a2900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x5592f38a29c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5592f38a2a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x5592f38a2ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5592f38a2b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5592f383a140 'unsigned long'
|-RecordDecl 0x5592f38a2b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x5592f38a4e70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5592f38a4f20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5592f38a4ec0 'struct cpu_set_t' sugar
|   `-RecordType 0x5592f38a2c10 'cpu_set_t'
|     `-Record 0x5592f38a2b90 ''
|-FunctionDecl 0x5592f38a51f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5592f38a4fc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5592f38a50d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5592f38a52a8 <line:108:19>
|-FunctionDecl 0x5592f38a5480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5592f38a5310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5592f38a5528 <col:69>
|-FunctionDecl 0x5592f38a56a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5592f38a5590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5592f38a5748 <col:64>
|-FunctionDecl 0x5592f38a5a08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5592f38a57b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5592f38a58e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5592f38a5ab8 <line:114:22>
|-FunctionDecl 0x5592f38a5e60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5592f38a5b20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5592f38a5c18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5592f38a5f10 <col:88>
|-FunctionDecl 0x5592f38a61c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5592f38a5f78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5592f38a5ff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5592f38a6088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5592f38a6280 <col:62>
|-FunctionDecl 0x5592f38a63f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5592f38a62e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5592f38a64a0 <col:63>
|-FunctionDecl 0x5592f38a65c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5592f38a6668 <col:47>
|-FunctionDecl 0x5592f38a6770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5592f38a66d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5592f38a6818 <col:69>
|-FunctionDecl 0x5592f38a6920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5592f38a6888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5592f38a69c8 <col:69>
|-FunctionDecl 0x5592f38a6c88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5592f38a6a30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5592f38a6b68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5592f38a6d38 <col:88>
|-TypedefDecl 0x5592f38a6dc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5592f38a6d90 '__clock_t' sugar
|   |-Typedef 0x5592f38a10b8 '__clock_t'
|   `-BuiltinType 0x5592f383a0a0 'long'
|-TypedefDecl 0x5592f38a77e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5592f38a6e20 '__clockid_t' sugar
|   |-Typedef 0x5592f38a14a8 '__clockid_t'
|   `-BuiltinType 0x5592f383a080 'int'
|-TypedefDecl 0x5592f38a7878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5592f38a7840 '__timer_t' sugar
|   |-Typedef 0x5592f38a1518 '__timer_t'
|   `-PointerType 0x5592f383a7a0 'void *'
|     `-BuiltinType 0x5592f3839fe0 'void'
|-RecordDecl 0x5592f38a78d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x5592f38a7990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5592f38a79f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5592f38a7a60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5592f38a7ac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5592f38a7b30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5592f38a7b98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5592f38a7c00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5592f38a7c68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5592f38a7cd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5592f38a7d38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5592f38a7da0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5592f38a7df0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x5592f38a7eb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5592f38a7f28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5592f38a7fd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5592f38a81a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5592f38a8240 <col:45>
|-FunctionDecl 0x5592f38a8420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5592f38a8310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5592f38a84c8 <col:54>
|-FunctionDecl 0x5592f38a86c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5592f38a8530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5592f38a85a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5592f38a8778 <line:158:22>
| `-ConstAttr 0x5592f38a9410 <col:63>
|-FunctionDecl 0x5592f38a9610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5592f38a9508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5592f38a96b8 <col:56>
|-FunctionDecl 0x5592f38a9a60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5592f38a9728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5592f38a97a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5592f38a9820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5592f38a9918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5592f38a9b20 <col:54>
|-RecordDecl 0x5592f38a9b78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x5592f38a9c28 parent 0x5592f3839f88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5592f38a9e88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5592f38a9f28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5592f38a9f90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5592f38a9ff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5592f38aa0e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5592f38aa208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5592f38aa1b0 'struct __locale_struct *'
|   `-ElaboratedType 0x5592f38aa140 'struct __locale_struct' sugar
|     `-RecordType 0x5592f38a9c00 'struct __locale_struct'
|       `-Record 0x5592f38a9b78 '__locale_struct'
|-TypedefDecl 0x5592f38aa2b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5592f38aa280 '__locale_t' sugar
|   |-Typedef 0x5592f38aa208 '__locale_t'
|   `-PointerType 0x5592f38aa1b0 'struct __locale_struct *'
|     `-ElaboratedType 0x5592f38aa140 'struct __locale_struct' sugar
|       `-RecordType 0x5592f38a9c00 'struct __locale_struct'
|         `-Record 0x5592f38a9b78 '__locale_struct'
|-FunctionDecl 0x5592f38aa6b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5592f38aa328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5592f38aa3a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5592f38aa438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5592f38aa4c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5592f38aa540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5592f38aa778 <col:40>
|-FunctionDecl 0x5592f38aa968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5592f38aa840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5592f38aaa10 <col:66>
|-FunctionDecl 0x5592f38aab20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5592f38aaa78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5592f38aabc8 <col:69>
|-FunctionDecl 0x5592f38aadf8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5592f38aac30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5592f38aacc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5592f38aaea8 <col:52>
|-FunctionDecl 0x5592f38ab050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5592f38aaf10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5592f38aafa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5592f38ab100 <col:55>
|-FunctionDecl 0x5592f38ab298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5592f38ab180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5592f38ab340 <col:62>
|-FunctionDecl 0x5592f38ab578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5592f38ab3a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5592f38ab620 <col:60>
|-FunctionDecl 0x5592f38ab848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5592f38ab6a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5592f38ab720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5592f38ab8f8 <col:44>
|-FunctionDecl 0x5592f38abb08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5592f38ab960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5592f38ab9e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5592f38abbb8 <col:49>
|-VarDecl 0x5592f38abcb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5592f38abd38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5592f38abdb8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5592f38abe80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5592f38abfb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5592f38ac050 <col:42>
|-VarDecl 0x5592f38ac0c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5592f38ac140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5592f38ac2c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5592f38ac1b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5592f38ac370 <col:57>
|-FunctionDecl 0x5592f38ad4f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5592f38ac3f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5592f38ad598 <col:56>
|-FunctionDecl 0x5592f38ad6a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5592f38ad618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5592f38ad750 <col:59>
|-FunctionDecl 0x5592f38ad858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5592f38ad7c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5592f38ad900 <col:48>
| `-ConstAttr 0x5592f38ad958 <col:89>
|-FunctionDecl 0x5592f38adbb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5592f38ada08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5592f38ada98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5592f38ade18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5592f38adca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5592f38add38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5592f38adec8 <col:88>
|-FunctionDecl 0x5592f38ae060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5592f38adf30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5592f38adfc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5592f38ae110 <col:88>
|-FunctionDecl 0x5592f38ae328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5592f38ae178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5592f38ae208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5592f38ae3d8 <line:209:22>
|-FunctionDecl 0x5592f38ae778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5592f38ae440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5592f38ae500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5592f38ae590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5592f38ae620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5592f38aea78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5592f38ae878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5592f38ae950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5592f38aeb28 <col:85>
|-FunctionDecl 0x5592f38aef18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5592f38aeb90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5592f38aecc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5592f38aedd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5592f38aefd0 <col:52>
|-FunctionDecl 0x5592f38af148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5592f38af038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5592f38af1f0 <col:61>
|-FunctionDecl 0x5592f38af668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5592f38af258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5592f38af2d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5592f38af408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5592f38af510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5592f38af728 <col:62>
|-FunctionDecl 0x5592f38af948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5592f38af790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5592f38af820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5592f38af9f8 <line:222:22>
|-FunctionDecl 0x5592f38afaf8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5592f38afa60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5592f38afba0 <col:65>
|-TypedefDecl 0x5592f38afc10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5592f383a140 'unsigned long'
|-RecordDecl 0x5592f38afc68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x5592f38afdb0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5592f38afe18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5592f38afec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5592f38afe70 'union pthread_attr_t' sugar
|   `-RecordType 0x5592f38afcf0 'union pthread_attr_t'
|     `-Record 0x5592f38afc68 'pthread_attr_t'
|-RecordDecl 0x5592f38aff20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5592f38b0098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5592f38b0110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5592f38b01c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5592f38b0160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5592f38affa0 'struct __pthread_internal_list'
|     `-Record 0x5592f38aff20 '__pthread_internal_list'
|-RecordDecl 0x5592f38b0230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x5592f38b02d8 parent 0x5592f3839f88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5592f38b03b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5592f38b0418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5592f38b0480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5592f38b4530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5592f38b4598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5592f38b4600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5592f38b4688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5592f38b4740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5592f38b4830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5592f38b4898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5592f38b4a20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5592f38b49c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5592f38b02b0 'pthread_mutex_t'
|     `-Record 0x5592f38b0230 ''
|-RecordDecl 0x5592f38b4a90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x5592f38b4bd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5592f38b4c38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5592f38b4cf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5592f38b4c90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5592f38b4b10 'pthread_mutexattr_t'
|     `-Record 0x5592f38b4a90 ''
|-RecordDecl 0x5592f38b4d60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x5592f38b4e08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x5592f38b4ed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5592f38b4f38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5592f38b4fa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5592f38b5008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5592f38b5070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5592f38b50d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5592f38b5140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5592f38b51a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5592f38b5260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe032_rmo.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe032_rmo.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x5592f38b5350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5592f38b53b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5592f38b5540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5592f38b5490 'union pthread_cond_t' sugar
|   `-RecordType 0x5592f38b4de0 'pthread_cond_t'
|     `-Record 0x5592f38b4d60 ''
|-RecordDecl 0x5592f38b55b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x5592f38b56b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5592f38b5718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5592f38b57d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5592f38b5770 'union pthread_condattr_t' sugar
|   `-RecordType 0x5592f38b5630 'pthread_condattr_t'
|     `-Record 0x5592f38b55b0 ''
|-TypedefDecl 0x5592f38b5858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5592f383a120 'unsigned int'
|-TypedefDecl 0x5592f38b58c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5592f383a080 'int'
|-RecordDecl 0x5592f38b5920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x5592f38b59c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x5592f38b5a90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5592f38b5af8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5592f38b5b60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5592f38b5bc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5592f38b5c30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5592f38b5c98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5592f38b5d00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5592f38b5d68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5592f38b5dd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5592f38b5e38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5592f38b5ea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5592f38b5f50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe032_rmo.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe032_rmo.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x5592f38b5ff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5592f38b6060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5592f38b61b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5592f38b6150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5592f38b59a0 'pthread_rwlock_t'
|     `-Record 0x5592f38b5920 ''
|-RecordDecl 0x5592f38b6220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x5592f38b6360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5592f38b63c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5592f38b6480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5592f38b6420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5592f38b62a0 'pthread_rwlockattr_t'
|     `-Record 0x5592f38b6220 ''
|-TypedefDecl 0x5592f38b8560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5592f383a084 'volatile int' volatile
|   `-BuiltinType 0x5592f383a080 'int'
|-RecordDecl 0x5592f38b85b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x5592f38b8700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5592f38b8768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5592f38b8820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5592f38b87c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x5592f38b8640 'pthread_barrier_t'
|     `-Record 0x5592f38b85b8 ''
|-RecordDecl 0x5592f38b8890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x5592f38b8990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5592f38b89f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5592f38b8ab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5592f38b8a50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5592f38b8910 'pthread_barrierattr_t'
|     `-Record 0x5592f38b8890 ''
|-TypedefDecl 0x5592f38b8bc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5592f38b8b60 'long [8]' 8 
|   `-BuiltinType 0x5592f383a0a0 'long'
|-EnumDecl 0x5592f38b8c20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x5592f38b8ce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5592f38b8d38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5592f38b8d88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x5592f38b8e58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5592f38b8ea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5592f38b8ef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5592f38b8f48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5592f38b8fd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5592f38b8fb8 <col:26> 'int'
| |   `-DeclRefExpr 0x5592f38b8f98 <col:26> 'int' EnumConstant 0x5592f38b8e58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5592f38b9058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5592f38b9040 <col:29> 'int'
| |   `-DeclRefExpr 0x5592f38b9020 <col:29> 'int' EnumConstant 0x5592f38b8ea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5592f38b90e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5592f38b90c8 <col:30> 'int'
| |   `-DeclRefExpr 0x5592f38b90a8 <col:30> 'int' EnumConstant 0x5592f38b8ef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5592f38b9168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5592f38b9150 <col:27> 'int'
|     `-DeclRefExpr 0x5592f38b9130 <col:27> 'int' EnumConstant 0x5592f38b8fd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5592f38b91b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x5592f38b9288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5592f38b9310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5592f38b92f8 <col:30> 'int'
| |   `-DeclRefExpr 0x5592f38b92d8 <col:30> 'int' EnumConstant 0x5592f38b9288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5592f38b9360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5592f38b93e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5592f38b93d0 <col:29> 'int'
|     `-DeclRefExpr 0x5592f38b93b0 <col:29> 'int' EnumConstant 0x5592f38b9360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5592f38b9438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x5592f38b9508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5592f38b9570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5592f38b95c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5592f38b9610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x5592f38b96d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5592f38b9728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5592f38b9778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5592f38b9800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5592f38b97e8 <col:31> 'int'
|     `-DeclRefExpr 0x5592f38b97c8 <col:31> 'int' EnumConstant 0x5592f38b96d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5592f38b9850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x5592f38b9918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5592f38b9968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5592f38b99b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x5592f38b9a88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5592f38b9ad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5592f38b9b28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x5592f38b9bf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5592f38b9c48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5592f38b9c98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5592f38b9ed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5592f38b9f40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5592f38b9fa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5592f38ba0c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5592f38ba118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x5592f38ba1e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5592f38ba238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5592f38ba288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x5592f38ba358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5592f38ba3a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5592f38ba9d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5592f38ba4a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5592f38ba5c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5592f38ba7c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5592f38ba840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5592f38baa98 <col:47>
| |-NonNullAttr 0x5592f38baaf0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5592f38bab28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x5592f38bac50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5592f38bab80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5592f38baea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5592f38bad08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5592f38bad88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5592f38bb078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5592f38baf68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5592f38bb120 <col:60>
|-FunctionDecl 0x5592f38bb270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5592f38bb310 <col:54>
| `-ConstAttr 0x5592f38bb368 <col:95>
|-FunctionDecl 0x5592f38bbda0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5592f38bb3a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5592f38bb418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5592f38bbe50 <line:395:19>
| `-ConstAttr 0x5592f38bbea8 <col:60>
|-FunctionDecl 0x5592f38bc078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5592f38bbf40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5592f38bc120 <col:71>
| `-NonNullAttr 0x5592f38bc178 <col:112, col:126> 1
|-FunctionDecl 0x5592f38bc280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5592f38bc1c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5592f38bc328 <line:398:22>
| `-NonNullAttr 0x5592f38bc380 <col:63, col:77> 1
|-FunctionDecl 0x5592f38bc5a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5592f38bc3c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5592f38bc448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5592f38bc658 <line:401:22>
| `-NonNullAttr 0x5592f38bc6b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5592f38bc8b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5592f38bc6f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5592f38bc778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5592f38bc968 <line:404:22>
| `-NonNullAttr 0x5592f38bc9c0 <col:63, col:77> 1
|-FunctionDecl 0x5592f38bcc18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5592f38bca08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5592f38bcab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5592f38bccc8 <line:407:22>
| `-NonNullAttr 0x5592f38bcd20 <col:63, col:80> 1 2
|-FunctionDecl 0x5592f38bdf78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5592f38bddc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5592f38bde38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5592f38be028 <line:410:22>
| `-NonNullAttr 0x5592f38be080 <col:63, col:77> 1
|-FunctionDecl 0x5592f38be2b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5592f38be0c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5592f38be158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5592f38be368 <line:413:22>
| `-NonNullAttr 0x5592f38be3c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5592f38be5f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5592f38be408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5592f38be498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5592f38be6a8 <col:37>
| `-NonNullAttr 0x5592f38be700 <col:78, col:95> 1 2
|-FunctionDecl 0x5592f38be8e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5592f38be748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5592f38be7c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5592f38be998 <line:419:22>
| `-NonNullAttr 0x5592f38be9f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5592f38beb78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5592f38bea38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5592f38beab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5592f38bec28 <line:421:22>
| `-NonNullAttr 0x5592f38bec80 <col:63, col:77> 1
|-FunctionDecl 0x5592f38bfe58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5592f38becc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5592f38bed48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5592f38bff08 <line:424:22>
| `-NonNullAttr 0x5592f38bff60 <col:63, col:80> 1 2
|-FunctionDecl 0x5592f38c00e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5592f38bffa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5592f38c0028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5592f38c0198 <line:427:22>
| `-NonNullAttr 0x5592f38c01f0 <col:63, col:77> 1
|-FunctionDecl 0x5592f38c0398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5592f38c0238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5592f38c02b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5592f38c0448 <line:430:22>
| `-NonNullAttr 0x5592f38c04a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5592f38c0628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5592f38c04e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5592f38c0568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5592f38c06d8 <line:432:22>
| `-NonNullAttr 0x5592f38c0730 <col:63, col:77> 1
|-FunctionDecl 0x5592f38c0958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5592f38c0778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5592f38c07f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5592f38c0a08 <line:435:22>
| |-NonNullAttr 0x5592f38c0a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5592f38c0a98 <col:100> "" ""
|-FunctionDecl 0x5592f38c0ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5592f38c0ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5592f38c0b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5592f38c0d58 <line:438:22>
| |-NonNullAttr 0x5592f38c0db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x5592f38c0df8 <col:97> "" ""
|-FunctionDecl 0x5592f38c0fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5592f38c0e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5592f38c0ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5592f38c1098 <line:441:22>
| `-NonNullAttr 0x5592f38c10f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5592f38c1270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5592f38c1138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5592f38c11b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5592f38c1320 <line:444:22>
| `-NonNullAttr 0x5592f38c1378 <col:63, col:77> 1
|-FunctionDecl 0x5592f38c1668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5592f38c13c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5592f38c1448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5592f38c14c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5592f38c1720 <line:448:22>
| `-NonNullAttr 0x5592f38c1778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5592f38c1a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5592f38c17d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5592f38c1850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5592f38c18c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5592f38c1ae0 <col:43>
| `-NonNullAttr 0x5592f38c1b38 <col:84, col:98> 1
|-FunctionDecl 0x5592f38c1e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5592f38c1b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5592f38c1c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5592f38c1c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5592f38c1ef8 <line:453:22>
| `-NonNullAttr 0x5592f38c1f50 <col:63, col:77> 3
|-FunctionDecl 0x5592f38c2228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5592f38c1f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5592f38c2018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5592f38c20a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5592f38c22e0 <line:457:22>
| `-NonNullAttr 0x5592f38c2338 <col:63, col:80> 2 3
|-FunctionDecl 0x5592f38c2528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5592f38c2388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5592f38c2408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5592f38c25d8 <line:459:22>
|-FunctionDecl 0x5592f38c29a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5592f38c26a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5592f38c2840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5592f38c2a58 <col:52, col:69> 1 2
|-FunctionDecl 0x5592f38c2c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5592f38c2ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5592f38c2b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5592f38c2e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5592f38c2cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5592f38c2d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5592f38c2f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5592f38c2ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5592f38c30a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5592f38c3148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x5592f38c31f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x5592f38c32e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5592f38c3350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5592f38c3520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe032_rmo.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x5592f38c3618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5592f38c36d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5592f38c3670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5592f38c31d0 '__pthread_unwind_buf_t'
| |   `-Record 0x5592f38c3148 ''
| `-AlignedAttr 0x5592f38c3728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5592f38c37a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5592f38c3900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5592f38c3968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5592f38c39d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5592f38c3a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5592f38c3c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5592f38c3b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5592f38c3e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5592f38c3cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5592f38c3fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5592f38c3ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5592f38c4088 <line:488:22>
|-RecordDecl 0x5592f38c40e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5592f38c43f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5592f38c4258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5592f38c42d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5592f38c44a8 <col:86>
| `-ReturnsTwiceAttr 0x5592f38c4500 <col:12> Implicit
|-FunctionDecl 0x5592f38c4828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5592f38c45d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5592f38c46e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5592f38c48d8 <line:494:22>
| `-NonNullAttr 0x5592f38c4930 <col:63, col:77> 1
|-FunctionDecl 0x5592f38c4aa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5592f38c4978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5592f38c4b50 <line:496:22>
| `-NonNullAttr 0x5592f38c4ba8 <col:63, col:77> 1
|-FunctionDecl 0x5592f38c4cb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5592f38c4bf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5592f38c4d58 <line:498:22>
| `-NonNullAttr 0x5592f38c4db0 <col:52, col:66> 1
|-FunctionDecl 0x5592f38c4ee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5592f38c4e30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5592f38c4f90 <line:500:22>
| `-NonNullAttr 0x5592f38c4fe8 <col:52, col:66> 1
|-FunctionDecl 0x5592f38c5228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5592f38c5038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5592f38c50c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5592f38c52d8 <col:36>
| `-NonNullAttr 0x5592f38c5330 <col:66, col:83> 1 2
|-FunctionDecl 0x5592f38c5430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5592f38c5378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5592f38c54d8 <line:505:22>
| `-NonNullAttr 0x5592f38c5530 <col:52, col:66> 1
|-FunctionDecl 0x5592f38c57c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5592f38c55e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5592f38c5660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5592f38c5878 <line:509:22>
| `-NonNullAttr 0x5592f38c58d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5592f38c5b98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5592f38c5918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5592f38c5998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5592f38c5a18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5592f38c5c50 <line:513:22>
| `-NonNullAttr 0x5592f38c5ca8 <col:63, col:80> 1 3
|-FunctionDecl 0x5592f38c5e40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5592f38c5cf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5592f38c5ee8 <line:515:22>
| `-NonNullAttr 0x5592f38c5f40 <col:63, col:77> 1
|-FunctionDecl 0x5592f38c6128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5592f38c5ff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5592f38c61d0 <line:517:22>
| `-NonNullAttr 0x5592f38c6228 <col:63, col:77> 1
|-FunctionDecl 0x5592f38c6330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5592f38c6278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5592f38c63d8 <line:519:22>
| `-NonNullAttr 0x5592f38c6430 <col:63, col:77> 1
|-FunctionDecl 0x5592f38c6658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5592f38c6478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5592f38c64f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5592f38c6708 <line:523:22>
| `-NonNullAttr 0x5592f38c6760 <col:63, col:80> 1 2
|-FunctionDecl 0x5592f38c6968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5592f38c67a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5592f38c6828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5592f38c6a18 <line:526:22>
| `-NonNullAttr 0x5592f38c6a70 <col:63, col:77> 1
|-FunctionDecl 0x5592f38c6c18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5592f38c6ab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5592f38c6b38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5592f38c6cc8 <line:529:22>
| `-NonNullAttr 0x5592f38c6d20 <col:63, col:80> 1 2
|-FunctionDecl 0x5592f38c7f20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5592f38c6d68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5592f38c7e60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5592f38c7fd0 <line:531:22>
| `-NonNullAttr 0x5592f38c8028 <col:63, col:77> 1
|-FunctionDecl 0x5592f38c81d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5592f38c8078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5592f38c80f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5592f38c8288 <line:535:22>
| `-NonNullAttr 0x5592f38c82e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5592f38c8468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5592f38c8328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5592f38c83a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5592f38c8518 <line:538:22>
| `-NonNullAttr 0x5592f38c8570 <col:63, col:77> 1
|-FunctionDecl 0x5592f38c8718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5592f38c85b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5592f38c8638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5592f38c87c8 <line:542:22>
| `-NonNullAttr 0x5592f38c8820 <col:63, col:80> 1 2
|-FunctionDecl 0x5592f38c89a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5592f38c8868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5592f38c88e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5592f38c8a58 <line:545:22>
| `-NonNullAttr 0x5592f38c8ab0 <col:63, col:77> 1
|-FunctionDecl 0x5592f38c8c98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5592f38c8af8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5592f38c8b78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5592f38c8d48 <line:548:22>
| `-NonNullAttr 0x5592f38c8da0 <col:63, col:80> 1 2
|-FunctionDecl 0x5592f38c9f58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5592f38c8de8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5592f38c9e98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5592f38ca008 <line:551:22>
| `-NonNullAttr 0x5592f38ca060 <col:63, col:77> 1
|-FunctionDecl 0x5592f38ca398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5592f38ca140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5592f38ca250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5592f38ca448 <col:29>
| `-NonNullAttr 0x5592f38ca4a0 <col:70, col:84> 1
|-FunctionDecl 0x5592f38ca618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5592f38ca4e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5592f38ca6c0 <line:556:22>
| `-NonNullAttr 0x5592f38ca718 <col:63, col:77> 1
|-FunctionDecl 0x5592f38ca820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5592f38ca768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5592f38ca8c8 <line:558:22>
| `-NonNullAttr 0x5592f38ca920 <col:52, col:66> 1
|-FunctionDecl 0x5592f38caa20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5592f38ca968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5592f38caac8 <line:560:19>
| `-NonNullAttr 0x5592f38cab20 <col:49, col:63> 1
|-FunctionDecl 0x5592f38cad58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5592f38cab68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5592f38cabf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5592f38cae08 <col:39>
| `-NonNullAttr 0x5592f38cae90 <col:69, col:86> 1 2
|-FunctionDecl 0x5592f38caf90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5592f38caed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5592f38cb038 <line:565:22>
| `-NonNullAttr 0x5592f38cb090 <col:52, col:66> 1
|-FunctionDecl 0x5592f38cb190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5592f38cb0d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5592f38cb238 <line:567:22>
| `-NonNullAttr 0x5592f38cb290 <col:52, col:66> 1
|-FunctionDecl 0x5592f38cb448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5592f38cb2d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5592f38cb368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5592f38cb4f8 <col:39>
| `-NonNullAttr 0x5592f38cb550 <col:69, col:86> 1 2
|-FunctionDecl 0x5592f38cb650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5592f38cb598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5592f38cb6f8 <line:572:22>
| `-NonNullAttr 0x5592f38cb750 <col:52, col:66> 1
|-FunctionDecl 0x5592f38cb938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5592f38cb800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5592f38cb9e0 <line:574:22>
| `-NonNullAttr 0x5592f38cba38 <col:63, col:77> 1
|-FunctionDecl 0x5592f38cbb40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5592f38cba88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5592f38cbbe8 <line:576:22>
| `-NonNullAttr 0x5592f38cbc40 <col:63, col:77> 1
|-FunctionDecl 0x5592f38cbea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5592f38cbc88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5592f38cbd08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5592f38cbf50 <line:580:22>
| `-NonNullAttr 0x5592f38cbfa8 <col:63, col:80> 1 2
|-FunctionDecl 0x5592f38cc1b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5592f38cbff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5592f38cc078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5592f38cc268 <line:583:22>
| `-NonNullAttr 0x5592f38cc2c0 <col:63, col:77> 1
|-FunctionDecl 0x5592f38cc468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5592f38cc308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5592f38cc388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5592f38cc518 <line:587:22>
| `-NonNullAttr 0x5592f38cc570 <col:63, col:80> 1 2
|-FunctionDecl 0x5592f38cc6f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5592f38cc5b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5592f38cc638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5592f38cc7a8 <col:36>
| `-NonNullAttr 0x5592f38cc800 <col:77, col:91> 1
|-FunctionDecl 0x5592f38ccb38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5592f38cc8e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5592f38cc9f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5592f38ccbe8 <line:592:22>
| `-NonNullAttr 0x5592f38ccc40 <col:63, col:77> 1
|-FunctionDecl 0x5592f38ccdb8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5592f38ccc88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5592f38cce60 <line:594:22>
| `-NonNullAttr 0x5592f38ccee0 <col:63, col:77> 1
|-FunctionDecl 0x5592f38ccfe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5592f38ccf28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5592f38cd088 <line:596:22>
| `-NonNullAttr 0x5592f38cd0e0 <col:52, col:66> 1
|-FunctionDecl 0x5592f38cd1e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5592f38cd128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5592f38cd288 <line:598:22>
| `-NonNullAttr 0x5592f38cd2e0 <col:52, col:66> 1
|-FunctionDecl 0x5592f38cd508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5592f38cd328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5592f38cd3a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5592f38cd5b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x5592f38cd8e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5592f38cd638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5592f38cd6b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5592f38cd740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5592f38cd9a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x5592f38cdbb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5592f38cda80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5592f38cdc60 <line:607:22>
| `-NonNullAttr 0x5592f38cdcb8 <col:63, col:77> 1
|-FunctionDecl 0x5592f38cddc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5592f38cdd08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5592f38cde68 <line:609:22>
| `-NonNullAttr 0x5592f38cdef0 <col:63, col:77> 1
|-FunctionDecl 0x5592f38ce118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5592f38cdf38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5592f38cdfb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5592f38ce1c8 <line:613:22>
| `-NonNullAttr 0x5592f38ce220 <col:63, col:80> 1 2
|-FunctionDecl 0x5592f38ce428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5592f38ce268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5592f38ce2e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5592f38ce4d8 <col:37>
| `-NonNullAttr 0x5592f38ce530 <col:78, col:92> 1
|-FunctionDecl 0x5592f38ce748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5592f38ce578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5592f38ce620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5592f38ce7f8 <line:619:22>
| `-NonNullAttr 0x5592f38ce850 <col:63, col:80> 1 2
|-FunctionDecl 0x5592f38cea18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5592f38ce898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5592f38ce910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5592f38ceac8 <line:622:22>
| `-NonNullAttr 0x5592f38ceb20 <col:63, col:77> 1
|-FunctionDecl 0x5592f38cedc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5592f38cec00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5592f38cec80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5592f38cee78 <line:624:22>
| `-NonNullAttr 0x5592f38cef00 <col:63, col:77> 1
|-FunctionDecl 0x5592f38cf078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5592f38cef48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5592f38cf120 <line:626:22>
| `-NonNullAttr 0x5592f38cf178 <col:63, col:77> 1
|-FunctionDecl 0x5592f38cf280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5592f38cf1c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5592f38cf328 <line:628:22>
| `-NonNullAttr 0x5592f38cf380 <col:52, col:66> 1
|-FunctionDecl 0x5592f38cf480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5592f38cf3c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5592f38cf528 <line:630:22>
| `-NonNullAttr 0x5592f38cf580 <col:52, col:66> 1
|-FunctionDecl 0x5592f38cf680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5592f38cf5c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5592f38cf728 <line:632:22>
| `-NonNullAttr 0x5592f38cf780 <col:52, col:66> 1
|-FunctionDecl 0x5592f38cfb58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5592f38cf860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5592f38cf970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5592f38cf9f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5592f38cfc10 <line:636:22>
| `-NonNullAttr 0x5592f38cfc68 <col:63, col:77> 1
|-FunctionDecl 0x5592f38cfde8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5592f38cfcb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5592f38cfe90 <line:638:22>
| `-NonNullAttr 0x5592f38cff10 <col:63, col:77> 1
|-FunctionDecl 0x5592f38d0010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5592f38cff58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5592f38d00b8 <line:640:22>
| `-NonNullAttr 0x5592f38d0110 <col:52, col:66> 1
|-FunctionDecl 0x5592f38d02f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5592f38d01c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5592f38d03a0 <line:642:22>
| `-NonNullAttr 0x5592f38d03f8 <col:63, col:77> 1
|-FunctionDecl 0x5592f38d0500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5592f38d0448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5592f38d05a8 <line:644:22>
| `-NonNullAttr 0x5592f38d0600 <col:63, col:77> 1
|-FunctionDecl 0x5592f38d0828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5592f38d0648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5592f38d06c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5592f38d08d8 <line:648:22>
| `-NonNullAttr 0x5592f38d0930 <col:63, col:80> 1 2
|-FunctionDecl 0x5592f38d0b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5592f38d0978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5592f38d09f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5592f38d0be8 <line:651:22>
| `-NonNullAttr 0x5592f38d0c40 <col:63, col:77> 1
|-FunctionDecl 0x5592f38d0fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5592f38d0d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5592f38d0e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5592f38d1058 <line:654:22>
| `-NonNullAttr 0x5592f38d10b0 <col:63, col:77> 1
|-FunctionDecl 0x5592f38d1208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5592f38d10f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5592f38d12b0 <col:69>
|-FunctionDecl 0x5592f38d1428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5592f38d1318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5592f38d14d0 <col:72>
|-FunctionDecl 0x5592f38d1708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5592f38d1538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5592f38d15e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5592f38d17b8 <col:44>
|-FunctionDecl 0x5592f38d19d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5592f38d1820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5592f38d1898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5592f38d1a88 <line:661:22>
| `-NonNullAttr 0x5592f38d1ae0 <col:63, col:77> 2
|-FunctionDecl 0x5592f38d2f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5592f38d1bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5592f38d1cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5592f38d1de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5592f38d3008 <col:47>
|-FunctionDecl 0x5592f38d3110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5592f38d3078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5592f38d3268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5592f38d31d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5592f38d33c0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5592f38d3328 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5592f38d3488 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5592f38d3548 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5592f38d3608 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5592f38d36c0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5592f38d3740 prev 0x5592f38d36c0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5592f38d37a8 <col:24> 'int' 0
|-VarDecl 0x5592f38d37e0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5592f38d3860 prev 0x5592f38d37e0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5592f38d38c8 <col:27> 'int' 0
|-VarDecl 0x5592f38d3900 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5592f38d3980 prev 0x5592f38d3900 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5592f38d39e8 <col:27> 'int' 0
|-VarDecl 0x5592f38d3a18 <line:678:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5592f38d3a90 <line:679:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5592f38d3b10 <line:680:1, col:5> col:5 used x 'int'
|-VarDecl 0x5592f38d3b90 prev 0x5592f38d3b10 <line:681:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5592f38d3bf8 <col:9> 'int' 0
|-VarDecl 0x5592f38d3c28 <line:682:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x5592f38d3ca8 <line:683:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x5592f38d3d20 <line:684:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x5592f38d3d98 <line:685:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x5592f38d3e10 <line:686:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x5592f38d3e88 <line:687:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x5592f38d3f20 <line:688:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x5592f38d3f98 <line:689:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x5592f38d4010 <line:690:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x5592f38d4088 <line:691:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x5592f38d4100 <line:692:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x5592f38d4180 <line:693:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x5592f38d4200 <line:694:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x5592f38d4278 <line:695:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x5592f38d42f8 <line:696:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x5592f38d4370 <line:697:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x5592f38d43f0 <line:698:1, col:5> col:5 used y 'int'
|-VarDecl 0x5592f38d4470 prev 0x5592f38d43f0 <line:699:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5592f38d44d8 <col:9> 'int' 0
|-VarDecl 0x5592f38d4508 <line:700:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5592f38d4580 <line:701:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5592f38d4698 prev 0x5592f38d3110 <line:702:1, line:731:1> line:702:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5592f38d4600 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5592f38d76b8 <line:703:1, line:731:1>
|   |-CallExpr 0x5592f38d47a8 <line:704:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5592f38d4790 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38d4740 <col:3> 'void ()' Function 0x5592f387a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5592f38d4808 <line:705:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5592f38d47c8 <col:3> 'int' lvalue Var 0x5592f38d4470 'y' 'int'
|   | `-IntegerLiteral 0x5592f38d47e8 <col:7> 'int' 2
|   |-CallExpr 0x5592f38d4860 <line:706:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5592f38d4848 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38d4828 <col:3> 'void ()' Function 0x5592f387a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5592f38d48b8 <line:707:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5592f38d48a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38d4880 <col:3> 'void ()' Function 0x5592f387a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5592f38d4910 <line:708:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5592f38d48f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38d48d8 <col:3> 'void ()' Function 0x5592f387a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5592f38d4968 <line:709:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5592f38d4950 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38d4930 <col:3> 'void ()' Function 0x5592f387a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5592f38d4a38 <line:710:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38d4988 <col:3> '_Bool' lvalue Var 0x5592f38d4508 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x5592f38d4a18 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5592f38d4a00 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5592f38d49a8 <col:19> '_Bool (void)' Function 0x5592f3879c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5592f38d4ad0 <line:711:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38d4a58 <col:3> '_Bool' lvalue Var 0x5592f38d4580 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x5592f38d4ab0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5592f38d4a98 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5592f38d4a78 <col:19> '_Bool (void)' Function 0x5592f3879c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5592f38d4b48 <line:712:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38d4af0 <col:3> '_Bool' lvalue Var 0x5592f38d3c28 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38d4b30 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5592f38d4b10 <col:21> '_Bool' lvalue Var 0x5592f38d4580 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5592f38d4bc0 <line:713:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5592f38d4b68 <col:3> 'int' lvalue Var 0x5592f38d3ca8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5592f38d4ba8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5592f38d4b88 <col:15> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
|   |-BinaryOperator 0x5592f38d5018 <line:714:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5592f38d4be0 <col:3> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
|   | `-ConditionalOperator 0x5592f38d4fe8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5592f38d4df0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5592f38d4d10 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5592f38d4c38 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5592f38d4c20 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5592f38d4c00 <col:8> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5592f38d4cf0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5592f38d4c88 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5592f38d4c70 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5592f38d4c50 <col:27> '_Bool' lvalue Var 0x5592f38d3d98 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x5592f38d4cd8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5592f38d4cc0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5592f38d4ca0 <col:46> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5592f38d4dd0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5592f38d4d68 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5592f38d4d50 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5592f38d4d30 <col:65> '_Bool' lvalue Var 0x5592f38d3d98 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x5592f38d4db8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5592f38d4da0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5592f38d4d80 <col:84> '_Bool' lvalue Var 0x5592f38d3f98 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5592f38d4fd0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5592f38d4e10 <col:101> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
|   |   `-ParenExpr 0x5592f38d4fb0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5592f38d4f80 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5592f38d4ed0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5592f38d4e88 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5592f38d4e70 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5592f38d4e30 <col:106> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5592f38d4eb8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5592f38d4ea0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5592f38d4e50 <col:124> '_Bool' lvalue Var 0x5592f38d3d98 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5592f38d4f50 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5592f38d4ef0 <col:141> 'int' lvalue Var 0x5592f38d4200 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5592f38d4f68 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5592f38d4f30 <col:153> 'int' lvalue Var 0x5592f38d42f8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5592f38d5528 <line:715:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5592f38d5038 <col:3> 'int' lvalue Var 0x5592f38d4200 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x5592f38d54f8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5592f38d54c8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5592f38d54b0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5592f38d5058 <col:15> '_Bool' lvalue Var 0x5592f38d4580 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5592f38d54e0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5592f38d5078 <col:31> 'int' lvalue Var 0x5592f38d4200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5592f38d5490 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5592f38d5460 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5592f38d5288 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5592f38d51a8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5592f38d50d0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5592f38d50b8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5592f38d5098 <col:45> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5592f38d5188 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5592f38d5120 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5592f38d5108 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5592f38d50e8 <col:64> '_Bool' lvalue Var 0x5592f38d3d98 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5592f38d5170 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5592f38d5158 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5592f38d5138 <col:83> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5592f38d5268 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5592f38d5200 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5592f38d51e8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5592f38d51c8 <col:102> '_Bool' lvalue Var 0x5592f38d3d98 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5592f38d5250 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5592f38d5238 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5592f38d5218 <col:121> '_Bool' lvalue Var 0x5592f38d3f98 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5592f38d5448 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5592f38d52a8 <col:138> 'int' lvalue Var 0x5592f38d4200 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x5592f38d5428 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5592f38d53f8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5592f38d5368 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5592f38d5320 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5592f38d5308 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5592f38d52c8 <col:151> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5592f38d5350 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5592f38d5338 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5592f38d52e8 <col:169> '_Bool' lvalue Var 0x5592f38d3d98 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5592f38d53c8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5592f38d5388 <col:186> 'int' lvalue Var 0x5592f38d4200 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5592f38d53e0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5592f38d53a8 <col:198> 'int' lvalue Var 0x5592f38d4200 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5592f38d5a38 <line:716:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5592f38d5548 <col:3> 'int' lvalue Var 0x5592f38d42f8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x5592f38d5a08 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5592f38d59d8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5592f38d59c0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5592f38d5568 <col:15> '_Bool' lvalue Var 0x5592f38d4580 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5592f38d59f0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5592f38d5588 <col:31> 'int' lvalue Var 0x5592f38d42f8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x5592f38d59a0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5592f38d5970 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5592f38d5798 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5592f38d56b8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5592f38d55e0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5592f38d55c8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5592f38d55a8 <col:45> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5592f38d5698 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5592f38d5630 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5592f38d5618 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5592f38d55f8 <col:64> '_Bool' lvalue Var 0x5592f38d3d98 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5592f38d5680 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5592f38d5668 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5592f38d5648 <col:83> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5592f38d5778 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5592f38d5710 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5592f38d56f8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5592f38d56d8 <col:102> '_Bool' lvalue Var 0x5592f38d3d98 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5592f38d5760 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5592f38d5748 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5592f38d5728 <col:121> '_Bool' lvalue Var 0x5592f38d3f98 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5592f38d5958 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5592f38d57b8 <col:138> 'int' lvalue Var 0x5592f38d42f8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x5592f38d5938 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5592f38d5908 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5592f38d5878 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5592f38d5830 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5592f38d5818 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5592f38d57d8 <col:151> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5592f38d5860 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5592f38d5848 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5592f38d57f8 <col:169> '_Bool' lvalue Var 0x5592f38d3d98 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5592f38d58d8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5592f38d5898 <col:186> 'int' lvalue Var 0x5592f38d42f8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5592f38d58f0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5592f38d58b8 <col:198> 'int' lvalue Var 0x5592f38d42f8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5592f38d6008 <line:717:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38d5a58 <col:3> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38d5ff0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5592f38d5fc0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5592f38d5f78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5592f38d5f60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5592f38d5a78 <col:20> '_Bool' lvalue Var 0x5592f38d4580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5592f38d5fa8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5592f38d5f90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5592f38d5a98 <col:36> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5592f38d5f40 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5592f38d5ee8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5592f38d5ca8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5592f38d5bc8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5592f38d5af0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5592f38d5ad8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5592f38d5ab8 <col:55> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5592f38d5ba8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5592f38d5b40 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5592f38d5b28 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5592f38d5b08 <col:74> '_Bool' lvalue Var 0x5592f38d3d98 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5592f38d5b90 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5592f38d5b78 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5592f38d5b58 <col:93> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5592f38d5c88 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5592f38d5c20 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5592f38d5c08 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5592f38d5be8 <col:112> '_Bool' lvalue Var 0x5592f38d3d98 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5592f38d5c70 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5592f38d5c58 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5592f38d5c38 <col:131> '_Bool' lvalue Var 0x5592f38d3f98 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5592f38d5ed0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5592f38d5eb8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5592f38d5cc8 <col:148> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5592f38d5e98 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5592f38d5e68 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5592f38d5d88 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5592f38d5d40 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5592f38d5d28 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5592f38d5ce8 <col:166> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5592f38d5d70 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5592f38d5d58 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5592f38d5d08 <col:184> '_Bool' lvalue Var 0x5592f38d3d98 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5592f38d5e20 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5592f38d5dd8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5592f38d5da8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5592f38d5e50 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5592f38d5e38 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5592f38d5e00 <col:212> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5592f38d65d0 <line:718:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38d6028 <col:3> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38d65b8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5592f38d6588 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5592f38d6540 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5592f38d6528 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5592f38d6048 <col:20> '_Bool' lvalue Var 0x5592f38d4580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5592f38d6570 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5592f38d6558 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5592f38d6068 <col:36> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5592f38d6508 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5592f38d64d8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5592f38d6278 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5592f38d6198 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5592f38d60c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5592f38d60a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5592f38d6088 <col:55> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5592f38d6178 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5592f38d6110 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5592f38d60f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5592f38d60d8 <col:74> '_Bool' lvalue Var 0x5592f38d3d98 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5592f38d6160 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5592f38d6148 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5592f38d6128 <col:93> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5592f38d6258 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5592f38d61f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5592f38d61d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5592f38d61b8 <col:112> '_Bool' lvalue Var 0x5592f38d3d98 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5592f38d6240 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5592f38d6228 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5592f38d6208 <col:131> '_Bool' lvalue Var 0x5592f38d3f98 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5592f38d64c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5592f38d64a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5592f38d6298 <col:148> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5592f38d6488 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5592f38d6458 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5592f38d6358 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5592f38d6310 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5592f38d62f8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5592f38d62b8 <col:166> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5592f38d6340 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5592f38d6328 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5592f38d62d8 <col:184> '_Bool' lvalue Var 0x5592f38d3d98 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5592f38d6428 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5592f38d63a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5592f38d6378 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5592f38d6440 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5592f38d6400 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5592f38d63d0 <col:219> 'int' 0
|   |-BinaryOperator 0x5592f38d6b78 <line:719:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38d65f0 <col:3> '_Bool' lvalue Var 0x5592f38d3d98 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38d6b60 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5592f38d6b30 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5592f38d6ae8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5592f38d6ad0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5592f38d6610 <col:20> '_Bool' lvalue Var 0x5592f38d4580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5592f38d6b18 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5592f38d6b00 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5592f38d6630 <col:36> '_Bool' lvalue Var 0x5592f38d3d98 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x5592f38d6ab0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5592f38d6a80 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5592f38d6840 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5592f38d6760 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5592f38d6688 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5592f38d6670 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5592f38d6650 <col:55> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5592f38d6740 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5592f38d66d8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5592f38d66c0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5592f38d66a0 <col:74> '_Bool' lvalue Var 0x5592f38d3d98 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5592f38d6728 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5592f38d6710 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5592f38d66f0 <col:93> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5592f38d6820 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5592f38d67b8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5592f38d67a0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5592f38d6780 <col:112> '_Bool' lvalue Var 0x5592f38d3d98 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5592f38d6808 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5592f38d67f0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5592f38d67d0 <col:131> '_Bool' lvalue Var 0x5592f38d3f98 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5592f38d6a68 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5592f38d6a50 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5592f38d6860 <col:148> '_Bool' lvalue Var 0x5592f38d3d98 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x5592f38d6a30 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5592f38d6a00 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5592f38d6920 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5592f38d68d8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5592f38d68c0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5592f38d6880 <col:166> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5592f38d6908 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5592f38d68f0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5592f38d68a0 <col:184> '_Bool' lvalue Var 0x5592f38d3d98 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5592f38d69b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5592f38d6970 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5592f38d6940 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5592f38d69e8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5592f38d69d0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5592f38d6998 <col:212> '_Bool' lvalue Var 0x5592f38d3d98 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5592f38d7150 <line:720:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38d6b98 <col:3> '_Bool' lvalue Var 0x5592f38d3f98 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38d7138 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5592f38d7108 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5592f38d70c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5592f38d70a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5592f38d6bb8 <col:20> '_Bool' lvalue Var 0x5592f38d4580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5592f38d70f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5592f38d70d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5592f38d6bd8 <col:36> '_Bool' lvalue Var 0x5592f38d3f98 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x5592f38d7088 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5592f38d7058 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5592f38d6de8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5592f38d6d08 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5592f38d6c30 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5592f38d6c18 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5592f38d6bf8 <col:55> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5592f38d6ce8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5592f38d6c80 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5592f38d6c68 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5592f38d6c48 <col:74> '_Bool' lvalue Var 0x5592f38d3d98 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5592f38d6cd0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5592f38d6cb8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5592f38d6c98 <col:93> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5592f38d6dc8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5592f38d6d60 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5592f38d6d48 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5592f38d6d28 <col:112> '_Bool' lvalue Var 0x5592f38d3d98 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5592f38d6db0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5592f38d6d98 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5592f38d6d78 <col:131> '_Bool' lvalue Var 0x5592f38d3f98 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5592f38d7040 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5592f38d7028 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5592f38d6e08 <col:148> '_Bool' lvalue Var 0x5592f38d3f98 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x5592f38d7008 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5592f38d6fd8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5592f38d6ec8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5592f38d6e80 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5592f38d6e68 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5592f38d6e28 <col:166> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5592f38d6eb0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5592f38d6e98 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5592f38d6e48 <col:184> '_Bool' lvalue Var 0x5592f38d3d98 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5592f38d6fa8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5592f38d6f18 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5592f38d6ee8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5592f38d6fc0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5592f38d6f80 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5592f38d6f50 <col:219> 'int' 0
|   |-BinaryOperator 0x5592f38d71c8 <line:721:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5592f38d7170 <col:3> 'int' lvalue Var 0x5592f38d3860 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5592f38d71b0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5592f38d7190 <col:25> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
|   |-BinaryOperator 0x5592f38d72f8 <line:722:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5592f38d71e8 <col:3> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
|   | `-ConditionalOperator 0x5592f38d72c8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5592f38d7280 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5592f38d7268 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5592f38d7208 <col:7> '_Bool' lvalue Var 0x5592f38d3c28 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5592f38d7298 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5592f38d7228 <col:25> 'int' lvalue Var 0x5592f38d3ca8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5592f38d72b0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5592f38d7248 <col:37> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
|   |-BinaryOperator 0x5592f38d7390 <line:723:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38d7318 <col:3> '_Bool' lvalue Var 0x5592f38d3c28 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5592f38d7368 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5592f38d7338 <col:28> 'int' 0
|   |-CallExpr 0x5592f38d73e8 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5592f38d73d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38d73b0 <col:3> 'void ()' Function 0x5592f387a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5592f38d7440 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5592f38d7428 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38d7408 <col:3> 'void ()' Function 0x5592f387a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5592f38d7498 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5592f38d7480 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38d7460 <col:3> 'void ()' Function 0x5592f387a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5592f38d74f0 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5592f38d74d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38d74b8 <col:3> 'void ()' Function 0x5592f387a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5592f38d75a8 <line:728:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5592f38d7510 <col:3> 'int' lvalue Var 0x5592f38d3740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5592f38d7588 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5592f38d7570 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5592f38d7530 <col:22> 'int' lvalue Var 0x5592f38d3740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5592f38d7550 <col:41> 'int' 1
|   |-CallExpr 0x5592f38d7600 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5592f38d75e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38d75c8 <col:3> 'void ()' Function 0x5592f387a570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5592f38d76a8 <line:730:3, col:36>
|     `-CallExpr 0x5592f38d7688 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5592f38d7670 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5592f38d7620 <col:10> 'void *(void)' Function 0x5592f3879fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5592f38d7850 prev 0x5592f38d3268 <line:732:1, line:771:1> line:732:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5592f38d77b8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5592f38dc190 <line:733:1, line:771:1>
|   |-CallExpr 0x5592f38d7930 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5592f38d7918 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38d78f8 <col:3> 'void ()' Function 0x5592f387a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5592f38d7990 <line:735:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5592f38d7950 <col:3> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
|   | `-IntegerLiteral 0x5592f38d7970 <col:7> 'int' 1
|   |-CallExpr 0x5592f38d79e8 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5592f38d79d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38d79b0 <col:3> 'void ()' Function 0x5592f387a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5592f38d7a40 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5592f38d7a28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38d7a08 <col:3> 'void ()' Function 0x5592f387a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5592f38d7d28 <line:738:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5592f38d7a60 <col:3> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
|   | `-ConditionalOperator 0x5592f38d7cf8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5592f38d7b20 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5592f38d7ad8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5592f38d7ac0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5592f38d7a80 <col:7> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5592f38d7b08 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5592f38d7af0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5592f38d7aa0 <col:25> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5592f38d7ce0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5592f38d7b40 <col:42> 'int' lvalue Var 0x5592f38d4200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5592f38d7cc0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5592f38d7c90 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5592f38d7c00 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5592f38d7bb8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5592f38d7ba0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5592f38d7b60 <col:55> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5592f38d7be8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5592f38d7bd0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5592f38d7b80 <col:73> '_Bool' lvalue Var 0x5592f38d4010 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5592f38d7c60 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5592f38d7c20 <col:90> 'int' lvalue Var 0x5592f38d42f8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5592f38d7c78 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5592f38d7c40 <col:102> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
|   |-BinaryOperator 0x5592f38d7f30 <line:739:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38d7d48 <col:3> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38d7f18 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5592f38d7ee8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5592f38d7e08 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5592f38d7dc0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5592f38d7da8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5592f38d7d68 <col:20> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5592f38d7df0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5592f38d7dd8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5592f38d7d88 <col:38> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5592f38d7ea0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5592f38d7e58 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5592f38d7e28 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5592f38d7ed0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5592f38d7eb8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5592f38d7e80 <col:66> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5592f38d8228 <line:740:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38d7f60 <col:3> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38d8210 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5592f38d81e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5592f38d8100 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5592f38d8020 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5592f38d7fd8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5592f38d7fc0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5592f38d7f80 <col:20> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5592f38d8008 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5592f38d7ff0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5592f38d7fa0 <col:38> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5592f38d80e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5592f38d8098 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5592f38d8080 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5592f38d8040 <col:56> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5592f38d80c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5592f38d80b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5592f38d8060 <col:74> '_Bool' lvalue Var 0x5592f38d4010 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5592f38d8198 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5592f38d8150 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5592f38d8120 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5592f38d81c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5592f38d81b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5592f38d8178 <col:102> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5592f38d8430 <line:741:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38d8248 <col:3> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38d8418 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5592f38d83e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5592f38d8308 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5592f38d82c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5592f38d82a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5592f38d8268 <col:20> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5592f38d82f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5592f38d82d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5592f38d8288 <col:38> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5592f38d83a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5592f38d8358 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5592f38d8328 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5592f38d83d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5592f38d83b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5592f38d8380 <col:66> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5592f38d8718 <line:742:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38d8450 <col:3> '_Bool' lvalue Var 0x5592f38d4010 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38d8700 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5592f38d86d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5592f38d85f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5592f38d8510 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5592f38d84c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5592f38d84b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5592f38d8470 <col:20> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5592f38d84f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5592f38d84e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5592f38d8490 <col:38> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5592f38d85d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5592f38d8588 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5592f38d8570 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5592f38d8530 <col:56> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5592f38d85b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5592f38d85a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5592f38d8550 <col:74> '_Bool' lvalue Var 0x5592f38d4010 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5592f38d8688 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5592f38d8640 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5592f38d8610 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5592f38d86b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5592f38d86a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5592f38d8668 <col:102> '_Bool' lvalue Var 0x5592f38d4010 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5592f38d8770 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5592f38d8758 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38d8738 <col:3> 'void ()' Function 0x5592f387a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5592f38d87c8 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5592f38d87b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38d8790 <col:3> 'void ()' Function 0x5592f387a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5592f38d8860 <line:745:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38d87e8 <col:3> '_Bool' lvalue Var 0x5592f38d4508 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x5592f38d8840 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5592f38d8828 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5592f38d8808 <col:19> '_Bool (void)' Function 0x5592f3879c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5592f38d88f8 <line:746:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38d8880 <col:3> '_Bool' lvalue Var 0x5592f38d4580 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x5592f38d88d8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5592f38d88c0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5592f38d88a0 <col:19> '_Bool (void)' Function 0x5592f3879c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5592f38d8970 <line:747:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38d8918 <col:3> '_Bool' lvalue Var 0x5592f38d3c28 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38d8958 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5592f38d8938 <col:21> '_Bool' lvalue Var 0x5592f38d4580 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5592f38d89e8 <line:748:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5592f38d8990 <col:3> 'int' lvalue Var 0x5592f38d3ca8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5592f38d89d0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5592f38d89b0 <col:15> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
|   |-BinaryOperator 0x5592f38d8e20 <line:749:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5592f38d8a08 <col:3> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
|   | `-ConditionalOperator 0x5592f38d8df0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5592f38d8c18 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5592f38d8b38 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5592f38d8a60 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5592f38d8a48 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5592f38d8a28 <col:8> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5592f38d8b18 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5592f38d8ab0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5592f38d8a98 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5592f38d8a78 <col:27> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x5592f38d8b00 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5592f38d8ae8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5592f38d8ac8 <col:46> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5592f38d8bf8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5592f38d8b90 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5592f38d8b78 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5592f38d8b58 <col:65> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x5592f38d8be0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5592f38d8bc8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5592f38d8ba8 <col:84> '_Bool' lvalue Var 0x5592f38d4010 'x$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5592f38d8dd8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5592f38d8c38 <col:101> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
|   |   `-ParenExpr 0x5592f38d8db8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5592f38d8d88 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5592f38d8cf8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5592f38d8cb0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5592f38d8c98 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5592f38d8c58 <col:106> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5592f38d8ce0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5592f38d8cc8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5592f38d8c78 <col:124> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5592f38d8d58 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5592f38d8d18 <col:141> 'int' lvalue Var 0x5592f38d4200 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5592f38d8d70 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5592f38d8d38 <col:153> 'int' lvalue Var 0x5592f38d42f8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5592f38d9340 <line:750:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5592f38d8e40 <col:3> 'int' lvalue Var 0x5592f38d4200 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x5592f38d9310 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5592f38d92e0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5592f38d92c8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5592f38d8e60 <col:15> '_Bool' lvalue Var 0x5592f38d4580 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5592f38d92f8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5592f38d8e80 <col:31> 'int' lvalue Var 0x5592f38d4200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5592f38d92a8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5592f38d9278 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5592f38d90a0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5592f38d8fc0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5592f38d8ed8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5592f38d8ec0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5592f38d8ea0 <col:45> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5592f38d8fa0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5592f38d8f28 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5592f38d8f10 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5592f38d8ef0 <col:64> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5592f38d8f88 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5592f38d8f70 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5592f38d8f40 <col:83> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5592f38d9080 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5592f38d9018 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5592f38d9000 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5592f38d8fe0 <col:102> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5592f38d9068 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5592f38d9050 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5592f38d9030 <col:121> '_Bool' lvalue Var 0x5592f38d4010 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5592f38d9260 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5592f38d90c0 <col:138> 'int' lvalue Var 0x5592f38d4200 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x5592f38d9240 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5592f38d9210 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5592f38d9180 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5592f38d9138 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5592f38d9120 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5592f38d90e0 <col:151> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5592f38d9168 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5592f38d9150 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5592f38d9100 <col:169> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5592f38d91e0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5592f38d91a0 <col:186> 'int' lvalue Var 0x5592f38d4200 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5592f38d91f8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5592f38d91c0 <col:198> 'int' lvalue Var 0x5592f38d4200 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5592f38d9850 <line:751:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5592f38d9360 <col:3> 'int' lvalue Var 0x5592f38d42f8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x5592f38d9820 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5592f38d97f0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5592f38d97d8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5592f38d9380 <col:15> '_Bool' lvalue Var 0x5592f38d4580 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5592f38d9808 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5592f38d93a0 <col:31> 'int' lvalue Var 0x5592f38d42f8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x5592f38d97b8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5592f38d9788 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5592f38d95b0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5592f38d94d0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5592f38d93f8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5592f38d93e0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5592f38d93c0 <col:45> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5592f38d94b0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5592f38d9448 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5592f38d9430 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5592f38d9410 <col:64> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5592f38d9498 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5592f38d9480 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5592f38d9460 <col:83> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5592f38d9590 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5592f38d9528 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5592f38d9510 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5592f38d94f0 <col:102> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5592f38d9578 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5592f38d9560 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5592f38d9540 <col:121> '_Bool' lvalue Var 0x5592f38d4010 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5592f38d9770 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5592f38d95d0 <col:138> 'int' lvalue Var 0x5592f38d42f8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x5592f38d9750 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5592f38d9720 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5592f38d9690 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5592f38d9648 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5592f38d9630 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5592f38d95f0 <col:151> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5592f38d9678 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5592f38d9660 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5592f38d9610 <col:169> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5592f38d96f0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5592f38d96b0 <col:186> 'int' lvalue Var 0x5592f38d42f8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5592f38d9708 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5592f38d96d0 <col:198> 'int' lvalue Var 0x5592f38d42f8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5592f38d9df8 <line:752:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38d9870 <col:3> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38d9de0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5592f38d9db0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5592f38d9d68 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5592f38d9d50 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5592f38d9890 <col:20> '_Bool' lvalue Var 0x5592f38d4580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5592f38d9d98 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5592f38d9d80 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5592f38d98b0 <col:36> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5592f38d9d30 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5592f38d9d00 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5592f38d9ac0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5592f38d99e0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5592f38d9908 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5592f38d98f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5592f38d98d0 <col:55> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5592f38d99c0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5592f38d9958 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5592f38d9940 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5592f38d9920 <col:74> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5592f38d99a8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5592f38d9990 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5592f38d9970 <col:93> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5592f38d9aa0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5592f38d9a38 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5592f38d9a20 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5592f38d9a00 <col:112> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5592f38d9a88 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5592f38d9a70 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5592f38d9a50 <col:131> '_Bool' lvalue Var 0x5592f38d4010 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5592f38d9ce8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5592f38d9cd0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5592f38d9ae0 <col:148> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5592f38d9cb0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5592f38d9c80 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5592f38d9ba0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5592f38d9b58 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5592f38d9b40 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5592f38d9b00 <col:166> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5592f38d9b88 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5592f38d9b70 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5592f38d9b20 <col:184> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5592f38d9c38 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5592f38d9bf0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5592f38d9bc0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5592f38d9c68 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5592f38d9c50 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5592f38d9c18 <col:212> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5592f38da3d8 <line:753:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38d9e18 <col:3> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38da3c0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5592f38da390 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5592f38da348 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5592f38da330 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5592f38d9e38 <col:20> '_Bool' lvalue Var 0x5592f38d4580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5592f38da378 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5592f38da360 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5592f38d9e58 <col:36> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5592f38da310 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5592f38da2e0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5592f38da080 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5592f38d9fa0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5592f38d9eb0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5592f38d9e98 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5592f38d9e78 <col:55> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5592f38d9f80 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5592f38d9f00 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5592f38d9ee8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5592f38d9ec8 <col:74> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5592f38d9f50 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5592f38d9f38 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5592f38d9f18 <col:93> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5592f38da060 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5592f38d9ff8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5592f38d9fe0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5592f38d9fc0 <col:112> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5592f38da048 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5592f38da030 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5592f38da010 <col:131> '_Bool' lvalue Var 0x5592f38d4010 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5592f38da2c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5592f38da2b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5592f38da0a0 <col:148> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5592f38da290 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5592f38da260 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5592f38da160 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5592f38da118 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5592f38da100 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5592f38da0c0 <col:166> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5592f38da148 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5592f38da130 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5592f38da0e0 <col:184> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5592f38da230 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5592f38da1b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5592f38da180 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5592f38da248 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5592f38da208 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5592f38da1d8 <col:219> 'int' 0
|   |-BinaryOperator 0x5592f38da980 <line:754:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38da3f8 <col:3> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38da968 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5592f38da938 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5592f38da8f0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5592f38da8d8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5592f38da418 <col:20> '_Bool' lvalue Var 0x5592f38d4580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5592f38da920 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5592f38da908 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5592f38da438 <col:36> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x5592f38da8b8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5592f38da888 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5592f38da648 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5592f38da568 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5592f38da490 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5592f38da478 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5592f38da458 <col:55> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5592f38da548 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5592f38da4e0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5592f38da4c8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5592f38da4a8 <col:74> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5592f38da530 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5592f38da518 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5592f38da4f8 <col:93> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5592f38da628 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5592f38da5c0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5592f38da5a8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5592f38da588 <col:112> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5592f38da610 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5592f38da5f8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5592f38da5d8 <col:131> '_Bool' lvalue Var 0x5592f38d4010 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5592f38da870 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5592f38da858 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5592f38da668 <col:148> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x5592f38da838 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5592f38da808 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5592f38da728 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5592f38da6e0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5592f38da6c8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5592f38da688 <col:166> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5592f38da710 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5592f38da6f8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5592f38da6a8 <col:184> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5592f38da7c0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5592f38da778 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5592f38da748 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5592f38da7f0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5592f38da7d8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5592f38da7a0 <col:212> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5592f38daf48 <line:755:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38da9a0 <col:3> '_Bool' lvalue Var 0x5592f38d4010 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38daf30 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5592f38daf00 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5592f38daeb8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5592f38daea0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5592f38da9c0 <col:20> '_Bool' lvalue Var 0x5592f38d4580 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5592f38daee8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5592f38daed0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5592f38da9e0 <col:36> '_Bool' lvalue Var 0x5592f38d4010 'x$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x5592f38dae80 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5592f38dae50 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5592f38dabf0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5592f38dab10 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5592f38daa38 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5592f38daa20 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5592f38daa00 <col:55> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5592f38daaf0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5592f38daa88 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5592f38daa70 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5592f38daa50 <col:74> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5592f38daad8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5592f38daac0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5592f38daaa0 <col:93> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5592f38dabd0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5592f38dab68 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5592f38dab50 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5592f38dab30 <col:112> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5592f38dabb8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5592f38daba0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5592f38dab80 <col:131> '_Bool' lvalue Var 0x5592f38d4010 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5592f38dae38 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5592f38dae20 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5592f38dac10 <col:148> '_Bool' lvalue Var 0x5592f38d4010 'x$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x5592f38dae00 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5592f38dadd0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5592f38dacd0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5592f38dac88 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5592f38dac70 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5592f38dac30 <col:166> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5592f38dacb8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5592f38daca0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5592f38dac50 <col:184> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5592f38dada0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5592f38dad20 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5592f38dacf0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5592f38dadb8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5592f38dad78 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5592f38dad48 <col:219> 'int' 0
|   |-BinaryOperator 0x5592f38dafe8 <line:756:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5592f38daf90 <col:3> 'int' lvalue Var 0x5592f38d3980 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5592f38dafd0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5592f38dafb0 <col:25> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
|   |-BinaryOperator 0x5592f38db118 <line:757:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5592f38db008 <col:3> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
|   | `-ConditionalOperator 0x5592f38db0e8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5592f38db0a0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5592f38db088 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5592f38db028 <col:7> '_Bool' lvalue Var 0x5592f38d3c28 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5592f38db0b8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5592f38db048 <col:25> 'int' lvalue Var 0x5592f38d3ca8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5592f38db0d0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5592f38db068 <col:37> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
|   |-BinaryOperator 0x5592f38db1b0 <line:758:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38db138 <col:3> '_Bool' lvalue Var 0x5592f38d3c28 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5592f38db188 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5592f38db158 <col:28> 'int' 0
|   |-CallExpr 0x5592f38db208 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5592f38db1f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38db1d0 <col:3> 'void ()' Function 0x5592f387a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5592f38db260 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5592f38db248 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38db228 <col:3> 'void ()' Function 0x5592f387a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5592f38db548 <line:761:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5592f38db280 <col:3> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
|   | `-ConditionalOperator 0x5592f38db518 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5592f38db340 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5592f38db2f8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5592f38db2e0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5592f38db2a0 <col:7> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5592f38db328 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5592f38db310 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5592f38db2c0 <col:25> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5592f38db500 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5592f38db360 <col:42> 'int' lvalue Var 0x5592f38d4200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5592f38db4e0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5592f38db4b0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5592f38db420 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5592f38db3d8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5592f38db3c0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5592f38db380 <col:55> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5592f38db408 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5592f38db3f0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5592f38db3a0 <col:73> '_Bool' lvalue Var 0x5592f38d4010 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5592f38db480 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5592f38db440 <col:90> 'int' lvalue Var 0x5592f38d42f8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5592f38db498 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5592f38db460 <col:102> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
|   |-BinaryOperator 0x5592f38db750 <line:762:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38db568 <col:3> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38db738 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5592f38db708 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5592f38db628 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5592f38db5e0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5592f38db5c8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5592f38db588 <col:20> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5592f38db610 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5592f38db5f8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5592f38db5a8 <col:38> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5592f38db6c0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5592f38db678 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5592f38db648 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5592f38db6f0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5592f38db6d8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5592f38db6a0 <col:66> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5592f38dba38 <line:763:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38db770 <col:3> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38dba20 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5592f38db9f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5592f38db910 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5592f38db830 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5592f38db7e8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5592f38db7d0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5592f38db790 <col:20> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5592f38db818 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5592f38db800 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5592f38db7b0 <col:38> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5592f38db8f0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5592f38db8a8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5592f38db890 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5592f38db850 <col:56> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5592f38db8d8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5592f38db8c0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5592f38db870 <col:74> '_Bool' lvalue Var 0x5592f38d4010 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5592f38db9a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5592f38db960 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5592f38db930 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5592f38db9d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5592f38db9c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5592f38db988 <col:102> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5592f38dbc40 <line:764:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38dba58 <col:3> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38dbc28 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5592f38dbbf8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5592f38dbb18 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5592f38dbad0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5592f38dbab8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5592f38dba78 <col:20> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5592f38dbb00 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5592f38dbae8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5592f38dba98 <col:38> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5592f38dbbb0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5592f38dbb68 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5592f38dbb38 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5592f38dbbe0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5592f38dbbc8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5592f38dbb90 <col:66> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5592f38dbf28 <line:765:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38dbc60 <col:3> '_Bool' lvalue Var 0x5592f38d4010 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38dbf10 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5592f38dbee0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5592f38dbe00 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5592f38dbd20 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5592f38dbcd8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5592f38dbcc0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5592f38dbc80 <col:20> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5592f38dbd08 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5592f38dbcf0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5592f38dbca0 <col:38> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5592f38dbde0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5592f38dbd98 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5592f38dbd80 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5592f38dbd40 <col:56> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5592f38dbdc8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5592f38dbdb0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5592f38dbd60 <col:74> '_Bool' lvalue Var 0x5592f38d4010 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5592f38dbe98 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5592f38dbe50 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5592f38dbe20 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5592f38dbec8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5592f38dbeb0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5592f38dbe78 <col:102> '_Bool' lvalue Var 0x5592f38d4010 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5592f38dbfa0 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5592f38dbf68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38dbf48 <col:3> 'void ()' Function 0x5592f387a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5592f38dbff8 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5592f38dbfe0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38dbfc0 <col:3> 'void ()' Function 0x5592f387a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5592f38dc0b0 <line:768:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5592f38dc018 <col:3> 'int' lvalue Var 0x5592f38d3740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5592f38dc090 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5592f38dc078 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5592f38dc038 <col:22> 'int' lvalue Var 0x5592f38d3740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5592f38dc058 <col:41> 'int' 1
|   |-CallExpr 0x5592f38dc108 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5592f38dc0f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38dc0d0 <col:3> 'void ()' Function 0x5592f387a570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5592f38dc180 <line:770:3, col:36>
|     `-CallExpr 0x5592f38dc160 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5592f38dc148 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5592f38dc128 <col:10> 'void *(void)' Function 0x5592f3879fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5592f38dc378 prev 0x5592f38d33c0 <line:772:1, line:800:1> line:772:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5592f38dc2e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5592f38ddb28 <line:773:1, line:800:1>
|   |-CallExpr 0x5592f38dc458 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5592f38dc440 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38dc420 <col:3> 'void ()' Function 0x5592f387a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5592f38dc4d0 <line:775:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5592f38dc478 <col:3> 'int' lvalue Var 0x5592f38d42f8 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5592f38dc4b8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5592f38dc498 <col:15> 'int' lvalue Var 0x5592f38d4200 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5592f38dc530 <line:776:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5592f38dc4f0 <col:3> 'int' lvalue Var 0x5592f38d4200 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x5592f38dc510 <col:15> 'int' 2
|   |-BinaryOperator 0x5592f38dc5a8 <line:777:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38dc550 <col:3> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38dc590 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5592f38dc570 <col:20> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5592f38dc640 <line:778:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38dc5c8 <col:3> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5592f38dc618 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5592f38dc5e8 <col:27> 'int' 1
|   |-CallExpr 0x5592f38dc7c8 <line:779:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5592f38dc7b0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5592f38dc660 <col:3> 'void (int)' Function 0x5592f387a238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5592f38dc760 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5592f38dc740 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5592f38dc720 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5592f38dc6d8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5592f38dc6c0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5592f38dc680 <col:23> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5592f38dc708 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5592f38dc6f0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5592f38dc6a0 <col:41> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5592f38dc848 <line:780:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38dc7f0 <col:3> '_Bool' lvalue Var 0x5592f38d3f20 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38dc830 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5592f38dc810 <col:20> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5592f38dc8c0 <line:781:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38dc868 <col:3> '_Bool' lvalue Var 0x5592f38d3f98 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38dc8a8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5592f38dc888 <col:20> '_Bool' lvalue Var 0x5592f38d3d98 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5592f38dc938 <line:782:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38dc8e0 <col:3> '_Bool' lvalue Var 0x5592f38d4010 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38dc920 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5592f38dc900 <col:20> '_Bool' lvalue Var 0x5592f38d3e10 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5592f38dc9b0 <line:783:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38dc958 <col:3> '_Bool' lvalue Var 0x5592f38d4088 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38dc998 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5592f38dc978 <col:20> '_Bool' lvalue Var 0x5592f38d3e88 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5592f38dca48 <line:784:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38dc9d0 <col:3> '_Bool' lvalue Var 0x5592f38d3e88 'x$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x5592f38dca20 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5592f38dc9f0 <col:27> 'int' 1
|   |-CallExpr 0x5592f38dcaa0 <line:785:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5592f38dca88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38dca68 <col:3> 'void ()' Function 0x5592f387a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5592f38dcaf8 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5592f38dcae0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38dcac0 <col:3> 'void ()' Function 0x5592f387a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5592f38dcb58 <line:787:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5592f38dcb18 <col:3> 'int' lvalue Var 0x5592f38d4470 'y' 'int'
|   | `-IntegerLiteral 0x5592f38dcb38 <col:7> 'int' 1
|   |-CallExpr 0x5592f38dcbb0 <line:788:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5592f38dcb98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38dcb78 <col:3> 'void ()' Function 0x5592f387a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5592f38dcc08 <line:789:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5592f38dcbf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38dcbd0 <col:3> 'void ()' Function 0x5592f387a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5592f38dcef0 <line:790:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5592f38dcc28 <col:3> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
|   | `-ConditionalOperator 0x5592f38dcec0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5592f38dcce8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5592f38dcca0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5592f38dcc88 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5592f38dcc48 <col:7> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5592f38dccd0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5592f38dccb8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5592f38dcc68 <col:25> '_Bool' lvalue Var 0x5592f38d3e88 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5592f38dcea8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5592f38dcd08 <col:42> 'int' lvalue Var 0x5592f38d4200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5592f38dce88 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5592f38dce58 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5592f38dcdc8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5592f38dcd80 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5592f38dcd68 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5592f38dcd28 <col:55> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5592f38dcdb0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5592f38dcd98 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5592f38dcd48 <col:73> '_Bool' lvalue Var 0x5592f38d4088 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5592f38dce28 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5592f38dcde8 <col:90> 'int' lvalue Var 0x5592f38d42f8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5592f38dce40 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5592f38dce08 <col:102> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
|   |-BinaryOperator 0x5592f38dd108 <line:791:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38dcf10 <col:3> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38dd0f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5592f38dd0c0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5592f38dcfe0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5592f38dcf88 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5592f38dcf70 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5592f38dcf30 <col:20> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5592f38dcfc8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5592f38dcfb0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5592f38dcf50 <col:38> '_Bool' lvalue Var 0x5592f38d3e88 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5592f38dd078 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5592f38dd030 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5592f38dd000 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5592f38dd0a8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5592f38dd090 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5592f38dd058 <col:66> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5592f38dd3f0 <line:792:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38dd128 <col:3> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38dd3d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5592f38dd3a8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5592f38dd2c8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5592f38dd1e8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5592f38dd1a0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5592f38dd188 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5592f38dd148 <col:20> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5592f38dd1d0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5592f38dd1b8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5592f38dd168 <col:38> '_Bool' lvalue Var 0x5592f38d3e88 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5592f38dd2a8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5592f38dd260 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5592f38dd248 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5592f38dd208 <col:56> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5592f38dd290 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5592f38dd278 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5592f38dd228 <col:74> '_Bool' lvalue Var 0x5592f38d4088 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5592f38dd360 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5592f38dd318 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5592f38dd2e8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5592f38dd390 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5592f38dd378 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5592f38dd340 <col:102> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5592f38dd5f8 <line:793:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38dd410 <col:3> '_Bool' lvalue Var 0x5592f38d3e88 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38dd5e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5592f38dd5b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5592f38dd4d0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5592f38dd488 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5592f38dd470 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5592f38dd430 <col:20> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5592f38dd4b8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5592f38dd4a0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5592f38dd450 <col:38> '_Bool' lvalue Var 0x5592f38d3e88 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5592f38dd568 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5592f38dd520 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5592f38dd4f0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5592f38dd598 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5592f38dd580 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5592f38dd548 <col:66> '_Bool' lvalue Var 0x5592f38d3e88 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5592f38dd8e0 <line:794:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5592f38dd618 <col:3> '_Bool' lvalue Var 0x5592f38d4088 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5592f38dd8c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5592f38dd898 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5592f38dd7b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5592f38dd6d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5592f38dd690 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5592f38dd678 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5592f38dd638 <col:20> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5592f38dd6c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5592f38dd6a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5592f38dd658 <col:38> '_Bool' lvalue Var 0x5592f38d3e88 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5592f38dd798 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5592f38dd750 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5592f38dd738 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5592f38dd6f8 <col:56> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5592f38dd780 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5592f38dd768 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5592f38dd718 <col:74> '_Bool' lvalue Var 0x5592f38d4088 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5592f38dd850 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5592f38dd808 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5592f38dd7d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5592f38dd880 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5592f38dd868 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5592f38dd830 <col:102> '_Bool' lvalue Var 0x5592f38d4088 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5592f38dd938 <line:795:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5592f38dd920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38dd900 <col:3> 'void ()' Function 0x5592f387a570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5592f38dd990 <line:796:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5592f38dd978 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38dd958 <col:3> 'void ()' Function 0x5592f387a4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5592f38dda48 <line:797:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5592f38dd9b0 <col:3> 'int' lvalue Var 0x5592f38d3740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5592f38dda28 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5592f38dda10 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5592f38dd9d0 <col:22> 'int' lvalue Var 0x5592f38d3740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5592f38dd9f0 <col:41> 'int' 1
|   |-CallExpr 0x5592f38ddaa0 <line:798:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5592f38dda88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f38dda68 <col:3> 'void ()' Function 0x5592f387a570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5592f38ddb18 <line:799:3, col:36>
|     `-CallExpr 0x5592f38ddaf8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5592f38ddae0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5592f38ddac0 <col:10> 'void *(void)' Function 0x5592f3879fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5592f38ddc28 prev 0x5592f38d3488 <line:801:1, line:803:1> line:801:6 fence 'void ()'
| `-CompoundStmt 0x5592f38ddcc8 <line:802:1, line:803:1>
|-FunctionDecl 0x5592f38ddcf8 prev 0x5592f38d3548 <line:804:1, line:806:1> line:804:6 isync 'void ()'
| `-CompoundStmt 0x5592f38ddd98 <line:805:1, line:806:1>
|-FunctionDecl 0x5592f38dddc8 prev 0x5592f38d3608 <line:807:1, line:809:1> line:807:6 lwfence 'void ()'
| `-CompoundStmt 0x5592f38dde68 <line:808:1, line:809:1>
`-FunctionDecl 0x5592f38dded8 <line:810:1, line:847:1> line:810:5 main 'int ()'
  `-CompoundStmt 0x5592f38e2558 <line:811:1, line:847:1>
    |-DeclStmt 0x5592f38de028 <line:812:3, col:18>
    | `-VarDecl 0x5592f38ddfc0 <col:3, col:13> col:13 used t2551 'pthread_t':'unsigned long'
    |-CallExpr 0x5592f38de238 <line:813:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5592f38de220 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5592f38de040 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5592f38ba9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5592f38de080 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5592f38de060 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5592f38ddfc0 't2551' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5592f38de278 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5592f38de0f8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5592f38de0d0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5592f38de098 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5592f38de290 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5592f38de118 <col:39> 'void *(void *)' Function 0x5592f38d4698 'P0' 'void *(void *)'
    | `-ParenExpr 0x5592f38de198 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5592f38de170 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5592f38de138 <col:52> 'int' 0
    |-DeclStmt 0x5592f38de320 <line:814:3, col:18>
    | `-VarDecl 0x5592f38de2b8 <col:3, col:13> col:13 used t2552 'pthread_t':'unsigned long'
    |-CallExpr 0x5592f38de4c8 <line:815:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5592f38de4b0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5592f38de338 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5592f38ba9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5592f38de378 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5592f38de358 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5592f38de2b8 't2552' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5592f38de508 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5592f38de3f0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5592f38de3c8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5592f38de390 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5592f38de520 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5592f38de410 <col:39> 'void *(void *)' Function 0x5592f38d7850 'P1' 'void *(void *)'
    | `-ParenExpr 0x5592f38de490 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5592f38de468 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5592f38de430 <col:52> 'int' 0
    |-DeclStmt 0x5592f38de5b0 <line:816:3, col:18>
    | `-VarDecl 0x5592f38de548 <col:3, col:13> col:13 used t2553 'pthread_t':'unsigned long'
    |-CallExpr 0x5592f38de758 <line:817:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5592f38de740 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5592f38de5c8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5592f38ba9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5592f38de608 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5592f38de5e8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5592f38de548 't2553' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5592f38de798 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5592f38de680 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5592f38de658 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5592f38de620 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5592f38de7b0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5592f38de6a0 <col:39> 'void *(void *)' Function 0x5592f38dc378 'P2' 'void *(void *)'
    | `-ParenExpr 0x5592f38de720 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5592f38de6f8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5592f38de6c0 <col:52> 'int' 0
    |-CallExpr 0x5592f38de800 <line:818:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5592f38de7e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5592f38de7c8 <col:3> 'void ()' Function 0x5592f387a4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5592f38de8d0 <line:819:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5592f38de820 <col:3> '_Bool' lvalue Var 0x5592f38d3a18 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5592f38de8b8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5592f38de898 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5592f38de880 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5592f38de840 <col:21> 'int' lvalue Var 0x5592f38d3740 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5592f38de860 <col:41> 'int' 3
    |-CallExpr 0x5592f38de928 <line:820:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5592f38de910 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5592f38de8f0 <col:3> 'void ()' Function 0x5592f387a570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5592f38de9a0 <line:821:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5592f38de988 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5592f38de948 <col:3> 'void (int)' Function 0x5592f3879e50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5592f38de9e0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5592f38de9c8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5592f38de968 <col:21> '_Bool' lvalue Var 0x5592f38d3a18 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5592f38dea30 <line:822:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5592f38dea18 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5592f38de9f8 <col:3> 'void ()' Function 0x5592f387a4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5592f38ded18 <line:823:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5592f38dea50 <col:3> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
    | `-ConditionalOperator 0x5592f38dece8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5592f38deb10 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5592f38deac8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5592f38deab0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5592f38dea70 <col:7> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5592f38deaf8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5592f38deae0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5592f38dea90 <col:25> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5592f38decd0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5592f38deb30 <col:42> 'int' lvalue Var 0x5592f38d4200 'x$w_buff0' 'int'
    |   `-ParenExpr 0x5592f38decb0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5592f38dec80 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5592f38debf0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5592f38deba8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5592f38deb90 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5592f38deb50 <col:55> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5592f38debd8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5592f38debc0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5592f38deb70 <col:73> '_Bool' lvalue Var 0x5592f38d3f20 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5592f38dec50 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5592f38dec10 <col:90> 'int' lvalue Var 0x5592f38d42f8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5592f38dec68 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5592f38dec30 <col:102> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
    |-BinaryOperator 0x5592f38def20 <line:824:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5592f38ded38 <col:3> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5592f38def08 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5592f38deed8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5592f38dedf8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5592f38dedb0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5592f38ded98 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5592f38ded58 <col:20> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5592f38dede0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5592f38dedc8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5592f38ded78 <col:38> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5592f38dee90 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5592f38dee48 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5592f38dee18 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5592f38deec0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5592f38deea8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5592f38dee70 <col:66> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5592f38df220 <line:825:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5592f38def40 <col:3> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5592f38df208 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5592f38df1d8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5592f38df0f8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5592f38df018 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5592f38defd0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5592f38defa0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5592f38def60 <col:20> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5592f38df000 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5592f38defe8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5592f38def80 <col:38> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5592f38df0d8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5592f38df090 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5592f38df078 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5592f38df038 <col:56> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5592f38df0c0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5592f38df0a8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5592f38df058 <col:74> '_Bool' lvalue Var 0x5592f38d3f20 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5592f38df190 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5592f38df148 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5592f38df118 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5592f38df1c0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5592f38df1a8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5592f38df170 <col:102> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5592f38df428 <line:826:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5592f38df240 <col:3> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5592f38df410 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5592f38df3e0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5592f38df300 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5592f38df2b8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5592f38df2a0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5592f38df260 <col:20> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5592f38df2e8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5592f38df2d0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5592f38df280 <col:38> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5592f38df398 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5592f38df350 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5592f38df320 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5592f38df3c8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5592f38df3b0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5592f38df378 <col:66> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5592f38df710 <line:827:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5592f38df448 <col:3> '_Bool' lvalue Var 0x5592f38d3f20 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5592f38df6f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5592f38df6c8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5592f38df5e8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5592f38df508 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5592f38df4c0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5592f38df4a8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5592f38df468 <col:20> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5592f38df4f0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5592f38df4d8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5592f38df488 <col:38> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5592f38df5c8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5592f38df580 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5592f38df568 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5592f38df528 <col:56> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5592f38df5b0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5592f38df598 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5592f38df548 <col:74> '_Bool' lvalue Var 0x5592f38d3f20 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5592f38df680 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5592f38df638 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5592f38df608 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5592f38df6b0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5592f38df698 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5592f38df660 <col:102> '_Bool' lvalue Var 0x5592f38d3f20 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5592f38df768 <line:828:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5592f38df750 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5592f38df730 <col:3> 'void ()' Function 0x5592f387a570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5592f38df7c0 <line:829:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5592f38df7a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5592f38df788 <col:3> 'void ()' Function 0x5592f387a4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5592f38df858 <line:830:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x5592f38df7e0 <col:3> '_Bool' lvalue Var 0x5592f38d4508 'weak$$choice0' '_Bool'
    | `-CallExpr 0x5592f38df838 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x5592f38df820 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x5592f38df800 <col:19> '_Bool (void)' Function 0x5592f3879c80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x5592f38df8f0 <line:831:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x5592f38df878 <col:3> '_Bool' lvalue Var 0x5592f38d4580 'weak$$choice2' '_Bool'
    | `-CallExpr 0x5592f38df8d0 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x5592f38df8b8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x5592f38df898 <col:19> '_Bool (void)' Function 0x5592f3879c80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x5592f38df968 <line:832:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x5592f38df910 <col:3> '_Bool' lvalue Var 0x5592f38d3c28 'x$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x5592f38df950 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x5592f38df930 <col:21> '_Bool' lvalue Var 0x5592f38d4580 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x5592f38df9e0 <line:833:3, col:15> 'int' '='
    | |-DeclRefExpr 0x5592f38df988 <col:3> 'int' lvalue Var 0x5592f38d3ca8 'x$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x5592f38df9c8 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x5592f38df9a8 <col:15> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
    |-BinaryOperator 0x5592f38dfe18 <line:834:3, col:162> 'int' '='
    | |-DeclRefExpr 0x5592f38dfa00 <col:3> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
    | `-ConditionalOperator 0x5592f38dfde8 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x5592f38dfc10 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x5592f38dfb30 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x5592f38dfa58 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x5592f38dfa40 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x5592f38dfa20 <col:8> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x5592f38dfb10 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x5592f38dfaa8 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x5592f38dfa90 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x5592f38dfa70 <col:27> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x5592f38dfaf8 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x5592f38dfae0 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x5592f38dfac0 <col:46> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x5592f38dfbf0 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x5592f38dfb88 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x5592f38dfb70 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x5592f38dfb50 <col:65> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x5592f38dfbd8 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x5592f38dfbc0 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x5592f38dfba0 <col:84> '_Bool' lvalue Var 0x5592f38d3f20 'x$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5592f38dfdd0 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5592f38dfc30 <col:101> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
    |   `-ParenExpr 0x5592f38dfdb0 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x5592f38dfd80 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x5592f38dfcf0 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5592f38dfca8 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5592f38dfc90 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5592f38dfc50 <col:106> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5592f38dfcd8 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5592f38dfcc0 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5592f38dfc70 <col:124> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5592f38dfd50 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5592f38dfd10 <col:141> 'int' lvalue Var 0x5592f38d4200 'x$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x5592f38dfd68 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5592f38dfd30 <col:153> 'int' lvalue Var 0x5592f38d42f8 'x$w_buff1' 'int'
    |-BinaryOperator 0x5592f38e0340 <line:835:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5592f38dfe38 <col:3> 'int' lvalue Var 0x5592f38d4200 'x$w_buff0' 'int'
    | `-ConditionalOperator 0x5592f38e0310 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5592f38e02e0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5592f38e02c8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5592f38dfe58 <col:15> '_Bool' lvalue Var 0x5592f38d4580 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5592f38e02f8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5592f38dfe78 <col:31> 'int' lvalue Var 0x5592f38d4200 'x$w_buff0' 'int'
    |   `-ParenExpr 0x5592f38e02a8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5592f38e0278 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5592f38e00a0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5592f38dffa8 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5592f38dfed0 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5592f38dfeb8 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5592f38dfe98 <col:45> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5592f38dff88 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5592f38dff20 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5592f38dff08 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5592f38dfee8 <col:64> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5592f38dff70 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5592f38dff58 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5592f38dff38 <col:83> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5592f38e0080 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5592f38e0018 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5592f38e0000 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5592f38dffe0 <col:102> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5592f38e0068 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5592f38e0050 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5592f38e0030 <col:121> '_Bool' lvalue Var 0x5592f38d3f20 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5592f38e0260 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5592f38e00c0 <col:138> 'int' lvalue Var 0x5592f38d4200 'x$w_buff0' 'int'
    |       `-ParenExpr 0x5592f38e0240 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5592f38e0210 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5592f38e0180 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5592f38e0138 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5592f38e0120 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5592f38e00e0 <col:151> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5592f38e0168 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5592f38e0150 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5592f38e0100 <col:169> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5592f38e01e0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5592f38e01a0 <col:186> 'int' lvalue Var 0x5592f38d4200 'x$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x5592f38e01f8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5592f38e01c0 <col:198> 'int' lvalue Var 0x5592f38d4200 'x$w_buff0' 'int'
    |-BinaryOperator 0x5592f38e0850 <line:836:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5592f38e0360 <col:3> 'int' lvalue Var 0x5592f38d42f8 'x$w_buff1' 'int'
    | `-ConditionalOperator 0x5592f38e0820 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5592f38e07f0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5592f38e07d8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5592f38e0380 <col:15> '_Bool' lvalue Var 0x5592f38d4580 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5592f38e0808 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5592f38e03a0 <col:31> 'int' lvalue Var 0x5592f38d42f8 'x$w_buff1' 'int'
    |   `-ParenExpr 0x5592f38e07b8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5592f38e0788 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5592f38e05b0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5592f38e04d0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5592f38e03f8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5592f38e03e0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5592f38e03c0 <col:45> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5592f38e04b0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5592f38e0448 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5592f38e0430 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5592f38e0410 <col:64> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5592f38e0498 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5592f38e0480 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5592f38e0460 <col:83> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5592f38e0590 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5592f38e0528 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5592f38e0510 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5592f38e04f0 <col:102> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5592f38e0578 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5592f38e0560 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5592f38e0540 <col:121> '_Bool' lvalue Var 0x5592f38d3f20 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5592f38e0770 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5592f38e05d0 <col:138> 'int' lvalue Var 0x5592f38d42f8 'x$w_buff1' 'int'
    |       `-ParenExpr 0x5592f38e0750 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5592f38e0720 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5592f38e0690 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5592f38e0648 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5592f38e0630 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5592f38e05f0 <col:151> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5592f38e0678 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5592f38e0660 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5592f38e0610 <col:169> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5592f38e06f0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5592f38e06b0 <col:186> 'int' lvalue Var 0x5592f38d42f8 'x$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x5592f38e0708 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5592f38e06d0 <col:198> 'int' lvalue Var 0x5592f38d42f8 'x$w_buff1' 'int'
    |-BinaryOperator 0x5592f38e0df8 <line:837:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5592f38e0870 <col:3> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5592f38e0de0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5592f38e0db0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5592f38e0d68 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5592f38e0d50 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5592f38e0890 <col:20> '_Bool' lvalue Var 0x5592f38d4580 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5592f38e0d98 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5592f38e0d80 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5592f38e08b0 <col:36> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x5592f38e0d30 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5592f38e0d00 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5592f38e0ac0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5592f38e09e0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5592f38e0908 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5592f38e08f0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5592f38e08d0 <col:55> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5592f38e09c0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5592f38e0958 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5592f38e0940 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5592f38e0920 <col:74> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5592f38e09a8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5592f38e0990 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5592f38e0970 <col:93> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5592f38e0aa0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5592f38e0a38 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5592f38e0a20 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5592f38e0a00 <col:112> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5592f38e0a88 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5592f38e0a70 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5592f38e0a50 <col:131> '_Bool' lvalue Var 0x5592f38d3f20 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5592f38e0ce8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5592f38e0cd0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5592f38e0ae0 <col:148> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x5592f38e0cb0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5592f38e0c80 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5592f38e0ba0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5592f38e0b58 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5592f38e0b40 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5592f38e0b00 <col:166> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5592f38e0b88 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5592f38e0b70 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5592f38e0b20 <col:184> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5592f38e0c38 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5592f38e0bf0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5592f38e0bc0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5592f38e0c68 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5592f38e0c50 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5592f38e0c18 <col:212> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5592f38e13d0 <line:838:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5592f38e0e18 <col:3> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5592f38e13b8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5592f38e1388 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5592f38e1340 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5592f38e1328 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5592f38e0e38 <col:20> '_Bool' lvalue Var 0x5592f38d4580 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5592f38e1370 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5592f38e1358 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5592f38e0e58 <col:36> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x5592f38e1308 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5592f38e12d8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5592f38e1078 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5592f38e0f88 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5592f38e0eb0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5592f38e0e98 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5592f38e0e78 <col:55> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5592f38e0f68 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5592f38e0f00 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5592f38e0ee8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5592f38e0ec8 <col:74> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5592f38e0f50 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5592f38e0f38 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5592f38e0f18 <col:93> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5592f38e1058 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5592f38e0ff0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5592f38e0fc8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5592f38e0fa8 <col:112> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5592f38e1040 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5592f38e1028 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5592f38e1008 <col:131> '_Bool' lvalue Var 0x5592f38d3f20 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5592f38e12c0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5592f38e12a8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5592f38e1098 <col:148> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x5592f38e1288 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5592f38e1258 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5592f38e1158 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5592f38e1110 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5592f38e10f8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5592f38e10b8 <col:166> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5592f38e1140 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5592f38e1128 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5592f38e10d8 <col:184> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5592f38e1228 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5592f38e11a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5592f38e1178 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5592f38e1240 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5592f38e1200 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5592f38e11d0 <col:219> 'int' 0
    |-BinaryOperator 0x5592f38e1978 <line:839:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5592f38e13f0 <col:3> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5592f38e1960 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5592f38e1930 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5592f38e18e8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5592f38e18d0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5592f38e1410 <col:20> '_Bool' lvalue Var 0x5592f38d4580 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5592f38e1918 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5592f38e1900 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5592f38e1430 <col:36> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x5592f38e18b0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5592f38e1880 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5592f38e1640 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5592f38e1560 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5592f38e1488 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5592f38e1470 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5592f38e1450 <col:55> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5592f38e1540 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5592f38e14d8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5592f38e14c0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5592f38e14a0 <col:74> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5592f38e1528 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5592f38e1510 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5592f38e14f0 <col:93> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5592f38e1620 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5592f38e15b8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5592f38e15a0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5592f38e1580 <col:112> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5592f38e1608 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5592f38e15f0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5592f38e15d0 <col:131> '_Bool' lvalue Var 0x5592f38d3f20 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5592f38e1868 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5592f38e1850 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5592f38e1660 <col:148> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x5592f38e1830 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5592f38e1800 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5592f38e1720 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5592f38e16d8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5592f38e16c0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5592f38e1680 <col:166> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5592f38e1708 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5592f38e16f0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5592f38e16a0 <col:184> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5592f38e17b8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5592f38e1770 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5592f38e1740 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5592f38e17e8 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5592f38e17d0 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5592f38e1798 <col:212> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5592f38e1f40 <line:840:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5592f38e1998 <col:3> '_Bool' lvalue Var 0x5592f38d3f20 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5592f38e1f28 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5592f38e1ef8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5592f38e1eb0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5592f38e1e98 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5592f38e19b8 <col:20> '_Bool' lvalue Var 0x5592f38d4580 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5592f38e1ee0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5592f38e1ec8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5592f38e19d8 <col:36> '_Bool' lvalue Var 0x5592f38d3f20 'x$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x5592f38e1e78 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5592f38e1e48 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5592f38e1be8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5592f38e1b08 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5592f38e1a30 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5592f38e1a18 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5592f38e19f8 <col:55> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5592f38e1ae8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5592f38e1a80 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5592f38e1a68 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5592f38e1a48 <col:74> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5592f38e1ad0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5592f38e1ab8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5592f38e1a98 <col:93> '_Bool' lvalue Var 0x5592f38d4370 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5592f38e1bc8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5592f38e1b60 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5592f38e1b48 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5592f38e1b28 <col:112> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5592f38e1bb0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5592f38e1b98 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5592f38e1b78 <col:131> '_Bool' lvalue Var 0x5592f38d3f20 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5592f38e1e30 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5592f38e1e18 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5592f38e1c08 <col:148> '_Bool' lvalue Var 0x5592f38d3f20 'x$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x5592f38e1df8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5592f38e1dc8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5592f38e1cc8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5592f38e1c80 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5592f38e1c68 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5592f38e1c28 <col:166> '_Bool' lvalue Var 0x5592f38d4278 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5592f38e1cb0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5592f38e1c98 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5592f38e1c48 <col:184> '_Bool' lvalue Var 0x5592f38d3d20 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5592f38e1d98 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5592f38e1d18 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5592f38e1ce8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5592f38e1db0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5592f38e1d70 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5592f38e1d40 <col:219> 'int' 0
    |-BinaryOperator 0x5592f38e2238 <line:841:3, col:95> '_Bool' '='
    | |-DeclRefExpr 0x5592f38e1f60 <col:3> '_Bool' lvalue Var 0x5592f38d3a90 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5592f38e2220 <col:21, col:95> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5592f38e2208 <col:21, col:95> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5592f38e21e8 <col:22, col:95> 'int'
    |       `-BinaryOperator 0x5592f38e21c8 <col:23, col:94> 'int' '&&'
    |         |-BinaryOperator 0x5592f38e2130 <col:23, col:66> 'int' '&&'
    |         | |-BinaryOperator 0x5592f38e2098 <col:23, col:38> 'int' '&&'
    |         | | |-BinaryOperator 0x5592f38e2000 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x5592f38e1fc0 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x5592f38e1f80 <col:23> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
    |         | | | `-IntegerLiteral 0x5592f38e1fa0 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x5592f38e2078 <col:33, col:38> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5592f38e2060 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5592f38e2020 <col:33> 'int' lvalue Var 0x5592f38d4470 'y' 'int'
    |         | |   `-IntegerLiteral 0x5592f38e2040 <col:38> 'int' 2
    |         | `-BinaryOperator 0x5592f38e2110 <col:43, col:66> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5592f38e20f8 <col:43> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5592f38e20b8 <col:43> 'int' lvalue Var 0x5592f38d3860 '__unbuffered_p0_EAX' 'int'
    |         |   `-IntegerLiteral 0x5592f38e20d8 <col:66> 'int' 0
    |         `-BinaryOperator 0x5592f38e21a8 <col:71, col:94> 'int' '=='
    |           |-ImplicitCastExpr 0x5592f38e2190 <col:71> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5592f38e2150 <col:71> 'int' lvalue Var 0x5592f38d3980 '__unbuffered_p1_EAX' 'int'
    |           `-IntegerLiteral 0x5592f38e2170 <col:94> 'int' 1
    |-BinaryOperator 0x5592f38e2368 <line:842:3, col:37> 'int' '='
    | |-DeclRefExpr 0x5592f38e2258 <col:3> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
    | `-ConditionalOperator 0x5592f38e2338 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x5592f38e22f0 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5592f38e22d8 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5592f38e2278 <col:7> '_Bool' lvalue Var 0x5592f38d3c28 'x$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x5592f38e2308 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5592f38e2298 <col:25> 'int' lvalue Var 0x5592f38d3ca8 'x$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x5592f38e2320 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x5592f38e22b8 <col:37> 'int' lvalue Var 0x5592f38d3b90 'x' 'int'
    |-BinaryOperator 0x5592f38e2400 <line:843:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x5592f38e2388 <col:3> '_Bool' lvalue Var 0x5592f38d3c28 'x$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x5592f38e23d8 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x5592f38e23a8 <col:28> 'int' 0
    |-CallExpr 0x5592f38e2458 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5592f38e2440 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5592f38e2420 <col:3> 'void ()' Function 0x5592f387a570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5592f38e24d0 <line:845:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5592f38e24b8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5592f38e2478 <col:3> 'void (int)' Function 0x5592f387a238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5592f38e2510 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5592f38e24f8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5592f38e2498 <col:21> '_Bool' lvalue Var 0x5592f38d3a90 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5592f38e2548 <line:846:3, col:10>
      `-IntegerLiteral 0x5592f38e2528 <col:10> 'int' 0
