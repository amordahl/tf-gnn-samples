TranslationUnitDecl 0x561b1a713f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x561b1a714848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x561b1a714520 '__int128'
|-TypedefDecl 0x561b1a7148b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x561b1a714540 'unsigned __int128'
|-TypedefDecl 0x561b1a714bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x561b1a714990 'struct __NSConstantString_tag'
|   `-Record 0x561b1a714910 '__NSConstantString_tag'
|-TypedefDecl 0x561b1a714c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x561b1a714c20 'char *'
|   `-BuiltinType 0x561b1a714020 'char'
|-TypedefDecl 0x561b1a753b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x561b1a714f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x561b1a714d40 'struct __va_list_tag'
|     `-Record 0x561b1a714cc0 '__va_list_tag'
|-FunctionDecl 0x561b1a753ca0 <pthread-wmm/mix012_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x561b1a753bd0 <col:31> col:34 'int'
|-FunctionDecl 0x561b1a753e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x561b1a753f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x561b1a7540d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x561b1a754048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x561b1a754308 <col:40, col:99>
|   |-IfStmt 0x561b1a7542d8 <col:42, col:88>
|   | |-UnaryOperator 0x561b1a7541b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x561b1a7541a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x561b1a754180 <col:47> 'int' lvalue ParmVar 0x561b1a754048 'expression' 'int'
|   | `-CompoundStmt 0x561b1a7542c0 <col:59, col:88>
|   |   `-LabelStmt 0x561b1a7542a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x561b1a754238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x561b1a754220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x561b1a7541d0 <col:68> 'void () __attribute__((noreturn))' Function 0x561b1a753f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x561b1a7542f0 <col:89>
|   `-ReturnStmt 0x561b1a7542f8 <col:91>
|-FunctionDecl 0x561b1a754350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x561b1a754410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x561b1a754790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561b1a7544c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x561b1a754548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x561b1a7545c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x561b1a754648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x561b1a754850 <line:10:22>
|-FunctionDecl 0x561b1a77a8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561b1a7548c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x561b1a754940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x561b1a7549c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x561b1a754a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x561b1a77a960 <line:13:22>
|-FunctionDecl 0x561b1a77ac10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561b1a77a9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x561b1a77aa50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x561b1a77aad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x561b1a77acc8 <line:15:22>
|-TypedefDecl 0x561b1a77ad38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x561b1a7140e0 'unsigned char'
|-TypedefDecl 0x561b1a77ada8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x561b1a714100 'unsigned short'
|-TypedefDecl 0x561b1a77ae18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x561b1a714120 'unsigned int'
|-TypedefDecl 0x561b1a77ae88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x561b1a714140 'unsigned long'
|-TypedefDecl 0x561b1a77aef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x561b1a714040 'signed char'
|-TypedefDecl 0x561b1a77af68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x561b1a7140e0 'unsigned char'
|-TypedefDecl 0x561b1a77afd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x561b1a714060 'short'
|-TypedefDecl 0x561b1a77b048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x561b1a714100 'unsigned short'
|-TypedefDecl 0x561b1a77b0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x561b1a714080 'int'
|-TypedefDecl 0x561b1a77b128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x561b1a714120 'unsigned int'
|-TypedefDecl 0x561b1a77b198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x561b1a7140a0 'long'
|-TypedefDecl 0x561b1a77b208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x561b1a714140 'unsigned long'
|-TypedefDecl 0x561b1a77b278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x561b1a7140a0 'long'
|-TypedefDecl 0x561b1a77b2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x561b1a714140 'unsigned long'
|-TypedefDecl 0x561b1a77b358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x561b1a714140 'unsigned long'
|-TypedefDecl 0x561b1a77b3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x561b1a714120 'unsigned int'
|-TypedefDecl 0x561b1a77b438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x561b1a714120 'unsigned int'
|-TypedefDecl 0x561b1a77b4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x561b1a714140 'unsigned long'
|-TypedefDecl 0x561b1a77b518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x561b1a714140 'unsigned long'
|-TypedefDecl 0x561b1a77b588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x561b1a714120 'unsigned int'
|-TypedefDecl 0x561b1a77b5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x561b1a714140 'unsigned long'
|-TypedefDecl 0x561b1a77b668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x561b1a7140a0 'long'
|-TypedefDecl 0x561b1a77b6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x561b1a7140a0 'long'
|-TypedefDecl 0x561b1a77b748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x561b1a714080 'int'
|-RecordDecl 0x561b1a77b7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x561b1a77b918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x561b1a77b9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x561b1a77b970 'struct __fsid_t' sugar
|   `-RecordType 0x561b1a77b820 '__fsid_t'
|     `-Record 0x561b1a77b7a0 ''
|-TypedefDecl 0x561b1a77ba58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x561b1a7140a0 'long'
|-TypedefDecl 0x561b1a77bac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x561b1a714140 'unsigned long'
|-TypedefDecl 0x561b1a77bb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x561b1a714140 'unsigned long'
|-TypedefDecl 0x561b1a77bba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x561b1a714120 'unsigned int'
|-TypedefDecl 0x561b1a77bc18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x561b1a7140a0 'long'
|-TypedefDecl 0x561b1a77bc88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x561b1a714120 'unsigned int'
|-TypedefDecl 0x561b1a77bcf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x561b1a7140a0 'long'
|-TypedefDecl 0x561b1a77bd68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x561b1a714080 'int'
|-TypedefDecl 0x561b1a77bdd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x561b1a714080 'int'
|-TypedefDecl 0x561b1a77be48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x561b1a714080 'int'
|-TypedefDecl 0x561b1a77beb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x561b1a7147a0 'void *'
|   `-BuiltinType 0x561b1a713fe0 'void'
|-TypedefDecl 0x561b1a77bf28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x561b1a7140a0 'long'
|-TypedefDecl 0x561b1a77bf98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x561b1a7140a0 'long'
|-TypedefDecl 0x561b1a77c008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x561b1a7140a0 'long'
|-TypedefDecl 0x561b1a77c078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x561b1a714140 'unsigned long'
|-TypedefDecl 0x561b1a77c0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x561b1a714140 'unsigned long'
|-TypedefDecl 0x561b1a77c158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x561b1a714140 'unsigned long'
|-TypedefDecl 0x561b1a77c1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x561b1a714140 'unsigned long'
|-TypedefDecl 0x561b1a77c238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x561b1a7140a0 'long'
|-TypedefDecl 0x561b1a77c2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x561b1a7140a0 'long'
|-TypedefDecl 0x561b1a77c318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x561b1a7140a0 'long'
|-TypedefDecl 0x561b1a77c388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x561b1a714140 'unsigned long'
|-TypedefDecl 0x561b1a77c418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x561b1a77c3e0 '__off64_t' sugar
|   |-Typedef 0x561b1a77b6d8 '__off64_t'
|   `-BuiltinType 0x561b1a7140a0 'long'
|-TypedefDecl 0x561b1a77c510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x561b1a77c4d0 '__quad_t *'
|   `-TypedefType 0x561b1a77c470 '__quad_t' sugar
|     |-Typedef 0x561b1a77b278 '__quad_t'
|     `-BuiltinType 0x561b1a7140a0 'long'
|-TypedefDecl 0x561b1a77c580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x561b1a714c20 'char *'
|   `-BuiltinType 0x561b1a714020 'char'
|-TypedefDecl 0x561b1a77c5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x561b1a7140a0 'long'
|-TypedefDecl 0x561b1a77c660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x561b1a714120 'unsigned int'
|-FunctionDecl 0x561b1a77c7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x561b1a77c6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x561b1a77cae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x561b1a77cad8 <line:72:3, col:34>
|     `-CallExpr 0x561b1a77ca98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x561b1a77ca80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x561b1a77ca10 <col:10> '<builtin fn type>' Function 0x561b1a77c880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x561b1a77cac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x561b1a77ca30 <col:29> 'unsigned int' lvalue ParmVar 0x561b1a77c6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x561b1a77c880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x561b1a77c920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x561b1a77c990 <col:10> Implicit
| `-ConstAttr 0x561b1a77c9e8 <col:10> Implicit
|-FunctionDecl 0x561b1a77cc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x561b1a77cb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x561b1a77cf58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x561b1a77cf48 <line:77:3, col:34>
|     `-CallExpr 0x561b1a77cf08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x561b1a77cef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x561b1a77ce78 <col:10> '<builtin fn type>' Function 0x561b1a77cce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x561b1a77cf30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x561b1a77ce98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x561b1a77cb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x561b1a77cce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x561b1a77cd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x561b1a77cdf8 <col:10> Implicit
| `-ConstAttr 0x561b1a77ce50 <col:10> Implicit
|-TypedefDecl 0x561b1a77cf88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x561b1a714140 'unsigned long'
|-TypedefDecl 0x561b1a77d018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x561b1a77cfe0 '__time_t' sugar
|   |-Typedef 0x561b1a77bc18 '__time_t'
|   `-BuiltinType 0x561b1a7140a0 'long'
|-RecordDecl 0x561b1a77d070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x561b1a77d128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x561b1a77d1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x561b1a77d248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x561b1a77d210 '__pid_t' sugar
|   |-Typedef 0x561b1a77b748 '__pid_t'
|   `-BuiltinType 0x561b1a714080 'int'
|-RecordDecl 0x561b1a77d2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x561b1a77d360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x561b1a77d3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x561b1a77d470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x561b1a77d4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x561b1a714140 'unsigned long'
|-RecordDecl 0x561b1a77d530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x561b1a77d7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x561b1a77f8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x561b1a77d810 'struct cpu_set_t' sugar
|   `-RecordType 0x561b1a77d5b0 'cpu_set_t'
|     `-Record 0x561b1a77d530 ''
|-FunctionDecl 0x561b1a77fb88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x561b1a77f958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561b1a77fa60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x561b1a77fc38 <line:107:19>
|-FunctionDecl 0x561b1a77fe10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x561b1a77fca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x561b1a77feb8 <col:69>
|-FunctionDecl 0x561b1a780030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x561b1a77ff20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x561b1a7800d8 <col:64>
|-FunctionDecl 0x561b1a780398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x561b1a780140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561b1a780278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561b1a780448 <line:113:22>
|-FunctionDecl 0x561b1a7806c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x561b1a7804b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561b1a7805a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x561b1a780778 <col:88>
|-FunctionDecl 0x561b1a780a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x561b1a7807e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561b1a7808c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x561b1a780950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561b1a780b50 <col:62>
|-FunctionDecl 0x561b1a780cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x561b1a780bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x561b1a780d70 <col:63>
|-FunctionDecl 0x561b1a780e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x561b1a780f38 <col:47>
|-FunctionDecl 0x561b1a781040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x561b1a780fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x561b1a7810e8 <col:69>
|-FunctionDecl 0x561b1a7811f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x561b1a781158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x561b1a781298 <col:69>
|-FunctionDecl 0x561b1a781558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561b1a781300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561b1a781438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x561b1a781608 <col:88>
|-TypedefDecl 0x561b1a781698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x561b1a781660 '__clock_t' sugar
|   |-Typedef 0x561b1a77ba58 '__clock_t'
|   `-BuiltinType 0x561b1a7140a0 'long'
|-TypedefDecl 0x561b1a781728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x561b1a7816f0 '__clockid_t' sugar
|   |-Typedef 0x561b1a77be48 '__clockid_t'
|   `-BuiltinType 0x561b1a714080 'int'
|-TypedefDecl 0x561b1a7817b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x561b1a781780 '__timer_t' sugar
|   |-Typedef 0x561b1a77beb8 '__timer_t'
|   `-PointerType 0x561b1a7147a0 'void *'
|     `-BuiltinType 0x561b1a713fe0 'void'
|-RecordDecl 0x561b1a781810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x561b1a7818e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x561b1a781950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x561b1a7819b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x561b1a781a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x561b1a781a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x561b1a781af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x561b1a781b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x561b1a781bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x561b1a781c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x561b1a781c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x561b1a781cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x561b1a781d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x561b1a781e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x561b1a781e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x561b1a781f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x561b1a782100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x561b1a7821a0 <col:45>
|-FunctionDecl 0x561b1a782380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x561b1a782270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x561b1a782428 <col:54>
|-FunctionDecl 0x561b1a782628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x561b1a782490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x561b1a782508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x561b1a7826d8 <line:157:22>
| `-ConstAttr 0x561b1a782730 <col:63>
|-FunctionDecl 0x561b1a783560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561b1a782828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x561b1a783608 <col:56>
|-FunctionDecl 0x561b1a7839b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x561b1a783678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x561b1a7836f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561b1a783770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x561b1a783868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x561b1a783a70 <col:54>
|-RecordDecl 0x561b1a783ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x561b1a783b78 parent 0x561b1a713f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x561b1a783dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x561b1a783e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x561b1a783ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x561b1a783f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x561b1a784038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x561b1a784158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x561b1a784100 'struct __locale_struct *'
|   `-ElaboratedType 0x561b1a784090 'struct __locale_struct' sugar
|     `-RecordType 0x561b1a783b50 'struct __locale_struct'
|       `-Record 0x561b1a783ac8 '__locale_struct'
|-TypedefDecl 0x561b1a784208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x561b1a7841d0 '__locale_t' sugar
|   |-Typedef 0x561b1a784158 '__locale_t'
|   `-PointerType 0x561b1a784100 'struct __locale_struct *'
|     `-ElaboratedType 0x561b1a784090 'struct __locale_struct' sugar
|       `-RecordType 0x561b1a783b50 'struct __locale_struct'
|         `-Record 0x561b1a783ac8 '__locale_struct'
|-FunctionDecl 0x561b1a784610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x561b1a784278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x561b1a7842f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561b1a784370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x561b1a784400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x561b1a784478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x561b1a7846d8 <col:40>
|-FunctionDecl 0x561b1a7848c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x561b1a7847a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x561b1a784970 <col:66>
|-FunctionDecl 0x561b1a784a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x561b1a7849d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x561b1a784b28 <col:69>
|-FunctionDecl 0x561b1a784d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x561b1a784b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561b1a784c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x561b1a784e08 <col:52>
|-FunctionDecl 0x561b1a784fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x561b1a784e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561b1a784f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x561b1a785060 <col:55>
|-FunctionDecl 0x561b1a7851f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x561b1a7850e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x561b1a7852a0 <col:62>
|-FunctionDecl 0x561b1a785418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x561b1a785308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x561b1a7854c0 <col:60>
|-FunctionDecl 0x561b1a785718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x561b1a785578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x561b1a7855f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x561b1a7857c8 <col:44>
|-FunctionDecl 0x561b1a7859d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x561b1a785830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561b1a7858b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x561b1a785a88 <col:49>
|-VarDecl 0x561b1a785b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x561b1a785c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x561b1a785c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x561b1a785d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x561b1a785e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x561b1a785f20 <col:42>
|-VarDecl 0x561b1a785f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x561b1a786010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x561b1a786198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x561b1a786088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x561b1a786240 <col:57>
|-FunctionDecl 0x561b1a786350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561b1a7862c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x561b1a7863f8 <col:56>
|-FunctionDecl 0x561b1a787540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561b1a786478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x561b1a7875e8 <col:59>
|-FunctionDecl 0x561b1a7876f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x561b1a787658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x561b1a787798 <col:48>
| `-ConstAttr 0x561b1a7877f0 <col:89>
|-FunctionDecl 0x561b1a787a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x561b1a7878a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x561b1a787938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x561b1a787cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561b1a787b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561b1a787bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x561b1a787d68 <col:88>
|-FunctionDecl 0x561b1a787f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561b1a787dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561b1a787e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x561b1a787fb0 <col:88>
|-FunctionDecl 0x561b1a7881c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x561b1a788018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561b1a7880a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x561b1a788278 <line:208:22>
|-FunctionDecl 0x561b1a7885e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x561b1a7882e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561b1a788360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x561b1a7883f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x561b1a788480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x561b1a7888e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x561b1a7886e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x561b1a7887c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x561b1a788998 <col:85>
|-FunctionDecl 0x561b1a788d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x561b1a788a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561b1a788b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x561b1a788c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x561b1a788e40 <col:52>
|-FunctionDecl 0x561b1a788fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x561b1a788ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x561b1a789060 <col:61>
|-FunctionDecl 0x561b1a789560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x561b1a7890c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x561b1a789148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x561b1a789278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x561b1a789368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x561b1a789620 <col:62>
|-FunctionDecl 0x561b1a789838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x561b1a789688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x561b1a789718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x561b1a7898e8 <line:221:22>
|-FunctionDecl 0x561b1a7899e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x561b1a789950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x561b1a789a90 <col:65>
|-TypedefDecl 0x561b1a789b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x561b1a714140 'unsigned long'
|-RecordDecl 0x561b1a789b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x561b1a789ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x561b1a789d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561b1a789db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x561b1a789d60 'union pthread_attr_t' sugar
|   `-RecordType 0x561b1a789be0 'union pthread_attr_t'
|     `-Record 0x561b1a789b58 'pthread_attr_t'
|-RecordDecl 0x561b1a789e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x561b1a789f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x561b1a78a000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x561b1a78a0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x561b1a78a050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x561b1a789e90 'struct __pthread_internal_list'
|     `-Record 0x561b1a789e10 '__pthread_internal_list'
|-RecordDecl 0x561b1a78a120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x561b1a78a1c8 parent 0x561b1a713f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x561b1a78a2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561b1a78a308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x561b1a78a370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x561b1a78a3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x561b1a78a440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x561b1a78a4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x561b1a78e580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x561b1a78e630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x561b1a78e720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x561b1a78e788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561b1a78e910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x561b1a78e8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x561b1a78a1a0 'pthread_mutex_t'
|     `-Record 0x561b1a78a120 ''
|-RecordDecl 0x561b1a78e980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x561b1a78eac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561b1a78eb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561b1a78ebe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x561b1a78eb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x561b1a78ea00 'pthread_mutexattr_t'
|     `-Record 0x561b1a78e980 ''
|-RecordDecl 0x561b1a78ec50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x561b1a78ecf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x561b1a78edc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561b1a78ee28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x561b1a78ee90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x561b1a78eef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x561b1a78ef60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x561b1a78efc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x561b1a78f030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x561b1a78f098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x561b1a78f150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix012_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix012_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x561b1a78f240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x561b1a78f2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x561b1a78f3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x561b1a78f380 'union pthread_cond_t' sugar
|   `-RecordType 0x561b1a78ecd0 'pthread_cond_t'
|     `-Record 0x561b1a78ec50 ''
|-RecordDecl 0x561b1a78f450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x561b1a78f590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561b1a78f5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561b1a78f6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x561b1a78f650 'union pthread_condattr_t' sugar
|   `-RecordType 0x561b1a78f4d0 'pthread_condattr_t'
|     `-Record 0x561b1a78f450 ''
|-TypedefDecl 0x561b1a78f738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x561b1a714120 'unsigned int'
|-TypedefDecl 0x561b1a78f7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x561b1a714080 'int'
|-RecordDecl 0x561b1a78f800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x561b1a78f8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x561b1a78f970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561b1a78f9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x561b1a78fa40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x561b1a78faa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x561b1a78fb10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x561b1a78fb78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x561b1a78fbe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x561b1a78fc48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x561b1a78fcb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x561b1a78fd18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x561b1a78fd80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x561b1a78fe30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix012_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix012_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x561b1a78fed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x561b1a78ff40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561b1a790090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x561b1a790030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x561b1a78f880 'pthread_rwlock_t'
|     `-Record 0x561b1a78f800 ''
|-RecordDecl 0x561b1a790100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x561b1a790240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x561b1a7902a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561b1a790360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x561b1a790300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x561b1a790180 'pthread_rwlockattr_t'
|     `-Record 0x561b1a790100 ''
|-TypedefDecl 0x561b1a7903e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x561b1a714084 'volatile int' volatile
|   `-BuiltinType 0x561b1a714080 'int'
|-RecordDecl 0x561b1a790440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x561b1a7925b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x561b1a792618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561b1a7926d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x561b1a792670 'union pthread_barrier_t' sugar
|   `-RecordType 0x561b1a7904c0 'pthread_barrier_t'
|     `-Record 0x561b1a790440 ''
|-RecordDecl 0x561b1a792740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x561b1a792840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561b1a7928a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561b1a792960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x561b1a792900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x561b1a7927c0 'pthread_barrierattr_t'
|     `-Record 0x561b1a792740 ''
|-TypedefDecl 0x561b1a792a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x561b1a792a10 'long [8]' 8 
|   `-BuiltinType 0x561b1a7140a0 'long'
|-EnumDecl 0x561b1a792ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x561b1a792b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x561b1a792be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x561b1a792c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x561b1a792d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x561b1a792d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x561b1a792da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x561b1a792df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x561b1a792e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x561b1a792e68 <col:26> 'int'
| |   `-DeclRefExpr 0x561b1a792e48 <col:26> 'int' EnumConstant 0x561b1a792d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x561b1a792f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x561b1a792ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x561b1a792ed0 <col:29> 'int' EnumConstant 0x561b1a792d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x561b1a792f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x561b1a792f78 <col:30> 'int'
| |   `-DeclRefExpr 0x561b1a792f58 <col:30> 'int' EnumConstant 0x561b1a792da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x561b1a793018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x561b1a793000 <col:27> 'int'
|     `-DeclRefExpr 0x561b1a792fe0 <col:27> 'int' EnumConstant 0x561b1a792e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x561b1a793068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x561b1a793138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x561b1a7931c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x561b1a7931a8 <col:30> 'int'
| |   `-DeclRefExpr 0x561b1a793188 <col:30> 'int' EnumConstant 0x561b1a793138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x561b1a793210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x561b1a793298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x561b1a793280 <col:29> 'int'
|     `-DeclRefExpr 0x561b1a793260 <col:29> 'int' EnumConstant 0x561b1a793210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x561b1a7932e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x561b1a7933b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x561b1a793408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x561b1a793458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x561b1a7934a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x561b1a7935c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x561b1a793610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x561b1a793660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x561b1a7936e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x561b1a7936d0 <col:31> 'int'
|     `-DeclRefExpr 0x561b1a7936b0 <col:31> 'int' EnumConstant 0x561b1a7935c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x561b1a793738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x561b1a793808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x561b1a793858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x561b1a7938a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x561b1a793978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x561b1a7939c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x561b1a793a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x561b1a793ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x561b1a793b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x561b1a793b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x561b1a793dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x561b1a793e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x561b1a793e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x561b1a793fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x561b1a794008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x561b1a7940d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x561b1a794128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x561b1a794178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x561b1a794248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x561b1a794298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x561b1a7948f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x561b1a794390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x561b1a7944a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b1a7946e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x561b1a794760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x561b1a7949b8 <col:47>
| |-NonNullAttr 0x561b1a794a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x561b1a794a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x561b1a794b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x561b1a794aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x561b1a794dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x561b1a794c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x561b1a794ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x561b1a794f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x561b1a794e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x561b1a795040 <col:60>
|-FunctionDecl 0x561b1a795190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x561b1a795230 <col:54>
| `-ConstAttr 0x561b1a795288 <col:95>
|-FunctionDecl 0x561b1a795458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x561b1a7952c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561b1a795338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x561b1a795508 <line:394:19>
| `-ConstAttr 0x561b1a795560 <col:60>
|-FunctionDecl 0x561b1a795f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x561b1a795e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x561b1a796010 <col:71>
| `-NonNullAttr 0x561b1a796068 <col:112, col:126> 1
|-FunctionDecl 0x561b1a796170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x561b1a7960b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x561b1a796218 <line:397:22>
| `-NonNullAttr 0x561b1a796270 <col:63, col:77> 1
|-FunctionDecl 0x561b1a796498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x561b1a7962b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x561b1a796338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x561b1a796548 <line:400:22>
| `-NonNullAttr 0x561b1a7965a0 <col:63, col:80> 1 2
|-FunctionDecl 0x561b1a7967a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561b1a7965e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561b1a796668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x561b1a796858 <line:403:22>
| `-NonNullAttr 0x561b1a7968b0 <col:63, col:77> 1
|-FunctionDecl 0x561b1a796b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x561b1a7968f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x561b1a7969a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x561b1a796bb8 <line:406:22>
| `-NonNullAttr 0x561b1a796c10 <col:63, col:80> 1 2
|-FunctionDecl 0x561b1a797e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x561b1a796c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561b1a796cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561b1a797ef8 <line:409:22>
| `-NonNullAttr 0x561b1a797f50 <col:63, col:77> 1
|-FunctionDecl 0x561b1a798188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561b1a797f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b1a798028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x561b1a798238 <line:412:22>
| `-NonNullAttr 0x561b1a798290 <col:63, col:80> 1 2
|-FunctionDecl 0x561b1a7984c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561b1a7982d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b1a798368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x561b1a798578 <col:37>
| `-NonNullAttr 0x561b1a7985d0 <col:78, col:95> 1 2
|-FunctionDecl 0x561b1a7987b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b1a798618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b1a798698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x561b1a798868 <line:418:22>
| `-NonNullAttr 0x561b1a7988c0 <col:63, col:80> 1 2
|-FunctionDecl 0x561b1a798a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561b1a798908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561b1a798988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x561b1a798af8 <line:420:22>
| `-NonNullAttr 0x561b1a798b50 <col:63, col:77> 1
|-FunctionDecl 0x561b1a798cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b1a798b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b1a798c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x561b1a798da8 <line:423:22>
| `-NonNullAttr 0x561b1a799e30 <col:63, col:80> 1 2
|-FunctionDecl 0x561b1a799fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561b1a799e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561b1a799ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x561b1a79a068 <line:426:22>
| `-NonNullAttr 0x561b1a79a0c0 <col:63, col:77> 1
|-FunctionDecl 0x561b1a79a268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b1a79a108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b1a79a188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x561b1a79a318 <line:429:22>
| `-NonNullAttr 0x561b1a79a370 <col:63, col:80> 1 2
|-FunctionDecl 0x561b1a79a4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561b1a79a3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561b1a79a438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x561b1a79a5a8 <line:431:22>
| `-NonNullAttr 0x561b1a79a600 <col:63, col:77> 1
|-FunctionDecl 0x561b1a79a828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x561b1a79a648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b1a79a6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x561b1a79a8d8 <line:434:22>
| |-NonNullAttr 0x561b1a79a930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x561b1a79a968 <col:100> "" ""
|-FunctionDecl 0x561b1a79ab78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x561b1a79a9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561b1a79aa38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x561b1a79ac28 <line:437:22>
| |-NonNullAttr 0x561b1a79ac80 <col:63, col:77> 1
| `-DeprecatedAttr 0x561b1a79acb8 <col:97> "" ""
|-FunctionDecl 0x561b1a79aeb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x561b1a79ad08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b1a79ad80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x561b1a79af68 <line:440:22>
| `-NonNullAttr 0x561b1a79afc0 <col:63, col:80> 1 2
|-FunctionDecl 0x561b1a79b140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x561b1a79b008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561b1a79b080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561b1a79b1f0 <line:443:22>
| `-NonNullAttr 0x561b1a79b248 <col:63, col:77> 1
|-FunctionDecl 0x561b1a79b538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x561b1a79b298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b1a79b318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x561b1a79b390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x561b1a79b5f0 <line:447:22>
| `-NonNullAttr 0x561b1a79b648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x561b1a79b8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x561b1a79b6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561b1a79b720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x561b1a79b798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561b1a79b9b0 <col:43>
| `-NonNullAttr 0x561b1a79ba08 <col:84, col:98> 1
|-FunctionDecl 0x561b1a79bcc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x561b1a79ba58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561b1a79bad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x561b1a79bb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x561b1a79bd80 <line:452:22>
| `-NonNullAttr 0x561b1a79bdd8 <col:63, col:77> 3
|-FunctionDecl 0x561b1a79c0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561b1a79be50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561b1a79bed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x561b1a79bf60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x561b1a79c1a0 <line:456:22>
| `-NonNullAttr 0x561b1a79c1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x561b1a79c3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x561b1a79c248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561b1a79c2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x561b1a79c498 <line:458:22>
|-FunctionDecl 0x561b1a79c868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x561b1a79c560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x561b1a79c700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x561b1a79c918 <col:52, col:69> 1 2
|-FunctionDecl 0x561b1a79cac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x561b1a79c9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x561b1a79ca20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x561b1a79cca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x561b1a79cb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x561b1a79cc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x561b1a79ce60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x561b1a79cd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x561b1a79cfa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x561b1a79d040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x561b1a79d0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x561b1a79d1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x561b1a79d240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x561b1a79d410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix012_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x561b1a79d508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x561b1a79d5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x561b1a79d560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x561b1a79d0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x561b1a79d040 ''
| `-AlignedAttr 0x561b1a79d618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x561b1a79d690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x561b1a79d7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x561b1a79d858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x561b1a79d8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x561b1a79d928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x561b1a79db30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x561b1a79da20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x561b1a79dc78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x561b1a79dbe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x561b1a79de70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561b1a79dd30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x561b1a79df18 <line:487:22>
|-RecordDecl 0x561b1a79df70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x561b1a79e288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x561b1a79e0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x561b1a79e168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x561b1a79e338 <col:86>
| `-ReturnsTwiceAttr 0x561b1a79e390 <col:12> Implicit
|-FunctionDecl 0x561b1a79e6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561b1a79e460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x561b1a79e570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x561b1a79e768 <line:493:22>
| `-NonNullAttr 0x561b1a79e7c0 <col:63, col:77> 1
|-FunctionDecl 0x561b1a79e938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561b1a79e808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561b1a79e9e0 <line:495:22>
| `-NonNullAttr 0x561b1a79ea38 <col:63, col:77> 1
|-FunctionDecl 0x561b1a79eb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561b1a79ea88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561b1a79ebe8 <line:497:22>
| `-NonNullAttr 0x561b1a79ec40 <col:52, col:66> 1
|-FunctionDecl 0x561b1a79ed40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561b1a79ec88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561b1a79ede8 <line:499:22>
| `-NonNullAttr 0x561b1a79ee40 <col:52, col:66> 1
|-FunctionDecl 0x561b1a79f088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561b1a79ee98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561b1a79ef28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561b1a79f138 <col:36>
| `-NonNullAttr 0x561b1a79f190 <col:66, col:83> 1 2
|-FunctionDecl 0x561b1a79f290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561b1a79f1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561b1a79f338 <line:504:22>
| `-NonNullAttr 0x561b1a79f390 <col:52, col:66> 1
|-FunctionDecl 0x561b1a79f628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b1a79f440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561b1a79f4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x561b1a79f6d8 <line:508:22>
| `-NonNullAttr 0x561b1a79f730 <col:63, col:80> 1 2
|-FunctionDecl 0x561b1a79f9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x561b1a79f778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561b1a79f7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x561b1a79f878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x561b1a79fab0 <line:512:22>
| `-NonNullAttr 0x561b1a79fb08 <col:63, col:80> 1 3
|-FunctionDecl 0x561b1a79fc10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561b1a79fb58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561b1a79fcb8 <line:514:22>
| `-NonNullAttr 0x561b1a79fd10 <col:63, col:77> 1
|-FunctionDecl 0x561b1a79ff38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561b1a79fdc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x561b1a79ffe0 <line:516:22>
| `-NonNullAttr 0x561b1a7a0038 <col:63, col:77> 1
|-FunctionDecl 0x561b1a7a0140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561b1a7a0088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x561b1a7a01e8 <line:518:22>
| `-NonNullAttr 0x561b1a7a0240 <col:63, col:77> 1
|-FunctionDecl 0x561b1a7a0468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b1a7a0288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561b1a7a0308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x561b1a7a0518 <line:522:22>
| `-NonNullAttr 0x561b1a7a0570 <col:63, col:80> 1 2
|-FunctionDecl 0x561b1a7a0778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561b1a7a05b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561b1a7a0638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x561b1a7a0828 <line:525:22>
| `-NonNullAttr 0x561b1a7a0880 <col:63, col:77> 1
|-FunctionDecl 0x561b1a7a0a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b1a7a08c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561b1a7a0948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x561b1a7a0ad8 <line:528:22>
| `-NonNullAttr 0x561b1a7a0b30 <col:63, col:80> 1 2
|-FunctionDecl 0x561b1a7a0cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561b1a7a0b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561b1a7a0bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x561b1a7a0d68 <line:530:22>
| `-NonNullAttr 0x561b1a7a0dc0 <col:63, col:77> 1
|-FunctionDecl 0x561b1a7a1f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b1a7a0e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561b1a7a1eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x561b1a7a2040 <line:534:22>
| `-NonNullAttr 0x561b1a7a2098 <col:63, col:80> 1 2
|-FunctionDecl 0x561b1a7a2228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561b1a7a20e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561b1a7a2168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x561b1a7a22d8 <line:537:22>
| `-NonNullAttr 0x561b1a7a2330 <col:63, col:77> 1
|-FunctionDecl 0x561b1a7a24d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b1a7a2378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561b1a7a23f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x561b1a7a2588 <line:541:22>
| `-NonNullAttr 0x561b1a7a25e0 <col:63, col:80> 1 2
|-FunctionDecl 0x561b1a7a2768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561b1a7a2628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561b1a7a26a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x561b1a7a2818 <line:544:22>
| `-NonNullAttr 0x561b1a7a2870 <col:63, col:77> 1
|-FunctionDecl 0x561b1a7a2a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x561b1a7a28b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x561b1a7a2938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x561b1a7a2b08 <line:547:22>
| `-NonNullAttr 0x561b1a7a2b60 <col:63, col:80> 1 2
|-FunctionDecl 0x561b1a7a2ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561b1a7a2ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561b1a7a2c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x561b1a7a2d98 <line:550:22>
| `-NonNullAttr 0x561b1a7a2df0 <col:63, col:77> 1
|-FunctionDecl 0x561b1a7a4168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x561b1a7a3f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561b1a7a4020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x561b1a7a4218 <col:29>
| `-NonNullAttr 0x561b1a7a4270 <col:70, col:84> 1
|-FunctionDecl 0x561b1a7a43e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561b1a7a42b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561b1a7a4490 <line:555:22>
| `-NonNullAttr 0x561b1a7a44e8 <col:63, col:77> 1
|-FunctionDecl 0x561b1a7a45f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561b1a7a4538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561b1a7a4698 <line:557:22>
| `-NonNullAttr 0x561b1a7a46f0 <col:52, col:66> 1
|-FunctionDecl 0x561b1a7a47f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561b1a7a4738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561b1a7a4898 <line:559:19>
| `-NonNullAttr 0x561b1a7a48f0 <col:49, col:63> 1
|-FunctionDecl 0x561b1a7a4b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561b1a7a4938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561b1a7a49c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561b1a7a4bd8 <col:39>
| `-NonNullAttr 0x561b1a7a4c30 <col:69, col:86> 1 2
|-FunctionDecl 0x561b1a7a4d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561b1a7a4c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561b1a7a4dd8 <line:564:22>
| `-NonNullAttr 0x561b1a7a4e30 <col:52, col:66> 1
|-FunctionDecl 0x561b1a7a4f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561b1a7a4ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561b1a7a5040 <line:566:22>
| `-NonNullAttr 0x561b1a7a5098 <col:52, col:66> 1
|-FunctionDecl 0x561b1a7a5258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561b1a7a50e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561b1a7a5178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561b1a7a5308 <col:39>
| `-NonNullAttr 0x561b1a7a5360 <col:69, col:86> 1 2
|-FunctionDecl 0x561b1a7a5460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561b1a7a53a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561b1a7a5508 <line:571:22>
| `-NonNullAttr 0x561b1a7a5560 <col:52, col:66> 1
|-FunctionDecl 0x561b1a7a5748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x561b1a7a5610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x561b1a7a57f0 <line:573:22>
| `-NonNullAttr 0x561b1a7a5848 <col:63, col:77> 1
|-FunctionDecl 0x561b1a7a5950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x561b1a7a5898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x561b1a7a59f8 <line:575:22>
| `-NonNullAttr 0x561b1a7a5a50 <col:63, col:77> 1
|-FunctionDecl 0x561b1a7a5c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b1a7a5a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x561b1a7a5b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x561b1a7a5d28 <line:579:22>
| `-NonNullAttr 0x561b1a7a5d80 <col:63, col:80> 1 2
|-FunctionDecl 0x561b1a7a5fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x561b1a7a5dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x561b1a7a5e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x561b1a7a6058 <line:582:22>
| `-NonNullAttr 0x561b1a7a60b0 <col:63, col:77> 1
|-FunctionDecl 0x561b1a7a6258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b1a7a60f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x561b1a7a6178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x561b1a7a6308 <line:586:22>
| `-NonNullAttr 0x561b1a7a6360 <col:63, col:80> 1 2
|-FunctionDecl 0x561b1a7a64e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x561b1a7a63a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x561b1a7a6428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x561b1a7a6598 <col:36>
| `-NonNullAttr 0x561b1a7a65f0 <col:77, col:91> 1
|-FunctionDecl 0x561b1a7a6928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x561b1a7a66d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561b1a7a67e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x561b1a7a69d8 <line:591:22>
| `-NonNullAttr 0x561b1a7a6a30 <col:63, col:77> 1
|-FunctionDecl 0x561b1a7a6ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561b1a7a6a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561b1a7a6c50 <line:593:22>
| `-NonNullAttr 0x561b1a7a6ca8 <col:63, col:77> 1
|-FunctionDecl 0x561b1a7a6db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561b1a7a6cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561b1a7a6e58 <line:595:22>
| `-NonNullAttr 0x561b1a7a6eb0 <col:52, col:66> 1
|-FunctionDecl 0x561b1a7a6fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561b1a7a6f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561b1a7a7070 <line:597:22>
| `-NonNullAttr 0x561b1a7a70c8 <col:52, col:66> 1
|-FunctionDecl 0x561b1a7a72f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x561b1a7a7118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561b1a7a7190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x561b1a7a73a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x561b1a7a76d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561b1a7a7428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561b1a7a74a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561b1a7a7530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x561b1a7a7790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x561b1a7a79a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x561b1a7a7870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x561b1a7a7a50 <line:606:22>
| `-NonNullAttr 0x561b1a7a7aa8 <col:63, col:77> 1
|-FunctionDecl 0x561b1a7a7bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x561b1a7a7af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x561b1a7a7c58 <line:608:22>
| `-NonNullAttr 0x561b1a7a7cb0 <col:63, col:77> 1
|-FunctionDecl 0x561b1a7a7f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b1a7a7cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x561b1a7a7d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x561b1a7a7fc0 <line:612:22>
| `-NonNullAttr 0x561b1a7a8018 <col:63, col:80> 1 2
|-FunctionDecl 0x561b1a7a8228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x561b1a7a8068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x561b1a7a80e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x561b1a7a82d8 <col:37>
| `-NonNullAttr 0x561b1a7a8330 <col:78, col:92> 1
|-FunctionDecl 0x561b1a7a8548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x561b1a7a8378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x561b1a7a8420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x561b1a7a85f8 <line:618:22>
| `-NonNullAttr 0x561b1a7a8650 <col:63, col:80> 1 2
|-FunctionDecl 0x561b1a7a8818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x561b1a7a8698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x561b1a7a8710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x561b1a7a88c8 <line:621:22>
| `-NonNullAttr 0x561b1a7a8920 <col:63, col:77> 1
|-FunctionDecl 0x561b1a7a8bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x561b1a7a8a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x561b1a7a8a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x561b1a7a8c78 <line:623:22>
| `-NonNullAttr 0x561b1a7a8cd0 <col:63, col:77> 1
|-FunctionDecl 0x561b1a7a8e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561b1a7a8d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561b1a7a8f20 <line:625:22>
| `-NonNullAttr 0x561b1a7a8f78 <col:63, col:77> 1
|-FunctionDecl 0x561b1a7a9080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561b1a7a8fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561b1a7a9128 <line:627:22>
| `-NonNullAttr 0x561b1a7a9180 <col:52, col:66> 1
|-FunctionDecl 0x561b1a7a9280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561b1a7a91c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561b1a7a9328 <line:629:22>
| `-NonNullAttr 0x561b1a7a9380 <col:52, col:66> 1
|-FunctionDecl 0x561b1a7a9480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561b1a7a93c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561b1a7a9528 <line:631:22>
| `-NonNullAttr 0x561b1a7a9580 <col:52, col:66> 1
|-FunctionDecl 0x561b1a7a9958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x561b1a7a9660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x561b1a7a9770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x561b1a7a97f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x561b1a7a9a10 <line:635:22>
| `-NonNullAttr 0x561b1a7a9a68 <col:63, col:77> 1
|-FunctionDecl 0x561b1a7a9be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x561b1a7a9ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x561b1a7a9c90 <line:637:22>
| `-NonNullAttr 0x561b1a7a9ce8 <col:63, col:77> 1
|-FunctionDecl 0x561b1a7a9df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x561b1a7a9d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x561b1a7a9e98 <line:639:22>
| `-NonNullAttr 0x561b1a7a9ef0 <col:52, col:66> 1
|-FunctionDecl 0x561b1a7aa0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x561b1a7a9fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x561b1a7aa190 <line:641:22>
| `-NonNullAttr 0x561b1a7aa1e8 <col:63, col:77> 1
|-FunctionDecl 0x561b1a7aa2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x561b1a7aa238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x561b1a7aa398 <line:643:22>
| `-NonNullAttr 0x561b1a7aa3f0 <col:63, col:77> 1
|-FunctionDecl 0x561b1a7aa618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b1a7aa438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x561b1a7aa4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x561b1a7aa6c8 <line:647:22>
| `-NonNullAttr 0x561b1a7aa720 <col:63, col:80> 1 2
|-FunctionDecl 0x561b1a7aa928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x561b1a7aa768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x561b1a7aa7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x561b1a7aa9d8 <line:650:22>
| `-NonNullAttr 0x561b1a7aaa30 <col:63, col:77> 1
|-FunctionDecl 0x561b1a7aad78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x561b1a7aab10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x561b1a7aac30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x561b1a7aae28 <line:653:22>
| `-NonNullAttr 0x561b1a7aae80 <col:63, col:77> 1
|-FunctionDecl 0x561b1a7aafe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x561b1a7aaec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x561b1a7ab090 <col:69>
|-FunctionDecl 0x561b1a7ab208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x561b1a7ab0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x561b1a7ab2b0 <col:72>
|-FunctionDecl 0x561b1a7ab4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x561b1a7ab318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x561b1a7ab3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x561b1a7ab598 <col:44>
|-FunctionDecl 0x561b1a7ab7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x561b1a7ab600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561b1a7ab678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x561b1a7ab868 <line:660:22>
| `-NonNullAttr 0x561b1a7ab8c0 <col:63, col:77> 2
|-FunctionDecl 0x561b1a7abd08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x561b1a7ab9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x561b1a7abab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x561b1a7abbc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x561b1a7abdc0 <col:47>
|-FunctionDecl 0x561b1a7acf60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x561b1a7abe30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561b1a7ad0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x561b1a7ad020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561b1a7ad180 <line:667:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x561b1a7ad240 <line:668:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x561b1a7ad300 <line:669:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x561b1a7ad3b8 <line:670:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x561b1a7ad438 prev 0x561b1a7ad3b8 <line:671:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x561b1a7ad4a0 <col:24> 'int' 0
|-VarDecl 0x561b1a7ad4d8 <line:672:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x561b1a7ad558 prev 0x561b1a7ad4d8 <line:673:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x561b1a7ad5c0 <col:27> 'int' 0
|-VarDecl 0x561b1a7ad5f8 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x561b1a7ad678 prev 0x561b1a7ad5f8 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x561b1a7ad6e0 <col:27> 'int' 0
|-VarDecl 0x561b1a7ad718 <line:676:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x561b1a7ad798 prev 0x561b1a7ad718 <line:677:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x561b1a7ad800 <col:27> 'int' 0
|-VarDecl 0x561b1a7ad830 <line:678:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x561b1a7ad8a8 <line:679:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x561b1a7ad928 <line:680:1, col:5> col:5 used x 'int'
|-VarDecl 0x561b1a7ad9a8 prev 0x561b1a7ad928 <line:681:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x561b1a7ada10 <col:9> 'int' 0
|-VarDecl 0x561b1a7ada48 <line:682:1, col:5> col:5 used y 'int'
|-VarDecl 0x561b1a7adac8 prev 0x561b1a7ada48 <line:683:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x561b1a7adb30 <col:9> 'int' 0
|-VarDecl 0x561b1a7adb60 <line:684:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x561b1a7adbe0 <line:685:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x561b1a7adc58 <line:686:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x561b1a7adcd0 <line:687:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x561b1a7add48 <line:688:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x561b1a7addc0 <line:689:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x561b1a7ade38 <line:690:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x561b1a7adeb0 <line:691:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x561b1a7adf70 <line:692:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x561b1a7adff0 <line:693:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x561b1a7ae070 <line:694:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x561b1a7ae0e8 <line:695:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x561b1a7ae168 <line:696:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x561b1a7ae1e0 <line:697:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x561b1a7ae258 <line:698:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x561b1a7ae2d0 <line:699:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x561b1a7ae3e8 prev 0x561b1a7acf60 <line:700:1, line:727:1> line:700:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x561b1a7ae350 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561b1a7afb98 <line:701:1, line:727:1>
|   |-CallExpr 0x561b1a7ae4f8 <line:702:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b1a7ae4e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b1a7ae490 <col:3> 'void ()' Function 0x561b1a754350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b1a7ae570 <line:703:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561b1a7ae518 <col:3> 'int' lvalue Var 0x561b1a7ae168 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x561b1a7ae558 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b1a7ae538 <col:15> 'int' lvalue Var 0x561b1a7ae070 'y$w_buff0' 'int'
|   |-BinaryOperator 0x561b1a7ae5d0 <line:704:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561b1a7ae590 <col:3> 'int' lvalue Var 0x561b1a7ae070 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x561b1a7ae5b0 <col:15> 'int' 1
|   |-BinaryOperator 0x561b1a7ae648 <line:705:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561b1a7ae5f0 <col:3> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561b1a7ae630 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b1a7ae610 <col:20> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561b1a7ae6e0 <line:706:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x561b1a7ae668 <col:3> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x561b1a7ae6b8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561b1a7ae688 <col:27> 'int' 1
|   |-CallExpr 0x561b1a7ae868 <line:707:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x561b1a7ae850 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x561b1a7ae700 <col:3> 'void (int)' Function 0x561b1a7540d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x561b1a7ae800 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x561b1a7ae7e0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x561b1a7ae7c0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x561b1a7ae778 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x561b1a7ae760 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x561b1a7ae720 <col:23> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x561b1a7ae7a8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x561b1a7ae790 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x561b1a7ae740 <col:41> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561b1a7ae8e8 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561b1a7ae890 <col:3> '_Bool' lvalue Var 0x561b1a7addc0 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x561b1a7ae8d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b1a7ae8b0 <col:20> '_Bool' lvalue Var 0x561b1a7adc58 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x561b1a7ae960 <line:709:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561b1a7ae908 <col:3> '_Bool' lvalue Var 0x561b1a7ade38 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561b1a7ae948 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b1a7ae928 <col:20> '_Bool' lvalue Var 0x561b1a7adcd0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x561b1a7ae9d8 <line:710:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561b1a7ae980 <col:3> '_Bool' lvalue Var 0x561b1a7adeb0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561b1a7ae9c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b1a7ae9a0 <col:20> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x561b1a7aea70 <line:711:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x561b1a7ae9f8 <col:3> '_Bool' lvalue Var 0x561b1a7adcd0 'y$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x561b1a7aea48 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561b1a7aea18 <col:27> 'int' 1
|   |-CallExpr 0x561b1a7aeac8 <line:712:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b1a7aeab0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b1a7aea90 <col:3> 'void ()' Function 0x561b1a754410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b1a7aeb20 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b1a7aeb08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b1a7aeae8 <col:3> 'void ()' Function 0x561b1a754350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b1a7aeb98 <line:714:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561b1a7aeb40 <col:3> 'int' lvalue Var 0x561b1a7ad558 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x561b1a7aeb80 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b1a7aeb60 <col:25> 'int' lvalue Var 0x561b1a7ad9a8 'x' 'int'
|   |-CallExpr 0x561b1a7aebf0 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b1a7aebd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b1a7aebb8 <col:3> 'void ()' Function 0x561b1a754410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b1a7aec48 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b1a7aec30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b1a7aec10 <col:3> 'void ()' Function 0x561b1a754350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b1a7aef30 <line:717:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561b1a7aec68 <col:3> 'int' lvalue Var 0x561b1a7adac8 'y' 'int'
|   | `-ConditionalOperator 0x561b1a7aef00 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561b1a7aed28 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561b1a7aece0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561b1a7aecc8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561b1a7aec88 <col:7> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561b1a7aed10 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561b1a7aecf8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561b1a7aeca8 <col:25> '_Bool' lvalue Var 0x561b1a7adcd0 'y$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x561b1a7aeee8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561b1a7aed48 <col:42> 'int' lvalue Var 0x561b1a7ae070 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x561b1a7aeec8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561b1a7aee98 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561b1a7aee08 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561b1a7aedc0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561b1a7aeda8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561b1a7aed68 <col:55> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561b1a7aedf0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561b1a7aedd8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561b1a7aed88 <col:73> '_Bool' lvalue Var 0x561b1a7ade38 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x561b1a7aee68 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561b1a7aee28 <col:90> 'int' lvalue Var 0x561b1a7ae168 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561b1a7aee80 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b1a7aee48 <col:102> 'int' lvalue Var 0x561b1a7adac8 'y' 'int'
|   |-BinaryOperator 0x561b1a7af148 <line:718:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561b1a7aef50 <col:3> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561b1a7af130 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b1a7af100 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561b1a7af020 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561b1a7aefd8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561b1a7aefc0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561b1a7aef80 <col:20> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561b1a7af008 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561b1a7aeff0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561b1a7aefa0 <col:38> '_Bool' lvalue Var 0x561b1a7adcd0 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561b1a7af0b8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b1a7af070 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b1a7af040 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561b1a7af0e8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b1a7af0d0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b1a7af098 <col:66> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561b1a7af430 <line:719:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561b1a7af168 <col:3> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561b1a7af418 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b1a7af3e8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561b1a7af308 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561b1a7af228 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561b1a7af1e0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561b1a7af1c8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561b1a7af188 <col:20> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561b1a7af210 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561b1a7af1f8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561b1a7af1a8 <col:38> '_Bool' lvalue Var 0x561b1a7adcd0 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x561b1a7af2e8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561b1a7af2a0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561b1a7af288 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561b1a7af248 <col:56> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561b1a7af2d0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561b1a7af2b8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561b1a7af268 <col:74> '_Bool' lvalue Var 0x561b1a7ade38 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561b1a7af3a0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b1a7af358 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b1a7af328 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561b1a7af3d0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b1a7af3b8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b1a7af380 <col:102> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561b1a7af638 <line:720:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561b1a7af450 <col:3> '_Bool' lvalue Var 0x561b1a7adcd0 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561b1a7af620 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b1a7af5f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561b1a7af510 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561b1a7af4c8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561b1a7af4b0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561b1a7af470 <col:20> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561b1a7af4f8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561b1a7af4e0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561b1a7af490 <col:38> '_Bool' lvalue Var 0x561b1a7adcd0 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561b1a7af5a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b1a7af560 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b1a7af530 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561b1a7af5d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b1a7af5c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b1a7af588 <col:66> '_Bool' lvalue Var 0x561b1a7adcd0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x561b1a7af920 <line:721:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561b1a7af658 <col:3> '_Bool' lvalue Var 0x561b1a7ade38 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561b1a7af908 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b1a7af8d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561b1a7af7f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561b1a7af718 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561b1a7af6d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561b1a7af6b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561b1a7af678 <col:20> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561b1a7af700 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561b1a7af6e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561b1a7af698 <col:38> '_Bool' lvalue Var 0x561b1a7adcd0 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x561b1a7af7d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561b1a7af790 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561b1a7af778 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561b1a7af738 <col:56> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561b1a7af7c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561b1a7af7a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561b1a7af758 <col:74> '_Bool' lvalue Var 0x561b1a7ade38 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561b1a7af890 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b1a7af848 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b1a7af818 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561b1a7af8c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b1a7af8a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b1a7af870 <col:102> '_Bool' lvalue Var 0x561b1a7ade38 'y$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x561b1a7af978 <line:722:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b1a7af960 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b1a7af940 <col:3> 'void ()' Function 0x561b1a754410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b1a7af9d0 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b1a7af9b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b1a7af998 <col:3> 'void ()' Function 0x561b1a754350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b1a7afa88 <line:724:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561b1a7af9f0 <col:3> 'int' lvalue Var 0x561b1a7ad438 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561b1a7afa68 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561b1a7afa50 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561b1a7afa10 <col:22> 'int' lvalue Var 0x561b1a7ad438 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561b1a7afa30 <col:41> 'int' 1
|   |-CallExpr 0x561b1a7afae0 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b1a7afac8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b1a7afaa8 <col:3> 'void ()' Function 0x561b1a754410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561b1a7afb88 <line:726:3, col:36>
|     `-CallExpr 0x561b1a7afb68 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561b1a7afb50 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561b1a7afb00 <col:10> 'void *(void)' Function 0x561b1a753e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561b1a7afd20 prev 0x561b1a7ad0b8 <line:728:1, line:763:1> line:728:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x561b1a7afc88 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561b1a7b3a28 <line:729:1, line:763:1>
|   |-CallExpr 0x561b1a7afe00 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b1a7afde8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b1a7afdc8 <col:3> 'void ()' Function 0x561b1a754350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b1a7afe60 <line:731:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561b1a7afe20 <col:3> 'int' lvalue Var 0x561b1a7ad9a8 'x' 'int'
|   | `-IntegerLiteral 0x561b1a7afe40 <col:7> 'int' 1
|   |-CallExpr 0x561b1a7afeb8 <line:732:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b1a7afea0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b1a7afe80 <col:3> 'void ()' Function 0x561b1a754410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b1a7aff10 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b1a7afef8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b1a7afed8 <col:3> 'void ()' Function 0x561b1a754350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b1a7affa8 <line:734:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561b1a7aff30 <col:3> 'int' lvalue Var 0x561b1a7ad678 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x561b1a7aff90 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b1a7aff50 <col:25> 'int' lvalue Var 0x561b1a7ad9a8 'x' 'int'
|   |-CallExpr 0x561b1a7b0000 <line:735:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b1a7affe8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b1a7affc8 <col:3> 'void ()' Function 0x561b1a754410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b1a7b0058 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b1a7b0040 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b1a7b0020 <col:3> 'void ()' Function 0x561b1a754350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b1a7b0108 <line:737:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x561b1a7b0078 <col:3> '_Bool' lvalue Var 0x561b1a7ae258 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x561b1a7b00f0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x561b1a7b00d0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x561b1a7b00b8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x561b1a7b0098 <col:19> 'void *(void)' Function 0x561b1a753e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x561b1a7b01b8 <line:738:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x561b1a7b0128 <col:3> '_Bool' lvalue Var 0x561b1a7ae2d0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x561b1a7b01a0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x561b1a7b0180 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x561b1a7b0168 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x561b1a7b0148 <col:19> 'void *(void)' Function 0x561b1a753e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x561b1a7b0230 <line:739:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x561b1a7b01d8 <col:3> '_Bool' lvalue Var 0x561b1a7adb60 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x561b1a7b0218 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b1a7b01f8 <col:21> '_Bool' lvalue Var 0x561b1a7ae2d0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x561b1a7b02a8 <line:740:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561b1a7b0250 <col:3> 'int' lvalue Var 0x561b1a7adbe0 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x561b1a7b0290 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b1a7b0270 <col:15> 'int' lvalue Var 0x561b1a7adac8 'y' 'int'
|   |-BinaryOperator 0x561b1a7b06e0 <line:741:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x561b1a7b02c8 <col:3> 'int' lvalue Var 0x561b1a7adac8 'y' 'int'
|   | `-ConditionalOperator 0x561b1a7b06b0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x561b1a7b04d8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x561b1a7b03f8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x561b1a7b0320 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x561b1a7b0308 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x561b1a7b02e8 <col:8> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x561b1a7b03d8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x561b1a7b0370 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x561b1a7b0358 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x561b1a7b0338 <col:27> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x561b1a7b03c0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x561b1a7b03a8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x561b1a7b0388 <col:46> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x561b1a7b04b8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x561b1a7b0450 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x561b1a7b0438 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x561b1a7b0418 <col:65> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x561b1a7b04a0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x561b1a7b0488 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x561b1a7b0468 <col:84> '_Bool' lvalue Var 0x561b1a7adeb0 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x561b1a7b0698 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561b1a7b04f8 <col:101> 'int' lvalue Var 0x561b1a7adac8 'y' 'int'
|   |   `-ParenExpr 0x561b1a7b0678 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x561b1a7b0648 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x561b1a7b05b8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561b1a7b0570 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561b1a7b0558 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561b1a7b0518 <col:106> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561b1a7b05a0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561b1a7b0588 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561b1a7b0538 <col:124> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x561b1a7b0618 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561b1a7b05d8 <col:141> 'int' lvalue Var 0x561b1a7ae070 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x561b1a7b0630 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b1a7b05f8 <col:153> 'int' lvalue Var 0x561b1a7ae168 'y$w_buff1' 'int'
|   |-BinaryOperator 0x561b1a7b0bf0 <line:742:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x561b1a7b0700 <col:3> 'int' lvalue Var 0x561b1a7ae070 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x561b1a7b0bc0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x561b1a7b0b90 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561b1a7b0b78 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561b1a7b0720 <col:15> '_Bool' lvalue Var 0x561b1a7ae2d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x561b1a7b0ba8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561b1a7b0740 <col:31> 'int' lvalue Var 0x561b1a7ae070 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x561b1a7b0b58 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x561b1a7b0b28 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x561b1a7b0950 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x561b1a7b0870 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x561b1a7b0798 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x561b1a7b0780 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x561b1a7b0760 <col:45> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x561b1a7b0850 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x561b1a7b07e8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x561b1a7b07d0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x561b1a7b07b0 <col:64> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x561b1a7b0838 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x561b1a7b0820 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x561b1a7b0800 <col:83> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x561b1a7b0930 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x561b1a7b08c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x561b1a7b08b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x561b1a7b0890 <col:102> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x561b1a7b0918 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x561b1a7b0900 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x561b1a7b08e0 <col:121> '_Bool' lvalue Var 0x561b1a7adeb0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x561b1a7b0b10 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561b1a7b0970 <col:138> 'int' lvalue Var 0x561b1a7ae070 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x561b1a7b0af0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x561b1a7b0ac0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x561b1a7b0a30 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x561b1a7b09e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x561b1a7b09d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x561b1a7b0990 <col:151> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x561b1a7b0a18 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x561b1a7b0a00 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x561b1a7b09b0 <col:169> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x561b1a7b0a90 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x561b1a7b0a50 <col:186> 'int' lvalue Var 0x561b1a7ae070 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x561b1a7b0aa8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x561b1a7b0a70 <col:198> 'int' lvalue Var 0x561b1a7ae070 'y$w_buff0' 'int'
|   |-BinaryOperator 0x561b1a7b1120 <line:743:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x561b1a7b0c10 <col:3> 'int' lvalue Var 0x561b1a7ae168 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x561b1a7b10f0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x561b1a7b10c0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561b1a7b10a8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561b1a7b0c30 <col:15> '_Bool' lvalue Var 0x561b1a7ae2d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x561b1a7b10d8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561b1a7b0c50 <col:31> 'int' lvalue Var 0x561b1a7ae168 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x561b1a7b1088 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x561b1a7b1058 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x561b1a7b0e60 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x561b1a7b0d80 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x561b1a7b0ca8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x561b1a7b0c90 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x561b1a7b0c70 <col:45> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x561b1a7b0d60 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x561b1a7b0cf8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x561b1a7b0ce0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x561b1a7b0cc0 <col:64> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x561b1a7b0d48 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x561b1a7b0d30 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x561b1a7b0d10 <col:83> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x561b1a7b0e40 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x561b1a7b0dd8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x561b1a7b0dc0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x561b1a7b0da0 <col:102> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x561b1a7b0e28 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x561b1a7b0e10 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x561b1a7b0df0 <col:121> '_Bool' lvalue Var 0x561b1a7adeb0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x561b1a7b1040 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561b1a7b0e80 <col:138> 'int' lvalue Var 0x561b1a7ae168 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x561b1a7b1020 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x561b1a7b0ff0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x561b1a7b0f40 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x561b1a7b0ef8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x561b1a7b0ee0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x561b1a7b0ea0 <col:151> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x561b1a7b0f28 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x561b1a7b0f10 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x561b1a7b0ec0 <col:169> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x561b1a7b0fc0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x561b1a7b0f60 <col:186> 'int' lvalue Var 0x561b1a7ae168 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x561b1a7b0fd8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x561b1a7b0fa0 <col:198> 'int' lvalue Var 0x561b1a7ae168 'y$w_buff1' 'int'
|   |-BinaryOperator 0x561b1a7b16c8 <line:744:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x561b1a7b1140 <col:3> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561b1a7b16b0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b1a7b1680 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x561b1a7b1638 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561b1a7b1620 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561b1a7b1160 <col:20> '_Bool' lvalue Var 0x561b1a7ae2d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561b1a7b1668 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561b1a7b1650 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561b1a7b1180 <col:36> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x561b1a7b1600 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x561b1a7b15d0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x561b1a7b1390 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561b1a7b12b0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561b1a7b11d8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561b1a7b11c0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561b1a7b11a0 <col:55> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561b1a7b1290 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561b1a7b1228 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561b1a7b1210 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561b1a7b11f0 <col:74> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x561b1a7b1278 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561b1a7b1260 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561b1a7b1240 <col:93> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561b1a7b1370 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561b1a7b1308 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561b1a7b12f0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561b1a7b12d0 <col:112> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x561b1a7b1358 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561b1a7b1340 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561b1a7b1320 <col:131> '_Bool' lvalue Var 0x561b1a7adeb0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x561b1a7b15b8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561b1a7b15a0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561b1a7b13b0 <col:148> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x561b1a7b1580 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x561b1a7b1550 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x561b1a7b1470 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561b1a7b1428 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561b1a7b1410 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561b1a7b13d0 <col:166> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561b1a7b1458 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561b1a7b1440 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561b1a7b13f0 <col:184> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x561b1a7b1508 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561b1a7b14c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561b1a7b1490 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561b1a7b1538 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x561b1a7b1520 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x561b1a7b14e8 <col:212> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561b1a7b1c90 <line:745:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x561b1a7b16e8 <col:3> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561b1a7b1c78 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b1a7b1c48 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x561b1a7b1c00 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561b1a7b1be8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561b1a7b1708 <col:20> '_Bool' lvalue Var 0x561b1a7ae2d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561b1a7b1c30 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561b1a7b1c18 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561b1a7b1728 <col:36> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x561b1a7b1bc8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x561b1a7b1b98 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x561b1a7b1938 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561b1a7b1858 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561b1a7b1780 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561b1a7b1768 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561b1a7b1748 <col:55> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561b1a7b1838 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561b1a7b17d0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561b1a7b17b8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561b1a7b1798 <col:74> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x561b1a7b1820 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561b1a7b1808 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561b1a7b17e8 <col:93> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561b1a7b1918 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561b1a7b18b0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561b1a7b1898 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561b1a7b1878 <col:112> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x561b1a7b1900 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561b1a7b18e8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561b1a7b18c8 <col:131> '_Bool' lvalue Var 0x561b1a7adeb0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x561b1a7b1b80 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561b1a7b1b68 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561b1a7b1958 <col:148> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x561b1a7b1b48 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x561b1a7b1b18 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x561b1a7b1a18 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561b1a7b19d0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561b1a7b19b8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561b1a7b1978 <col:166> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561b1a7b1a00 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561b1a7b19e8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561b1a7b1998 <col:184> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x561b1a7b1ae8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561b1a7b1a68 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561b1a7b1a38 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561b1a7b1b00 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x561b1a7b1ac0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x561b1a7b1a90 <col:219> 'int' 0
|   |-BinaryOperator 0x561b1a7b2250 <line:746:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x561b1a7b1cb0 <col:3> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561b1a7b2238 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b1a7b2208 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x561b1a7b21c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561b1a7b21a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561b1a7b1cd0 <col:20> '_Bool' lvalue Var 0x561b1a7ae2d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561b1a7b21f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561b1a7b21d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561b1a7b1cf0 <col:36> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x561b1a7b2188 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x561b1a7b2158 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x561b1a7b1f00 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561b1a7b1e20 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561b1a7b1d48 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561b1a7b1d30 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561b1a7b1d10 <col:55> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561b1a7b1e00 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561b1a7b1d98 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561b1a7b1d80 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561b1a7b1d60 <col:74> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x561b1a7b1de8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561b1a7b1dd0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561b1a7b1db0 <col:93> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561b1a7b1ee0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561b1a7b1e78 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561b1a7b1e60 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561b1a7b1e40 <col:112> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x561b1a7b1ec8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561b1a7b1eb0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561b1a7b1e90 <col:131> '_Bool' lvalue Var 0x561b1a7adeb0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x561b1a7b2140 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561b1a7b2128 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561b1a7b1f20 <col:148> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x561b1a7b2108 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x561b1a7b20d8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x561b1a7b1ff8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561b1a7b1fb0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561b1a7b1f80 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561b1a7b1f40 <col:166> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561b1a7b1fe0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561b1a7b1fc8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561b1a7b1f60 <col:184> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x561b1a7b2090 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561b1a7b2048 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561b1a7b2018 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561b1a7b20c0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x561b1a7b20a8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x561b1a7b2070 <col:212> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x561b1a7b2818 <line:747:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x561b1a7b2270 <col:3> '_Bool' lvalue Var 0x561b1a7adeb0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561b1a7b2800 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b1a7b27d0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x561b1a7b2788 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561b1a7b2770 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561b1a7b2290 <col:20> '_Bool' lvalue Var 0x561b1a7ae2d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561b1a7b27b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561b1a7b27a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561b1a7b22b0 <col:36> '_Bool' lvalue Var 0x561b1a7adeb0 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x561b1a7b2750 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x561b1a7b2720 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x561b1a7b24c0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561b1a7b23e0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561b1a7b2308 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561b1a7b22f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561b1a7b22d0 <col:55> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561b1a7b23c0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561b1a7b2358 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561b1a7b2340 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561b1a7b2320 <col:74> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x561b1a7b23a8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561b1a7b2390 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561b1a7b2370 <col:93> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561b1a7b24a0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561b1a7b2438 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561b1a7b2420 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561b1a7b2400 <col:112> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x561b1a7b2488 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561b1a7b2470 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561b1a7b2450 <col:131> '_Bool' lvalue Var 0x561b1a7adeb0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x561b1a7b2708 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561b1a7b26f0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561b1a7b24e0 <col:148> '_Bool' lvalue Var 0x561b1a7adeb0 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x561b1a7b26d0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x561b1a7b26a0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x561b1a7b25a0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561b1a7b2558 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561b1a7b2540 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561b1a7b2500 <col:166> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561b1a7b2588 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561b1a7b2570 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561b1a7b2520 <col:184> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x561b1a7b2670 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561b1a7b25f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561b1a7b25c0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561b1a7b2688 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x561b1a7b2648 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x561b1a7b2618 <col:219> 'int' 0
|   |-BinaryOperator 0x561b1a7b2890 <line:748:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561b1a7b2838 <col:3> 'int' lvalue Var 0x561b1a7ad798 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x561b1a7b2878 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b1a7b2858 <col:25> 'int' lvalue Var 0x561b1a7adac8 'y' 'int'
|   |-BinaryOperator 0x561b1a7b29c0 <line:749:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x561b1a7b28b0 <col:3> 'int' lvalue Var 0x561b1a7adac8 'y' 'int'
|   | `-ConditionalOperator 0x561b1a7b2990 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x561b1a7b2948 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561b1a7b2930 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561b1a7b28d0 <col:7> '_Bool' lvalue Var 0x561b1a7adb60 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x561b1a7b2960 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561b1a7b28f0 <col:25> 'int' lvalue Var 0x561b1a7adbe0 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x561b1a7b2978 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x561b1a7b2910 <col:37> 'int' lvalue Var 0x561b1a7adac8 'y' 'int'
|   |-BinaryOperator 0x561b1a7b2a58 <line:750:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x561b1a7b29e0 <col:3> '_Bool' lvalue Var 0x561b1a7adb60 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x561b1a7b2a30 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561b1a7b2a00 <col:28> 'int' 0
|   |-CallExpr 0x561b1a7b2ab0 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b1a7b2a98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b1a7b2a78 <col:3> 'void ()' Function 0x561b1a754410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b1a7b2b08 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b1a7b2af0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b1a7b2ad0 <col:3> 'void ()' Function 0x561b1a754350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b1a7b2df0 <line:753:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561b1a7b2b28 <col:3> 'int' lvalue Var 0x561b1a7adac8 'y' 'int'
|   | `-ConditionalOperator 0x561b1a7b2dc0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561b1a7b2be8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561b1a7b2ba0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561b1a7b2b88 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561b1a7b2b48 <col:7> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561b1a7b2bd0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561b1a7b2bb8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561b1a7b2b68 <col:25> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x561b1a7b2da8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561b1a7b2c08 <col:42> 'int' lvalue Var 0x561b1a7ae070 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x561b1a7b2d88 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561b1a7b2d58 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561b1a7b2cc8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561b1a7b2c80 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561b1a7b2c68 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561b1a7b2c28 <col:55> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561b1a7b2cb0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561b1a7b2c98 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561b1a7b2c48 <col:73> '_Bool' lvalue Var 0x561b1a7adeb0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x561b1a7b2d28 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561b1a7b2ce8 <col:90> 'int' lvalue Var 0x561b1a7ae168 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561b1a7b2d40 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b1a7b2d08 <col:102> 'int' lvalue Var 0x561b1a7adac8 'y' 'int'
|   |-BinaryOperator 0x561b1a7b3008 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561b1a7b2e10 <col:3> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561b1a7b2ff0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b1a7b2fc0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561b1a7b2ed0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561b1a7b2e88 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561b1a7b2e70 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561b1a7b2e30 <col:20> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561b1a7b2eb8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561b1a7b2ea0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561b1a7b2e50 <col:38> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561b1a7b2f68 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b1a7b2f20 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b1a7b2ef0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561b1a7b2f98 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b1a7b2f80 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b1a7b2f48 <col:66> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561b1a7b32f0 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561b1a7b3028 <col:3> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561b1a7b32d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b1a7b32a8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561b1a7b31c8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561b1a7b30e8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561b1a7b30a0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561b1a7b3088 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561b1a7b3048 <col:20> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561b1a7b30d0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561b1a7b30b8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561b1a7b3068 <col:38> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x561b1a7b31a8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561b1a7b3160 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561b1a7b3148 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561b1a7b3108 <col:56> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561b1a7b3190 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561b1a7b3178 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561b1a7b3128 <col:74> '_Bool' lvalue Var 0x561b1a7adeb0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561b1a7b3260 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b1a7b3218 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b1a7b31e8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561b1a7b3290 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b1a7b3278 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b1a7b3240 <col:102> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561b1a7b34f8 <line:756:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561b1a7b3310 <col:3> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561b1a7b34e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b1a7b34b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561b1a7b33d0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561b1a7b3388 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561b1a7b3370 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561b1a7b3330 <col:20> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561b1a7b33b8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561b1a7b33a0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561b1a7b3350 <col:38> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561b1a7b3468 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b1a7b3420 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b1a7b33f0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561b1a7b3498 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b1a7b3480 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b1a7b3448 <col:66> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x561b1a7b37e0 <line:757:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561b1a7b3518 <col:3> '_Bool' lvalue Var 0x561b1a7adeb0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561b1a7b37c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b1a7b3798 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561b1a7b36b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561b1a7b35d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561b1a7b3590 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561b1a7b3578 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561b1a7b3538 <col:20> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561b1a7b35c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561b1a7b35a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561b1a7b3558 <col:38> '_Bool' lvalue Var 0x561b1a7add48 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x561b1a7b3698 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561b1a7b3650 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561b1a7b3638 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561b1a7b35f8 <col:56> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561b1a7b3680 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561b1a7b3668 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561b1a7b3618 <col:74> '_Bool' lvalue Var 0x561b1a7adeb0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561b1a7b3750 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b1a7b3708 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b1a7b36d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561b1a7b3780 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b1a7b3768 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b1a7b3730 <col:102> '_Bool' lvalue Var 0x561b1a7adeb0 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x561b1a7b3838 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b1a7b3820 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b1a7b3800 <col:3> 'void ()' Function 0x561b1a754410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b1a7b3890 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b1a7b3878 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b1a7b3858 <col:3> 'void ()' Function 0x561b1a754350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b1a7b3948 <line:760:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561b1a7b38b0 <col:3> 'int' lvalue Var 0x561b1a7ad438 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561b1a7b3928 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561b1a7b3910 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561b1a7b38d0 <col:22> 'int' lvalue Var 0x561b1a7ad438 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561b1a7b38f0 <col:41> 'int' 1
|   |-CallExpr 0x561b1a7b39a0 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b1a7b3988 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b1a7b3968 <col:3> 'void ()' Function 0x561b1a754410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561b1a7b3a18 <line:762:3, col:36>
|     `-CallExpr 0x561b1a7b39f8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561b1a7b39e0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561b1a7b39c0 <col:10> 'void *(void)' Function 0x561b1a753e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561b1a7b3b60 prev 0x561b1a7ad180 <line:764:1, line:766:1> line:764:6 fence 'void ()'
| `-CompoundStmt 0x561b1a7b3c00 <line:765:1, line:766:1>
|-FunctionDecl 0x561b1a7b3c30 prev 0x561b1a7ad240 <line:767:1, line:769:1> line:767:6 isync 'void ()'
| `-CompoundStmt 0x561b1a7b3cd0 <line:768:1, line:769:1>
|-FunctionDecl 0x561b1a7b3d00 prev 0x561b1a7ad300 <line:770:1, line:772:1> line:770:6 lwfence 'void ()'
| `-CompoundStmt 0x561b1a7b3da0 <line:771:1, line:772:1>
`-FunctionDecl 0x561b1a7b3e08 <line:773:1, line:795:1> line:773:5 main 'int ()'
  `-CompoundStmt 0x561b1a7b57e0 <line:774:1, line:795:1>
    |-DeclStmt 0x561b1a7b3f20 <line:775:3, col:17>
    | `-VarDecl 0x561b1a7b3eb8 <col:3, col:13> col:13 used t315 'pthread_t':'unsigned long'
    |-CallExpr 0x561b1a7b4148 <line:776:3, col:53> 'int'
    | |-ImplicitCastExpr 0x561b1a7b4130 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561b1a7b3f38 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561b1a7948f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561b1a7b3f78 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561b1a7b3f58 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561b1a7b3eb8 't315' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561b1a7b4188 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561b1a7b4010 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x561b1a7b3fe8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561b1a7b3f90 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x561b1a7b41a0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561b1a7b4030 <col:38> 'void *(void *)' Function 0x561b1a7ae3e8 'P0' 'void *(void *)'
    | `-ParenExpr 0x561b1a7b40b0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x561b1a7b4088 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561b1a7b4050 <col:51> 'int' 0
    |-DeclStmt 0x561b1a7b4230 <line:777:3, col:17>
    | `-VarDecl 0x561b1a7b41c8 <col:3, col:13> col:13 used t316 'pthread_t':'unsigned long'
    |-CallExpr 0x561b1a7b43d8 <line:778:3, col:53> 'int'
    | |-ImplicitCastExpr 0x561b1a7b43c0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561b1a7b4248 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561b1a7948f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561b1a7b4288 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561b1a7b4268 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561b1a7b41c8 't316' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561b1a7b4418 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561b1a7b4300 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x561b1a7b42d8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561b1a7b42a0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x561b1a7b4430 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561b1a7b4320 <col:38> 'void *(void *)' Function 0x561b1a7afd20 'P1' 'void *(void *)'
    | `-ParenExpr 0x561b1a7b43a0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x561b1a7b4378 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561b1a7b4340 <col:51> 'int' 0
    |-CallExpr 0x561b1a7b4480 <line:779:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561b1a7b4468 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561b1a7b4448 <col:3> 'void ()' Function 0x561b1a754350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561b1a7b4550 <line:780:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x561b1a7b44a0 <col:3> '_Bool' lvalue Var 0x561b1a7ad830 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x561b1a7b4538 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x561b1a7b4518 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x561b1a7b4500 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x561b1a7b44c0 <col:21> 'int' lvalue Var 0x561b1a7ad438 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x561b1a7b44e0 <col:41> 'int' 2
    |-CallExpr 0x561b1a7b45a8 <line:781:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561b1a7b4590 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561b1a7b4570 <col:3> 'void ()' Function 0x561b1a754410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561b1a7b4620 <line:782:3, col:36> 'void'
    | |-ImplicitCastExpr 0x561b1a7b4608 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561b1a7b45c8 <col:3> 'void (int)' Function 0x561b1a753ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x561b1a7b4660 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x561b1a7b4648 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x561b1a7b45e8 <col:21> '_Bool' lvalue Var 0x561b1a7ad830 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x561b1a7b46b0 <line:783:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561b1a7b4698 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561b1a7b4678 <col:3> 'void ()' Function 0x561b1a754350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561b1a7b4998 <line:784:3, col:103> 'int' '='
    | |-DeclRefExpr 0x561b1a7b46d0 <col:3> 'int' lvalue Var 0x561b1a7adac8 'y' 'int'
    | `-ConditionalOperator 0x561b1a7b4968 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x561b1a7b4790 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x561b1a7b4748 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x561b1a7b4730 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x561b1a7b46f0 <col:7> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x561b1a7b4778 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x561b1a7b4760 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x561b1a7b4710 <col:25> '_Bool' lvalue Var 0x561b1a7adc58 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x561b1a7b4950 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x561b1a7b47b0 <col:42> 'int' lvalue Var 0x561b1a7ae070 'y$w_buff0' 'int'
    |   `-ParenExpr 0x561b1a7b4930 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x561b1a7b4900 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x561b1a7b4870 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x561b1a7b4828 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x561b1a7b4810 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x561b1a7b47d0 <col:55> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x561b1a7b4858 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x561b1a7b4840 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x561b1a7b47f0 <col:73> '_Bool' lvalue Var 0x561b1a7addc0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x561b1a7b48d0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x561b1a7b4890 <col:90> 'int' lvalue Var 0x561b1a7ae168 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x561b1a7b48e8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x561b1a7b48b0 <col:102> 'int' lvalue Var 0x561b1a7adac8 'y' 'int'
    |-BinaryOperator 0x561b1a7b4ba0 <line:785:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x561b1a7b49b8 <col:3> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x561b1a7b4b88 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561b1a7b4b58 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x561b1a7b4a78 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x561b1a7b4a30 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561b1a7b4a18 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x561b1a7b49d8 <col:20> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x561b1a7b4a60 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561b1a7b4a48 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561b1a7b49f8 <col:38> '_Bool' lvalue Var 0x561b1a7adc58 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561b1a7b4b10 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561b1a7b4ac8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561b1a7b4a98 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x561b1a7b4b40 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561b1a7b4b28 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561b1a7b4af0 <col:66> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x561b1a7b4e88 <line:786:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x561b1a7b4bc0 <col:3> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x561b1a7b4e70 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561b1a7b4e40 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x561b1a7b4d60 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x561b1a7b4c80 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x561b1a7b4c38 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x561b1a7b4c20 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x561b1a7b4be0 <col:20> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x561b1a7b4c68 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x561b1a7b4c50 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x561b1a7b4c00 <col:38> '_Bool' lvalue Var 0x561b1a7adc58 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x561b1a7b4d40 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x561b1a7b4cf8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x561b1a7b4ce0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x561b1a7b4ca0 <col:56> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x561b1a7b4d28 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x561b1a7b4d10 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x561b1a7b4cc0 <col:74> '_Bool' lvalue Var 0x561b1a7addc0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561b1a7b4df8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561b1a7b4db0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561b1a7b4d80 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x561b1a7b4e28 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561b1a7b4e10 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561b1a7b4dd8 <col:102> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x561b1a7b50b8 <line:787:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x561b1a7b4ea8 <col:3> '_Bool' lvalue Var 0x561b1a7adc58 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561b1a7b50a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561b1a7b5070 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x561b1a7b4f68 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x561b1a7b4f20 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561b1a7b4f08 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x561b1a7b4ec8 <col:20> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x561b1a7b4f50 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561b1a7b4f38 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561b1a7b4ee8 <col:38> '_Bool' lvalue Var 0x561b1a7adc58 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561b1a7b5028 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561b1a7b4fe0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561b1a7b4f88 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x561b1a7b5058 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561b1a7b5040 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561b1a7b5008 <col:66> '_Bool' lvalue Var 0x561b1a7adc58 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x561b1a7b53a0 <line:788:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x561b1a7b50d8 <col:3> '_Bool' lvalue Var 0x561b1a7addc0 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561b1a7b5388 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561b1a7b5358 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x561b1a7b5278 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x561b1a7b5198 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x561b1a7b5150 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x561b1a7b5138 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x561b1a7b50f8 <col:20> '_Bool' lvalue Var 0x561b1a7ae0e8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x561b1a7b5180 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x561b1a7b5168 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x561b1a7b5118 <col:38> '_Bool' lvalue Var 0x561b1a7adc58 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x561b1a7b5258 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x561b1a7b5210 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x561b1a7b51f8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x561b1a7b51b8 <col:56> '_Bool' lvalue Var 0x561b1a7ae1e0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x561b1a7b5240 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x561b1a7b5228 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x561b1a7b51d8 <col:74> '_Bool' lvalue Var 0x561b1a7addc0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561b1a7b5310 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561b1a7b52c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561b1a7b5298 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x561b1a7b5340 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561b1a7b5328 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561b1a7b52f0 <col:102> '_Bool' lvalue Var 0x561b1a7addc0 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x561b1a7b53f8 <line:789:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561b1a7b53e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561b1a7b53c0 <col:3> 'void ()' Function 0x561b1a754410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561b1a7b5450 <line:790:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561b1a7b5438 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561b1a7b5418 <col:3> 'void ()' Function 0x561b1a754350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561b1a7b5688 <line:791:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x561b1a7b5470 <col:3> '_Bool' lvalue Var 0x561b1a7ad8a8 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x561b1a7b5670 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x561b1a7b5658 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x561b1a7b5638 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x561b1a7b5618 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x561b1a7b5580 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x561b1a7b54e8 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x561b1a7b54d0 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x561b1a7b5490 <col:23> 'int' lvalue Var 0x561b1a7ad558 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x561b1a7b54b0 <col:46> 'int' 0
    |         | `-BinaryOperator 0x561b1a7b5560 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x561b1a7b5548 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x561b1a7b5508 <col:51> 'int' lvalue Var 0x561b1a7ad678 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x561b1a7b5528 <col:74> 'int' 1
    |         `-BinaryOperator 0x561b1a7b55f8 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x561b1a7b55e0 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x561b1a7b55a0 <col:79> 'int' lvalue Var 0x561b1a7ad798 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x561b1a7b55c0 <col:102> 'int' 0
    |-CallExpr 0x561b1a7b56e0 <line:792:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561b1a7b56c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561b1a7b56a8 <col:3> 'void ()' Function 0x561b1a754410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561b1a7b5758 <line:793:3, col:36> 'void'
    | |-ImplicitCastExpr 0x561b1a7b5740 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561b1a7b5700 <col:3> 'void (int)' Function 0x561b1a7540d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x561b1a7b5798 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x561b1a7b5780 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x561b1a7b5720 <col:21> '_Bool' lvalue Var 0x561b1a7ad8a8 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x561b1a7b57d0 <line:794:3, col:10>
      `-IntegerLiteral 0x561b1a7b57b0 <col:10> 'int' 0
