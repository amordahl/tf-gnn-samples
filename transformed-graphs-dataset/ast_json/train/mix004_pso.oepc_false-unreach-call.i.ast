TranslationUnitDecl 0x558b2f200f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x558b2f201848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x558b2f201520 '__int128'
|-TypedefDecl 0x558b2f2018b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x558b2f201540 'unsigned __int128'
|-TypedefDecl 0x558b2f201bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x558b2f201990 'struct __NSConstantString_tag'
|   `-Record 0x558b2f201910 '__NSConstantString_tag'
|-TypedefDecl 0x558b2f201c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x558b2f201c20 'char *'
|   `-BuiltinType 0x558b2f201020 'char'
|-TypedefDecl 0x558b2f240b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x558b2f201f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x558b2f201d40 'struct __va_list_tag'
|     `-Record 0x558b2f201cc0 '__va_list_tag'
|-FunctionDecl 0x558b2f240ca0 <pthread-wmm/mix004_pso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x558b2f240bd0 <col:31> col:34 'int'
|-FunctionDecl 0x558b2f240e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x558b2f240f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x558b2f2410d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x558b2f241048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x558b2f241308 <col:40, col:99>
|   |-IfStmt 0x558b2f2412d8 <col:42, col:88>
|   | |-UnaryOperator 0x558b2f2411b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x558b2f2411a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x558b2f241180 <col:47> 'int' lvalue ParmVar 0x558b2f241048 'expression' 'int'
|   | `-CompoundStmt 0x558b2f2412c0 <col:59, col:88>
|   |   `-LabelStmt 0x558b2f2412a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x558b2f241238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x558b2f241220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x558b2f2411d0 <col:68> 'void () __attribute__((noreturn))' Function 0x558b2f240f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x558b2f2412f0 <col:89>
|   `-ReturnStmt 0x558b2f2412f8 <col:91>
|-FunctionDecl 0x558b2f241350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x558b2f241410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x558b2f241790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558b2f2414c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x558b2f241548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x558b2f2415c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x558b2f241648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x558b2f241850 <line:10:22>
|-FunctionDecl 0x558b2f2678a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558b2f2418c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x558b2f241940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x558b2f2419c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x558b2f241a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x558b2f267960 <line:13:22>
|-FunctionDecl 0x558b2f267c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558b2f2679d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x558b2f267a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x558b2f267ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x558b2f267cc8 <line:15:22>
|-TypedefDecl 0x558b2f267d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x558b2f2010e0 'unsigned char'
|-TypedefDecl 0x558b2f267da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x558b2f201100 'unsigned short'
|-TypedefDecl 0x558b2f267e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x558b2f201120 'unsigned int'
|-TypedefDecl 0x558b2f267e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x558b2f201140 'unsigned long'
|-TypedefDecl 0x558b2f267ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x558b2f201040 'signed char'
|-TypedefDecl 0x558b2f267f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x558b2f2010e0 'unsigned char'
|-TypedefDecl 0x558b2f267fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x558b2f201060 'short'
|-TypedefDecl 0x558b2f268048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x558b2f201100 'unsigned short'
|-TypedefDecl 0x558b2f2680b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x558b2f201080 'int'
|-TypedefDecl 0x558b2f268128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x558b2f201120 'unsigned int'
|-TypedefDecl 0x558b2f268198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x558b2f2010a0 'long'
|-TypedefDecl 0x558b2f268208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x558b2f201140 'unsigned long'
|-TypedefDecl 0x558b2f268278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x558b2f2010a0 'long'
|-TypedefDecl 0x558b2f2682e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x558b2f201140 'unsigned long'
|-TypedefDecl 0x558b2f268358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x558b2f201140 'unsigned long'
|-TypedefDecl 0x558b2f2683c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x558b2f201120 'unsigned int'
|-TypedefDecl 0x558b2f268438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x558b2f201120 'unsigned int'
|-TypedefDecl 0x558b2f2684a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x558b2f201140 'unsigned long'
|-TypedefDecl 0x558b2f268518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x558b2f201140 'unsigned long'
|-TypedefDecl 0x558b2f268588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x558b2f201120 'unsigned int'
|-TypedefDecl 0x558b2f2685f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x558b2f201140 'unsigned long'
|-TypedefDecl 0x558b2f268668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x558b2f2010a0 'long'
|-TypedefDecl 0x558b2f2686d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x558b2f2010a0 'long'
|-TypedefDecl 0x558b2f268748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x558b2f201080 'int'
|-RecordDecl 0x558b2f2687a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x558b2f268918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x558b2f2689d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x558b2f268970 'struct __fsid_t' sugar
|   `-RecordType 0x558b2f268820 '__fsid_t'
|     `-Record 0x558b2f2687a0 ''
|-TypedefDecl 0x558b2f268a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x558b2f2010a0 'long'
|-TypedefDecl 0x558b2f268ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x558b2f201140 'unsigned long'
|-TypedefDecl 0x558b2f268b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x558b2f201140 'unsigned long'
|-TypedefDecl 0x558b2f268ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x558b2f201120 'unsigned int'
|-TypedefDecl 0x558b2f268c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x558b2f2010a0 'long'
|-TypedefDecl 0x558b2f268c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x558b2f201120 'unsigned int'
|-TypedefDecl 0x558b2f268cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x558b2f2010a0 'long'
|-TypedefDecl 0x558b2f268d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x558b2f201080 'int'
|-TypedefDecl 0x558b2f268dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x558b2f201080 'int'
|-TypedefDecl 0x558b2f268e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x558b2f201080 'int'
|-TypedefDecl 0x558b2f268eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x558b2f2017a0 'void *'
|   `-BuiltinType 0x558b2f200fe0 'void'
|-TypedefDecl 0x558b2f268f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x558b2f2010a0 'long'
|-TypedefDecl 0x558b2f268f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x558b2f2010a0 'long'
|-TypedefDecl 0x558b2f269008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x558b2f2010a0 'long'
|-TypedefDecl 0x558b2f269078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x558b2f201140 'unsigned long'
|-TypedefDecl 0x558b2f2690e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x558b2f201140 'unsigned long'
|-TypedefDecl 0x558b2f269158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x558b2f201140 'unsigned long'
|-TypedefDecl 0x558b2f2691c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x558b2f201140 'unsigned long'
|-TypedefDecl 0x558b2f269238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x558b2f2010a0 'long'
|-TypedefDecl 0x558b2f2692a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x558b2f2010a0 'long'
|-TypedefDecl 0x558b2f269318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x558b2f2010a0 'long'
|-TypedefDecl 0x558b2f269388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x558b2f201140 'unsigned long'
|-TypedefDecl 0x558b2f269418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x558b2f2693e0 '__off64_t' sugar
|   |-Typedef 0x558b2f2686d8 '__off64_t'
|   `-BuiltinType 0x558b2f2010a0 'long'
|-TypedefDecl 0x558b2f269510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x558b2f2694d0 '__quad_t *'
|   `-TypedefType 0x558b2f269470 '__quad_t' sugar
|     |-Typedef 0x558b2f268278 '__quad_t'
|     `-BuiltinType 0x558b2f2010a0 'long'
|-TypedefDecl 0x558b2f269580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x558b2f201c20 'char *'
|   `-BuiltinType 0x558b2f201020 'char'
|-TypedefDecl 0x558b2f2695f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x558b2f2010a0 'long'
|-TypedefDecl 0x558b2f269660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x558b2f201120 'unsigned int'
|-FunctionDecl 0x558b2f2697a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x558b2f2696d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x558b2f269ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x558b2f269ad8 <line:72:3, col:34>
|     `-CallExpr 0x558b2f269a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x558b2f269a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x558b2f269a10 <col:10> '<builtin fn type>' Function 0x558b2f269880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x558b2f269ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x558b2f269a30 <col:29> 'unsigned int' lvalue ParmVar 0x558b2f2696d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x558b2f269880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x558b2f269920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x558b2f269990 <col:10> Implicit
| `-ConstAttr 0x558b2f2699e8 <col:10> Implicit
|-FunctionDecl 0x558b2f269c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x558b2f269b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x558b2f269f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x558b2f269f48 <line:77:3, col:34>
|     `-CallExpr 0x558b2f269f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x558b2f269ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x558b2f269e78 <col:10> '<builtin fn type>' Function 0x558b2f269ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x558b2f269f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x558b2f269e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x558b2f269b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x558b2f269ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x558b2f269d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x558b2f269df8 <col:10> Implicit
| `-ConstAttr 0x558b2f269e50 <col:10> Implicit
|-TypedefDecl 0x558b2f269f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x558b2f201140 'unsigned long'
|-TypedefDecl 0x558b2f26a018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x558b2f269fe0 '__time_t' sugar
|   |-Typedef 0x558b2f268c18 '__time_t'
|   `-BuiltinType 0x558b2f2010a0 'long'
|-RecordDecl 0x558b2f26a070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x558b2f26a128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x558b2f26a1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x558b2f26a248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x558b2f26a210 '__pid_t' sugar
|   |-Typedef 0x558b2f268748 '__pid_t'
|   `-BuiltinType 0x558b2f201080 'int'
|-RecordDecl 0x558b2f26a2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x558b2f26a360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x558b2f26a3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x558b2f26a470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x558b2f26a4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x558b2f201140 'unsigned long'
|-RecordDecl 0x558b2f26a530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x558b2f26a7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x558b2f26c8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x558b2f26a810 'struct cpu_set_t' sugar
|   `-RecordType 0x558b2f26a5b0 'cpu_set_t'
|     `-Record 0x558b2f26a530 ''
|-FunctionDecl 0x558b2f26cb88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x558b2f26c958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558b2f26ca60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x558b2f26cc38 <line:107:19>
|-FunctionDecl 0x558b2f26ce10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x558b2f26cca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x558b2f26ceb8 <col:69>
|-FunctionDecl 0x558b2f26d030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x558b2f26cf20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x558b2f26d0d8 <col:64>
|-FunctionDecl 0x558b2f26d398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x558b2f26d140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558b2f26d278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x558b2f26d448 <line:113:22>
|-FunctionDecl 0x558b2f26d6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x558b2f26d4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558b2f26d5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x558b2f26d778 <col:88>
|-FunctionDecl 0x558b2f26da98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x558b2f26d7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558b2f26d8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x558b2f26d950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x558b2f26db50 <col:62>
|-FunctionDecl 0x558b2f26dcc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x558b2f26dbb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x558b2f26dd70 <col:63>
|-FunctionDecl 0x558b2f26de98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x558b2f26df38 <col:47>
|-FunctionDecl 0x558b2f26e040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x558b2f26dfa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x558b2f26e0e8 <col:69>
|-FunctionDecl 0x558b2f26e1f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x558b2f26e158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x558b2f26e298 <col:69>
|-FunctionDecl 0x558b2f26e558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x558b2f26e300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558b2f26e438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x558b2f26e608 <col:88>
|-TypedefDecl 0x558b2f26e698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x558b2f26e660 '__clock_t' sugar
|   |-Typedef 0x558b2f268a58 '__clock_t'
|   `-BuiltinType 0x558b2f2010a0 'long'
|-TypedefDecl 0x558b2f26e728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x558b2f26e6f0 '__clockid_t' sugar
|   |-Typedef 0x558b2f268e48 '__clockid_t'
|   `-BuiltinType 0x558b2f201080 'int'
|-TypedefDecl 0x558b2f26e7b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x558b2f26e780 '__timer_t' sugar
|   |-Typedef 0x558b2f268eb8 '__timer_t'
|   `-PointerType 0x558b2f2017a0 'void *'
|     `-BuiltinType 0x558b2f200fe0 'void'
|-RecordDecl 0x558b2f26e810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x558b2f26e8e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x558b2f26e950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x558b2f26e9b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x558b2f26ea20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x558b2f26ea88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x558b2f26eaf0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x558b2f26eb58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x558b2f26ebc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x558b2f26ec28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x558b2f26ec90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x558b2f26ecf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x558b2f26ed48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x558b2f26ee18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x558b2f26ee88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x558b2f26ef30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x558b2f26f100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x558b2f26f1a0 <col:45>
|-FunctionDecl 0x558b2f26f380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x558b2f26f270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x558b2f26f428 <col:54>
|-FunctionDecl 0x558b2f26f628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x558b2f26f490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x558b2f26f508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x558b2f26f6d8 <line:157:22>
| `-ConstAttr 0x558b2f26f730 <col:63>
|-FunctionDecl 0x558b2f270560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558b2f26f828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x558b2f270608 <col:56>
|-FunctionDecl 0x558b2f2709b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x558b2f270678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x558b2f2706f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558b2f270770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x558b2f270868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x558b2f270a70 <col:54>
|-RecordDecl 0x558b2f270ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x558b2f270b78 parent 0x558b2f200f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x558b2f270dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x558b2f270e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x558b2f270ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x558b2f270f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x558b2f271038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x558b2f271158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x558b2f271100 'struct __locale_struct *'
|   `-ElaboratedType 0x558b2f271090 'struct __locale_struct' sugar
|     `-RecordType 0x558b2f270b50 'struct __locale_struct'
|       `-Record 0x558b2f270ac8 '__locale_struct'
|-TypedefDecl 0x558b2f271208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x558b2f2711d0 '__locale_t' sugar
|   |-Typedef 0x558b2f271158 '__locale_t'
|   `-PointerType 0x558b2f271100 'struct __locale_struct *'
|     `-ElaboratedType 0x558b2f271090 'struct __locale_struct' sugar
|       `-RecordType 0x558b2f270b50 'struct __locale_struct'
|         `-Record 0x558b2f270ac8 '__locale_struct'
|-FunctionDecl 0x558b2f271610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x558b2f271278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x558b2f2712f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558b2f271370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x558b2f271400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x558b2f271478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x558b2f2716d8 <col:40>
|-FunctionDecl 0x558b2f2718c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x558b2f2717a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x558b2f271970 <col:66>
|-FunctionDecl 0x558b2f271a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x558b2f2719d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x558b2f271b28 <col:69>
|-FunctionDecl 0x558b2f271d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x558b2f271b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558b2f271c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x558b2f271e08 <col:52>
|-FunctionDecl 0x558b2f271fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x558b2f271e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558b2f271f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x558b2f272060 <col:55>
|-FunctionDecl 0x558b2f2721f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x558b2f2720e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x558b2f2722a0 <col:62>
|-FunctionDecl 0x558b2f272418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x558b2f272308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x558b2f2724c0 <col:60>
|-FunctionDecl 0x558b2f272718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x558b2f272578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x558b2f2725f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x558b2f2727c8 <col:44>
|-FunctionDecl 0x558b2f2729d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x558b2f272830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558b2f2728b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x558b2f272a88 <col:49>
|-VarDecl 0x558b2f272b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x558b2f272c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x558b2f272c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x558b2f272d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x558b2f272e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x558b2f272f20 <col:42>
|-VarDecl 0x558b2f272f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x558b2f273010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x558b2f273198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x558b2f273088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x558b2f273240 <col:57>
|-FunctionDecl 0x558b2f273350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558b2f2732c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x558b2f2733f8 <col:56>
|-FunctionDecl 0x558b2f274540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558b2f273478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x558b2f2745e8 <col:59>
|-FunctionDecl 0x558b2f2746f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x558b2f274658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x558b2f274798 <col:48>
| `-ConstAttr 0x558b2f2747f0 <col:89>
|-FunctionDecl 0x558b2f274a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x558b2f2748a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x558b2f274938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x558b2f274cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x558b2f274b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558b2f274bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x558b2f274d68 <col:88>
|-FunctionDecl 0x558b2f274f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x558b2f274dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558b2f274e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x558b2f274fb0 <col:88>
|-FunctionDecl 0x558b2f2751c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x558b2f275018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558b2f2750a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x558b2f275278 <line:208:22>
|-FunctionDecl 0x558b2f2755e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x558b2f2752e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558b2f275360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x558b2f2753f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x558b2f275480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x558b2f2758e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x558b2f2756e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x558b2f2757c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x558b2f275998 <col:85>
|-FunctionDecl 0x558b2f275d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x558b2f275a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558b2f275b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x558b2f275c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x558b2f275e40 <col:52>
|-FunctionDecl 0x558b2f275fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x558b2f275ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x558b2f276060 <col:61>
|-FunctionDecl 0x558b2f276560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x558b2f2760c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x558b2f276148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x558b2f276278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x558b2f276368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x558b2f276620 <col:62>
|-FunctionDecl 0x558b2f276838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x558b2f276688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x558b2f276718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x558b2f2768e8 <line:221:22>
|-FunctionDecl 0x558b2f2769e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x558b2f276950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x558b2f276a90 <col:65>
|-TypedefDecl 0x558b2f276b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x558b2f201140 'unsigned long'
|-RecordDecl 0x558b2f276b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x558b2f276ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x558b2f276d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558b2f276db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x558b2f276d60 'union pthread_attr_t' sugar
|   `-RecordType 0x558b2f276be0 'union pthread_attr_t'
|     `-Record 0x558b2f276b58 'pthread_attr_t'
|-RecordDecl 0x558b2f276e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x558b2f276f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x558b2f277000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x558b2f2770b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x558b2f277050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x558b2f276e90 'struct __pthread_internal_list'
|     `-Record 0x558b2f276e10 '__pthread_internal_list'
|-RecordDecl 0x558b2f277120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x558b2f2771c8 parent 0x558b2f200f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x558b2f2772a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x558b2f277308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x558b2f277370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x558b2f2773d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x558b2f277440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x558b2f2774a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x558b2f27b580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x558b2f27b630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x558b2f27b720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x558b2f27b788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558b2f27b910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x558b2f27b8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x558b2f2771a0 'pthread_mutex_t'
|     `-Record 0x558b2f277120 ''
|-RecordDecl 0x558b2f27b980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x558b2f27bac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x558b2f27bb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x558b2f27bbe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x558b2f27bb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x558b2f27ba00 'pthread_mutexattr_t'
|     `-Record 0x558b2f27b980 ''
|-RecordDecl 0x558b2f27bc50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x558b2f27bcf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x558b2f27bdc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x558b2f27be28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x558b2f27be90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x558b2f27bef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x558b2f27bf60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x558b2f27bfc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x558b2f27c030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x558b2f27c098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x558b2f27c150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix004_pso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix004_pso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x558b2f27c240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x558b2f27c2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x558b2f27c3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x558b2f27c380 'union pthread_cond_t' sugar
|   `-RecordType 0x558b2f27bcd0 'pthread_cond_t'
|     `-Record 0x558b2f27bc50 ''
|-RecordDecl 0x558b2f27c450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x558b2f27c590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x558b2f27c5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x558b2f27c6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x558b2f27c650 'union pthread_condattr_t' sugar
|   `-RecordType 0x558b2f27c4d0 'pthread_condattr_t'
|     `-Record 0x558b2f27c450 ''
|-TypedefDecl 0x558b2f27c738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x558b2f201120 'unsigned int'
|-TypedefDecl 0x558b2f27c7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x558b2f201080 'int'
|-RecordDecl 0x558b2f27c800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x558b2f27c8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x558b2f27c970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x558b2f27c9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x558b2f27ca40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x558b2f27caa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x558b2f27cb10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x558b2f27cb78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x558b2f27cbe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x558b2f27cc48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x558b2f27ccb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x558b2f27cd18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x558b2f27cd80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x558b2f27ce30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix004_pso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix004_pso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x558b2f27ced8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x558b2f27cf40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558b2f27d090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x558b2f27d030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x558b2f27c880 'pthread_rwlock_t'
|     `-Record 0x558b2f27c800 ''
|-RecordDecl 0x558b2f27d100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x558b2f27d240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x558b2f27d2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558b2f27d360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x558b2f27d300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x558b2f27d180 'pthread_rwlockattr_t'
|     `-Record 0x558b2f27d100 ''
|-TypedefDecl 0x558b2f27d3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x558b2f201084 'volatile int' volatile
|   `-BuiltinType 0x558b2f201080 'int'
|-RecordDecl 0x558b2f27d440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x558b2f27f5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x558b2f27f618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558b2f27f6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x558b2f27f670 'union pthread_barrier_t' sugar
|   `-RecordType 0x558b2f27d4c0 'pthread_barrier_t'
|     `-Record 0x558b2f27d440 ''
|-RecordDecl 0x558b2f27f740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x558b2f27f840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x558b2f27f8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x558b2f27f960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x558b2f27f900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x558b2f27f7c0 'pthread_barrierattr_t'
|     `-Record 0x558b2f27f740 ''
|-TypedefDecl 0x558b2f27fa78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x558b2f27fa10 'long [8]' 8 
|   `-BuiltinType 0x558b2f2010a0 'long'
|-EnumDecl 0x558b2f27fad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x558b2f27fb98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x558b2f27fbe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x558b2f27fc38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x558b2f27fd08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x558b2f27fd58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x558b2f27fda8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x558b2f27fdf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x558b2f27fe80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x558b2f27fe68 <col:26> 'int'
| |   `-DeclRefExpr 0x558b2f27fe48 <col:26> 'int' EnumConstant 0x558b2f27fd08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x558b2f27ff08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x558b2f27fef0 <col:29> 'int'
| |   `-DeclRefExpr 0x558b2f27fed0 <col:29> 'int' EnumConstant 0x558b2f27fd58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x558b2f27ff90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x558b2f27ff78 <col:30> 'int'
| |   `-DeclRefExpr 0x558b2f27ff58 <col:30> 'int' EnumConstant 0x558b2f27fda8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x558b2f280018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x558b2f280000 <col:27> 'int'
|     `-DeclRefExpr 0x558b2f27ffe0 <col:27> 'int' EnumConstant 0x558b2f27fe80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x558b2f280068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x558b2f280138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x558b2f2801c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x558b2f2801a8 <col:30> 'int'
| |   `-DeclRefExpr 0x558b2f280188 <col:30> 'int' EnumConstant 0x558b2f280138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x558b2f280210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x558b2f280298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x558b2f280280 <col:29> 'int'
|     `-DeclRefExpr 0x558b2f280260 <col:29> 'int' EnumConstant 0x558b2f280210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x558b2f2802e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x558b2f2803b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x558b2f280408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x558b2f280458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x558b2f2804a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x558b2f2805c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x558b2f280610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x558b2f280660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x558b2f2806e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x558b2f2806d0 <col:31> 'int'
|     `-DeclRefExpr 0x558b2f2806b0 <col:31> 'int' EnumConstant 0x558b2f2805c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x558b2f280738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x558b2f280808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x558b2f280858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x558b2f2808a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x558b2f280978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x558b2f2809c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x558b2f280a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x558b2f280ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x558b2f280b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x558b2f280b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x558b2f280dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x558b2f280e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x558b2f280e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x558b2f280fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x558b2f281008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x558b2f2810d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x558b2f281128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x558b2f281178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x558b2f281248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x558b2f281298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x558b2f2818f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x558b2f281390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x558b2f2814a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558b2f2816e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x558b2f281760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x558b2f2819b8 <col:47>
| |-NonNullAttr 0x558b2f281a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x558b2f281a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x558b2f281b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x558b2f281aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x558b2f281dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x558b2f281c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x558b2f281ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x558b2f281f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x558b2f281e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x558b2f282040 <col:60>
|-FunctionDecl 0x558b2f282190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x558b2f282230 <col:54>
| `-ConstAttr 0x558b2f282288 <col:95>
|-FunctionDecl 0x558b2f282458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x558b2f2822c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558b2f282338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x558b2f282508 <line:394:19>
| `-ConstAttr 0x558b2f282560 <col:60>
|-FunctionDecl 0x558b2f282f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x558b2f282e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x558b2f283010 <col:71>
| `-NonNullAttr 0x558b2f283068 <col:112, col:126> 1
|-FunctionDecl 0x558b2f283170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x558b2f2830b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x558b2f283218 <line:397:22>
| `-NonNullAttr 0x558b2f283270 <col:63, col:77> 1
|-FunctionDecl 0x558b2f283498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x558b2f2832b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x558b2f283338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x558b2f283548 <line:400:22>
| `-NonNullAttr 0x558b2f2835a0 <col:63, col:80> 1 2
|-FunctionDecl 0x558b2f2837a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558b2f2835e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558b2f283668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x558b2f283858 <line:403:22>
| `-NonNullAttr 0x558b2f2838b0 <col:63, col:77> 1
|-FunctionDecl 0x558b2f283b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x558b2f2838f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x558b2f2839a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x558b2f283bb8 <line:406:22>
| `-NonNullAttr 0x558b2f283c10 <col:63, col:80> 1 2
|-FunctionDecl 0x558b2f284e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x558b2f283c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558b2f283cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x558b2f284ef8 <line:409:22>
| `-NonNullAttr 0x558b2f284f50 <col:63, col:77> 1
|-FunctionDecl 0x558b2f285188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x558b2f284f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558b2f285028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x558b2f285238 <line:412:22>
| `-NonNullAttr 0x558b2f285290 <col:63, col:80> 1 2
|-FunctionDecl 0x558b2f2854c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x558b2f2852d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x558b2f285368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x558b2f285578 <col:37>
| `-NonNullAttr 0x558b2f2855d0 <col:78, col:95> 1 2
|-FunctionDecl 0x558b2f2857b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558b2f285618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558b2f285698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x558b2f285868 <line:418:22>
| `-NonNullAttr 0x558b2f2858c0 <col:63, col:80> 1 2
|-FunctionDecl 0x558b2f285a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558b2f285908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558b2f285988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x558b2f285af8 <line:420:22>
| `-NonNullAttr 0x558b2f285b50 <col:63, col:77> 1
|-FunctionDecl 0x558b2f285cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558b2f285b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558b2f285c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x558b2f285da8 <line:423:22>
| `-NonNullAttr 0x558b2f286e30 <col:63, col:80> 1 2
|-FunctionDecl 0x558b2f286fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558b2f286e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558b2f286ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x558b2f287068 <line:426:22>
| `-NonNullAttr 0x558b2f2870c0 <col:63, col:77> 1
|-FunctionDecl 0x558b2f287268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558b2f287108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558b2f287188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x558b2f287318 <line:429:22>
| `-NonNullAttr 0x558b2f287370 <col:63, col:80> 1 2
|-FunctionDecl 0x558b2f2874f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558b2f2873b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558b2f287438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x558b2f2875a8 <line:431:22>
| `-NonNullAttr 0x558b2f287600 <col:63, col:77> 1
|-FunctionDecl 0x558b2f287828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x558b2f287648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558b2f2876c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x558b2f2878d8 <line:434:22>
| |-NonNullAttr 0x558b2f287930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x558b2f287968 <col:100> "" ""
|-FunctionDecl 0x558b2f287b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x558b2f2879b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558b2f287a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x558b2f287c28 <line:437:22>
| |-NonNullAttr 0x558b2f287c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x558b2f287cb8 <col:97> "" ""
|-FunctionDecl 0x558b2f287eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x558b2f287d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558b2f287d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x558b2f287f68 <line:440:22>
| `-NonNullAttr 0x558b2f287fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x558b2f288140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x558b2f288008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558b2f288080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x558b2f2881f0 <line:443:22>
| `-NonNullAttr 0x558b2f288248 <col:63, col:77> 1
|-FunctionDecl 0x558b2f288538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x558b2f288298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558b2f288318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x558b2f288390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x558b2f2885f0 <line:447:22>
| `-NonNullAttr 0x558b2f288648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x558b2f2888f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x558b2f2886a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558b2f288720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x558b2f288798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x558b2f2889b0 <col:43>
| `-NonNullAttr 0x558b2f288a08 <col:84, col:98> 1
|-FunctionDecl 0x558b2f288cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x558b2f288a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558b2f288ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x558b2f288b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x558b2f288d80 <line:452:22>
| `-NonNullAttr 0x558b2f288dd8 <col:63, col:77> 3
|-FunctionDecl 0x558b2f2890e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x558b2f288e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558b2f288ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x558b2f288f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x558b2f2891a0 <line:456:22>
| `-NonNullAttr 0x558b2f2891f8 <col:63, col:80> 2 3
|-FunctionDecl 0x558b2f2893e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x558b2f289248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558b2f2892c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x558b2f289498 <line:458:22>
|-FunctionDecl 0x558b2f289868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x558b2f289560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x558b2f289700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x558b2f289918 <col:52, col:69> 1 2
|-FunctionDecl 0x558b2f289ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x558b2f2899a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x558b2f289a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x558b2f289ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x558b2f289b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x558b2f289c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x558b2f289e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x558b2f289d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x558b2f289fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x558b2f28a040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x558b2f28a0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x558b2f28a1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x558b2f28a240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x558b2f28a410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix004_pso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x558b2f28a508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x558b2f28a5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x558b2f28a560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x558b2f28a0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x558b2f28a040 ''
| `-AlignedAttr 0x558b2f28a618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x558b2f28a690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x558b2f28a7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x558b2f28a858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x558b2f28a8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x558b2f28a928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x558b2f28ab30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x558b2f28aa20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x558b2f28ac78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x558b2f28abe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x558b2f28ae70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558b2f28ad30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x558b2f28af18 <line:487:22>
|-RecordDecl 0x558b2f28af70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x558b2f28b288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x558b2f28b0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x558b2f28b168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x558b2f28b338 <col:86>
| `-ReturnsTwiceAttr 0x558b2f28b390 <col:12> Implicit
|-FunctionDecl 0x558b2f28b6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x558b2f28b460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x558b2f28b570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x558b2f28b768 <line:493:22>
| `-NonNullAttr 0x558b2f28b7c0 <col:63, col:77> 1
|-FunctionDecl 0x558b2f28b938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558b2f28b808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558b2f28b9e0 <line:495:22>
| `-NonNullAttr 0x558b2f28ba38 <col:63, col:77> 1
|-FunctionDecl 0x558b2f28bb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558b2f28ba88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558b2f28bbe8 <line:497:22>
| `-NonNullAttr 0x558b2f28bc40 <col:52, col:66> 1
|-FunctionDecl 0x558b2f28bd40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558b2f28bc88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558b2f28bde8 <line:499:22>
| `-NonNullAttr 0x558b2f28be40 <col:52, col:66> 1
|-FunctionDecl 0x558b2f28c088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558b2f28be98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558b2f28bf28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x558b2f28c138 <col:36>
| `-NonNullAttr 0x558b2f28c190 <col:66, col:83> 1 2
|-FunctionDecl 0x558b2f28c290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558b2f28c1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558b2f28c338 <line:504:22>
| `-NonNullAttr 0x558b2f28c390 <col:52, col:66> 1
|-FunctionDecl 0x558b2f28c628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558b2f28c440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558b2f28c4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x558b2f28c6d8 <line:508:22>
| `-NonNullAttr 0x558b2f28c730 <col:63, col:80> 1 2
|-FunctionDecl 0x558b2f28c9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x558b2f28c778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558b2f28c7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x558b2f28c878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x558b2f28cab0 <line:512:22>
| `-NonNullAttr 0x558b2f28cb08 <col:63, col:80> 1 3
|-FunctionDecl 0x558b2f28cc10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558b2f28cb58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558b2f28ccb8 <line:514:22>
| `-NonNullAttr 0x558b2f28cd10 <col:63, col:77> 1
|-FunctionDecl 0x558b2f28cf38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x558b2f28cdc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x558b2f28cfe0 <line:516:22>
| `-NonNullAttr 0x558b2f28d038 <col:63, col:77> 1
|-FunctionDecl 0x558b2f28d140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x558b2f28d088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x558b2f28d1e8 <line:518:22>
| `-NonNullAttr 0x558b2f28d240 <col:63, col:77> 1
|-FunctionDecl 0x558b2f28d468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558b2f28d288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558b2f28d308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x558b2f28d518 <line:522:22>
| `-NonNullAttr 0x558b2f28d570 <col:63, col:80> 1 2
|-FunctionDecl 0x558b2f28d778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558b2f28d5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558b2f28d638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x558b2f28d828 <line:525:22>
| `-NonNullAttr 0x558b2f28d880 <col:63, col:77> 1
|-FunctionDecl 0x558b2f28da28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558b2f28d8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558b2f28d948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x558b2f28dad8 <line:528:22>
| `-NonNullAttr 0x558b2f28db30 <col:63, col:80> 1 2
|-FunctionDecl 0x558b2f28dcb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558b2f28db78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558b2f28dbf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x558b2f28dd68 <line:530:22>
| `-NonNullAttr 0x558b2f28ddc0 <col:63, col:77> 1
|-FunctionDecl 0x558b2f28ef90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558b2f28de08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558b2f28eeb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x558b2f28f040 <line:534:22>
| `-NonNullAttr 0x558b2f28f098 <col:63, col:80> 1 2
|-FunctionDecl 0x558b2f28f228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558b2f28f0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558b2f28f168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x558b2f28f2d8 <line:537:22>
| `-NonNullAttr 0x558b2f28f330 <col:63, col:77> 1
|-FunctionDecl 0x558b2f28f4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558b2f28f378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558b2f28f3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x558b2f28f588 <line:541:22>
| `-NonNullAttr 0x558b2f28f5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x558b2f28f768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558b2f28f628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558b2f28f6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x558b2f28f818 <line:544:22>
| `-NonNullAttr 0x558b2f28f870 <col:63, col:77> 1
|-FunctionDecl 0x558b2f28fa58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x558b2f28f8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x558b2f28f938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x558b2f28fb08 <line:547:22>
| `-NonNullAttr 0x558b2f28fb60 <col:63, col:80> 1 2
|-FunctionDecl 0x558b2f28fce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558b2f28fba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558b2f28fc28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x558b2f28fd98 <line:550:22>
| `-NonNullAttr 0x558b2f28fdf0 <col:63, col:77> 1
|-FunctionDecl 0x558b2f291168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x558b2f290f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x558b2f291020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x558b2f291218 <col:29>
| `-NonNullAttr 0x558b2f291270 <col:70, col:84> 1
|-FunctionDecl 0x558b2f2913e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558b2f2912b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558b2f291490 <line:555:22>
| `-NonNullAttr 0x558b2f2914e8 <col:63, col:77> 1
|-FunctionDecl 0x558b2f2915f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558b2f291538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558b2f291698 <line:557:22>
| `-NonNullAttr 0x558b2f2916f0 <col:52, col:66> 1
|-FunctionDecl 0x558b2f2917f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558b2f291738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558b2f291898 <line:559:19>
| `-NonNullAttr 0x558b2f2918f0 <col:49, col:63> 1
|-FunctionDecl 0x558b2f291b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558b2f291938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x558b2f2919c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x558b2f291bd8 <col:39>
| `-NonNullAttr 0x558b2f291c30 <col:69, col:86> 1 2
|-FunctionDecl 0x558b2f291d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558b2f291c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558b2f291dd8 <line:564:22>
| `-NonNullAttr 0x558b2f291e30 <col:52, col:66> 1
|-FunctionDecl 0x558b2f291f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558b2f291ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558b2f292040 <line:566:22>
| `-NonNullAttr 0x558b2f292098 <col:52, col:66> 1
|-FunctionDecl 0x558b2f292258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558b2f2920e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x558b2f292178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x558b2f292308 <col:39>
| `-NonNullAttr 0x558b2f292360 <col:69, col:86> 1 2
|-FunctionDecl 0x558b2f292460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558b2f2923a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558b2f292508 <line:571:22>
| `-NonNullAttr 0x558b2f292560 <col:52, col:66> 1
|-FunctionDecl 0x558b2f292748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x558b2f292610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x558b2f2927f0 <line:573:22>
| `-NonNullAttr 0x558b2f292848 <col:63, col:77> 1
|-FunctionDecl 0x558b2f292950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x558b2f292898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x558b2f2929f8 <line:575:22>
| `-NonNullAttr 0x558b2f292a50 <col:63, col:77> 1
|-FunctionDecl 0x558b2f292c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558b2f292a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x558b2f292b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x558b2f292d28 <line:579:22>
| `-NonNullAttr 0x558b2f292d80 <col:63, col:80> 1 2
|-FunctionDecl 0x558b2f292fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x558b2f292dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x558b2f292e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x558b2f293058 <line:582:22>
| `-NonNullAttr 0x558b2f2930b0 <col:63, col:77> 1
|-FunctionDecl 0x558b2f293258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558b2f2930f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x558b2f293178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x558b2f293308 <line:586:22>
| `-NonNullAttr 0x558b2f293360 <col:63, col:80> 1 2
|-FunctionDecl 0x558b2f2934e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x558b2f2933a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x558b2f293428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x558b2f293598 <col:36>
| `-NonNullAttr 0x558b2f2935f0 <col:77, col:91> 1
|-FunctionDecl 0x558b2f293928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x558b2f2936d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x558b2f2937e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x558b2f2939d8 <line:591:22>
| `-NonNullAttr 0x558b2f293a30 <col:63, col:77> 1
|-FunctionDecl 0x558b2f293ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x558b2f293a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x558b2f293c50 <line:593:22>
| `-NonNullAttr 0x558b2f293ca8 <col:63, col:77> 1
|-FunctionDecl 0x558b2f293db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x558b2f293cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x558b2f293e58 <line:595:22>
| `-NonNullAttr 0x558b2f293eb0 <col:52, col:66> 1
|-FunctionDecl 0x558b2f293fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x558b2f293f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x558b2f294070 <line:597:22>
| `-NonNullAttr 0x558b2f2940c8 <col:52, col:66> 1
|-FunctionDecl 0x558b2f2942f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x558b2f294118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x558b2f294190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x558b2f2943a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x558b2f2946d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558b2f294428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x558b2f2944a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558b2f294530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x558b2f294790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x558b2f2949a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x558b2f294870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x558b2f294a50 <line:606:22>
| `-NonNullAttr 0x558b2f294aa8 <col:63, col:77> 1
|-FunctionDecl 0x558b2f294bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x558b2f294af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x558b2f294c58 <line:608:22>
| `-NonNullAttr 0x558b2f294cb0 <col:63, col:77> 1
|-FunctionDecl 0x558b2f294f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558b2f294cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x558b2f294d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x558b2f294fc0 <line:612:22>
| `-NonNullAttr 0x558b2f295018 <col:63, col:80> 1 2
|-FunctionDecl 0x558b2f295228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x558b2f295068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x558b2f2950e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x558b2f2952d8 <col:37>
| `-NonNullAttr 0x558b2f295330 <col:78, col:92> 1
|-FunctionDecl 0x558b2f295548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x558b2f295378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x558b2f295420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x558b2f2955f8 <line:618:22>
| `-NonNullAttr 0x558b2f295650 <col:63, col:80> 1 2
|-FunctionDecl 0x558b2f295818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x558b2f295698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x558b2f295710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x558b2f2958c8 <line:621:22>
| `-NonNullAttr 0x558b2f295920 <col:63, col:77> 1
|-FunctionDecl 0x558b2f295bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x558b2f295a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x558b2f295a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x558b2f295c78 <line:623:22>
| `-NonNullAttr 0x558b2f295cd0 <col:63, col:77> 1
|-FunctionDecl 0x558b2f295e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558b2f295d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558b2f295f20 <line:625:22>
| `-NonNullAttr 0x558b2f295f78 <col:63, col:77> 1
|-FunctionDecl 0x558b2f296080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558b2f295fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558b2f296128 <line:627:22>
| `-NonNullAttr 0x558b2f296180 <col:52, col:66> 1
|-FunctionDecl 0x558b2f296280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558b2f2961c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558b2f296328 <line:629:22>
| `-NonNullAttr 0x558b2f296380 <col:52, col:66> 1
|-FunctionDecl 0x558b2f296480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558b2f2963c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558b2f296528 <line:631:22>
| `-NonNullAttr 0x558b2f296580 <col:52, col:66> 1
|-FunctionDecl 0x558b2f296958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x558b2f296660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x558b2f296770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x558b2f2967f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x558b2f296a10 <line:635:22>
| `-NonNullAttr 0x558b2f296a68 <col:63, col:77> 1
|-FunctionDecl 0x558b2f296be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x558b2f296ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x558b2f296c90 <line:637:22>
| `-NonNullAttr 0x558b2f296ce8 <col:63, col:77> 1
|-FunctionDecl 0x558b2f296df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x558b2f296d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x558b2f296e98 <line:639:22>
| `-NonNullAttr 0x558b2f296ef0 <col:52, col:66> 1
|-FunctionDecl 0x558b2f2970e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x558b2f296fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x558b2f297190 <line:641:22>
| `-NonNullAttr 0x558b2f2971e8 <col:63, col:77> 1
|-FunctionDecl 0x558b2f2972f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x558b2f297238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x558b2f297398 <line:643:22>
| `-NonNullAttr 0x558b2f2973f0 <col:63, col:77> 1
|-FunctionDecl 0x558b2f297618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558b2f297438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x558b2f2974b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x558b2f2976c8 <line:647:22>
| `-NonNullAttr 0x558b2f297720 <col:63, col:80> 1 2
|-FunctionDecl 0x558b2f297928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x558b2f297768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x558b2f2977e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x558b2f2979d8 <line:650:22>
| `-NonNullAttr 0x558b2f297a30 <col:63, col:77> 1
|-FunctionDecl 0x558b2f297d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x558b2f297b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x558b2f297c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x558b2f297e28 <line:653:22>
| `-NonNullAttr 0x558b2f297e80 <col:63, col:77> 1
|-FunctionDecl 0x558b2f297fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x558b2f297ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x558b2f298090 <col:69>
|-FunctionDecl 0x558b2f298208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x558b2f2980f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x558b2f2982b0 <col:72>
|-FunctionDecl 0x558b2f2984e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x558b2f298318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x558b2f2983c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x558b2f298598 <col:44>
|-FunctionDecl 0x558b2f2987b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x558b2f298600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558b2f298678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x558b2f298868 <line:660:22>
| `-NonNullAttr 0x558b2f2988c0 <col:63, col:77> 2
|-FunctionDecl 0x558b2f298d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x558b2f2989a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x558b2f298ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x558b2f298bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x558b2f298dc0 <col:47>
|-FunctionDecl 0x558b2f299f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x558b2f298e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558b2f29a0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x558b2f29a020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558b2f29a210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x558b2f29a178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558b2f29a368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x558b2f29a2d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558b2f29a430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x558b2f29a4f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x558b2f29a5b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x558b2f29a668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x558b2f29a6e8 prev 0x558b2f29a668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x558b2f29a750 <col:24> 'int' 0
|-VarDecl 0x558b2f29a788 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x558b2f29a808 prev 0x558b2f29a788 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x558b2f29a870 <col:27> 'int' 0
|-VarDecl 0x558b2f29a8a8 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x558b2f29a928 prev 0x558b2f29a8a8 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x558b2f29a990 <col:27> 'int' 0
|-VarDecl 0x558b2f29a9c8 <line:678:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x558b2f29aa48 prev 0x558b2f29a9c8 <line:679:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x558b2f29aab0 <col:27> 'int' 0
|-VarDecl 0x558b2f29aae8 <line:680:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x558b2f29ab68 prev 0x558b2f29aae8 <line:681:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x558b2f29abd0 <col:27> 'int' 0
|-VarDecl 0x558b2f29ac08 <line:682:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x558b2f29ac88 prev 0x558b2f29ac08 <line:683:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x558b2f29acf0 <col:27> 'int' 0
|-VarDecl 0x558b2f29ad28 <line:684:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x558b2f29ada8 prev 0x558b2f29ad28 <line:685:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x558b2f29ae10 <col:27> 'int' 0
|-VarDecl 0x558b2f29ae48 <line:686:1, col:5> col:5 used a 'int'
|-VarDecl 0x558b2f29aec8 prev 0x558b2f29ae48 <line:687:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x558b2f29af30 <col:9> 'int' 0
|-VarDecl 0x558b2f29af70 <line:688:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x558b2f29aff0 <line:689:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x558b2f29b068 <line:690:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x558b2f29b0e0 <line:691:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x558b2f29b158 <line:692:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x558b2f29b1d0 <line:693:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x558b2f29b248 <line:694:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x558b2f29b2c0 <line:695:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x558b2f29b338 <line:696:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x558b2f29b3b0 <line:697:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x558b2f29b428 <line:698:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x558b2f29b4a0 <line:699:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x558b2f29b518 <line:700:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x558b2f29b598 <line:701:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x558b2f29b618 <line:702:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x558b2f29b690 <line:703:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x558b2f29b710 <line:704:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x558b2f29b788 <line:705:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x558b2f29b800 <line:706:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x558b2f29b878 <line:707:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x558b2f29b8f8 <line:708:1, col:5> col:5 used x 'int'
|-VarDecl 0x558b2f29b978 prev 0x558b2f29b8f8 <line:709:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x558b2f29b9e0 <col:9> 'int' 0
|-VarDecl 0x558b2f29ba18 <line:710:1, col:5> col:5 used y 'int'
|-VarDecl 0x558b2f29ba98 prev 0x558b2f29ba18 <line:711:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x558b2f29bb00 <col:9> 'int' 0
|-VarDecl 0x558b2f29bb38 <line:712:1, col:5> col:5 used z 'int'
|-VarDecl 0x558b2f29bbb8 prev 0x558b2f29bb38 <line:713:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x558b2f29bc20 <col:9> 'int' 0
|-VarDecl 0x558b2f29bc50 <line:714:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x558b2f29bcc8 <line:715:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x558b2f29bde0 prev 0x558b2f299f60 <line:716:1, line:745:1> line:716:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x558b2f29bd48 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558b2f29d698 <line:717:1, line:745:1>
|   |-CallExpr 0x558b2f29bef8 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558b2f29bee0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f29be88 <col:3> 'void ()' Function 0x558b2f241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558b2f29bf80 <line:719:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x558b2f29bf18 <col:3> 'int' lvalue Var 0x558b2f29b710 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x558b2f29bf58 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558b2f29bf38 <col:15> 'int' lvalue Var 0x558b2f29b618 'a$w_buff0' 'int'
|   |-BinaryOperator 0x558b2f29bfe0 <line:720:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x558b2f29bfa0 <col:3> 'int' lvalue Var 0x558b2f29b618 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x558b2f29bfc0 <col:15> 'int' 1
|   |-BinaryOperator 0x558b2f29c058 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f29c000 <col:3> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f29c040 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558b2f29c020 <col:20> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558b2f29c0f0 <line:722:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f29c078 <col:3> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x558b2f29c0c8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x558b2f29c098 <col:27> 'int' 1
|   |-CallExpr 0x558b2f29c278 <line:723:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x558b2f29c260 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x558b2f29c110 <col:3> 'void (int)' Function 0x558b2f2410d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x558b2f29c210 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x558b2f29c1f0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x558b2f29c1d0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x558b2f29c188 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x558b2f29c170 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x558b2f29c130 <col:23> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x558b2f29c1b8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x558b2f29c1a0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x558b2f29c150 <col:41> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558b2f29c2f8 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f29c2a0 <col:3> '_Bool' lvalue Var 0x558b2f29b2c0 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f29c2e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558b2f29c2c0 <col:20> '_Bool' lvalue Var 0x558b2f29b068 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x558b2f29c370 <line:725:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f29c318 <col:3> '_Bool' lvalue Var 0x558b2f29b338 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f29c358 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558b2f29c338 <col:20> '_Bool' lvalue Var 0x558b2f29b0e0 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x558b2f29c3e8 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f29c390 <col:3> '_Bool' lvalue Var 0x558b2f29b3b0 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f29c3d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558b2f29c3b0 <col:20> '_Bool' lvalue Var 0x558b2f29b158 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x558b2f29c460 <line:727:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f29c408 <col:3> '_Bool' lvalue Var 0x558b2f29b428 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f29c448 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558b2f29c428 <col:20> '_Bool' lvalue Var 0x558b2f29b1d0 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x558b2f29c4d8 <line:728:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f29c480 <col:3> '_Bool' lvalue Var 0x558b2f29b4a0 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f29c4c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558b2f29c4a0 <col:20> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x558b2f29c570 <line:729:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f29c4f8 <col:3> '_Bool' lvalue Var 0x558b2f29b0e0 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x558b2f29c548 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x558b2f29c518 <col:27> 'int' 1
|   |-CallExpr 0x558b2f29c5c8 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558b2f29c5b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f29c590 <col:3> 'void ()' Function 0x558b2f241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558b2f29c620 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558b2f29c608 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f29c5e8 <col:3> 'void ()' Function 0x558b2f241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558b2f29c698 <line:732:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558b2f29c640 <col:3> 'int' lvalue Var 0x558b2f29a808 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x558b2f29c680 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558b2f29c660 <col:25> 'int' lvalue Var 0x558b2f29b978 'x' 'int'
|   |-CallExpr 0x558b2f29c6f0 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558b2f29c6d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f29c6b8 <col:3> 'void ()' Function 0x558b2f241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558b2f29c748 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558b2f29c730 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f29c710 <col:3> 'void ()' Function 0x558b2f241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558b2f29ca30 <line:735:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x558b2f29c768 <col:3> 'int' lvalue Var 0x558b2f29aec8 'a' 'int'
|   | `-ConditionalOperator 0x558b2f29ca00 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x558b2f29c828 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x558b2f29c7e0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x558b2f29c7c8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x558b2f29c788 <col:7> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x558b2f29c810 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x558b2f29c7f8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x558b2f29c7a8 <col:25> '_Bool' lvalue Var 0x558b2f29b0e0 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x558b2f29c9e8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558b2f29c848 <col:42> 'int' lvalue Var 0x558b2f29b618 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x558b2f29c9c8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x558b2f29c998 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x558b2f29c908 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558b2f29c8c0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558b2f29c8a8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558b2f29c868 <col:55> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558b2f29c8f0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558b2f29c8d8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558b2f29c888 <col:73> '_Bool' lvalue Var 0x558b2f29b338 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x558b2f29c968 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558b2f29c928 <col:90> 'int' lvalue Var 0x558b2f29b710 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x558b2f29c980 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558b2f29c948 <col:102> 'int' lvalue Var 0x558b2f29aec8 'a' 'int'
|   |-BinaryOperator 0x558b2f29cc38 <line:736:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f29ca50 <col:3> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f29cc20 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558b2f29cbf0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558b2f29cb10 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558b2f29cac8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558b2f29cab0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558b2f29ca70 <col:20> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558b2f29caf8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558b2f29cae0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558b2f29ca90 <col:38> '_Bool' lvalue Var 0x558b2f29b0e0 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558b2f29cba8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558b2f29cb60 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558b2f29cb30 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558b2f29cbd8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558b2f29cbc0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558b2f29cb88 <col:66> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558b2f29cf20 <line:737:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f29cc58 <col:3> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f29cf08 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558b2f29ced8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558b2f29cdf8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558b2f29cd18 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558b2f29ccd0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558b2f29ccb8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558b2f29cc78 <col:20> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558b2f29cd00 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558b2f29cce8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558b2f29cc98 <col:38> '_Bool' lvalue Var 0x558b2f29b0e0 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x558b2f29cdd8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558b2f29cd90 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558b2f29cd78 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558b2f29cd38 <col:56> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558b2f29cdc0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558b2f29cda8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558b2f29cd58 <col:74> '_Bool' lvalue Var 0x558b2f29b338 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558b2f29ce90 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558b2f29ce48 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558b2f29ce18 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558b2f29cec0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558b2f29cea8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558b2f29ce70 <col:102> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x558b2f29d138 <line:738:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f29cf40 <col:3> '_Bool' lvalue Var 0x558b2f29b0e0 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f29d120 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558b2f29d0f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558b2f29d010 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558b2f29cfc8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558b2f29cfb0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558b2f29cf60 <col:20> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558b2f29cff8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558b2f29cfe0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558b2f29cf90 <col:38> '_Bool' lvalue Var 0x558b2f29b0e0 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558b2f29d0a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558b2f29d060 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558b2f29d030 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558b2f29d0d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558b2f29d0c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558b2f29d088 <col:66> '_Bool' lvalue Var 0x558b2f29b0e0 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x558b2f29d420 <line:739:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f29d158 <col:3> '_Bool' lvalue Var 0x558b2f29b338 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f29d408 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558b2f29d3d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558b2f29d2f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558b2f29d218 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558b2f29d1d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558b2f29d1b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558b2f29d178 <col:20> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558b2f29d200 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558b2f29d1e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558b2f29d198 <col:38> '_Bool' lvalue Var 0x558b2f29b0e0 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x558b2f29d2d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558b2f29d290 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558b2f29d278 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558b2f29d238 <col:56> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558b2f29d2c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558b2f29d2a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558b2f29d258 <col:74> '_Bool' lvalue Var 0x558b2f29b338 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558b2f29d390 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558b2f29d348 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558b2f29d318 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558b2f29d3c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558b2f29d3a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558b2f29d370 <col:102> '_Bool' lvalue Var 0x558b2f29b338 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x558b2f29d478 <line:740:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558b2f29d460 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f29d440 <col:3> 'void ()' Function 0x558b2f241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558b2f29d4d0 <line:741:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558b2f29d4b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f29d498 <col:3> 'void ()' Function 0x558b2f241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558b2f29d588 <line:742:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558b2f29d4f0 <col:3> 'int' lvalue Var 0x558b2f29a6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558b2f29d568 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558b2f29d550 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558b2f29d510 <col:22> 'int' lvalue Var 0x558b2f29a6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558b2f29d530 <col:41> 'int' 1
|   |-CallExpr 0x558b2f29d5e0 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558b2f29d5c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f29d5a8 <col:3> 'void ()' Function 0x558b2f241410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558b2f29d688 <line:744:3, col:36>
|     `-CallExpr 0x558b2f29d668 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558b2f29d650 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558b2f29d600 <col:10> 'void *(void)' Function 0x558b2f240e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558b2f29d830 prev 0x558b2f29a0b8 <line:746:1, line:765:1> line:746:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x558b2f29d798 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558b2f29ea70 <line:747:1, line:765:1>
|   |-CallExpr 0x558b2f29d910 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558b2f29d8f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f29d8d8 <col:3> 'void ()' Function 0x558b2f241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558b2f29d970 <line:749:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558b2f29d930 <col:3> 'int' lvalue Var 0x558b2f29b978 'x' 'int'
|   | `-IntegerLiteral 0x558b2f29d950 <col:7> 'int' 1
|   |-CallExpr 0x558b2f29d9c8 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558b2f29d9b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f29d990 <col:3> 'void ()' Function 0x558b2f241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558b2f29da20 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558b2f29da08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f29d9e8 <col:3> 'void ()' Function 0x558b2f241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558b2f29da98 <line:752:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558b2f29da40 <col:3> 'int' lvalue Var 0x558b2f29a928 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x558b2f29da80 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558b2f29da60 <col:25> 'int' lvalue Var 0x558b2f29ba98 'y' 'int'
|   |-CallExpr 0x558b2f29daf0 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558b2f29dad8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f29dab8 <col:3> 'void ()' Function 0x558b2f241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558b2f29db48 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558b2f29db30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f29db10 <col:3> 'void ()' Function 0x558b2f241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558b2f29de30 <line:755:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x558b2f29db68 <col:3> 'int' lvalue Var 0x558b2f29aec8 'a' 'int'
|   | `-ConditionalOperator 0x558b2f29de00 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x558b2f29dc28 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x558b2f29dbe0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x558b2f29dbc8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x558b2f29db88 <col:7> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x558b2f29dc10 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x558b2f29dbf8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x558b2f29dba8 <col:25> '_Bool' lvalue Var 0x558b2f29b158 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x558b2f29dde8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558b2f29dc48 <col:42> 'int' lvalue Var 0x558b2f29b618 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x558b2f29ddc8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x558b2f29dd98 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x558b2f29dd08 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558b2f29dcc0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558b2f29dca8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558b2f29dc68 <col:55> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558b2f29dcf0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558b2f29dcd8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558b2f29dc88 <col:73> '_Bool' lvalue Var 0x558b2f29b3b0 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x558b2f29dd68 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558b2f29dd28 <col:90> 'int' lvalue Var 0x558b2f29b710 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x558b2f29dd80 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558b2f29dd48 <col:102> 'int' lvalue Var 0x558b2f29aec8 'a' 'int'
|   |-BinaryOperator 0x558b2f29e050 <line:756:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f29de50 <col:3> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f29e038 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558b2f29e008 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558b2f29df10 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558b2f29dec8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558b2f29deb0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558b2f29de70 <col:20> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558b2f29def8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558b2f29dee0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558b2f29de90 <col:38> '_Bool' lvalue Var 0x558b2f29b158 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558b2f29dfc0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558b2f29df60 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558b2f29df30 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558b2f29dff0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558b2f29dfd8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558b2f29dfa0 <col:66> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558b2f29e338 <line:757:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f29e070 <col:3> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f29e320 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558b2f29e2f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558b2f29e210 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558b2f29e130 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558b2f29e0e8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558b2f29e0d0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558b2f29e090 <col:20> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558b2f29e118 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558b2f29e100 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558b2f29e0b0 <col:38> '_Bool' lvalue Var 0x558b2f29b158 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x558b2f29e1f0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558b2f29e1a8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558b2f29e190 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558b2f29e150 <col:56> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558b2f29e1d8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558b2f29e1c0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558b2f29e170 <col:74> '_Bool' lvalue Var 0x558b2f29b3b0 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558b2f29e2a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558b2f29e260 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558b2f29e230 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558b2f29e2d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558b2f29e2c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558b2f29e288 <col:102> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x558b2f29e540 <line:758:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f29e358 <col:3> '_Bool' lvalue Var 0x558b2f29b158 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f29e528 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558b2f29e4f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558b2f29e418 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558b2f29e3d0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558b2f29e3b8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558b2f29e378 <col:20> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558b2f29e400 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558b2f29e3e8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558b2f29e398 <col:38> '_Bool' lvalue Var 0x558b2f29b158 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558b2f29e4b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558b2f29e468 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558b2f29e438 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558b2f29e4e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558b2f29e4c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558b2f29e490 <col:66> '_Bool' lvalue Var 0x558b2f29b158 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x558b2f29e828 <line:759:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f29e560 <col:3> '_Bool' lvalue Var 0x558b2f29b3b0 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f29e810 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558b2f29e7e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558b2f29e700 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558b2f29e620 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558b2f29e5d8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558b2f29e5c0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558b2f29e580 <col:20> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558b2f29e608 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558b2f29e5f0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558b2f29e5a0 <col:38> '_Bool' lvalue Var 0x558b2f29b158 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x558b2f29e6e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558b2f29e698 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558b2f29e680 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558b2f29e640 <col:56> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558b2f29e6c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558b2f29e6b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558b2f29e660 <col:74> '_Bool' lvalue Var 0x558b2f29b3b0 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558b2f29e798 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558b2f29e750 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558b2f29e720 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558b2f29e7c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558b2f29e7b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558b2f29e778 <col:102> '_Bool' lvalue Var 0x558b2f29b3b0 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x558b2f29e880 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558b2f29e868 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f29e848 <col:3> 'void ()' Function 0x558b2f241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558b2f29e8d8 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558b2f29e8c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f29e8a0 <col:3> 'void ()' Function 0x558b2f241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558b2f29e990 <line:762:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558b2f29e8f8 <col:3> 'int' lvalue Var 0x558b2f29a6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558b2f29e970 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558b2f29e958 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558b2f29e918 <col:22> 'int' lvalue Var 0x558b2f29a6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558b2f29e938 <col:41> 'int' 1
|   |-CallExpr 0x558b2f29e9e8 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558b2f29e9d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f29e9b0 <col:3> 'void ()' Function 0x558b2f241410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558b2f29ea60 <line:764:3, col:36>
|     `-CallExpr 0x558b2f29ea40 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558b2f29ea28 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558b2f29ea08 <col:10> 'void *(void)' Function 0x558b2f240e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558b2f29ebb8 prev 0x558b2f29a210 <line:766:1, line:788:1> line:766:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x558b2f29eb20 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558b2f29ffc0 <line:767:1, line:788:1>
|   |-CallExpr 0x558b2f29ec98 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558b2f29ec80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f29ec60 <col:3> 'void ()' Function 0x558b2f241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558b2f29ecf8 <line:769:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558b2f29ecb8 <col:3> 'int' lvalue Var 0x558b2f29ba98 'y' 'int'
|   | `-IntegerLiteral 0x558b2f29ecd8 <col:7> 'int' 1
|   |-CallExpr 0x558b2f29ed50 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558b2f29ed38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f29ed18 <col:3> 'void ()' Function 0x558b2f241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558b2f29eda8 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558b2f29ed90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f29ed70 <col:3> 'void ()' Function 0x558b2f241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558b2f29ee20 <line:772:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558b2f29edc8 <col:3> 'int' lvalue Var 0x558b2f29aa48 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x558b2f29ee08 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558b2f29ede8 <col:25> 'int' lvalue Var 0x558b2f29ba98 'y' 'int'
|   |-CallExpr 0x558b2f29ee78 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558b2f29ee60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f29ee40 <col:3> 'void ()' Function 0x558b2f241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558b2f29eed0 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558b2f29eeb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f29ee98 <col:3> 'void ()' Function 0x558b2f241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558b2f29ef48 <line:775:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558b2f29eef0 <col:3> 'int' lvalue Var 0x558b2f29ab68 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x558b2f29ef30 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558b2f29ef10 <col:25> 'int' lvalue Var 0x558b2f29bbb8 'z' 'int'
|   |-CallExpr 0x558b2f29efb0 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558b2f29ef88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f29ef68 <col:3> 'void ()' Function 0x558b2f241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558b2f29f008 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558b2f29eff0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f29efd0 <col:3> 'void ()' Function 0x558b2f241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558b2f29f2f0 <line:778:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x558b2f29f028 <col:3> 'int' lvalue Var 0x558b2f29aec8 'a' 'int'
|   | `-ConditionalOperator 0x558b2f29f2c0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x558b2f29f0e8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x558b2f29f0a0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x558b2f29f088 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x558b2f29f048 <col:7> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x558b2f29f0d0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x558b2f29f0b8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x558b2f29f068 <col:25> '_Bool' lvalue Var 0x558b2f29b1d0 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x558b2f29f2a8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558b2f29f108 <col:42> 'int' lvalue Var 0x558b2f29b618 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x558b2f29f288 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x558b2f29f258 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x558b2f29f1c8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558b2f29f180 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558b2f29f168 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558b2f29f128 <col:55> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558b2f29f1b0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558b2f29f198 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558b2f29f148 <col:73> '_Bool' lvalue Var 0x558b2f29b428 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x558b2f29f228 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558b2f29f1e8 <col:90> 'int' lvalue Var 0x558b2f29b710 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x558b2f29f240 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558b2f29f208 <col:102> 'int' lvalue Var 0x558b2f29aec8 'a' 'int'
|   |-BinaryOperator 0x558b2f29f4f8 <line:779:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f29f310 <col:3> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f29f4e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558b2f29f4b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558b2f29f3d0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558b2f29f388 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558b2f29f370 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558b2f29f330 <col:20> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558b2f29f3b8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558b2f29f3a0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558b2f29f350 <col:38> '_Bool' lvalue Var 0x558b2f29b1d0 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558b2f29f468 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558b2f29f420 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558b2f29f3f0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558b2f29f498 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558b2f29f480 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558b2f29f448 <col:66> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558b2f29f7e0 <line:780:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f29f518 <col:3> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f29f7c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558b2f29f798 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558b2f29f6b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558b2f29f5d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558b2f29f590 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558b2f29f578 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558b2f29f538 <col:20> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558b2f29f5c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558b2f29f5a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558b2f29f558 <col:38> '_Bool' lvalue Var 0x558b2f29b1d0 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x558b2f29f698 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558b2f29f650 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558b2f29f638 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558b2f29f5f8 <col:56> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558b2f29f680 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558b2f29f668 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558b2f29f618 <col:74> '_Bool' lvalue Var 0x558b2f29b428 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558b2f29f750 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558b2f29f708 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558b2f29f6d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558b2f29f780 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558b2f29f768 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558b2f29f730 <col:102> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x558b2f29f9e8 <line:781:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f29f800 <col:3> '_Bool' lvalue Var 0x558b2f29b1d0 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f29f9d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558b2f29f9a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558b2f29f8c0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558b2f29f878 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558b2f29f860 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558b2f29f820 <col:20> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558b2f29f8a8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558b2f29f890 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558b2f29f840 <col:38> '_Bool' lvalue Var 0x558b2f29b1d0 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558b2f29f958 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558b2f29f910 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558b2f29f8e0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558b2f29f988 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558b2f29f970 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558b2f29f938 <col:66> '_Bool' lvalue Var 0x558b2f29b1d0 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x558b2f29fcd0 <line:782:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f29fa08 <col:3> '_Bool' lvalue Var 0x558b2f29b428 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f29fcb8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558b2f29fc88 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558b2f29fba8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558b2f29fac8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558b2f29fa80 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558b2f29fa68 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558b2f29fa28 <col:20> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558b2f29fab0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558b2f29fa98 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558b2f29fa48 <col:38> '_Bool' lvalue Var 0x558b2f29b1d0 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x558b2f29fb88 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558b2f29fb40 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558b2f29fb28 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558b2f29fae8 <col:56> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558b2f29fb70 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558b2f29fb58 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558b2f29fb08 <col:74> '_Bool' lvalue Var 0x558b2f29b428 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558b2f29fc40 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558b2f29fbf8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558b2f29fbc8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558b2f29fc70 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558b2f29fc58 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558b2f29fc20 <col:102> '_Bool' lvalue Var 0x558b2f29b428 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x558b2f29fd28 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558b2f29fd10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f29fcf0 <col:3> 'void ()' Function 0x558b2f241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558b2f29fd80 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558b2f29fd68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f29fd48 <col:3> 'void ()' Function 0x558b2f241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558b2f29fe38 <line:785:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558b2f29fda0 <col:3> 'int' lvalue Var 0x558b2f29a6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558b2f29fe18 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558b2f29fe00 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558b2f29fdc0 <col:22> 'int' lvalue Var 0x558b2f29a6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558b2f29fde0 <col:41> 'int' 1
|   |-CallExpr 0x558b2f29fe90 <line:786:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558b2f29fe78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f29fe58 <col:3> 'void ()' Function 0x558b2f241410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558b2f29ff08 <line:787:3, col:36>
|     `-CallExpr 0x558b2f29fee8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558b2f29fed0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558b2f29feb0 <col:10> 'void *(void)' Function 0x558b2f240e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558b2f2a0120 prev 0x558b2f29a368 <line:789:1, line:824:1> line:789:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x558b2f2a0088 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558b2f2a3e38 <line:790:1, line:824:1>
|   |-CallExpr 0x558b2f2a0200 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558b2f2a01e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f2a01c8 <col:3> 'void ()' Function 0x558b2f241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558b2f2a0260 <line:792:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558b2f2a0220 <col:3> 'int' lvalue Var 0x558b2f29bbb8 'z' 'int'
|   | `-IntegerLiteral 0x558b2f2a0240 <col:7> 'int' 1
|   |-CallExpr 0x558b2f2a02b8 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558b2f2a02a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f2a0280 <col:3> 'void ()' Function 0x558b2f241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558b2f2a0310 <line:794:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558b2f2a02f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f2a02d8 <col:3> 'void ()' Function 0x558b2f241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558b2f2a0388 <line:795:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558b2f2a0330 <col:3> 'int' lvalue Var 0x558b2f29ac88 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x558b2f2a0370 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558b2f2a0350 <col:25> 'int' lvalue Var 0x558b2f29bbb8 'z' 'int'
|   |-CallExpr 0x558b2f2a03e0 <line:796:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558b2f2a03c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f2a03a8 <col:3> 'void ()' Function 0x558b2f241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558b2f2a0438 <line:797:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558b2f2a0420 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f2a0400 <col:3> 'void ()' Function 0x558b2f241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558b2f2a04e8 <line:798:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f2a0458 <col:3> '_Bool' lvalue Var 0x558b2f29bc50 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f2a04d0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x558b2f2a04b0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x558b2f2a0498 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x558b2f2a0478 <col:19> 'void *(void)' Function 0x558b2f240e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x558b2f2a0598 <line:799:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f2a0508 <col:3> '_Bool' lvalue Var 0x558b2f29bcc8 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f2a0580 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x558b2f2a0560 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x558b2f2a0548 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x558b2f2a0528 <col:19> 'void *(void)' Function 0x558b2f240e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x558b2f2a0610 <line:800:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f2a05b8 <col:3> '_Bool' lvalue Var 0x558b2f29af70 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f2a05f8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558b2f2a05d8 <col:21> '_Bool' lvalue Var 0x558b2f29bcc8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x558b2f2a0688 <line:801:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x558b2f2a0630 <col:3> 'int' lvalue Var 0x558b2f29aff0 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x558b2f2a0670 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558b2f2a0650 <col:15> 'int' lvalue Var 0x558b2f29aec8 'a' 'int'
|   |-BinaryOperator 0x558b2f2a0ac0 <line:802:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x558b2f2a06a8 <col:3> 'int' lvalue Var 0x558b2f29aec8 'a' 'int'
|   | `-ConditionalOperator 0x558b2f2a0a90 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x558b2f2a08b8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x558b2f2a07d8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x558b2f2a0700 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x558b2f2a06e8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x558b2f2a06c8 <col:8> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x558b2f2a07b8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x558b2f2a0750 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x558b2f2a0738 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x558b2f2a0718 <col:27> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x558b2f2a07a0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x558b2f2a0788 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x558b2f2a0768 <col:46> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x558b2f2a0898 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x558b2f2a0830 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x558b2f2a0818 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x558b2f2a07f8 <col:65> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x558b2f2a0880 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x558b2f2a0868 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x558b2f2a0848 <col:84> '_Bool' lvalue Var 0x558b2f29b4a0 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x558b2f2a0a78 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558b2f2a08d8 <col:101> 'int' lvalue Var 0x558b2f29aec8 'a' 'int'
|   |   `-ParenExpr 0x558b2f2a0a58 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x558b2f2a0a28 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x558b2f2a0998 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558b2f2a0950 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558b2f2a0938 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558b2f2a08f8 <col:106> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558b2f2a0980 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558b2f2a0968 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558b2f2a0918 <col:124> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x558b2f2a09f8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558b2f2a09b8 <col:141> 'int' lvalue Var 0x558b2f29b618 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x558b2f2a0a10 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558b2f2a09d8 <col:153> 'int' lvalue Var 0x558b2f29b710 'a$w_buff1' 'int'
|   |-BinaryOperator 0x558b2f2a1000 <line:803:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x558b2f2a0ae0 <col:3> 'int' lvalue Var 0x558b2f29b618 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x558b2f2a0fd0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x558b2f2a0f70 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x558b2f2a0f58 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x558b2f2a0b00 <col:15> '_Bool' lvalue Var 0x558b2f29bcc8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x558b2f2a0f88 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558b2f2a0b20 <col:31> 'int' lvalue Var 0x558b2f29b618 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x558b2f2a0f38 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x558b2f2a0f08 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x558b2f2a0d30 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x558b2f2a0c50 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x558b2f2a0b78 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x558b2f2a0b60 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x558b2f2a0b40 <col:45> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x558b2f2a0c30 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x558b2f2a0bc8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x558b2f2a0bb0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x558b2f2a0b90 <col:64> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x558b2f2a0c18 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x558b2f2a0c00 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x558b2f2a0be0 <col:83> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x558b2f2a0d10 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x558b2f2a0ca8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x558b2f2a0c90 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x558b2f2a0c70 <col:102> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x558b2f2a0cf8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x558b2f2a0ce0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x558b2f2a0cc0 <col:121> '_Bool' lvalue Var 0x558b2f29b4a0 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x558b2f2a0ef0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558b2f2a0d50 <col:138> 'int' lvalue Var 0x558b2f29b618 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x558b2f2a0ed0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x558b2f2a0ea0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x558b2f2a0e10 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x558b2f2a0dc8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x558b2f2a0db0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x558b2f2a0d70 <col:151> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x558b2f2a0df8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x558b2f2a0de0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x558b2f2a0d90 <col:169> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x558b2f2a0e70 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x558b2f2a0e30 <col:186> 'int' lvalue Var 0x558b2f29b618 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x558b2f2a0e88 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x558b2f2a0e50 <col:198> 'int' lvalue Var 0x558b2f29b618 'a$w_buff0' 'int'
|   |-BinaryOperator 0x558b2f2a1510 <line:804:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x558b2f2a1020 <col:3> 'int' lvalue Var 0x558b2f29b710 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x558b2f2a14e0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x558b2f2a14b0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x558b2f2a1498 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x558b2f2a1040 <col:15> '_Bool' lvalue Var 0x558b2f29bcc8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x558b2f2a14c8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558b2f2a1060 <col:31> 'int' lvalue Var 0x558b2f29b710 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x558b2f2a1478 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x558b2f2a1448 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x558b2f2a1270 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x558b2f2a1190 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x558b2f2a10b8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x558b2f2a10a0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x558b2f2a1080 <col:45> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x558b2f2a1170 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x558b2f2a1108 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x558b2f2a10f0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x558b2f2a10d0 <col:64> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x558b2f2a1158 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x558b2f2a1140 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x558b2f2a1120 <col:83> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x558b2f2a1250 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x558b2f2a11e8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x558b2f2a11d0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x558b2f2a11b0 <col:102> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x558b2f2a1238 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x558b2f2a1220 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x558b2f2a1200 <col:121> '_Bool' lvalue Var 0x558b2f29b4a0 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x558b2f2a1430 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558b2f2a1290 <col:138> 'int' lvalue Var 0x558b2f29b710 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x558b2f2a1410 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x558b2f2a13e0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x558b2f2a1350 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x558b2f2a1308 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x558b2f2a12f0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x558b2f2a12b0 <col:151> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x558b2f2a1338 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x558b2f2a1320 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x558b2f2a12d0 <col:169> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x558b2f2a13b0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x558b2f2a1370 <col:186> 'int' lvalue Var 0x558b2f29b710 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x558b2f2a13c8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x558b2f2a1390 <col:198> 'int' lvalue Var 0x558b2f29b710 'a$w_buff1' 'int'
|   |-BinaryOperator 0x558b2f2a1ab8 <line:805:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f2a1530 <col:3> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f2a1aa0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558b2f2a1a70 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x558b2f2a1a28 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558b2f2a1a10 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558b2f2a1550 <col:20> '_Bool' lvalue Var 0x558b2f29bcc8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558b2f2a1a58 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558b2f2a1a40 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558b2f2a1570 <col:36> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x558b2f2a19f0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x558b2f2a19c0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x558b2f2a1780 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x558b2f2a16a0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x558b2f2a15c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x558b2f2a15b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x558b2f2a1590 <col:55> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x558b2f2a1680 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x558b2f2a1618 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x558b2f2a1600 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x558b2f2a15e0 <col:74> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x558b2f2a1668 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x558b2f2a1650 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x558b2f2a1630 <col:93> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x558b2f2a1760 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x558b2f2a16f8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x558b2f2a16e0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x558b2f2a16c0 <col:112> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x558b2f2a1748 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x558b2f2a1730 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x558b2f2a1710 <col:131> '_Bool' lvalue Var 0x558b2f29b4a0 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x558b2f2a19a8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558b2f2a1990 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558b2f2a17a0 <col:148> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x558b2f2a1970 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x558b2f2a1940 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x558b2f2a1860 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558b2f2a1818 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558b2f2a1800 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558b2f2a17c0 <col:166> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558b2f2a1848 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558b2f2a1830 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558b2f2a17e0 <col:184> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x558b2f2a18f8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558b2f2a18b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558b2f2a1880 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x558b2f2a1928 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x558b2f2a1910 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x558b2f2a18d8 <col:212> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558b2f2a20a8 <line:806:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f2a1ad8 <col:3> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f2a2090 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558b2f2a2060 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x558b2f2a2018 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558b2f2a2000 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558b2f2a1af8 <col:20> '_Bool' lvalue Var 0x558b2f29bcc8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558b2f2a2048 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558b2f2a2030 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558b2f2a1b18 <col:36> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x558b2f2a1fe0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x558b2f2a1f88 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x558b2f2a1d28 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x558b2f2a1c48 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x558b2f2a1b70 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x558b2f2a1b58 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x558b2f2a1b38 <col:55> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x558b2f2a1c28 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x558b2f2a1bc0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x558b2f2a1ba8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x558b2f2a1b88 <col:74> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x558b2f2a1c10 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x558b2f2a1bf8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x558b2f2a1bd8 <col:93> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x558b2f2a1d08 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x558b2f2a1ca0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x558b2f2a1c88 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x558b2f2a1c68 <col:112> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x558b2f2a1cf0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x558b2f2a1cd8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x558b2f2a1cb8 <col:131> '_Bool' lvalue Var 0x558b2f29b4a0 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x558b2f2a1f70 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558b2f2a1f58 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558b2f2a1d48 <col:148> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x558b2f2a1f38 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x558b2f2a1f08 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x558b2f2a1e08 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558b2f2a1dc0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558b2f2a1da8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558b2f2a1d68 <col:166> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558b2f2a1df0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558b2f2a1dd8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558b2f2a1d88 <col:184> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x558b2f2a1ed8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558b2f2a1e58 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558b2f2a1e28 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x558b2f2a1ef0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x558b2f2a1eb0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x558b2f2a1e80 <col:219> 'int' 0
|   |-BinaryOperator 0x558b2f2a2650 <line:807:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f2a20c8 <col:3> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f2a2638 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558b2f2a2608 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x558b2f2a25c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558b2f2a25a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558b2f2a20e8 <col:20> '_Bool' lvalue Var 0x558b2f29bcc8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558b2f2a25f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558b2f2a25d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558b2f2a2108 <col:36> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x558b2f2a2588 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x558b2f2a2558 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x558b2f2a2318 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x558b2f2a2238 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x558b2f2a2160 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x558b2f2a2148 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x558b2f2a2128 <col:55> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x558b2f2a2218 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x558b2f2a21b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x558b2f2a2198 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x558b2f2a2178 <col:74> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x558b2f2a2200 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x558b2f2a21e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x558b2f2a21c8 <col:93> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x558b2f2a22f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x558b2f2a2290 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x558b2f2a2278 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x558b2f2a2258 <col:112> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x558b2f2a22e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x558b2f2a22c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x558b2f2a22a8 <col:131> '_Bool' lvalue Var 0x558b2f29b4a0 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x558b2f2a2540 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558b2f2a2528 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558b2f2a2338 <col:148> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x558b2f2a2508 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x558b2f2a24d8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x558b2f2a23f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558b2f2a23b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558b2f2a2398 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558b2f2a2358 <col:166> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558b2f2a23e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558b2f2a23c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558b2f2a2378 <col:184> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x558b2f2a2490 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558b2f2a2448 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558b2f2a2418 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x558b2f2a24c0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x558b2f2a24a8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x558b2f2a2470 <col:212> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x558b2f2a2c18 <line:808:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f2a2670 <col:3> '_Bool' lvalue Var 0x558b2f29b4a0 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f2a2c00 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558b2f2a2bd0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x558b2f2a2b88 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558b2f2a2b70 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558b2f2a2690 <col:20> '_Bool' lvalue Var 0x558b2f29bcc8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558b2f2a2bb8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558b2f2a2ba0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558b2f2a26b0 <col:36> '_Bool' lvalue Var 0x558b2f29b4a0 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x558b2f2a2b50 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x558b2f2a2b20 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x558b2f2a28c0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x558b2f2a27e0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x558b2f2a2708 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x558b2f2a26f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x558b2f2a26d0 <col:55> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x558b2f2a27c0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x558b2f2a2758 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x558b2f2a2740 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x558b2f2a2720 <col:74> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x558b2f2a27a8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x558b2f2a2790 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x558b2f2a2770 <col:93> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x558b2f2a28a0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x558b2f2a2838 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x558b2f2a2820 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x558b2f2a2800 <col:112> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x558b2f2a2888 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x558b2f2a2870 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x558b2f2a2850 <col:131> '_Bool' lvalue Var 0x558b2f29b4a0 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x558b2f2a2b08 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558b2f2a2af0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558b2f2a28e0 <col:148> '_Bool' lvalue Var 0x558b2f29b4a0 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x558b2f2a2ad0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x558b2f2a2aa0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x558b2f2a29a0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558b2f2a2958 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558b2f2a2940 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558b2f2a2900 <col:166> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558b2f2a2988 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558b2f2a2970 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558b2f2a2920 <col:184> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x558b2f2a2a70 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558b2f2a29f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558b2f2a29c0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x558b2f2a2a88 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x558b2f2a2a48 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x558b2f2a2a18 <col:219> 'int' 0
|   |-BinaryOperator 0x558b2f2a2c90 <line:809:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558b2f2a2c38 <col:3> 'int' lvalue Var 0x558b2f29ada8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x558b2f2a2c78 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558b2f2a2c58 <col:25> 'int' lvalue Var 0x558b2f29aec8 'a' 'int'
|   |-BinaryOperator 0x558b2f2a2dc0 <line:810:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x558b2f2a2cb0 <col:3> 'int' lvalue Var 0x558b2f29aec8 'a' 'int'
|   | `-ConditionalOperator 0x558b2f2a2d90 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x558b2f2a2d48 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x558b2f2a2d30 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x558b2f2a2cd0 <col:7> '_Bool' lvalue Var 0x558b2f29af70 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x558b2f2a2d60 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558b2f2a2cf0 <col:25> 'int' lvalue Var 0x558b2f29aff0 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x558b2f2a2d78 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x558b2f2a2d10 <col:37> 'int' lvalue Var 0x558b2f29aec8 'a' 'int'
|   |-BinaryOperator 0x558b2f2a2e58 <line:811:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f2a2de0 <col:3> '_Bool' lvalue Var 0x558b2f29af70 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x558b2f2a2e30 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x558b2f2a2e00 <col:28> 'int' 0
|   |-CallExpr 0x558b2f2a2eb0 <line:812:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558b2f2a2e98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f2a2e78 <col:3> 'void ()' Function 0x558b2f241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558b2f2a2f08 <line:813:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558b2f2a2ef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f2a2ed0 <col:3> 'void ()' Function 0x558b2f241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558b2f2a3210 <line:814:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x558b2f2a2f28 <col:3> 'int' lvalue Var 0x558b2f29aec8 'a' 'int'
|   | `-ConditionalOperator 0x558b2f2a31e0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x558b2f2a3008 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x558b2f2a2fa0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x558b2f2a2f88 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x558b2f2a2f48 <col:7> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x558b2f2a2ff0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x558b2f2a2fb8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x558b2f2a2f68 <col:25> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x558b2f2a31c8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558b2f2a3028 <col:42> 'int' lvalue Var 0x558b2f29b618 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x558b2f2a31a8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x558b2f2a3178 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x558b2f2a30e8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558b2f2a30a0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558b2f2a3088 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558b2f2a3048 <col:55> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558b2f2a30d0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558b2f2a30b8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558b2f2a3068 <col:73> '_Bool' lvalue Var 0x558b2f29b4a0 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x558b2f2a3148 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558b2f2a3108 <col:90> 'int' lvalue Var 0x558b2f29b710 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x558b2f2a3160 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558b2f2a3128 <col:102> 'int' lvalue Var 0x558b2f29aec8 'a' 'int'
|   |-BinaryOperator 0x558b2f2a3418 <line:815:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f2a3230 <col:3> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f2a3400 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558b2f2a33d0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558b2f2a32f0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558b2f2a32a8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558b2f2a3290 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558b2f2a3250 <col:20> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558b2f2a32d8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558b2f2a32c0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558b2f2a3270 <col:38> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x558b2f2a3388 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558b2f2a3340 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558b2f2a3310 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558b2f2a33b8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558b2f2a33a0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558b2f2a3368 <col:66> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558b2f2a3700 <line:816:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f2a3438 <col:3> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f2a36e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558b2f2a36b8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558b2f2a35d8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558b2f2a34f8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558b2f2a34b0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558b2f2a3498 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558b2f2a3458 <col:20> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558b2f2a34e0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558b2f2a34c8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558b2f2a3478 <col:38> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x558b2f2a35b8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558b2f2a3570 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558b2f2a3558 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558b2f2a3518 <col:56> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558b2f2a35a0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558b2f2a3588 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558b2f2a3538 <col:74> '_Bool' lvalue Var 0x558b2f29b4a0 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x558b2f2a3670 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558b2f2a3628 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558b2f2a35f8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558b2f2a36a0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558b2f2a3688 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558b2f2a3650 <col:102> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x558b2f2a3908 <line:817:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f2a3720 <col:3> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f2a38f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558b2f2a38c0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558b2f2a37e0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558b2f2a3798 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558b2f2a3780 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558b2f2a3740 <col:20> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558b2f2a37c8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558b2f2a37b0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558b2f2a3760 <col:38> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x558b2f2a3878 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558b2f2a3830 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558b2f2a3800 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558b2f2a38a8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558b2f2a3890 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558b2f2a3858 <col:66> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x558b2f2a3bf0 <line:818:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558b2f2a3928 <col:3> '_Bool' lvalue Var 0x558b2f29b4a0 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x558b2f2a3bd8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558b2f2a3ba8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558b2f2a3ac8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558b2f2a39e8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558b2f2a39a0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558b2f2a3988 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558b2f2a3948 <col:20> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558b2f2a39d0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558b2f2a39b8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558b2f2a3968 <col:38> '_Bool' lvalue Var 0x558b2f29b248 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x558b2f2a3aa8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558b2f2a3a60 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558b2f2a3a48 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558b2f2a3a08 <col:56> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558b2f2a3a90 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558b2f2a3a78 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558b2f2a3a28 <col:74> '_Bool' lvalue Var 0x558b2f29b4a0 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x558b2f2a3b60 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558b2f2a3b18 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558b2f2a3ae8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558b2f2a3b90 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558b2f2a3b78 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558b2f2a3b40 <col:102> '_Bool' lvalue Var 0x558b2f29b4a0 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x558b2f2a3c48 <line:819:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558b2f2a3c30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f2a3c10 <col:3> 'void ()' Function 0x558b2f241410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558b2f2a3ca0 <line:820:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558b2f2a3c88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f2a3c68 <col:3> 'void ()' Function 0x558b2f241350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558b2f2a3d58 <line:821:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558b2f2a3cc0 <col:3> 'int' lvalue Var 0x558b2f29a6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558b2f2a3d38 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558b2f2a3d20 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558b2f2a3ce0 <col:22> 'int' lvalue Var 0x558b2f29a6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558b2f2a3d00 <col:41> 'int' 1
|   |-CallExpr 0x558b2f2a3db0 <line:822:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558b2f2a3d98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558b2f2a3d78 <col:3> 'void ()' Function 0x558b2f241410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558b2f2a3e28 <line:823:3, col:36>
|     `-CallExpr 0x558b2f2a3e08 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558b2f2a3df0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558b2f2a3dd0 <col:10> 'void *(void)' Function 0x558b2f240e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558b2f2a4000 prev 0x558b2f29a430 <line:825:1, line:827:1> line:825:6 fence 'void ()'
| `-CompoundStmt 0x558b2f2a40a0 <line:826:1, line:827:1>
|-FunctionDecl 0x558b2f2a40d0 prev 0x558b2f29a4f0 <line:828:1, line:830:1> line:828:6 isync 'void ()'
| `-CompoundStmt 0x558b2f2a4170 <line:829:1, line:830:1>
|-FunctionDecl 0x558b2f2a41a0 prev 0x558b2f29a5b0 <line:831:1, line:833:1> line:831:6 lwfence 'void ()'
| `-CompoundStmt 0x558b2f2a4240 <line:832:1, line:833:1>
`-FunctionDecl 0x558b2f2a42a8 <line:834:1, line:860:1> line:834:5 main 'int ()'
  `-CompoundStmt 0x558b2f2a6350 <line:835:1, line:860:1>
    |-DeclStmt 0x558b2f2a43c0 <line:836:3, col:16>
    | `-VarDecl 0x558b2f2a4358 <col:3, col:13> col:13 used t99 'pthread_t':'unsigned long'
    |-CallExpr 0x558b2f2a45c8 <line:837:3, col:52> 'int'
    | |-ImplicitCastExpr 0x558b2f2a45b0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558b2f2a43d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558b2f2818f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558b2f2a4418 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558b2f2a43f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558b2f2a4358 't99' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558b2f2a4608 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558b2f2a4490 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x558b2f2a4468 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558b2f2a4430 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x558b2f2a4620 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558b2f2a44b0 <col:37> 'void *(void *)' Function 0x558b2f29bde0 'P0' 'void *(void *)'
    | `-ParenExpr 0x558b2f2a4530 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x558b2f2a4508 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558b2f2a44d0 <col:50> 'int' 0
    |-DeclStmt 0x558b2f2a46b0 <line:838:3, col:17>
    | `-VarDecl 0x558b2f2a4648 <col:3, col:13> col:13 used t100 'pthread_t':'unsigned long'
    |-CallExpr 0x558b2f2a4858 <line:839:3, col:53> 'int'
    | |-ImplicitCastExpr 0x558b2f2a4840 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558b2f2a46c8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558b2f2818f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558b2f2a4708 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558b2f2a46e8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558b2f2a4648 't100' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558b2f2a4898 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558b2f2a4780 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x558b2f2a4758 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558b2f2a4720 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x558b2f2a48b0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558b2f2a47a0 <col:38> 'void *(void *)' Function 0x558b2f29d830 'P1' 'void *(void *)'
    | `-ParenExpr 0x558b2f2a4820 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x558b2f2a47f8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558b2f2a47c0 <col:51> 'int' 0
    |-DeclStmt 0x558b2f2a4940 <line:840:3, col:17>
    | `-VarDecl 0x558b2f2a48d8 <col:3, col:13> col:13 used t101 'pthread_t':'unsigned long'
    |-CallExpr 0x558b2f2a4ae8 <line:841:3, col:53> 'int'
    | |-ImplicitCastExpr 0x558b2f2a4ad0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558b2f2a4958 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558b2f2818f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558b2f2a4998 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558b2f2a4978 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558b2f2a48d8 't101' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558b2f2a4b28 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558b2f2a4a10 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x558b2f2a49e8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558b2f2a49b0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x558b2f2a4b40 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558b2f2a4a30 <col:38> 'void *(void *)' Function 0x558b2f29ebb8 'P2' 'void *(void *)'
    | `-ParenExpr 0x558b2f2a4ab0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x558b2f2a4a88 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558b2f2a4a50 <col:51> 'int' 0
    |-DeclStmt 0x558b2f2a4bd0 <line:842:3, col:17>
    | `-VarDecl 0x558b2f2a4b68 <col:3, col:13> col:13 used t102 'pthread_t':'unsigned long'
    |-CallExpr 0x558b2f2a4d78 <line:843:3, col:53> 'int'
    | |-ImplicitCastExpr 0x558b2f2a4d60 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558b2f2a4be8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558b2f2818f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558b2f2a4c28 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558b2f2a4c08 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558b2f2a4b68 't102' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558b2f2a4db8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558b2f2a4ca0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x558b2f2a4c78 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558b2f2a4c40 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x558b2f2a4dd0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558b2f2a4cc0 <col:38> 'void *(void *)' Function 0x558b2f2a0120 'P3' 'void *(void *)'
    | `-ParenExpr 0x558b2f2a4d40 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x558b2f2a4d18 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558b2f2a4ce0 <col:51> 'int' 0
    |-CallExpr 0x558b2f2a4e20 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x558b2f2a4e08 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558b2f2a4de8 <col:3> 'void ()' Function 0x558b2f241350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x558b2f2a4ef0 <line:845:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x558b2f2a4e40 <col:3> '_Bool' lvalue Var 0x558b2f29b800 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x558b2f2a4ed8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x558b2f2a4eb8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x558b2f2a4ea0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x558b2f2a4e60 <col:21> 'int' lvalue Var 0x558b2f29a6e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x558b2f2a4e80 <col:41> 'int' 4
    |-CallExpr 0x558b2f2a4f48 <line:846:3, col:25> 'void'
    | `-ImplicitCastExpr 0x558b2f2a4f30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558b2f2a4f10 <col:3> 'void ()' Function 0x558b2f241410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x558b2f2a4fc0 <line:847:3, col:36> 'void'
    | |-ImplicitCastExpr 0x558b2f2a4fa8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558b2f2a4f68 <col:3> 'void (int)' Function 0x558b2f240ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x558b2f2a5010 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x558b2f2a4fe8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x558b2f2a4f88 <col:21> '_Bool' lvalue Var 0x558b2f29b800 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x558b2f2a5060 <line:848:3, col:27> 'void'
    | `-ImplicitCastExpr 0x558b2f2a5048 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558b2f2a5028 <col:3> 'void ()' Function 0x558b2f241350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x558b2f2a5348 <line:849:3, col:103> 'int' '='
    | |-DeclRefExpr 0x558b2f2a5080 <col:3> 'int' lvalue Var 0x558b2f29aec8 'a' 'int'
    | `-ConditionalOperator 0x558b2f2a5318 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x558b2f2a5140 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x558b2f2a50f8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x558b2f2a50e0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x558b2f2a50a0 <col:7> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x558b2f2a5128 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x558b2f2a5110 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x558b2f2a50c0 <col:25> '_Bool' lvalue Var 0x558b2f29b068 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x558b2f2a5300 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x558b2f2a5160 <col:42> 'int' lvalue Var 0x558b2f29b618 'a$w_buff0' 'int'
    |   `-ParenExpr 0x558b2f2a52e0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x558b2f2a52b0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x558b2f2a5220 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x558b2f2a51d8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x558b2f2a51c0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x558b2f2a5180 <col:55> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x558b2f2a5208 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x558b2f2a51f0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x558b2f2a51a0 <col:73> '_Bool' lvalue Var 0x558b2f29b2c0 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x558b2f2a5280 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x558b2f2a5240 <col:90> 'int' lvalue Var 0x558b2f29b710 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x558b2f2a5298 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x558b2f2a5260 <col:102> 'int' lvalue Var 0x558b2f29aec8 'a' 'int'
    |-BinaryOperator 0x558b2f2a5550 <line:850:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x558b2f2a5368 <col:3> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x558b2f2a5538 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558b2f2a5508 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x558b2f2a5428 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x558b2f2a53e0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x558b2f2a53c8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x558b2f2a5388 <col:20> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x558b2f2a5410 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x558b2f2a53f8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x558b2f2a53a8 <col:38> '_Bool' lvalue Var 0x558b2f29b068 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558b2f2a54c0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558b2f2a5478 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558b2f2a5448 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x558b2f2a54f0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558b2f2a54d8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558b2f2a54a0 <col:66> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x558b2f2a5838 <line:851:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x558b2f2a5570 <col:3> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x558b2f2a5820 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558b2f2a57f0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x558b2f2a5710 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x558b2f2a5630 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x558b2f2a55e8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x558b2f2a55d0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x558b2f2a5590 <col:20> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x558b2f2a5618 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x558b2f2a5600 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x558b2f2a55b0 <col:38> '_Bool' lvalue Var 0x558b2f29b068 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x558b2f2a56f0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x558b2f2a56a8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x558b2f2a5690 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x558b2f2a5650 <col:56> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x558b2f2a56d8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x558b2f2a56c0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x558b2f2a5670 <col:74> '_Bool' lvalue Var 0x558b2f29b2c0 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558b2f2a57a8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558b2f2a5760 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558b2f2a5730 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x558b2f2a57d8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558b2f2a57c0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558b2f2a5788 <col:102> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x558b2f2a5a40 <line:852:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x558b2f2a5858 <col:3> '_Bool' lvalue Var 0x558b2f29b068 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x558b2f2a5a28 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558b2f2a59f8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x558b2f2a5918 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x558b2f2a58d0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x558b2f2a58b8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x558b2f2a5878 <col:20> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x558b2f2a5900 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x558b2f2a58e8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x558b2f2a5898 <col:38> '_Bool' lvalue Var 0x558b2f29b068 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558b2f2a59b0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558b2f2a5968 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558b2f2a5938 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x558b2f2a59e0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558b2f2a59c8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558b2f2a5990 <col:66> '_Bool' lvalue Var 0x558b2f29b068 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x558b2f2a5d28 <line:853:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x558b2f2a5a60 <col:3> '_Bool' lvalue Var 0x558b2f29b2c0 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x558b2f2a5d10 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558b2f2a5ce0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x558b2f2a5c00 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x558b2f2a5b20 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x558b2f2a5ad8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x558b2f2a5ac0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x558b2f2a5a80 <col:20> '_Bool' lvalue Var 0x558b2f29b690 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x558b2f2a5b08 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x558b2f2a5af0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x558b2f2a5aa0 <col:38> '_Bool' lvalue Var 0x558b2f29b068 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x558b2f2a5be0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x558b2f2a5b98 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x558b2f2a5b80 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x558b2f2a5b40 <col:56> '_Bool' lvalue Var 0x558b2f29b788 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x558b2f2a5bc8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x558b2f2a5bb0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x558b2f2a5b60 <col:74> '_Bool' lvalue Var 0x558b2f29b2c0 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558b2f2a5c98 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558b2f2a5c50 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558b2f2a5c20 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x558b2f2a5cc8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558b2f2a5cb0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558b2f2a5c78 <col:102> '_Bool' lvalue Var 0x558b2f29b2c0 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x558b2f2a5d80 <line:854:3, col:25> 'void'
    | `-ImplicitCastExpr 0x558b2f2a5d68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558b2f2a5d48 <col:3> 'void ()' Function 0x558b2f241410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x558b2f2a5dd8 <line:855:3, col:27> 'void'
    | `-ImplicitCastExpr 0x558b2f2a5dc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558b2f2a5da0 <col:3> 'void ()' Function 0x558b2f241350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x558b2f2a61f8 <line:856:3, col:187> '_Bool' '='
    | |-DeclRefExpr 0x558b2f2a5df8 <col:3> '_Bool' lvalue Var 0x558b2f29b878 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x558b2f2a61e0 <col:21, col:187> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x558b2f2a61c8 <col:21, col:187> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x558b2f2a61a8 <col:22, col:187> 'int'
    |       `-BinaryOperator 0x558b2f2a6188 <col:23, col:186> 'int' '&&'
    |         |-BinaryOperator 0x558b2f2a60f0 <col:23, col:158> 'int' '&&'
    |         | |-BinaryOperator 0x558b2f2a6058 <col:23, col:130> 'int' '&&'
    |         | | |-BinaryOperator 0x558b2f2a5fa0 <col:23, col:102> 'int' '&&'
    |         | | | |-BinaryOperator 0x558b2f2a5f08 <col:23, col:74> 'int' '&&'
    |         | | | | |-BinaryOperator 0x558b2f2a5e70 <col:23, col:46> 'int' '=='
    |         | | | | | |-ImplicitCastExpr 0x558b2f2a5e58 <col:23> 'int' <LValueToRValue>
    |         | | | | | | `-DeclRefExpr 0x558b2f2a5e18 <col:23> 'int' lvalue Var 0x558b2f29a808 '__unbuffered_p0_EAX' 'int'
    |         | | | | | `-IntegerLiteral 0x558b2f2a5e38 <col:46> 'int' 0
    |         | | | | `-BinaryOperator 0x558b2f2a5ee8 <col:51, col:74> 'int' '=='
    |         | | | |   |-ImplicitCastExpr 0x558b2f2a5ed0 <col:51> 'int' <LValueToRValue>
    |         | | | |   | `-DeclRefExpr 0x558b2f2a5e90 <col:51> 'int' lvalue Var 0x558b2f29a928 '__unbuffered_p1_EAX' 'int'
    |         | | | |   `-IntegerLiteral 0x558b2f2a5eb0 <col:74> 'int' 0
    |         | | | `-BinaryOperator 0x558b2f2a5f80 <col:79, col:102> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x558b2f2a5f68 <col:79> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x558b2f2a5f28 <col:79> 'int' lvalue Var 0x558b2f29aa48 '__unbuffered_p2_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x558b2f2a5f48 <col:102> 'int' 1
    |         | | `-BinaryOperator 0x558b2f2a6038 <col:107, col:130> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x558b2f2a6020 <col:107> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x558b2f2a5fc0 <col:107> 'int' lvalue Var 0x558b2f29ab68 '__unbuffered_p2_EBX' 'int'
    |         | |   `-IntegerLiteral 0x558b2f2a5fe0 <col:130> 'int' 0
    |         | `-BinaryOperator 0x558b2f2a60d0 <col:135, col:158> 'int' '=='
    |         |   |-ImplicitCastExpr 0x558b2f2a60b8 <col:135> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x558b2f2a6078 <col:135> 'int' lvalue Var 0x558b2f29ac88 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x558b2f2a6098 <col:158> 'int' 1
    |         `-BinaryOperator 0x558b2f2a6168 <col:163, col:186> 'int' '=='
    |           |-ImplicitCastExpr 0x558b2f2a6150 <col:163> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x558b2f2a6110 <col:163> 'int' lvalue Var 0x558b2f29ada8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x558b2f2a6130 <col:186> 'int' 0
    |-CallExpr 0x558b2f2a6250 <line:857:3, col:25> 'void'
    | `-ImplicitCastExpr 0x558b2f2a6238 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558b2f2a6218 <col:3> 'void ()' Function 0x558b2f241410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x558b2f2a62c8 <line:858:3, col:36> 'void'
    | |-ImplicitCastExpr 0x558b2f2a62b0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558b2f2a6270 <col:3> 'void (int)' Function 0x558b2f2410d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x558b2f2a6308 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x558b2f2a62f0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x558b2f2a6290 <col:21> '_Bool' lvalue Var 0x558b2f29b878 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x558b2f2a6340 <line:859:3, col:10>
      `-IntegerLiteral 0x558b2f2a6320 <col:10> 'int' 0
