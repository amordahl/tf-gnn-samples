TranslationUnitDecl 0x560c7403bf88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x560c7403c848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x560c7403c520 '__int128'
|-TypedefDecl 0x560c7403c8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x560c7403c540 'unsigned __int128'
|-TypedefDecl 0x560c7403cbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x560c7403c990 'struct __NSConstantString_tag'
|   `-Record 0x560c7403c910 '__NSConstantString_tag'
|-TypedefDecl 0x560c7403cc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x560c7403cc20 'char *'
|   `-BuiltinType 0x560c7403c020 'char'
|-TypedefDecl 0x560c7407bb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x560c7403cf00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x560c7403cd40 'struct __va_list_tag'
|     `-Record 0x560c7403ccc0 '__va_list_tag'
|-FunctionDecl 0x560c7407bca0 <pthread-wmm/safe001_pso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x560c7407bbd0 <col:31> col:34 'int'
|-FunctionDecl 0x560c7407be68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x560c7407bf90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x560c7407c0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x560c7407c048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x560c7407c308 <col:40, col:99>
|   |-IfStmt 0x560c7407c2d8 <col:42, col:88>
|   | |-UnaryOperator 0x560c7407c1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x560c7407c1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x560c7407c180 <col:47> 'int' lvalue ParmVar 0x560c7407c048 'expression' 'int'
|   | `-CompoundStmt 0x560c7407c2c0 <col:59, col:88>
|   |   `-LabelStmt 0x560c7407c2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x560c7407c238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x560c7407c220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x560c7407c1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x560c7407bf90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x560c7407c2f0 <col:89>
|   `-ReturnStmt 0x560c7407c2f8 <col:91>
|-FunctionDecl 0x560c7407c350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x560c7407c410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x560c7407c790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560c7407c4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x560c7407c548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x560c7407c5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560c7407c648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560c7407c850 <line:10:22>
|-FunctionDecl 0x560c740a28a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560c7407c8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x560c7407c940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x560c7407c9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560c7407ca40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560c740a2960 <line:13:22>
|-FunctionDecl 0x560c740a2c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560c740a29d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x560c740a2a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x560c740a2ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x560c740a2cc8 <line:15:22>
|-TypedefDecl 0x560c740a2d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x560c7403c0e0 'unsigned char'
|-TypedefDecl 0x560c740a2da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x560c7403c100 'unsigned short'
|-TypedefDecl 0x560c740a2e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x560c7403c120 'unsigned int'
|-TypedefDecl 0x560c740a2e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x560c7403c140 'unsigned long'
|-TypedefDecl 0x560c740a2ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x560c7403c040 'signed char'
|-TypedefDecl 0x560c740a2f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x560c7403c0e0 'unsigned char'
|-TypedefDecl 0x560c740a2fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x560c7403c060 'short'
|-TypedefDecl 0x560c740a3048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x560c7403c100 'unsigned short'
|-TypedefDecl 0x560c740a30b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x560c7403c080 'int'
|-TypedefDecl 0x560c740a3128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x560c7403c120 'unsigned int'
|-TypedefDecl 0x560c740a3198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x560c7403c0a0 'long'
|-TypedefDecl 0x560c740a3208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x560c7403c140 'unsigned long'
|-TypedefDecl 0x560c740a3278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x560c7403c0a0 'long'
|-TypedefDecl 0x560c740a32e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x560c7403c140 'unsigned long'
|-TypedefDecl 0x560c740a3358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x560c7403c140 'unsigned long'
|-TypedefDecl 0x560c740a33c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x560c7403c120 'unsigned int'
|-TypedefDecl 0x560c740a3438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x560c7403c120 'unsigned int'
|-TypedefDecl 0x560c740a34a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x560c7403c140 'unsigned long'
|-TypedefDecl 0x560c740a3518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x560c7403c140 'unsigned long'
|-TypedefDecl 0x560c740a3588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x560c7403c120 'unsigned int'
|-TypedefDecl 0x560c740a35f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x560c7403c140 'unsigned long'
|-TypedefDecl 0x560c740a3668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x560c7403c0a0 'long'
|-TypedefDecl 0x560c740a36d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x560c7403c0a0 'long'
|-TypedefDecl 0x560c740a3748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x560c7403c080 'int'
|-RecordDecl 0x560c740a37a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x560c740a3918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x560c740a39d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x560c740a3970 'struct __fsid_t' sugar
|   `-RecordType 0x560c740a3820 '__fsid_t'
|     `-Record 0x560c740a37a0 ''
|-TypedefDecl 0x560c740a3a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x560c7403c0a0 'long'
|-TypedefDecl 0x560c740a3ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x560c7403c140 'unsigned long'
|-TypedefDecl 0x560c740a3b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x560c7403c140 'unsigned long'
|-TypedefDecl 0x560c740a3ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x560c7403c120 'unsigned int'
|-TypedefDecl 0x560c740a3c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x560c7403c0a0 'long'
|-TypedefDecl 0x560c740a3c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x560c7403c120 'unsigned int'
|-TypedefDecl 0x560c740a3cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x560c7403c0a0 'long'
|-TypedefDecl 0x560c740a3d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x560c7403c080 'int'
|-TypedefDecl 0x560c740a3dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x560c7403c080 'int'
|-TypedefDecl 0x560c740a3e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x560c7403c080 'int'
|-TypedefDecl 0x560c740a3eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x560c7403c7a0 'void *'
|   `-BuiltinType 0x560c7403bfe0 'void'
|-TypedefDecl 0x560c740a3f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x560c7403c0a0 'long'
|-TypedefDecl 0x560c740a3f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x560c7403c0a0 'long'
|-TypedefDecl 0x560c740a4008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x560c7403c0a0 'long'
|-TypedefDecl 0x560c740a4078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x560c7403c140 'unsigned long'
|-TypedefDecl 0x560c740a40e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x560c7403c140 'unsigned long'
|-TypedefDecl 0x560c740a4158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x560c7403c140 'unsigned long'
|-TypedefDecl 0x560c740a41c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x560c7403c140 'unsigned long'
|-TypedefDecl 0x560c740a4238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x560c7403c0a0 'long'
|-TypedefDecl 0x560c740a42a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x560c7403c0a0 'long'
|-TypedefDecl 0x560c740a4318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x560c7403c0a0 'long'
|-TypedefDecl 0x560c740a4388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x560c7403c140 'unsigned long'
|-TypedefDecl 0x560c740a4418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x560c740a43e0 '__off64_t' sugar
|   |-Typedef 0x560c740a36d8 '__off64_t'
|   `-BuiltinType 0x560c7403c0a0 'long'
|-TypedefDecl 0x560c740a4510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x560c740a44d0 '__quad_t *'
|   `-TypedefType 0x560c740a4470 '__quad_t' sugar
|     |-Typedef 0x560c740a3278 '__quad_t'
|     `-BuiltinType 0x560c7403c0a0 'long'
|-TypedefDecl 0x560c740a4580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x560c7403cc20 'char *'
|   `-BuiltinType 0x560c7403c020 'char'
|-TypedefDecl 0x560c740a45f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x560c7403c0a0 'long'
|-TypedefDecl 0x560c740a4660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x560c7403c120 'unsigned int'
|-FunctionDecl 0x560c740a47a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x560c740a46d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x560c740a4ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x560c740a4ad8 <line:72:3, col:34>
|     `-CallExpr 0x560c740a4a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x560c740a4a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560c740a4a10 <col:10> '<builtin fn type>' Function 0x560c740a4880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x560c740a4ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x560c740a4a30 <col:29> 'unsigned int' lvalue ParmVar 0x560c740a46d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x560c740a4880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x560c740a4920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x560c740a4990 <col:10> Implicit
| `-ConstAttr 0x560c740a49e8 <col:10> Implicit
|-FunctionDecl 0x560c740a4c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x560c740a4b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x560c740a4f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x560c740a4f48 <line:77:3, col:34>
|     `-CallExpr 0x560c740a4f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x560c740a4ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560c740a4e78 <col:10> '<builtin fn type>' Function 0x560c740a4ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x560c740a4f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x560c740a4e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x560c740a4b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x560c740a4ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x560c740a4d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x560c740a4df8 <col:10> Implicit
| `-ConstAttr 0x560c740a4e50 <col:10> Implicit
|-TypedefDecl 0x560c740a4f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x560c7403c140 'unsigned long'
|-TypedefDecl 0x560c740a5018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x560c740a4fe0 '__time_t' sugar
|   |-Typedef 0x560c740a3c18 '__time_t'
|   `-BuiltinType 0x560c7403c0a0 'long'
|-RecordDecl 0x560c740a5070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x560c740a5128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x560c740a51b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x560c740a5248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x560c740a5210 '__pid_t' sugar
|   |-Typedef 0x560c740a3748 '__pid_t'
|   `-BuiltinType 0x560c7403c080 'int'
|-RecordDecl 0x560c740a52a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x560c740a5360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x560c740a53b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x560c740a5470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x560c740a54d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x560c7403c140 'unsigned long'
|-RecordDecl 0x560c740a5530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x560c740a57c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x560c740a78b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x560c740a5810 'struct cpu_set_t' sugar
|   `-RecordType 0x560c740a55b0 'cpu_set_t'
|     `-Record 0x560c740a5530 ''
|-FunctionDecl 0x560c740a7b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x560c740a7958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560c740a7a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x560c740a7c38 <line:107:19>
|-FunctionDecl 0x560c740a7e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x560c740a7ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x560c740a7eb8 <col:69>
|-FunctionDecl 0x560c740a8030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x560c740a7f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x560c740a80d8 <col:64>
|-FunctionDecl 0x560c740a8398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x560c740a8140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560c740a8278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560c740a8448 <line:113:22>
|-FunctionDecl 0x560c740a86c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x560c740a84b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560c740a85a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x560c740a8778 <col:88>
|-FunctionDecl 0x560c740a8a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560c740a87e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560c740a88c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x560c740a8950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560c740a8b50 <col:62>
|-FunctionDecl 0x560c740a8cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x560c740a8bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x560c740a8d70 <col:63>
|-FunctionDecl 0x560c740a8e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x560c740a8f38 <col:47>
|-FunctionDecl 0x560c740a9040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x560c740a8fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560c740a90e8 <col:69>
|-FunctionDecl 0x560c740a91f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x560c740a9158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560c740a9298 <col:69>
|-FunctionDecl 0x560c740a9558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560c740a9300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560c740a9438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x560c740a9608 <col:88>
|-TypedefDecl 0x560c740a9698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x560c740a9660 '__clock_t' sugar
|   |-Typedef 0x560c740a3a58 '__clock_t'
|   `-BuiltinType 0x560c7403c0a0 'long'
|-TypedefDecl 0x560c740a9728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x560c740a96f0 '__clockid_t' sugar
|   |-Typedef 0x560c740a3e48 '__clockid_t'
|   `-BuiltinType 0x560c7403c080 'int'
|-TypedefDecl 0x560c740a97b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x560c740a9780 '__timer_t' sugar
|   |-Typedef 0x560c740a3eb8 '__timer_t'
|   `-PointerType 0x560c7403c7a0 'void *'
|     `-BuiltinType 0x560c7403bfe0 'void'
|-RecordDecl 0x560c740a9810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x560c740a98e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x560c740a9950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x560c740a99b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x560c740a9a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x560c740a9a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x560c740a9af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x560c740a9b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x560c740a9bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x560c740a9c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x560c740a9c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x560c740a9cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x560c740a9d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x560c740a9e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x560c740a9e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x560c740a9f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x560c740aa100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x560c740aa1a0 <col:45>
|-FunctionDecl 0x560c740aa380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x560c740aa270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x560c740aa428 <col:54>
|-FunctionDecl 0x560c740aa628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x560c740aa490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x560c740aa508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x560c740aa6d8 <line:157:22>
| `-ConstAttr 0x560c740aa730 <col:63>
|-FunctionDecl 0x560c740ab560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560c740aa828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560c740ab608 <col:56>
|-FunctionDecl 0x560c740ab9b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x560c740ab678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x560c740ab6f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560c740ab770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x560c740ab868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x560c740aba70 <col:54>
|-RecordDecl 0x560c740abac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x560c740abb78 parent 0x560c7403bf88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x560c740abdd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x560c740abe78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x560c740abee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x560c740abf48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x560c740ac038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x560c740ac158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x560c740ac100 'struct __locale_struct *'
|   `-ElaboratedType 0x560c740ac090 'struct __locale_struct' sugar
|     `-RecordType 0x560c740abb50 'struct __locale_struct'
|       `-Record 0x560c740abac8 '__locale_struct'
|-TypedefDecl 0x560c740ac208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x560c740ac1d0 '__locale_t' sugar
|   |-Typedef 0x560c740ac158 '__locale_t'
|   `-PointerType 0x560c740ac100 'struct __locale_struct *'
|     `-ElaboratedType 0x560c740ac090 'struct __locale_struct' sugar
|       `-RecordType 0x560c740abb50 'struct __locale_struct'
|         `-Record 0x560c740abac8 '__locale_struct'
|-FunctionDecl 0x560c740ac610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x560c740ac278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x560c740ac2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560c740ac370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x560c740ac400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560c740ac478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x560c740ac6d8 <col:40>
|-FunctionDecl 0x560c740ac8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560c740ac7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x560c740ac970 <col:66>
|-FunctionDecl 0x560c740aca80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560c740ac9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x560c740acb28 <col:69>
|-FunctionDecl 0x560c740acd58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560c740acb90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560c740acc20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560c740ace08 <col:52>
|-FunctionDecl 0x560c740acfb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560c740ace70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560c740acf00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560c740ad060 <col:55>
|-FunctionDecl 0x560c740ad1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x560c740ad0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x560c740ad2a0 <col:62>
|-FunctionDecl 0x560c740ad418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x560c740ad308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x560c740ad4c0 <col:60>
|-FunctionDecl 0x560c740ad718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560c740ad578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560c740ad5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x560c740ad7c8 <col:44>
|-FunctionDecl 0x560c740ad9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560c740ad830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560c740ad8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x560c740ada88 <col:49>
|-VarDecl 0x560c740adb88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x560c740adc08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x560c740adc88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x560c740add50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x560c740ade80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x560c740adf20 <col:42>
|-VarDecl 0x560c740adf90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x560c740ae010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x560c740ae198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x560c740ae088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x560c740ae240 <col:57>
|-FunctionDecl 0x560c740ae350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560c740ae2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560c740ae3f8 <col:56>
|-FunctionDecl 0x560c740af540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560c740ae478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x560c740af5e8 <col:59>
|-FunctionDecl 0x560c740af6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x560c740af658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x560c740af798 <col:48>
| `-ConstAttr 0x560c740af7f0 <col:89>
|-FunctionDecl 0x560c740afa58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560c740af8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x560c740af938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x560c740afcb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560c740afb48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560c740afbd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x560c740afd68 <col:88>
|-FunctionDecl 0x560c740aff00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560c740afdd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560c740afe60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x560c740affb0 <col:88>
|-FunctionDecl 0x560c740b01c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x560c740b0018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560c740b00a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x560c740b0278 <line:208:22>
|-FunctionDecl 0x560c740b05e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560c740b02e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560c740b0360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x560c740b03f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x560c740b0480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x560c740b08e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x560c740b06e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x560c740b07c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x560c740b0998 <col:85>
|-FunctionDecl 0x560c740b0d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x560c740b0a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560c740b0b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x560c740b0c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x560c740b0e40 <col:52>
|-FunctionDecl 0x560c740b0fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x560c740b0ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560c740b1060 <col:61>
|-FunctionDecl 0x560c740b1560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x560c740b10c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560c740b1148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x560c740b1278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x560c740b1368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x560c740b1620 <col:62>
|-FunctionDecl 0x560c740b1838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x560c740b1688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560c740b1718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x560c740b18e8 <line:221:22>
|-FunctionDecl 0x560c740b19e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x560c740b1950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560c740b1a90 <col:65>
|-TypedefDecl 0x560c740b1b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x560c7403c140 'unsigned long'
|-RecordDecl 0x560c740b1b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x560c740b1ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560c740b1d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560c740b1db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x560c740b1d60 'union pthread_attr_t' sugar
|   `-RecordType 0x560c740b1be0 'union pthread_attr_t'
|     `-Record 0x560c740b1b58 'pthread_attr_t'
|-RecordDecl 0x560c740b1e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x560c740b1f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x560c740b2000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x560c740b20b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x560c740b2050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x560c740b1e90 'struct __pthread_internal_list'
|     `-Record 0x560c740b1e10 '__pthread_internal_list'
|-RecordDecl 0x560c740b2120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x560c740b21c8 parent 0x560c7403bf88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x560c740b22a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560c740b2308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x560c740b2370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x560c740b23d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x560c740b2440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x560c740b24a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x560c740b6580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x560c740b6630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x560c740b6720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x560c740b6788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560c740b6910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x560c740b68b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x560c740b21a0 'pthread_mutex_t'
|     `-Record 0x560c740b2120 ''
|-RecordDecl 0x560c740b6980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x560c740b6ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560c740b6b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560c740b6be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x560c740b6b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x560c740b6a00 'pthread_mutexattr_t'
|     `-Record 0x560c740b6980 ''
|-RecordDecl 0x560c740b6c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x560c740b6cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x560c740b6dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560c740b6e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x560c740b6e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x560c740b6ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x560c740b6f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x560c740b6fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x560c740b7030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x560c740b7098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x560c740b7150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe001_pso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe001_pso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x560c740b7240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x560c740b72a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x560c740b73e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x560c740b7380 'union pthread_cond_t' sugar
|   `-RecordType 0x560c740b6cd0 'pthread_cond_t'
|     `-Record 0x560c740b6c50 ''
|-RecordDecl 0x560c740b7450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x560c740b7590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560c740b75f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560c740b76b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x560c740b7650 'union pthread_condattr_t' sugar
|   `-RecordType 0x560c740b74d0 'pthread_condattr_t'
|     `-Record 0x560c740b7450 ''
|-TypedefDecl 0x560c740b7738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x560c7403c120 'unsigned int'
|-TypedefDecl 0x560c740b77a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x560c7403c080 'int'
|-RecordDecl 0x560c740b7800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x560c740b78a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x560c740b7970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560c740b79d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x560c740b7a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x560c740b7aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x560c740b7b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x560c740b7b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x560c740b7be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x560c740b7c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x560c740b7cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x560c740b7d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x560c740b7d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x560c740b7e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe001_pso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe001_pso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x560c740b7ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560c740b7f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560c740b8090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x560c740b8030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x560c740b7880 'pthread_rwlock_t'
|     `-Record 0x560c740b7800 ''
|-RecordDecl 0x560c740b8100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x560c740b8240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x560c740b82a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560c740b8360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x560c740b8300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x560c740b8180 'pthread_rwlockattr_t'
|     `-Record 0x560c740b8100 ''
|-TypedefDecl 0x560c740b83e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x560c7403c084 'volatile int' volatile
|   `-BuiltinType 0x560c7403c080 'int'
|-RecordDecl 0x560c740b8440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x560c740ba5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x560c740ba618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560c740ba6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x560c740ba670 'union pthread_barrier_t' sugar
|   `-RecordType 0x560c740b84c0 'pthread_barrier_t'
|     `-Record 0x560c740b8440 ''
|-RecordDecl 0x560c740ba740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x560c740ba840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560c740ba8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560c740ba960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x560c740ba900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x560c740ba7c0 'pthread_barrierattr_t'
|     `-Record 0x560c740ba740 ''
|-TypedefDecl 0x560c740baa78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x560c740baa10 'long [8]' 8 
|   `-BuiltinType 0x560c7403c0a0 'long'
|-EnumDecl 0x560c740baad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x560c740bab98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x560c740babe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x560c740bac38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x560c740bad08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x560c740bad58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x560c740bada8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x560c740badf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x560c740bae80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x560c740bae68 <col:26> 'int'
| |   `-DeclRefExpr 0x560c740bae48 <col:26> 'int' EnumConstant 0x560c740bad08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x560c740baf08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x560c740baef0 <col:29> 'int'
| |   `-DeclRefExpr 0x560c740baed0 <col:29> 'int' EnumConstant 0x560c740bad58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x560c740baf90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x560c740baf78 <col:30> 'int'
| |   `-DeclRefExpr 0x560c740baf58 <col:30> 'int' EnumConstant 0x560c740bada8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x560c740bb018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x560c740bb000 <col:27> 'int'
|     `-DeclRefExpr 0x560c740bafe0 <col:27> 'int' EnumConstant 0x560c740bae80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x560c740bb068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x560c740bb138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x560c740bb1c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x560c740bb1a8 <col:30> 'int'
| |   `-DeclRefExpr 0x560c740bb188 <col:30> 'int' EnumConstant 0x560c740bb138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x560c740bb210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x560c740bb298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x560c740bb280 <col:29> 'int'
|     `-DeclRefExpr 0x560c740bb260 <col:29> 'int' EnumConstant 0x560c740bb210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x560c740bb2e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x560c740bb3b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x560c740bb408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x560c740bb458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x560c740bb4a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x560c740bb5c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x560c740bb610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x560c740bb660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x560c740bb6e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x560c740bb6d0 <col:31> 'int'
|     `-DeclRefExpr 0x560c740bb6b0 <col:31> 'int' EnumConstant 0x560c740bb5c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x560c740bb738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x560c740bb808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x560c740bb858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x560c740bb8a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x560c740bb978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x560c740bb9c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x560c740bba18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x560c740bbae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x560c740bbb38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x560c740bbb88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x560c740bbdc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x560c740bbe30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x560c740bbe98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x560c740bbfb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x560c740bc008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x560c740bc0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x560c740bc128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x560c740bc178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x560c740bc248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x560c740bc298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x560c740bc8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x560c740bc390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x560c740bc4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560c740bc6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x560c740bc760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x560c740bc9b8 <col:47>
| |-NonNullAttr 0x560c740bca10 <col:77, col:94> 1 3
| `-CallbackAttr 0x560c740bca48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x560c740bcb70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x560c740bcaa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x560c740bcdc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x560c740bcc28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x560c740bcca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x560c740bcf98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x560c740bce88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x560c740bd040 <col:60>
|-FunctionDecl 0x560c740bd190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x560c740bd230 <col:54>
| `-ConstAttr 0x560c740bd288 <col:95>
|-FunctionDecl 0x560c740bd458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x560c740bd2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560c740bd338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x560c740bd508 <line:394:19>
| `-ConstAttr 0x560c740bd560 <col:60>
|-FunctionDecl 0x560c740bdf68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560c740bde30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560c740be010 <col:71>
| `-NonNullAttr 0x560c740be068 <col:112, col:126> 1
|-FunctionDecl 0x560c740be170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560c740be0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560c740be218 <line:397:22>
| `-NonNullAttr 0x560c740be270 <col:63, col:77> 1
|-FunctionDecl 0x560c740be498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x560c740be2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560c740be338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x560c740be548 <line:400:22>
| `-NonNullAttr 0x560c740be5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x560c740be7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560c740be5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560c740be668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x560c740be858 <line:403:22>
| `-NonNullAttr 0x560c740be8b0 <col:63, col:77> 1
|-FunctionDecl 0x560c740beb08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x560c740be8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560c740be9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x560c740bebb8 <line:406:22>
| `-NonNullAttr 0x560c740bec10 <col:63, col:80> 1 2
|-FunctionDecl 0x560c740bfe48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560c740bec58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560c740becd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560c740bfef8 <line:409:22>
| `-NonNullAttr 0x560c740bff50 <col:63, col:77> 1
|-FunctionDecl 0x560c740c0188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560c740bff98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560c740c0028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560c740c0238 <line:412:22>
| `-NonNullAttr 0x560c740c0290 <col:63, col:80> 1 2
|-FunctionDecl 0x560c740c04c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560c740c02d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x560c740c0368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x560c740c0578 <col:37>
| `-NonNullAttr 0x560c740c05d0 <col:78, col:95> 1 2
|-FunctionDecl 0x560c740c07b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560c740c0618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560c740c0698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x560c740c0868 <line:418:22>
| `-NonNullAttr 0x560c740c08c0 <col:63, col:80> 1 2
|-FunctionDecl 0x560c740c0a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560c740c0908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560c740c0988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x560c740c0af8 <line:420:22>
| `-NonNullAttr 0x560c740c0b50 <col:63, col:77> 1
|-FunctionDecl 0x560c740c0cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560c740c0b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560c740c0c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x560c740c0da8 <line:423:22>
| `-NonNullAttr 0x560c740c1e30 <col:63, col:80> 1 2
|-FunctionDecl 0x560c740c1fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560c740c1e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560c740c1ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x560c740c2068 <line:426:22>
| `-NonNullAttr 0x560c740c20c0 <col:63, col:77> 1
|-FunctionDecl 0x560c740c2268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560c740c2108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560c740c2188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x560c740c2318 <line:429:22>
| `-NonNullAttr 0x560c740c2370 <col:63, col:80> 1 2
|-FunctionDecl 0x560c740c24f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560c740c23b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560c740c2438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x560c740c25a8 <line:431:22>
| `-NonNullAttr 0x560c740c2600 <col:63, col:77> 1
|-FunctionDecl 0x560c740c2828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x560c740c2648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560c740c26c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x560c740c28d8 <line:434:22>
| |-NonNullAttr 0x560c740c2930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x560c740c2968 <col:100> "" ""
|-FunctionDecl 0x560c740c2b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x560c740c29b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560c740c2a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x560c740c2c28 <line:437:22>
| |-NonNullAttr 0x560c740c2c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x560c740c2cb8 <col:97> "" ""
|-FunctionDecl 0x560c740c2eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560c740c2d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560c740c2d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560c740c2f68 <line:440:22>
| `-NonNullAttr 0x560c740c2fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x560c740c3140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560c740c3008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560c740c3080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560c740c31f0 <line:443:22>
| `-NonNullAttr 0x560c740c3248 <col:63, col:77> 1
|-FunctionDecl 0x560c740c3538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560c740c3298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560c740c3318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x560c740c3390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560c740c35f0 <line:447:22>
| `-NonNullAttr 0x560c740c3648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x560c740c38f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x560c740c36a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560c740c3720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x560c740c3798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560c740c39b0 <col:43>
| `-NonNullAttr 0x560c740c3a08 <col:84, col:98> 1
|-FunctionDecl 0x560c740c3cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560c740c3a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560c740c3ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x560c740c3b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x560c740c3d80 <line:452:22>
| `-NonNullAttr 0x560c740c3dd8 <col:63, col:77> 3
|-FunctionDecl 0x560c740c40e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560c740c3e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560c740c3ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x560c740c3f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560c740c41a0 <line:456:22>
| `-NonNullAttr 0x560c740c41f8 <col:63, col:80> 2 3
|-FunctionDecl 0x560c740c43e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x560c740c4248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560c740c42c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x560c740c4498 <line:458:22>
|-FunctionDecl 0x560c740c4868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x560c740c4560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x560c740c4700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x560c740c4918 <col:52, col:69> 1 2
|-FunctionDecl 0x560c740c4ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x560c740c49a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x560c740c4a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x560c740c4ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x560c740c4b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x560c740c4c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x560c740c4e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x560c740c4d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x560c740c4fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x560c740c5040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x560c740c50e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x560c740c51d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x560c740c5240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x560c740c5410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe001_pso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x560c740c5508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x560c740c55c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x560c740c5560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x560c740c50c0 '__pthread_unwind_buf_t'
| |   `-Record 0x560c740c5040 ''
| `-AlignedAttr 0x560c740c5618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x560c740c5690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x560c740c57f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x560c740c5858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x560c740c58c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x560c740c5928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x560c740c5b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560c740c5a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560c740c5c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560c740c5be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560c740c5e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560c740c5d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x560c740c5f18 <line:487:22>
|-RecordDecl 0x560c740c5f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x560c740c6288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x560c740c60e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x560c740c6168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x560c740c6338 <col:86>
| `-ReturnsTwiceAttr 0x560c740c6390 <col:12> Implicit
|-FunctionDecl 0x560c740c66b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560c740c6460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x560c740c6570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x560c740c6768 <line:493:22>
| `-NonNullAttr 0x560c740c67c0 <col:63, col:77> 1
|-FunctionDecl 0x560c740c6938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560c740c6808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560c740c69e0 <line:495:22>
| `-NonNullAttr 0x560c740c6a38 <col:63, col:77> 1
|-FunctionDecl 0x560c740c6b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560c740c6a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560c740c6be8 <line:497:22>
| `-NonNullAttr 0x560c740c6c40 <col:52, col:66> 1
|-FunctionDecl 0x560c740c6d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560c740c6c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560c740c6de8 <line:499:22>
| `-NonNullAttr 0x560c740c6e40 <col:52, col:66> 1
|-FunctionDecl 0x560c740c7088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560c740c6e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560c740c6f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560c740c7138 <col:36>
| `-NonNullAttr 0x560c740c7190 <col:66, col:83> 1 2
|-FunctionDecl 0x560c740c7290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560c740c71d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560c740c7338 <line:504:22>
| `-NonNullAttr 0x560c740c7390 <col:52, col:66> 1
|-FunctionDecl 0x560c740c7628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560c740c7440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560c740c74c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560c740c76d8 <line:508:22>
| `-NonNullAttr 0x560c740c7730 <col:63, col:80> 1 2
|-FunctionDecl 0x560c740c79f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x560c740c7778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560c740c77f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x560c740c7878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x560c740c7ab0 <line:512:22>
| `-NonNullAttr 0x560c740c7b08 <col:63, col:80> 1 3
|-FunctionDecl 0x560c740c7c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560c740c7b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560c740c7cb8 <line:514:22>
| `-NonNullAttr 0x560c740c7d10 <col:63, col:77> 1
|-FunctionDecl 0x560c740c7f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560c740c7dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560c740c7fe0 <line:516:22>
| `-NonNullAttr 0x560c740c8038 <col:63, col:77> 1
|-FunctionDecl 0x560c740c8140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560c740c8088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560c740c81e8 <line:518:22>
| `-NonNullAttr 0x560c740c8240 <col:63, col:77> 1
|-FunctionDecl 0x560c740c8468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560c740c8288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560c740c8308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x560c740c8518 <line:522:22>
| `-NonNullAttr 0x560c740c8570 <col:63, col:80> 1 2
|-FunctionDecl 0x560c740c8778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560c740c85b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560c740c8638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x560c740c8828 <line:525:22>
| `-NonNullAttr 0x560c740c8880 <col:63, col:77> 1
|-FunctionDecl 0x560c740c8a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560c740c88c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560c740c8948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x560c740c8ad8 <line:528:22>
| `-NonNullAttr 0x560c740c8b30 <col:63, col:80> 1 2
|-FunctionDecl 0x560c740c8cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560c740c8b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560c740c8bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x560c740c8d68 <line:530:22>
| `-NonNullAttr 0x560c740c8dc0 <col:63, col:77> 1
|-FunctionDecl 0x560c740c9f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560c740c8e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560c740c9eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x560c740ca040 <line:534:22>
| `-NonNullAttr 0x560c740ca098 <col:63, col:80> 1 2
|-FunctionDecl 0x560c740ca228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560c740ca0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560c740ca168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x560c740ca2d8 <line:537:22>
| `-NonNullAttr 0x560c740ca330 <col:63, col:77> 1
|-FunctionDecl 0x560c740ca4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560c740ca378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560c740ca3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560c740ca588 <line:541:22>
| `-NonNullAttr 0x560c740ca5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x560c740ca768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560c740ca628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560c740ca6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x560c740ca818 <line:544:22>
| `-NonNullAttr 0x560c740ca870 <col:63, col:77> 1
|-FunctionDecl 0x560c740caa58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x560c740ca8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x560c740ca938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x560c740cab08 <line:547:22>
| `-NonNullAttr 0x560c740cab60 <col:63, col:80> 1 2
|-FunctionDecl 0x560c740cace8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560c740caba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560c740cac28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x560c740cad98 <line:550:22>
| `-NonNullAttr 0x560c740cadf0 <col:63, col:77> 1
|-FunctionDecl 0x560c740cc168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x560c740cbf10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560c740cc020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x560c740cc218 <col:29>
| `-NonNullAttr 0x560c740cc270 <col:70, col:84> 1
|-FunctionDecl 0x560c740cc3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560c740cc2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560c740cc490 <line:555:22>
| `-NonNullAttr 0x560c740cc4e8 <col:63, col:77> 1
|-FunctionDecl 0x560c740cc5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560c740cc538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560c740cc698 <line:557:22>
| `-NonNullAttr 0x560c740cc6f0 <col:52, col:66> 1
|-FunctionDecl 0x560c740cc7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560c740cc738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560c740cc898 <line:559:19>
| `-NonNullAttr 0x560c740cc8f0 <col:49, col:63> 1
|-FunctionDecl 0x560c740ccb28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560c740cc938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560c740cc9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560c740ccbd8 <col:39>
| `-NonNullAttr 0x560c740ccc30 <col:69, col:86> 1 2
|-FunctionDecl 0x560c740ccd30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560c740ccc78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560c740ccdd8 <line:564:22>
| `-NonNullAttr 0x560c740cce30 <col:52, col:66> 1
|-FunctionDecl 0x560c740ccf98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560c740ccee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560c740cd040 <line:566:22>
| `-NonNullAttr 0x560c740cd098 <col:52, col:66> 1
|-FunctionDecl 0x560c740cd258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560c740cd0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560c740cd178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560c740cd308 <col:39>
| `-NonNullAttr 0x560c740cd360 <col:69, col:86> 1 2
|-FunctionDecl 0x560c740cd460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560c740cd3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560c740cd508 <line:571:22>
| `-NonNullAttr 0x560c740cd560 <col:52, col:66> 1
|-FunctionDecl 0x560c740cd748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560c740cd610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560c740cd7f0 <line:573:22>
| `-NonNullAttr 0x560c740cd848 <col:63, col:77> 1
|-FunctionDecl 0x560c740cd950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560c740cd898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560c740cd9f8 <line:575:22>
| `-NonNullAttr 0x560c740cda50 <col:63, col:77> 1
|-FunctionDecl 0x560c740cdc78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560c740cda98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560c740cdb18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x560c740cdd28 <line:579:22>
| `-NonNullAttr 0x560c740cdd80 <col:63, col:80> 1 2
|-FunctionDecl 0x560c740cdfa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560c740cddc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560c740cde48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x560c740ce058 <line:582:22>
| `-NonNullAttr 0x560c740ce0b0 <col:63, col:77> 1
|-FunctionDecl 0x560c740ce258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560c740ce0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560c740ce178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x560c740ce308 <line:586:22>
| `-NonNullAttr 0x560c740ce360 <col:63, col:80> 1 2
|-FunctionDecl 0x560c740ce4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560c740ce3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560c740ce428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x560c740ce598 <col:36>
| `-NonNullAttr 0x560c740ce5f0 <col:77, col:91> 1
|-FunctionDecl 0x560c740ce928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x560c740ce6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560c740ce7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x560c740ce9d8 <line:591:22>
| `-NonNullAttr 0x560c740cea30 <col:63, col:77> 1
|-FunctionDecl 0x560c740ceba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560c740cea78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560c740cec50 <line:593:22>
| `-NonNullAttr 0x560c740ceca8 <col:63, col:77> 1
|-FunctionDecl 0x560c740cedb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560c740cecf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560c740cee58 <line:595:22>
| `-NonNullAttr 0x560c740ceeb0 <col:52, col:66> 1
|-FunctionDecl 0x560c740cefc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560c740cef10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560c740cf070 <line:597:22>
| `-NonNullAttr 0x560c740cf0c8 <col:52, col:66> 1
|-FunctionDecl 0x560c740cf2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x560c740cf118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560c740cf190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x560c740cf3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x560c740cf6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560c740cf428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560c740cf4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560c740cf530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x560c740cf790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x560c740cf9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560c740cf870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560c740cfa50 <line:606:22>
| `-NonNullAttr 0x560c740cfaa8 <col:63, col:77> 1
|-FunctionDecl 0x560c740cfbb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560c740cfaf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560c740cfc58 <line:608:22>
| `-NonNullAttr 0x560c740cfcb0 <col:63, col:77> 1
|-FunctionDecl 0x560c740cff10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560c740cfcf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560c740cfd78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x560c740cffc0 <line:612:22>
| `-NonNullAttr 0x560c740d0018 <col:63, col:80> 1 2
|-FunctionDecl 0x560c740d0228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x560c740d0068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560c740d00e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x560c740d02d8 <col:37>
| `-NonNullAttr 0x560c740d0330 <col:78, col:92> 1
|-FunctionDecl 0x560c740d0548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x560c740d0378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560c740d0420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x560c740d05f8 <line:618:22>
| `-NonNullAttr 0x560c740d0650 <col:63, col:80> 1 2
|-FunctionDecl 0x560c740d0818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x560c740d0698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560c740d0710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x560c740d08c8 <line:621:22>
| `-NonNullAttr 0x560c740d0920 <col:63, col:77> 1
|-FunctionDecl 0x560c740d0bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x560c740d0a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x560c740d0a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x560c740d0c78 <line:623:22>
| `-NonNullAttr 0x560c740d0cd0 <col:63, col:77> 1
|-FunctionDecl 0x560c740d0e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560c740d0d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560c740d0f20 <line:625:22>
| `-NonNullAttr 0x560c740d0f78 <col:63, col:77> 1
|-FunctionDecl 0x560c740d1080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560c740d0fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560c740d1128 <line:627:22>
| `-NonNullAttr 0x560c740d1180 <col:52, col:66> 1
|-FunctionDecl 0x560c740d1280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560c740d11c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560c740d1328 <line:629:22>
| `-NonNullAttr 0x560c740d1380 <col:52, col:66> 1
|-FunctionDecl 0x560c740d1480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560c740d13c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560c740d1528 <line:631:22>
| `-NonNullAttr 0x560c740d1580 <col:52, col:66> 1
|-FunctionDecl 0x560c740d1958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x560c740d1660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x560c740d1770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560c740d17f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x560c740d1a10 <line:635:22>
| `-NonNullAttr 0x560c740d1a68 <col:63, col:77> 1
|-FunctionDecl 0x560c740d1be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560c740d1ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560c740d1c90 <line:637:22>
| `-NonNullAttr 0x560c740d1ce8 <col:63, col:77> 1
|-FunctionDecl 0x560c740d1df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560c740d1d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560c740d1e98 <line:639:22>
| `-NonNullAttr 0x560c740d1ef0 <col:52, col:66> 1
|-FunctionDecl 0x560c740d20e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560c740d1fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560c740d2190 <line:641:22>
| `-NonNullAttr 0x560c740d21e8 <col:63, col:77> 1
|-FunctionDecl 0x560c740d22f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560c740d2238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560c740d2398 <line:643:22>
| `-NonNullAttr 0x560c740d23f0 <col:63, col:77> 1
|-FunctionDecl 0x560c740d2618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560c740d2438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560c740d24b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x560c740d26c8 <line:647:22>
| `-NonNullAttr 0x560c740d2720 <col:63, col:80> 1 2
|-FunctionDecl 0x560c740d2928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x560c740d2768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x560c740d27e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x560c740d29d8 <line:650:22>
| `-NonNullAttr 0x560c740d2a30 <col:63, col:77> 1
|-FunctionDecl 0x560c740d2d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x560c740d2b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x560c740d2c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x560c740d2e28 <line:653:22>
| `-NonNullAttr 0x560c740d2e80 <col:63, col:77> 1
|-FunctionDecl 0x560c740d2fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x560c740d2ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560c740d3090 <col:69>
|-FunctionDecl 0x560c740d3208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x560c740d30f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560c740d32b0 <col:72>
|-FunctionDecl 0x560c740d34e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x560c740d3318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x560c740d33c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x560c740d3598 <col:44>
|-FunctionDecl 0x560c740d37b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x560c740d3600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560c740d3678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x560c740d3868 <line:660:22>
| `-NonNullAttr 0x560c740d38c0 <col:63, col:77> 2
|-FunctionDecl 0x560c740d3d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x560c740d39a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x560c740d3ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x560c740d3bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x560c740d3dc0 <col:47>
|-FunctionDecl 0x560c740d4f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x560c740d3e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560c740d50b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x560c740d5020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560c740d5210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x560c740d5178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560c740d52d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x560c740d5398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x560c740d5458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x560c740d5510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x560c740d5590 prev 0x560c740d5510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x560c740d55f8 <col:24> 'int' 0
|-VarDecl 0x560c740d5630 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x560c740d56b0 prev 0x560c740d5630 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x560c740d5718 <col:27> 'int' 0
|-VarDecl 0x560c740d5750 <line:675:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x560c740d57d0 prev 0x560c740d5750 <line:676:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x560c740d5838 <col:27> 'int' 0
|-VarDecl 0x560c740d5868 <line:677:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x560c740d58e0 <line:678:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x560c740d5960 <line:679:1, col:5> col:5 used x 'int'
|-VarDecl 0x560c740d59e0 prev 0x560c740d5960 <line:680:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x560c740d5a48 <col:9> 'int' 0
|-VarDecl 0x560c740d5a78 <line:681:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x560c740d5af8 <line:682:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x560c740d5b70 <line:683:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x560c740d5be8 <line:684:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x560c740d5c60 <line:685:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x560c740d5cd8 <line:686:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x560c740d5d50 <line:687:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x560c740d5dc8 <line:688:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x560c740d5e40 <line:689:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x560c740d5eb8 <line:690:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x560c740d5f70 <line:691:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x560c740d5ff0 <line:692:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x560c740d6070 <line:693:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x560c740d60e8 <line:694:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x560c740d6168 <line:695:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x560c740d61e0 <line:696:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x560c740d6260 <line:697:1, col:5> col:5 used y 'int'
|-VarDecl 0x560c740d62e0 prev 0x560c740d6260 <line:698:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x560c740d6348 <col:9> 'int' 0
|-VarDecl 0x560c740d6378 <line:699:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x560c740d63f0 <line:700:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x560c740d6508 prev 0x560c740d4f60 <line:701:1, line:720:1> line:701:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x560c740d6470 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560c740d77c8 <line:702:1, line:720:1>
|   |-CallExpr 0x560c740d6618 <line:703:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560c740d6600 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560c740d65b0 <col:3> 'void ()' Function 0x560c7407c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560c740d6690 <line:704:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560c740d6638 <col:3> 'int' lvalue Var 0x560c740d56b0 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x560c740d6678 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560c740d6658 <col:25> 'int' lvalue Var 0x560c740d62e0 'y' 'int'
|   |-CallExpr 0x560c740d66e8 <line:705:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560c740d66d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560c740d66b0 <col:3> 'void ()' Function 0x560c7407c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560c740d6740 <line:706:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560c740d6728 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560c740d6708 <col:3> 'void ()' Function 0x560c7407c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560c740d67a0 <line:707:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560c740d6760 <col:3> 'int' lvalue Var 0x560c740d59e0 'x' 'int'
|   | `-IntegerLiteral 0x560c740d6780 <col:7> 'int' 1
|   |-CallExpr 0x560c740d67f8 <line:708:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560c740d67e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560c740d67c0 <col:3> 'void ()' Function 0x560c7407c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560c740d6850 <line:709:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560c740d6838 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560c740d6818 <col:3> 'void ()' Function 0x560c7407c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560c740d6b38 <line:710:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560c740d6870 <col:3> 'int' lvalue Var 0x560c740d59e0 'x' 'int'
|   | `-ConditionalOperator 0x560c740d6b08 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560c740d6930 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560c740d68e8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560c740d68d0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560c740d6890 <col:7> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560c740d6918 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560c740d6900 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560c740d68b0 <col:25> '_Bool' lvalue Var 0x560c740d5be8 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x560c740d6af0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560c740d6950 <col:42> 'int' lvalue Var 0x560c740d6070 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x560c740d6ad0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560c740d6aa0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560c740d6a10 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560c740d69c8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560c740d69b0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560c740d6970 <col:55> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560c740d69f8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560c740d69e0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560c740d6990 <col:73> '_Bool' lvalue Var 0x560c740d5dc8 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560c740d6a70 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560c740d6a30 <col:90> 'int' lvalue Var 0x560c740d6168 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560c740d6a88 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560c740d6a50 <col:102> 'int' lvalue Var 0x560c740d59e0 'x' 'int'
|   |-BinaryOperator 0x560c740d6d40 <line:711:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560c740d6b58 <col:3> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560c740d6d28 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560c740d6cf8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560c740d6c18 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560c740d6bd0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560c740d6bb8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560c740d6b78 <col:20> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560c740d6c00 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560c740d6be8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560c740d6b98 <col:38> '_Bool' lvalue Var 0x560c740d5be8 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560c740d6cb0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560c740d6c68 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560c740d6c38 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560c740d6ce0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560c740d6cc8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560c740d6c90 <col:66> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560c740d7058 <line:712:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560c740d6d60 <col:3> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560c740d7040 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560c740d7010 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560c740d6f00 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560c740d6e20 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560c740d6dd8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560c740d6dc0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560c740d6d80 <col:20> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560c740d6e08 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560c740d6df0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560c740d6da0 <col:38> '_Bool' lvalue Var 0x560c740d5be8 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x560c740d6ee0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560c740d6e98 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560c740d6e80 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560c740d6e40 <col:56> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560c740d6ec8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560c740d6eb0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560c740d6e60 <col:74> '_Bool' lvalue Var 0x560c740d5dc8 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560c740d6fc8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560c740d6f80 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560c740d6f20 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560c740d6ff8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560c740d6fe0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560c740d6fa8 <col:102> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560c740d7260 <line:713:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560c740d7078 <col:3> '_Bool' lvalue Var 0x560c740d5be8 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560c740d7248 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560c740d7218 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560c740d7138 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560c740d70f0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560c740d70d8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560c740d7098 <col:20> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560c740d7120 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560c740d7108 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560c740d70b8 <col:38> '_Bool' lvalue Var 0x560c740d5be8 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560c740d71d0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560c740d7188 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560c740d7158 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560c740d7200 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560c740d71e8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560c740d71b0 <col:66> '_Bool' lvalue Var 0x560c740d5be8 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560c740d7548 <line:714:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560c740d7280 <col:3> '_Bool' lvalue Var 0x560c740d5dc8 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560c740d7530 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560c740d7500 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560c740d7420 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560c740d7340 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560c740d72f8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560c740d72e0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560c740d72a0 <col:20> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560c740d7328 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560c740d7310 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560c740d72c0 <col:38> '_Bool' lvalue Var 0x560c740d5be8 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x560c740d7400 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560c740d73b8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560c740d73a0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560c740d7360 <col:56> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560c740d73e8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560c740d73d0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560c740d7380 <col:74> '_Bool' lvalue Var 0x560c740d5dc8 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560c740d74b8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560c740d7470 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560c740d7440 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560c740d74e8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560c740d74d0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560c740d7498 <col:102> '_Bool' lvalue Var 0x560c740d5dc8 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x560c740d75a0 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560c740d7588 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560c740d7568 <col:3> 'void ()' Function 0x560c7407c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560c740d75f8 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560c740d75e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560c740d75c0 <col:3> 'void ()' Function 0x560c7407c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560c740d76b0 <line:717:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560c740d7618 <col:3> 'int' lvalue Var 0x560c740d5590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560c740d7690 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560c740d7678 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560c740d7638 <col:22> 'int' lvalue Var 0x560c740d5590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560c740d7658 <col:41> 'int' 1
|   |-CallExpr 0x560c740d7708 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560c740d76f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560c740d76d0 <col:3> 'void ()' Function 0x560c7407c410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560c740d77b8 <line:719:3, col:36>
|     `-CallExpr 0x560c740d7798 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560c740d7780 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560c740d7728 <col:10> 'void *(void)' Function 0x560c7407be68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560c740d7910 prev 0x560c740d50b8 <line:721:1, line:749:1> line:721:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x560c740d7878 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560c740d90d8 <line:722:1, line:749:1>
|   |-CallExpr 0x560c740d79f0 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560c740d79d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560c740d79b8 <col:3> 'void ()' Function 0x560c7407c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560c740d7a68 <line:724:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560c740d7a10 <col:3> 'int' lvalue Var 0x560c740d6168 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x560c740d7a50 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560c740d7a30 <col:15> 'int' lvalue Var 0x560c740d6070 'x$w_buff0' 'int'
|   |-BinaryOperator 0x560c740d7ac8 <line:725:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560c740d7a88 <col:3> 'int' lvalue Var 0x560c740d6070 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x560c740d7aa8 <col:15> 'int' 2
|   |-BinaryOperator 0x560c740d7b40 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560c740d7ae8 <col:3> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560c740d7b28 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560c740d7b08 <col:20> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560c740d7bd8 <line:727:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560c740d7b60 <col:3> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x560c740d7bb0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560c740d7b80 <col:27> 'int' 1
|   |-CallExpr 0x560c740d7d58 <line:728:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x560c740d7d40 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x560c740d7bf8 <col:3> 'void (int)' Function 0x560c7407c0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x560c740d7cf8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x560c740d7cd8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x560c740d7cb8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x560c740d7c70 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x560c740d7c58 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x560c740d7c18 <col:23> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x560c740d7ca0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x560c740d7c88 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x560c740d7c38 <col:41> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560c740d7dd8 <line:729:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560c740d7d80 <col:3> '_Bool' lvalue Var 0x560c740d5d50 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x560c740d7dc0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560c740d7da0 <col:20> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x560c740d7e50 <line:730:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560c740d7df8 <col:3> '_Bool' lvalue Var 0x560c740d5dc8 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560c740d7e38 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560c740d7e18 <col:20> '_Bool' lvalue Var 0x560c740d5be8 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560c740d7ec8 <line:731:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560c740d7e70 <col:3> '_Bool' lvalue Var 0x560c740d5e40 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560c740d7eb0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560c740d7e90 <col:20> '_Bool' lvalue Var 0x560c740d5c60 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560c740d7f40 <line:732:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560c740d7ee8 <col:3> '_Bool' lvalue Var 0x560c740d5eb8 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560c740d7f28 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560c740d7f08 <col:20> '_Bool' lvalue Var 0x560c740d5cd8 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560c740d7fe8 <line:733:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560c740d7f60 <col:3> '_Bool' lvalue Var 0x560c740d5c60 'x$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x560c740d7fc0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560c740d7f90 <col:27> 'int' 1
|   |-CallExpr 0x560c740d8040 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560c740d8028 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560c740d8008 <col:3> 'void ()' Function 0x560c7407c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560c740d8098 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560c740d8080 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560c740d8060 <col:3> 'void ()' Function 0x560c7407c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560c740d80f8 <line:736:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560c740d80b8 <col:3> 'int' lvalue Var 0x560c740d62e0 'y' 'int'
|   | `-IntegerLiteral 0x560c740d80d8 <col:7> 'int' 1
|   |-CallExpr 0x560c740d8150 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560c740d8138 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560c740d8118 <col:3> 'void ()' Function 0x560c7407c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560c740d81a8 <line:738:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560c740d8190 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560c740d8170 <col:3> 'void ()' Function 0x560c7407c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560c740d8490 <line:739:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560c740d81c8 <col:3> 'int' lvalue Var 0x560c740d59e0 'x' 'int'
|   | `-ConditionalOperator 0x560c740d8460 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560c740d8288 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560c740d8240 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560c740d8228 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560c740d81e8 <col:7> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560c740d8270 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560c740d8258 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560c740d8208 <col:25> '_Bool' lvalue Var 0x560c740d5c60 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x560c740d8448 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560c740d82a8 <col:42> 'int' lvalue Var 0x560c740d6070 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x560c740d8428 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560c740d83f8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560c740d8368 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560c740d8320 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560c740d8308 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560c740d82c8 <col:55> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560c740d8350 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560c740d8338 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560c740d82e8 <col:73> '_Bool' lvalue Var 0x560c740d5e40 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560c740d83c8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560c740d8388 <col:90> 'int' lvalue Var 0x560c740d6168 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560c740d83e0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560c740d83a8 <col:102> 'int' lvalue Var 0x560c740d59e0 'x' 'int'
|   |-BinaryOperator 0x560c740d8698 <line:740:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560c740d84b0 <col:3> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560c740d8680 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560c740d8650 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560c740d8570 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560c740d8528 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560c740d8510 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560c740d84d0 <col:20> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560c740d8558 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560c740d8540 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560c740d84f0 <col:38> '_Bool' lvalue Var 0x560c740d5c60 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560c740d8608 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560c740d85c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560c740d8590 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560c740d8638 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560c740d8620 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560c740d85e8 <col:66> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560c740d8980 <line:741:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560c740d86b8 <col:3> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560c740d8968 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560c740d8938 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560c740d8858 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560c740d8778 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560c740d8730 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560c740d8718 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560c740d86d8 <col:20> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560c740d8760 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560c740d8748 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560c740d86f8 <col:38> '_Bool' lvalue Var 0x560c740d5c60 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x560c740d8838 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560c740d87f0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560c740d87d8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560c740d8798 <col:56> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560c740d8820 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560c740d8808 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560c740d87b8 <col:74> '_Bool' lvalue Var 0x560c740d5e40 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560c740d88f0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560c740d88a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560c740d8878 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560c740d8920 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560c740d8908 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560c740d88d0 <col:102> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560c740d8b88 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560c740d89a0 <col:3> '_Bool' lvalue Var 0x560c740d5c60 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560c740d8b70 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560c740d8b40 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560c740d8a60 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560c740d8a18 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560c740d8a00 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560c740d89c0 <col:20> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560c740d8a48 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560c740d8a30 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560c740d89e0 <col:38> '_Bool' lvalue Var 0x560c740d5c60 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560c740d8af8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560c740d8ab0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560c740d8a80 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560c740d8b28 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560c740d8b10 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560c740d8ad8 <col:66> '_Bool' lvalue Var 0x560c740d5c60 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560c740d8e70 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560c740d8ba8 <col:3> '_Bool' lvalue Var 0x560c740d5e40 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560c740d8e58 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560c740d8e28 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560c740d8d48 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560c740d8c68 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560c740d8c20 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560c740d8c08 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560c740d8bc8 <col:20> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560c740d8c50 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560c740d8c38 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560c740d8be8 <col:38> '_Bool' lvalue Var 0x560c740d5c60 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x560c740d8d28 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560c740d8ce0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560c740d8cc8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560c740d8c88 <col:56> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560c740d8d10 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560c740d8cf8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560c740d8ca8 <col:74> '_Bool' lvalue Var 0x560c740d5e40 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560c740d8de0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560c740d8d98 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560c740d8d68 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560c740d8e10 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560c740d8df8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560c740d8dc0 <col:102> '_Bool' lvalue Var 0x560c740d5e40 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x560c740d8ec8 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560c740d8eb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560c740d8e90 <col:3> 'void ()' Function 0x560c7407c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560c740d8f20 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560c740d8f08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560c740d8ee8 <col:3> 'void ()' Function 0x560c7407c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560c740d8ff8 <line:746:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560c740d8f40 <col:3> 'int' lvalue Var 0x560c740d5590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560c740d8fd8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560c740d8fc0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560c740d8f60 <col:22> 'int' lvalue Var 0x560c740d5590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560c740d8fa0 <col:41> 'int' 1
|   |-CallExpr 0x560c740d9050 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560c740d9038 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560c740d9018 <col:3> 'void ()' Function 0x560c7407c410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560c740d90c8 <line:748:3, col:36>
|     `-CallExpr 0x560c740d90a8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560c740d9090 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560c740d9070 <col:10> 'void *(void)' Function 0x560c7407be68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560c740d9268 prev 0x560c740d5210 <line:750:1, line:769:1> line:750:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x560c740d91d0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560c740da4a0 <line:751:1, line:769:1>
|   |-CallExpr 0x560c740d9348 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560c740d9330 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560c740d9310 <col:3> 'void ()' Function 0x560c7407c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560c740d93c0 <line:753:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560c740d9368 <col:3> 'int' lvalue Var 0x560c740d57d0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x560c740d93a8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560c740d9388 <col:25> 'int' lvalue Var 0x560c740d62e0 'y' 'int'
|   |-CallExpr 0x560c740d9418 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560c740d9400 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560c740d93e0 <col:3> 'void ()' Function 0x560c7407c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560c740d9470 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560c740d9458 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560c740d9438 <col:3> 'void ()' Function 0x560c7407c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560c740d94d0 <line:756:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560c740d9490 <col:3> 'int' lvalue Var 0x560c740d62e0 'y' 'int'
|   | `-IntegerLiteral 0x560c740d94b0 <col:7> 'int' 2
|   |-CallExpr 0x560c740d9528 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560c740d9510 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560c740d94f0 <col:3> 'void ()' Function 0x560c7407c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560c740d9580 <line:758:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560c740d9568 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560c740d9548 <col:3> 'void ()' Function 0x560c7407c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560c740d9868 <line:759:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560c740d95a0 <col:3> 'int' lvalue Var 0x560c740d59e0 'x' 'int'
|   | `-ConditionalOperator 0x560c740d9838 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560c740d9660 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560c740d9618 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560c740d9600 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560c740d95c0 <col:7> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560c740d9648 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560c740d9630 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560c740d95e0 <col:25> '_Bool' lvalue Var 0x560c740d5cd8 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x560c740d9820 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560c740d9680 <col:42> 'int' lvalue Var 0x560c740d6070 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x560c740d9800 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560c740d97d0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560c740d9740 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560c740d96f8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560c740d96e0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560c740d96a0 <col:55> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560c740d9728 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560c740d9710 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560c740d96c0 <col:73> '_Bool' lvalue Var 0x560c740d5eb8 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560c740d97a0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560c740d9760 <col:90> 'int' lvalue Var 0x560c740d6168 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560c740d97b8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560c740d9780 <col:102> 'int' lvalue Var 0x560c740d59e0 'x' 'int'
|   |-BinaryOperator 0x560c740d9a70 <line:760:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560c740d9888 <col:3> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560c740d9a58 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560c740d9a28 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560c740d9948 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560c740d9900 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560c740d98e8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560c740d98a8 <col:20> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560c740d9930 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560c740d9918 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560c740d98c8 <col:38> '_Bool' lvalue Var 0x560c740d5cd8 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560c740d99e0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560c740d9998 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560c740d9968 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560c740d9a10 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560c740d99f8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560c740d99c0 <col:66> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560c740d9d58 <line:761:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560c740d9a90 <col:3> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560c740d9d40 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560c740d9d10 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560c740d9c30 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560c740d9b50 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560c740d9b08 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560c740d9af0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560c740d9ab0 <col:20> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560c740d9b38 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560c740d9b20 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560c740d9ad0 <col:38> '_Bool' lvalue Var 0x560c740d5cd8 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x560c740d9c10 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560c740d9bc8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560c740d9bb0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560c740d9b70 <col:56> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560c740d9bf8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560c740d9be0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560c740d9b90 <col:74> '_Bool' lvalue Var 0x560c740d5eb8 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560c740d9cc8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560c740d9c80 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560c740d9c50 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560c740d9cf8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560c740d9ce0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560c740d9ca8 <col:102> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560c740d9f60 <line:762:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560c740d9d78 <col:3> '_Bool' lvalue Var 0x560c740d5cd8 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560c740d9f48 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560c740d9f18 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560c740d9e38 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560c740d9df0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560c740d9dd8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560c740d9d98 <col:20> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560c740d9e20 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560c740d9e08 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560c740d9db8 <col:38> '_Bool' lvalue Var 0x560c740d5cd8 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560c740d9ed0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560c740d9e88 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560c740d9e58 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560c740d9f00 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560c740d9ee8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560c740d9eb0 <col:66> '_Bool' lvalue Var 0x560c740d5cd8 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560c740da258 <line:763:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560c740d9f80 <col:3> '_Bool' lvalue Var 0x560c740d5eb8 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560c740da240 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560c740da210 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560c740da130 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560c740da050 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560c740da008 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560c740d9ff0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560c740d9fb0 <col:20> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560c740da038 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560c740da020 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560c740d9fd0 <col:38> '_Bool' lvalue Var 0x560c740d5cd8 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x560c740da110 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560c740da0c8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560c740da0b0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560c740da070 <col:56> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560c740da0f8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560c740da0e0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560c740da090 <col:74> '_Bool' lvalue Var 0x560c740d5eb8 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560c740da1c8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560c740da180 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560c740da150 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560c740da1f8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560c740da1e0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560c740da1a8 <col:102> '_Bool' lvalue Var 0x560c740d5eb8 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x560c740da2b0 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560c740da298 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560c740da278 <col:3> 'void ()' Function 0x560c7407c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560c740da308 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560c740da2f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560c740da2d0 <col:3> 'void ()' Function 0x560c7407c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560c740da3c0 <line:766:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560c740da328 <col:3> 'int' lvalue Var 0x560c740d5590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560c740da3a0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560c740da388 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560c740da348 <col:22> 'int' lvalue Var 0x560c740d5590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560c740da368 <col:41> 'int' 1
|   |-CallExpr 0x560c740da418 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560c740da400 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560c740da3e0 <col:3> 'void ()' Function 0x560c7407c410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560c740da490 <line:768:3, col:36>
|     `-CallExpr 0x560c740da470 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560c740da458 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560c740da438 <col:10> 'void *(void)' Function 0x560c7407be68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560c740da558 prev 0x560c740d52d8 <line:770:1, line:772:1> line:770:6 fence 'void ()'
| `-CompoundStmt 0x560c740da5f8 <line:771:1, line:772:1>
|-FunctionDecl 0x560c740da628 prev 0x560c740d5398 <line:773:1, line:775:1> line:773:6 isync 'void ()'
| `-CompoundStmt 0x560c740da6c8 <line:774:1, line:775:1>
|-FunctionDecl 0x560c740da6f8 prev 0x560c740d5458 <line:776:1, line:778:1> line:776:6 lwfence 'void ()'
| `-CompoundStmt 0x560c740da798 <line:777:1, line:778:1>
`-FunctionDecl 0x560c740da808 <line:779:1, line:816:1> line:779:5 main 'int ()'
  `-CompoundStmt 0x560c740dee60 <line:780:1, line:816:1>
    |-DeclStmt 0x560c740da920 <line:781:3, col:18>
    | `-VarDecl 0x560c740da8b8 <col:3, col:13> col:13 used t1812 'pthread_t':'unsigned long'
    |-CallExpr 0x560c740dab28 <line:782:3, col:54> 'int'
    | |-ImplicitCastExpr 0x560c740dab10 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560c740da938 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560c740bc8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560c740da978 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560c740da958 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560c740da8b8 't1812' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560c740dab68 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560c740da9f0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x560c740da9c8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560c740da990 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x560c740dab80 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560c740daa10 <col:39> 'void *(void *)' Function 0x560c740d6508 'P0' 'void *(void *)'
    | `-ParenExpr 0x560c740daa90 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x560c740daa68 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560c740daa30 <col:52> 'int' 0
    |-DeclStmt 0x560c740dac10 <line:783:3, col:18>
    | `-VarDecl 0x560c740daba8 <col:3, col:13> col:13 used t1813 'pthread_t':'unsigned long'
    |-CallExpr 0x560c740dadb8 <line:784:3, col:54> 'int'
    | |-ImplicitCastExpr 0x560c740dada0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560c740dac28 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560c740bc8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560c740dac68 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560c740dac48 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560c740daba8 't1813' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560c740dadf8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560c740dace0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x560c740dacb8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560c740dac80 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x560c740dae10 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560c740dad00 <col:39> 'void *(void *)' Function 0x560c740d7910 'P1' 'void *(void *)'
    | `-ParenExpr 0x560c740dad80 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x560c740dad58 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560c740dad20 <col:52> 'int' 0
    |-DeclStmt 0x560c740daea0 <line:785:3, col:18>
    | `-VarDecl 0x560c740dae38 <col:3, col:13> col:13 used t1814 'pthread_t':'unsigned long'
    |-CallExpr 0x560c740db058 <line:786:3, col:54> 'int'
    | |-ImplicitCastExpr 0x560c740db040 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560c740daeb8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560c740bc8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560c740daef8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560c740daed8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560c740dae38 't1814' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560c740db098 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560c740daf70 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x560c740daf48 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560c740daf10 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x560c740db0b0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560c740daf90 <col:39> 'void *(void *)' Function 0x560c740d9268 'P2' 'void *(void *)'
    | `-ParenExpr 0x560c740db020 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x560c740daff8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560c740dafc0 <col:52> 'int' 0
    |-CallExpr 0x560c740db100 <line:787:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560c740db0e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560c740db0c8 <col:3> 'void ()' Function 0x560c7407c350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560c740db1d0 <line:788:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x560c740db120 <col:3> '_Bool' lvalue Var 0x560c740d5868 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x560c740db1b8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x560c740db198 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x560c740db180 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x560c740db140 <col:21> 'int' lvalue Var 0x560c740d5590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x560c740db160 <col:41> 'int' 3
    |-CallExpr 0x560c740db228 <line:789:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560c740db210 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560c740db1f0 <col:3> 'void ()' Function 0x560c7407c410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560c740db2a0 <line:790:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560c740db288 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560c740db248 <col:3> 'void (int)' Function 0x560c7407bca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x560c740db2e0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560c740db2c8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560c740db268 <col:21> '_Bool' lvalue Var 0x560c740d5868 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x560c740db330 <line:791:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560c740db318 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560c740db2f8 <col:3> 'void ()' Function 0x560c7407c350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560c740db618 <line:792:3, col:103> 'int' '='
    | |-DeclRefExpr 0x560c740db350 <col:3> 'int' lvalue Var 0x560c740d59e0 'x' 'int'
    | `-ConditionalOperator 0x560c740db5e8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x560c740db410 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x560c740db3c8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x560c740db3b0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x560c740db370 <col:7> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x560c740db3f8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x560c740db3e0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x560c740db390 <col:25> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x560c740db5d0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560c740db430 <col:42> 'int' lvalue Var 0x560c740d6070 'x$w_buff0' 'int'
    |   `-ParenExpr 0x560c740db5b0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x560c740db580 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x560c740db4f0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x560c740db4a8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x560c740db490 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x560c740db450 <col:55> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x560c740db4d8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x560c740db4c0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x560c740db470 <col:73> '_Bool' lvalue Var 0x560c740d5d50 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560c740db550 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560c740db510 <col:90> 'int' lvalue Var 0x560c740d6168 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x560c740db568 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x560c740db530 <col:102> 'int' lvalue Var 0x560c740d59e0 'x' 'int'
    |-BinaryOperator 0x560c740db820 <line:793:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560c740db638 <col:3> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x560c740db808 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560c740db7d8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560c740db6f8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560c740db6b0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560c740db698 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560c740db658 <col:20> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560c740db6e0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560c740db6c8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560c740db678 <col:38> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560c740db790 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560c740db748 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560c740db718 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560c740db7c0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560c740db7a8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560c740db770 <col:66> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x560c740dbb08 <line:794:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560c740db840 <col:3> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x560c740dbaf0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560c740dbac0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560c740db9e0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560c740db900 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560c740db8b8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560c740db8a0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560c740db860 <col:20> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560c740db8e8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560c740db8d0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560c740db880 <col:38> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560c740db9c0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560c740db978 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560c740db960 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560c740db920 <col:56> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560c740db9a8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560c740db990 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560c740db940 <col:74> '_Bool' lvalue Var 0x560c740d5d50 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560c740dba78 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560c740dba30 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560c740dba00 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560c740dbaa8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560c740dba90 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560c740dba58 <col:102> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x560c740dbd10 <line:795:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560c740dbb28 <col:3> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560c740dbcf8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560c740dbcc8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560c740dbbe8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560c740dbba0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560c740dbb88 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560c740dbb48 <col:20> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560c740dbbd0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560c740dbbb8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560c740dbb68 <col:38> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560c740dbc80 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560c740dbc38 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560c740dbc08 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560c740dbcb0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560c740dbc98 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560c740dbc60 <col:66> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x560c740dc018 <line:796:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560c740dbd30 <col:3> '_Bool' lvalue Var 0x560c740d5d50 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560c740dc000 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560c740dbfd0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560c740dbed0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560c740dbdf0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560c740dbda8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560c740dbd90 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560c740dbd50 <col:20> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560c740dbdd8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560c740dbdc0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560c740dbd70 <col:38> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560c740dbeb0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560c740dbe68 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560c740dbe50 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560c740dbe10 <col:56> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560c740dbe98 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560c740dbe80 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560c740dbe30 <col:74> '_Bool' lvalue Var 0x560c740d5d50 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560c740dbf68 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560c740dbf20 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560c740dbef0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560c740dbf98 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560c740dbf80 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560c740dbf48 <col:102> '_Bool' lvalue Var 0x560c740d5d50 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x560c740dc070 <line:797:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560c740dc058 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560c740dc038 <col:3> 'void ()' Function 0x560c7407c410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560c740dc0c8 <line:798:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560c740dc0b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560c740dc090 <col:3> 'void ()' Function 0x560c7407c350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560c740dc178 <line:799:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x560c740dc0e8 <col:3> '_Bool' lvalue Var 0x560c740d6378 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x560c740dc160 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x560c740dc140 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x560c740dc128 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x560c740dc108 <col:19> 'void *(void)' Function 0x560c7407be68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x560c740dc228 <line:800:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x560c740dc198 <col:3> '_Bool' lvalue Var 0x560c740d63f0 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x560c740dc210 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x560c740dc1f0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x560c740dc1d8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x560c740dc1b8 <col:19> 'void *(void)' Function 0x560c7407be68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x560c740dc2a0 <line:801:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x560c740dc248 <col:3> '_Bool' lvalue Var 0x560c740d5a78 'x$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x560c740dc288 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x560c740dc268 <col:21> '_Bool' lvalue Var 0x560c740d63f0 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x560c740dc318 <line:802:3, col:15> 'int' '='
    | |-DeclRefExpr 0x560c740dc2c0 <col:3> 'int' lvalue Var 0x560c740d5af8 'x$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x560c740dc300 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x560c740dc2e0 <col:15> 'int' lvalue Var 0x560c740d59e0 'x' 'int'
    |-BinaryOperator 0x560c740dc750 <line:803:3, col:162> 'int' '='
    | |-DeclRefExpr 0x560c740dc338 <col:3> 'int' lvalue Var 0x560c740d59e0 'x' 'int'
    | `-ConditionalOperator 0x560c740dc720 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x560c740dc548 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x560c740dc468 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x560c740dc390 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x560c740dc378 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x560c740dc358 <col:8> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x560c740dc448 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x560c740dc3e0 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x560c740dc3c8 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x560c740dc3a8 <col:27> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x560c740dc430 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x560c740dc418 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x560c740dc3f8 <col:46> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x560c740dc528 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x560c740dc4c0 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x560c740dc4a8 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x560c740dc488 <col:65> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x560c740dc510 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x560c740dc4f8 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x560c740dc4d8 <col:84> '_Bool' lvalue Var 0x560c740d5d50 'x$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x560c740dc708 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560c740dc568 <col:101> 'int' lvalue Var 0x560c740d59e0 'x' 'int'
    |   `-ParenExpr 0x560c740dc6e8 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x560c740dc6b8 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x560c740dc628 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x560c740dc5e0 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x560c740dc5c8 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x560c740dc588 <col:106> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x560c740dc610 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x560c740dc5f8 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x560c740dc5a8 <col:124> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560c740dc688 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560c740dc648 <col:141> 'int' lvalue Var 0x560c740d6070 'x$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x560c740dc6a0 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x560c740dc668 <col:153> 'int' lvalue Var 0x560c740d6168 'x$w_buff1' 'int'
    |-BinaryOperator 0x560c740dcc60 <line:804:3, col:208> 'int' '='
    | |-DeclRefExpr 0x560c740dc770 <col:3> 'int' lvalue Var 0x560c740d6070 'x$w_buff0' 'int'
    | `-ConditionalOperator 0x560c740dcc30 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x560c740dcc00 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x560c740dcbe8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x560c740dc790 <col:15> '_Bool' lvalue Var 0x560c740d63f0 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x560c740dcc18 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560c740dc7b0 <col:31> 'int' lvalue Var 0x560c740d6070 'x$w_buff0' 'int'
    |   `-ParenExpr 0x560c740dcbc8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x560c740dcb98 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x560c740dc9c0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x560c740dc8e0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x560c740dc808 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x560c740dc7f0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x560c740dc7d0 <col:45> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x560c740dc8c0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x560c740dc858 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x560c740dc840 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x560c740dc820 <col:64> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x560c740dc8a8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x560c740dc890 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x560c740dc870 <col:83> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x560c740dc9a0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x560c740dc938 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x560c740dc920 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x560c740dc900 <col:102> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x560c740dc988 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x560c740dc970 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x560c740dc950 <col:121> '_Bool' lvalue Var 0x560c740d5d50 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560c740dcb80 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560c740dc9e0 <col:138> 'int' lvalue Var 0x560c740d6070 'x$w_buff0' 'int'
    |       `-ParenExpr 0x560c740dcb60 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x560c740dcb30 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x560c740dcaa0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x560c740dca58 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x560c740dca40 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x560c740dca00 <col:151> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x560c740dca88 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x560c740dca70 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x560c740dca20 <col:169> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x560c740dcb00 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x560c740dcac0 <col:186> 'int' lvalue Var 0x560c740d6070 'x$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x560c740dcb18 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x560c740dcae0 <col:198> 'int' lvalue Var 0x560c740d6070 'x$w_buff0' 'int'
    |-BinaryOperator 0x560c740dd180 <line:805:3, col:208> 'int' '='
    | |-DeclRefExpr 0x560c740dcc80 <col:3> 'int' lvalue Var 0x560c740d6168 'x$w_buff1' 'int'
    | `-ConditionalOperator 0x560c740dd150 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x560c740dd120 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x560c740dd108 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x560c740dcca0 <col:15> '_Bool' lvalue Var 0x560c740d63f0 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x560c740dd138 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560c740dccc0 <col:31> 'int' lvalue Var 0x560c740d6168 'x$w_buff1' 'int'
    |   `-ParenExpr 0x560c740dd0e8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x560c740dd0b8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x560c740dced0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x560c740dcdf0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x560c740dcd18 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x560c740dcd00 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x560c740dcce0 <col:45> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x560c740dcdd0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x560c740dcd68 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x560c740dcd50 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x560c740dcd30 <col:64> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x560c740dcdb8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x560c740dcda0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x560c740dcd80 <col:83> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x560c740dceb0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x560c740dce48 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x560c740dce30 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x560c740dce10 <col:102> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x560c740dce98 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x560c740dce80 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x560c740dce60 <col:121> '_Bool' lvalue Var 0x560c740d5d50 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560c740dd0a0 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560c740dcef0 <col:138> 'int' lvalue Var 0x560c740d6168 'x$w_buff1' 'int'
    |       `-ParenExpr 0x560c740dd080 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x560c740dd050 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x560c740dcfb0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x560c740dcf68 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x560c740dcf50 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x560c740dcf10 <col:151> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x560c740dcf98 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x560c740dcf80 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x560c740dcf30 <col:169> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x560c740dd020 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x560c740dcfe0 <col:186> 'int' lvalue Var 0x560c740d6168 'x$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x560c740dd038 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x560c740dd000 <col:198> 'int' lvalue Var 0x560c740d6168 'x$w_buff1' 'int'
    |-BinaryOperator 0x560c740dd728 <line:806:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x560c740dd1a0 <col:3> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x560c740dd710 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560c740dd6e0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x560c740dd698 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560c740dd680 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560c740dd1c0 <col:20> '_Bool' lvalue Var 0x560c740d63f0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x560c740dd6c8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560c740dd6b0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560c740dd1e0 <col:36> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x560c740dd660 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x560c740dd630 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x560c740dd3f0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x560c740dd310 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x560c740dd238 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x560c740dd220 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x560c740dd200 <col:55> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x560c740dd2f0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x560c740dd288 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x560c740dd270 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x560c740dd250 <col:74> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x560c740dd2d8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x560c740dd2c0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x560c740dd2a0 <col:93> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x560c740dd3d0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x560c740dd368 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x560c740dd350 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x560c740dd330 <col:112> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x560c740dd3b8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x560c740dd3a0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x560c740dd380 <col:131> '_Bool' lvalue Var 0x560c740d5d50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x560c740dd618 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x560c740dd600 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x560c740dd410 <col:148> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x560c740dd5e0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x560c740dd5b0 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x560c740dd4d0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x560c740dd488 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x560c740dd470 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x560c740dd430 <col:166> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x560c740dd4b8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x560c740dd4a0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x560c740dd450 <col:184> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x560c740dd568 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x560c740dd520 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x560c740dd4f0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x560c740dd598 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x560c740dd580 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x560c740dd548 <col:212> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x560c740ddcf0 <line:807:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x560c740dd748 <col:3> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x560c740ddcd8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560c740ddca8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x560c740ddc60 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560c740ddc48 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560c740dd768 <col:20> '_Bool' lvalue Var 0x560c740d63f0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x560c740ddc90 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560c740ddc78 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560c740dd788 <col:36> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x560c740ddc28 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x560c740ddbf8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x560c740dd998 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x560c740dd8b8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x560c740dd7e0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x560c740dd7c8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x560c740dd7a8 <col:55> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x560c740dd898 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x560c740dd830 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x560c740dd818 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x560c740dd7f8 <col:74> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x560c740dd880 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x560c740dd868 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x560c740dd848 <col:93> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x560c740dd978 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x560c740dd910 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x560c740dd8f8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x560c740dd8d8 <col:112> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x560c740dd960 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x560c740dd948 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x560c740dd928 <col:131> '_Bool' lvalue Var 0x560c740d5d50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x560c740ddbe0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x560c740ddbc8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x560c740dd9b8 <col:148> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x560c740ddba8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x560c740ddb78 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x560c740dda78 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x560c740dda30 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x560c740dda18 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x560c740dd9d8 <col:166> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x560c740dda60 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x560c740dda48 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x560c740dd9f8 <col:184> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x560c740ddb48 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x560c740ddac8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x560c740dda98 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x560c740ddb60 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x560c740ddb20 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x560c740ddaf0 <col:219> 'int' 0
    |-BinaryOperator 0x560c740de2a8 <line:808:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x560c740ddd10 <col:3> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560c740de290 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560c740de260 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x560c740de218 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560c740de200 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560c740ddd30 <col:20> '_Bool' lvalue Var 0x560c740d63f0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x560c740de248 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560c740de230 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560c740ddd50 <col:36> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x560c740de1e0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x560c740de1b0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x560c740ddf60 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x560c740dde80 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x560c740ddda8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x560c740ddd90 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x560c740ddd70 <col:55> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x560c740dde60 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x560c740dddf8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x560c740ddde0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x560c740dddc0 <col:74> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x560c740dde48 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x560c740dde30 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x560c740dde10 <col:93> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x560c740ddf40 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x560c740dded8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x560c740ddec0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x560c740ddea0 <col:112> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x560c740ddf28 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x560c740ddf10 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x560c740ddef0 <col:131> '_Bool' lvalue Var 0x560c740d5d50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x560c740de198 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x560c740de180 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x560c740ddf80 <col:148> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x560c740de160 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x560c740de130 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x560c740de050 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x560c740de008 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x560c740ddff0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x560c740ddfa0 <col:166> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x560c740de038 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x560c740de020 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x560c740ddfc0 <col:184> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x560c740de0e8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x560c740de0a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x560c740de070 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x560c740de118 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x560c740de100 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x560c740de0c8 <col:212> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x560c740de870 <line:809:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x560c740de2c8 <col:3> '_Bool' lvalue Var 0x560c740d5d50 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560c740de858 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560c740de828 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x560c740de7e0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560c740de7c8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560c740de2e8 <col:20> '_Bool' lvalue Var 0x560c740d63f0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x560c740de810 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560c740de7f8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560c740de308 <col:36> '_Bool' lvalue Var 0x560c740d5d50 'x$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x560c740de7a8 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x560c740de778 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x560c740de518 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x560c740de438 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x560c740de360 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x560c740de348 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x560c740de328 <col:55> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x560c740de418 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x560c740de3b0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x560c740de398 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x560c740de378 <col:74> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x560c740de400 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x560c740de3e8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x560c740de3c8 <col:93> '_Bool' lvalue Var 0x560c740d61e0 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x560c740de4f8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x560c740de490 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x560c740de478 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x560c740de458 <col:112> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x560c740de4e0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x560c740de4c8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x560c740de4a8 <col:131> '_Bool' lvalue Var 0x560c740d5d50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x560c740de760 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x560c740de748 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x560c740de538 <col:148> '_Bool' lvalue Var 0x560c740d5d50 'x$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x560c740de728 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x560c740de6f8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x560c740de5f8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x560c740de5b0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x560c740de598 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x560c740de558 <col:166> '_Bool' lvalue Var 0x560c740d60e8 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x560c740de5e0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x560c740de5c8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x560c740de578 <col:184> '_Bool' lvalue Var 0x560c740d5b70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x560c740de6c8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x560c740de648 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x560c740de618 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x560c740de6e0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x560c740de6a0 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x560c740de670 <col:219> 'int' 0
    |-BinaryOperator 0x560c740deb40 <line:810:3, col:95> '_Bool' '='
    | |-DeclRefExpr 0x560c740de890 <col:3> '_Bool' lvalue Var 0x560c740d58e0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x560c740deb28 <col:21, col:95> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x560c740deb10 <col:21, col:95> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x560c740deaf0 <col:22, col:95> 'int'
    |       `-BinaryOperator 0x560c740dead0 <col:23, col:94> 'int' '&&'
    |         |-BinaryOperator 0x560c740dea38 <col:23, col:66> 'int' '&&'
    |         | |-BinaryOperator 0x560c740de9a0 <col:23, col:38> 'int' '&&'
    |         | | |-BinaryOperator 0x560c740de908 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x560c740de8f0 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x560c740de8b0 <col:23> 'int' lvalue Var 0x560c740d59e0 'x' 'int'
    |         | | | `-IntegerLiteral 0x560c740de8d0 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x560c740de980 <col:33, col:38> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x560c740de968 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x560c740de928 <col:33> 'int' lvalue Var 0x560c740d62e0 'y' 'int'
    |         | |   `-IntegerLiteral 0x560c740de948 <col:38> 'int' 2
    |         | `-BinaryOperator 0x560c740dea18 <col:43, col:66> 'int' '=='
    |         |   |-ImplicitCastExpr 0x560c740dea00 <col:43> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x560c740de9c0 <col:43> 'int' lvalue Var 0x560c740d56b0 '__unbuffered_p0_EAX' 'int'
    |         |   `-IntegerLiteral 0x560c740de9e0 <col:66> 'int' 2
    |         `-BinaryOperator 0x560c740deab0 <col:71, col:94> 'int' '=='
    |           |-ImplicitCastExpr 0x560c740dea98 <col:71> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x560c740dea58 <col:71> 'int' lvalue Var 0x560c740d57d0 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x560c740dea78 <col:94> 'int' 1
    |-BinaryOperator 0x560c740dec70 <line:811:3, col:37> 'int' '='
    | |-DeclRefExpr 0x560c740deb60 <col:3> 'int' lvalue Var 0x560c740d59e0 'x' 'int'
    | `-ConditionalOperator 0x560c740dec40 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x560c740debf8 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x560c740debe0 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x560c740deb80 <col:7> '_Bool' lvalue Var 0x560c740d5a78 'x$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x560c740dec10 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560c740deba0 <col:25> 'int' lvalue Var 0x560c740d5af8 'x$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x560c740dec28 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x560c740debc0 <col:37> 'int' lvalue Var 0x560c740d59e0 'x' 'int'
    |-BinaryOperator 0x560c740ded08 <line:812:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x560c740dec90 <col:3> '_Bool' lvalue Var 0x560c740d5a78 'x$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x560c740dece0 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x560c740decb0 <col:28> 'int' 0
    |-CallExpr 0x560c740ded60 <line:813:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560c740ded48 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560c740ded28 <col:3> 'void ()' Function 0x560c7407c410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560c740dedd8 <line:814:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560c740dedc0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560c740ded80 <col:3> 'void (int)' Function 0x560c7407c0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x560c740dee18 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560c740dee00 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560c740deda0 <col:21> '_Bool' lvalue Var 0x560c740d58e0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x560c740dee50 <line:815:3, col:10>
      `-IntegerLiteral 0x560c740dee30 <col:10> 'int' 0
