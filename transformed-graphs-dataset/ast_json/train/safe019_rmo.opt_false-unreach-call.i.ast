TranslationUnitDecl 0x55626dc3cf88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55626dc3d848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55626dc3d520 '__int128'
|-TypedefDecl 0x55626dc3d8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55626dc3d540 'unsigned __int128'
|-TypedefDecl 0x55626dc3dbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55626dc3d990 'struct __NSConstantString_tag'
|   `-Record 0x55626dc3d910 '__NSConstantString_tag'
|-TypedefDecl 0x55626dc3dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55626dc3dc20 'char *'
|   `-BuiltinType 0x55626dc3d020 'char'
|-TypedefDecl 0x55626dc7cb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55626dc3df00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55626dc3dd40 'struct __va_list_tag'
|     `-Record 0x55626dc3dcc0 '__va_list_tag'
|-FunctionDecl 0x55626dc7cc80 <pthread-wmm/safe019_rmo.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55626dc7ce50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55626dc7cd80 <col:31> col:34 'int'
|-FunctionDecl 0x55626dc7cfc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55626dc7d0f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55626dc7d238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55626dc7d1a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55626dc7d468 <col:40, col:99>
|   |-IfStmt 0x55626dc7d438 <col:42, col:88>
|   | |-UnaryOperator 0x55626dc7d318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55626dc7d300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55626dc7d2e0 <col:47> 'int' lvalue ParmVar 0x55626dc7d1a8 'expression' 'int'
|   | `-CompoundStmt 0x55626dc7d420 <col:59, col:88>
|   |   `-LabelStmt 0x55626dc7d408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55626dc7d398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55626dc7d380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55626dc7d330 <col:68> 'void () __attribute__((noreturn))' Function 0x55626dc7d0f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55626dc7d450 <col:89>
|   `-ReturnStmt 0x55626dc7d458 <col:91>
|-FunctionDecl 0x55626dc7d4b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55626dc7d570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55626dc7d8f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55626dc7d628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55626dc7d6a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55626dc7d728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55626dc7d7a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55626dc7d9b0 <line:11:22>
|-FunctionDecl 0x55626dca2f10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55626dc7da20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55626dc7daa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55626dca2d40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55626dca2dc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55626dca2fd0 <line:14:22>
|-FunctionDecl 0x55626dca3280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55626dca3040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55626dca30c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55626dca3140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55626dca3338 <line:16:22>
|-TypedefDecl 0x55626dca33a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55626dc3d0e0 'unsigned char'
|-TypedefDecl 0x55626dca3418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55626dc3d100 'unsigned short'
|-TypedefDecl 0x55626dca3488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55626dc3d120 'unsigned int'
|-TypedefDecl 0x55626dca34f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55626dc3d140 'unsigned long'
|-TypedefDecl 0x55626dca3568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55626dc3d040 'signed char'
|-TypedefDecl 0x55626dca35d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55626dc3d0e0 'unsigned char'
|-TypedefDecl 0x55626dca3648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55626dc3d060 'short'
|-TypedefDecl 0x55626dca36b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55626dc3d100 'unsigned short'
|-TypedefDecl 0x55626dca3728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55626dc3d080 'int'
|-TypedefDecl 0x55626dca3798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55626dc3d120 'unsigned int'
|-TypedefDecl 0x55626dca3808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55626dc3d0a0 'long'
|-TypedefDecl 0x55626dca3878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55626dc3d140 'unsigned long'
|-TypedefDecl 0x55626dca38e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55626dc3d0a0 'long'
|-TypedefDecl 0x55626dca3958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55626dc3d140 'unsigned long'
|-TypedefDecl 0x55626dca39c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55626dc3d140 'unsigned long'
|-TypedefDecl 0x55626dca3a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55626dc3d120 'unsigned int'
|-TypedefDecl 0x55626dca3aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55626dc3d120 'unsigned int'
|-TypedefDecl 0x55626dca3b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55626dc3d140 'unsigned long'
|-TypedefDecl 0x55626dca3b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55626dc3d140 'unsigned long'
|-TypedefDecl 0x55626dca3bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55626dc3d120 'unsigned int'
|-TypedefDecl 0x55626dca3c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55626dc3d140 'unsigned long'
|-TypedefDecl 0x55626dca3cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55626dc3d0a0 'long'
|-TypedefDecl 0x55626dca3d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55626dc3d0a0 'long'
|-TypedefDecl 0x55626dca3dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55626dc3d080 'int'
|-RecordDecl 0x55626dca3e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55626dca3f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55626dca4030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55626dca3fd0 'struct __fsid_t' sugar
|   `-RecordType 0x55626dca3eb0 '__fsid_t'
|     `-Record 0x55626dca3e30 ''
|-TypedefDecl 0x55626dca40b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55626dc3d0a0 'long'
|-TypedefDecl 0x55626dca4128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55626dc3d140 'unsigned long'
|-TypedefDecl 0x55626dca4198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55626dc3d140 'unsigned long'
|-TypedefDecl 0x55626dca4208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55626dc3d120 'unsigned int'
|-TypedefDecl 0x55626dca4278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55626dc3d0a0 'long'
|-TypedefDecl 0x55626dca42e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55626dc3d120 'unsigned int'
|-TypedefDecl 0x55626dca4358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55626dc3d0a0 'long'
|-TypedefDecl 0x55626dca43c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55626dc3d080 'int'
|-TypedefDecl 0x55626dca4438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55626dc3d080 'int'
|-TypedefDecl 0x55626dca44a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55626dc3d080 'int'
|-TypedefDecl 0x55626dca4518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55626dc3d7a0 'void *'
|   `-BuiltinType 0x55626dc3cfe0 'void'
|-TypedefDecl 0x55626dca4588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55626dc3d0a0 'long'
|-TypedefDecl 0x55626dca45f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55626dc3d0a0 'long'
|-TypedefDecl 0x55626dca4668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55626dc3d0a0 'long'
|-TypedefDecl 0x55626dca46d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55626dc3d140 'unsigned long'
|-TypedefDecl 0x55626dca4748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55626dc3d140 'unsigned long'
|-TypedefDecl 0x55626dca47b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55626dc3d140 'unsigned long'
|-TypedefDecl 0x55626dca4828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55626dc3d140 'unsigned long'
|-TypedefDecl 0x55626dca4898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55626dc3d0a0 'long'
|-TypedefDecl 0x55626dca4908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55626dc3d0a0 'long'
|-TypedefDecl 0x55626dca4978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55626dc3d0a0 'long'
|-TypedefDecl 0x55626dca49e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55626dc3d140 'unsigned long'
|-TypedefDecl 0x55626dca4a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55626dca4a40 '__off64_t' sugar
|   |-Typedef 0x55626dca3d68 '__off64_t'
|   `-BuiltinType 0x55626dc3d0a0 'long'
|-TypedefDecl 0x55626dca4b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55626dca4b30 '__quad_t *'
|   `-TypedefType 0x55626dca4ad0 '__quad_t' sugar
|     |-Typedef 0x55626dca38e8 '__quad_t'
|     `-BuiltinType 0x55626dc3d0a0 'long'
|-TypedefDecl 0x55626dca4be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55626dc3dc20 'char *'
|   `-BuiltinType 0x55626dc3d020 'char'
|-TypedefDecl 0x55626dca4c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55626dc3d0a0 'long'
|-TypedefDecl 0x55626dca4cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55626dc3d120 'unsigned int'
|-FunctionDecl 0x55626dca4e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55626dca4d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55626dca5148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55626dca5138 <line:73:3, col:34>
|     `-CallExpr 0x55626dca50f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55626dca50e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55626dca5070 <col:10> '<builtin fn type>' Function 0x55626dca4ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55626dca5120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55626dca5090 <col:29> 'unsigned int' lvalue ParmVar 0x55626dca4d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x55626dca4ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55626dca4f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55626dca4ff0 <col:10> Implicit
| `-ConstAttr 0x55626dca5048 <col:10> Implicit
|-FunctionDecl 0x55626dca52a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55626dca5198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55626dca55b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55626dca55a8 <line:78:3, col:34>
|     `-CallExpr 0x55626dca5568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55626dca5550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55626dca54d8 <col:10> '<builtin fn type>' Function 0x55626dca5348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55626dca5590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55626dca54f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55626dca5198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55626dca5348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55626dca53e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55626dca5458 <col:10> Implicit
| `-ConstAttr 0x55626dca54b0 <col:10> Implicit
|-TypedefDecl 0x55626dca55e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55626dc3d140 'unsigned long'
|-TypedefDecl 0x55626dca5678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55626dca5640 '__time_t' sugar
|   |-Typedef 0x55626dca4278 '__time_t'
|   `-BuiltinType 0x55626dc3d0a0 'long'
|-RecordDecl 0x55626dca56d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55626dca5788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55626dca5818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55626dca58a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55626dca5870 '__pid_t' sugar
|   |-Typedef 0x55626dca3dd8 '__pid_t'
|   `-BuiltinType 0x55626dc3d080 'int'
|-RecordDecl 0x55626dca5900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55626dca59c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55626dca5a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55626dca5ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55626dca5b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55626dc3d140 'unsigned long'
|-RecordDecl 0x55626dca5b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55626dca7e70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55626dca7f20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55626dca7ec0 'struct cpu_set_t' sugar
|   `-RecordType 0x55626dca5c10 'cpu_set_t'
|     `-Record 0x55626dca5b90 ''
|-FunctionDecl 0x55626dca81f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55626dca7fc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55626dca80d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55626dca82a8 <line:108:19>
|-FunctionDecl 0x55626dca8480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55626dca8310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55626dca8528 <col:69>
|-FunctionDecl 0x55626dca86a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55626dca8590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55626dca8748 <col:64>
|-FunctionDecl 0x55626dca8a08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55626dca87b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55626dca88e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55626dca8ab8 <line:114:22>
|-FunctionDecl 0x55626dca8e60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55626dca8b20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55626dca8c18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55626dca8f10 <col:88>
|-FunctionDecl 0x55626dca91c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55626dca8f78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55626dca8ff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55626dca9088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55626dca9280 <col:62>
|-FunctionDecl 0x55626dca93f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55626dca92e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55626dca94a0 <col:63>
|-FunctionDecl 0x55626dca95c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55626dca9668 <col:47>
|-FunctionDecl 0x55626dca9770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55626dca96d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55626dca9818 <col:69>
|-FunctionDecl 0x55626dca9920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55626dca9888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55626dca99c8 <col:69>
|-FunctionDecl 0x55626dca9c88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55626dca9a30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55626dca9b68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55626dca9d38 <col:88>
|-TypedefDecl 0x55626dca9dc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55626dca9d90 '__clock_t' sugar
|   |-Typedef 0x55626dca40b8 '__clock_t'
|   `-BuiltinType 0x55626dc3d0a0 'long'
|-TypedefDecl 0x55626dcaa7e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55626dca9e20 '__clockid_t' sugar
|   |-Typedef 0x55626dca44a8 '__clockid_t'
|   `-BuiltinType 0x55626dc3d080 'int'
|-TypedefDecl 0x55626dcaa878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55626dcaa840 '__timer_t' sugar
|   |-Typedef 0x55626dca4518 '__timer_t'
|   `-PointerType 0x55626dc3d7a0 'void *'
|     `-BuiltinType 0x55626dc3cfe0 'void'
|-RecordDecl 0x55626dcaa8d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55626dcaa990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55626dcaa9f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55626dcaaa60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55626dcaaac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55626dcaab30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55626dcaab98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55626dcaac00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55626dcaac68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55626dcaacd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55626dcaad38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55626dcaada0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55626dcaadf0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55626dcaaeb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55626dcaaf28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55626dcaafd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55626dcab1a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55626dcab240 <col:45>
|-FunctionDecl 0x55626dcab420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55626dcab310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55626dcab4c8 <col:54>
|-FunctionDecl 0x55626dcab6c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55626dcab530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55626dcab5a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55626dcab778 <line:158:22>
| `-ConstAttr 0x55626dcac410 <col:63>
|-FunctionDecl 0x55626dcac610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55626dcac508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55626dcac6b8 <col:56>
|-FunctionDecl 0x55626dcaca60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55626dcac728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55626dcac7a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55626dcac820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55626dcac918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55626dcacb20 <col:54>
|-RecordDecl 0x55626dcacb78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55626dcacc28 parent 0x55626dc3cf88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55626dcace88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55626dcacf28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55626dcacf90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55626dcacff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55626dcad0e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55626dcad208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55626dcad1b0 'struct __locale_struct *'
|   `-ElaboratedType 0x55626dcad140 'struct __locale_struct' sugar
|     `-RecordType 0x55626dcacc00 'struct __locale_struct'
|       `-Record 0x55626dcacb78 '__locale_struct'
|-TypedefDecl 0x55626dcad2b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55626dcad280 '__locale_t' sugar
|   |-Typedef 0x55626dcad208 '__locale_t'
|   `-PointerType 0x55626dcad1b0 'struct __locale_struct *'
|     `-ElaboratedType 0x55626dcad140 'struct __locale_struct' sugar
|       `-RecordType 0x55626dcacc00 'struct __locale_struct'
|         `-Record 0x55626dcacb78 '__locale_struct'
|-FunctionDecl 0x55626dcad6b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55626dcad328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55626dcad3a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55626dcad438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55626dcad4c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55626dcad540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55626dcad778 <col:40>
|-FunctionDecl 0x55626dcad968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55626dcad840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55626dcada10 <col:66>
|-FunctionDecl 0x55626dcadb20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55626dcada78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55626dcadbc8 <col:69>
|-FunctionDecl 0x55626dcaddf8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55626dcadc30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55626dcadcc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55626dcadea8 <col:52>
|-FunctionDecl 0x55626dcae050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55626dcadf10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55626dcadfa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55626dcae100 <col:55>
|-FunctionDecl 0x55626dcae298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55626dcae180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55626dcae340 <col:62>
|-FunctionDecl 0x55626dcae578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55626dcae3a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55626dcae620 <col:60>
|-FunctionDecl 0x55626dcae848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55626dcae6a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55626dcae720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55626dcae8f8 <col:44>
|-FunctionDecl 0x55626dcaeb08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55626dcae960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55626dcae9e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55626dcaebb8 <col:49>
|-VarDecl 0x55626dcaecb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55626dcaed38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55626dcaedb8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55626dcaee80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55626dcaefb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55626dcaf050 <col:42>
|-VarDecl 0x55626dcaf0c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55626dcaf140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55626dcaf2c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55626dcaf1b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55626dcaf370 <col:57>
|-FunctionDecl 0x55626dcb04f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55626dcaf3f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55626dcb0598 <col:56>
|-FunctionDecl 0x55626dcb06a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55626dcb0618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55626dcb0750 <col:59>
|-FunctionDecl 0x55626dcb0858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55626dcb07c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55626dcb0900 <col:48>
| `-ConstAttr 0x55626dcb0958 <col:89>
|-FunctionDecl 0x55626dcb0bb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55626dcb0a08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55626dcb0a98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55626dcb0e18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55626dcb0ca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55626dcb0d38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55626dcb0ec8 <col:88>
|-FunctionDecl 0x55626dcb1060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55626dcb0f30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55626dcb0fc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55626dcb1110 <col:88>
|-FunctionDecl 0x55626dcb1328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55626dcb1178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55626dcb1208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55626dcb13d8 <line:209:22>
|-FunctionDecl 0x55626dcb1778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55626dcb1440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55626dcb1500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55626dcb1590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55626dcb1620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55626dcb1a78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55626dcb1878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55626dcb1950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55626dcb1b28 <col:85>
|-FunctionDecl 0x55626dcb1f18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55626dcb1b90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55626dcb1cc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55626dcb1dd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55626dcb1fd0 <col:52>
|-FunctionDecl 0x55626dcb2148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55626dcb2038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55626dcb21f0 <col:61>
|-FunctionDecl 0x55626dcb2668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55626dcb2258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55626dcb22d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55626dcb2408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55626dcb2510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55626dcb2728 <col:62>
|-FunctionDecl 0x55626dcb2948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55626dcb2790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55626dcb2820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55626dcb29f8 <line:222:22>
|-FunctionDecl 0x55626dcb2af8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55626dcb2a60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55626dcb2ba0 <col:65>
|-TypedefDecl 0x55626dcb2c10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55626dc3d140 'unsigned long'
|-RecordDecl 0x55626dcb2c68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55626dcb2db0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55626dcb2e18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55626dcb2ec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55626dcb2e70 'union pthread_attr_t' sugar
|   `-RecordType 0x55626dcb2cf0 'union pthread_attr_t'
|     `-Record 0x55626dcb2c68 'pthread_attr_t'
|-RecordDecl 0x55626dcb2f20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55626dcb3098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55626dcb3110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55626dcb31c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55626dcb3160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55626dcb2fa0 'struct __pthread_internal_list'
|     `-Record 0x55626dcb2f20 '__pthread_internal_list'
|-RecordDecl 0x55626dcb3230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55626dcb32d8 parent 0x55626dc3cf88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55626dcb33b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55626dcb3418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55626dcb3480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55626dcb7530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55626dcb7598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55626dcb7600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55626dcb7688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55626dcb7740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55626dcb7830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55626dcb7898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55626dcb7a20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55626dcb79c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55626dcb32b0 'pthread_mutex_t'
|     `-Record 0x55626dcb3230 ''
|-RecordDecl 0x55626dcb7a90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55626dcb7bd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55626dcb7c38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55626dcb7cf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55626dcb7c90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55626dcb7b10 'pthread_mutexattr_t'
|     `-Record 0x55626dcb7a90 ''
|-RecordDecl 0x55626dcb7d60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55626dcb7e08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55626dcb7ed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55626dcb7f38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55626dcb7fa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55626dcb8008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55626dcb8070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55626dcb80d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55626dcb8140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55626dcb81a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55626dcb8260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe019_rmo.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe019_rmo.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55626dcb8350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55626dcb83b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55626dcb8540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55626dcb8490 'union pthread_cond_t' sugar
|   `-RecordType 0x55626dcb7de0 'pthread_cond_t'
|     `-Record 0x55626dcb7d60 ''
|-RecordDecl 0x55626dcb85b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55626dcb86b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55626dcb8718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55626dcb87d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55626dcb8770 'union pthread_condattr_t' sugar
|   `-RecordType 0x55626dcb8630 'pthread_condattr_t'
|     `-Record 0x55626dcb85b0 ''
|-TypedefDecl 0x55626dcb8858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55626dc3d120 'unsigned int'
|-TypedefDecl 0x55626dcb88c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55626dc3d080 'int'
|-RecordDecl 0x55626dcb8920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55626dcb89c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55626dcb8a90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55626dcb8af8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55626dcb8b60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55626dcb8bc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55626dcb8c30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55626dcb8c98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55626dcb8d00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55626dcb8d68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55626dcb8dd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55626dcb8e38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55626dcb8ea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55626dcb8f50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe019_rmo.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe019_rmo.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55626dcb8ff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55626dcb9060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55626dcb91b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55626dcb9150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55626dcb89a0 'pthread_rwlock_t'
|     `-Record 0x55626dcb8920 ''
|-RecordDecl 0x55626dcb9220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55626dcb9360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55626dcb93c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55626dcb9480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55626dcb9420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55626dcb92a0 'pthread_rwlockattr_t'
|     `-Record 0x55626dcb9220 ''
|-TypedefDecl 0x55626dcbb560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55626dc3d084 'volatile int' volatile
|   `-BuiltinType 0x55626dc3d080 'int'
|-RecordDecl 0x55626dcbb5b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55626dcbb700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55626dcbb768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55626dcbb820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55626dcbb7c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55626dcbb640 'pthread_barrier_t'
|     `-Record 0x55626dcbb5b8 ''
|-RecordDecl 0x55626dcbb890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55626dcbb990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55626dcbb9f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55626dcbbab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55626dcbba50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55626dcbb910 'pthread_barrierattr_t'
|     `-Record 0x55626dcbb890 ''
|-TypedefDecl 0x55626dcbbbc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55626dcbbb60 'long [8]' 8 
|   `-BuiltinType 0x55626dc3d0a0 'long'
|-EnumDecl 0x55626dcbbc20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55626dcbbce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55626dcbbd38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55626dcbbd88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55626dcbbe58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55626dcbbea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55626dcbbef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55626dcbbf48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55626dcbbfd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55626dcbbfb8 <col:26> 'int'
| |   `-DeclRefExpr 0x55626dcbbf98 <col:26> 'int' EnumConstant 0x55626dcbbe58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55626dcbc058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55626dcbc040 <col:29> 'int'
| |   `-DeclRefExpr 0x55626dcbc020 <col:29> 'int' EnumConstant 0x55626dcbbea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55626dcbc0e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55626dcbc0c8 <col:30> 'int'
| |   `-DeclRefExpr 0x55626dcbc0a8 <col:30> 'int' EnumConstant 0x55626dcbbef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55626dcbc168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55626dcbc150 <col:27> 'int'
|     `-DeclRefExpr 0x55626dcbc130 <col:27> 'int' EnumConstant 0x55626dcbbfd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55626dcbc1b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55626dcbc288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55626dcbc310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55626dcbc2f8 <col:30> 'int'
| |   `-DeclRefExpr 0x55626dcbc2d8 <col:30> 'int' EnumConstant 0x55626dcbc288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55626dcbc360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55626dcbc3e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55626dcbc3d0 <col:29> 'int'
|     `-DeclRefExpr 0x55626dcbc3b0 <col:29> 'int' EnumConstant 0x55626dcbc360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55626dcbc438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55626dcbc508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55626dcbc570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55626dcbc5c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55626dcbc610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55626dcbc6d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55626dcbc728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55626dcbc778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55626dcbc800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55626dcbc7e8 <col:31> 'int'
|     `-DeclRefExpr 0x55626dcbc7c8 <col:31> 'int' EnumConstant 0x55626dcbc6d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55626dcbc850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55626dcbc918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55626dcbc968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55626dcbc9b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55626dcbca88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55626dcbcad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55626dcbcb28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55626dcbcbf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55626dcbcc48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55626dcbcc98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55626dcbced8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55626dcbcf40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55626dcbcfa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55626dcbd0c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55626dcbd118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55626dcbd1e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55626dcbd238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55626dcbd288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55626dcbd358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55626dcbd3a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55626dcbd9d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55626dcbd4a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55626dcbd5c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55626dcbd7c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55626dcbd840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55626dcbda98 <col:47>
| |-NonNullAttr 0x55626dcbdaf0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55626dcbdb28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55626dcbdc50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55626dcbdb80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55626dcbdea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55626dcbdd08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55626dcbdd88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55626dcbe078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55626dcbdf68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55626dcbe120 <col:60>
|-FunctionDecl 0x55626dcbe270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55626dcbe310 <col:54>
| `-ConstAttr 0x55626dcbe368 <col:95>
|-FunctionDecl 0x55626dcbeda0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55626dcbe3a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55626dcbe418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55626dcbee50 <line:395:19>
| `-ConstAttr 0x55626dcbeea8 <col:60>
|-FunctionDecl 0x55626dcbf078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55626dcbef40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55626dcbf120 <col:71>
| `-NonNullAttr 0x55626dcbf178 <col:112, col:126> 1
|-FunctionDecl 0x55626dcbf280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55626dcbf1c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55626dcbf328 <line:398:22>
| `-NonNullAttr 0x55626dcbf380 <col:63, col:77> 1
|-FunctionDecl 0x55626dcbf5a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55626dcbf3c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55626dcbf448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55626dcbf658 <line:401:22>
| `-NonNullAttr 0x55626dcbf6b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55626dcbf8b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55626dcbf6f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55626dcbf778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55626dcbf968 <line:404:22>
| `-NonNullAttr 0x55626dcbf9c0 <col:63, col:77> 1
|-FunctionDecl 0x55626dcbfc18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55626dcbfa08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55626dcbfab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55626dcbfcc8 <line:407:22>
| `-NonNullAttr 0x55626dcbfd20 <col:63, col:80> 1 2
|-FunctionDecl 0x55626dcc0f78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55626dcc0dc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55626dcc0e38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55626dcc1028 <line:410:22>
| `-NonNullAttr 0x55626dcc1080 <col:63, col:77> 1
|-FunctionDecl 0x55626dcc12b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55626dcc10c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55626dcc1158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55626dcc1368 <line:413:22>
| `-NonNullAttr 0x55626dcc13c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55626dcc15f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55626dcc1408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55626dcc1498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55626dcc16a8 <col:37>
| `-NonNullAttr 0x55626dcc1700 <col:78, col:95> 1 2
|-FunctionDecl 0x55626dcc18e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55626dcc1748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55626dcc17c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55626dcc1998 <line:419:22>
| `-NonNullAttr 0x55626dcc19f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55626dcc1b78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55626dcc1a38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55626dcc1ab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55626dcc1c28 <line:421:22>
| `-NonNullAttr 0x55626dcc1c80 <col:63, col:77> 1
|-FunctionDecl 0x55626dcc2e58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55626dcc1cc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55626dcc1d48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55626dcc2f08 <line:424:22>
| `-NonNullAttr 0x55626dcc2f60 <col:63, col:80> 1 2
|-FunctionDecl 0x55626dcc30e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55626dcc2fa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55626dcc3028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55626dcc3198 <line:427:22>
| `-NonNullAttr 0x55626dcc31f0 <col:63, col:77> 1
|-FunctionDecl 0x55626dcc3398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55626dcc3238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55626dcc32b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55626dcc3448 <line:430:22>
| `-NonNullAttr 0x55626dcc34a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55626dcc3628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55626dcc34e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55626dcc3568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55626dcc36d8 <line:432:22>
| `-NonNullAttr 0x55626dcc3730 <col:63, col:77> 1
|-FunctionDecl 0x55626dcc3958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55626dcc3778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55626dcc37f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55626dcc3a08 <line:435:22>
| |-NonNullAttr 0x55626dcc3a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55626dcc3a98 <col:100> "" ""
|-FunctionDecl 0x55626dcc3ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55626dcc3ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55626dcc3b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55626dcc3d58 <line:438:22>
| |-NonNullAttr 0x55626dcc3db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x55626dcc3df8 <col:97> "" ""
|-FunctionDecl 0x55626dcc3fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55626dcc3e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55626dcc3ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55626dcc4098 <line:441:22>
| `-NonNullAttr 0x55626dcc40f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55626dcc4270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55626dcc4138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55626dcc41b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55626dcc4320 <line:444:22>
| `-NonNullAttr 0x55626dcc4378 <col:63, col:77> 1
|-FunctionDecl 0x55626dcc4668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55626dcc43c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55626dcc4448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55626dcc44c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55626dcc4720 <line:448:22>
| `-NonNullAttr 0x55626dcc4778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55626dcc4a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55626dcc47d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55626dcc4850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55626dcc48c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55626dcc4ae0 <col:43>
| `-NonNullAttr 0x55626dcc4b38 <col:84, col:98> 1
|-FunctionDecl 0x55626dcc4e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55626dcc4b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55626dcc4c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55626dcc4c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55626dcc4ef8 <line:453:22>
| `-NonNullAttr 0x55626dcc4f50 <col:63, col:77> 3
|-FunctionDecl 0x55626dcc5228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55626dcc4f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55626dcc5018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55626dcc50a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55626dcc52e0 <line:457:22>
| `-NonNullAttr 0x55626dcc5338 <col:63, col:80> 2 3
|-FunctionDecl 0x55626dcc5528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55626dcc5388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55626dcc5408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55626dcc55d8 <line:459:22>
|-FunctionDecl 0x55626dcc59a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55626dcc56a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55626dcc5840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55626dcc5a58 <col:52, col:69> 1 2
|-FunctionDecl 0x55626dcc5c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55626dcc5ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55626dcc5b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55626dcc5e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55626dcc5cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55626dcc5d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55626dcc5f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55626dcc5ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55626dcc60a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55626dcc6148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55626dcc61f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55626dcc62e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55626dcc6350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55626dcc6520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe019_rmo.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55626dcc6618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55626dcc66d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55626dcc6670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55626dcc61d0 '__pthread_unwind_buf_t'
| |   `-Record 0x55626dcc6148 ''
| `-AlignedAttr 0x55626dcc6728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55626dcc67a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55626dcc6900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55626dcc6968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55626dcc69d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55626dcc6a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55626dcc6c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55626dcc6b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55626dcc6e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55626dcc6cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55626dcc6fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55626dcc6ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55626dcc7088 <line:488:22>
|-RecordDecl 0x55626dcc70e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55626dcc73f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55626dcc7258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55626dcc72d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55626dcc74a8 <col:86>
| `-ReturnsTwiceAttr 0x55626dcc7500 <col:12> Implicit
|-FunctionDecl 0x55626dcc7828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55626dcc75d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55626dcc76e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55626dcc78d8 <line:494:22>
| `-NonNullAttr 0x55626dcc7930 <col:63, col:77> 1
|-FunctionDecl 0x55626dcc7aa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55626dcc7978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55626dcc7b50 <line:496:22>
| `-NonNullAttr 0x55626dcc7ba8 <col:63, col:77> 1
|-FunctionDecl 0x55626dcc7cb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55626dcc7bf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55626dcc7d58 <line:498:22>
| `-NonNullAttr 0x55626dcc7db0 <col:52, col:66> 1
|-FunctionDecl 0x55626dcc7ee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55626dcc7e30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55626dcc7f90 <line:500:22>
| `-NonNullAttr 0x55626dcc7fe8 <col:52, col:66> 1
|-FunctionDecl 0x55626dcc8228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55626dcc8038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55626dcc80c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55626dcc82d8 <col:36>
| `-NonNullAttr 0x55626dcc8330 <col:66, col:83> 1 2
|-FunctionDecl 0x55626dcc8430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55626dcc8378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55626dcc84d8 <line:505:22>
| `-NonNullAttr 0x55626dcc8530 <col:52, col:66> 1
|-FunctionDecl 0x55626dcc87c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55626dcc85e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55626dcc8660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55626dcc8878 <line:509:22>
| `-NonNullAttr 0x55626dcc88d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55626dcc8b98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55626dcc8918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55626dcc8998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55626dcc8a18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55626dcc8c50 <line:513:22>
| `-NonNullAttr 0x55626dcc8ca8 <col:63, col:80> 1 3
|-FunctionDecl 0x55626dcc8e40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55626dcc8cf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55626dcc8ee8 <line:515:22>
| `-NonNullAttr 0x55626dcc8f40 <col:63, col:77> 1
|-FunctionDecl 0x55626dcc9128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55626dcc8ff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55626dcc91d0 <line:517:22>
| `-NonNullAttr 0x55626dcc9228 <col:63, col:77> 1
|-FunctionDecl 0x55626dcc9330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55626dcc9278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55626dcc93d8 <line:519:22>
| `-NonNullAttr 0x55626dcc9430 <col:63, col:77> 1
|-FunctionDecl 0x55626dcc9658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55626dcc9478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55626dcc94f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55626dcc9708 <line:523:22>
| `-NonNullAttr 0x55626dcc9760 <col:63, col:80> 1 2
|-FunctionDecl 0x55626dcc9968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55626dcc97a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55626dcc9828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55626dcc9a18 <line:526:22>
| `-NonNullAttr 0x55626dcc9a70 <col:63, col:77> 1
|-FunctionDecl 0x55626dcc9c18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55626dcc9ab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55626dcc9b38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55626dcc9cc8 <line:529:22>
| `-NonNullAttr 0x55626dcc9d20 <col:63, col:80> 1 2
|-FunctionDecl 0x55626dccaf20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55626dcc9d68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55626dccae60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55626dccafd0 <line:531:22>
| `-NonNullAttr 0x55626dccb028 <col:63, col:77> 1
|-FunctionDecl 0x55626dccb1d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55626dccb078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55626dccb0f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55626dccb288 <line:535:22>
| `-NonNullAttr 0x55626dccb2e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55626dccb468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55626dccb328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55626dccb3a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55626dccb518 <line:538:22>
| `-NonNullAttr 0x55626dccb570 <col:63, col:77> 1
|-FunctionDecl 0x55626dccb718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55626dccb5b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55626dccb638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55626dccb7c8 <line:542:22>
| `-NonNullAttr 0x55626dccb820 <col:63, col:80> 1 2
|-FunctionDecl 0x55626dccb9a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55626dccb868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55626dccb8e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55626dccba58 <line:545:22>
| `-NonNullAttr 0x55626dccbab0 <col:63, col:77> 1
|-FunctionDecl 0x55626dccbc98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55626dccbaf8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55626dccbb78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55626dccbd48 <line:548:22>
| `-NonNullAttr 0x55626dccbda0 <col:63, col:80> 1 2
|-FunctionDecl 0x55626dcccf58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55626dccbde8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55626dccce98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55626dccd008 <line:551:22>
| `-NonNullAttr 0x55626dccd060 <col:63, col:77> 1
|-FunctionDecl 0x55626dccd398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55626dccd140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55626dccd250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55626dccd448 <col:29>
| `-NonNullAttr 0x55626dccd4a0 <col:70, col:84> 1
|-FunctionDecl 0x55626dccd618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55626dccd4e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55626dccd6c0 <line:556:22>
| `-NonNullAttr 0x55626dccd718 <col:63, col:77> 1
|-FunctionDecl 0x55626dccd820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55626dccd768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55626dccd8c8 <line:558:22>
| `-NonNullAttr 0x55626dccd920 <col:52, col:66> 1
|-FunctionDecl 0x55626dccda20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55626dccd968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55626dccdac8 <line:560:19>
| `-NonNullAttr 0x55626dccdb20 <col:49, col:63> 1
|-FunctionDecl 0x55626dccdd58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55626dccdb68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55626dccdbf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55626dccde08 <col:39>
| `-NonNullAttr 0x55626dccde90 <col:69, col:86> 1 2
|-FunctionDecl 0x55626dccdf90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55626dccded8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55626dcce038 <line:565:22>
| `-NonNullAttr 0x55626dcce090 <col:52, col:66> 1
|-FunctionDecl 0x55626dcce190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55626dcce0d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55626dcce238 <line:567:22>
| `-NonNullAttr 0x55626dcce290 <col:52, col:66> 1
|-FunctionDecl 0x55626dcce448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55626dcce2d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55626dcce368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55626dcce4f8 <col:39>
| `-NonNullAttr 0x55626dcce550 <col:69, col:86> 1 2
|-FunctionDecl 0x55626dcce650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55626dcce598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55626dcce6f8 <line:572:22>
| `-NonNullAttr 0x55626dcce750 <col:52, col:66> 1
|-FunctionDecl 0x55626dcce938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55626dcce800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55626dcce9e0 <line:574:22>
| `-NonNullAttr 0x55626dccea38 <col:63, col:77> 1
|-FunctionDecl 0x55626dcceb40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55626dccea88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55626dccebe8 <line:576:22>
| `-NonNullAttr 0x55626dccec40 <col:63, col:77> 1
|-FunctionDecl 0x55626dcceea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55626dccec88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55626dcced08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55626dccef50 <line:580:22>
| `-NonNullAttr 0x55626dccefa8 <col:63, col:80> 1 2
|-FunctionDecl 0x55626dccf1b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55626dcceff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55626dccf078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55626dccf268 <line:583:22>
| `-NonNullAttr 0x55626dccf2c0 <col:63, col:77> 1
|-FunctionDecl 0x55626dccf468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55626dccf308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55626dccf388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55626dccf518 <line:587:22>
| `-NonNullAttr 0x55626dccf570 <col:63, col:80> 1 2
|-FunctionDecl 0x55626dccf6f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55626dccf5b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55626dccf638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55626dccf7a8 <col:36>
| `-NonNullAttr 0x55626dccf800 <col:77, col:91> 1
|-FunctionDecl 0x55626dccfb38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55626dccf8e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55626dccf9f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55626dccfbe8 <line:592:22>
| `-NonNullAttr 0x55626dccfc40 <col:63, col:77> 1
|-FunctionDecl 0x55626dccfdb8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55626dccfc88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55626dccfe60 <line:594:22>
| `-NonNullAttr 0x55626dccfee0 <col:63, col:77> 1
|-FunctionDecl 0x55626dccffe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55626dccff28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55626dcd0088 <line:596:22>
| `-NonNullAttr 0x55626dcd00e0 <col:52, col:66> 1
|-FunctionDecl 0x55626dcd01e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55626dcd0128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55626dcd0288 <line:598:22>
| `-NonNullAttr 0x55626dcd02e0 <col:52, col:66> 1
|-FunctionDecl 0x55626dcd0508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55626dcd0328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55626dcd03a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55626dcd05b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55626dcd08e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55626dcd0638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55626dcd06b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55626dcd0740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55626dcd09a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55626dcd0bb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55626dcd0a80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55626dcd0c60 <line:607:22>
| `-NonNullAttr 0x55626dcd0cb8 <col:63, col:77> 1
|-FunctionDecl 0x55626dcd0dc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55626dcd0d08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55626dcd0e68 <line:609:22>
| `-NonNullAttr 0x55626dcd0ef0 <col:63, col:77> 1
|-FunctionDecl 0x55626dcd1118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55626dcd0f38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55626dcd0fb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55626dcd11c8 <line:613:22>
| `-NonNullAttr 0x55626dcd1220 <col:63, col:80> 1 2
|-FunctionDecl 0x55626dcd1428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55626dcd1268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55626dcd12e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55626dcd14d8 <col:37>
| `-NonNullAttr 0x55626dcd1530 <col:78, col:92> 1
|-FunctionDecl 0x55626dcd1748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55626dcd1578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55626dcd1620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55626dcd17f8 <line:619:22>
| `-NonNullAttr 0x55626dcd1850 <col:63, col:80> 1 2
|-FunctionDecl 0x55626dcd1a18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55626dcd1898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55626dcd1910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55626dcd1ac8 <line:622:22>
| `-NonNullAttr 0x55626dcd1b20 <col:63, col:77> 1
|-FunctionDecl 0x55626dcd1dc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55626dcd1c00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55626dcd1c80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55626dcd1e78 <line:624:22>
| `-NonNullAttr 0x55626dcd1f00 <col:63, col:77> 1
|-FunctionDecl 0x55626dcd2078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55626dcd1f48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55626dcd2120 <line:626:22>
| `-NonNullAttr 0x55626dcd2178 <col:63, col:77> 1
|-FunctionDecl 0x55626dcd2280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55626dcd21c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55626dcd2328 <line:628:22>
| `-NonNullAttr 0x55626dcd2380 <col:52, col:66> 1
|-FunctionDecl 0x55626dcd2480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55626dcd23c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55626dcd2528 <line:630:22>
| `-NonNullAttr 0x55626dcd2580 <col:52, col:66> 1
|-FunctionDecl 0x55626dcd2680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55626dcd25c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55626dcd2728 <line:632:22>
| `-NonNullAttr 0x55626dcd2780 <col:52, col:66> 1
|-FunctionDecl 0x55626dcd2b58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55626dcd2860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55626dcd2970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55626dcd29f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55626dcd2c10 <line:636:22>
| `-NonNullAttr 0x55626dcd2c68 <col:63, col:77> 1
|-FunctionDecl 0x55626dcd2de8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55626dcd2cb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55626dcd2e90 <line:638:22>
| `-NonNullAttr 0x55626dcd2f10 <col:63, col:77> 1
|-FunctionDecl 0x55626dcd3010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55626dcd2f58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55626dcd30b8 <line:640:22>
| `-NonNullAttr 0x55626dcd3110 <col:52, col:66> 1
|-FunctionDecl 0x55626dcd32f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55626dcd31c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55626dcd33a0 <line:642:22>
| `-NonNullAttr 0x55626dcd33f8 <col:63, col:77> 1
|-FunctionDecl 0x55626dcd3500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55626dcd3448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55626dcd35a8 <line:644:22>
| `-NonNullAttr 0x55626dcd3600 <col:63, col:77> 1
|-FunctionDecl 0x55626dcd3828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55626dcd3648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55626dcd36c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55626dcd38d8 <line:648:22>
| `-NonNullAttr 0x55626dcd3930 <col:63, col:80> 1 2
|-FunctionDecl 0x55626dcd3b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55626dcd3978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55626dcd39f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55626dcd3be8 <line:651:22>
| `-NonNullAttr 0x55626dcd3c40 <col:63, col:77> 1
|-FunctionDecl 0x55626dcd3fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55626dcd3d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55626dcd3e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55626dcd4058 <line:654:22>
| `-NonNullAttr 0x55626dcd40b0 <col:63, col:77> 1
|-FunctionDecl 0x55626dcd4208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55626dcd40f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55626dcd42b0 <col:69>
|-FunctionDecl 0x55626dcd4428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55626dcd4318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55626dcd44d0 <col:72>
|-FunctionDecl 0x55626dcd4708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55626dcd4538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55626dcd45e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55626dcd47b8 <col:44>
|-FunctionDecl 0x55626dcd49d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55626dcd4820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55626dcd4898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55626dcd4a88 <line:661:22>
| `-NonNullAttr 0x55626dcd4ae0 <col:63, col:77> 2
|-FunctionDecl 0x55626dcd5f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55626dcd4bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55626dcd4cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55626dcd4de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55626dcd6008 <col:47>
|-FunctionDecl 0x55626dcd6110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55626dcd6078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55626dcd6268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55626dcd61d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55626dcd63c0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55626dcd6328 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55626dcd6518 <line:669:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x55626dcd6480 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55626dcd65e0 <line:670:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55626dcd66a0 <line:671:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55626dcd6760 <line:672:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55626dcd6818 <line:673:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55626dcd6898 prev 0x55626dcd6818 <line:674:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55626dcd6900 <col:24> 'int' 0
|-VarDecl 0x55626dcd6938 <line:675:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55626dcd69b8 prev 0x55626dcd6938 <line:676:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55626dcd6a20 <col:27> 'int' 0
|-VarDecl 0x55626dcd6a58 <line:677:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x55626dcd6ad8 prev 0x55626dcd6a58 <line:678:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x55626dcd6b40 <col:27> 'int' 0
|-VarDecl 0x55626dcd6b78 <line:679:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55626dcd6bf8 prev 0x55626dcd6b78 <line:680:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55626dcd6c60 <col:27> 'int' 0
|-VarDecl 0x55626dcd6c90 <line:681:1, col:7> col:7 __unbuffered_p2_EAX$flush_delayed '_Bool'
|-VarDecl 0x55626dcd6d10 <line:682:1, col:5> col:5 __unbuffered_p2_EAX$mem_tmp 'int'
|-VarDecl 0x55626dcd6d88 <line:683:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x55626dcd6e00 <line:684:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x55626dcd6e78 <line:685:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x55626dcd6f20 <line:686:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x55626dcd6f98 <line:687:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd4 '_Bool'
|-VarDecl 0x55626dcd7010 <line:688:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x55626dcd7088 <line:689:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x55626dcd7100 <line:690:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x55626dcd7178 <line:691:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x55626dcd71f0 <line:692:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd4 '_Bool'
|-VarDecl 0x55626dcd7268 <line:693:1, col:7> col:7 used __unbuffered_p2_EAX$read_delayed '_Bool'
|-VarDecl 0x55626dcd72e8 <line:694:1, col:6> col:6 used __unbuffered_p2_EAX$read_delayed_var 'int *'
|-VarDecl 0x55626dcd7368 <line:695:1, col:5> col:5 __unbuffered_p2_EAX$w_buff0 'int'
|-VarDecl 0x55626dcd73e0 <line:696:1, col:7> col:7 __unbuffered_p2_EAX$w_buff0_used '_Bool'
|-VarDecl 0x55626dcd7460 <line:697:1, col:5> col:5 __unbuffered_p2_EAX$w_buff1 'int'
|-VarDecl 0x55626dcd74d8 <line:698:1, col:7> col:7 __unbuffered_p2_EAX$w_buff1_used '_Bool'
|-VarDecl 0x55626dcd7550 <line:699:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55626dcd75c8 <line:700:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55626dcd7648 <line:701:1, col:5> col:5 used x 'int'
|-VarDecl 0x55626dcd76c8 prev 0x55626dcd7648 <line:702:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55626dcd7730 <col:9> 'int' 0
|-VarDecl 0x55626dcd7760 <line:703:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x55626dcd77e0 <line:704:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x55626dcd7858 <line:705:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x55626dcd78d0 <line:706:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x55626dcd7948 <line:707:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x55626dcd79c0 <line:708:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x55626dcd7a38 <line:709:1, col:7> col:7 used x$r_buff0_thd4 '_Bool'
|-VarDecl 0x55626dcd7ab0 <line:710:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x55626dcd7b28 <line:711:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x55626dcd7ba0 <line:712:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x55626dcd7c18 <line:713:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x55626dcd7c90 <line:714:1, col:7> col:7 used x$r_buff1_thd4 '_Bool'
|-VarDecl 0x55626dcd7d08 <line:715:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x55626dcd7d88 <line:716:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x55626dcd7e08 <line:717:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x55626dcd7e80 <line:718:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x55626dcd7f30 <line:719:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x55626dcd7fa8 <line:720:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x55626dcd8028 <line:721:1, col:5> col:5 used y 'int'
|-VarDecl 0x55626dcd80a8 prev 0x55626dcd8028 <line:722:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55626dcd8110 <col:9> 'int' 0
|-VarDecl 0x55626dcd8140 <line:723:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55626dcd81b8 <line:724:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x55626dcd8230 <line:725:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55626dcd8348 prev 0x55626dcd6110 <line:726:1, line:753:1> line:726:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55626dcd82b0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55626dcdb2b8 <line:727:1, line:753:1>
|   |-CallExpr 0x55626dcd8458 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55626dcd8440 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dcd83f0 <col:3> 'void ()' Function 0x55626dc7d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55626dcd84d0 <line:729:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55626dcd8478 <col:3> 'int' lvalue Var 0x55626dcd69b8 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55626dcd84b8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55626dcd8498 <col:25> 'int' lvalue Var 0x55626dcd80a8 'y' 'int'
|   |-CallExpr 0x55626dcd8528 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55626dcd8510 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dcd84f0 <col:3> 'void ()' Function 0x55626dc7d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55626dcd8580 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55626dcd8568 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dcd8548 <col:3> 'void ()' Function 0x55626dc7d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55626dcd8648 <line:732:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55626dcd85a0 <col:3> '_Bool' lvalue Var 0x55626dcd8140 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55626dcd8628 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55626dcd8610 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55626dcd85c0 <col:19> '_Bool (void)' Function 0x55626dc7cc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55626dcd86e0 <line:733:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55626dcd8668 <col:3> '_Bool' lvalue Var 0x55626dcd8230 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55626dcd86c0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55626dcd86a8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55626dcd8688 <col:19> '_Bool (void)' Function 0x55626dc7cc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55626dcd8758 <line:734:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55626dcd8700 <col:3> '_Bool' lvalue Var 0x55626dcd7760 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55626dcd8740 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55626dcd8720 <col:21> '_Bool' lvalue Var 0x55626dcd8230 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55626dcd87d0 <line:735:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55626dcd8778 <col:3> 'int' lvalue Var 0x55626dcd77e0 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55626dcd87b8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55626dcd8798 <col:15> 'int' lvalue Var 0x55626dcd76c8 'x' 'int'
|   |-BinaryOperator 0x55626dcd8c08 <line:736:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55626dcd87f0 <col:3> 'int' lvalue Var 0x55626dcd76c8 'x' 'int'
|   | `-ConditionalOperator 0x55626dcd8bd8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55626dcd8a00 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55626dcd8920 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55626dcd8848 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55626dcd8830 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55626dcd8810 <col:8> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55626dcd8900 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55626dcd8898 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55626dcd8880 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55626dcd8860 <col:27> '_Bool' lvalue Var 0x55626dcd78d0 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x55626dcd88e8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55626dcd88d0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55626dcd88b0 <col:46> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55626dcd89e0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55626dcd8978 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55626dcd8960 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55626dcd8940 <col:65> '_Bool' lvalue Var 0x55626dcd78d0 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x55626dcd89c8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55626dcd89b0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55626dcd8990 <col:84> '_Bool' lvalue Var 0x55626dcd7b28 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55626dcd8bc0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55626dcd8a20 <col:101> 'int' lvalue Var 0x55626dcd76c8 'x' 'int'
|   |   `-ParenExpr 0x55626dcd8ba0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55626dcd8b70 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55626dcd8ae0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55626dcd8a98 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55626dcd8a80 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55626dcd8a40 <col:106> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55626dcd8ac8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55626dcd8ab0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55626dcd8a60 <col:124> '_Bool' lvalue Var 0x55626dcd78d0 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55626dcd8b40 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55626dcd8b00 <col:141> 'int' lvalue Var 0x55626dcd7e08 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55626dcd8b58 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55626dcd8b20 <col:153> 'int' lvalue Var 0x55626dcd7f30 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55626dcd9130 <line:737:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55626dcd8c28 <col:3> 'int' lvalue Var 0x55626dcd7e08 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55626dcd9100 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55626dcd90d0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55626dcd90b8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55626dcd8c48 <col:15> '_Bool' lvalue Var 0x55626dcd8230 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55626dcd90e8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55626dcd8c68 <col:31> 'int' lvalue Var 0x55626dcd7e08 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55626dcd9098 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55626dcd9068 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55626dcd8e78 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55626dcd8d98 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55626dcd8cc0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55626dcd8ca8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55626dcd8c88 <col:45> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55626dcd8d78 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55626dcd8d10 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55626dcd8cf8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55626dcd8cd8 <col:64> '_Bool' lvalue Var 0x55626dcd78d0 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55626dcd8d60 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55626dcd8d48 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55626dcd8d28 <col:83> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55626dcd8e58 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55626dcd8df0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55626dcd8dd8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55626dcd8db8 <col:102> '_Bool' lvalue Var 0x55626dcd78d0 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55626dcd8e40 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55626dcd8e28 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55626dcd8e08 <col:121> '_Bool' lvalue Var 0x55626dcd7b28 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55626dcd9050 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55626dcd8e98 <col:138> 'int' lvalue Var 0x55626dcd7e08 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55626dcd9030 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55626dcd9000 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55626dcd8f70 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55626dcd8f10 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55626dcd8ef8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55626dcd8eb8 <col:151> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55626dcd8f58 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55626dcd8f40 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55626dcd8ed8 <col:169> '_Bool' lvalue Var 0x55626dcd78d0 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55626dcd8fd0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55626dcd8f90 <col:186> 'int' lvalue Var 0x55626dcd7e08 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55626dcd8fe8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55626dcd8fb0 <col:198> 'int' lvalue Var 0x55626dcd7e08 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55626dcd9640 <line:738:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55626dcd9150 <col:3> 'int' lvalue Var 0x55626dcd7f30 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55626dcd9610 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55626dcd95e0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55626dcd95c8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55626dcd9170 <col:15> '_Bool' lvalue Var 0x55626dcd8230 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55626dcd95f8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55626dcd9190 <col:31> 'int' lvalue Var 0x55626dcd7f30 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55626dcd95a8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55626dcd9578 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55626dcd93a0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55626dcd92c0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55626dcd91e8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55626dcd91d0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55626dcd91b0 <col:45> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55626dcd92a0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55626dcd9238 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55626dcd9220 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55626dcd9200 <col:64> '_Bool' lvalue Var 0x55626dcd78d0 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55626dcd9288 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55626dcd9270 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55626dcd9250 <col:83> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55626dcd9380 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55626dcd9318 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55626dcd9300 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55626dcd92e0 <col:102> '_Bool' lvalue Var 0x55626dcd78d0 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55626dcd9368 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55626dcd9350 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55626dcd9330 <col:121> '_Bool' lvalue Var 0x55626dcd7b28 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55626dcd9560 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55626dcd93c0 <col:138> 'int' lvalue Var 0x55626dcd7f30 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55626dcd9540 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55626dcd9510 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55626dcd9480 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55626dcd9438 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55626dcd9420 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55626dcd93e0 <col:151> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55626dcd9468 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55626dcd9450 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55626dcd9400 <col:169> '_Bool' lvalue Var 0x55626dcd78d0 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55626dcd94e0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55626dcd94a0 <col:186> 'int' lvalue Var 0x55626dcd7f30 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55626dcd94f8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55626dcd94c0 <col:198> 'int' lvalue Var 0x55626dcd7f30 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55626dcd9be8 <line:739:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55626dcd9660 <col:3> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55626dcd9bd0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55626dcd9ba0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55626dcd9b58 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55626dcd9b40 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55626dcd9680 <col:20> '_Bool' lvalue Var 0x55626dcd8230 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55626dcd9b88 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55626dcd9b70 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55626dcd96a0 <col:36> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55626dcd9b20 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55626dcd9af0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55626dcd98b0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55626dcd97d0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55626dcd96f8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55626dcd96e0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55626dcd96c0 <col:55> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55626dcd97b0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55626dcd9748 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55626dcd9730 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55626dcd9710 <col:74> '_Bool' lvalue Var 0x55626dcd78d0 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55626dcd9798 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55626dcd9780 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55626dcd9760 <col:93> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55626dcd9890 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55626dcd9828 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55626dcd9810 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55626dcd97f0 <col:112> '_Bool' lvalue Var 0x55626dcd78d0 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55626dcd9878 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55626dcd9860 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55626dcd9840 <col:131> '_Bool' lvalue Var 0x55626dcd7b28 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55626dcd9ad8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55626dcd9ac0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55626dcd98d0 <col:148> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55626dcd9aa0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55626dcd9a70 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55626dcd9990 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55626dcd9948 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55626dcd9930 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55626dcd98f0 <col:166> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55626dcd9978 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55626dcd9960 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55626dcd9910 <col:184> '_Bool' lvalue Var 0x55626dcd78d0 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55626dcd9a28 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55626dcd99e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55626dcd99b0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55626dcd9a58 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55626dcd9a40 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55626dcd9a08 <col:212> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55626dcda1c8 <line:740:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55626dcd9c08 <col:3> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55626dcda1b0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55626dcda180 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55626dcda138 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55626dcda120 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55626dcd9c28 <col:20> '_Bool' lvalue Var 0x55626dcd8230 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55626dcda168 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55626dcda150 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55626dcd9c48 <col:36> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55626dcda100 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55626dcda0d0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55626dcd9e58 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55626dcd9d78 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55626dcd9ca0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55626dcd9c88 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55626dcd9c68 <col:55> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55626dcd9d58 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55626dcd9cf0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55626dcd9cd8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55626dcd9cb8 <col:74> '_Bool' lvalue Var 0x55626dcd78d0 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55626dcd9d40 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55626dcd9d28 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55626dcd9d08 <col:93> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55626dcd9e38 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55626dcd9dd0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55626dcd9db8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55626dcd9d98 <col:112> '_Bool' lvalue Var 0x55626dcd78d0 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55626dcd9e20 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55626dcd9e08 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55626dcd9de8 <col:131> '_Bool' lvalue Var 0x55626dcd7b28 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55626dcda0b8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55626dcda0a0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55626dcd9e78 <col:148> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55626dcda080 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55626dcda050 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55626dcd9f50 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55626dcd9ef0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55626dcd9ed8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55626dcd9e98 <col:166> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55626dcd9f20 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55626dcd9f08 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55626dcd9eb8 <col:184> '_Bool' lvalue Var 0x55626dcd78d0 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55626dcda020 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55626dcd9fa0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55626dcd9f70 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55626dcda038 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55626dcd9ff8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55626dcd9fc8 <col:219> 'int' 0
|   |-BinaryOperator 0x55626dcda770 <line:741:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55626dcda1e8 <col:3> '_Bool' lvalue Var 0x55626dcd78d0 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55626dcda758 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55626dcda728 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55626dcda6e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55626dcda6c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55626dcda208 <col:20> '_Bool' lvalue Var 0x55626dcd8230 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55626dcda710 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55626dcda6f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55626dcda228 <col:36> '_Bool' lvalue Var 0x55626dcd78d0 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55626dcda6a8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55626dcda678 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55626dcda438 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55626dcda358 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55626dcda280 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55626dcda268 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55626dcda248 <col:55> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55626dcda338 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55626dcda2d0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55626dcda2b8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55626dcda298 <col:74> '_Bool' lvalue Var 0x55626dcd78d0 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55626dcda320 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55626dcda308 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55626dcda2e8 <col:93> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55626dcda418 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55626dcda3b0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55626dcda398 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55626dcda378 <col:112> '_Bool' lvalue Var 0x55626dcd78d0 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55626dcda400 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55626dcda3e8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55626dcda3c8 <col:131> '_Bool' lvalue Var 0x55626dcd7b28 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55626dcda660 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55626dcda648 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55626dcda458 <col:148> '_Bool' lvalue Var 0x55626dcd78d0 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55626dcda628 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55626dcda5f8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55626dcda518 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55626dcda4d0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55626dcda4b8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55626dcda478 <col:166> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55626dcda500 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55626dcda4e8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55626dcda498 <col:184> '_Bool' lvalue Var 0x55626dcd78d0 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55626dcda5b0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55626dcda568 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55626dcda538 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55626dcda5e0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55626dcda5c8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55626dcda590 <col:212> '_Bool' lvalue Var 0x55626dcd78d0 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55626dcdad38 <line:742:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55626dcda790 <col:3> '_Bool' lvalue Var 0x55626dcd7b28 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55626dcdad20 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55626dcdacf0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55626dcdaca8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55626dcdac90 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55626dcda7b0 <col:20> '_Bool' lvalue Var 0x55626dcd8230 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55626dcdacd8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55626dcdacc0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55626dcda7d0 <col:36> '_Bool' lvalue Var 0x55626dcd7b28 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55626dcdac70 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55626dcdac40 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55626dcda9e0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55626dcda900 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55626dcda828 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55626dcda810 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55626dcda7f0 <col:55> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55626dcda8e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55626dcda878 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55626dcda860 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55626dcda840 <col:74> '_Bool' lvalue Var 0x55626dcd78d0 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55626dcda8c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55626dcda8b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55626dcda890 <col:93> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55626dcda9c0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55626dcda958 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55626dcda940 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55626dcda920 <col:112> '_Bool' lvalue Var 0x55626dcd78d0 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55626dcda9a8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55626dcda990 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55626dcda970 <col:131> '_Bool' lvalue Var 0x55626dcd7b28 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55626dcdac28 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55626dcdac10 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55626dcdaa00 <col:148> '_Bool' lvalue Var 0x55626dcd7b28 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55626dcdabf0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55626dcdabc0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55626dcdaac0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55626dcdaa78 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55626dcdaa60 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55626dcdaa20 <col:166> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55626dcdaaa8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55626dcdaa90 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55626dcdaa40 <col:184> '_Bool' lvalue Var 0x55626dcd78d0 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55626dcdab90 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55626dcdab10 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55626dcdaae0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55626dcdaba8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55626dcdab68 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55626dcdab38 <col:219> 'int' 0
|   |-BinaryOperator 0x55626dcdadb0 <line:743:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55626dcdad58 <col:3> 'int' lvalue Var 0x55626dcd6ad8 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x55626dcdad98 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55626dcdad78 <col:25> 'int' lvalue Var 0x55626dcd76c8 'x' 'int'
|   |-BinaryOperator 0x55626dcdaee0 <line:744:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55626dcdadd0 <col:3> 'int' lvalue Var 0x55626dcd76c8 'x' 'int'
|   | `-ConditionalOperator 0x55626dcdaeb0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55626dcdae68 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55626dcdae50 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55626dcdadf0 <col:7> '_Bool' lvalue Var 0x55626dcd7760 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55626dcdae80 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55626dcdae10 <col:25> 'int' lvalue Var 0x55626dcd77e0 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55626dcdae98 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55626dcdae30 <col:37> 'int' lvalue Var 0x55626dcd76c8 'x' 'int'
|   |-BinaryOperator 0x55626dcdaf88 <line:745:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55626dcdaf00 <col:3> '_Bool' lvalue Var 0x55626dcd7760 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55626dcdaf60 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55626dcdaf20 <col:28> 'int' 0
|   |-CallExpr 0x55626dcdafe0 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55626dcdafc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dcdafa8 <col:3> 'void ()' Function 0x55626dc7d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55626dcdb038 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55626dcdb020 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dcdb000 <col:3> 'void ()' Function 0x55626dc7d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55626dcdb090 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55626dcdb078 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dcdb058 <col:3> 'void ()' Function 0x55626dc7d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55626dcdb0e8 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55626dcdb0d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dcdb0b0 <col:3> 'void ()' Function 0x55626dc7d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55626dcdb1a0 <line:750:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55626dcdb108 <col:3> 'int' lvalue Var 0x55626dcd6898 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55626dcdb180 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55626dcdb168 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55626dcdb128 <col:22> 'int' lvalue Var 0x55626dcd6898 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55626dcdb148 <col:41> 'int' 1
|   |-CallExpr 0x55626dcdb1f8 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55626dcdb1e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dcdb1c0 <col:3> 'void ()' Function 0x55626dc7d570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55626dcdb2a8 <line:752:3, col:36>
|     `-CallExpr 0x55626dcdb288 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55626dcdb270 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55626dcdb218 <col:10> 'void *(void)' Function 0x55626dc7cfc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55626dcdb440 prev 0x55626dcd6268 <line:754:1, line:770:1> line:754:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55626dcdb3a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55626dcdc550 <line:755:1, line:770:1>
|   |-CallExpr 0x55626dcdb520 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55626dcdb508 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dcdb4e8 <col:3> 'void ()' Function 0x55626dc7d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55626dcdb580 <line:757:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55626dcdb540 <col:3> 'int' lvalue Var 0x55626dcd76c8 'x' 'int'
|   | `-IntegerLiteral 0x55626dcdb560 <col:7> 'int' 1
|   |-CallExpr 0x55626dcdb5d8 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55626dcdb5c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dcdb5a0 <col:3> 'void ()' Function 0x55626dc7d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55626dcdb630 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55626dcdb618 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dcdb5f8 <col:3> 'void ()' Function 0x55626dc7d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55626dcdb918 <line:760:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55626dcdb650 <col:3> 'int' lvalue Var 0x55626dcd76c8 'x' 'int'
|   | `-ConditionalOperator 0x55626dcdb8e8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55626dcdb710 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55626dcdb6c8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55626dcdb6b0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55626dcdb670 <col:7> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55626dcdb6f8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55626dcdb6e0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55626dcdb690 <col:25> '_Bool' lvalue Var 0x55626dcd7948 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55626dcdb8d0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55626dcdb730 <col:42> 'int' lvalue Var 0x55626dcd7e08 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55626dcdb8b0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55626dcdb880 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55626dcdb7f0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55626dcdb7a8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55626dcdb790 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55626dcdb750 <col:55> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55626dcdb7d8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55626dcdb7c0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55626dcdb770 <col:73> '_Bool' lvalue Var 0x55626dcd7ba0 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55626dcdb850 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55626dcdb810 <col:90> 'int' lvalue Var 0x55626dcd7f30 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55626dcdb868 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55626dcdb830 <col:102> 'int' lvalue Var 0x55626dcd76c8 'x' 'int'
|   |-BinaryOperator 0x55626dcdbb20 <line:761:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55626dcdb938 <col:3> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55626dcdbb08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55626dcdbad8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55626dcdb9f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55626dcdb9b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55626dcdb998 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55626dcdb958 <col:20> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55626dcdb9e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55626dcdb9c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55626dcdb978 <col:38> '_Bool' lvalue Var 0x55626dcd7948 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55626dcdba90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55626dcdba48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55626dcdba18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55626dcdbac0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55626dcdbaa8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55626dcdba70 <col:66> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55626dcdbe08 <line:762:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55626dcdbb40 <col:3> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55626dcdbdf0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55626dcdbdc0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55626dcdbce0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55626dcdbc00 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55626dcdbbb8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55626dcdbba0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55626dcdbb60 <col:20> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55626dcdbbe8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55626dcdbbd0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55626dcdbb80 <col:38> '_Bool' lvalue Var 0x55626dcd7948 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55626dcdbcc0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55626dcdbc78 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55626dcdbc60 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55626dcdbc20 <col:56> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55626dcdbca8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55626dcdbc90 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55626dcdbc40 <col:74> '_Bool' lvalue Var 0x55626dcd7ba0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55626dcdbd78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55626dcdbd30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55626dcdbd00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55626dcdbda8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55626dcdbd90 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55626dcdbd58 <col:102> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55626dcdc020 <line:763:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55626dcdbe28 <col:3> '_Bool' lvalue Var 0x55626dcd7948 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55626dcdc008 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55626dcdbfd8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55626dcdbee8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55626dcdbea0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55626dcdbe88 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55626dcdbe48 <col:20> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55626dcdbed0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55626dcdbeb8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55626dcdbe68 <col:38> '_Bool' lvalue Var 0x55626dcd7948 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55626dcdbf90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55626dcdbf38 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55626dcdbf08 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55626dcdbfc0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55626dcdbfa8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55626dcdbf70 <col:66> '_Bool' lvalue Var 0x55626dcd7948 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55626dcdc308 <line:764:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55626dcdc040 <col:3> '_Bool' lvalue Var 0x55626dcd7ba0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55626dcdc2f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55626dcdc2c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55626dcdc1e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55626dcdc100 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55626dcdc0b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55626dcdc0a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55626dcdc060 <col:20> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55626dcdc0e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55626dcdc0d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55626dcdc080 <col:38> '_Bool' lvalue Var 0x55626dcd7948 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55626dcdc1c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55626dcdc178 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55626dcdc160 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55626dcdc120 <col:56> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55626dcdc1a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55626dcdc190 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55626dcdc140 <col:74> '_Bool' lvalue Var 0x55626dcd7ba0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55626dcdc278 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55626dcdc230 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55626dcdc200 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55626dcdc2a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55626dcdc290 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55626dcdc258 <col:102> '_Bool' lvalue Var 0x55626dcd7ba0 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55626dcdc360 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55626dcdc348 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dcdc328 <col:3> 'void ()' Function 0x55626dc7d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55626dcdc3b8 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55626dcdc3a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dcdc380 <col:3> 'void ()' Function 0x55626dc7d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55626dcdc470 <line:767:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55626dcdc3d8 <col:3> 'int' lvalue Var 0x55626dcd6898 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55626dcdc450 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55626dcdc438 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55626dcdc3f8 <col:22> 'int' lvalue Var 0x55626dcd6898 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55626dcdc418 <col:41> 'int' 1
|   |-CallExpr 0x55626dcdc4c8 <line:768:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55626dcdc4b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dcdc490 <col:3> 'void ()' Function 0x55626dc7d570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55626dcdc540 <line:769:3, col:36>
|     `-CallExpr 0x55626dcdc520 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55626dcdc508 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55626dcdc4e8 <col:10> 'void *(void)' Function 0x55626dc7cfc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55626dcdc680 prev 0x55626dcd63c0 <line:771:1, line:805:1> line:771:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55626dcdc5e8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55626dce0340 <line:772:1, line:805:1>
|   |-CallExpr 0x55626dcdc760 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55626dcdc748 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dcdc728 <col:3> 'void ()' Function 0x55626dc7d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55626dcdc7f8 <line:774:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55626dcdc780 <col:3> '_Bool' lvalue Var 0x55626dcd8140 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55626dcdc7d8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55626dcdc7c0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55626dcdc7a0 <col:19> '_Bool (void)' Function 0x55626dc7cc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55626dcdc890 <line:775:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55626dcdc818 <col:3> '_Bool' lvalue Var 0x55626dcd8230 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55626dcdc870 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55626dcdc858 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55626dcdc838 <col:19> '_Bool (void)' Function 0x55626dc7cc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55626dcdc908 <line:776:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55626dcdc8b0 <col:3> '_Bool' lvalue Var 0x55626dcd7760 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55626dcdc8f0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55626dcdc8d0 <col:21> '_Bool' lvalue Var 0x55626dcd8230 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55626dcdc980 <line:777:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55626dcdc928 <col:3> 'int' lvalue Var 0x55626dcd77e0 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55626dcdc968 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55626dcdc948 <col:15> 'int' lvalue Var 0x55626dcd76c8 'x' 'int'
|   |-BinaryOperator 0x55626dcdcdb8 <line:778:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55626dcdc9a0 <col:3> 'int' lvalue Var 0x55626dcd76c8 'x' 'int'
|   | `-ConditionalOperator 0x55626dcdcd88 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55626dcdcbb0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55626dcdcad0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55626dcdc9f8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55626dcdc9e0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55626dcdc9c0 <col:8> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55626dcdcab0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55626dcdca48 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55626dcdca30 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55626dcdca10 <col:27> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x55626dcdca98 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55626dcdca80 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55626dcdca60 <col:46> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55626dcdcb90 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55626dcdcb28 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55626dcdcb10 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55626dcdcaf0 <col:65> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x55626dcdcb78 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55626dcdcb60 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55626dcdcb40 <col:84> '_Bool' lvalue Var 0x55626dcd7c18 'x$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55626dcdcd70 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55626dcdcbd0 <col:101> 'int' lvalue Var 0x55626dcd76c8 'x' 'int'
|   |   `-ParenExpr 0x55626dcdcd50 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55626dcdcd20 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55626dcdcc90 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55626dcdcc48 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55626dcdcc30 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55626dcdcbf0 <col:106> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55626dcdcc78 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55626dcdcc60 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55626dcdcc10 <col:124> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55626dcdccf0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55626dcdccb0 <col:141> 'int' lvalue Var 0x55626dcd7e08 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55626dcdcd08 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55626dcdccd0 <col:153> 'int' lvalue Var 0x55626dcd7f30 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55626dcdd2e0 <line:779:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55626dcdcdd8 <col:3> 'int' lvalue Var 0x55626dcd7e08 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55626dcdd2b0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55626dcdd280 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55626dcdd268 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55626dcdcdf8 <col:15> '_Bool' lvalue Var 0x55626dcd8230 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55626dcdd298 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55626dcdce18 <col:31> 'int' lvalue Var 0x55626dcd7e08 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55626dcdd248 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55626dcdd218 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55626dcdd040 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55626dcdcf48 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55626dcdce70 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55626dcdce58 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55626dcdce38 <col:45> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55626dcdcf28 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55626dcdcec0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55626dcdcea8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55626dcdce88 <col:64> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55626dcdcf10 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55626dcdcef8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55626dcdced8 <col:83> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55626dcdd020 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55626dcdcfb8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55626dcdcfa0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55626dcdcf80 <col:102> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55626dcdd008 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55626dcdcff0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55626dcdcfd0 <col:121> '_Bool' lvalue Var 0x55626dcd7c18 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55626dcdd200 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55626dcdd060 <col:138> 'int' lvalue Var 0x55626dcd7e08 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55626dcdd1e0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55626dcdd1b0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55626dcdd120 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55626dcdd0d8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55626dcdd0c0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55626dcdd080 <col:151> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55626dcdd108 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55626dcdd0f0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55626dcdd0a0 <col:169> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55626dcdd180 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55626dcdd140 <col:186> 'int' lvalue Var 0x55626dcd7e08 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55626dcdd198 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55626dcdd160 <col:198> 'int' lvalue Var 0x55626dcd7e08 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55626dcdd7f0 <line:780:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55626dcdd300 <col:3> 'int' lvalue Var 0x55626dcd7f30 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55626dcdd7c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55626dcdd790 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55626dcdd778 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55626dcdd320 <col:15> '_Bool' lvalue Var 0x55626dcd8230 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55626dcdd7a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55626dcdd340 <col:31> 'int' lvalue Var 0x55626dcd7f30 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55626dcdd758 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55626dcdd728 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55626dcdd550 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55626dcdd470 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55626dcdd398 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55626dcdd380 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55626dcdd360 <col:45> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55626dcdd450 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55626dcdd3e8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55626dcdd3d0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55626dcdd3b0 <col:64> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55626dcdd438 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55626dcdd420 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55626dcdd400 <col:83> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55626dcdd530 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55626dcdd4c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55626dcdd4b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55626dcdd490 <col:102> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55626dcdd518 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55626dcdd500 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55626dcdd4e0 <col:121> '_Bool' lvalue Var 0x55626dcd7c18 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55626dcdd710 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55626dcdd570 <col:138> 'int' lvalue Var 0x55626dcd7f30 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55626dcdd6f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55626dcdd6c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55626dcdd630 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55626dcdd5e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55626dcdd5d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55626dcdd590 <col:151> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55626dcdd618 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55626dcdd600 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55626dcdd5b0 <col:169> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55626dcdd690 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55626dcdd650 <col:186> 'int' lvalue Var 0x55626dcd7f30 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55626dcdd6a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55626dcdd670 <col:198> 'int' lvalue Var 0x55626dcd7f30 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55626dcddd98 <line:781:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55626dcdd810 <col:3> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55626dcddd80 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55626dcddd50 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55626dcddd08 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55626dcddcf0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55626dcdd830 <col:20> '_Bool' lvalue Var 0x55626dcd8230 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55626dcddd38 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55626dcddd20 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55626dcdd850 <col:36> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55626dcddcd0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55626dcddca0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55626dcdda60 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55626dcdd980 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55626dcdd8a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55626dcdd890 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55626dcdd870 <col:55> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55626dcdd960 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55626dcdd8f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55626dcdd8e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55626dcdd8c0 <col:74> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55626dcdd948 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55626dcdd930 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55626dcdd910 <col:93> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55626dcdda40 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55626dcdd9d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55626dcdd9c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55626dcdd9a0 <col:112> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55626dcdda28 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55626dcdda10 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55626dcdd9f0 <col:131> '_Bool' lvalue Var 0x55626dcd7c18 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55626dcddc88 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55626dcddc70 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55626dcdda80 <col:148> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55626dcddc50 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55626dcddc20 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55626dcddb40 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55626dcddaf8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55626dcddae0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55626dcddaa0 <col:166> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55626dcddb28 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55626dcddb10 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55626dcddac0 <col:184> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55626dcddbd8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55626dcddb90 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55626dcddb60 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55626dcddc08 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55626dcddbf0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55626dcddbb8 <col:212> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55626dcde370 <line:782:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55626dcdddb8 <col:3> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55626dcde358 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55626dcde328 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55626dcde2e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55626dcde2c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55626dcdddd8 <col:20> '_Bool' lvalue Var 0x55626dcd8230 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55626dcde310 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55626dcde2f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55626dcdddf8 <col:36> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55626dcde2a8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55626dcde278 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55626dcde018 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55626dcddf28 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55626dcdde50 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55626dcdde38 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55626dcdde18 <col:55> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55626dcddf08 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55626dcddea0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55626dcdde88 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55626dcdde68 <col:74> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55626dcddef0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55626dcdded8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55626dcddeb8 <col:93> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55626dcddff8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55626dcddf90 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55626dcddf68 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55626dcddf48 <col:112> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55626dcddfe0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55626dcddfc8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55626dcddfa8 <col:131> '_Bool' lvalue Var 0x55626dcd7c18 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55626dcde260 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55626dcde248 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55626dcde038 <col:148> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55626dcde228 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55626dcde1f8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55626dcde0f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55626dcde0b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55626dcde098 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55626dcde058 <col:166> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55626dcde0e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55626dcde0c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55626dcde078 <col:184> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55626dcde1c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55626dcde148 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55626dcde118 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55626dcde1e0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55626dcde1a0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55626dcde170 <col:219> 'int' 0
|   |-BinaryOperator 0x55626dcde918 <line:783:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55626dcde390 <col:3> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55626dcde900 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55626dcde8d0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55626dcde888 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55626dcde870 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55626dcde3b0 <col:20> '_Bool' lvalue Var 0x55626dcd8230 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55626dcde8b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55626dcde8a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55626dcde3d0 <col:36> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x55626dcde850 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55626dcde820 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55626dcde5e0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55626dcde500 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55626dcde428 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55626dcde410 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55626dcde3f0 <col:55> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55626dcde4e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55626dcde478 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55626dcde460 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55626dcde440 <col:74> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55626dcde4c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55626dcde4b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55626dcde490 <col:93> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55626dcde5c0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55626dcde558 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55626dcde540 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55626dcde520 <col:112> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55626dcde5a8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55626dcde590 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55626dcde570 <col:131> '_Bool' lvalue Var 0x55626dcd7c18 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55626dcde808 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55626dcde7f0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55626dcde600 <col:148> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x55626dcde7d0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55626dcde7a0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55626dcde6c0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55626dcde678 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55626dcde660 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55626dcde620 <col:166> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55626dcde6a8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55626dcde690 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55626dcde640 <col:184> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55626dcde758 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55626dcde710 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55626dcde6e0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55626dcde788 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55626dcde770 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55626dcde738 <col:212> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55626dcdeee0 <line:784:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55626dcde938 <col:3> '_Bool' lvalue Var 0x55626dcd7c18 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55626dcdeec8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55626dcdee98 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55626dcdee50 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55626dcdee38 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55626dcde958 <col:20> '_Bool' lvalue Var 0x55626dcd8230 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55626dcdee80 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55626dcdee68 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55626dcde978 <col:36> '_Bool' lvalue Var 0x55626dcd7c18 'x$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x55626dcdee18 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55626dcdede8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55626dcdeb88 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55626dcdeaa8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55626dcde9d0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55626dcde9b8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55626dcde998 <col:55> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55626dcdea88 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55626dcdea20 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55626dcdea08 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55626dcde9e8 <col:74> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55626dcdea70 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55626dcdea58 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55626dcdea38 <col:93> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55626dcdeb68 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55626dcdeb00 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55626dcdeae8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55626dcdeac8 <col:112> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55626dcdeb50 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55626dcdeb38 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55626dcdeb18 <col:131> '_Bool' lvalue Var 0x55626dcd7c18 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55626dcdedd0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55626dcdedb8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55626dcdeba8 <col:148> '_Bool' lvalue Var 0x55626dcd7c18 'x$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x55626dcded98 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55626dcded68 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55626dcdec68 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55626dcdec20 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55626dcdec08 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55626dcdebc8 <col:166> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55626dcdec50 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55626dcdec38 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55626dcdebe8 <col:184> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55626dcded38 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55626dcdecb8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55626dcdec88 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55626dcded50 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55626dcded10 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55626dcdece0 <col:219> 'int' 0
|   |-BinaryOperator 0x55626dcdefa0 <line:785:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55626dcdef00 <col:3> '_Bool' lvalue Var 0x55626dcd7268 '__unbuffered_p2_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55626dcdef50 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55626dcdef20 <col:45> 'int' 1
|   |-BinaryOperator 0x55626dcdf018 <line:786:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x55626dcdefc0 <col:3> 'int *' lvalue Var 0x55626dcd72e8 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x55626dcdf000 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x55626dcdefe0 <col:43> 'int' lvalue Var 0x55626dcd76c8 'x' 'int'
|   |-BinaryOperator 0x55626dcdf090 <line:787:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55626dcdf038 <col:3> 'int' lvalue Var 0x55626dcd6bf8 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55626dcdf078 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55626dcdf058 <col:25> 'int' lvalue Var 0x55626dcd76c8 'x' 'int'
|   |-BinaryOperator 0x55626dcdf1c0 <line:788:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55626dcdf0b0 <col:3> 'int' lvalue Var 0x55626dcd76c8 'x' 'int'
|   | `-ConditionalOperator 0x55626dcdf190 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55626dcdf148 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55626dcdf130 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55626dcdf0d0 <col:7> '_Bool' lvalue Var 0x55626dcd7760 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55626dcdf160 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55626dcdf0f0 <col:25> 'int' lvalue Var 0x55626dcd77e0 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55626dcdf178 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55626dcdf110 <col:37> 'int' lvalue Var 0x55626dcd76c8 'x' 'int'
|   |-BinaryOperator 0x55626dcdf258 <line:789:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55626dcdf1e0 <col:3> '_Bool' lvalue Var 0x55626dcd7760 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55626dcdf230 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55626dcdf200 <col:28> 'int' 0
|   |-CallExpr 0x55626dcdf2b0 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55626dcdf298 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dcdf278 <col:3> 'void ()' Function 0x55626dc7d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55626dcdf308 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55626dcdf2f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dcdf2d0 <col:3> 'void ()' Function 0x55626dc7d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55626dcdf368 <line:792:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55626dcdf328 <col:3> 'int' lvalue Var 0x55626dcd80a8 'y' 'int'
|   | `-IntegerLiteral 0x55626dcdf348 <col:7> 'int' 1
|   |-CallExpr 0x55626dcdf3c0 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55626dcdf3a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dcdf388 <col:3> 'void ()' Function 0x55626dc7d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55626dcdf418 <line:794:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55626dcdf400 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dcdf3e0 <col:3> 'void ()' Function 0x55626dc7d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55626dcdf700 <line:795:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55626dcdf438 <col:3> 'int' lvalue Var 0x55626dcd76c8 'x' 'int'
|   | `-ConditionalOperator 0x55626dcdf6d0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55626dcdf4f8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55626dcdf4b0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55626dcdf498 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55626dcdf458 <col:7> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55626dcdf4e0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55626dcdf4c8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55626dcdf478 <col:25> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55626dcdf6b8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55626dcdf518 <col:42> 'int' lvalue Var 0x55626dcd7e08 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55626dcdf698 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55626dcdf668 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55626dcdf5d8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55626dcdf590 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55626dcdf578 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55626dcdf538 <col:55> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55626dcdf5c0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55626dcdf5a8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55626dcdf558 <col:73> '_Bool' lvalue Var 0x55626dcd7c18 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55626dcdf638 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55626dcdf5f8 <col:90> 'int' lvalue Var 0x55626dcd7f30 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55626dcdf650 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55626dcdf618 <col:102> 'int' lvalue Var 0x55626dcd76c8 'x' 'int'
|   |-BinaryOperator 0x55626dcdf908 <line:796:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55626dcdf720 <col:3> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55626dcdf8f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55626dcdf8c0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55626dcdf7e0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55626dcdf798 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55626dcdf780 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55626dcdf740 <col:20> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55626dcdf7c8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55626dcdf7b0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55626dcdf760 <col:38> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55626dcdf878 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55626dcdf830 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55626dcdf800 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55626dcdf8a8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55626dcdf890 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55626dcdf858 <col:66> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55626dcdfbf0 <line:797:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55626dcdf928 <col:3> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55626dcdfbd8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55626dcdfba8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55626dcdfac8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55626dcdf9e8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55626dcdf9a0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55626dcdf988 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55626dcdf948 <col:20> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55626dcdf9d0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55626dcdf9b8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55626dcdf968 <col:38> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55626dcdfaa8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55626dcdfa60 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55626dcdfa48 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55626dcdfa08 <col:56> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55626dcdfa90 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55626dcdfa78 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55626dcdfa28 <col:74> '_Bool' lvalue Var 0x55626dcd7c18 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55626dcdfb60 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55626dcdfb18 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55626dcdfae8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55626dcdfb90 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55626dcdfb78 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55626dcdfb40 <col:102> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55626dcdfdf8 <line:798:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55626dcdfc10 <col:3> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55626dcdfde0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55626dcdfdb0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55626dcdfcd0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55626dcdfc88 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55626dcdfc70 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55626dcdfc30 <col:20> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55626dcdfcb8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55626dcdfca0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55626dcdfc50 <col:38> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55626dcdfd68 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55626dcdfd20 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55626dcdfcf0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55626dcdfd98 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55626dcdfd80 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55626dcdfd48 <col:66> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55626dce00f8 <line:799:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55626dcdfe18 <col:3> '_Bool' lvalue Var 0x55626dcd7c18 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55626dce00e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55626dce00b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55626dcdffd0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55626dcdfed8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55626dcdfe90 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55626dcdfe78 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55626dcdfe38 <col:20> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55626dcdfec0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55626dcdfea8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55626dcdfe58 <col:38> '_Bool' lvalue Var 0x55626dcd79c0 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55626dcdffb0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55626dcdff50 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55626dcdff38 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55626dcdfef8 <col:56> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55626dcdff80 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55626dcdff68 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55626dcdff18 <col:74> '_Bool' lvalue Var 0x55626dcd7c18 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55626dce0068 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55626dce0020 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55626dcdfff0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55626dce0098 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55626dce0080 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55626dce0048 <col:102> '_Bool' lvalue Var 0x55626dcd7c18 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55626dce0150 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55626dce0138 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dce0118 <col:3> 'void ()' Function 0x55626dc7d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55626dce01a8 <line:801:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55626dce0190 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dce0170 <col:3> 'void ()' Function 0x55626dc7d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55626dce0260 <line:802:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55626dce01c8 <col:3> 'int' lvalue Var 0x55626dcd6898 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55626dce0240 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55626dce0228 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55626dce01e8 <col:22> 'int' lvalue Var 0x55626dcd6898 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55626dce0208 <col:41> 'int' 1
|   |-CallExpr 0x55626dce02b8 <line:803:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55626dce02a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dce0280 <col:3> 'void ()' Function 0x55626dc7d570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55626dce0330 <line:804:3, col:36>
|     `-CallExpr 0x55626dce0310 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55626dce02f8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55626dce02d8 <col:10> 'void *(void)' Function 0x55626dc7cfc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55626dce0500 prev 0x55626dcd6518 <line:806:1, line:822:1> line:806:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x55626dce0468 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55626dce1618 <line:807:1, line:822:1>
|   |-CallExpr 0x55626dce05e0 <line:808:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55626dce05c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dce05a8 <col:3> 'void ()' Function 0x55626dc7d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55626dce0640 <line:809:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55626dce0600 <col:3> 'int' lvalue Var 0x55626dcd80a8 'y' 'int'
|   | `-IntegerLiteral 0x55626dce0620 <col:7> 'int' 2
|   |-CallExpr 0x55626dce0698 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55626dce0680 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dce0660 <col:3> 'void ()' Function 0x55626dc7d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55626dce06f0 <line:811:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55626dce06d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dce06b8 <col:3> 'void ()' Function 0x55626dc7d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55626dce09d8 <line:812:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55626dce0710 <col:3> 'int' lvalue Var 0x55626dcd76c8 'x' 'int'
|   | `-ConditionalOperator 0x55626dce09a8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55626dce07d0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55626dce0788 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55626dce0770 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55626dce0730 <col:7> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55626dce07b8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55626dce07a0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55626dce0750 <col:25> '_Bool' lvalue Var 0x55626dcd7a38 'x$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55626dce0990 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55626dce07f0 <col:42> 'int' lvalue Var 0x55626dcd7e08 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55626dce0970 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55626dce0940 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55626dce08b0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55626dce0868 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55626dce0850 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55626dce0810 <col:55> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55626dce0898 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55626dce0880 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55626dce0830 <col:73> '_Bool' lvalue Var 0x55626dcd7c90 'x$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55626dce0910 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55626dce08d0 <col:90> 'int' lvalue Var 0x55626dcd7f30 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55626dce0928 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55626dce08f0 <col:102> 'int' lvalue Var 0x55626dcd76c8 'x' 'int'
|   |-BinaryOperator 0x55626dce0be0 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55626dce09f8 <col:3> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55626dce0bc8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55626dce0b98 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55626dce0ab8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55626dce0a70 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55626dce0a58 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55626dce0a18 <col:20> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55626dce0aa0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55626dce0a88 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55626dce0a38 <col:38> '_Bool' lvalue Var 0x55626dcd7a38 'x$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55626dce0b50 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55626dce0b08 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55626dce0ad8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55626dce0b80 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55626dce0b68 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55626dce0b30 <col:66> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55626dce0ec8 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55626dce0c00 <col:3> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55626dce0eb0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55626dce0e80 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55626dce0da0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55626dce0cc0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55626dce0c78 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55626dce0c60 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55626dce0c20 <col:20> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55626dce0ca8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55626dce0c90 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55626dce0c40 <col:38> '_Bool' lvalue Var 0x55626dcd7a38 'x$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55626dce0d80 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55626dce0d38 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55626dce0d20 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55626dce0ce0 <col:56> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55626dce0d68 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55626dce0d50 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55626dce0d00 <col:74> '_Bool' lvalue Var 0x55626dcd7c90 'x$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55626dce0e38 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55626dce0df0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55626dce0dc0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55626dce0e68 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55626dce0e50 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55626dce0e18 <col:102> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55626dce10e8 <line:815:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55626dce0ee8 <col:3> '_Bool' lvalue Var 0x55626dcd7a38 'x$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55626dce10d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55626dce10a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55626dce0fc0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55626dce0f60 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55626dce0f48 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55626dce0f08 <col:20> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55626dce0f90 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55626dce0f78 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55626dce0f28 <col:38> '_Bool' lvalue Var 0x55626dcd7a38 'x$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55626dce1058 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55626dce1010 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55626dce0fe0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55626dce1088 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55626dce1070 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55626dce1038 <col:66> '_Bool' lvalue Var 0x55626dcd7a38 'x$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55626dce13d0 <line:816:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55626dce1108 <col:3> '_Bool' lvalue Var 0x55626dcd7c90 'x$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55626dce13b8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55626dce1388 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55626dce12a8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55626dce11c8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55626dce1180 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55626dce1168 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55626dce1128 <col:20> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55626dce11b0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55626dce1198 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55626dce1148 <col:38> '_Bool' lvalue Var 0x55626dcd7a38 'x$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55626dce1288 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55626dce1240 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55626dce1228 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55626dce11e8 <col:56> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55626dce1270 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55626dce1258 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55626dce1208 <col:74> '_Bool' lvalue Var 0x55626dcd7c90 'x$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55626dce1340 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55626dce12f8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55626dce12c8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55626dce1370 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55626dce1358 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55626dce1320 <col:102> '_Bool' lvalue Var 0x55626dcd7c90 'x$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x55626dce1428 <line:817:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55626dce1410 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dce13f0 <col:3> 'void ()' Function 0x55626dc7d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55626dce1480 <line:818:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55626dce1468 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dce1448 <col:3> 'void ()' Function 0x55626dc7d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55626dce1538 <line:819:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55626dce14a0 <col:3> 'int' lvalue Var 0x55626dcd6898 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55626dce1518 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55626dce1500 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55626dce14c0 <col:22> 'int' lvalue Var 0x55626dcd6898 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55626dce14e0 <col:41> 'int' 1
|   |-CallExpr 0x55626dce1590 <line:820:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55626dce1578 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55626dce1558 <col:3> 'void ()' Function 0x55626dc7d570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55626dce1608 <line:821:3, col:36>
|     `-CallExpr 0x55626dce15e8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55626dce15d0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55626dce15b0 <col:10> 'void *(void)' Function 0x55626dc7cfc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55626dce16b8 prev 0x55626dcd65e0 <line:823:1, line:825:1> line:823:6 fence 'void ()'
| `-CompoundStmt 0x55626dce1758 <line:824:1, line:825:1>
|-FunctionDecl 0x55626dce1788 prev 0x55626dcd66a0 <line:826:1, line:828:1> line:826:6 isync 'void ()'
| `-CompoundStmt 0x55626dce1828 <line:827:1, line:828:1>
|-FunctionDecl 0x55626dce1858 prev 0x55626dcd6760 <line:829:1, line:831:1> line:829:6 lwfence 'void ()'
| `-CompoundStmt 0x55626dce18f8 <line:830:1, line:831:1>
`-FunctionDecl 0x55626dce1968 <line:832:1, line:860:1> line:832:5 main 'int ()'
  `-CompoundStmt 0x55626dce4c08 <line:833:1, line:860:1>
    |-DeclStmt 0x55626dce1a80 <line:834:3, col:18>
    | `-VarDecl 0x55626dce1a18 <col:3, col:13> col:13 used t2247 'pthread_t':'unsigned long'
    |-CallExpr 0x55626dce1c88 <line:835:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55626dce1c70 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55626dce1a98 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55626dcbd9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55626dce1ad8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55626dce1ab8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55626dce1a18 't2247' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55626dce1cc8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55626dce1b50 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55626dce1b28 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55626dce1af0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55626dce1ce0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55626dce1b70 <col:39> 'void *(void *)' Function 0x55626dcd8348 'P0' 'void *(void *)'
    | `-ParenExpr 0x55626dce1bf0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55626dce1bc8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55626dce1b90 <col:52> 'int' 0
    |-DeclStmt 0x55626dce1d70 <line:836:3, col:18>
    | `-VarDecl 0x55626dce1d08 <col:3, col:13> col:13 used t2248 'pthread_t':'unsigned long'
    |-CallExpr 0x55626dce1f18 <line:837:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55626dce1f00 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55626dce1d88 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55626dcbd9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55626dce1dc8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55626dce1da8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55626dce1d08 't2248' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55626dce1f58 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55626dce1e40 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55626dce1e18 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55626dce1de0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55626dce1f70 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55626dce1e60 <col:39> 'void *(void *)' Function 0x55626dcdb440 'P1' 'void *(void *)'
    | `-ParenExpr 0x55626dce1ee0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55626dce1eb8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55626dce1e80 <col:52> 'int' 0
    |-DeclStmt 0x55626dce2038 <line:838:3, col:18>
    | `-VarDecl 0x55626dce1fd0 <col:3, col:13> col:13 used t2249 'pthread_t':'unsigned long'
    |-CallExpr 0x55626dce21e0 <line:839:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55626dce21c8 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55626dce2050 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55626dcbd9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55626dce2090 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55626dce2070 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55626dce1fd0 't2249' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55626dce2220 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55626dce2108 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55626dce20e0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55626dce20a8 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55626dce2238 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55626dce2128 <col:39> 'void *(void *)' Function 0x55626dcdc680 'P2' 'void *(void *)'
    | `-ParenExpr 0x55626dce21a8 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55626dce2180 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55626dce2148 <col:52> 'int' 0
    |-DeclStmt 0x55626dce22c8 <line:840:3, col:18>
    | `-VarDecl 0x55626dce2260 <col:3, col:13> col:13 used t2250 'pthread_t':'unsigned long'
    |-CallExpr 0x55626dce2470 <line:841:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55626dce2458 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55626dce22e0 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55626dcbd9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55626dce2320 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55626dce2300 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55626dce2260 't2250' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55626dce24b0 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55626dce2398 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55626dce2370 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55626dce2338 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55626dce24c8 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55626dce23b8 <col:39> 'void *(void *)' Function 0x55626dce0500 'P3' 'void *(void *)'
    | `-ParenExpr 0x55626dce2438 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55626dce2410 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55626dce23d8 <col:52> 'int' 0
    |-CallExpr 0x55626dce2518 <line:842:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55626dce2500 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55626dce24e0 <col:3> 'void ()' Function 0x55626dc7d4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55626dce25e8 <line:843:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55626dce2538 <col:3> '_Bool' lvalue Var 0x55626dcd7550 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55626dce25d0 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55626dce25b0 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55626dce2598 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55626dce2558 <col:21> 'int' lvalue Var 0x55626dcd6898 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55626dce2578 <col:41> 'int' 4
    |-CallExpr 0x55626dce2640 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55626dce2628 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55626dce2608 <col:3> 'void ()' Function 0x55626dc7d570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55626dce26e8 <line:845:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55626dce26d0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55626dce2660 <col:3> 'void (int)' Function 0x55626dc7ce50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55626dce2728 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55626dce2710 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55626dce2680 <col:21> '_Bool' lvalue Var 0x55626dcd7550 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55626dce2778 <line:846:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55626dce2760 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55626dce2740 <col:3> 'void ()' Function 0x55626dc7d4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55626dce2a60 <line:847:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55626dce2798 <col:3> 'int' lvalue Var 0x55626dcd76c8 'x' 'int'
    | `-ConditionalOperator 0x55626dce2a30 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55626dce2858 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55626dce2810 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55626dce27f8 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55626dce27b8 <col:7> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55626dce2840 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55626dce2828 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55626dce27d8 <col:25> '_Bool' lvalue Var 0x55626dcd7858 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55626dce2a18 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55626dce2878 <col:42> 'int' lvalue Var 0x55626dcd7e08 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55626dce29f8 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55626dce29c8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55626dce2938 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55626dce28f0 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55626dce28d8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55626dce2898 <col:55> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55626dce2920 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55626dce2908 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55626dce28b8 <col:73> '_Bool' lvalue Var 0x55626dcd7ab0 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55626dce2998 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55626dce2958 <col:90> 'int' lvalue Var 0x55626dcd7f30 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55626dce29b0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55626dce2978 <col:102> 'int' lvalue Var 0x55626dcd76c8 'x' 'int'
    |-BinaryOperator 0x55626dce2c68 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55626dce2a80 <col:3> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55626dce2c50 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55626dce2c20 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55626dce2b40 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55626dce2af8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55626dce2ae0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55626dce2aa0 <col:20> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55626dce2b28 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55626dce2b10 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55626dce2ac0 <col:38> '_Bool' lvalue Var 0x55626dcd7858 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55626dce2bd8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55626dce2b90 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55626dce2b60 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55626dce2c08 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55626dce2bf0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55626dce2bb8 <col:66> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55626dce2f50 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55626dce2c88 <col:3> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55626dce2f38 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55626dce2f08 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55626dce2e28 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55626dce2d48 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55626dce2d00 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55626dce2ce8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55626dce2ca8 <col:20> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55626dce2d30 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55626dce2d18 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55626dce2cc8 <col:38> '_Bool' lvalue Var 0x55626dcd7858 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55626dce2e08 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55626dce2dc0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55626dce2da8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55626dce2d68 <col:56> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55626dce2df0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55626dce2dd8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55626dce2d88 <col:74> '_Bool' lvalue Var 0x55626dcd7ab0 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55626dce2ec0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55626dce2e78 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55626dce2e48 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55626dce2ef0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55626dce2ed8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55626dce2ea0 <col:102> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55626dce4178 <line:850:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55626dce2f70 <col:3> '_Bool' lvalue Var 0x55626dcd7858 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55626dce4160 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55626dce4130 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55626dce4050 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55626dce4008 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55626dce3ff0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55626dce2f90 <col:20> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55626dce4038 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55626dce4020 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55626dce2fb0 <col:38> '_Bool' lvalue Var 0x55626dcd7858 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55626dce40e8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55626dce40a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55626dce4070 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55626dce4118 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55626dce4100 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55626dce40c8 <col:66> '_Bool' lvalue Var 0x55626dcd7858 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55626dce4460 <line:851:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55626dce4198 <col:3> '_Bool' lvalue Var 0x55626dcd7ab0 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55626dce4448 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55626dce4418 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55626dce4338 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55626dce4258 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55626dce4210 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55626dce41f8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55626dce41b8 <col:20> '_Bool' lvalue Var 0x55626dcd7e80 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55626dce4240 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55626dce4228 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55626dce41d8 <col:38> '_Bool' lvalue Var 0x55626dcd7858 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55626dce4318 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55626dce42d0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55626dce42b8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55626dce4278 <col:56> '_Bool' lvalue Var 0x55626dcd7fa8 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55626dce4300 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55626dce42e8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55626dce4298 <col:74> '_Bool' lvalue Var 0x55626dcd7ab0 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55626dce43d0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55626dce4388 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55626dce4358 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55626dce4400 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55626dce43e8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55626dce43b0 <col:102> '_Bool' lvalue Var 0x55626dcd7ab0 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55626dce44b8 <line:852:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55626dce44a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55626dce4480 <col:3> 'void ()' Function 0x55626dc7d570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55626dce4510 <line:853:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55626dce44f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55626dce44d8 <col:3> 'void ()' Function 0x55626dc7d4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55626dce45a8 <line:854:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55626dce4530 <col:3> '_Bool' lvalue Var 0x55626dcd81b8 'weak$$choice1' '_Bool'
    | `-CallExpr 0x55626dce4588 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55626dce4570 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55626dce4550 <col:19> '_Bool (void)' Function 0x55626dc7cc80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55626dce47e0 <line:855:3, col:140> 'int' '='
    | |-DeclRefExpr 0x55626dce45c8 <col:3> 'int' lvalue Var 0x55626dcd6bf8 '__unbuffered_p2_EAX' 'int'
    | `-ConditionalOperator 0x55626dce47b0 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x55626dce4780 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55626dce4768 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55626dce45e8 <col:25> '_Bool' lvalue Var 0x55626dcd7268 '__unbuffered_p2_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x55626dce4728 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x55626dce46f8 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x55626dce46b0 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x55626dce4698 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55626dce4608 <col:61> '_Bool' lvalue Var 0x55626dcd81b8 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x55626dce46c8 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x55626dce4660 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x55626dce4648 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x55626dce4628 <col:78> 'int *' lvalue Var 0x55626dcd72e8 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x55626dce46e0 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55626dce4678 <col:117> 'int' lvalue Var 0x55626dcd6bf8 '__unbuffered_p2_EAX' 'int'
    |   `-ImplicitCastExpr 0x55626dce4798 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55626dce4748 <col:140> 'int' lvalue Var 0x55626dcd6bf8 '__unbuffered_p2_EAX' 'int'
    |-BinaryOperator 0x55626dce4ab0 <line:856:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x55626dce4800 <col:3> '_Bool' lvalue Var 0x55626dcd75c8 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55626dce4a98 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55626dce4a80 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55626dce4a60 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x55626dce4a40 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x55626dce49a8 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x55626dce4910 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x55626dce4878 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55626dce4860 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55626dce4820 <col:23> 'int' lvalue Var 0x55626dcd80a8 'y' 'int'
    |         | | | `-IntegerLiteral 0x55626dce4840 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x55626dce48f0 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55626dce48d8 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55626dce4898 <col:33> 'int' lvalue Var 0x55626dcd69b8 '__unbuffered_p0_EAX' 'int'
    |         | |   `-IntegerLiteral 0x55626dce48b8 <col:56> 'int' 2
    |         | `-BinaryOperator 0x55626dce4988 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55626dce4970 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55626dce4930 <col:61> 'int' lvalue Var 0x55626dcd6ad8 '__unbuffered_p0_EBX' 'int'
    |         |   `-IntegerLiteral 0x55626dce4950 <col:84> 'int' 0
    |         `-BinaryOperator 0x55626dce4a20 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x55626dce4a08 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55626dce49c8 <col:89> 'int' lvalue Var 0x55626dcd6bf8 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x55626dce49e8 <col:112> 'int' 1
    |-CallExpr 0x55626dce4b08 <line:857:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55626dce4af0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55626dce4ad0 <col:3> 'void ()' Function 0x55626dc7d570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55626dce4b80 <line:858:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55626dce4b68 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55626dce4b28 <col:3> 'void (int)' Function 0x55626dc7d238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55626dce4bc0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55626dce4ba8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55626dce4b48 <col:21> '_Bool' lvalue Var 0x55626dcd75c8 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55626dce4bf8 <line:859:3, col:10>
      `-IntegerLiteral 0x55626dce4bd8 <col:10> 'int' 0
