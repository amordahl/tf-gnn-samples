TranslationUnitDecl 0x5587e7c47f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5587e7c48848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5587e7c48520 '__int128'
|-TypedefDecl 0x5587e7c488b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5587e7c48540 'unsigned __int128'
|-TypedefDecl 0x5587e7c48bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5587e7c48990 'struct __NSConstantString_tag'
|   `-Record 0x5587e7c48910 '__NSConstantString_tag'
|-TypedefDecl 0x5587e7c48c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5587e7c48c20 'char *'
|   `-BuiltinType 0x5587e7c48020 'char'
|-TypedefDecl 0x5587e7c87b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5587e7c48f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5587e7c48d40 'struct __va_list_tag'
|     `-Record 0x5587e7c48cc0 '__va_list_tag'
|-FunctionDecl 0x5587e7c87ca0 <pthread-wmm/mix027_tso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5587e7c87bd0 <col:31> col:34 'int'
|-FunctionDecl 0x5587e7c87e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5587e7c87f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5587e7c880d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5587e7c88048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5587e7c88308 <col:40, col:99>
|   |-IfStmt 0x5587e7c882d8 <col:42, col:88>
|   | |-UnaryOperator 0x5587e7c881b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5587e7c881a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5587e7c88180 <col:47> 'int' lvalue ParmVar 0x5587e7c88048 'expression' 'int'
|   | `-CompoundStmt 0x5587e7c882c0 <col:59, col:88>
|   |   `-LabelStmt 0x5587e7c882a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5587e7c88238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5587e7c88220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5587e7c881d0 <col:68> 'void () __attribute__((noreturn))' Function 0x5587e7c87f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5587e7c882f0 <col:89>
|   `-ReturnStmt 0x5587e7c882f8 <col:91>
|-FunctionDecl 0x5587e7c88350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5587e7c88410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5587e7c88790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5587e7c884c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5587e7c88548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5587e7c885c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5587e7c88648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5587e7c88850 <line:10:22>
|-FunctionDecl 0x5587e7cae8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5587e7c888c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5587e7c88940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5587e7c889c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5587e7c88a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5587e7cae960 <line:13:22>
|-FunctionDecl 0x5587e7caec10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5587e7cae9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5587e7caea50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5587e7caead0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5587e7caecc8 <line:15:22>
|-TypedefDecl 0x5587e7caed38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5587e7c480e0 'unsigned char'
|-TypedefDecl 0x5587e7caeda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5587e7c48100 'unsigned short'
|-TypedefDecl 0x5587e7caee18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5587e7c48120 'unsigned int'
|-TypedefDecl 0x5587e7caee88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5587e7c48140 'unsigned long'
|-TypedefDecl 0x5587e7caeef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5587e7c48040 'signed char'
|-TypedefDecl 0x5587e7caef68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5587e7c480e0 'unsigned char'
|-TypedefDecl 0x5587e7caefd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5587e7c48060 'short'
|-TypedefDecl 0x5587e7caf048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5587e7c48100 'unsigned short'
|-TypedefDecl 0x5587e7caf0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5587e7c48080 'int'
|-TypedefDecl 0x5587e7caf128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5587e7c48120 'unsigned int'
|-TypedefDecl 0x5587e7caf198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5587e7c480a0 'long'
|-TypedefDecl 0x5587e7caf208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5587e7c48140 'unsigned long'
|-TypedefDecl 0x5587e7caf278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5587e7c480a0 'long'
|-TypedefDecl 0x5587e7caf2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5587e7c48140 'unsigned long'
|-TypedefDecl 0x5587e7caf358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5587e7c48140 'unsigned long'
|-TypedefDecl 0x5587e7caf3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5587e7c48120 'unsigned int'
|-TypedefDecl 0x5587e7caf438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5587e7c48120 'unsigned int'
|-TypedefDecl 0x5587e7caf4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5587e7c48140 'unsigned long'
|-TypedefDecl 0x5587e7caf518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5587e7c48140 'unsigned long'
|-TypedefDecl 0x5587e7caf588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5587e7c48120 'unsigned int'
|-TypedefDecl 0x5587e7caf5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5587e7c48140 'unsigned long'
|-TypedefDecl 0x5587e7caf668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5587e7c480a0 'long'
|-TypedefDecl 0x5587e7caf6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5587e7c480a0 'long'
|-TypedefDecl 0x5587e7caf748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5587e7c48080 'int'
|-RecordDecl 0x5587e7caf7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5587e7caf918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5587e7caf9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5587e7caf970 'struct __fsid_t' sugar
|   `-RecordType 0x5587e7caf820 '__fsid_t'
|     `-Record 0x5587e7caf7a0 ''
|-TypedefDecl 0x5587e7cafa58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5587e7c480a0 'long'
|-TypedefDecl 0x5587e7cafac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5587e7c48140 'unsigned long'
|-TypedefDecl 0x5587e7cafb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5587e7c48140 'unsigned long'
|-TypedefDecl 0x5587e7cafba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5587e7c48120 'unsigned int'
|-TypedefDecl 0x5587e7cafc18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5587e7c480a0 'long'
|-TypedefDecl 0x5587e7cafc88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5587e7c48120 'unsigned int'
|-TypedefDecl 0x5587e7cafcf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5587e7c480a0 'long'
|-TypedefDecl 0x5587e7cafd68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5587e7c48080 'int'
|-TypedefDecl 0x5587e7cafdd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5587e7c48080 'int'
|-TypedefDecl 0x5587e7cafe48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5587e7c48080 'int'
|-TypedefDecl 0x5587e7cafeb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5587e7c487a0 'void *'
|   `-BuiltinType 0x5587e7c47fe0 'void'
|-TypedefDecl 0x5587e7caff28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5587e7c480a0 'long'
|-TypedefDecl 0x5587e7caff98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5587e7c480a0 'long'
|-TypedefDecl 0x5587e7cb0008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5587e7c480a0 'long'
|-TypedefDecl 0x5587e7cb0078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5587e7c48140 'unsigned long'
|-TypedefDecl 0x5587e7cb00e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5587e7c48140 'unsigned long'
|-TypedefDecl 0x5587e7cb0158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5587e7c48140 'unsigned long'
|-TypedefDecl 0x5587e7cb01c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5587e7c48140 'unsigned long'
|-TypedefDecl 0x5587e7cb0238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5587e7c480a0 'long'
|-TypedefDecl 0x5587e7cb02a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5587e7c480a0 'long'
|-TypedefDecl 0x5587e7cb0318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5587e7c480a0 'long'
|-TypedefDecl 0x5587e7cb0388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5587e7c48140 'unsigned long'
|-TypedefDecl 0x5587e7cb0418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5587e7cb03e0 '__off64_t' sugar
|   |-Typedef 0x5587e7caf6d8 '__off64_t'
|   `-BuiltinType 0x5587e7c480a0 'long'
|-TypedefDecl 0x5587e7cb0510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5587e7cb04d0 '__quad_t *'
|   `-TypedefType 0x5587e7cb0470 '__quad_t' sugar
|     |-Typedef 0x5587e7caf278 '__quad_t'
|     `-BuiltinType 0x5587e7c480a0 'long'
|-TypedefDecl 0x5587e7cb0580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5587e7c48c20 'char *'
|   `-BuiltinType 0x5587e7c48020 'char'
|-TypedefDecl 0x5587e7cb05f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5587e7c480a0 'long'
|-TypedefDecl 0x5587e7cb0660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5587e7c48120 'unsigned int'
|-FunctionDecl 0x5587e7cb07a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5587e7cb06d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5587e7cb0ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5587e7cb0ad8 <line:72:3, col:34>
|     `-CallExpr 0x5587e7cb0a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5587e7cb0a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5587e7cb0a10 <col:10> '<builtin fn type>' Function 0x5587e7cb0880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5587e7cb0ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5587e7cb0a30 <col:29> 'unsigned int' lvalue ParmVar 0x5587e7cb06d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5587e7cb0880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5587e7cb0920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5587e7cb0990 <col:10> Implicit
| `-ConstAttr 0x5587e7cb09e8 <col:10> Implicit
|-FunctionDecl 0x5587e7cb0c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5587e7cb0b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5587e7cb0f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5587e7cb0f48 <line:77:3, col:34>
|     `-CallExpr 0x5587e7cb0f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5587e7cb0ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5587e7cb0e78 <col:10> '<builtin fn type>' Function 0x5587e7cb0ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5587e7cb0f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5587e7cb0e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5587e7cb0b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5587e7cb0ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5587e7cb0d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5587e7cb0df8 <col:10> Implicit
| `-ConstAttr 0x5587e7cb0e50 <col:10> Implicit
|-TypedefDecl 0x5587e7cb0f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5587e7c48140 'unsigned long'
|-TypedefDecl 0x5587e7cb1018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5587e7cb0fe0 '__time_t' sugar
|   |-Typedef 0x5587e7cafc18 '__time_t'
|   `-BuiltinType 0x5587e7c480a0 'long'
|-RecordDecl 0x5587e7cb1070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5587e7cb1128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5587e7cb11b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5587e7cb1248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5587e7cb1210 '__pid_t' sugar
|   |-Typedef 0x5587e7caf748 '__pid_t'
|   `-BuiltinType 0x5587e7c48080 'int'
|-RecordDecl 0x5587e7cb12a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5587e7cb1360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5587e7cb13b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5587e7cb1470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5587e7cb14d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5587e7c48140 'unsigned long'
|-RecordDecl 0x5587e7cb1530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5587e7cb17c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5587e7cb38b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5587e7cb1810 'struct cpu_set_t' sugar
|   `-RecordType 0x5587e7cb15b0 'cpu_set_t'
|     `-Record 0x5587e7cb1530 ''
|-FunctionDecl 0x5587e7cb3b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5587e7cb3958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5587e7cb3a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5587e7cb3c38 <line:107:19>
|-FunctionDecl 0x5587e7cb3e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5587e7cb3ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5587e7cb3eb8 <col:69>
|-FunctionDecl 0x5587e7cb4030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5587e7cb3f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5587e7cb40d8 <col:64>
|-FunctionDecl 0x5587e7cb4398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5587e7cb4140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5587e7cb4278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5587e7cb4448 <line:113:22>
|-FunctionDecl 0x5587e7cb46c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5587e7cb44b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5587e7cb45a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5587e7cb4778 <col:88>
|-FunctionDecl 0x5587e7cb4a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5587e7cb47e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5587e7cb48c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5587e7cb4950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5587e7cb4b50 <col:62>
|-FunctionDecl 0x5587e7cb4cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5587e7cb4bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5587e7cb4d70 <col:63>
|-FunctionDecl 0x5587e7cb4e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5587e7cb4f38 <col:47>
|-FunctionDecl 0x5587e7cb5040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5587e7cb4fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5587e7cb50e8 <col:69>
|-FunctionDecl 0x5587e7cb51f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5587e7cb5158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5587e7cb5298 <col:69>
|-FunctionDecl 0x5587e7cb5558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5587e7cb5300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5587e7cb5438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5587e7cb5608 <col:88>
|-TypedefDecl 0x5587e7cb5698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5587e7cb5660 '__clock_t' sugar
|   |-Typedef 0x5587e7cafa58 '__clock_t'
|   `-BuiltinType 0x5587e7c480a0 'long'
|-TypedefDecl 0x5587e7cb5728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5587e7cb56f0 '__clockid_t' sugar
|   |-Typedef 0x5587e7cafe48 '__clockid_t'
|   `-BuiltinType 0x5587e7c48080 'int'
|-TypedefDecl 0x5587e7cb57b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5587e7cb5780 '__timer_t' sugar
|   |-Typedef 0x5587e7cafeb8 '__timer_t'
|   `-PointerType 0x5587e7c487a0 'void *'
|     `-BuiltinType 0x5587e7c47fe0 'void'
|-RecordDecl 0x5587e7cb5810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5587e7cb58e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5587e7cb5950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5587e7cb59b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5587e7cb5a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5587e7cb5a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5587e7cb5af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5587e7cb5b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5587e7cb5bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5587e7cb5c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5587e7cb5c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5587e7cb5cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5587e7cb5d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5587e7cb5e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5587e7cb5e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5587e7cb5f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5587e7cb6100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5587e7cb61a0 <col:45>
|-FunctionDecl 0x5587e7cb6380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5587e7cb6270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5587e7cb6428 <col:54>
|-FunctionDecl 0x5587e7cb6628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5587e7cb6490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5587e7cb6508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5587e7cb66d8 <line:157:22>
| `-ConstAttr 0x5587e7cb6730 <col:63>
|-FunctionDecl 0x5587e7cb7560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5587e7cb6828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5587e7cb7608 <col:56>
|-FunctionDecl 0x5587e7cb79b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5587e7cb7678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5587e7cb76f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5587e7cb7770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5587e7cb7868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5587e7cb7a70 <col:54>
|-RecordDecl 0x5587e7cb7ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5587e7cb7b78 parent 0x5587e7c47f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5587e7cb7dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5587e7cb7e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5587e7cb7ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5587e7cb7f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5587e7cb8038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5587e7cb8158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5587e7cb8100 'struct __locale_struct *'
|   `-ElaboratedType 0x5587e7cb8090 'struct __locale_struct' sugar
|     `-RecordType 0x5587e7cb7b50 'struct __locale_struct'
|       `-Record 0x5587e7cb7ac8 '__locale_struct'
|-TypedefDecl 0x5587e7cb8208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5587e7cb81d0 '__locale_t' sugar
|   |-Typedef 0x5587e7cb8158 '__locale_t'
|   `-PointerType 0x5587e7cb8100 'struct __locale_struct *'
|     `-ElaboratedType 0x5587e7cb8090 'struct __locale_struct' sugar
|       `-RecordType 0x5587e7cb7b50 'struct __locale_struct'
|         `-Record 0x5587e7cb7ac8 '__locale_struct'
|-FunctionDecl 0x5587e7cb8610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5587e7cb8278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5587e7cb82f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5587e7cb8370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5587e7cb8400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5587e7cb8478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5587e7cb86d8 <col:40>
|-FunctionDecl 0x5587e7cb88c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5587e7cb87a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5587e7cb8970 <col:66>
|-FunctionDecl 0x5587e7cb8a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5587e7cb89d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5587e7cb8b28 <col:69>
|-FunctionDecl 0x5587e7cb8d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5587e7cb8b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5587e7cb8c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5587e7cb8e08 <col:52>
|-FunctionDecl 0x5587e7cb8fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5587e7cb8e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5587e7cb8f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5587e7cb9060 <col:55>
|-FunctionDecl 0x5587e7cb91f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5587e7cb90e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5587e7cb92a0 <col:62>
|-FunctionDecl 0x5587e7cb9418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5587e7cb9308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5587e7cb94c0 <col:60>
|-FunctionDecl 0x5587e7cb9718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5587e7cb9578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5587e7cb95f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5587e7cb97c8 <col:44>
|-FunctionDecl 0x5587e7cb99d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5587e7cb9830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5587e7cb98b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5587e7cb9a88 <col:49>
|-VarDecl 0x5587e7cb9b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5587e7cb9c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5587e7cb9c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5587e7cb9d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5587e7cb9e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5587e7cb9f20 <col:42>
|-VarDecl 0x5587e7cb9f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5587e7cba010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5587e7cba198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5587e7cba088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5587e7cba240 <col:57>
|-FunctionDecl 0x5587e7cba350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5587e7cba2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5587e7cba3f8 <col:56>
|-FunctionDecl 0x5587e7cbb540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5587e7cba478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5587e7cbb5e8 <col:59>
|-FunctionDecl 0x5587e7cbb6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5587e7cbb658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5587e7cbb798 <col:48>
| `-ConstAttr 0x5587e7cbb7f0 <col:89>
|-FunctionDecl 0x5587e7cbba58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5587e7cbb8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5587e7cbb938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5587e7cbbcb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5587e7cbbb48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5587e7cbbbd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5587e7cbbd68 <col:88>
|-FunctionDecl 0x5587e7cbbf00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5587e7cbbdd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5587e7cbbe60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5587e7cbbfb0 <col:88>
|-FunctionDecl 0x5587e7cbc1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5587e7cbc018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5587e7cbc0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5587e7cbc278 <line:208:22>
|-FunctionDecl 0x5587e7cbc5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5587e7cbc2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5587e7cbc360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5587e7cbc3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5587e7cbc480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5587e7cbc8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5587e7cbc6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5587e7cbc7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5587e7cbc998 <col:85>
|-FunctionDecl 0x5587e7cbcd88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5587e7cbca00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5587e7cbcb38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5587e7cbcc40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5587e7cbce40 <col:52>
|-FunctionDecl 0x5587e7cbcfb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5587e7cbcea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5587e7cbd060 <col:61>
|-FunctionDecl 0x5587e7cbd560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5587e7cbd0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5587e7cbd148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5587e7cbd278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5587e7cbd368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5587e7cbd620 <col:62>
|-FunctionDecl 0x5587e7cbd838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5587e7cbd688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5587e7cbd718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5587e7cbd8e8 <line:221:22>
|-FunctionDecl 0x5587e7cbd9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5587e7cbd950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5587e7cbda90 <col:65>
|-TypedefDecl 0x5587e7cbdb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5587e7c48140 'unsigned long'
|-RecordDecl 0x5587e7cbdb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5587e7cbdca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5587e7cbdd08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5587e7cbddb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5587e7cbdd60 'union pthread_attr_t' sugar
|   `-RecordType 0x5587e7cbdbe0 'union pthread_attr_t'
|     `-Record 0x5587e7cbdb58 'pthread_attr_t'
|-RecordDecl 0x5587e7cbde10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5587e7cbdf88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5587e7cbe000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5587e7cbe0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5587e7cbe050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5587e7cbde90 'struct __pthread_internal_list'
|     `-Record 0x5587e7cbde10 '__pthread_internal_list'
|-RecordDecl 0x5587e7cbe120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5587e7cbe1c8 parent 0x5587e7c47f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5587e7cbe2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5587e7cbe308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5587e7cbe370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5587e7cbe3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5587e7cbe440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5587e7cbe4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5587e7cc2580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5587e7cc2630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5587e7cc2720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5587e7cc2788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5587e7cc2910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5587e7cc28b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5587e7cbe1a0 'pthread_mutex_t'
|     `-Record 0x5587e7cbe120 ''
|-RecordDecl 0x5587e7cc2980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5587e7cc2ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5587e7cc2b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5587e7cc2be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5587e7cc2b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5587e7cc2a00 'pthread_mutexattr_t'
|     `-Record 0x5587e7cc2980 ''
|-RecordDecl 0x5587e7cc2c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5587e7cc2cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5587e7cc2dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5587e7cc2e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5587e7cc2e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5587e7cc2ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5587e7cc2f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5587e7cc2fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5587e7cc3030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5587e7cc3098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5587e7cc3150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix027_tso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix027_tso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5587e7cc3240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5587e7cc32a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5587e7cc33e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5587e7cc3380 'union pthread_cond_t' sugar
|   `-RecordType 0x5587e7cc2cd0 'pthread_cond_t'
|     `-Record 0x5587e7cc2c50 ''
|-RecordDecl 0x5587e7cc3450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5587e7cc3590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5587e7cc35f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5587e7cc36b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5587e7cc3650 'union pthread_condattr_t' sugar
|   `-RecordType 0x5587e7cc34d0 'pthread_condattr_t'
|     `-Record 0x5587e7cc3450 ''
|-TypedefDecl 0x5587e7cc3738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5587e7c48120 'unsigned int'
|-TypedefDecl 0x5587e7cc37a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5587e7c48080 'int'
|-RecordDecl 0x5587e7cc3800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5587e7cc38a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5587e7cc3970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5587e7cc39d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5587e7cc3a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5587e7cc3aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5587e7cc3b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5587e7cc3b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5587e7cc3be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5587e7cc3c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5587e7cc3cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5587e7cc3d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5587e7cc3d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5587e7cc3e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix027_tso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix027_tso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5587e7cc3ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5587e7cc3f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5587e7cc4090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5587e7cc4030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5587e7cc3880 'pthread_rwlock_t'
|     `-Record 0x5587e7cc3800 ''
|-RecordDecl 0x5587e7cc4100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5587e7cc4240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5587e7cc42a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5587e7cc4360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5587e7cc4300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5587e7cc4180 'pthread_rwlockattr_t'
|     `-Record 0x5587e7cc4100 ''
|-TypedefDecl 0x5587e7cc43e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5587e7c48084 'volatile int' volatile
|   `-BuiltinType 0x5587e7c48080 'int'
|-RecordDecl 0x5587e7cc4440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5587e7cc65b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5587e7cc6618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5587e7cc66d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5587e7cc6670 'union pthread_barrier_t' sugar
|   `-RecordType 0x5587e7cc44c0 'pthread_barrier_t'
|     `-Record 0x5587e7cc4440 ''
|-RecordDecl 0x5587e7cc6740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5587e7cc6840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5587e7cc68a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5587e7cc6960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5587e7cc6900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5587e7cc67c0 'pthread_barrierattr_t'
|     `-Record 0x5587e7cc6740 ''
|-TypedefDecl 0x5587e7cc6a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5587e7cc6a10 'long [8]' 8 
|   `-BuiltinType 0x5587e7c480a0 'long'
|-EnumDecl 0x5587e7cc6ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5587e7cc6b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5587e7cc6be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5587e7cc6c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5587e7cc6d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5587e7cc6d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5587e7cc6da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5587e7cc6df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5587e7cc6e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5587e7cc6e68 <col:26> 'int'
| |   `-DeclRefExpr 0x5587e7cc6e48 <col:26> 'int' EnumConstant 0x5587e7cc6d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5587e7cc6f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5587e7cc6ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x5587e7cc6ed0 <col:29> 'int' EnumConstant 0x5587e7cc6d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5587e7cc6f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5587e7cc6f78 <col:30> 'int'
| |   `-DeclRefExpr 0x5587e7cc6f58 <col:30> 'int' EnumConstant 0x5587e7cc6da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5587e7cc7018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5587e7cc7000 <col:27> 'int'
|     `-DeclRefExpr 0x5587e7cc6fe0 <col:27> 'int' EnumConstant 0x5587e7cc6e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5587e7cc7068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5587e7cc7138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5587e7cc71c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5587e7cc71a8 <col:30> 'int'
| |   `-DeclRefExpr 0x5587e7cc7188 <col:30> 'int' EnumConstant 0x5587e7cc7138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5587e7cc7210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5587e7cc7298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5587e7cc7280 <col:29> 'int'
|     `-DeclRefExpr 0x5587e7cc7260 <col:29> 'int' EnumConstant 0x5587e7cc7210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5587e7cc72e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5587e7cc73b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5587e7cc7408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5587e7cc7458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5587e7cc74a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5587e7cc75c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5587e7cc7610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5587e7cc7660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5587e7cc76e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5587e7cc76d0 <col:31> 'int'
|     `-DeclRefExpr 0x5587e7cc76b0 <col:31> 'int' EnumConstant 0x5587e7cc75c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5587e7cc7738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5587e7cc7808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5587e7cc7858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5587e7cc78a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5587e7cc7978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5587e7cc79c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5587e7cc7a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5587e7cc7ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5587e7cc7b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5587e7cc7b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5587e7cc7dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5587e7cc7e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5587e7cc7e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5587e7cc7fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5587e7cc8008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5587e7cc80d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5587e7cc8128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5587e7cc8178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5587e7cc8248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5587e7cc8298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5587e7cc88f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5587e7cc8390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5587e7cc84a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5587e7cc86e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5587e7cc8760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5587e7cc89b8 <col:47>
| |-NonNullAttr 0x5587e7cc8a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x5587e7cc8a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5587e7cc8b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5587e7cc8aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5587e7cc8dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5587e7cc8c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5587e7cc8ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5587e7cc8f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5587e7cc8e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5587e7cc9040 <col:60>
|-FunctionDecl 0x5587e7cc9190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5587e7cc9230 <col:54>
| `-ConstAttr 0x5587e7cc9288 <col:95>
|-FunctionDecl 0x5587e7cc9458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5587e7cc92c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5587e7cc9338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5587e7cc9508 <line:394:19>
| `-ConstAttr 0x5587e7cc9560 <col:60>
|-FunctionDecl 0x5587e7cc9f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5587e7cc9e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5587e7cca010 <col:71>
| `-NonNullAttr 0x5587e7cca068 <col:112, col:126> 1
|-FunctionDecl 0x5587e7cca170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5587e7cca0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5587e7cca218 <line:397:22>
| `-NonNullAttr 0x5587e7cca270 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cca498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5587e7cca2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5587e7cca338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5587e7cca548 <line:400:22>
| `-NonNullAttr 0x5587e7cca5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5587e7cca7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5587e7cca5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5587e7cca668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5587e7cca858 <line:403:22>
| `-NonNullAttr 0x5587e7cca8b0 <col:63, col:77> 1
|-FunctionDecl 0x5587e7ccab08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5587e7cca8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5587e7cca9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5587e7ccabb8 <line:406:22>
| `-NonNullAttr 0x5587e7ccac10 <col:63, col:80> 1 2
|-FunctionDecl 0x5587e7ccbe48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5587e7ccac58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5587e7ccacd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5587e7ccbef8 <line:409:22>
| `-NonNullAttr 0x5587e7ccbf50 <col:63, col:77> 1
|-FunctionDecl 0x5587e7ccc188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5587e7ccbf98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5587e7ccc028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5587e7ccc238 <line:412:22>
| `-NonNullAttr 0x5587e7ccc290 <col:63, col:80> 1 2
|-FunctionDecl 0x5587e7ccc4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5587e7ccc2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5587e7ccc368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5587e7ccc578 <col:37>
| `-NonNullAttr 0x5587e7ccc5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x5587e7ccc7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5587e7ccc618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5587e7ccc698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5587e7ccc868 <line:418:22>
| `-NonNullAttr 0x5587e7ccc8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5587e7ccca48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5587e7ccc908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5587e7ccc988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5587e7cccaf8 <line:420:22>
| `-NonNullAttr 0x5587e7cccb50 <col:63, col:77> 1
|-FunctionDecl 0x5587e7ccccf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5587e7cccb98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5587e7cccc18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5587e7cccda8 <line:423:22>
| `-NonNullAttr 0x5587e7ccde30 <col:63, col:80> 1 2
|-FunctionDecl 0x5587e7ccdfb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5587e7ccde78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5587e7ccdef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5587e7cce068 <line:426:22>
| `-NonNullAttr 0x5587e7cce0c0 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cce268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5587e7cce108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5587e7cce188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5587e7cce318 <line:429:22>
| `-NonNullAttr 0x5587e7cce370 <col:63, col:80> 1 2
|-FunctionDecl 0x5587e7cce4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5587e7cce3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5587e7cce438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5587e7cce5a8 <line:431:22>
| `-NonNullAttr 0x5587e7cce600 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cce828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5587e7cce648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5587e7cce6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5587e7cce8d8 <line:434:22>
| |-NonNullAttr 0x5587e7cce930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5587e7cce968 <col:100> "" ""
|-FunctionDecl 0x5587e7cceb78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5587e7cce9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5587e7ccea38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5587e7ccec28 <line:437:22>
| |-NonNullAttr 0x5587e7ccec80 <col:63, col:77> 1
| `-DeprecatedAttr 0x5587e7ccecb8 <col:97> "" ""
|-FunctionDecl 0x5587e7cceeb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5587e7cced08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5587e7cced80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5587e7ccef68 <line:440:22>
| `-NonNullAttr 0x5587e7ccefc0 <col:63, col:80> 1 2
|-FunctionDecl 0x5587e7ccf140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5587e7ccf008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5587e7ccf080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5587e7ccf1f0 <line:443:22>
| `-NonNullAttr 0x5587e7ccf248 <col:63, col:77> 1
|-FunctionDecl 0x5587e7ccf538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5587e7ccf298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5587e7ccf318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5587e7ccf390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5587e7ccf5f0 <line:447:22>
| `-NonNullAttr 0x5587e7ccf648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5587e7ccf8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5587e7ccf6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5587e7ccf720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5587e7ccf798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5587e7ccf9b0 <col:43>
| `-NonNullAttr 0x5587e7ccfa08 <col:84, col:98> 1
|-FunctionDecl 0x5587e7ccfcc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5587e7ccfa58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5587e7ccfad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5587e7ccfb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5587e7ccfd80 <line:452:22>
| `-NonNullAttr 0x5587e7ccfdd8 <col:63, col:77> 3
|-FunctionDecl 0x5587e7cd00e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5587e7ccfe50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5587e7ccfed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5587e7ccff60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5587e7cd01a0 <line:456:22>
| `-NonNullAttr 0x5587e7cd01f8 <col:63, col:80> 2 3
|-FunctionDecl 0x5587e7cd03e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5587e7cd0248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5587e7cd02c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5587e7cd0498 <line:458:22>
|-FunctionDecl 0x5587e7cd0868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5587e7cd0560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5587e7cd0700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5587e7cd0918 <col:52, col:69> 1 2
|-FunctionDecl 0x5587e7cd0ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5587e7cd09a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5587e7cd0a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5587e7cd0ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5587e7cd0b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5587e7cd0c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5587e7cd0e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5587e7cd0d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5587e7cd0fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5587e7cd1040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5587e7cd10e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5587e7cd11d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5587e7cd1240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5587e7cd1410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix027_tso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5587e7cd1508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5587e7cd15c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5587e7cd1560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5587e7cd10c0 '__pthread_unwind_buf_t'
| |   `-Record 0x5587e7cd1040 ''
| `-AlignedAttr 0x5587e7cd1618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5587e7cd1690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5587e7cd17f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5587e7cd1858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5587e7cd18c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5587e7cd1928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5587e7cd1b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5587e7cd1a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5587e7cd1c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5587e7cd1be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5587e7cd1e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5587e7cd1d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5587e7cd1f18 <line:487:22>
|-RecordDecl 0x5587e7cd1f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5587e7cd2288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5587e7cd20e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5587e7cd2168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5587e7cd2338 <col:86>
| `-ReturnsTwiceAttr 0x5587e7cd2390 <col:12> Implicit
|-FunctionDecl 0x5587e7cd26b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5587e7cd2460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5587e7cd2570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5587e7cd2768 <line:493:22>
| `-NonNullAttr 0x5587e7cd27c0 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cd2938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5587e7cd2808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5587e7cd29e0 <line:495:22>
| `-NonNullAttr 0x5587e7cd2a38 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cd2b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5587e7cd2a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5587e7cd2be8 <line:497:22>
| `-NonNullAttr 0x5587e7cd2c40 <col:52, col:66> 1
|-FunctionDecl 0x5587e7cd2d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5587e7cd2c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5587e7cd2de8 <line:499:22>
| `-NonNullAttr 0x5587e7cd2e40 <col:52, col:66> 1
|-FunctionDecl 0x5587e7cd3088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5587e7cd2e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5587e7cd2f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5587e7cd3138 <col:36>
| `-NonNullAttr 0x5587e7cd3190 <col:66, col:83> 1 2
|-FunctionDecl 0x5587e7cd3290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5587e7cd31d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5587e7cd3338 <line:504:22>
| `-NonNullAttr 0x5587e7cd3390 <col:52, col:66> 1
|-FunctionDecl 0x5587e7cd3628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5587e7cd3440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5587e7cd34c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5587e7cd36d8 <line:508:22>
| `-NonNullAttr 0x5587e7cd3730 <col:63, col:80> 1 2
|-FunctionDecl 0x5587e7cd39f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5587e7cd3778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5587e7cd37f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5587e7cd3878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5587e7cd3ab0 <line:512:22>
| `-NonNullAttr 0x5587e7cd3b08 <col:63, col:80> 1 3
|-FunctionDecl 0x5587e7cd3c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5587e7cd3b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5587e7cd3cb8 <line:514:22>
| `-NonNullAttr 0x5587e7cd3d10 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cd3f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5587e7cd3dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5587e7cd3fe0 <line:516:22>
| `-NonNullAttr 0x5587e7cd4038 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cd4140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5587e7cd4088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5587e7cd41e8 <line:518:22>
| `-NonNullAttr 0x5587e7cd4240 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cd4468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5587e7cd4288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5587e7cd4308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5587e7cd4518 <line:522:22>
| `-NonNullAttr 0x5587e7cd4570 <col:63, col:80> 1 2
|-FunctionDecl 0x5587e7cd4778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5587e7cd45b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5587e7cd4638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5587e7cd4828 <line:525:22>
| `-NonNullAttr 0x5587e7cd4880 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cd4a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5587e7cd48c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5587e7cd4948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5587e7cd4ad8 <line:528:22>
| `-NonNullAttr 0x5587e7cd4b30 <col:63, col:80> 1 2
|-FunctionDecl 0x5587e7cd4cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5587e7cd4b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5587e7cd4bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5587e7cd4d68 <line:530:22>
| `-NonNullAttr 0x5587e7cd4dc0 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cd5f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5587e7cd4e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5587e7cd5eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5587e7cd6040 <line:534:22>
| `-NonNullAttr 0x5587e7cd6098 <col:63, col:80> 1 2
|-FunctionDecl 0x5587e7cd6228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5587e7cd60e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5587e7cd6168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5587e7cd62d8 <line:537:22>
| `-NonNullAttr 0x5587e7cd6330 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cd64d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5587e7cd6378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5587e7cd63f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5587e7cd6588 <line:541:22>
| `-NonNullAttr 0x5587e7cd65e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5587e7cd6768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5587e7cd6628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5587e7cd66a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5587e7cd6818 <line:544:22>
| `-NonNullAttr 0x5587e7cd6870 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cd6a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5587e7cd68b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5587e7cd6938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5587e7cd6b08 <line:547:22>
| `-NonNullAttr 0x5587e7cd6b60 <col:63, col:80> 1 2
|-FunctionDecl 0x5587e7cd6ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5587e7cd6ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5587e7cd6c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5587e7cd6d98 <line:550:22>
| `-NonNullAttr 0x5587e7cd6df0 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cd8168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5587e7cd7f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5587e7cd8020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5587e7cd8218 <col:29>
| `-NonNullAttr 0x5587e7cd8270 <col:70, col:84> 1
|-FunctionDecl 0x5587e7cd83e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5587e7cd82b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5587e7cd8490 <line:555:22>
| `-NonNullAttr 0x5587e7cd84e8 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cd85f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5587e7cd8538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5587e7cd8698 <line:557:22>
| `-NonNullAttr 0x5587e7cd86f0 <col:52, col:66> 1
|-FunctionDecl 0x5587e7cd87f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5587e7cd8738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5587e7cd8898 <line:559:19>
| `-NonNullAttr 0x5587e7cd88f0 <col:49, col:63> 1
|-FunctionDecl 0x5587e7cd8b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5587e7cd8938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5587e7cd89c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5587e7cd8bd8 <col:39>
| `-NonNullAttr 0x5587e7cd8c30 <col:69, col:86> 1 2
|-FunctionDecl 0x5587e7cd8d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5587e7cd8c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5587e7cd8dd8 <line:564:22>
| `-NonNullAttr 0x5587e7cd8e30 <col:52, col:66> 1
|-FunctionDecl 0x5587e7cd8f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5587e7cd8ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5587e7cd9040 <line:566:22>
| `-NonNullAttr 0x5587e7cd9098 <col:52, col:66> 1
|-FunctionDecl 0x5587e7cd9258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5587e7cd90e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5587e7cd9178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5587e7cd9308 <col:39>
| `-NonNullAttr 0x5587e7cd9360 <col:69, col:86> 1 2
|-FunctionDecl 0x5587e7cd9460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5587e7cd93a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5587e7cd9508 <line:571:22>
| `-NonNullAttr 0x5587e7cd9560 <col:52, col:66> 1
|-FunctionDecl 0x5587e7cd9748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5587e7cd9610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5587e7cd97f0 <line:573:22>
| `-NonNullAttr 0x5587e7cd9848 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cd9950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5587e7cd9898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5587e7cd99f8 <line:575:22>
| `-NonNullAttr 0x5587e7cd9a50 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cd9c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5587e7cd9a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5587e7cd9b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5587e7cd9d28 <line:579:22>
| `-NonNullAttr 0x5587e7cd9d80 <col:63, col:80> 1 2
|-FunctionDecl 0x5587e7cd9fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5587e7cd9dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5587e7cd9e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5587e7cda058 <line:582:22>
| `-NonNullAttr 0x5587e7cda0b0 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cda258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5587e7cda0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5587e7cda178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5587e7cda308 <line:586:22>
| `-NonNullAttr 0x5587e7cda360 <col:63, col:80> 1 2
|-FunctionDecl 0x5587e7cda4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5587e7cda3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5587e7cda428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5587e7cda598 <col:36>
| `-NonNullAttr 0x5587e7cda5f0 <col:77, col:91> 1
|-FunctionDecl 0x5587e7cda928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5587e7cda6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5587e7cda7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5587e7cda9d8 <line:591:22>
| `-NonNullAttr 0x5587e7cdaa30 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cdaba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5587e7cdaa78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5587e7cdac50 <line:593:22>
| `-NonNullAttr 0x5587e7cdaca8 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cdadb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5587e7cdacf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5587e7cdae58 <line:595:22>
| `-NonNullAttr 0x5587e7cdaeb0 <col:52, col:66> 1
|-FunctionDecl 0x5587e7cdafc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5587e7cdaf10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5587e7cdb070 <line:597:22>
| `-NonNullAttr 0x5587e7cdb0c8 <col:52, col:66> 1
|-FunctionDecl 0x5587e7cdb2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5587e7cdb118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5587e7cdb190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5587e7cdb3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5587e7cdb6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5587e7cdb428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5587e7cdb4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5587e7cdb530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5587e7cdb790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5587e7cdb9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5587e7cdb870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5587e7cdba50 <line:606:22>
| `-NonNullAttr 0x5587e7cdbaa8 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cdbbb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5587e7cdbaf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5587e7cdbc58 <line:608:22>
| `-NonNullAttr 0x5587e7cdbcb0 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cdbf10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5587e7cdbcf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5587e7cdbd78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5587e7cdbfc0 <line:612:22>
| `-NonNullAttr 0x5587e7cdc018 <col:63, col:80> 1 2
|-FunctionDecl 0x5587e7cdc228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5587e7cdc068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5587e7cdc0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5587e7cdc2d8 <col:37>
| `-NonNullAttr 0x5587e7cdc330 <col:78, col:92> 1
|-FunctionDecl 0x5587e7cdc548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5587e7cdc378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5587e7cdc420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5587e7cdc5f8 <line:618:22>
| `-NonNullAttr 0x5587e7cdc650 <col:63, col:80> 1 2
|-FunctionDecl 0x5587e7cdc818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5587e7cdc698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5587e7cdc710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5587e7cdc8c8 <line:621:22>
| `-NonNullAttr 0x5587e7cdc920 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cdcbc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5587e7cdca00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5587e7cdca80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5587e7cdcc78 <line:623:22>
| `-NonNullAttr 0x5587e7cdccd0 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cdce48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5587e7cdcd18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5587e7cdcf20 <line:625:22>
| `-NonNullAttr 0x5587e7cdcf78 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cdd080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5587e7cdcfc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5587e7cdd128 <line:627:22>
| `-NonNullAttr 0x5587e7cdd180 <col:52, col:66> 1
|-FunctionDecl 0x5587e7cdd280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5587e7cdd1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5587e7cdd328 <line:629:22>
| `-NonNullAttr 0x5587e7cdd380 <col:52, col:66> 1
|-FunctionDecl 0x5587e7cdd480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5587e7cdd3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5587e7cdd528 <line:631:22>
| `-NonNullAttr 0x5587e7cdd580 <col:52, col:66> 1
|-FunctionDecl 0x5587e7cdd958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5587e7cdd660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5587e7cdd770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5587e7cdd7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5587e7cdda10 <line:635:22>
| `-NonNullAttr 0x5587e7cdda68 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cddbe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5587e7cddab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5587e7cddc90 <line:637:22>
| `-NonNullAttr 0x5587e7cddce8 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cdddf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5587e7cddd38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5587e7cdde98 <line:639:22>
| `-NonNullAttr 0x5587e7cddef0 <col:52, col:66> 1
|-FunctionDecl 0x5587e7cde0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5587e7cddfb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5587e7cde190 <line:641:22>
| `-NonNullAttr 0x5587e7cde1e8 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cde2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5587e7cde238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5587e7cde398 <line:643:22>
| `-NonNullAttr 0x5587e7cde3f0 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cde618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5587e7cde438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5587e7cde4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5587e7cde6c8 <line:647:22>
| `-NonNullAttr 0x5587e7cde720 <col:63, col:80> 1 2
|-FunctionDecl 0x5587e7cde928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5587e7cde768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5587e7cde7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5587e7cde9d8 <line:650:22>
| `-NonNullAttr 0x5587e7cdea30 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cded78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5587e7cdeb10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5587e7cdec30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5587e7cdee28 <line:653:22>
| `-NonNullAttr 0x5587e7cdee80 <col:63, col:77> 1
|-FunctionDecl 0x5587e7cdefe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5587e7cdeec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5587e7cdf090 <col:69>
|-FunctionDecl 0x5587e7cdf208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5587e7cdf0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5587e7cdf2b0 <col:72>
|-FunctionDecl 0x5587e7cdf4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5587e7cdf318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5587e7cdf3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5587e7cdf598 <col:44>
|-FunctionDecl 0x5587e7cdf7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5587e7cdf600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5587e7cdf678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5587e7cdf868 <line:660:22>
| `-NonNullAttr 0x5587e7cdf8c0 <col:63, col:77> 2
|-FunctionDecl 0x5587e7cdfd08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5587e7cdf9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5587e7cdfab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5587e7cdfbc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5587e7cdfdc0 <col:47>
|-FunctionDecl 0x5587e7ce0f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5587e7cdfe30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5587e7ce10b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5587e7ce1020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5587e7ce1210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5587e7ce1178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5587e7ce1368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x5587e7ce12d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5587e7ce1430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5587e7ce14f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5587e7ce15b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5587e7ce1668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5587e7ce16e8 prev 0x5587e7ce1668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5587e7ce1750 <col:24> 'int' 0
|-VarDecl 0x5587e7ce1788 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5587e7ce1808 prev 0x5587e7ce1788 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5587e7ce1870 <col:27> 'int' 0
|-VarDecl 0x5587e7ce18a8 <line:676:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x5587e7ce1928 prev 0x5587e7ce18a8 <line:677:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x5587e7ce1990 <col:27> 'int' 0
|-VarDecl 0x5587e7ce19c8 <line:678:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x5587e7ce1a48 prev 0x5587e7ce19c8 <line:679:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x5587e7ce1ab0 <col:27> 'int' 0
|-VarDecl 0x5587e7ce1ae8 <line:680:1, col:5> col:5 used a 'int'
|-VarDecl 0x5587e7ce1b68 prev 0x5587e7ce1ae8 <line:681:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x5587e7ce1bd0 <col:9> 'int' 0
|-VarDecl 0x5587e7ce1c00 <line:682:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5587e7ce1c78 <line:683:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5587e7ce1cf8 <line:684:1, col:5> col:5 used x 'int'
|-VarDecl 0x5587e7ce1d78 prev 0x5587e7ce1cf8 <line:685:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5587e7ce1de0 <col:9> 'int' 0
|-VarDecl 0x5587e7ce1e10 <line:686:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x5587e7ce1e90 <line:687:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x5587e7ce1f70 <line:688:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x5587e7ce1fe8 <line:689:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x5587e7ce2060 <line:690:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x5587e7ce20d8 <line:691:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x5587e7ce2150 <line:692:1, col:7> col:7 used x$r_buff0_thd4 '_Bool'
|-VarDecl 0x5587e7ce21c8 <line:693:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x5587e7ce2240 <line:694:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x5587e7ce22b8 <line:695:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x5587e7ce2330 <line:696:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x5587e7ce23a8 <line:697:1, col:7> col:7 used x$r_buff1_thd4 '_Bool'
|-VarDecl 0x5587e7ce2420 <line:698:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x5587e7ce24a0 <line:699:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x5587e7ce2520 <line:700:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x5587e7ce2598 <line:701:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x5587e7ce2618 <line:702:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x5587e7ce2690 <line:703:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x5587e7ce2710 <line:704:1, col:5> col:5 used y 'int'
|-VarDecl 0x5587e7ce2790 prev 0x5587e7ce2710 <line:705:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5587e7ce27f8 <col:9> 'int' 0
|-VarDecl 0x5587e7ce2830 <line:706:1, col:5> col:5 used z 'int'
|-VarDecl 0x5587e7ce28b0 prev 0x5587e7ce2830 <line:707:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5587e7ce2918 <col:9> 'int' 0
|-VarDecl 0x5587e7ce2948 <line:708:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5587e7ce29c0 <line:709:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5587e7ce2ad8 prev 0x5587e7ce0f60 <line:710:1, line:729:1> line:710:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5587e7ce2a40 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5587e7ce3d68 <line:711:1, line:729:1>
|   |-CallExpr 0x5587e7ce2be8 <line:712:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce2bd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce2b80 <col:3> 'void ()' Function 0x5587e7c88350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5587e7ce2c48 <line:713:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5587e7ce2c08 <col:3> 'int' lvalue Var 0x5587e7ce1b68 'a' 'int'
|   | `-IntegerLiteral 0x5587e7ce2c28 <col:7> 'int' 1
|   |-CallExpr 0x5587e7ce2ca0 <line:714:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce2c88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce2c68 <col:3> 'void ()' Function 0x5587e7c88410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5587e7ce2cf8 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce2ce0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce2cc0 <col:3> 'void ()' Function 0x5587e7c88350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5587e7ce2d58 <line:716:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5587e7ce2d18 <col:3> 'int' lvalue Var 0x5587e7ce1d78 'x' 'int'
|   | `-IntegerLiteral 0x5587e7ce2d38 <col:7> 'int' 1
|   |-CallExpr 0x5587e7ce2db0 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce2d98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce2d78 <col:3> 'void ()' Function 0x5587e7c88410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5587e7ce2e08 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce2df0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce2dd0 <col:3> 'void ()' Function 0x5587e7c88350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5587e7ce3108 <line:719:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5587e7ce2e28 <col:3> 'int' lvalue Var 0x5587e7ce1d78 'x' 'int'
|   | `-ConditionalOperator 0x5587e7ce30d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5587e7ce2ee8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5587e7ce2ea0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5587e7ce2e88 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5587e7ce2e48 <col:7> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5587e7ce2ed0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5587e7ce2eb8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5587e7ce2e68 <col:25> '_Bool' lvalue Var 0x5587e7ce1fe8 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5587e7ce30c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5587e7ce2f08 <col:42> 'int' lvalue Var 0x5587e7ce2520 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5587e7ce30a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5587e7ce3070 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5587e7ce2fe0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5587e7ce2f98 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5587e7ce2f80 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5587e7ce2f28 <col:55> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5587e7ce2fc8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5587e7ce2fb0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5587e7ce2f48 <col:73> '_Bool' lvalue Var 0x5587e7ce2240 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5587e7ce3040 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5587e7ce3000 <col:90> 'int' lvalue Var 0x5587e7ce2618 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5587e7ce3058 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5587e7ce3020 <col:102> 'int' lvalue Var 0x5587e7ce1d78 'x' 'int'
|   |-BinaryOperator 0x5587e7ce3310 <line:720:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5587e7ce3128 <col:3> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5587e7ce32f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5587e7ce32c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5587e7ce31e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5587e7ce31a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5587e7ce3188 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5587e7ce3148 <col:20> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5587e7ce31d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5587e7ce31b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5587e7ce3168 <col:38> '_Bool' lvalue Var 0x5587e7ce1fe8 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5587e7ce3280 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5587e7ce3238 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5587e7ce3208 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5587e7ce32b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5587e7ce3298 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5587e7ce3260 <col:66> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5587e7ce35f8 <line:721:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5587e7ce3330 <col:3> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5587e7ce35e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5587e7ce35b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5587e7ce34d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5587e7ce33f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5587e7ce33a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5587e7ce3390 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5587e7ce3350 <col:20> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5587e7ce33d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5587e7ce33c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5587e7ce3370 <col:38> '_Bool' lvalue Var 0x5587e7ce1fe8 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5587e7ce34b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5587e7ce3468 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5587e7ce3450 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5587e7ce3410 <col:56> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5587e7ce3498 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5587e7ce3480 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5587e7ce3430 <col:74> '_Bool' lvalue Var 0x5587e7ce2240 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5587e7ce3568 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5587e7ce3520 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5587e7ce34f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5587e7ce3598 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5587e7ce3580 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5587e7ce3548 <col:102> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5587e7ce3800 <line:722:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5587e7ce3618 <col:3> '_Bool' lvalue Var 0x5587e7ce1fe8 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5587e7ce37e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5587e7ce37b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5587e7ce36d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5587e7ce3690 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5587e7ce3678 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5587e7ce3638 <col:20> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5587e7ce36c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5587e7ce36a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5587e7ce3658 <col:38> '_Bool' lvalue Var 0x5587e7ce1fe8 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5587e7ce3770 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5587e7ce3728 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5587e7ce36f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5587e7ce37a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5587e7ce3788 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5587e7ce3750 <col:66> '_Bool' lvalue Var 0x5587e7ce1fe8 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5587e7ce3ae8 <line:723:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5587e7ce3820 <col:3> '_Bool' lvalue Var 0x5587e7ce2240 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5587e7ce3ad0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5587e7ce3aa0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5587e7ce39c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5587e7ce38e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5587e7ce3898 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5587e7ce3880 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5587e7ce3840 <col:20> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5587e7ce38c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5587e7ce38b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5587e7ce3860 <col:38> '_Bool' lvalue Var 0x5587e7ce1fe8 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5587e7ce39a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5587e7ce3958 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5587e7ce3940 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5587e7ce3900 <col:56> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5587e7ce3988 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5587e7ce3970 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5587e7ce3920 <col:74> '_Bool' lvalue Var 0x5587e7ce2240 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5587e7ce3a58 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5587e7ce3a10 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5587e7ce39e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5587e7ce3a88 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5587e7ce3a70 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5587e7ce3a38 <col:102> '_Bool' lvalue Var 0x5587e7ce2240 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5587e7ce3b40 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce3b28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce3b08 <col:3> 'void ()' Function 0x5587e7c88410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5587e7ce3b98 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce3b80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce3b60 <col:3> 'void ()' Function 0x5587e7c88350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5587e7ce3c50 <line:726:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5587e7ce3bb8 <col:3> 'int' lvalue Var 0x5587e7ce16e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5587e7ce3c30 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5587e7ce3c18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5587e7ce3bd8 <col:22> 'int' lvalue Var 0x5587e7ce16e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5587e7ce3bf8 <col:41> 'int' 1
|   |-CallExpr 0x5587e7ce3ca8 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce3c90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce3c70 <col:3> 'void ()' Function 0x5587e7c88410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5587e7ce3d58 <line:728:3, col:36>
|     `-CallExpr 0x5587e7ce3d38 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5587e7ce3d20 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5587e7ce3cc8 <col:10> 'void *(void)' Function 0x5587e7c87e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5587e7ce3eb0 prev 0x5587e7ce10b8 <line:730:1, line:759:1> line:730:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5587e7ce3e18 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5587e7ce5720 <line:731:1, line:759:1>
|   |-CallExpr 0x5587e7ce3fa8 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce3f90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce3f58 <col:3> 'void ()' Function 0x5587e7c88350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5587e7ce4020 <line:733:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5587e7ce3fc8 <col:3> 'int' lvalue Var 0x5587e7ce2618 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5587e7ce4008 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5587e7ce3fe8 <col:15> 'int' lvalue Var 0x5587e7ce2520 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5587e7ce4080 <line:734:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5587e7ce4040 <col:3> 'int' lvalue Var 0x5587e7ce2520 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x5587e7ce4060 <col:15> 'int' 2
|   |-BinaryOperator 0x5587e7ce40f8 <line:735:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5587e7ce40a0 <col:3> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5587e7ce40e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5587e7ce40c0 <col:20> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5587e7ce4190 <line:736:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5587e7ce4118 <col:3> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5587e7ce4168 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5587e7ce4138 <col:27> 'int' 1
|   |-CallExpr 0x5587e7ce4318 <line:737:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5587e7ce4300 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5587e7ce41b0 <col:3> 'void (int)' Function 0x5587e7c880d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5587e7ce42b0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5587e7ce4290 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5587e7ce4270 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5587e7ce4228 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5587e7ce4210 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5587e7ce41d0 <col:23> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5587e7ce4258 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5587e7ce4240 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5587e7ce41f0 <col:41> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5587e7ce4398 <line:738:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5587e7ce4340 <col:3> '_Bool' lvalue Var 0x5587e7ce21c8 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5587e7ce4380 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5587e7ce4360 <col:20> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5587e7ce4410 <line:739:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5587e7ce43b8 <col:3> '_Bool' lvalue Var 0x5587e7ce2240 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5587e7ce43f8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5587e7ce43d8 <col:20> '_Bool' lvalue Var 0x5587e7ce1fe8 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5587e7ce4488 <line:740:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5587e7ce4430 <col:3> '_Bool' lvalue Var 0x5587e7ce22b8 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5587e7ce4470 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5587e7ce4450 <col:20> '_Bool' lvalue Var 0x5587e7ce2060 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5587e7ce4500 <line:741:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5587e7ce44a8 <col:3> '_Bool' lvalue Var 0x5587e7ce2330 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5587e7ce44e8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5587e7ce44c8 <col:20> '_Bool' lvalue Var 0x5587e7ce20d8 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5587e7ce4578 <line:742:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5587e7ce4520 <col:3> '_Bool' lvalue Var 0x5587e7ce23a8 'x$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5587e7ce4560 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5587e7ce4540 <col:20> '_Bool' lvalue Var 0x5587e7ce2150 'x$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5587e7ce4610 <line:743:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5587e7ce4598 <col:3> '_Bool' lvalue Var 0x5587e7ce2060 'x$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x5587e7ce45e8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5587e7ce45b8 <col:27> 'int' 1
|   |-CallExpr 0x5587e7ce4668 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce4650 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce4630 <col:3> 'void ()' Function 0x5587e7c88410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5587e7ce46c0 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce46a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce4688 <col:3> 'void ()' Function 0x5587e7c88350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5587e7ce4738 <line:746:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5587e7ce46e0 <col:3> 'int' lvalue Var 0x5587e7ce1808 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5587e7ce4720 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5587e7ce4700 <col:25> 'int' lvalue Var 0x5587e7ce2790 'y' 'int'
|   |-CallExpr 0x5587e7ce4790 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce4778 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce4758 <col:3> 'void ()' Function 0x5587e7c88410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5587e7ce47e8 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce47d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce47b0 <col:3> 'void ()' Function 0x5587e7c88350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5587e7ce4ad0 <line:749:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5587e7ce4808 <col:3> 'int' lvalue Var 0x5587e7ce1d78 'x' 'int'
|   | `-ConditionalOperator 0x5587e7ce4aa0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5587e7ce48c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5587e7ce4880 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5587e7ce4868 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5587e7ce4828 <col:7> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5587e7ce48b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5587e7ce4898 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5587e7ce4848 <col:25> '_Bool' lvalue Var 0x5587e7ce2060 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5587e7ce4a88 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5587e7ce48e8 <col:42> 'int' lvalue Var 0x5587e7ce2520 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5587e7ce4a68 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5587e7ce4a38 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5587e7ce49a8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5587e7ce4960 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5587e7ce4948 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5587e7ce4908 <col:55> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5587e7ce4990 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5587e7ce4978 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5587e7ce4928 <col:73> '_Bool' lvalue Var 0x5587e7ce22b8 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5587e7ce4a08 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5587e7ce49c8 <col:90> 'int' lvalue Var 0x5587e7ce2618 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5587e7ce4a20 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5587e7ce49e8 <col:102> 'int' lvalue Var 0x5587e7ce1d78 'x' 'int'
|   |-BinaryOperator 0x5587e7ce4cd8 <line:750:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5587e7ce4af0 <col:3> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5587e7ce4cc0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5587e7ce4c90 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5587e7ce4bb0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5587e7ce4b68 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5587e7ce4b50 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5587e7ce4b10 <col:20> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5587e7ce4b98 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5587e7ce4b80 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5587e7ce4b30 <col:38> '_Bool' lvalue Var 0x5587e7ce2060 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5587e7ce4c48 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5587e7ce4c00 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5587e7ce4bd0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5587e7ce4c78 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5587e7ce4c60 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5587e7ce4c28 <col:66> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5587e7ce4fe8 <line:751:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5587e7ce4cf8 <col:3> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5587e7ce4fd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5587e7ce4fa0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5587e7ce4e98 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5587e7ce4db8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5587e7ce4d70 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5587e7ce4d58 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5587e7ce4d18 <col:20> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5587e7ce4da0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5587e7ce4d88 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5587e7ce4d38 <col:38> '_Bool' lvalue Var 0x5587e7ce2060 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5587e7ce4e78 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5587e7ce4e30 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5587e7ce4e18 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5587e7ce4dd8 <col:56> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5587e7ce4e60 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5587e7ce4e48 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5587e7ce4df8 <col:74> '_Bool' lvalue Var 0x5587e7ce22b8 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5587e7ce4f30 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5587e7ce4ee8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5587e7ce4eb8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5587e7ce4f60 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5587e7ce4f48 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5587e7ce4f10 <col:102> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5587e7ce51f0 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5587e7ce5008 <col:3> '_Bool' lvalue Var 0x5587e7ce2060 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5587e7ce51d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5587e7ce51a8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5587e7ce50c8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5587e7ce5080 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5587e7ce5068 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5587e7ce5028 <col:20> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5587e7ce50b0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5587e7ce5098 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5587e7ce5048 <col:38> '_Bool' lvalue Var 0x5587e7ce2060 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5587e7ce5160 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5587e7ce5118 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5587e7ce50e8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5587e7ce5190 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5587e7ce5178 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5587e7ce5140 <col:66> '_Bool' lvalue Var 0x5587e7ce2060 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5587e7ce54d8 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5587e7ce5210 <col:3> '_Bool' lvalue Var 0x5587e7ce22b8 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5587e7ce54c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5587e7ce5490 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5587e7ce53b0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5587e7ce52d0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5587e7ce5288 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5587e7ce5270 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5587e7ce5230 <col:20> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5587e7ce52b8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5587e7ce52a0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5587e7ce5250 <col:38> '_Bool' lvalue Var 0x5587e7ce2060 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5587e7ce5390 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5587e7ce5348 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5587e7ce5330 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5587e7ce52f0 <col:56> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5587e7ce5378 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5587e7ce5360 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5587e7ce5310 <col:74> '_Bool' lvalue Var 0x5587e7ce22b8 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5587e7ce5448 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5587e7ce5400 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5587e7ce53d0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5587e7ce5478 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5587e7ce5460 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5587e7ce5428 <col:102> '_Bool' lvalue Var 0x5587e7ce22b8 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5587e7ce5530 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce5518 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce54f8 <col:3> 'void ()' Function 0x5587e7c88410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5587e7ce5588 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce5570 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce5550 <col:3> 'void ()' Function 0x5587e7c88350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5587e7ce5640 <line:756:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5587e7ce55a8 <col:3> 'int' lvalue Var 0x5587e7ce16e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5587e7ce5620 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5587e7ce5608 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5587e7ce55c8 <col:22> 'int' lvalue Var 0x5587e7ce16e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5587e7ce55e8 <col:41> 'int' 1
|   |-CallExpr 0x5587e7ce5698 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce5680 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce5660 <col:3> 'void ()' Function 0x5587e7c88410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5587e7ce5710 <line:758:3, col:36>
|     `-CallExpr 0x5587e7ce56f0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5587e7ce56d8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5587e7ce56b8 <col:10> 'void *(void)' Function 0x5587e7c87e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5587e7ce58b8 prev 0x5587e7ce1210 <line:760:1, line:779:1> line:760:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5587e7ce5820 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5587e7ce6ad8 <line:761:1, line:779:1>
|   |-CallExpr 0x5587e7ce5998 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce5980 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce5960 <col:3> 'void ()' Function 0x5587e7c88350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5587e7ce59f8 <line:763:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5587e7ce59b8 <col:3> 'int' lvalue Var 0x5587e7ce2790 'y' 'int'
|   | `-IntegerLiteral 0x5587e7ce59d8 <col:7> 'int' 1
|   |-CallExpr 0x5587e7ce5a50 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce5a38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce5a18 <col:3> 'void ()' Function 0x5587e7c88410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5587e7ce5aa8 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce5a90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce5a70 <col:3> 'void ()' Function 0x5587e7c88350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5587e7ce5b08 <line:766:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5587e7ce5ac8 <col:3> 'int' lvalue Var 0x5587e7ce28b0 'z' 'int'
|   | `-IntegerLiteral 0x5587e7ce5ae8 <col:7> 'int' 1
|   |-CallExpr 0x5587e7ce5b60 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce5b48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce5b28 <col:3> 'void ()' Function 0x5587e7c88410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5587e7ce5bb8 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce5ba0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce5b80 <col:3> 'void ()' Function 0x5587e7c88350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5587e7ce5ea0 <line:769:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5587e7ce5bd8 <col:3> 'int' lvalue Var 0x5587e7ce1d78 'x' 'int'
|   | `-ConditionalOperator 0x5587e7ce5e70 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5587e7ce5c98 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5587e7ce5c50 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5587e7ce5c38 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5587e7ce5bf8 <col:7> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5587e7ce5c80 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5587e7ce5c68 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5587e7ce5c18 <col:25> '_Bool' lvalue Var 0x5587e7ce20d8 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5587e7ce5e58 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5587e7ce5cb8 <col:42> 'int' lvalue Var 0x5587e7ce2520 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5587e7ce5e38 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5587e7ce5e08 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5587e7ce5d78 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5587e7ce5d30 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5587e7ce5d18 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5587e7ce5cd8 <col:55> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5587e7ce5d60 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5587e7ce5d48 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5587e7ce5cf8 <col:73> '_Bool' lvalue Var 0x5587e7ce2330 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5587e7ce5dd8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5587e7ce5d98 <col:90> 'int' lvalue Var 0x5587e7ce2618 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5587e7ce5df0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5587e7ce5db8 <col:102> 'int' lvalue Var 0x5587e7ce1d78 'x' 'int'
|   |-BinaryOperator 0x5587e7ce60b8 <line:770:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5587e7ce5ec0 <col:3> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5587e7ce60a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5587e7ce6070 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5587e7ce5f80 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5587e7ce5f38 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5587e7ce5f20 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5587e7ce5ee0 <col:20> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5587e7ce5f68 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5587e7ce5f50 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5587e7ce5f00 <col:38> '_Bool' lvalue Var 0x5587e7ce20d8 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5587e7ce6028 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5587e7ce5fe0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5587e7ce5fb0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5587e7ce6058 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5587e7ce6040 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5587e7ce6008 <col:66> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5587e7ce63a0 <line:771:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5587e7ce60d8 <col:3> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5587e7ce6388 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5587e7ce6358 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5587e7ce6278 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5587e7ce6198 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5587e7ce6150 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5587e7ce6138 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5587e7ce60f8 <col:20> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5587e7ce6180 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5587e7ce6168 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5587e7ce6118 <col:38> '_Bool' lvalue Var 0x5587e7ce20d8 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5587e7ce6258 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5587e7ce6210 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5587e7ce61f8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5587e7ce61b8 <col:56> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5587e7ce6240 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5587e7ce6228 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5587e7ce61d8 <col:74> '_Bool' lvalue Var 0x5587e7ce2330 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5587e7ce6310 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5587e7ce62c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5587e7ce6298 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5587e7ce6340 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5587e7ce6328 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5587e7ce62f0 <col:102> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5587e7ce65a8 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5587e7ce63c0 <col:3> '_Bool' lvalue Var 0x5587e7ce20d8 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5587e7ce6590 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5587e7ce6560 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5587e7ce6480 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5587e7ce6438 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5587e7ce6420 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5587e7ce63e0 <col:20> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5587e7ce6468 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5587e7ce6450 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5587e7ce6400 <col:38> '_Bool' lvalue Var 0x5587e7ce20d8 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5587e7ce6518 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5587e7ce64d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5587e7ce64a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5587e7ce6548 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5587e7ce6530 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5587e7ce64f8 <col:66> '_Bool' lvalue Var 0x5587e7ce20d8 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5587e7ce6890 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5587e7ce65c8 <col:3> '_Bool' lvalue Var 0x5587e7ce2330 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5587e7ce6878 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5587e7ce6848 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5587e7ce6768 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5587e7ce6688 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5587e7ce6640 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5587e7ce6628 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5587e7ce65e8 <col:20> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5587e7ce6670 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5587e7ce6658 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5587e7ce6608 <col:38> '_Bool' lvalue Var 0x5587e7ce20d8 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5587e7ce6748 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5587e7ce6700 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5587e7ce66e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5587e7ce66a8 <col:56> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5587e7ce6730 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5587e7ce6718 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5587e7ce66c8 <col:74> '_Bool' lvalue Var 0x5587e7ce2330 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5587e7ce6800 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5587e7ce67b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5587e7ce6788 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5587e7ce6830 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5587e7ce6818 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5587e7ce67e0 <col:102> '_Bool' lvalue Var 0x5587e7ce2330 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5587e7ce68e8 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce68d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce68b0 <col:3> 'void ()' Function 0x5587e7c88410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5587e7ce6940 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce6928 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce6908 <col:3> 'void ()' Function 0x5587e7c88350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5587e7ce69f8 <line:776:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5587e7ce6960 <col:3> 'int' lvalue Var 0x5587e7ce16e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5587e7ce69d8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5587e7ce69c0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5587e7ce6980 <col:22> 'int' lvalue Var 0x5587e7ce16e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5587e7ce69a0 <col:41> 'int' 1
|   |-CallExpr 0x5587e7ce6a50 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce6a38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce6a18 <col:3> 'void ()' Function 0x5587e7c88410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5587e7ce6ac8 <line:778:3, col:36>
|     `-CallExpr 0x5587e7ce6aa8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5587e7ce6a90 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5587e7ce6a70 <col:10> 'void *(void)' Function 0x5587e7c87e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5587e7ce6c20 prev 0x5587e7ce1368 <line:780:1, line:802:1> line:780:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x5587e7ce6b88 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5587e7ce7fd0 <line:781:1, line:802:1>
|   |-CallExpr 0x5587e7ce6d00 <line:782:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce6ce8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce6cc8 <col:3> 'void ()' Function 0x5587e7c88350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5587e7ce6d60 <line:783:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5587e7ce6d20 <col:3> 'int' lvalue Var 0x5587e7ce28b0 'z' 'int'
|   | `-IntegerLiteral 0x5587e7ce6d40 <col:7> 'int' 2
|   |-CallExpr 0x5587e7ce6db8 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce6da0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce6d80 <col:3> 'void ()' Function 0x5587e7c88410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5587e7ce6e10 <line:785:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce6df8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce6dd8 <col:3> 'void ()' Function 0x5587e7c88350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5587e7ce6e88 <line:786:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5587e7ce6e30 <col:3> 'int' lvalue Var 0x5587e7ce1928 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x5587e7ce6e70 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5587e7ce6e50 <col:25> 'int' lvalue Var 0x5587e7ce28b0 'z' 'int'
|   |-CallExpr 0x5587e7ce6ee0 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce6ec8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce6ea8 <col:3> 'void ()' Function 0x5587e7c88410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5587e7ce6f38 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce6f20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce6f00 <col:3> 'void ()' Function 0x5587e7c88350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5587e7ce6fc0 <line:789:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5587e7ce6f58 <col:3> 'int' lvalue Var 0x5587e7ce1a48 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x5587e7ce6f98 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5587e7ce6f78 <col:25> 'int' lvalue Var 0x5587e7ce1b68 'a' 'int'
|   |-CallExpr 0x5587e7ce7018 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce7000 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce6fe0 <col:3> 'void ()' Function 0x5587e7c88410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5587e7ce7070 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce7058 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce7038 <col:3> 'void ()' Function 0x5587e7c88350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5587e7ce7358 <line:792:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5587e7ce7090 <col:3> 'int' lvalue Var 0x5587e7ce1d78 'x' 'int'
|   | `-ConditionalOperator 0x5587e7ce7328 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5587e7ce7150 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5587e7ce7108 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5587e7ce70f0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5587e7ce70b0 <col:7> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5587e7ce7138 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5587e7ce7120 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5587e7ce70d0 <col:25> '_Bool' lvalue Var 0x5587e7ce2150 'x$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x5587e7ce7310 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5587e7ce7170 <col:42> 'int' lvalue Var 0x5587e7ce2520 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5587e7ce72f0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5587e7ce72c0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5587e7ce7230 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5587e7ce71e8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5587e7ce71d0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5587e7ce7190 <col:55> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5587e7ce7218 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5587e7ce7200 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5587e7ce71b0 <col:73> '_Bool' lvalue Var 0x5587e7ce23a8 'x$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5587e7ce7290 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5587e7ce7250 <col:90> 'int' lvalue Var 0x5587e7ce2618 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5587e7ce72a8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5587e7ce7270 <col:102> 'int' lvalue Var 0x5587e7ce1d78 'x' 'int'
|   |-BinaryOperator 0x5587e7ce7560 <line:793:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5587e7ce7378 <col:3> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5587e7ce7548 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5587e7ce7518 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5587e7ce7438 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5587e7ce73f0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5587e7ce73d8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5587e7ce7398 <col:20> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5587e7ce7420 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5587e7ce7408 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5587e7ce73b8 <col:38> '_Bool' lvalue Var 0x5587e7ce2150 'x$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5587e7ce74d0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5587e7ce7488 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5587e7ce7458 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5587e7ce7500 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5587e7ce74e8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5587e7ce74b0 <col:66> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5587e7ce7848 <line:794:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5587e7ce7580 <col:3> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5587e7ce7830 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5587e7ce7800 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5587e7ce7720 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5587e7ce7640 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5587e7ce75f8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5587e7ce75e0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5587e7ce75a0 <col:20> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5587e7ce7628 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5587e7ce7610 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5587e7ce75c0 <col:38> '_Bool' lvalue Var 0x5587e7ce2150 'x$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5587e7ce7700 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5587e7ce76b8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5587e7ce76a0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5587e7ce7660 <col:56> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5587e7ce76e8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5587e7ce76d0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5587e7ce7680 <col:74> '_Bool' lvalue Var 0x5587e7ce23a8 'x$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5587e7ce77b8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5587e7ce7770 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5587e7ce7740 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5587e7ce77e8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5587e7ce77d0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5587e7ce7798 <col:102> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5587e7ce7a50 <line:795:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5587e7ce7868 <col:3> '_Bool' lvalue Var 0x5587e7ce2150 'x$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5587e7ce7a38 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5587e7ce7a08 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5587e7ce7928 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5587e7ce78e0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5587e7ce78c8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5587e7ce7888 <col:20> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5587e7ce7910 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5587e7ce78f8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5587e7ce78a8 <col:38> '_Bool' lvalue Var 0x5587e7ce2150 'x$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5587e7ce79c0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5587e7ce7978 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5587e7ce7948 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5587e7ce79f0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5587e7ce79d8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5587e7ce79a0 <col:66> '_Bool' lvalue Var 0x5587e7ce2150 'x$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5587e7ce7d38 <line:796:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5587e7ce7a70 <col:3> '_Bool' lvalue Var 0x5587e7ce23a8 'x$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5587e7ce7d20 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5587e7ce7cf0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5587e7ce7c10 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5587e7ce7b30 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5587e7ce7ae8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5587e7ce7ad0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5587e7ce7a90 <col:20> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5587e7ce7b18 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5587e7ce7b00 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5587e7ce7ab0 <col:38> '_Bool' lvalue Var 0x5587e7ce2150 'x$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5587e7ce7bf0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5587e7ce7ba8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5587e7ce7b90 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5587e7ce7b50 <col:56> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5587e7ce7bd8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5587e7ce7bc0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5587e7ce7b70 <col:74> '_Bool' lvalue Var 0x5587e7ce23a8 'x$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5587e7ce7ca8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5587e7ce7c60 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5587e7ce7c30 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5587e7ce7cd8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5587e7ce7cc0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5587e7ce7c88 <col:102> '_Bool' lvalue Var 0x5587e7ce23a8 'x$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x5587e7ce7d90 <line:797:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce7d78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce7d58 <col:3> 'void ()' Function 0x5587e7c88410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5587e7ce7de8 <line:798:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce7dd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce7db0 <col:3> 'void ()' Function 0x5587e7c88350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5587e7ce7ea0 <line:799:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5587e7ce7e08 <col:3> 'int' lvalue Var 0x5587e7ce16e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5587e7ce7e80 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5587e7ce7e68 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5587e7ce7e28 <col:22> 'int' lvalue Var 0x5587e7ce16e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5587e7ce7e48 <col:41> 'int' 1
|   |-CallExpr 0x5587e7ce7ef8 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5587e7ce7ee0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5587e7ce7ec0 <col:3> 'void ()' Function 0x5587e7c88410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5587e7ce7f70 <line:801:3, col:36>
|     `-CallExpr 0x5587e7ce7f50 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5587e7ce7f38 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5587e7ce7f18 <col:10> 'void *(void)' Function 0x5587e7c87e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5587e7ce80a0 prev 0x5587e7ce1430 <line:803:1, line:805:1> line:803:6 fence 'void ()'
| `-CompoundStmt 0x5587e7ce8140 <line:804:1, line:805:1>
|-FunctionDecl 0x5587e7ce8170 prev 0x5587e7ce14f0 <line:806:1, line:808:1> line:806:6 isync 'void ()'
| `-CompoundStmt 0x5587e7ce8210 <line:807:1, line:808:1>
|-FunctionDecl 0x5587e7ce8240 prev 0x5587e7ce15b0 <line:809:1, line:811:1> line:809:6 lwfence 'void ()'
| `-CompoundStmt 0x5587e7ce82e0 <line:810:1, line:811:1>
`-FunctionDecl 0x5587e7ce8348 <line:812:1, line:851:1> line:812:5 main 'int ()'
  `-CompoundStmt 0x5587e7ceccc0 <line:813:1, line:851:1>
    |-DeclStmt 0x5587e7ce8460 <line:814:3, col:17>
    | `-VarDecl 0x5587e7ce83f8 <col:3, col:13> col:13 used t743 'pthread_t':'unsigned long'
    |-CallExpr 0x5587e7ce8668 <line:815:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5587e7ce8650 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5587e7ce8478 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5587e7cc88f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5587e7ce84b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5587e7ce8498 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5587e7ce83f8 't743' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5587e7ce86a8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5587e7ce8530 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5587e7ce8508 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5587e7ce84d0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5587e7ce86c0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5587e7ce8550 <col:38> 'void *(void *)' Function 0x5587e7ce2ad8 'P0' 'void *(void *)'
    | `-ParenExpr 0x5587e7ce85d0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5587e7ce85a8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5587e7ce8570 <col:51> 'int' 0
    |-DeclStmt 0x5587e7ce8750 <line:816:3, col:17>
    | `-VarDecl 0x5587e7ce86e8 <col:3, col:13> col:13 used t744 'pthread_t':'unsigned long'
    |-CallExpr 0x5587e7ce88f8 <line:817:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5587e7ce88e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5587e7ce8768 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5587e7cc88f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5587e7ce87a8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5587e7ce8788 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5587e7ce86e8 't744' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5587e7ce8938 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5587e7ce8820 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5587e7ce87f8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5587e7ce87c0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5587e7ce8950 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5587e7ce8840 <col:38> 'void *(void *)' Function 0x5587e7ce3eb0 'P1' 'void *(void *)'
    | `-ParenExpr 0x5587e7ce88c0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5587e7ce8898 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5587e7ce8860 <col:51> 'int' 0
    |-DeclStmt 0x5587e7ce89e0 <line:818:3, col:17>
    | `-VarDecl 0x5587e7ce8978 <col:3, col:13> col:13 used t745 'pthread_t':'unsigned long'
    |-CallExpr 0x5587e7ce8b88 <line:819:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5587e7ce8b70 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5587e7ce89f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5587e7cc88f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5587e7ce8a38 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5587e7ce8a18 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5587e7ce8978 't745' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5587e7ce8bc8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5587e7ce8ab0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5587e7ce8a88 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5587e7ce8a50 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5587e7ce8be0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5587e7ce8ad0 <col:38> 'void *(void *)' Function 0x5587e7ce58b8 'P2' 'void *(void *)'
    | `-ParenExpr 0x5587e7ce8b50 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5587e7ce8b28 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5587e7ce8af0 <col:51> 'int' 0
    |-DeclStmt 0x5587e7ce8c70 <line:820:3, col:17>
    | `-VarDecl 0x5587e7ce8c08 <col:3, col:13> col:13 used t746 'pthread_t':'unsigned long'
    |-CallExpr 0x5587e7ce8e18 <line:821:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5587e7ce8e00 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5587e7ce8c88 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5587e7cc88f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5587e7ce8cc8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5587e7ce8ca8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5587e7ce8c08 't746' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5587e7ce8e58 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5587e7ce8d40 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5587e7ce8d18 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5587e7ce8ce0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5587e7ce8e70 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5587e7ce8d60 <col:38> 'void *(void *)' Function 0x5587e7ce6c20 'P3' 'void *(void *)'
    | `-ParenExpr 0x5587e7ce8de0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5587e7ce8db8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5587e7ce8d80 <col:51> 'int' 0
    |-CallExpr 0x5587e7ce8ec0 <line:822:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5587e7ce8ea8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5587e7ce8e88 <col:3> 'void ()' Function 0x5587e7c88350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5587e7ce8f90 <line:823:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5587e7ce8ee0 <col:3> '_Bool' lvalue Var 0x5587e7ce1c00 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5587e7ce8f78 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5587e7ce8f58 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5587e7ce8f40 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5587e7ce8f00 <col:21> 'int' lvalue Var 0x5587e7ce16e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5587e7ce8f20 <col:41> 'int' 4
    |-CallExpr 0x5587e7ce8ff8 <line:824:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5587e7ce8fe0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5587e7ce8fb0 <col:3> 'void ()' Function 0x5587e7c88410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5587e7ce9070 <line:825:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5587e7ce9058 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5587e7ce9018 <col:3> 'void (int)' Function 0x5587e7c87ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5587e7ce90b0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5587e7ce9098 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5587e7ce9038 <col:21> '_Bool' lvalue Var 0x5587e7ce1c00 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5587e7ce9100 <line:826:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5587e7ce90e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5587e7ce90c8 <col:3> 'void ()' Function 0x5587e7c88350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5587e7ce93e8 <line:827:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5587e7ce9120 <col:3> 'int' lvalue Var 0x5587e7ce1d78 'x' 'int'
    | `-ConditionalOperator 0x5587e7ce93b8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5587e7ce91e0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5587e7ce9198 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5587e7ce9180 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5587e7ce9140 <col:7> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5587e7ce91c8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5587e7ce91b0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5587e7ce9160 <col:25> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5587e7ce93a0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5587e7ce9200 <col:42> 'int' lvalue Var 0x5587e7ce2520 'x$w_buff0' 'int'
    |   `-ParenExpr 0x5587e7ce9380 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5587e7ce9350 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5587e7ce92c0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5587e7ce9278 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5587e7ce9260 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5587e7ce9220 <col:55> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5587e7ce92a8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5587e7ce9290 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5587e7ce9240 <col:73> '_Bool' lvalue Var 0x5587e7ce21c8 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5587e7ce9320 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5587e7ce92e0 <col:90> 'int' lvalue Var 0x5587e7ce2618 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5587e7ce9338 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5587e7ce9300 <col:102> 'int' lvalue Var 0x5587e7ce1d78 'x' 'int'
    |-BinaryOperator 0x5587e7ce95f0 <line:828:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5587e7ce9408 <col:3> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5587e7ce95d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5587e7ce95a8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5587e7ce94c8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5587e7ce9480 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5587e7ce9468 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5587e7ce9428 <col:20> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5587e7ce94b0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5587e7ce9498 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5587e7ce9448 <col:38> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5587e7ce9560 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5587e7ce9518 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5587e7ce94e8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5587e7ce9590 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5587e7ce9578 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5587e7ce9540 <col:66> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5587e7ce98d8 <line:829:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5587e7ce9610 <col:3> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5587e7ce98c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5587e7ce9890 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5587e7ce97b0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5587e7ce96d0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5587e7ce9688 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5587e7ce9670 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5587e7ce9630 <col:20> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5587e7ce96b8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5587e7ce96a0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5587e7ce9650 <col:38> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5587e7ce9790 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5587e7ce9748 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5587e7ce9730 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5587e7ce96f0 <col:56> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5587e7ce9778 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5587e7ce9760 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5587e7ce9710 <col:74> '_Bool' lvalue Var 0x5587e7ce21c8 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5587e7ce9848 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5587e7ce9800 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5587e7ce97d0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5587e7ce9878 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5587e7ce9860 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5587e7ce9828 <col:102> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5587e7ce9ae0 <line:830:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5587e7ce98f8 <col:3> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5587e7ce9ac8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5587e7ce9a98 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5587e7ce99b8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5587e7ce9970 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5587e7ce9958 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5587e7ce9918 <col:20> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5587e7ce99a0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5587e7ce9988 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5587e7ce9938 <col:38> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5587e7ce9a50 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5587e7ce9a08 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5587e7ce99d8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5587e7ce9a80 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5587e7ce9a68 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5587e7ce9a30 <col:66> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5587e7ce9dc8 <line:831:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5587e7ce9b00 <col:3> '_Bool' lvalue Var 0x5587e7ce21c8 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5587e7ce9db0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5587e7ce9d80 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5587e7ce9ca0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5587e7ce9bc0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5587e7ce9b78 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5587e7ce9b60 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5587e7ce9b20 <col:20> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5587e7ce9ba8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5587e7ce9b90 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5587e7ce9b40 <col:38> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5587e7ce9c80 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5587e7ce9c38 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5587e7ce9c20 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5587e7ce9be0 <col:56> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5587e7ce9c68 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5587e7ce9c50 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5587e7ce9c00 <col:74> '_Bool' lvalue Var 0x5587e7ce21c8 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5587e7ce9d38 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5587e7ce9cf0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5587e7ce9cc0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5587e7ce9d68 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5587e7ce9d50 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5587e7ce9d18 <col:102> '_Bool' lvalue Var 0x5587e7ce21c8 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5587e7ce9e20 <line:832:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5587e7ce9e08 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5587e7ce9de8 <col:3> 'void ()' Function 0x5587e7c88410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5587e7ce9e78 <line:833:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5587e7ce9e60 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5587e7ce9e40 <col:3> 'void ()' Function 0x5587e7c88350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5587e7ce9f28 <line:834:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x5587e7ce9e98 <col:3> '_Bool' lvalue Var 0x5587e7ce2948 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x5587e7ce9f10 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x5587e7ce9ef0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x5587e7ce9ed8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5587e7ce9eb8 <col:19> 'void *(void)' Function 0x5587e7c87e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x5587e7ce9ff0 <line:835:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x5587e7ce9f48 <col:3> '_Bool' lvalue Var 0x5587e7ce29c0 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x5587e7ce9fc0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x5587e7ce9fa0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x5587e7ce9f88 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5587e7ce9f68 <col:19> 'void *(void)' Function 0x5587e7c87e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x5587e7cea068 <line:836:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x5587e7cea010 <col:3> '_Bool' lvalue Var 0x5587e7ce1e10 'x$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x5587e7cea050 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x5587e7cea030 <col:21> '_Bool' lvalue Var 0x5587e7ce29c0 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x5587e7cea0e0 <line:837:3, col:15> 'int' '='
    | |-DeclRefExpr 0x5587e7cea088 <col:3> 'int' lvalue Var 0x5587e7ce1e90 'x$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x5587e7cea0c8 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x5587e7cea0a8 <col:15> 'int' lvalue Var 0x5587e7ce1d78 'x' 'int'
    |-BinaryOperator 0x5587e7cea518 <line:838:3, col:162> 'int' '='
    | |-DeclRefExpr 0x5587e7cea100 <col:3> 'int' lvalue Var 0x5587e7ce1d78 'x' 'int'
    | `-ConditionalOperator 0x5587e7cea4e8 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x5587e7cea310 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x5587e7cea230 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x5587e7cea158 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x5587e7cea140 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x5587e7cea120 <col:8> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x5587e7cea210 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x5587e7cea1a8 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x5587e7cea190 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x5587e7cea170 <col:27> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x5587e7cea1f8 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x5587e7cea1e0 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x5587e7cea1c0 <col:46> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x5587e7cea2f0 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x5587e7cea288 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x5587e7cea270 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x5587e7cea250 <col:65> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x5587e7cea2d8 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x5587e7cea2c0 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x5587e7cea2a0 <col:84> '_Bool' lvalue Var 0x5587e7ce21c8 'x$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5587e7cea4d0 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5587e7cea330 <col:101> 'int' lvalue Var 0x5587e7ce1d78 'x' 'int'
    |   `-ParenExpr 0x5587e7cea4b0 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x5587e7cea480 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x5587e7cea3f0 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5587e7cea3a8 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5587e7cea390 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5587e7cea350 <col:106> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5587e7cea3d8 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5587e7cea3c0 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5587e7cea370 <col:124> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5587e7cea450 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5587e7cea410 <col:141> 'int' lvalue Var 0x5587e7ce2520 'x$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x5587e7cea468 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5587e7cea430 <col:153> 'int' lvalue Var 0x5587e7ce2618 'x$w_buff1' 'int'
    |-BinaryOperator 0x5587e7ceaa28 <line:839:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5587e7cea538 <col:3> 'int' lvalue Var 0x5587e7ce2520 'x$w_buff0' 'int'
    | `-ConditionalOperator 0x5587e7cea9f8 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5587e7cea9c8 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5587e7cea9b0 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5587e7cea558 <col:15> '_Bool' lvalue Var 0x5587e7ce29c0 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5587e7cea9e0 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5587e7cea578 <col:31> 'int' lvalue Var 0x5587e7ce2520 'x$w_buff0' 'int'
    |   `-ParenExpr 0x5587e7cea990 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5587e7cea960 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5587e7cea788 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5587e7cea6a8 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5587e7cea5d0 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5587e7cea5b8 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5587e7cea598 <col:45> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5587e7cea688 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5587e7cea620 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5587e7cea608 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5587e7cea5e8 <col:64> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5587e7cea670 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5587e7cea658 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5587e7cea638 <col:83> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5587e7cea768 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5587e7cea700 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5587e7cea6e8 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5587e7cea6c8 <col:102> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5587e7cea750 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5587e7cea738 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5587e7cea718 <col:121> '_Bool' lvalue Var 0x5587e7ce21c8 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5587e7cea948 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5587e7cea7a8 <col:138> 'int' lvalue Var 0x5587e7ce2520 'x$w_buff0' 'int'
    |       `-ParenExpr 0x5587e7cea928 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5587e7cea8f8 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5587e7cea868 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5587e7cea820 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5587e7cea808 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5587e7cea7c8 <col:151> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5587e7cea850 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5587e7cea838 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5587e7cea7e8 <col:169> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5587e7cea8c8 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5587e7cea888 <col:186> 'int' lvalue Var 0x5587e7ce2520 'x$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x5587e7cea8e0 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5587e7cea8a8 <col:198> 'int' lvalue Var 0x5587e7ce2520 'x$w_buff0' 'int'
    |-BinaryOperator 0x5587e7ceaf38 <line:840:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5587e7ceaa48 <col:3> 'int' lvalue Var 0x5587e7ce2618 'x$w_buff1' 'int'
    | `-ConditionalOperator 0x5587e7ceaf08 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5587e7ceaed8 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5587e7ceaec0 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5587e7ceaa68 <col:15> '_Bool' lvalue Var 0x5587e7ce29c0 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5587e7ceaef0 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5587e7ceaa88 <col:31> 'int' lvalue Var 0x5587e7ce2618 'x$w_buff1' 'int'
    |   `-ParenExpr 0x5587e7ceaea0 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5587e7ceae70 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5587e7ceac98 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5587e7ceabb8 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5587e7ceaae0 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5587e7ceaac8 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5587e7ceaaa8 <col:45> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5587e7ceab98 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5587e7ceab30 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5587e7ceab18 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5587e7ceaaf8 <col:64> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5587e7ceab80 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5587e7ceab68 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5587e7ceab48 <col:83> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5587e7ceac78 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5587e7ceac10 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5587e7ceabf8 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5587e7ceabd8 <col:102> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5587e7ceac60 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5587e7ceac48 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5587e7ceac28 <col:121> '_Bool' lvalue Var 0x5587e7ce21c8 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5587e7ceae58 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5587e7ceacb8 <col:138> 'int' lvalue Var 0x5587e7ce2618 'x$w_buff1' 'int'
    |       `-ParenExpr 0x5587e7ceae38 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5587e7ceae08 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5587e7cead78 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5587e7cead30 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5587e7cead18 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5587e7ceacd8 <col:151> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5587e7cead60 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5587e7cead48 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5587e7ceacf8 <col:169> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5587e7ceadd8 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5587e7cead98 <col:186> 'int' lvalue Var 0x5587e7ce2618 'x$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x5587e7ceadf0 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5587e7ceadb8 <col:198> 'int' lvalue Var 0x5587e7ce2618 'x$w_buff1' 'int'
    |-BinaryOperator 0x5587e7ceb4f0 <line:841:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5587e7ceaf58 <col:3> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5587e7ceb4d8 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5587e7ceb4a8 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5587e7ceb460 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5587e7ceb448 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5587e7ceaf78 <col:20> '_Bool' lvalue Var 0x5587e7ce29c0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5587e7ceb490 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5587e7ceb478 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5587e7ceaf98 <col:36> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x5587e7ceb428 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5587e7ceb3f8 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5587e7ceb1b8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5587e7ceb0d8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5587e7ceb000 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5587e7ceafd8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5587e7ceafb8 <col:55> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5587e7ceb0b8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5587e7ceb050 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5587e7ceb038 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5587e7ceb018 <col:74> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5587e7ceb0a0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5587e7ceb088 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5587e7ceb068 <col:93> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5587e7ceb198 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5587e7ceb130 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5587e7ceb118 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5587e7ceb0f8 <col:112> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5587e7ceb180 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5587e7ceb168 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5587e7ceb148 <col:131> '_Bool' lvalue Var 0x5587e7ce21c8 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5587e7ceb3e0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5587e7ceb3c8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5587e7ceb1d8 <col:148> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x5587e7ceb3a8 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5587e7ceb378 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5587e7ceb298 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5587e7ceb250 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5587e7ceb238 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5587e7ceb1f8 <col:166> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5587e7ceb280 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5587e7ceb268 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5587e7ceb218 <col:184> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5587e7ceb330 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5587e7ceb2e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5587e7ceb2b8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5587e7ceb360 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5587e7ceb348 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5587e7ceb310 <col:212> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5587e7cebab8 <line:842:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5587e7ceb510 <col:3> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5587e7cebaa0 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5587e7ceba70 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5587e7ceba28 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5587e7ceba10 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5587e7ceb530 <col:20> '_Bool' lvalue Var 0x5587e7ce29c0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5587e7ceba58 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5587e7ceba40 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5587e7ceb550 <col:36> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x5587e7ceb9f0 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5587e7ceb9c0 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5587e7ceb760 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5587e7ceb680 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5587e7ceb5a8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5587e7ceb590 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5587e7ceb570 <col:55> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5587e7ceb660 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5587e7ceb5f8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5587e7ceb5e0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5587e7ceb5c0 <col:74> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5587e7ceb648 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5587e7ceb630 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5587e7ceb610 <col:93> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5587e7ceb740 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5587e7ceb6d8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5587e7ceb6c0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5587e7ceb6a0 <col:112> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5587e7ceb728 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5587e7ceb710 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5587e7ceb6f0 <col:131> '_Bool' lvalue Var 0x5587e7ce21c8 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5587e7ceb9a8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5587e7ceb990 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5587e7ceb780 <col:148> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x5587e7ceb970 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5587e7ceb940 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5587e7ceb840 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5587e7ceb7f8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5587e7ceb7e0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5587e7ceb7a0 <col:166> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5587e7ceb828 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5587e7ceb810 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5587e7ceb7c0 <col:184> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5587e7ceb910 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5587e7ceb890 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5587e7ceb860 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5587e7ceb928 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5587e7ceb8e8 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5587e7ceb8b8 <col:219> 'int' 0
    |-BinaryOperator 0x5587e7cec070 <line:843:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5587e7cebad8 <col:3> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5587e7cec058 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5587e7cec028 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5587e7cebfd0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5587e7cebfb8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5587e7cebaf8 <col:20> '_Bool' lvalue Var 0x5587e7ce29c0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5587e7cec010 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5587e7cebfe8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5587e7cebb18 <col:36> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x5587e7cebf98 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5587e7cebf68 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5587e7cebd28 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5587e7cebc48 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5587e7cebb70 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5587e7cebb58 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5587e7cebb38 <col:55> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5587e7cebc28 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5587e7cebbc0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5587e7cebba8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5587e7cebb88 <col:74> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5587e7cebc10 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5587e7cebbf8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5587e7cebbd8 <col:93> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5587e7cebd08 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5587e7cebca0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5587e7cebc88 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5587e7cebc68 <col:112> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5587e7cebcf0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5587e7cebcd8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5587e7cebcb8 <col:131> '_Bool' lvalue Var 0x5587e7ce21c8 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5587e7cebf50 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5587e7cebf38 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5587e7cebd48 <col:148> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x5587e7cebf18 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5587e7cebee8 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5587e7cebe08 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5587e7cebdc0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5587e7cebda8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5587e7cebd68 <col:166> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5587e7cebdf0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5587e7cebdd8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5587e7cebd88 <col:184> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5587e7cebea0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5587e7cebe58 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5587e7cebe28 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5587e7cebed0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5587e7cebeb8 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5587e7cebe80 <col:212> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5587e7cec638 <line:844:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5587e7cec090 <col:3> '_Bool' lvalue Var 0x5587e7ce21c8 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5587e7cec620 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5587e7cec5f0 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5587e7cec5a8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5587e7cec590 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5587e7cec0b0 <col:20> '_Bool' lvalue Var 0x5587e7ce29c0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5587e7cec5d8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5587e7cec5c0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5587e7cec0d0 <col:36> '_Bool' lvalue Var 0x5587e7ce21c8 'x$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x5587e7cec570 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5587e7cec540 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5587e7cec2e0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5587e7cec200 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5587e7cec128 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5587e7cec110 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5587e7cec0f0 <col:55> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5587e7cec1e0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5587e7cec178 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5587e7cec160 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5587e7cec140 <col:74> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5587e7cec1c8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5587e7cec1b0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5587e7cec190 <col:93> '_Bool' lvalue Var 0x5587e7ce2690 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5587e7cec2c0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5587e7cec258 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5587e7cec240 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5587e7cec220 <col:112> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5587e7cec2a8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5587e7cec290 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5587e7cec270 <col:131> '_Bool' lvalue Var 0x5587e7ce21c8 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5587e7cec528 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5587e7cec510 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5587e7cec300 <col:148> '_Bool' lvalue Var 0x5587e7ce21c8 'x$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x5587e7cec4f0 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5587e7cec4c0 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5587e7cec3c0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5587e7cec378 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5587e7cec360 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5587e7cec320 <col:166> '_Bool' lvalue Var 0x5587e7ce2598 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5587e7cec3a8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5587e7cec390 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5587e7cec340 <col:184> '_Bool' lvalue Var 0x5587e7ce1f70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5587e7cec490 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5587e7cec410 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5587e7cec3e0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5587e7cec4a8 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5587e7cec468 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5587e7cec438 <col:219> 'int' 0
    |-BinaryOperator 0x5587e7cec9a0 <line:845:3, col:123> '_Bool' '='
    | |-DeclRefExpr 0x5587e7cec658 <col:3> '_Bool' lvalue Var 0x5587e7ce1c78 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5587e7cec988 <col:21, col:123> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5587e7cec970 <col:21, col:123> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5587e7cec950 <col:22, col:123> 'int'
    |       `-BinaryOperator 0x5587e7cec930 <col:23, col:122> 'int' '&&'
    |         |-BinaryOperator 0x5587e7cec898 <col:23, col:94> 'int' '&&'
    |         | |-BinaryOperator 0x5587e7cec800 <col:23, col:66> 'int' '&&'
    |         | | |-BinaryOperator 0x5587e7cec768 <col:23, col:38> 'int' '&&'
    |         | | | |-BinaryOperator 0x5587e7cec6d0 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x5587e7cec6b8 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x5587e7cec678 <col:23> 'int' lvalue Var 0x5587e7ce1d78 'x' 'int'
    |         | | | | `-IntegerLiteral 0x5587e7cec698 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x5587e7cec748 <col:33, col:38> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x5587e7cec730 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x5587e7cec6f0 <col:33> 'int' lvalue Var 0x5587e7ce28b0 'z' 'int'
    |         | | |   `-IntegerLiteral 0x5587e7cec710 <col:38> 'int' 2
    |         | | `-BinaryOperator 0x5587e7cec7e0 <col:43, col:66> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5587e7cec7c8 <col:43> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5587e7cec788 <col:43> 'int' lvalue Var 0x5587e7ce1808 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x5587e7cec7a8 <col:66> 'int' 0
    |         | `-BinaryOperator 0x5587e7cec878 <col:71, col:94> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5587e7cec860 <col:71> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5587e7cec820 <col:71> 'int' lvalue Var 0x5587e7ce1928 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x5587e7cec840 <col:94> 'int' 2
    |         `-BinaryOperator 0x5587e7cec910 <col:99, col:122> 'int' '=='
    |           |-ImplicitCastExpr 0x5587e7cec8f8 <col:99> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5587e7cec8b8 <col:99> 'int' lvalue Var 0x5587e7ce1a48 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x5587e7cec8d8 <col:122> 'int' 0
    |-BinaryOperator 0x5587e7cecad0 <line:846:3, col:37> 'int' '='
    | |-DeclRefExpr 0x5587e7cec9c0 <col:3> 'int' lvalue Var 0x5587e7ce1d78 'x' 'int'
    | `-ConditionalOperator 0x5587e7cecaa0 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x5587e7ceca58 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5587e7ceca40 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5587e7cec9e0 <col:7> '_Bool' lvalue Var 0x5587e7ce1e10 'x$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x5587e7ceca70 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5587e7ceca00 <col:25> 'int' lvalue Var 0x5587e7ce1e90 'x$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x5587e7ceca88 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x5587e7ceca20 <col:37> 'int' lvalue Var 0x5587e7ce1d78 'x' 'int'
    |-BinaryOperator 0x5587e7cecb68 <line:847:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x5587e7cecaf0 <col:3> '_Bool' lvalue Var 0x5587e7ce1e10 'x$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x5587e7cecb40 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x5587e7cecb10 <col:28> 'int' 0
    |-CallExpr 0x5587e7cecbc0 <line:848:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5587e7cecba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5587e7cecb88 <col:3> 'void ()' Function 0x5587e7c88410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5587e7cecc38 <line:849:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5587e7cecc20 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5587e7cecbe0 <col:3> 'void (int)' Function 0x5587e7c880d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5587e7cecc78 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5587e7cecc60 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5587e7cecc00 <col:21> '_Bool' lvalue Var 0x5587e7ce1c78 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5587e7ceccb0 <line:850:3, col:10>
      `-IntegerLiteral 0x5587e7cecc90 <col:10> 'int' 0
