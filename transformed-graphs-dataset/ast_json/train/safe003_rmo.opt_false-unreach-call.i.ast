TranslationUnitDecl 0x556757267f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x556757268848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x556757268520 '__int128'
|-TypedefDecl 0x5567572688b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x556757268540 'unsigned __int128'
|-TypedefDecl 0x556757268bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x556757268990 'struct __NSConstantString_tag'
|   `-Record 0x556757268910 '__NSConstantString_tag'
|-TypedefDecl 0x556757268c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x556757268c20 'char *'
|   `-BuiltinType 0x556757268020 'char'
|-TypedefDecl 0x5567572a7b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x556757268f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x556757268d40 'struct __va_list_tag'
|     `-Record 0x556757268cc0 '__va_list_tag'
|-FunctionDecl 0x5567572a7ca0 <pthread-wmm/safe003_rmo.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5567572a7bd0 <col:31> col:34 'int'
|-FunctionDecl 0x5567572a7e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5567572a7f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5567572a80d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5567572a8048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5567572a8308 <col:40, col:99>
|   |-IfStmt 0x5567572a82d8 <col:42, col:88>
|   | |-UnaryOperator 0x5567572a81b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5567572a81a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5567572a8180 <col:47> 'int' lvalue ParmVar 0x5567572a8048 'expression' 'int'
|   | `-CompoundStmt 0x5567572a82c0 <col:59, col:88>
|   |   `-LabelStmt 0x5567572a82a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5567572a8238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5567572a8220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5567572a81d0 <col:68> 'void () __attribute__((noreturn))' Function 0x5567572a7f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5567572a82f0 <col:89>
|   `-ReturnStmt 0x5567572a82f8 <col:91>
|-FunctionDecl 0x5567572a8350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5567572a8410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5567572a8790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5567572a84c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5567572a8548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5567572a85c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5567572a8648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5567572a8850 <line:10:22>
|-FunctionDecl 0x5567572ce8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5567572a88c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5567572a8940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5567572a89c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5567572a8a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5567572ce960 <line:13:22>
|-FunctionDecl 0x5567572cec10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5567572ce9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5567572cea50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5567572cead0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5567572cecc8 <line:15:22>
|-TypedefDecl 0x5567572ced38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5567572680e0 'unsigned char'
|-TypedefDecl 0x5567572ceda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x556757268100 'unsigned short'
|-TypedefDecl 0x5567572cee18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x556757268120 'unsigned int'
|-TypedefDecl 0x5567572cee88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x556757268140 'unsigned long'
|-TypedefDecl 0x5567572ceef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x556757268040 'signed char'
|-TypedefDecl 0x5567572cef68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5567572680e0 'unsigned char'
|-TypedefDecl 0x5567572cefd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x556757268060 'short'
|-TypedefDecl 0x5567572cf048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x556757268100 'unsigned short'
|-TypedefDecl 0x5567572cf0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x556757268080 'int'
|-TypedefDecl 0x5567572cf128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x556757268120 'unsigned int'
|-TypedefDecl 0x5567572cf198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5567572680a0 'long'
|-TypedefDecl 0x5567572cf208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x556757268140 'unsigned long'
|-TypedefDecl 0x5567572cf278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5567572680a0 'long'
|-TypedefDecl 0x5567572cf2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x556757268140 'unsigned long'
|-TypedefDecl 0x5567572cf358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x556757268140 'unsigned long'
|-TypedefDecl 0x5567572cf3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x556757268120 'unsigned int'
|-TypedefDecl 0x5567572cf438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x556757268120 'unsigned int'
|-TypedefDecl 0x5567572cf4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x556757268140 'unsigned long'
|-TypedefDecl 0x5567572cf518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x556757268140 'unsigned long'
|-TypedefDecl 0x5567572cf588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x556757268120 'unsigned int'
|-TypedefDecl 0x5567572cf5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x556757268140 'unsigned long'
|-TypedefDecl 0x5567572cf668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5567572680a0 'long'
|-TypedefDecl 0x5567572cf6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5567572680a0 'long'
|-TypedefDecl 0x5567572cf748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x556757268080 'int'
|-RecordDecl 0x5567572cf7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5567572cf918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5567572cf9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5567572cf970 'struct __fsid_t' sugar
|   `-RecordType 0x5567572cf820 '__fsid_t'
|     `-Record 0x5567572cf7a0 ''
|-TypedefDecl 0x5567572cfa58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5567572680a0 'long'
|-TypedefDecl 0x5567572cfac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x556757268140 'unsigned long'
|-TypedefDecl 0x5567572cfb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x556757268140 'unsigned long'
|-TypedefDecl 0x5567572cfba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x556757268120 'unsigned int'
|-TypedefDecl 0x5567572cfc18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5567572680a0 'long'
|-TypedefDecl 0x5567572cfc88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x556757268120 'unsigned int'
|-TypedefDecl 0x5567572cfcf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5567572680a0 'long'
|-TypedefDecl 0x5567572cfd68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x556757268080 'int'
|-TypedefDecl 0x5567572cfdd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x556757268080 'int'
|-TypedefDecl 0x5567572cfe48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x556757268080 'int'
|-TypedefDecl 0x5567572cfeb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5567572687a0 'void *'
|   `-BuiltinType 0x556757267fe0 'void'
|-TypedefDecl 0x5567572cff28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5567572680a0 'long'
|-TypedefDecl 0x5567572cff98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5567572680a0 'long'
|-TypedefDecl 0x5567572d0008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5567572680a0 'long'
|-TypedefDecl 0x5567572d0078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x556757268140 'unsigned long'
|-TypedefDecl 0x5567572d00e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x556757268140 'unsigned long'
|-TypedefDecl 0x5567572d0158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x556757268140 'unsigned long'
|-TypedefDecl 0x5567572d01c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x556757268140 'unsigned long'
|-TypedefDecl 0x5567572d0238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5567572680a0 'long'
|-TypedefDecl 0x5567572d02a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5567572680a0 'long'
|-TypedefDecl 0x5567572d0318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5567572680a0 'long'
|-TypedefDecl 0x5567572d0388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x556757268140 'unsigned long'
|-TypedefDecl 0x5567572d0418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5567572d03e0 '__off64_t' sugar
|   |-Typedef 0x5567572cf6d8 '__off64_t'
|   `-BuiltinType 0x5567572680a0 'long'
|-TypedefDecl 0x5567572d0510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5567572d04d0 '__quad_t *'
|   `-TypedefType 0x5567572d0470 '__quad_t' sugar
|     |-Typedef 0x5567572cf278 '__quad_t'
|     `-BuiltinType 0x5567572680a0 'long'
|-TypedefDecl 0x5567572d0580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x556757268c20 'char *'
|   `-BuiltinType 0x556757268020 'char'
|-TypedefDecl 0x5567572d05f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5567572680a0 'long'
|-TypedefDecl 0x5567572d0660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x556757268120 'unsigned int'
|-FunctionDecl 0x5567572d07a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5567572d06d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5567572d0ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5567572d0ad8 <line:72:3, col:34>
|     `-CallExpr 0x5567572d0a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5567572d0a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5567572d0a10 <col:10> '<builtin fn type>' Function 0x5567572d0880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5567572d0ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5567572d0a30 <col:29> 'unsigned int' lvalue ParmVar 0x5567572d06d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5567572d0880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5567572d0920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5567572d0990 <col:10> Implicit
| `-ConstAttr 0x5567572d09e8 <col:10> Implicit
|-FunctionDecl 0x5567572d0c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5567572d0b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5567572d0f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5567572d0f48 <line:77:3, col:34>
|     `-CallExpr 0x5567572d0f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5567572d0ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5567572d0e78 <col:10> '<builtin fn type>' Function 0x5567572d0ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5567572d0f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5567572d0e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5567572d0b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5567572d0ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5567572d0d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5567572d0df8 <col:10> Implicit
| `-ConstAttr 0x5567572d0e50 <col:10> Implicit
|-TypedefDecl 0x5567572d0f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x556757268140 'unsigned long'
|-TypedefDecl 0x5567572d1018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5567572d0fe0 '__time_t' sugar
|   |-Typedef 0x5567572cfc18 '__time_t'
|   `-BuiltinType 0x5567572680a0 'long'
|-RecordDecl 0x5567572d1070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5567572d1128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5567572d11b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5567572d1248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5567572d1210 '__pid_t' sugar
|   |-Typedef 0x5567572cf748 '__pid_t'
|   `-BuiltinType 0x556757268080 'int'
|-RecordDecl 0x5567572d12a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5567572d1360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5567572d13b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5567572d1470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5567572d14d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x556757268140 'unsigned long'
|-RecordDecl 0x5567572d1530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5567572d17c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5567572d38b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5567572d1810 'struct cpu_set_t' sugar
|   `-RecordType 0x5567572d15b0 'cpu_set_t'
|     `-Record 0x5567572d1530 ''
|-FunctionDecl 0x5567572d3b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5567572d3958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5567572d3a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5567572d3c38 <line:107:19>
|-FunctionDecl 0x5567572d3e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5567572d3ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5567572d3eb8 <col:69>
|-FunctionDecl 0x5567572d4030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5567572d3f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5567572d40d8 <col:64>
|-FunctionDecl 0x5567572d4398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5567572d4140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5567572d4278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5567572d4448 <line:113:22>
|-FunctionDecl 0x5567572d46c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5567572d44b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5567572d45a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5567572d4778 <col:88>
|-FunctionDecl 0x5567572d4a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5567572d47e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5567572d48c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5567572d4950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5567572d4b50 <col:62>
|-FunctionDecl 0x5567572d4cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5567572d4bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5567572d4d70 <col:63>
|-FunctionDecl 0x5567572d4e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5567572d4f38 <col:47>
|-FunctionDecl 0x5567572d5040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5567572d4fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5567572d50e8 <col:69>
|-FunctionDecl 0x5567572d51f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5567572d5158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5567572d5298 <col:69>
|-FunctionDecl 0x5567572d5558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5567572d5300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5567572d5438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5567572d5608 <col:88>
|-TypedefDecl 0x5567572d5698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5567572d5660 '__clock_t' sugar
|   |-Typedef 0x5567572cfa58 '__clock_t'
|   `-BuiltinType 0x5567572680a0 'long'
|-TypedefDecl 0x5567572d5728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5567572d56f0 '__clockid_t' sugar
|   |-Typedef 0x5567572cfe48 '__clockid_t'
|   `-BuiltinType 0x556757268080 'int'
|-TypedefDecl 0x5567572d57b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5567572d5780 '__timer_t' sugar
|   |-Typedef 0x5567572cfeb8 '__timer_t'
|   `-PointerType 0x5567572687a0 'void *'
|     `-BuiltinType 0x556757267fe0 'void'
|-RecordDecl 0x5567572d5810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5567572d58e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5567572d5950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5567572d59b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5567572d5a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5567572d5a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5567572d5af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5567572d5b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5567572d5bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5567572d5c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5567572d5c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5567572d5cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5567572d5d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5567572d5e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5567572d5e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5567572d5f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5567572d6100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5567572d61a0 <col:45>
|-FunctionDecl 0x5567572d6380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5567572d6270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5567572d6428 <col:54>
|-FunctionDecl 0x5567572d6628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5567572d6490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5567572d6508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5567572d66d8 <line:157:22>
| `-ConstAttr 0x5567572d6730 <col:63>
|-FunctionDecl 0x5567572d7560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5567572d6828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5567572d7608 <col:56>
|-FunctionDecl 0x5567572d79b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5567572d7678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5567572d76f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5567572d7770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5567572d7868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5567572d7a70 <col:54>
|-RecordDecl 0x5567572d7ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5567572d7b78 parent 0x556757267f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5567572d7dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5567572d7e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5567572d7ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5567572d7f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5567572d8038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5567572d8158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5567572d8100 'struct __locale_struct *'
|   `-ElaboratedType 0x5567572d8090 'struct __locale_struct' sugar
|     `-RecordType 0x5567572d7b50 'struct __locale_struct'
|       `-Record 0x5567572d7ac8 '__locale_struct'
|-TypedefDecl 0x5567572d8208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5567572d81d0 '__locale_t' sugar
|   |-Typedef 0x5567572d8158 '__locale_t'
|   `-PointerType 0x5567572d8100 'struct __locale_struct *'
|     `-ElaboratedType 0x5567572d8090 'struct __locale_struct' sugar
|       `-RecordType 0x5567572d7b50 'struct __locale_struct'
|         `-Record 0x5567572d7ac8 '__locale_struct'
|-FunctionDecl 0x5567572d8610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5567572d8278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5567572d82f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5567572d8370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5567572d8400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5567572d8478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5567572d86d8 <col:40>
|-FunctionDecl 0x5567572d88c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5567572d87a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5567572d8970 <col:66>
|-FunctionDecl 0x5567572d8a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5567572d89d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5567572d8b28 <col:69>
|-FunctionDecl 0x5567572d8d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5567572d8b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5567572d8c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5567572d8e08 <col:52>
|-FunctionDecl 0x5567572d8fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5567572d8e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5567572d8f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5567572d9060 <col:55>
|-FunctionDecl 0x5567572d91f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5567572d90e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5567572d92a0 <col:62>
|-FunctionDecl 0x5567572d9418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5567572d9308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5567572d94c0 <col:60>
|-FunctionDecl 0x5567572d9718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5567572d9578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5567572d95f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5567572d97c8 <col:44>
|-FunctionDecl 0x5567572d99d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5567572d9830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5567572d98b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5567572d9a88 <col:49>
|-VarDecl 0x5567572d9b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5567572d9c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5567572d9c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5567572d9d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5567572d9e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5567572d9f20 <col:42>
|-VarDecl 0x5567572d9f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5567572da010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5567572da198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5567572da088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5567572da240 <col:57>
|-FunctionDecl 0x5567572da350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5567572da2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5567572da3f8 <col:56>
|-FunctionDecl 0x5567572db540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5567572da478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5567572db5e8 <col:59>
|-FunctionDecl 0x5567572db6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5567572db658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5567572db798 <col:48>
| `-ConstAttr 0x5567572db7f0 <col:89>
|-FunctionDecl 0x5567572dba58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5567572db8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5567572db938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5567572dbcb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5567572dbb48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5567572dbbd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5567572dbd68 <col:88>
|-FunctionDecl 0x5567572dbf00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5567572dbdd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5567572dbe60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5567572dbfb0 <col:88>
|-FunctionDecl 0x5567572dc1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5567572dc018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5567572dc0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5567572dc278 <line:208:22>
|-FunctionDecl 0x5567572dc5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5567572dc2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5567572dc360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5567572dc3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5567572dc480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5567572dc8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5567572dc6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5567572dc7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5567572dc998 <col:85>
|-FunctionDecl 0x5567572dcd88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5567572dca00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5567572dcb38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5567572dcc40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5567572dce40 <col:52>
|-FunctionDecl 0x5567572dcfb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5567572dcea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5567572dd060 <col:61>
|-FunctionDecl 0x5567572dd560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5567572dd0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5567572dd148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5567572dd278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5567572dd368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5567572dd620 <col:62>
|-FunctionDecl 0x5567572dd838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5567572dd688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5567572dd718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5567572dd8e8 <line:221:22>
|-FunctionDecl 0x5567572dd9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5567572dd950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5567572dda90 <col:65>
|-TypedefDecl 0x5567572ddb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x556757268140 'unsigned long'
|-RecordDecl 0x5567572ddb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5567572ddca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5567572ddd08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5567572dddb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5567572ddd60 'union pthread_attr_t' sugar
|   `-RecordType 0x5567572ddbe0 'union pthread_attr_t'
|     `-Record 0x5567572ddb58 'pthread_attr_t'
|-RecordDecl 0x5567572dde10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5567572ddf88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5567572de000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5567572de0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5567572de050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5567572dde90 'struct __pthread_internal_list'
|     `-Record 0x5567572dde10 '__pthread_internal_list'
|-RecordDecl 0x5567572de120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5567572de1c8 parent 0x556757267f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5567572de2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5567572de308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5567572de370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5567572de3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5567572de440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5567572de4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5567572e2580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5567572e2630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5567572e2720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5567572e2788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5567572e2910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5567572e28b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5567572de1a0 'pthread_mutex_t'
|     `-Record 0x5567572de120 ''
|-RecordDecl 0x5567572e2980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5567572e2ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5567572e2b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5567572e2be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5567572e2b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5567572e2a00 'pthread_mutexattr_t'
|     `-Record 0x5567572e2980 ''
|-RecordDecl 0x5567572e2c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5567572e2cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5567572e2dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5567572e2e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5567572e2e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5567572e2ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5567572e2f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5567572e2fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5567572e3030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5567572e3098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5567572e3150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe003_rmo.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe003_rmo.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5567572e3240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5567572e32a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5567572e33e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5567572e3380 'union pthread_cond_t' sugar
|   `-RecordType 0x5567572e2cd0 'pthread_cond_t'
|     `-Record 0x5567572e2c50 ''
|-RecordDecl 0x5567572e3450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5567572e3590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5567572e35f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5567572e36b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5567572e3650 'union pthread_condattr_t' sugar
|   `-RecordType 0x5567572e34d0 'pthread_condattr_t'
|     `-Record 0x5567572e3450 ''
|-TypedefDecl 0x5567572e3738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x556757268120 'unsigned int'
|-TypedefDecl 0x5567572e37a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x556757268080 'int'
|-RecordDecl 0x5567572e3800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5567572e38a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5567572e3970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5567572e39d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5567572e3a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5567572e3aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5567572e3b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5567572e3b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5567572e3be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5567572e3c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5567572e3cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5567572e3d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5567572e3d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5567572e3e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe003_rmo.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe003_rmo.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5567572e3ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5567572e3f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5567572e4090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5567572e4030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5567572e3880 'pthread_rwlock_t'
|     `-Record 0x5567572e3800 ''
|-RecordDecl 0x5567572e4100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5567572e4240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5567572e42a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5567572e4360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5567572e4300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5567572e4180 'pthread_rwlockattr_t'
|     `-Record 0x5567572e4100 ''
|-TypedefDecl 0x5567572e43e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x556757268084 'volatile int' volatile
|   `-BuiltinType 0x556757268080 'int'
|-RecordDecl 0x5567572e4440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5567572e65b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5567572e6618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5567572e66d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5567572e6670 'union pthread_barrier_t' sugar
|   `-RecordType 0x5567572e44c0 'pthread_barrier_t'
|     `-Record 0x5567572e4440 ''
|-RecordDecl 0x5567572e6740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5567572e6840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5567572e68a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5567572e6960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5567572e6900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5567572e67c0 'pthread_barrierattr_t'
|     `-Record 0x5567572e6740 ''
|-TypedefDecl 0x5567572e6a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5567572e6a10 'long [8]' 8 
|   `-BuiltinType 0x5567572680a0 'long'
|-EnumDecl 0x5567572e6ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5567572e6b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5567572e6be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5567572e6c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5567572e6d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5567572e6d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5567572e6da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5567572e6df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5567572e6e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5567572e6e68 <col:26> 'int'
| |   `-DeclRefExpr 0x5567572e6e48 <col:26> 'int' EnumConstant 0x5567572e6d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5567572e6f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5567572e6ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x5567572e6ed0 <col:29> 'int' EnumConstant 0x5567572e6d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5567572e6f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5567572e6f78 <col:30> 'int'
| |   `-DeclRefExpr 0x5567572e6f58 <col:30> 'int' EnumConstant 0x5567572e6da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5567572e7018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5567572e7000 <col:27> 'int'
|     `-DeclRefExpr 0x5567572e6fe0 <col:27> 'int' EnumConstant 0x5567572e6e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5567572e7068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5567572e7138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5567572e71c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5567572e71a8 <col:30> 'int'
| |   `-DeclRefExpr 0x5567572e7188 <col:30> 'int' EnumConstant 0x5567572e7138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5567572e7210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5567572e7298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5567572e7280 <col:29> 'int'
|     `-DeclRefExpr 0x5567572e7260 <col:29> 'int' EnumConstant 0x5567572e7210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5567572e72e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5567572e73b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5567572e7408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5567572e7458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5567572e74a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5567572e75c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5567572e7610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5567572e7660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5567572e76e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5567572e76d0 <col:31> 'int'
|     `-DeclRefExpr 0x5567572e76b0 <col:31> 'int' EnumConstant 0x5567572e75c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5567572e7738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5567572e7808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5567572e7858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5567572e78a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5567572e7978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5567572e79c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5567572e7a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5567572e7ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5567572e7b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5567572e7b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5567572e7dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5567572e7e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5567572e7e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5567572e7fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5567572e8008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5567572e80d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5567572e8128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5567572e8178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5567572e8248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5567572e8298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5567572e88f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5567572e8390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5567572e84a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5567572e86e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5567572e8760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5567572e89b8 <col:47>
| |-NonNullAttr 0x5567572e8a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x5567572e8a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5567572e8b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5567572e8aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5567572e8dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5567572e8c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5567572e8ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5567572e8f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5567572e8e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5567572e9040 <col:60>
|-FunctionDecl 0x5567572e9190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5567572e9230 <col:54>
| `-ConstAttr 0x5567572e9288 <col:95>
|-FunctionDecl 0x5567572e9458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5567572e92c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5567572e9338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5567572e9508 <line:394:19>
| `-ConstAttr 0x5567572e9560 <col:60>
|-FunctionDecl 0x5567572e9f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5567572e9e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5567572ea010 <col:71>
| `-NonNullAttr 0x5567572ea068 <col:112, col:126> 1
|-FunctionDecl 0x5567572ea170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5567572ea0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5567572ea218 <line:397:22>
| `-NonNullAttr 0x5567572ea270 <col:63, col:77> 1
|-FunctionDecl 0x5567572ea498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5567572ea2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5567572ea338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5567572ea548 <line:400:22>
| `-NonNullAttr 0x5567572ea5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5567572ea7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5567572ea5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5567572ea668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5567572ea858 <line:403:22>
| `-NonNullAttr 0x5567572ea8b0 <col:63, col:77> 1
|-FunctionDecl 0x5567572eab08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5567572ea8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5567572ea9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5567572eabb8 <line:406:22>
| `-NonNullAttr 0x5567572eac10 <col:63, col:80> 1 2
|-FunctionDecl 0x5567572ebe48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5567572eac58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5567572eacd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5567572ebef8 <line:409:22>
| `-NonNullAttr 0x5567572ebf50 <col:63, col:77> 1
|-FunctionDecl 0x5567572ec188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5567572ebf98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5567572ec028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5567572ec238 <line:412:22>
| `-NonNullAttr 0x5567572ec290 <col:63, col:80> 1 2
|-FunctionDecl 0x5567572ec4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5567572ec2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5567572ec368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5567572ec578 <col:37>
| `-NonNullAttr 0x5567572ec5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x5567572ec7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5567572ec618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5567572ec698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5567572ec868 <line:418:22>
| `-NonNullAttr 0x5567572ec8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5567572eca48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5567572ec908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5567572ec988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5567572ecaf8 <line:420:22>
| `-NonNullAttr 0x5567572ecb50 <col:63, col:77> 1
|-FunctionDecl 0x5567572eccf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5567572ecb98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5567572ecc18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5567572ecda8 <line:423:22>
| `-NonNullAttr 0x5567572ede30 <col:63, col:80> 1 2
|-FunctionDecl 0x5567572edfb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5567572ede78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5567572edef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5567572ee068 <line:426:22>
| `-NonNullAttr 0x5567572ee0c0 <col:63, col:77> 1
|-FunctionDecl 0x5567572ee268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5567572ee108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5567572ee188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5567572ee318 <line:429:22>
| `-NonNullAttr 0x5567572ee370 <col:63, col:80> 1 2
|-FunctionDecl 0x5567572ee4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5567572ee3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5567572ee438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5567572ee5a8 <line:431:22>
| `-NonNullAttr 0x5567572ee600 <col:63, col:77> 1
|-FunctionDecl 0x5567572ee828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5567572ee648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5567572ee6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5567572ee8d8 <line:434:22>
| |-NonNullAttr 0x5567572ee930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5567572ee968 <col:100> "" ""
|-FunctionDecl 0x5567572eeb78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5567572ee9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5567572eea38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5567572eec28 <line:437:22>
| |-NonNullAttr 0x5567572eec80 <col:63, col:77> 1
| `-DeprecatedAttr 0x5567572eecb8 <col:97> "" ""
|-FunctionDecl 0x5567572eeeb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5567572eed08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5567572eed80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5567572eef68 <line:440:22>
| `-NonNullAttr 0x5567572eefc0 <col:63, col:80> 1 2
|-FunctionDecl 0x5567572ef140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5567572ef008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5567572ef080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5567572ef1f0 <line:443:22>
| `-NonNullAttr 0x5567572ef248 <col:63, col:77> 1
|-FunctionDecl 0x5567572ef538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5567572ef298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5567572ef318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5567572ef390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5567572ef5f0 <line:447:22>
| `-NonNullAttr 0x5567572ef648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5567572ef8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5567572ef6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5567572ef720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5567572ef798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5567572ef9b0 <col:43>
| `-NonNullAttr 0x5567572efa08 <col:84, col:98> 1
|-FunctionDecl 0x5567572efcc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5567572efa58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5567572efad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5567572efb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5567572efd80 <line:452:22>
| `-NonNullAttr 0x5567572efdd8 <col:63, col:77> 3
|-FunctionDecl 0x5567572f00e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5567572efe50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5567572efed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5567572eff60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5567572f01a0 <line:456:22>
| `-NonNullAttr 0x5567572f01f8 <col:63, col:80> 2 3
|-FunctionDecl 0x5567572f03e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5567572f0248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5567572f02c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5567572f0498 <line:458:22>
|-FunctionDecl 0x5567572f0868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5567572f0560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5567572f0700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5567572f0918 <col:52, col:69> 1 2
|-FunctionDecl 0x5567572f0ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5567572f09a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5567572f0a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5567572f0ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5567572f0b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5567572f0c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5567572f0e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5567572f0d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5567572f0fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5567572f1040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5567572f10e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5567572f11d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5567572f1240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5567572f1410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe003_rmo.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5567572f1508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5567572f15c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5567572f1560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5567572f10c0 '__pthread_unwind_buf_t'
| |   `-Record 0x5567572f1040 ''
| `-AlignedAttr 0x5567572f1618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5567572f1690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5567572f17f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5567572f1858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5567572f18c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5567572f1928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5567572f1b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5567572f1a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5567572f1c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5567572f1be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5567572f1e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5567572f1d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5567572f1f18 <line:487:22>
|-RecordDecl 0x5567572f1f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5567572f2288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5567572f20e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5567572f2168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5567572f2338 <col:86>
| `-ReturnsTwiceAttr 0x5567572f2390 <col:12> Implicit
|-FunctionDecl 0x5567572f26b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5567572f2460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5567572f2570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5567572f2768 <line:493:22>
| `-NonNullAttr 0x5567572f27c0 <col:63, col:77> 1
|-FunctionDecl 0x5567572f2938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5567572f2808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5567572f29e0 <line:495:22>
| `-NonNullAttr 0x5567572f2a38 <col:63, col:77> 1
|-FunctionDecl 0x5567572f2b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5567572f2a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5567572f2be8 <line:497:22>
| `-NonNullAttr 0x5567572f2c40 <col:52, col:66> 1
|-FunctionDecl 0x5567572f2d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5567572f2c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5567572f2de8 <line:499:22>
| `-NonNullAttr 0x5567572f2e40 <col:52, col:66> 1
|-FunctionDecl 0x5567572f3088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5567572f2e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5567572f2f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5567572f3138 <col:36>
| `-NonNullAttr 0x5567572f3190 <col:66, col:83> 1 2
|-FunctionDecl 0x5567572f3290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5567572f31d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5567572f3338 <line:504:22>
| `-NonNullAttr 0x5567572f3390 <col:52, col:66> 1
|-FunctionDecl 0x5567572f3628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5567572f3440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5567572f34c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5567572f36d8 <line:508:22>
| `-NonNullAttr 0x5567572f3730 <col:63, col:80> 1 2
|-FunctionDecl 0x5567572f39f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5567572f3778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5567572f37f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5567572f3878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5567572f3ab0 <line:512:22>
| `-NonNullAttr 0x5567572f3b08 <col:63, col:80> 1 3
|-FunctionDecl 0x5567572f3c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5567572f3b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5567572f3cb8 <line:514:22>
| `-NonNullAttr 0x5567572f3d10 <col:63, col:77> 1
|-FunctionDecl 0x5567572f3f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5567572f3dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5567572f3fe0 <line:516:22>
| `-NonNullAttr 0x5567572f4038 <col:63, col:77> 1
|-FunctionDecl 0x5567572f4140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5567572f4088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5567572f41e8 <line:518:22>
| `-NonNullAttr 0x5567572f4240 <col:63, col:77> 1
|-FunctionDecl 0x5567572f4468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5567572f4288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5567572f4308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5567572f4518 <line:522:22>
| `-NonNullAttr 0x5567572f4570 <col:63, col:80> 1 2
|-FunctionDecl 0x5567572f4778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5567572f45b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5567572f4638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5567572f4828 <line:525:22>
| `-NonNullAttr 0x5567572f4880 <col:63, col:77> 1
|-FunctionDecl 0x5567572f4a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5567572f48c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5567572f4948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5567572f4ad8 <line:528:22>
| `-NonNullAttr 0x5567572f4b30 <col:63, col:80> 1 2
|-FunctionDecl 0x5567572f4cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5567572f4b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5567572f4bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5567572f4d68 <line:530:22>
| `-NonNullAttr 0x5567572f4dc0 <col:63, col:77> 1
|-FunctionDecl 0x5567572f5f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5567572f4e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5567572f5eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5567572f6040 <line:534:22>
| `-NonNullAttr 0x5567572f6098 <col:63, col:80> 1 2
|-FunctionDecl 0x5567572f6228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5567572f60e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5567572f6168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5567572f62d8 <line:537:22>
| `-NonNullAttr 0x5567572f6330 <col:63, col:77> 1
|-FunctionDecl 0x5567572f64d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5567572f6378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5567572f63f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5567572f6588 <line:541:22>
| `-NonNullAttr 0x5567572f65e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5567572f6768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5567572f6628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5567572f66a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5567572f6818 <line:544:22>
| `-NonNullAttr 0x5567572f6870 <col:63, col:77> 1
|-FunctionDecl 0x5567572f6a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5567572f68b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5567572f6938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5567572f6b08 <line:547:22>
| `-NonNullAttr 0x5567572f6b60 <col:63, col:80> 1 2
|-FunctionDecl 0x5567572f6ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5567572f6ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5567572f6c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5567572f6d98 <line:550:22>
| `-NonNullAttr 0x5567572f6df0 <col:63, col:77> 1
|-FunctionDecl 0x5567572f8168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5567572f7f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5567572f8020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5567572f8218 <col:29>
| `-NonNullAttr 0x5567572f8270 <col:70, col:84> 1
|-FunctionDecl 0x5567572f83e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5567572f82b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5567572f8490 <line:555:22>
| `-NonNullAttr 0x5567572f84e8 <col:63, col:77> 1
|-FunctionDecl 0x5567572f85f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5567572f8538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5567572f8698 <line:557:22>
| `-NonNullAttr 0x5567572f86f0 <col:52, col:66> 1
|-FunctionDecl 0x5567572f87f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5567572f8738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5567572f8898 <line:559:19>
| `-NonNullAttr 0x5567572f88f0 <col:49, col:63> 1
|-FunctionDecl 0x5567572f8b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5567572f8938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5567572f89c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5567572f8bd8 <col:39>
| `-NonNullAttr 0x5567572f8c30 <col:69, col:86> 1 2
|-FunctionDecl 0x5567572f8d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5567572f8c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5567572f8dd8 <line:564:22>
| `-NonNullAttr 0x5567572f8e30 <col:52, col:66> 1
|-FunctionDecl 0x5567572f8f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5567572f8ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5567572f9040 <line:566:22>
| `-NonNullAttr 0x5567572f9098 <col:52, col:66> 1
|-FunctionDecl 0x5567572f9258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5567572f90e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5567572f9178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5567572f9308 <col:39>
| `-NonNullAttr 0x5567572f9360 <col:69, col:86> 1 2
|-FunctionDecl 0x5567572f9460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5567572f93a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5567572f9508 <line:571:22>
| `-NonNullAttr 0x5567572f9560 <col:52, col:66> 1
|-FunctionDecl 0x5567572f9748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5567572f9610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5567572f97f0 <line:573:22>
| `-NonNullAttr 0x5567572f9848 <col:63, col:77> 1
|-FunctionDecl 0x5567572f9950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5567572f9898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5567572f99f8 <line:575:22>
| `-NonNullAttr 0x5567572f9a50 <col:63, col:77> 1
|-FunctionDecl 0x5567572f9c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5567572f9a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5567572f9b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5567572f9d28 <line:579:22>
| `-NonNullAttr 0x5567572f9d80 <col:63, col:80> 1 2
|-FunctionDecl 0x5567572f9fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5567572f9dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5567572f9e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5567572fa058 <line:582:22>
| `-NonNullAttr 0x5567572fa0b0 <col:63, col:77> 1
|-FunctionDecl 0x5567572fa258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5567572fa0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5567572fa178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5567572fa308 <line:586:22>
| `-NonNullAttr 0x5567572fa360 <col:63, col:80> 1 2
|-FunctionDecl 0x5567572fa4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5567572fa3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5567572fa428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5567572fa598 <col:36>
| `-NonNullAttr 0x5567572fa5f0 <col:77, col:91> 1
|-FunctionDecl 0x5567572fa928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5567572fa6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5567572fa7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5567572fa9d8 <line:591:22>
| `-NonNullAttr 0x5567572faa30 <col:63, col:77> 1
|-FunctionDecl 0x5567572faba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5567572faa78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5567572fac50 <line:593:22>
| `-NonNullAttr 0x5567572faca8 <col:63, col:77> 1
|-FunctionDecl 0x5567572fadb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5567572facf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5567572fae58 <line:595:22>
| `-NonNullAttr 0x5567572faeb0 <col:52, col:66> 1
|-FunctionDecl 0x5567572fafc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5567572faf10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5567572fb070 <line:597:22>
| `-NonNullAttr 0x5567572fb0c8 <col:52, col:66> 1
|-FunctionDecl 0x5567572fb2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5567572fb118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5567572fb190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5567572fb3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5567572fb6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5567572fb428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5567572fb4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5567572fb530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5567572fb790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5567572fb9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5567572fb870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5567572fba50 <line:606:22>
| `-NonNullAttr 0x5567572fbaa8 <col:63, col:77> 1
|-FunctionDecl 0x5567572fbbb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5567572fbaf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5567572fbc58 <line:608:22>
| `-NonNullAttr 0x5567572fbcb0 <col:63, col:77> 1
|-FunctionDecl 0x5567572fbf10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5567572fbcf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5567572fbd78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5567572fbfc0 <line:612:22>
| `-NonNullAttr 0x5567572fc018 <col:63, col:80> 1 2
|-FunctionDecl 0x5567572fc228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5567572fc068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5567572fc0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5567572fc2d8 <col:37>
| `-NonNullAttr 0x5567572fc330 <col:78, col:92> 1
|-FunctionDecl 0x5567572fc548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5567572fc378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5567572fc420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5567572fc5f8 <line:618:22>
| `-NonNullAttr 0x5567572fc650 <col:63, col:80> 1 2
|-FunctionDecl 0x5567572fc818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5567572fc698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5567572fc710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5567572fc8c8 <line:621:22>
| `-NonNullAttr 0x5567572fc920 <col:63, col:77> 1
|-FunctionDecl 0x5567572fcbc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5567572fca00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5567572fca80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5567572fcc78 <line:623:22>
| `-NonNullAttr 0x5567572fccd0 <col:63, col:77> 1
|-FunctionDecl 0x5567572fce48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5567572fcd18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5567572fcf20 <line:625:22>
| `-NonNullAttr 0x5567572fcf78 <col:63, col:77> 1
|-FunctionDecl 0x5567572fd080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5567572fcfc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5567572fd128 <line:627:22>
| `-NonNullAttr 0x5567572fd180 <col:52, col:66> 1
|-FunctionDecl 0x5567572fd280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5567572fd1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5567572fd328 <line:629:22>
| `-NonNullAttr 0x5567572fd380 <col:52, col:66> 1
|-FunctionDecl 0x5567572fd480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5567572fd3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5567572fd528 <line:631:22>
| `-NonNullAttr 0x5567572fd580 <col:52, col:66> 1
|-FunctionDecl 0x5567572fd958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5567572fd660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5567572fd770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5567572fd7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5567572fda10 <line:635:22>
| `-NonNullAttr 0x5567572fda68 <col:63, col:77> 1
|-FunctionDecl 0x5567572fdbe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5567572fdab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5567572fdc90 <line:637:22>
| `-NonNullAttr 0x5567572fdce8 <col:63, col:77> 1
|-FunctionDecl 0x5567572fddf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5567572fdd38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5567572fde98 <line:639:22>
| `-NonNullAttr 0x5567572fdef0 <col:52, col:66> 1
|-FunctionDecl 0x5567572fe0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5567572fdfb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5567572fe190 <line:641:22>
| `-NonNullAttr 0x5567572fe1e8 <col:63, col:77> 1
|-FunctionDecl 0x5567572fe2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5567572fe238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5567572fe398 <line:643:22>
| `-NonNullAttr 0x5567572fe3f0 <col:63, col:77> 1
|-FunctionDecl 0x5567572fe618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5567572fe438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5567572fe4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5567572fe6c8 <line:647:22>
| `-NonNullAttr 0x5567572fe720 <col:63, col:80> 1 2
|-FunctionDecl 0x5567572fe928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5567572fe768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5567572fe7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5567572fe9d8 <line:650:22>
| `-NonNullAttr 0x5567572fea30 <col:63, col:77> 1
|-FunctionDecl 0x5567572fed78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5567572feb10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5567572fec30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5567572fee28 <line:653:22>
| `-NonNullAttr 0x5567572fee80 <col:63, col:77> 1
|-FunctionDecl 0x5567572fefe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5567572feec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5567572ff090 <col:69>
|-FunctionDecl 0x5567572ff208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5567572ff0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5567572ff2b0 <col:72>
|-FunctionDecl 0x5567572ff4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5567572ff318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5567572ff3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5567572ff598 <col:44>
|-FunctionDecl 0x5567572ff7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5567572ff600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5567572ff678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5567572ff868 <line:660:22>
| `-NonNullAttr 0x5567572ff8c0 <col:63, col:77> 2
|-FunctionDecl 0x5567572ffd08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5567572ff9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5567572ffab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5567572ffbc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5567572ffdc0 <col:47>
|-FunctionDecl 0x556757300f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5567572ffe30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5567573010b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x556757301020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x556757301210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x556757301178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5567573012d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x556757301398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x556757301458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x556757301510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x556757301590 prev 0x556757301510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5567573015f8 <col:24> 'int' 0
|-VarDecl 0x556757301630 <line:673:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5567573016b0 prev 0x556757301630 <line:674:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x556757301718 <col:27> 'int' 0
|-VarDecl 0x556757301750 <line:675:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5567573017d0 prev 0x556757301750 <line:676:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x556757301838 <col:27> 'int' 0
|-VarDecl 0x556757301870 <line:677:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x5567573018f0 prev 0x556757301870 <line:678:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x556757301958 <col:27> 'int' 0
|-VarDecl 0x556757301988 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x556757301a00 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x556757301a80 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x556757301b00 prev 0x556757301a80 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x556757301b68 <col:9> 'int' 0
|-VarDecl 0x556757301ba0 <line:683:1, col:5> col:5 used y 'int'
|-VarDecl 0x556757301c20 prev 0x556757301ba0 <line:684:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x556757301c88 <col:9> 'int' 0
|-VarDecl 0x556757301cb8 <line:685:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x556757301d38 <line:686:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x556757301db0 <line:687:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x556757301e28 <line:688:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x556757301ea0 <line:689:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x556757301f70 <line:690:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x556757301fe8 <line:691:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x556757302060 <line:692:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x5567573020d8 <line:693:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x556757302150 <line:694:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x5567573021c8 <line:695:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x556757302248 <line:696:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x5567573022c8 <line:697:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x556757302340 <line:698:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x5567573023c0 <line:699:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x556757302438 <line:700:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x5567573024b0 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x556757302528 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x556757302640 prev 0x556757300f60 <line:703:1, line:731:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5567573025a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x556757303e68 <line:704:1, line:731:1>
|   |-CallExpr 0x556757302758 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556757302740 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5567573026e8 <col:3> 'void ()' Function 0x5567572a8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5567573027d0 <line:706:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556757302778 <col:3> 'int' lvalue Var 0x5567573023c0 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5567573027b8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556757302798 <col:15> 'int' lvalue Var 0x5567573022c8 'y$w_buff0' 'int'
|   |-BinaryOperator 0x556757302830 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5567573027f0 <col:3> 'int' lvalue Var 0x5567573022c8 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x556757302810 <col:15> 'int' 2
|   |-BinaryOperator 0x5567573028a8 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556757302850 <col:3> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556757302890 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556757302870 <col:20> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556757302940 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5567573028c8 <col:3> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x556757302918 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5567573028e8 <col:27> 'int' 1
|   |-CallExpr 0x556757302ac8 <line:710:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x556757302ab0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x556757302960 <col:3> 'void (int)' Function 0x5567572a80d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x556757302a60 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x556757302a40 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x556757302a20 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5567573029d8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5567573029c0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x556757302980 <col:23> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x556757302a08 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5567573029f0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5567573029a0 <col:41> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556757302b48 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556757302af0 <col:3> '_Bool' lvalue Var 0x556757301fe8 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x556757302b30 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556757302b10 <col:20> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x556757302bc0 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556757302b68 <col:3> '_Bool' lvalue Var 0x556757302060 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x556757302ba8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556757302b88 <col:20> '_Bool' lvalue Var 0x556757301e28 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x556757302c38 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556757302be0 <col:3> '_Bool' lvalue Var 0x5567573020d8 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556757302c20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556757302c00 <col:20> '_Bool' lvalue Var 0x556757301ea0 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x556757302cb0 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556757302c58 <col:3> '_Bool' lvalue Var 0x556757302150 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556757302c98 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556757302c78 <col:20> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x556757302d48 <line:715:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x556757302cd0 <col:3> '_Bool' lvalue Var 0x556757301e28 'y$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x556757302d20 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556757302cf0 <col:27> 'int' 1
|   |-CallExpr 0x556757302da0 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556757302d88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556757302d68 <col:3> 'void ()' Function 0x5567572a8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556757302df8 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556757302de0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556757302dc0 <col:3> 'void ()' Function 0x5567572a8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556757302e58 <line:718:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x556757302e18 <col:3> 'int' lvalue Var 0x556757301b00 'x' 'int'
|   | `-IntegerLiteral 0x556757302e38 <col:7> 'int' 1
|   |-CallExpr 0x556757302eb0 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556757302e98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556757302e78 <col:3> 'void ()' Function 0x5567572a8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556757302f08 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556757302ef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556757302ed0 <col:3> 'void ()' Function 0x5567572a8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556757303208 <line:721:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x556757302f28 <col:3> 'int' lvalue Var 0x556757301c20 'y' 'int'
|   | `-ConditionalOperator 0x5567573031d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x556757303000 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x556757302fb8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x556757302fa0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x556757302f48 <col:7> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x556757302fe8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x556757302fd0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x556757302f80 <col:25> '_Bool' lvalue Var 0x556757301e28 'y$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5567573031c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556757303020 <col:42> 'int' lvalue Var 0x5567573022c8 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5567573031a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x556757303170 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5567573030e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556757303098 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556757303080 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556757303040 <col:55> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5567573030c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5567573030b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556757303060 <col:73> '_Bool' lvalue Var 0x556757302060 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x556757303140 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556757303100 <col:90> 'int' lvalue Var 0x5567573023c0 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x556757303158 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556757303120 <col:102> 'int' lvalue Var 0x556757301c20 'y' 'int'
|   |-BinaryOperator 0x556757303410 <line:722:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556757303228 <col:3> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5567573033f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5567573033c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5567573032e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5567573032a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556757303288 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556757303248 <col:20> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5567573032d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5567573032b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556757303268 <col:38> '_Bool' lvalue Var 0x556757301e28 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x556757303380 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556757303338 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556757303308 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5567573033b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556757303398 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556757303360 <col:66> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5567573036f8 <line:723:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556757303430 <col:3> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5567573036e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5567573036b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5567573035d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5567573034f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5567573034a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556757303490 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556757303450 <col:20> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5567573034d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5567573034c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556757303470 <col:38> '_Bool' lvalue Var 0x556757301e28 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5567573035b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556757303568 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556757303550 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556757303510 <col:56> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556757303598 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556757303580 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556757303530 <col:74> '_Bool' lvalue Var 0x556757302060 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x556757303668 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556757303620 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5567573035f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556757303698 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556757303680 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556757303648 <col:102> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x556757303900 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556757303718 <col:3> '_Bool' lvalue Var 0x556757301e28 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5567573038e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5567573038b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5567573037d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556757303790 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556757303778 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556757303738 <col:20> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5567573037c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5567573037a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556757303758 <col:38> '_Bool' lvalue Var 0x556757301e28 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x556757303870 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556757303828 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5567573037f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5567573038a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556757303888 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556757303850 <col:66> '_Bool' lvalue Var 0x556757301e28 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x556757303be8 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556757303920 <col:3> '_Bool' lvalue Var 0x556757302060 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x556757303bd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556757303ba0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556757303ac0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5567573039e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556757303998 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556757303980 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556757303940 <col:20> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5567573039c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5567573039b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556757303960 <col:38> '_Bool' lvalue Var 0x556757301e28 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x556757303aa0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556757303a58 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556757303a40 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556757303a00 <col:56> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556757303a88 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556757303a70 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556757303a20 <col:74> '_Bool' lvalue Var 0x556757302060 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x556757303b58 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556757303b10 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556757303ae0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556757303b88 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556757303b70 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556757303b38 <col:102> '_Bool' lvalue Var 0x556757302060 'y$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x556757303c40 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556757303c28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556757303c08 <col:3> 'void ()' Function 0x5567572a8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556757303c98 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556757303c80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556757303c60 <col:3> 'void ()' Function 0x5567572a8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556757303d50 <line:728:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x556757303cb8 <col:3> 'int' lvalue Var 0x556757301590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x556757303d30 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x556757303d18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556757303cd8 <col:22> 'int' lvalue Var 0x556757301590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x556757303cf8 <col:41> 'int' 1
|   |-CallExpr 0x556757303da8 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556757303d90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556757303d70 <col:3> 'void ()' Function 0x5567572a8410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x556757303e58 <line:730:3, col:36>
|     `-CallExpr 0x556757303e38 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x556757303e20 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x556757303dc8 <col:10> 'void *(void)' Function 0x5567572a7e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x556757304028 prev 0x5567573010b8 <line:732:1, line:751:1> line:732:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x556757303f90 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x556757305260 <line:733:1, line:751:1>
|   |-CallExpr 0x556757304108 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5567573040f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5567573040d0 <col:3> 'void ()' Function 0x5567572a8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556757304180 <line:735:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x556757304128 <col:3> 'int' lvalue Var 0x5567573016b0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x556757304168 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556757304148 <col:25> 'int' lvalue Var 0x556757301b00 'x' 'int'
|   |-CallExpr 0x5567573041d8 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5567573041c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5567573041a0 <col:3> 'void ()' Function 0x5567572a8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556757304230 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556757304218 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5567573041f8 <col:3> 'void ()' Function 0x5567572a8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556757304290 <line:738:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x556757304250 <col:3> 'int' lvalue Var 0x556757301c20 'y' 'int'
|   | `-IntegerLiteral 0x556757304270 <col:7> 'int' 1
|   |-CallExpr 0x5567573042e8 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5567573042d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5567573042b0 <col:3> 'void ()' Function 0x5567572a8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556757304340 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556757304328 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556757304308 <col:3> 'void ()' Function 0x5567572a8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556757304628 <line:741:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x556757304360 <col:3> 'int' lvalue Var 0x556757301c20 'y' 'int'
|   | `-ConditionalOperator 0x5567573045f8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x556757304420 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5567573043d8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5567573043c0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x556757304380 <col:7> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x556757304408 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5567573043f0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5567573043a0 <col:25> '_Bool' lvalue Var 0x556757301ea0 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5567573045e0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556757304440 <col:42> 'int' lvalue Var 0x5567573022c8 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5567573045c0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x556757304590 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x556757304500 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5567573044b8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5567573044a0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556757304460 <col:55> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5567573044e8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5567573044d0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556757304480 <col:73> '_Bool' lvalue Var 0x5567573020d8 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x556757304560 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556757304520 <col:90> 'int' lvalue Var 0x5567573023c0 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x556757304578 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556757304540 <col:102> 'int' lvalue Var 0x556757301c20 'y' 'int'
|   |-BinaryOperator 0x556757304830 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556757304648 <col:3> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556757304818 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5567573047e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556757304708 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5567573046c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5567573046a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556757304668 <col:20> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5567573046f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5567573046d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556757304688 <col:38> '_Bool' lvalue Var 0x556757301ea0 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5567573047a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556757304758 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556757304728 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5567573047d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5567573047b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556757304780 <col:66> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556757304b18 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556757304850 <col:3> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556757304b00 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556757304ad0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5567573049f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556757304910 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5567573048c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5567573048b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556757304870 <col:20> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5567573048f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5567573048e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556757304890 <col:38> '_Bool' lvalue Var 0x556757301ea0 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5567573049d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556757304988 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556757304970 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556757304930 <col:56> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5567573049b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5567573049a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556757304950 <col:74> '_Bool' lvalue Var 0x5567573020d8 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556757304a88 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556757304a40 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556757304a10 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556757304ab8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556757304aa0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556757304a68 <col:102> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x556757304d20 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556757304b38 <col:3> '_Bool' lvalue Var 0x556757301ea0 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556757304d08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556757304cd8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556757304bf8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556757304bb0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556757304b98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556757304b58 <col:20> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556757304be0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556757304bc8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556757304b78 <col:38> '_Bool' lvalue Var 0x556757301ea0 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556757304c90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556757304c48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556757304c18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556757304cc0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556757304ca8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556757304c70 <col:66> '_Bool' lvalue Var 0x556757301ea0 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x556757305018 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556757304d40 <col:3> '_Bool' lvalue Var 0x5567573020d8 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556757305000 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556757304fd0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556757304ee0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556757304e00 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556757304db8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556757304da0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556757304d60 <col:20> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556757304de8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556757304dd0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556757304d80 <col:38> '_Bool' lvalue Var 0x556757301ea0 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x556757304ec0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556757304e78 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556757304e60 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556757304e20 <col:56> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556757304ea8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556757304e90 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556757304e40 <col:74> '_Bool' lvalue Var 0x5567573020d8 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556757304f78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556757304f30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556757304f00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556757304fb8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556757304fa0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556757304f58 <col:102> '_Bool' lvalue Var 0x5567573020d8 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x556757305070 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556757305058 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556757305038 <col:3> 'void ()' Function 0x5567572a8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5567573050c8 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5567573050b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556757305090 <col:3> 'void ()' Function 0x5567572a8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556757305180 <line:748:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5567573050e8 <col:3> 'int' lvalue Var 0x556757301590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x556757305160 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x556757305148 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556757305108 <col:22> 'int' lvalue Var 0x556757301590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x556757305128 <col:41> 'int' 1
|   |-CallExpr 0x5567573051d8 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5567573051c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5567573051a0 <col:3> 'void ()' Function 0x5567572a8410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x556757305250 <line:750:3, col:36>
|     `-CallExpr 0x556757305230 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x556757305218 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5567573051f8 <col:10> 'void *(void)' Function 0x5567572a7e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5567573053a8 prev 0x556757301210 <line:752:1, line:797:1> line:752:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x556757305310 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55675730b920 <line:753:1, line:797:1>
|   |-CallExpr 0x556757305488 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556757305470 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556757305450 <col:3> 'void ()' Function 0x5567572a8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556757305538 <line:755:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5567573054a8 <col:3> '_Bool' lvalue Var 0x5567573024b0 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x556757305520 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x556757305500 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5567573054e8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5567573054c8 <col:19> 'void *(void)' Function 0x5567572a7e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5567573055e8 <line:756:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x556757305558 <col:3> '_Bool' lvalue Var 0x556757302528 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5567573055d0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5567573055b0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x556757305598 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x556757305578 <col:19> 'void *(void)' Function 0x5567572a7e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x556757305660 <line:757:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x556757305608 <col:3> '_Bool' lvalue Var 0x556757301cb8 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x556757305648 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556757305628 <col:21> '_Bool' lvalue Var 0x556757302528 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5567573056d8 <line:758:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556757305680 <col:3> 'int' lvalue Var 0x556757301d38 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5567573056c0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5567573056a0 <col:15> 'int' lvalue Var 0x556757301c20 'y' 'int'
|   |-BinaryOperator 0x556757305b10 <line:759:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5567573056f8 <col:3> 'int' lvalue Var 0x556757301c20 'y' 'int'
|   | `-ConditionalOperator 0x556757305ae0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x556757305908 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x556757305828 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x556757305750 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x556757305738 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x556757305718 <col:8> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x556757305808 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5567573057a0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x556757305788 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x556757305768 <col:27> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x5567573057f0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5567573057d8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5567573057b8 <col:46> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5567573058e8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x556757305880 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x556757305868 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x556757305848 <col:65> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x5567573058d0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5567573058b8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x556757305898 <col:84> '_Bool' lvalue Var 0x556757302150 'y$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x556757305ac8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556757305928 <col:101> 'int' lvalue Var 0x556757301c20 'y' 'int'
|   |   `-ParenExpr 0x556757305aa8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x556757305a78 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5567573059e8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5567573059a0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556757305988 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556757305948 <col:106> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5567573059d0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5567573059b8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556757305968 <col:124> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x556757305a48 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556757305a08 <col:141> 'int' lvalue Var 0x5567573022c8 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x556757305a60 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556757305a28 <col:153> 'int' lvalue Var 0x5567573023c0 'y$w_buff1' 'int'
|   |-BinaryOperator 0x556757306048 <line:760:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x556757305b30 <col:3> 'int' lvalue Var 0x5567573022c8 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x556757306018 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x556757305fe8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556757305fd0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556757305b50 <col:15> '_Bool' lvalue Var 0x556757302528 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x556757306000 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556757305b70 <col:31> 'int' lvalue Var 0x5567573022c8 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x556757305fb0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x556757305f58 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x556757305d80 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x556757305ca0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x556757305bc8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x556757305bb0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x556757305b90 <col:45> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x556757305c80 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x556757305c18 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x556757305c00 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x556757305be0 <col:64> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x556757305c68 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x556757305c50 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x556757305c30 <col:83> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x556757305d60 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x556757305cf8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x556757305ce0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x556757305cc0 <col:102> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x556757305d48 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x556757305d30 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x556757305d10 <col:121> '_Bool' lvalue Var 0x556757302150 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x556757305f40 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556757305da0 <col:138> 'int' lvalue Var 0x5567573022c8 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x556757305f20 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x556757305ef0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x556757305e60 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x556757305e18 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x556757305e00 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x556757305dc0 <col:151> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x556757305e48 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x556757305e30 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x556757305de0 <col:169> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x556757305ec0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x556757305e80 <col:186> 'int' lvalue Var 0x5567573022c8 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x556757305ed8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x556757305ea0 <col:198> 'int' lvalue Var 0x5567573022c8 'y$w_buff0' 'int'
|   |-BinaryOperator 0x556757306558 <line:761:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x556757306068 <col:3> 'int' lvalue Var 0x5567573023c0 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x556757306528 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5567573064f8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5567573064e0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556757306088 <col:15> '_Bool' lvalue Var 0x556757302528 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x556757306510 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5567573060a8 <col:31> 'int' lvalue Var 0x5567573023c0 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x5567573064c0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x556757306490 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5567573062b8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5567573061d8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x556757306100 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5567573060e8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5567573060c8 <col:45> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5567573061b8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x556757306150 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x556757306138 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x556757306118 <col:64> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5567573061a0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x556757306188 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x556757306168 <col:83> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x556757306298 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x556757306230 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x556757306218 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5567573061f8 <col:102> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x556757306280 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x556757306268 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x556757306248 <col:121> '_Bool' lvalue Var 0x556757302150 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x556757306478 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5567573062d8 <col:138> 'int' lvalue Var 0x5567573023c0 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x556757306458 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x556757306428 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x556757306398 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x556757306350 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x556757306338 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5567573062f8 <col:151> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x556757306380 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x556757306368 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x556757306318 <col:169> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5567573063f8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5567573063b8 <col:186> 'int' lvalue Var 0x5567573023c0 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x556757306410 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5567573063d8 <col:198> 'int' lvalue Var 0x5567573023c0 'y$w_buff1' 'int'
|   |-BinaryOperator 0x556757306b00 <line:762:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x556757306578 <col:3> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556757306ae8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556757306ab8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x556757306a70 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556757306a58 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556757306598 <col:20> '_Bool' lvalue Var 0x556757302528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556757306aa0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556757306a88 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5567573065b8 <col:36> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x556757306a38 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x556757306a08 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5567573067c8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5567573066e8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556757306610 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5567573065f8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5567573065d8 <col:55> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5567573066c8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556757306660 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556757306648 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556757306628 <col:74> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5567573066b0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556757306698 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556757306678 <col:93> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5567573067a8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556757306740 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556757306728 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556757306708 <col:112> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x556757306790 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556757306778 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556757306758 <col:131> '_Bool' lvalue Var 0x556757302150 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5567573069f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5567573069d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5567573067e8 <col:148> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5567573069b8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x556757306988 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5567573068a8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556757306860 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556757306848 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556757306808 <col:166> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556757306890 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556757306878 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556757306828 <col:184> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x556757306940 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5567573068f8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5567573068c8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556757306970 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x556757306958 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x556757306920 <col:212> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5567573070e8 <line:763:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x556757306b20 <col:3> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5567573070d0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5567573070a0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x556757307058 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556757307040 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556757306b40 <col:20> '_Bool' lvalue Var 0x556757302528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556757307088 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556757307070 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556757306b60 <col:36> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x556757307020 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x556757306ff0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x556757306d70 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556757306c90 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556757306bb8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556757306ba0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556757306b80 <col:55> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556757306c70 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556757306c08 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556757306bf0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556757306bd0 <col:74> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x556757306c58 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556757306c40 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556757306c20 <col:93> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556757306d50 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556757306ce8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556757306cd0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556757306cb0 <col:112> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x556757306d38 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556757306d20 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556757306d00 <col:131> '_Bool' lvalue Var 0x556757302150 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x556757306fd8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556757306fc0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556757306d90 <col:148> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x556757306f80 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x556757306f50 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x556757306e50 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556757306e08 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556757306df0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556757306db0 <col:166> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556757306e38 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556757306e20 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556757306dd0 <col:184> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x556757306f20 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556757306ea0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556757306e70 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556757306f38 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x556757306ef8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x556757306ec8 <col:219> 'int' 0
|   |-BinaryOperator 0x556757307690 <line:764:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x556757307108 <col:3> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556757307678 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556757307648 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x556757307600 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5567573075e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556757307128 <col:20> '_Bool' lvalue Var 0x556757302528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556757307630 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556757307618 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556757307148 <col:36> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x5567573075c8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x556757307598 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x556757307358 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556757307278 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5567573071a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556757307188 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556757307168 <col:55> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556757307258 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5567573071f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5567573071d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5567573071b8 <col:74> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x556757307240 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556757307228 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556757307208 <col:93> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556757307338 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5567573072d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5567573072b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556757307298 <col:112> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x556757307320 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556757307308 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5567573072e8 <col:131> '_Bool' lvalue Var 0x556757302150 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x556757307580 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556757307568 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556757307378 <col:148> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x556757307548 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x556757307518 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x556757307438 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5567573073f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5567573073d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556757307398 <col:166> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556757307420 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556757307408 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5567573073b8 <col:184> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5567573074d0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556757307488 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556757307458 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556757307500 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5567573074e8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5567573074b0 <col:212> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x556757307c58 <line:765:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5567573076b0 <col:3> '_Bool' lvalue Var 0x556757302150 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556757307c40 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556757307c10 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x556757307bc8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556757307bb0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5567573076d0 <col:20> '_Bool' lvalue Var 0x556757302528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556757307bf8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556757307be0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5567573076f0 <col:36> '_Bool' lvalue Var 0x556757302150 'y$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x556757307b90 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x556757307b60 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x556757307900 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556757307820 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556757307748 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556757307730 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556757307710 <col:55> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556757307800 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556757307798 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556757307780 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556757307760 <col:74> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5567573077e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5567573077d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5567573077b0 <col:93> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5567573078e0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556757307878 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556757307860 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556757307840 <col:112> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5567573078c8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5567573078b0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556757307890 <col:131> '_Bool' lvalue Var 0x556757302150 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x556757307b48 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556757307b30 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556757307920 <col:148> '_Bool' lvalue Var 0x556757302150 'y$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x556757307b10 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x556757307ae0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5567573079e0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556757307998 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556757307980 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556757307940 <col:166> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5567573079c8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5567573079b0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556757307960 <col:184> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x556757307ab0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556757307a30 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556757307a00 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556757307ac8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x556757307a88 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x556757307a58 <col:219> 'int' 0
|   |-BinaryOperator 0x556757307cd0 <line:766:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x556757307c78 <col:3> 'int' lvalue Var 0x5567573017d0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x556757307cb8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556757307c98 <col:25> 'int' lvalue Var 0x556757301c20 'y' 'int'
|   |-BinaryOperator 0x556757307e00 <line:767:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x556757307cf0 <col:3> 'int' lvalue Var 0x556757301c20 'y' 'int'
|   | `-ConditionalOperator 0x556757307dd0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x556757307d88 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556757307d70 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556757307d10 <col:7> '_Bool' lvalue Var 0x556757301cb8 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x556757307da0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556757307d30 <col:25> 'int' lvalue Var 0x556757301d38 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x556757307db8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x556757307d50 <col:37> 'int' lvalue Var 0x556757301c20 'y' 'int'
|   |-BinaryOperator 0x556757307e98 <line:768:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x556757307e20 <col:3> '_Bool' lvalue Var 0x556757301cb8 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x556757307e70 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556757307e40 <col:28> 'int' 0
|   |-CallExpr 0x556757307ef0 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556757307ed8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556757307eb8 <col:3> 'void ()' Function 0x5567572a8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556757307f48 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556757307f30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556757307f10 <col:3> 'void ()' Function 0x5567572a8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556757308008 <line:771:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x556757307f68 <col:3> '_Bool' lvalue Var 0x5567573024b0 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x556757307ff0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x556757307fd0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x556757307fa8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x556757307f88 <col:19> 'void *(void)' Function 0x5567572a7e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5567573080b8 <line:772:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x556757308028 <col:3> '_Bool' lvalue Var 0x556757302528 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5567573080a0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x556757308080 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x556757308068 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x556757308048 <col:19> 'void *(void)' Function 0x5567572a7e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x556757308130 <line:773:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5567573080d8 <col:3> '_Bool' lvalue Var 0x556757301cb8 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x556757308118 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5567573080f8 <col:21> '_Bool' lvalue Var 0x556757302528 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5567573081a8 <line:774:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556757308150 <col:3> 'int' lvalue Var 0x556757301d38 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x556757308190 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556757308170 <col:15> 'int' lvalue Var 0x556757301c20 'y' 'int'
|   |-BinaryOperator 0x5567573085e0 <line:775:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5567573081c8 <col:3> 'int' lvalue Var 0x556757301c20 'y' 'int'
|   | `-ConditionalOperator 0x5567573085b0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5567573083d8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5567573082f8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x556757308220 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x556757308208 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5567573081e8 <col:8> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5567573082d8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x556757308270 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x556757308258 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x556757308238 <col:27> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x5567573082c0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5567573082a8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x556757308288 <col:46> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5567573083b8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x556757308350 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x556757308338 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x556757308318 <col:65> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x5567573083a0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x556757308388 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x556757308368 <col:84> '_Bool' lvalue Var 0x556757302150 'y$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x556757308598 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5567573083f8 <col:101> 'int' lvalue Var 0x556757301c20 'y' 'int'
|   |   `-ParenExpr 0x556757308578 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x556757308548 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5567573084b8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556757308470 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556757308458 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556757308418 <col:106> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5567573084a0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556757308488 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556757308438 <col:124> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x556757308518 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5567573084d8 <col:141> 'int' lvalue Var 0x5567573022c8 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x556757308530 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5567573084f8 <col:153> 'int' lvalue Var 0x5567573023c0 'y$w_buff1' 'int'
|   |-BinaryOperator 0x556757308af0 <line:776:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x556757308600 <col:3> 'int' lvalue Var 0x5567573022c8 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x556757308ac0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x556757308a90 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556757308a78 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556757308620 <col:15> '_Bool' lvalue Var 0x556757302528 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x556757308aa8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556757308640 <col:31> 'int' lvalue Var 0x5567573022c8 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x556757308a58 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x556757308a28 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x556757308850 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x556757308770 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x556757308698 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x556757308680 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x556757308660 <col:45> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x556757308750 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5567573086e8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5567573086d0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5567573086b0 <col:64> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x556757308738 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x556757308720 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x556757308700 <col:83> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x556757308830 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5567573087c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5567573087b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x556757308790 <col:102> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x556757308818 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x556757308800 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5567573087e0 <col:121> '_Bool' lvalue Var 0x556757302150 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x556757308a10 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556757308870 <col:138> 'int' lvalue Var 0x5567573022c8 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x5567573089f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5567573089c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x556757308930 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5567573088e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5567573088d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x556757308890 <col:151> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x556757308918 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x556757308900 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5567573088b0 <col:169> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x556757308990 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x556757308950 <col:186> 'int' lvalue Var 0x5567573022c8 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5567573089a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x556757308970 <col:198> 'int' lvalue Var 0x5567573022c8 'y$w_buff0' 'int'
|   |-BinaryOperator 0x556757309010 <line:777:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x556757308b10 <col:3> 'int' lvalue Var 0x5567573023c0 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x556757308fe0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x556757308fa0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556757308f88 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556757308b30 <col:15> '_Bool' lvalue Var 0x556757302528 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x556757308fb8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556757308b50 <col:31> 'int' lvalue Var 0x5567573023c0 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x556757308f68 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x556757308f38 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x556757308d60 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x556757308c80 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x556757308ba8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x556757308b90 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x556757308b70 <col:45> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x556757308c60 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x556757308bf8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x556757308be0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x556757308bc0 <col:64> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x556757308c48 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x556757308c30 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x556757308c10 <col:83> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x556757308d40 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x556757308cd8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x556757308cc0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x556757308ca0 <col:102> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x556757308d28 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x556757308d10 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x556757308cf0 <col:121> '_Bool' lvalue Var 0x556757302150 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x556757308f20 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556757308d80 <col:138> 'int' lvalue Var 0x5567573023c0 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x556757308f00 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x556757308ed0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x556757308e40 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x556757308df8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x556757308de0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x556757308da0 <col:151> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x556757308e28 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x556757308e10 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x556757308dc0 <col:169> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x556757308ea0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x556757308e60 <col:186> 'int' lvalue Var 0x5567573023c0 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x556757308eb8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x556757308e80 <col:198> 'int' lvalue Var 0x5567573023c0 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5567573095b8 <line:778:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x556757309030 <col:3> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5567573095a0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556757309570 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x556757309528 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556757309510 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556757309050 <col:20> '_Bool' lvalue Var 0x556757302528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556757309558 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556757309540 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556757309070 <col:36> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5567573094f0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5567573094c0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x556757309280 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5567573091a0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5567573090c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5567573090b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556757309090 <col:55> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556757309180 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556757309118 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556757309100 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5567573090e0 <col:74> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x556757309168 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556757309150 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556757309130 <col:93> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556757309260 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5567573091f8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5567573091e0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5567573091c0 <col:112> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x556757309248 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556757309230 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556757309210 <col:131> '_Bool' lvalue Var 0x556757302150 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5567573094a8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556757309490 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5567573092a0 <col:148> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x556757309470 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x556757309440 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x556757309360 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556757309318 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556757309300 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5567573092c0 <col:166> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556757309348 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556757309330 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5567573092e0 <col:184> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5567573093f8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5567573093b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556757309380 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556757309428 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x556757309410 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5567573093d8 <col:212> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556757309b80 <line:779:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5567573095d8 <col:3> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556757309b68 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556757309b38 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x556757309af0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556757309ad8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5567573095f8 <col:20> '_Bool' lvalue Var 0x556757302528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556757309b20 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556757309b08 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556757309618 <col:36> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x556757309ab8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x556757309a88 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x556757309828 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556757309748 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556757309670 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556757309658 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556757309638 <col:55> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556757309728 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5567573096c0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5567573096a8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556757309688 <col:74> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x556757309710 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5567573096f8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5567573096d8 <col:93> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556757309808 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5567573097a0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556757309788 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556757309768 <col:112> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5567573097f0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5567573097d8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5567573097b8 <col:131> '_Bool' lvalue Var 0x556757302150 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x556757309a70 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556757309a58 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556757309848 <col:148> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x556757309a38 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x556757309a08 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x556757309908 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5567573098c0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5567573098a8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556757309868 <col:166> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5567573098f0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5567573098d8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556757309888 <col:184> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5567573099d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556757309958 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556757309928 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5567573099f0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5567573099b0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x556757309980 <col:219> 'int' 0
|   |-BinaryOperator 0x55675730a138 <line:780:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x556757309ba0 <col:3> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55675730a120 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55675730a0f0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55675730a0a8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55675730a090 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556757309bc0 <col:20> '_Bool' lvalue Var 0x556757302528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55675730a0d8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55675730a0c0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556757309be0 <col:36> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x55675730a070 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55675730a040 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x556757309df0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556757309d10 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556757309c38 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556757309c20 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556757309c00 <col:55> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556757309cf0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556757309c88 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556757309c70 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556757309c50 <col:74> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x556757309cd8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556757309cc0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556757309ca0 <col:93> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556757309dd0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556757309d68 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556757309d50 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556757309d30 <col:112> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x556757309db8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556757309da0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556757309d80 <col:131> '_Bool' lvalue Var 0x556757302150 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55675730a028 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55675730a010 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556757309e10 <col:148> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x556757309ff0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x556757309fb0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x556757309ed0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556757309e88 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556757309e70 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556757309e30 <col:166> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556757309eb8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556757309ea0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556757309e50 <col:184> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x556757309f68 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556757309f20 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556757309ef0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556757309f98 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x556757309f80 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x556757309f48 <col:212> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55675730a700 <line:781:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55675730a158 <col:3> '_Bool' lvalue Var 0x556757302150 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55675730a6e8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55675730a6b8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55675730a670 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55675730a658 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55675730a178 <col:20> '_Bool' lvalue Var 0x556757302528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55675730a6a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55675730a688 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55675730a198 <col:36> '_Bool' lvalue Var 0x556757302150 'y$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x55675730a638 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55675730a608 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55675730a3a8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55675730a2c8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55675730a1f0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55675730a1d8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55675730a1b8 <col:55> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55675730a2a8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55675730a240 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55675730a228 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55675730a208 <col:74> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55675730a290 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55675730a278 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55675730a258 <col:93> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55675730a388 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55675730a320 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55675730a308 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55675730a2e8 <col:112> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55675730a370 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55675730a358 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55675730a338 <col:131> '_Bool' lvalue Var 0x556757302150 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55675730a5f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55675730a5d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55675730a3c8 <col:148> '_Bool' lvalue Var 0x556757302150 'y$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x55675730a5b8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55675730a588 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55675730a488 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55675730a440 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55675730a428 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55675730a3e8 <col:166> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55675730a470 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55675730a458 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55675730a408 <col:184> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55675730a558 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55675730a4d8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55675730a4a8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55675730a570 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55675730a530 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55675730a500 <col:219> 'int' 0
|   |-BinaryOperator 0x55675730a778 <line:782:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55675730a720 <col:3> 'int' lvalue Var 0x5567573018f0 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x55675730a760 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55675730a740 <col:25> 'int' lvalue Var 0x556757301c20 'y' 'int'
|   |-BinaryOperator 0x55675730a8a8 <line:783:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55675730a798 <col:3> 'int' lvalue Var 0x556757301c20 'y' 'int'
|   | `-ConditionalOperator 0x55675730a878 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55675730a830 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55675730a818 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55675730a7b8 <col:7> '_Bool' lvalue Var 0x556757301cb8 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55675730a848 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55675730a7d8 <col:25> 'int' lvalue Var 0x556757301d38 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55675730a860 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55675730a7f8 <col:37> 'int' lvalue Var 0x556757301c20 'y' 'int'
|   |-BinaryOperator 0x55675730a940 <line:784:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55675730a8c8 <col:3> '_Bool' lvalue Var 0x556757301cb8 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55675730a918 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55675730a8e8 <col:28> 'int' 0
|   |-CallExpr 0x55675730a998 <line:785:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55675730a980 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55675730a960 <col:3> 'void ()' Function 0x5567572a8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55675730a9f0 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55675730a9d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55675730a9b8 <col:3> 'void ()' Function 0x5567572a8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55675730acd8 <line:787:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55675730aa10 <col:3> 'int' lvalue Var 0x556757301c20 'y' 'int'
|   | `-ConditionalOperator 0x55675730aca8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55675730aad0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55675730aa88 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55675730aa70 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55675730aa30 <col:7> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55675730aab8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55675730aaa0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55675730aa50 <col:25> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55675730ac90 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55675730aaf0 <col:42> 'int' lvalue Var 0x5567573022c8 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55675730ac70 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55675730ac40 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55675730abb0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55675730ab68 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55675730ab50 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55675730ab10 <col:55> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55675730ab98 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55675730ab80 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55675730ab30 <col:73> '_Bool' lvalue Var 0x556757302150 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55675730ac10 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55675730abd0 <col:90> 'int' lvalue Var 0x5567573023c0 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55675730ac28 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55675730abf0 <col:102> 'int' lvalue Var 0x556757301c20 'y' 'int'
|   |-BinaryOperator 0x55675730aee0 <line:788:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55675730acf8 <col:3> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55675730aec8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55675730ae98 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55675730adb8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55675730ad70 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55675730ad58 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55675730ad18 <col:20> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55675730ada0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55675730ad88 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55675730ad38 <col:38> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55675730ae50 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55675730ae08 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55675730add8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55675730ae80 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55675730ae68 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55675730ae30 <col:66> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55675730b1e8 <line:789:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55675730af00 <col:3> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55675730b1d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55675730b1a0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55675730b0c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55675730afc0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55675730af78 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55675730af60 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55675730af20 <col:20> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55675730afa8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55675730af90 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55675730af40 <col:38> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55675730b0a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55675730b058 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55675730b040 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55675730b000 <col:56> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55675730b088 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55675730b070 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55675730b020 <col:74> '_Bool' lvalue Var 0x556757302150 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55675730b158 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55675730b110 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55675730b0e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55675730b188 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55675730b170 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55675730b138 <col:102> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55675730b3f0 <line:790:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55675730b208 <col:3> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55675730b3d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55675730b3a8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55675730b2c8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55675730b280 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55675730b268 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55675730b228 <col:20> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55675730b2b0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55675730b298 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55675730b248 <col:38> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55675730b360 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55675730b318 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55675730b2e8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55675730b390 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55675730b378 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55675730b340 <col:66> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55675730b6d8 <line:791:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55675730b410 <col:3> '_Bool' lvalue Var 0x556757302150 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55675730b6c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55675730b690 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55675730b5b0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55675730b4d0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55675730b488 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55675730b470 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55675730b430 <col:20> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55675730b4b8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55675730b4a0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55675730b450 <col:38> '_Bool' lvalue Var 0x556757301f70 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55675730b590 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55675730b548 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55675730b530 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55675730b4f0 <col:56> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55675730b578 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55675730b560 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55675730b510 <col:74> '_Bool' lvalue Var 0x556757302150 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55675730b648 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55675730b600 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55675730b5d0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55675730b678 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55675730b660 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55675730b628 <col:102> '_Bool' lvalue Var 0x556757302150 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55675730b730 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55675730b718 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55675730b6f8 <col:3> 'void ()' Function 0x5567572a8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55675730b788 <line:793:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55675730b770 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55675730b750 <col:3> 'void ()' Function 0x5567572a8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55675730b840 <line:794:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55675730b7a8 <col:3> 'int' lvalue Var 0x556757301590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55675730b820 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55675730b808 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55675730b7c8 <col:22> 'int' lvalue Var 0x556757301590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55675730b7e8 <col:41> 'int' 1
|   |-CallExpr 0x55675730b898 <line:795:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55675730b880 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55675730b860 <col:3> 'void ()' Function 0x5567572a8410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55675730b910 <line:796:3, col:36>
|     `-CallExpr 0x55675730b8f0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55675730b8d8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55675730b8b8 <col:10> 'void *(void)' Function 0x5567572a7e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55675730baa8 prev 0x5567573012d8 <line:798:1, line:800:1> line:798:6 fence 'void ()'
| `-CompoundStmt 0x55675730bb48 <line:799:1, line:800:1>
|-FunctionDecl 0x55675730bb78 prev 0x556757301398 <line:801:1, line:803:1> line:801:6 isync 'void ()'
| `-CompoundStmt 0x55675730bc18 <line:802:1, line:803:1>
|-FunctionDecl 0x55675730bc48 prev 0x556757301458 <line:804:1, line:806:1> line:804:6 lwfence 'void ()'
| `-CompoundStmt 0x55675730bce8 <line:805:1, line:806:1>
`-FunctionDecl 0x55675730bd58 <line:807:1, line:844:1> line:807:5 main 'int ()'
  `-CompoundStmt 0x5567573103c0 <line:808:1, line:844:1>
    |-DeclStmt 0x55675730be70 <line:809:3, col:18>
    | `-VarDecl 0x55675730be08 <col:3, col:13> col:13 used t1866 'pthread_t':'unsigned long'
    |-CallExpr 0x55675730c088 <line:810:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55675730c070 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55675730be88 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5567572e88f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55675730bec8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55675730bea8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55675730be08 't1866' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55675730c0c8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55675730bf40 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55675730bf18 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55675730bee0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55675730c0e0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55675730bf60 <col:39> 'void *(void *)' Function 0x556757302640 'P0' 'void *(void *)'
    | `-ParenExpr 0x55675730bfe0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55675730bfb8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55675730bf80 <col:52> 'int' 0
    |-DeclStmt 0x55675730c170 <line:811:3, col:18>
    | `-VarDecl 0x55675730c108 <col:3, col:13> col:13 used t1867 'pthread_t':'unsigned long'
    |-CallExpr 0x55675730c318 <line:812:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55675730c300 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55675730c188 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5567572e88f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55675730c1c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55675730c1a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55675730c108 't1867' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55675730c358 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55675730c240 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55675730c218 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55675730c1e0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55675730c370 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55675730c260 <col:39> 'void *(void *)' Function 0x556757304028 'P1' 'void *(void *)'
    | `-ParenExpr 0x55675730c2e0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55675730c2b8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55675730c280 <col:52> 'int' 0
    |-DeclStmt 0x55675730c400 <line:813:3, col:18>
    | `-VarDecl 0x55675730c398 <col:3, col:13> col:13 used t1868 'pthread_t':'unsigned long'
    |-CallExpr 0x55675730c5a8 <line:814:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55675730c590 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55675730c418 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5567572e88f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55675730c458 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55675730c438 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55675730c398 't1868' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55675730c5e8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55675730c4d0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55675730c4a8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55675730c470 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55675730c600 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55675730c4f0 <col:39> 'void *(void *)' Function 0x5567573053a8 'P2' 'void *(void *)'
    | `-ParenExpr 0x55675730c570 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55675730c548 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55675730c510 <col:52> 'int' 0
    |-CallExpr 0x55675730c650 <line:815:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55675730c638 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55675730c618 <col:3> 'void ()' Function 0x5567572a8350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55675730c720 <line:816:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55675730c670 <col:3> '_Bool' lvalue Var 0x556757301988 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55675730c708 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55675730c6e8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55675730c6d0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55675730c690 <col:21> 'int' lvalue Var 0x556757301590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55675730c6b0 <col:41> 'int' 3
    |-CallExpr 0x55675730c778 <line:817:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55675730c760 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55675730c740 <col:3> 'void ()' Function 0x5567572a8410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55675730c7f0 <line:818:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55675730c7d8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55675730c798 <col:3> 'void (int)' Function 0x5567572a7ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55675730c830 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55675730c818 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55675730c7b8 <col:21> '_Bool' lvalue Var 0x556757301988 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55675730c880 <line:819:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55675730c868 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55675730c848 <col:3> 'void ()' Function 0x5567572a8350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55675730cb68 <line:820:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55675730c8a0 <col:3> 'int' lvalue Var 0x556757301c20 'y' 'int'
    | `-ConditionalOperator 0x55675730cb38 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55675730c960 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55675730c918 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55675730c900 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55675730c8c0 <col:7> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55675730c948 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55675730c930 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55675730c8e0 <col:25> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55675730cb20 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55675730c980 <col:42> 'int' lvalue Var 0x5567573022c8 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55675730cb00 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55675730cad0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55675730ca40 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55675730c9f8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55675730c9e0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55675730c9a0 <col:55> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55675730ca28 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55675730ca10 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55675730c9c0 <col:73> '_Bool' lvalue Var 0x556757301fe8 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55675730caa0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55675730ca60 <col:90> 'int' lvalue Var 0x5567573023c0 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55675730cab8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55675730ca80 <col:102> 'int' lvalue Var 0x556757301c20 'y' 'int'
    |-BinaryOperator 0x55675730cd70 <line:821:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55675730cb88 <col:3> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55675730cd58 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55675730cd28 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55675730cc48 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55675730cc00 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55675730cbe8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55675730cba8 <col:20> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55675730cc30 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55675730cc18 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55675730cbc8 <col:38> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55675730cce0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55675730cc98 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55675730cc68 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55675730cd10 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55675730ccf8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55675730ccc0 <col:66> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55675730d068 <line:822:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55675730cd90 <col:3> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55675730d050 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55675730d020 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55675730cf30 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55675730ce50 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55675730ce08 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55675730cdf0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55675730cdb0 <col:20> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55675730ce38 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55675730ce20 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55675730cdd0 <col:38> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55675730cf10 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55675730cec8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55675730ceb0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55675730ce70 <col:56> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55675730cef8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55675730cee0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55675730ce90 <col:74> '_Bool' lvalue Var 0x556757301fe8 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55675730cfc8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55675730cf80 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55675730cf50 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55675730cff8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55675730cfe0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55675730cfa8 <col:102> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55675730d270 <line:823:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55675730d088 <col:3> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55675730d258 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55675730d228 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55675730d148 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55675730d100 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55675730d0e8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55675730d0a8 <col:20> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55675730d130 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55675730d118 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55675730d0c8 <col:38> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55675730d1e0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55675730d198 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55675730d168 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55675730d210 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55675730d1f8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55675730d1c0 <col:66> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55675730d558 <line:824:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55675730d290 <col:3> '_Bool' lvalue Var 0x556757301fe8 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55675730d540 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55675730d510 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55675730d430 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55675730d350 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55675730d308 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55675730d2f0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55675730d2b0 <col:20> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55675730d338 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55675730d320 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55675730d2d0 <col:38> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55675730d410 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55675730d3c8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55675730d3b0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55675730d370 <col:56> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55675730d3f8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55675730d3e0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55675730d390 <col:74> '_Bool' lvalue Var 0x556757301fe8 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55675730d4c8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55675730d480 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55675730d450 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55675730d4f8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55675730d4e0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55675730d4a8 <col:102> '_Bool' lvalue Var 0x556757301fe8 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55675730d5b0 <line:825:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55675730d598 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55675730d578 <col:3> 'void ()' Function 0x5567572a8410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55675730d608 <line:826:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55675730d5f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55675730d5d0 <col:3> 'void ()' Function 0x5567572a8350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55675730d6b8 <line:827:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x55675730d628 <col:3> '_Bool' lvalue Var 0x5567573024b0 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x55675730d6a0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x55675730d680 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x55675730d668 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55675730d648 <col:19> 'void *(void)' Function 0x5567572a7e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x55675730d768 <line:828:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x55675730d6d8 <col:3> '_Bool' lvalue Var 0x556757302528 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x55675730d750 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x55675730d730 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x55675730d718 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55675730d6f8 <col:19> 'void *(void)' Function 0x5567572a7e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x55675730d7e0 <line:829:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x55675730d788 <col:3> '_Bool' lvalue Var 0x556757301cb8 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x55675730d7c8 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x55675730d7a8 <col:21> '_Bool' lvalue Var 0x556757302528 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x55675730d858 <line:830:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55675730d800 <col:3> 'int' lvalue Var 0x556757301d38 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x55675730d840 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55675730d820 <col:15> 'int' lvalue Var 0x556757301c20 'y' 'int'
    |-BinaryOperator 0x55675730dc90 <line:831:3, col:162> 'int' '='
    | |-DeclRefExpr 0x55675730d878 <col:3> 'int' lvalue Var 0x556757301c20 'y' 'int'
    | `-ConditionalOperator 0x55675730dc60 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x55675730da88 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x55675730d9a8 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x55675730d8d0 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x55675730d8b8 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x55675730d898 <col:8> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x55675730d988 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x55675730d920 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x55675730d908 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x55675730d8e8 <col:27> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x55675730d970 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x55675730d958 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x55675730d938 <col:46> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x55675730da68 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x55675730da00 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x55675730d9e8 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55675730d9c8 <col:65> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x55675730da50 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x55675730da38 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x55675730da18 <col:84> '_Bool' lvalue Var 0x556757301fe8 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55675730dc48 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55675730daa8 <col:101> 'int' lvalue Var 0x556757301c20 'y' 'int'
    |   `-ParenExpr 0x55675730dc28 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x55675730dbf8 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x55675730db68 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55675730db20 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55675730db08 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55675730dac8 <col:106> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55675730db50 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55675730db38 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55675730dae8 <col:124> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55675730dbc8 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55675730db88 <col:141> 'int' lvalue Var 0x5567573022c8 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x55675730dbe0 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55675730dba8 <col:153> 'int' lvalue Var 0x5567573023c0 'y$w_buff1' 'int'
    |-BinaryOperator 0x55675730e1b0 <line:832:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55675730dcb0 <col:3> 'int' lvalue Var 0x5567573022c8 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x55675730e180 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55675730e150 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55675730e138 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55675730dcd0 <col:15> '_Bool' lvalue Var 0x556757302528 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55675730e168 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55675730dcf0 <col:31> 'int' lvalue Var 0x5567573022c8 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55675730e118 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55675730e0e8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55675730df00 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55675730de20 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55675730dd48 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55675730dd30 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55675730dd10 <col:45> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55675730de00 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55675730dd98 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55675730dd80 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55675730dd60 <col:64> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55675730dde8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55675730ddd0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55675730ddb0 <col:83> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55675730dee0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55675730de78 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55675730de60 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55675730de40 <col:102> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55675730dec8 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55675730deb0 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55675730de90 <col:121> '_Bool' lvalue Var 0x556757301fe8 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55675730e0d0 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55675730df20 <col:138> 'int' lvalue Var 0x5567573022c8 'y$w_buff0' 'int'
    |       `-ParenExpr 0x55675730e0b0 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55675730e080 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55675730dfe0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55675730df98 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55675730df80 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55675730df40 <col:151> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55675730dfc8 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55675730dfb0 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55675730df60 <col:169> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55675730e050 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55675730e000 <col:186> 'int' lvalue Var 0x5567573022c8 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x55675730e068 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55675730e030 <col:198> 'int' lvalue Var 0x5567573022c8 'y$w_buff0' 'int'
    |-BinaryOperator 0x55675730e6c0 <line:833:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55675730e1d0 <col:3> 'int' lvalue Var 0x5567573023c0 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x55675730e690 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55675730e660 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55675730e648 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55675730e1f0 <col:15> '_Bool' lvalue Var 0x556757302528 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55675730e678 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55675730e210 <col:31> 'int' lvalue Var 0x5567573023c0 'y$w_buff1' 'int'
    |   `-ParenExpr 0x55675730e628 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55675730e5f8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55675730e420 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55675730e340 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55675730e268 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55675730e250 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55675730e230 <col:45> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55675730e320 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55675730e2b8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55675730e2a0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55675730e280 <col:64> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55675730e308 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55675730e2f0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55675730e2d0 <col:83> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55675730e400 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55675730e398 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55675730e380 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55675730e360 <col:102> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55675730e3e8 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55675730e3d0 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55675730e3b0 <col:121> '_Bool' lvalue Var 0x556757301fe8 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55675730e5e0 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55675730e440 <col:138> 'int' lvalue Var 0x5567573023c0 'y$w_buff1' 'int'
    |       `-ParenExpr 0x55675730e5c0 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55675730e590 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55675730e500 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55675730e4b8 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55675730e4a0 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55675730e460 <col:151> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55675730e4e8 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55675730e4d0 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55675730e480 <col:169> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55675730e560 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55675730e520 <col:186> 'int' lvalue Var 0x5567573023c0 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x55675730e578 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55675730e540 <col:198> 'int' lvalue Var 0x5567573023c0 'y$w_buff1' 'int'
    |-BinaryOperator 0x55675730ec68 <line:834:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55675730e6e0 <col:3> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55675730ec50 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55675730ec20 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55675730ebd8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55675730ebc0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55675730e700 <col:20> '_Bool' lvalue Var 0x556757302528 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55675730ec08 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55675730ebf0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55675730e720 <col:36> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x55675730eba0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55675730eb70 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55675730e930 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55675730e850 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55675730e778 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55675730e760 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55675730e740 <col:55> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55675730e830 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55675730e7c8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55675730e7b0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55675730e790 <col:74> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55675730e818 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55675730e800 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55675730e7e0 <col:93> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55675730e910 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55675730e8a8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55675730e890 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55675730e870 <col:112> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55675730e8f8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55675730e8e0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55675730e8c0 <col:131> '_Bool' lvalue Var 0x556757301fe8 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55675730eb58 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55675730eb40 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55675730e950 <col:148> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x55675730eb20 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55675730eaf0 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55675730ea10 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55675730e9c8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55675730e9b0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55675730e970 <col:166> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55675730e9f8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55675730e9e0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55675730e990 <col:184> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55675730eaa8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55675730ea60 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55675730ea30 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55675730ead8 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55675730eac0 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55675730ea88 <col:212> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55675730f240 <line:835:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55675730ec88 <col:3> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55675730f228 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55675730f1f8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55675730f1b0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55675730f198 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55675730eca8 <col:20> '_Bool' lvalue Var 0x556757302528 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55675730f1e0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55675730f1c8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55675730ecc8 <col:36> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x55675730f178 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55675730f148 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55675730eed8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55675730edf8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55675730ed20 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55675730ed08 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55675730ece8 <col:55> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55675730edd8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55675730ed70 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55675730ed58 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55675730ed38 <col:74> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55675730edc0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55675730eda8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55675730ed88 <col:93> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55675730eeb8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55675730ee50 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55675730ee38 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55675730ee18 <col:112> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55675730eea0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55675730ee88 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55675730ee68 <col:131> '_Bool' lvalue Var 0x556757301fe8 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55675730f130 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55675730f118 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55675730eef8 <col:148> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x55675730f0f8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55675730f0c8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55675730efb8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55675730ef70 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55675730ef58 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55675730ef18 <col:166> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55675730efa0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55675730ef88 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55675730ef38 <col:184> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55675730f098 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55675730f008 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55675730efd8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55675730f0b0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55675730f070 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55675730f040 <col:219> 'int' 0
    |-BinaryOperator 0x55675730f7e8 <line:836:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55675730f260 <col:3> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55675730f7d0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55675730f7a0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55675730f758 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55675730f740 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55675730f280 <col:20> '_Bool' lvalue Var 0x556757302528 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55675730f788 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55675730f770 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55675730f2a0 <col:36> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x55675730f720 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55675730f6f0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55675730f4b0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55675730f3d0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55675730f2f8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55675730f2e0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55675730f2c0 <col:55> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55675730f3b0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55675730f348 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55675730f330 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55675730f310 <col:74> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55675730f398 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55675730f380 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55675730f360 <col:93> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55675730f490 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55675730f428 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55675730f410 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55675730f3f0 <col:112> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55675730f478 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55675730f460 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55675730f440 <col:131> '_Bool' lvalue Var 0x556757301fe8 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55675730f6d8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55675730f6c0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55675730f4d0 <col:148> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x55675730f6a0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55675730f670 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55675730f590 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55675730f548 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55675730f530 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55675730f4f0 <col:166> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55675730f578 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55675730f560 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55675730f510 <col:184> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55675730f628 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55675730f5e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55675730f5b0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55675730f658 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55675730f640 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55675730f608 <col:212> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55675730fdb0 <line:837:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55675730f808 <col:3> '_Bool' lvalue Var 0x556757301fe8 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55675730fd98 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55675730fd68 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55675730fd20 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55675730fd08 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55675730f828 <col:20> '_Bool' lvalue Var 0x556757302528 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55675730fd50 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55675730fd38 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55675730f848 <col:36> '_Bool' lvalue Var 0x556757301fe8 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x55675730fce8 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55675730fcb8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55675730fa58 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55675730f978 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55675730f8a0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55675730f888 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55675730f868 <col:55> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55675730f958 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55675730f8f0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55675730f8d8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55675730f8b8 <col:74> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55675730f940 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55675730f928 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55675730f908 <col:93> '_Bool' lvalue Var 0x556757302438 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55675730fa38 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55675730f9d0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55675730f9b8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55675730f998 <col:112> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55675730fa20 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55675730fa08 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55675730f9e8 <col:131> '_Bool' lvalue Var 0x556757301fe8 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55675730fca0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55675730fc88 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55675730fa78 <col:148> '_Bool' lvalue Var 0x556757301fe8 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x55675730fc68 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55675730fc38 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55675730fb38 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55675730faf0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55675730fad8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55675730fa98 <col:166> '_Bool' lvalue Var 0x556757302340 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55675730fb20 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55675730fb08 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55675730fab8 <col:184> '_Bool' lvalue Var 0x556757301db0 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55675730fc08 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55675730fb88 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55675730fb58 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55675730fc20 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55675730fbe0 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55675730fbb0 <col:219> 'int' 0
    |-BinaryOperator 0x5567573100a0 <line:838:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x55675730fdd0 <col:3> '_Bool' lvalue Var 0x556757301a00 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x556757310088 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x556757310070 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x556757310050 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x556757310010 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x55675730ff78 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x55675730fee0 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x55675730fe48 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55675730fe30 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55675730fdf0 <col:23> 'int' lvalue Var 0x556757301c20 'y' 'int'
    |         | | | `-IntegerLiteral 0x55675730fe10 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x55675730fec0 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55675730fea8 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55675730fe68 <col:33> 'int' lvalue Var 0x5567573016b0 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x55675730fe88 <col:56> 'int' 1
    |         | `-BinaryOperator 0x55675730ff58 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55675730ff40 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55675730ff00 <col:61> 'int' lvalue Var 0x5567573017d0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x55675730ff20 <col:84> 'int' 1
    |         `-BinaryOperator 0x55675730fff0 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x55675730ffd8 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55675730ff98 <col:89> 'int' lvalue Var 0x5567573018f0 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x55675730ffb8 <col:112> 'int' 1
    |-BinaryOperator 0x5567573101d0 <line:839:3, col:37> 'int' '='
    | |-DeclRefExpr 0x5567573100c0 <col:3> 'int' lvalue Var 0x556757301c20 'y' 'int'
    | `-ConditionalOperator 0x5567573101a0 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x556757310158 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x556757310140 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5567573100e0 <col:7> '_Bool' lvalue Var 0x556757301cb8 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x556757310170 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x556757310100 <col:25> 'int' lvalue Var 0x556757301d38 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x556757310188 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x556757310120 <col:37> 'int' lvalue Var 0x556757301c20 'y' 'int'
    |-BinaryOperator 0x556757310268 <line:840:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x5567573101f0 <col:3> '_Bool' lvalue Var 0x556757301cb8 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x556757310240 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x556757310210 <col:28> 'int' 0
    |-CallExpr 0x5567573102c0 <line:841:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5567573102a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556757310288 <col:3> 'void ()' Function 0x5567572a8410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x556757310338 <line:842:3, col:36> 'void'
    | |-ImplicitCastExpr 0x556757310320 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5567573102e0 <col:3> 'void (int)' Function 0x5567572a80d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x556757310378 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x556757310360 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x556757310300 <col:21> '_Bool' lvalue Var 0x556757301a00 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5567573103b0 <line:843:3, col:10>
      `-IntegerLiteral 0x556757310390 <col:10> 'int' 0
