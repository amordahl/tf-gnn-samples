TranslationUnitDecl 0x5583d171ad78 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5583d171b638 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5583d171b310 '__int128'
|-TypedefDecl 0x5583d171b6a8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5583d171b330 'unsigned __int128'
|-TypedefDecl 0x5583d171b9b0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5583d171b780 'struct __NSConstantString_tag'
|   `-Record 0x5583d171b700 '__NSConstantString_tag'
|-TypedefDecl 0x5583d171ba58 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5583d171ba10 'char *'
|   `-BuiltinType 0x5583d171ae10 'char'
|-TypedefDecl 0x5583d175a930 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5583d171bcf0 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5583d171bb30 'struct __va_list_tag'
|     `-Record 0x5583d171bab0 '__va_list_tag'
|-TypedefDecl 0x5583d175a9a0 <floats-esbmc-regression/ceil_nondet_true-unreach-call.i:22:1, col:15> col:15 float_t 'float'
| `-BuiltinType 0x5583d171af70 'float'
|-TypedefDecl 0x5583d175aa10 <line:23:1, col:16> col:16 double_t 'double'
| `-BuiltinType 0x5583d171af90 'double'
|-FunctionDecl 0x5583d175ab58 <line:24:15> col:15 implicit acos 'double (double)' extern
| |-ParmVarDecl 0x5583d175abf8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d175ac68 <col:15> Implicit
|-FunctionDecl 0x5583d175acc0 prev 0x5583d175ab58 <col:1, col:62> col:15 acos 'double (double)' extern
| |-ParmVarDecl 0x5583d175aa80 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5583d175ad68 <col:49>
|-FunctionDecl 0x5583d175ae70 <col:65, col:128> col:79 __acos 'double (double)' extern
| |-ParmVarDecl 0x5583d175add8 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5583d175af18 <col:115>
|-FunctionDecl 0x5583d175b068 <line:26:15> col:15 implicit asin 'double (double)' extern
| |-ParmVarDecl 0x5583d175b108 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d175b178 <col:15> Implicit
|-FunctionDecl 0x5583d175b1d0 prev 0x5583d175b068 <col:1, col:62> col:15 asin 'double (double)' extern
| |-ParmVarDecl 0x5583d175afd0 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5583d175b278 <col:49>
|-FunctionDecl 0x5583d175b380 <col:65, col:128> col:79 __asin 'double (double)' extern
| |-ParmVarDecl 0x5583d175b2e8 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5583d175b428 <col:115>
|-FunctionDecl 0x5583d175b530 <line:28:15> col:15 implicit atan 'double (double)' extern
| |-ParmVarDecl 0x5583d175b5d0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d175b640 <col:15> Implicit
|-FunctionDecl 0x5583d175b698 prev 0x5583d175b530 <col:1, col:62> col:15 atan 'double (double)' extern
| |-ParmVarDecl 0x5583d175b498 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5583d175b740 <col:49>
|-FunctionDecl 0x5583d175b848 <col:65, col:128> col:79 __atan 'double (double)' extern
| |-ParmVarDecl 0x5583d175b7b0 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5583d175b8f0 <col:115>
|-FunctionDecl 0x5583d177e798 <line:30:15> col:15 implicit atan2 'double (double, double)' extern
| |-ParmVarDecl 0x5583d177e838 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5583d177e8a0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d177e918 <col:15> Implicit
|-FunctionDecl 0x5583d177e970 prev 0x5583d177e798 <col:1, col:75> col:15 atan2 'double (double, double)' extern
| |-ParmVarDecl 0x5583d177e638 <col:22, col:29> col:29 __y 'double'
| |-ParmVarDecl 0x5583d177e6b8 <col:34, col:41> col:41 __x 'double'
| `-NoThrowAttr 0x5583d177ea20 <col:62>
|-FunctionDecl 0x5583d177ebb0 <col:78, col:154> col:92 __atan2 'double (double, double)' extern
| |-ParmVarDecl 0x5583d177ea90 <col:101, col:108> col:108 __y 'double'
| |-ParmVarDecl 0x5583d177eb10 <col:113, col:120> col:120 __x 'double'
| `-NoThrowAttr 0x5583d177ec60 <col:141>
|-FunctionDecl 0x5583d177ed68 <line:33:16> col:16 implicit cos 'double (double)' extern
| |-ParmVarDecl 0x5583d177ee08 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d177ee78 <col:16> Implicit
|-FunctionDecl 0x5583d177eed0 prev 0x5583d177ed68 <col:2, col:62> col:16 cos 'double (double)' extern
| |-ParmVarDecl 0x5583d177ecd0 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5583d177ef78 <col:49>
|-FunctionDecl 0x5583d177f080 <col:65, col:127> col:79 __cos 'double (double)' extern
| |-ParmVarDecl 0x5583d177efe8 <col:86, col:93> col:93 __x 'double'
| `-NoThrowAttr 0x5583d177f128 <col:114>
|-FunctionDecl 0x5583d177f230 <line:35:16> col:16 implicit sin 'double (double)' extern
| |-ParmVarDecl 0x5583d177f2d0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d177f340 <col:16> Implicit
|-FunctionDecl 0x5583d177f398 prev 0x5583d177f230 <col:2, col:62> col:16 sin 'double (double)' extern
| |-ParmVarDecl 0x5583d177f198 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5583d177f440 <col:49>
|-FunctionDecl 0x5583d177f548 <col:65, col:127> col:79 __sin 'double (double)' extern
| |-ParmVarDecl 0x5583d177f4b0 <col:86, col:93> col:93 __x 'double'
| `-NoThrowAttr 0x5583d1781630 <col:114>
|-FunctionDecl 0x5583d1781738 <line:37:15> col:15 implicit tan 'double (double)' extern
| |-ParmVarDecl 0x5583d17817d8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d1781848 <col:15> Implicit
|-FunctionDecl 0x5583d17818a0 prev 0x5583d1781738 <col:1, col:61> col:15 tan 'double (double)' extern
| |-ParmVarDecl 0x5583d17816a0 <col:20, col:27> col:27 __x 'double'
| `-NoThrowAttr 0x5583d1781948 <col:48>
|-FunctionDecl 0x5583d1781a50 <col:64, col:126> col:78 __tan 'double (double)' extern
| |-ParmVarDecl 0x5583d17819b8 <col:85, col:92> col:92 __x 'double'
| `-NoThrowAttr 0x5583d1781af8 <col:113>
|-FunctionDecl 0x5583d1781c00 <line:42:15> col:15 implicit cosh 'double (double)' extern
| |-ParmVarDecl 0x5583d1781ca0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d1781d10 <col:15> Implicit
|-FunctionDecl 0x5583d1781d68 prev 0x5583d1781c00 <col:1, col:62> col:15 cosh 'double (double)' extern
| |-ParmVarDecl 0x5583d1781b68 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5583d1781e10 <col:49>
|-FunctionDecl 0x5583d1781f18 <col:65, col:128> col:79 __cosh 'double (double)' extern
| |-ParmVarDecl 0x5583d1781e80 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5583d1781fc0 <col:115>
|-FunctionDecl 0x5583d17820c8 <line:44:15> col:15 implicit sinh 'double (double)' extern
| |-ParmVarDecl 0x5583d1782168 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d17821d8 <col:15> Implicit
|-FunctionDecl 0x5583d1782230 prev 0x5583d17820c8 <col:1, col:62> col:15 sinh 'double (double)' extern
| |-ParmVarDecl 0x5583d1782030 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5583d17822d8 <col:49>
|-FunctionDecl 0x5583d17823e0 <col:65, col:128> col:79 __sinh 'double (double)' extern
| |-ParmVarDecl 0x5583d1782348 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5583d1782488 <col:115>
|-FunctionDecl 0x5583d1782590 <line:46:15> col:15 implicit tanh 'double (double)' extern
| |-ParmVarDecl 0x5583d1782640 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d17826b0 <col:15> Implicit
|-FunctionDecl 0x5583d1782708 prev 0x5583d1782590 <col:1, col:62> col:15 tanh 'double (double)' extern
| |-ParmVarDecl 0x5583d17824f8 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5583d17827b0 <col:49>
|-FunctionDecl 0x5583d17828b8 <col:65, col:128> col:79 __tanh 'double (double)' extern
| |-ParmVarDecl 0x5583d1782820 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5583d1782960 <col:115>
|-FunctionDecl 0x5583d1782a68 <line:47:15> col:15 implicit acosh 'double (double)' extern
| |-ParmVarDecl 0x5583d1782b08 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d1782b78 <col:15> Implicit
|-FunctionDecl 0x5583d1782bd0 prev 0x5583d1782a68 <col:1, col:63> col:15 acosh 'double (double)' extern
| |-ParmVarDecl 0x5583d17829d0 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x5583d1782c78 <col:50>
|-FunctionDecl 0x5583d1782d80 <col:66, col:130> col:80 __acosh 'double (double)' extern
| |-ParmVarDecl 0x5583d1782ce8 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x5583d1782e28 <col:117>
|-FunctionDecl 0x5583d1782f30 <line:49:15> col:15 implicit asinh 'double (double)' extern
| |-ParmVarDecl 0x5583d1782fd0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d1783040 <col:15> Implicit
|-FunctionDecl 0x5583d1783098 prev 0x5583d1782f30 <col:1, col:63> col:15 asinh 'double (double)' extern
| |-ParmVarDecl 0x5583d1782e98 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x5583d1783140 <col:50>
|-FunctionDecl 0x5583d1783248 <col:66, col:130> col:80 __asinh 'double (double)' extern
| |-ParmVarDecl 0x5583d17831b0 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x5583d17832f0 <col:117>
|-FunctionDecl 0x5583d17833f8 <line:51:15> col:15 implicit atanh 'double (double)' extern
| |-ParmVarDecl 0x5583d1783498 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d1783508 <col:15> Implicit
|-FunctionDecl 0x5583d1783560 prev 0x5583d17833f8 <col:1, col:63> col:15 atanh 'double (double)' extern
| |-ParmVarDecl 0x5583d1783360 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x5583d1783608 <col:50>
|-FunctionDecl 0x5583d1783730 <col:66, col:130> col:80 __atanh 'double (double)' extern
| |-ParmVarDecl 0x5583d1783698 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x5583d17837d8 <col:117>
|-FunctionDecl 0x5583d17838e0 <line:59:16> col:16 implicit exp 'double (double)' extern
| |-ParmVarDecl 0x5583d1783980 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d17839f0 <col:16> Implicit
|-FunctionDecl 0x5583d1783a48 prev 0x5583d17838e0 <col:2, col:62> col:16 exp 'double (double)' extern
| |-ParmVarDecl 0x5583d1783848 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5583d1783af0 <col:49>
|-FunctionDecl 0x5583d1783bf8 <col:65, col:127> col:79 __exp 'double (double)' extern
| |-ParmVarDecl 0x5583d1783b60 <col:86, col:93> col:93 __x 'double'
| `-NoThrowAttr 0x5583d1783ca0 <col:114>
|-FunctionDecl 0x5583d1783ea8 <line:62:15> col:15 implicit frexp 'double (double, int *)' extern
| |-ParmVarDecl 0x5583d1783f48 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5583d1783fb0 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x5583d1784028 <col:15> Implicit
|-FunctionDecl 0x5583d1784080 prev 0x5583d1783ea8 <col:1, col:80> col:15 frexp 'double (double, int *)' extern
| |-ParmVarDecl 0x5583d1783d10 <col:22, col:29> col:29 __x 'double'
| |-ParmVarDecl 0x5583d1783dc8 <col:34, col:39> col:39 __exponent 'int *'
| `-NoThrowAttr 0x5583d1784130 <col:67>
|-FunctionDecl 0x5583d17842c0 <col:83, col:164> col:97 __frexp 'double (double, int *)' extern
| |-ParmVarDecl 0x5583d17841a0 <col:106, col:113> col:113 __x 'double'
| |-ParmVarDecl 0x5583d1784220 <col:118, col:123> col:123 __exponent 'int *'
| `-NoThrowAttr 0x5583d1784370 <col:151>
|-FunctionDecl 0x5583d1784548 <line:65:15> col:15 implicit ldexp 'double (double, int)' extern
| |-ParmVarDecl 0x5583d17845e8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5583d1784660 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x5583d17846d8 <col:15> Implicit
|-FunctionDecl 0x5583d1784730 prev 0x5583d1784548 <col:1, col:79> col:15 ldexp 'double (double, int)' extern
| |-ParmVarDecl 0x5583d17843e0 <col:22, col:29> col:29 __x 'double'
| |-ParmVarDecl 0x5583d1784460 <col:34, col:38> col:38 __exponent 'int'
| `-NoThrowAttr 0x5583d17847e0 <col:66>
|-FunctionDecl 0x5583d1784970 <col:82, col:162> col:96 __ldexp 'double (double, int)' extern
| |-ParmVarDecl 0x5583d1784850 <col:105, col:112> col:112 __x 'double'
| |-ParmVarDecl 0x5583d17848d0 <col:117, col:121> col:121 __exponent 'int'
| `-NoThrowAttr 0x5583d1784a20 <col:149>
|-FunctionDecl 0x5583d1784b28 <line:68:16> col:16 implicit log 'double (double)' extern
| |-ParmVarDecl 0x5583d1784bc8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d1784c38 <col:16> Implicit
|-FunctionDecl 0x5583d1784c90 prev 0x5583d1784b28 <col:2, col:62> col:16 log 'double (double)' extern
| |-ParmVarDecl 0x5583d1784a90 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5583d1784d38 <col:49>
|-FunctionDecl 0x5583d1784e40 <col:65, col:127> col:79 __log 'double (double)' extern
| |-ParmVarDecl 0x5583d1784da8 <col:86, col:93> col:93 __x 'double'
| `-NoThrowAttr 0x5583d1784ee8 <col:114>
|-FunctionDecl 0x5583d1784ff0 <line:71:15> col:15 implicit log10 'double (double)' extern
| |-ParmVarDecl 0x5583d1785090 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d1785100 <col:15> Implicit
|-FunctionDecl 0x5583d1785158 prev 0x5583d1784ff0 <col:1, col:63> col:15 log10 'double (double)' extern
| |-ParmVarDecl 0x5583d1784f58 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x5583d1785200 <col:50>
|-FunctionDecl 0x5583d1785308 <col:66, col:130> col:80 __log10 'double (double)' extern
| |-ParmVarDecl 0x5583d1785270 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x5583d17853b0 <col:117>
|-FunctionDecl 0x5583d17855b8 <line:74:15> col:15 implicit modf 'double (double, double *)' extern
| |-ParmVarDecl 0x5583d1785e80 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5583d1785ee8 <<invalid sloc>> <invalid sloc> 'double *'
| `-NoThrowAttr 0x5583d1785f60 <col:15> Implicit
|-FunctionDecl 0x5583d1785fb8 prev 0x5583d17855b8 <col:1, col:78> col:15 modf 'double (double, double *)' extern
| |-ParmVarDecl 0x5583d1785420 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x5583d17854d8 <col:33, col:41> col:41 __iptr 'double *'
| `-NoThrowAttr 0x5583d1786068 <col:65>
|-FunctionDecl 0x5583d1786218 <col:81, col:194> col:95 __modf 'double (double, double *)' extern
| |-ParmVarDecl 0x5583d17860d8 <col:103, col:110> col:110 __x 'double'
| |-ParmVarDecl 0x5583d1786158 <col:115, col:123> col:123 __iptr 'double *'
| |-NoThrowAttr 0x5583d17862c8 <col:147>
| `-NonNullAttr 0x5583d1786320 <col:178, col:192> 2
|-FunctionDecl 0x5583d1786408 <line:75:15> col:15 implicit expm1 'double (double)' extern
| |-ParmVarDecl 0x5583d17864a8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d1786518 <col:15> Implicit
|-FunctionDecl 0x5583d1786570 prev 0x5583d1786408 <col:1, col:63> col:15 expm1 'double (double)' extern
| |-ParmVarDecl 0x5583d1786370 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x5583d1786618 <col:50>
|-FunctionDecl 0x5583d1786720 <col:66, col:130> col:80 __expm1 'double (double)' extern
| |-ParmVarDecl 0x5583d1786688 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x5583d17867c8 <col:117>
|-FunctionDecl 0x5583d17868d0 <line:78:15> col:15 implicit log1p 'double (double)' extern
| |-ParmVarDecl 0x5583d1786970 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d17869e0 <col:15> Implicit
|-FunctionDecl 0x5583d1786a38 prev 0x5583d17868d0 <col:1, col:63> col:15 log1p 'double (double)' extern
| |-ParmVarDecl 0x5583d1786838 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x5583d1786ae0 <col:50>
|-FunctionDecl 0x5583d1786be8 <col:66, col:130> col:80 __log1p 'double (double)' extern
| |-ParmVarDecl 0x5583d1786b50 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x5583d1786c90 <col:117>
|-FunctionDecl 0x5583d1786d98 <line:81:15> col:15 implicit logb 'double (double)' extern
| |-ParmVarDecl 0x5583d1786e90 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d1786f00 <col:15> Implicit
|-FunctionDecl 0x5583d1786f58 prev 0x5583d1786d98 <col:1, col:62> col:15 logb 'double (double)' extern
| |-ParmVarDecl 0x5583d1786d00 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5583d1787000 <col:49>
|-FunctionDecl 0x5583d1787108 <col:65, col:128> col:79 __logb 'double (double)' extern
| |-ParmVarDecl 0x5583d1787070 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5583d17871b0 <col:115>
|-FunctionDecl 0x5583d17872b8 <line:88:15> col:15 implicit exp2 'double (double)' extern
| |-ParmVarDecl 0x5583d1787358 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d17873c8 <col:15> Implicit
|-FunctionDecl 0x5583d1787420 prev 0x5583d17872b8 <col:1, col:62> col:15 exp2 'double (double)' extern
| |-ParmVarDecl 0x5583d1787220 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5583d17874c8 <col:49>
|-FunctionDecl 0x5583d17875d0 <col:65, col:128> col:79 __exp2 'double (double)' extern
| |-ParmVarDecl 0x5583d1787538 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5583d1787678 <col:115>
|-FunctionDecl 0x5583d1787780 <line:91:15> col:15 implicit log2 'double (double)' extern
| |-ParmVarDecl 0x5583d1787820 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d1787890 <col:15> Implicit
|-FunctionDecl 0x5583d17878e8 prev 0x5583d1787780 <col:1, col:62> col:15 log2 'double (double)' extern
| |-ParmVarDecl 0x5583d17876e8 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5583d1787990 <col:49>
|-FunctionDecl 0x5583d1787a98 <col:65, col:128> col:79 __log2 'double (double)' extern
| |-ParmVarDecl 0x5583d1787a00 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5583d1787b40 <col:115>
|-FunctionDecl 0x5583d1787cd0 <line:92:16> col:16 implicit pow 'double (double, double)' extern
| |-ParmVarDecl 0x5583d1787d70 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5583d1787dd8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d1787e50 <col:16> Implicit
|-FunctionDecl 0x5583d1787ed0 prev 0x5583d1787cd0 <col:2, col:74> col:16 pow 'double (double, double)' extern
| |-ParmVarDecl 0x5583d1787bb0 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x5583d1787c30 <col:33, col:40> col:40 __y 'double'
| `-NoThrowAttr 0x5583d1787f80 <col:61>
|-FunctionDecl 0x5583d1788110 <col:77, col:151> col:91 __pow 'double (double, double)' extern
| |-ParmVarDecl 0x5583d1787ff0 <col:98, col:105> col:105 __x 'double'
| |-ParmVarDecl 0x5583d1788070 <col:110, col:117> col:117 __y 'double'
| `-NoThrowAttr 0x5583d17881c0 <col:138>
|-FunctionDecl 0x5583d17882c8 <line:95:15> col:15 implicit sqrt 'double (double)' extern
| |-ParmVarDecl 0x5583d1788368 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d17883d8 <col:15> Implicit
|-FunctionDecl 0x5583d1788430 prev 0x5583d17882c8 <col:1, col:62> col:15 sqrt 'double (double)' extern
| |-ParmVarDecl 0x5583d1788230 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5583d17884d8 <col:49>
|-FunctionDecl 0x5583d17885e0 <col:65, col:128> col:79 __sqrt 'double (double)' extern
| |-ParmVarDecl 0x5583d1788548 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5583d1788688 <col:115>
|-FunctionDecl 0x5583d1788818 <line:101:15> col:15 implicit hypot 'double (double, double)' extern
| |-ParmVarDecl 0x5583d17888b8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5583d1788920 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d1788998 <col:15> Implicit
|-FunctionDecl 0x5583d17889f0 prev 0x5583d1788818 <col:1, col:75> col:15 hypot 'double (double, double)' extern
| |-ParmVarDecl 0x5583d17886f8 <col:22, col:29> col:29 __x 'double'
| |-ParmVarDecl 0x5583d1788778 <col:34, col:41> col:41 __y 'double'
| `-NoThrowAttr 0x5583d1788aa0 <col:62>
|-FunctionDecl 0x5583d1788c30 <col:78, col:154> col:92 __hypot 'double (double, double)' extern
| |-ParmVarDecl 0x5583d1788b10 <col:101, col:108> col:108 __x 'double'
| |-ParmVarDecl 0x5583d1788b90 <col:113, col:120> col:120 __y 'double'
| `-NoThrowAttr 0x5583d1788ce0 <col:141>
|-FunctionDecl 0x5583d1788de8 <line:108:15> col:15 implicit cbrt 'double (double)' extern
| |-ParmVarDecl 0x5583d1788eb0 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5583d1788f20 <col:15> Implicit
| `-ConstAttr 0x5583d1788f78 <col:15> Implicit
|-FunctionDecl 0x5583d1788fa0 prev 0x5583d1788de8 <col:1, col:62> col:15 cbrt 'double (double)' extern
| |-ParmVarDecl 0x5583d1788d50 <col:21, col:28> col:28 __x 'double'
| |-ConstAttr 0x5583d17890a0 <col:15> Inherited Implicit
| `-NoThrowAttr 0x5583d1789048 <col:49>
|-FunctionDecl 0x5583d1789178 <col:65, col:128> col:79 __cbrt 'double (double)' extern
| |-ParmVarDecl 0x5583d17890e0 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5583d1789220 <col:115>
|-FunctionDecl 0x5583d1789328 <line:109:15> col:15 implicit used ceil 'double (double)' extern
| |-ParmVarDecl 0x5583d17893c8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5583d1789438 <col:15> Implicit
| `-ConstAttr 0x5583d1789490 <col:15> Implicit
|-FunctionDecl 0x5583d17894b8 prev 0x5583d1789328 <col:1, col:90> col:15 used ceil 'double (double)' extern
| |-ParmVarDecl 0x5583d1789290 <col:21, col:28> col:28 __x 'double'
| |-NoThrowAttr 0x5583d1789560 <col:49>
| `-ConstAttr 0x5583d17895b8 <col:80>
|-FunctionDecl 0x5583d1789690 <col:93, col:184> col:107 __ceil 'double (double)' extern
| |-ParmVarDecl 0x5583d17895f8 <col:115, col:122> col:122 __x 'double'
| |-NoThrowAttr 0x5583d1789738 <col:143>
| `-ConstAttr 0x5583d1789790 <col:174>
|-FunctionDecl 0x5583d1789868 <line:112:15> col:15 implicit fabs 'double (double)' extern
| |-ParmVarDecl 0x5583d1789908 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5583d1789978 <col:15> Implicit
| `-ConstAttr 0x5583d17899d0 <col:15> Implicit
|-FunctionDecl 0x5583d17899f8 prev 0x5583d1789868 <col:1, col:90> col:15 fabs 'double (double)' extern
| |-ParmVarDecl 0x5583d17897d0 <col:21, col:28> col:28 __x 'double'
| |-NoThrowAttr 0x5583d1789aa0 <col:49>
| `-ConstAttr 0x5583d1789af8 <col:80>
|-FunctionDecl 0x5583d1789bd0 <col:93, col:184> col:107 __fabs 'double (double)' extern
| |-ParmVarDecl 0x5583d1789b38 <col:115, col:122> col:122 __x 'double'
| |-NoThrowAttr 0x5583d1789c78 <col:143>
| `-ConstAttr 0x5583d1789cd0 <col:174>
|-FunctionDecl 0x5583d1789da8 <line:115:15> col:15 implicit floor 'double (double)' extern
| |-ParmVarDecl 0x5583d1789e48 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5583d1789ec8 <col:15> Implicit
| `-ConstAttr 0x5583d1789f20 <col:15> Implicit
|-FunctionDecl 0x5583d1789f48 prev 0x5583d1789da8 <col:1, col:91> col:15 floor 'double (double)' extern
| |-ParmVarDecl 0x5583d1789d10 <col:22, col:29> col:29 __x 'double'
| |-NoThrowAttr 0x5583d1789ff0 <col:50>
| `-ConstAttr 0x5583d178a048 <col:81>
|-FunctionDecl 0x5583d178a120 <col:94, col:186> col:108 __floor 'double (double)' extern
| |-ParmVarDecl 0x5583d178a088 <col:117, col:124> col:124 __x 'double'
| |-NoThrowAttr 0x5583d178a1c8 <col:145>
| `-ConstAttr 0x5583d178a220 <col:176>
|-FunctionDecl 0x5583d178a380 <line:118:15> col:15 implicit fmod 'double (double, double)' extern
| |-ParmVarDecl 0x5583d178a420 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5583d178a488 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d178a500 <col:15> Implicit
|-FunctionDecl 0x5583d178a558 prev 0x5583d178a380 <col:1, col:74> col:15 fmod 'double (double, double)' extern
| |-ParmVarDecl 0x5583d178a260 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x5583d178a2e0 <col:33, col:40> col:40 __y 'double'
| `-NoThrowAttr 0x5583d178a608 <col:61>
|-FunctionDecl 0x5583d178a798 <col:77, col:152> col:91 __fmod 'double (double, double)' extern
| |-ParmVarDecl 0x5583d178a678 <col:99, col:106> col:106 __x 'double'
| |-ParmVarDecl 0x5583d178a6f8 <col:111, col:118> col:118 __y 'double'
| `-NoThrowAttr 0x5583d178a848 <col:139>
|-FunctionDecl 0x5583d178a988 <line:123:1, col:94> col:12 used __isinf 'int (double)' extern
| |-ParmVarDecl 0x5583d178a8b8 <col:21, col:28> col:28 __value 'double'
| |-NoThrowAttr 0x5583d178aa30 <col:53>
| `-ConstAttr 0x5583d178aa88 <col:84>
|-FunctionDecl 0x5583d178ab60 <line:126:12> col:12 implicit __finite 'int (double)' extern
| |-ParmVarDecl 0x5583d178ac00 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5583d178ac70 <col:12> Implicit
| `-ConstAttr 0x5583d178acc8 <col:12> Implicit
|-FunctionDecl 0x5583d178acf0 prev 0x5583d178ab60 <col:1, col:95> col:12 __finite 'int (double)' extern
| |-ParmVarDecl 0x5583d178aac8 <col:22, col:29> col:29 __value 'double'
| |-NoThrowAttr 0x5583d178ad98 <col:54>
| `-ConstAttr 0x5583d178adf0 <col:85>
|-FunctionDecl 0x5583d178bf10 <line:132:1, col:92> col:12 isinf 'int (double)' extern
| |-ParmVarDecl 0x5583d178ae30 <col:19, col:26> col:26 __value 'double'
| |-NoThrowAttr 0x5583d178bfb8 <col:51>
| `-ConstAttr 0x5583d178c010 <col:82>
|-FunctionDecl 0x5583d178c0e8 <line:135:12> col:12 implicit finite 'int (double)' extern
| |-ParmVarDecl 0x5583d178c188 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5583d178c1f8 <col:12> Implicit
| `-ConstAttr 0x5583d178c250 <col:12> Implicit
|-FunctionDecl 0x5583d178c278 prev 0x5583d178c0e8 <col:1, col:93> col:12 finite 'int (double)' extern
| |-ParmVarDecl 0x5583d178c050 <col:20, col:27> col:27 __value 'double'
| |-NoThrowAttr 0x5583d178c320 <col:52>
| `-ConstAttr 0x5583d178c378 <col:83>
|-FunctionDecl 0x5583d178c4d8 <line:138:1, col:74> col:15 drem 'double (double, double)' extern
| |-ParmVarDecl 0x5583d178c3b8 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x5583d178c438 <col:33, col:40> col:40 __y 'double'
| `-NoThrowAttr 0x5583d178c588 <col:61>
|-FunctionDecl 0x5583d178c718 <col:77, col:152> col:91 __drem 'double (double, double)' extern
| |-ParmVarDecl 0x5583d178c5f8 <col:99, col:106> col:106 __x 'double'
| |-ParmVarDecl 0x5583d178c678 <col:111, col:118> col:118 __y 'double'
| `-NoThrowAttr 0x5583d178c7c8 <col:139>
|-FunctionDecl 0x5583d178c8d0 <line:142:1, col:69> col:15 significand 'double (double)' extern
| |-ParmVarDecl 0x5583d178c838 <col:28, col:35> col:35 __x 'double'
| `-NoThrowAttr 0x5583d178c978 <col:56>
|-FunctionDecl 0x5583d178ca80 <col:72, col:142> col:86 __significand 'double (double)' extern
| |-ParmVarDecl 0x5583d178c9e8 <col:101, col:108> col:108 __x 'double'
| `-NoThrowAttr 0x5583d178cb28 <col:129>
|-FunctionDecl 0x5583d178ccb8 <line:148:15> col:15 implicit copysign 'double (double, double)' extern
| |-ParmVarDecl 0x5583d178cd58 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5583d178cdc0 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5583d178ce38 <col:15> Implicit
| `-ConstAttr 0x5583d178ce90 <col:15> Implicit
|-FunctionDecl 0x5583d178cef0 prev 0x5583d178ccb8 <col:1, col:106> col:15 copysign 'double (double, double)' extern
| |-ParmVarDecl 0x5583d178cb98 <col:25, col:32> col:32 __x 'double'
| |-ParmVarDecl 0x5583d178cc18 <col:37, col:44> col:44 __y 'double'
| |-NoThrowAttr 0x5583d178cfa0 <col:65>
| `-ConstAttr 0x5583d178cff8 <col:96>
|-FunctionDecl 0x5583d178d158 <col:109, col:216> col:123 __copysign 'double (double, double)' extern
| |-ParmVarDecl 0x5583d178d038 <col:135, col:142> col:142 __x 'double'
| |-ParmVarDecl 0x5583d178d0b8 <col:147, col:154> col:154 __y 'double'
| |-NoThrowAttr 0x5583d178d208 <col:175>
| `-ConstAttr 0x5583d178d260 <col:206>
|-FunctionDecl 0x5583d178d378 <line:155:15> col:15 implicit nan 'double (const char *)' extern
| |-ParmVarDecl 0x5583d178d418 <<invalid sloc>> <invalid sloc> 'const char *'
| |-NoThrowAttr 0x5583d178d488 <col:15> Implicit
| `-PureAttr 0x5583d178d4e0 <col:15> Implicit
|-FunctionDecl 0x5583d178d508 prev 0x5583d178d378 <col:1, col:97> col:15 nan 'double (const char *)' extern
| |-ParmVarDecl 0x5583d178d2a0 <col:20, col:32> col:32 __tagb 'const char *'
| |-PureAttr 0x5583d178d630 <col:15> Inherited Implicit
| |-NoThrowAttr 0x5583d178d5b0 <col:56>
| `-ConstAttr 0x5583d178d608 <col:87>
|-FunctionDecl 0x5583d178d708 <col:100, col:198> col:114 __nan 'double (const char *)' extern
| |-ParmVarDecl 0x5583d178d670 <col:121, col:133> col:133 __tagb 'const char *'
| |-NoThrowAttr 0x5583d178d7b0 <col:157>
| `-ConstAttr 0x5583d178d808 <col:188>
|-FunctionDecl 0x5583d178d8e0 <line:161:1, col:94> col:12 used __isnan 'int (double)' extern
| |-ParmVarDecl 0x5583d178d848 <col:21, col:28> col:28 __value 'double'
| |-NoThrowAttr 0x5583d178d988 <col:53>
| `-ConstAttr 0x5583d178d9e0 <col:84>
|-FunctionDecl 0x5583d178dab8 <line:165:1, col:92> col:12 isnan 'int (double)' extern
| |-ParmVarDecl 0x5583d178da20 <col:19, col:26> col:26 __value 'double'
| |-NoThrowAttr 0x5583d178db60 <col:51>
| `-ConstAttr 0x5583d178dbb8 <col:82>
|-FunctionDecl 0x5583d178dc90 <line:168:1, col:56> col:15 j0 'double (double)' extern
| |-ParmVarDecl 0x5583d178dbf8 <col:19> col:25 'double'
| `-NoThrowAttr 0x5583d178dd38 <col:43>
|-FunctionDecl 0x5583d178de40 <col:59, col:116> col:73 __j0 'double (double)' extern
| |-ParmVarDecl 0x5583d178dda8 <col:79> col:85 'double'
| `-NoThrowAttr 0x5583d178df00 <col:103>
|-FunctionDecl 0x5583d178e008 <line:169:1, col:56> col:15 j1 'double (double)' extern
| |-ParmVarDecl 0x5583d178df70 <col:19> col:25 'double'
| `-NoThrowAttr 0x5583d178e0b0 <col:43>
|-FunctionDecl 0x5583d178e1b8 <col:59, col:116> col:73 __j1 'double (double)' extern
| |-ParmVarDecl 0x5583d178e120 <col:79> col:85 'double'
| `-NoThrowAttr 0x5583d178e260 <col:103>
|-FunctionDecl 0x5583d178e438 <line:170:1, col:61> col:15 jn 'double (int, double)' extern
| |-ParmVarDecl 0x5583d178e2d0 <col:19> col:22 'int'
| |-ParmVarDecl 0x5583d178e350 <col:24> col:30 'double'
| `-NoThrowAttr 0x5583d178e4e8 <col:48>
|-FunctionDecl 0x5583d178e678 <col:64, col:126> col:78 __jn 'double (int, double)' extern
| |-ParmVarDecl 0x5583d178e558 <col:84> col:87 'int'
| |-ParmVarDecl 0x5583d178e5d8 <col:89> col:95 'double'
| `-NoThrowAttr 0x5583d178e728 <col:113>
|-FunctionDecl 0x5583d178e830 <line:171:1, col:56> col:15 y0 'double (double)' extern
| |-ParmVarDecl 0x5583d178e798 <col:19> col:25 'double'
| `-NoThrowAttr 0x5583d178e8d8 <col:43>
|-FunctionDecl 0x5583d178e9e0 <col:59, col:116> col:73 __y0 'double (double)' extern
| |-ParmVarDecl 0x5583d178e948 <col:79> col:85 'double'
| `-NoThrowAttr 0x5583d178ea88 <col:103>
|-FunctionDecl 0x5583d178eb90 <line:172:1, col:56> col:15 y1 'double (double)' extern
| |-ParmVarDecl 0x5583d178eaf8 <col:19> col:25 'double'
| `-NoThrowAttr 0x5583d178ec38 <col:43>
|-FunctionDecl 0x5583d178ed40 <col:59, col:116> col:73 __y1 'double (double)' extern
| |-ParmVarDecl 0x5583d178eca8 <col:79> col:85 'double'
| `-NoThrowAttr 0x5583d178ede8 <col:103>
|-FunctionDecl 0x5583d178efb0 <line:173:1, col:61> col:15 yn 'double (int, double)' extern
| |-ParmVarDecl 0x5583d178ee58 <col:19> col:22 'int'
| |-ParmVarDecl 0x5583d178ef10 <col:24> col:30 'double'
| `-NoThrowAttr 0x5583d178f060 <col:48>
|-FunctionDecl 0x5583d178f1f0 <col:64, col:126> col:78 __yn 'double (int, double)' extern
| |-ParmVarDecl 0x5583d178f0d0 <col:84> col:87 'int'
| |-ParmVarDecl 0x5583d178f150 <col:89> col:95 'double'
| `-NoThrowAttr 0x5583d178f2a0 <col:113>
|-FunctionDecl 0x5583d178f3a8 <line:180:15> col:15 implicit erf 'double (double)' extern
| |-ParmVarDecl 0x5583d178f448 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d178f4b8 <col:15> Implicit
|-FunctionDecl 0x5583d178f510 prev 0x5583d178f3a8 <col:1, col:57> col:15 erf 'double (double)' extern
| |-ParmVarDecl 0x5583d178f310 <col:20> col:26 'double'
| `-NoThrowAttr 0x5583d178f5b8 <col:44>
|-FunctionDecl 0x5583d178f6c0 <col:60, col:118> col:74 __erf 'double (double)' extern
| |-ParmVarDecl 0x5583d178f628 <col:81> col:87 'double'
| `-NoThrowAttr 0x5583d178f768 <col:105>
|-FunctionDecl 0x5583d178f870 <line:181:15> col:15 implicit erfc 'double (double)' extern
| |-ParmVarDecl 0x5583d178f910 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d178f980 <col:15> Implicit
|-FunctionDecl 0x5583d178f9d8 prev 0x5583d178f870 <col:1, col:58> col:15 erfc 'double (double)' extern
| |-ParmVarDecl 0x5583d178f7d8 <col:21> col:27 'double'
| `-NoThrowAttr 0x5583d178fa80 <col:45>
|-FunctionDecl 0x5583d178fb88 <col:61, col:120> col:75 __erfc 'double (double)' extern
| |-ParmVarDecl 0x5583d178faf0 <col:83> col:89 'double'
| `-NoThrowAttr 0x5583d178fc30 <col:107>
|-FunctionDecl 0x5583d178fd38 <line:182:15> col:15 implicit lgamma 'double (double)' extern
| |-ParmVarDecl 0x5583d178fdd8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d178fe48 <col:15> Implicit
|-FunctionDecl 0x5583d178ff20 prev 0x5583d178fd38 <col:1, col:60> col:15 lgamma 'double (double)' extern
| |-ParmVarDecl 0x5583d178fca0 <col:23> col:29 'double'
| `-NoThrowAttr 0x5583d178ffc8 <col:47>
|-FunctionDecl 0x5583d17900d0 <col:63, col:124> col:77 __lgamma 'double (double)' extern
| |-ParmVarDecl 0x5583d1790038 <col:87> col:93 'double'
| `-NoThrowAttr 0x5583d1790178 <col:111>
|-FunctionDecl 0x5583d1790280 <line:189:15> col:15 implicit tgamma 'double (double)' extern
| |-ParmVarDecl 0x5583d1790320 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d1790390 <col:15> Implicit
|-FunctionDecl 0x5583d17903e8 prev 0x5583d1790280 <col:1, col:60> col:15 tgamma 'double (double)' extern
| |-ParmVarDecl 0x5583d17901e8 <col:23> col:29 'double'
| `-NoThrowAttr 0x5583d1790490 <col:47>
|-FunctionDecl 0x5583d1790598 <col:63, col:124> col:77 __tgamma 'double (double)' extern
| |-ParmVarDecl 0x5583d1790500 <col:87> col:93 'double'
| `-NoThrowAttr 0x5583d1790640 <col:111>
|-FunctionDecl 0x5583d1790748 <line:195:1, col:59> col:15 gamma 'double (double)' extern
| |-ParmVarDecl 0x5583d17906b0 <col:22> col:28 'double'
| `-NoThrowAttr 0x5583d17907f0 <col:46>
|-FunctionDecl 0x5583d17908f8 <col:62, col:122> col:76 __gamma 'double (double)' extern
| |-ParmVarDecl 0x5583d1790860 <col:85> col:91 'double'
| `-NoThrowAttr 0x5583d17909a0 <col:109>
|-FunctionDecl 0x5583d1790b30 <line:202:1, col:79> col:15 lgamma_r 'double (double, int *)' extern
| |-ParmVarDecl 0x5583d1790a10 <col:25> col:31 'double'
| |-ParmVarDecl 0x5583d1790a90 <col:33, col:38> col:38 __signgamp 'int *'
| `-NoThrowAttr 0x5583d1790be0 <col:66>
|-FunctionDecl 0x5583d1790d70 <col:82, col:162> col:96 __lgamma_r 'double (double, int *)' extern
| |-ParmVarDecl 0x5583d1790c50 <col:108> col:114 'double'
| |-ParmVarDecl 0x5583d1790cd0 <col:116, col:121> col:121 __signgamp 'int *'
| `-NoThrowAttr 0x5583d1790e20 <col:149>
|-FunctionDecl 0x5583d1790f60 <line:210:15> col:15 implicit used rint 'double (double)' extern
| |-ParmVarDecl 0x5583d1791000 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5583d1791070 <col:15> Implicit
| `-ConstAttr 0x5583d17910c8 <col:15> Implicit
|-FunctionDecl 0x5583d17910f0 prev 0x5583d1790f60 <col:1, col:62> col:15 used rint 'double (double)' extern
| |-ParmVarDecl 0x5583d1790e90 <col:21, col:28> col:28 __x 'double'
| |-ConstAttr 0x5583d17911f0 <col:15> Inherited Implicit
| `-NoThrowAttr 0x5583d1791198 <col:49>
|-FunctionDecl 0x5583d17912c8 <col:65, col:128> col:79 __rint 'double (double)' extern
| |-ParmVarDecl 0x5583d1791230 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5583d1791370 <col:115>
|-FunctionDecl 0x5583d1791500 <line:213:15> col:15 implicit nextafter 'double (double, double)' extern
| |-ParmVarDecl 0x5583d17915a0 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5583d1791608 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d1791680 <col:15> Implicit
|-FunctionDecl 0x5583d17916d8 prev 0x5583d1791500 <col:1, col:107> col:15 nextafter 'double (double, double)' extern
| |-ParmVarDecl 0x5583d17913e0 <col:26, col:33> col:33 __x 'double'
| |-ParmVarDecl 0x5583d1791460 <col:38, col:45> col:45 __y 'double'
| |-NoThrowAttr 0x5583d1791788 <col:66>
| `-ConstAttr 0x5583d17917e0 <col:97>
|-FunctionDecl 0x5583d1791940 <col:110, col:218> col:124 __nextafter 'double (double, double)' extern
| |-ParmVarDecl 0x5583d1791820 <col:137, col:144> col:144 __x 'double'
| |-ParmVarDecl 0x5583d17918a0 <col:149, col:156> col:156 __y 'double'
| |-NoThrowAttr 0x5583d17919f0 <col:177>
| `-ConstAttr 0x5583d1791a48 <col:208>
|-FunctionDecl 0x5583d1791be8 <line:215:15> col:15 implicit nexttoward 'double (double, long double)' extern
| |-ParmVarDecl 0x5583d1791c88 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5583d1791cf0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d1791d68 <col:15> Implicit
|-FunctionDecl 0x5583d1791dc0 prev 0x5583d1791be8 <col:1, col:113> col:15 nexttoward 'double (double, long double)' extern
| |-ParmVarDecl 0x5583d1791a88 <col:27, col:34> col:34 __x 'double'
| |-ParmVarDecl 0x5583d1791b08 <col:39, col:51> col:51 __y 'long double'
| |-NoThrowAttr 0x5583d1791e70 <col:72>
| `-ConstAttr 0x5583d1791ec8 <col:103>
|-FunctionDecl 0x5583d1792060 <col:116, col:230> col:130 __nexttoward 'double (double, long double)' extern
| |-ParmVarDecl 0x5583d1791f40 <col:144, col:151> col:151 __x 'double'
| |-ParmVarDecl 0x5583d1791fc0 <col:156, col:168> col:168 __y 'long double'
| |-NoThrowAttr 0x5583d1792110 <col:189>
| `-ConstAttr 0x5583d1792168 <col:220>
|-FunctionDecl 0x5583d17922c8 <line:219:15> col:15 implicit remainder 'double (double, double)' extern
| |-ParmVarDecl 0x5583d1792368 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5583d17923d0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d1792448 <col:15> Implicit
|-FunctionDecl 0x5583d17924a0 prev 0x5583d17922c8 <col:1, col:79> col:15 remainder 'double (double, double)' extern
| |-ParmVarDecl 0x5583d17921a8 <col:26, col:33> col:33 __x 'double'
| |-ParmVarDecl 0x5583d1792228 <col:38, col:45> col:45 __y 'double'
| `-NoThrowAttr 0x5583d1792550 <col:66>
|-FunctionDecl 0x5583d17926e0 <col:82, col:162> col:96 __remainder 'double (double, double)' extern
| |-ParmVarDecl 0x5583d17925c0 <col:109, col:116> col:116 __x 'double'
| |-ParmVarDecl 0x5583d1792640 <col:121, col:128> col:128 __y 'double'
| `-NoThrowAttr 0x5583d1792790 <col:149>
|-FunctionDecl 0x5583d1792920 <line:223:15> col:15 implicit scalbn 'double (double, int)' extern
| |-ParmVarDecl 0x5583d17929c0 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5583d1792a28 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x5583d1792aa0 <col:15> Implicit
|-FunctionDecl 0x5583d1792af8 prev 0x5583d1792920 <col:1, col:73> col:15 scalbn 'double (double, int)' extern
| |-ParmVarDecl 0x5583d1792800 <col:23, col:30> col:30 __x 'double'
| |-ParmVarDecl 0x5583d1792880 <col:35, col:39> col:39 __n 'int'
| `-NoThrowAttr 0x5583d1792ba8 <col:60>
|-FunctionDecl 0x5583d1792d38 <col:76, col:150> col:90 __scalbn 'double (double, int)' extern
| |-ParmVarDecl 0x5583d1792c18 <col:100, col:107> col:107 __x 'double'
| |-ParmVarDecl 0x5583d1792c98 <col:112, col:116> col:116 __n 'int'
| `-NoThrowAttr 0x5583d1792de8 <col:137>
|-FunctionDecl 0x5583d1792f50 <line:227:12> col:12 implicit ilogb 'int (double)' extern
| |-ParmVarDecl 0x5583d1792ff0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d1793060 <col:12> Implicit
|-FunctionDecl 0x5583d17930b8 prev 0x5583d1792f50 <col:1, col:60> col:12 ilogb 'int (double)' extern
| |-ParmVarDecl 0x5583d1792e58 <col:19, col:26> col:26 __x 'double'
| `-NoThrowAttr 0x5583d1793160 <col:47>
|-FunctionDecl 0x5583d1793268 <col:63, col:124> col:74 __ilogb 'int (double)' extern
| |-ParmVarDecl 0x5583d17931d0 <col:83, col:90> col:90 __x 'double'
| `-NoThrowAttr 0x5583d1793310 <col:111>
|-FunctionDecl 0x5583d17934e8 <line:232:15> col:15 implicit scalbln 'double (double, long)' extern
| |-ParmVarDecl 0x5583d1793588 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5583d17935f0 <<invalid sloc>> <invalid sloc> 'long'
| `-NoThrowAttr 0x5583d1793668 <col:15> Implicit
|-FunctionDecl 0x5583d17936c0 prev 0x5583d17934e8 <col:1, col:79> col:15 scalbln 'double (double, long)' extern
| |-ParmVarDecl 0x5583d1793380 <col:24, col:31> col:31 __x 'double'
| |-ParmVarDecl 0x5583d1793400 <col:36, col:45> col:45 __n 'long'
| `-NoThrowAttr 0x5583d1793770 <col:66>
|-FunctionDecl 0x5583d1793900 <col:82, col:162> col:96 __scalbln 'double (double, long)' extern
| |-ParmVarDecl 0x5583d17937e0 <col:107, col:114> col:114 __x 'double'
| |-ParmVarDecl 0x5583d1793860 <col:119, col:128> col:128 __n 'long'
| `-NoThrowAttr 0x5583d17939b0 <col:149>
|-FunctionDecl 0x5583d1793ab8 <line:236:15> col:15 implicit nearbyint 'double (double)' extern
| |-ParmVarDecl 0x5583d1793b58 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5583d1793bc8 <col:15> Implicit
| `-ConstAttr 0x5583d1793c20 <col:15> Implicit
|-FunctionDecl 0x5583d1793c48 prev 0x5583d1793ab8 <col:1, col:67> col:15 nearbyint 'double (double)' extern
| |-ParmVarDecl 0x5583d1793a20 <col:26, col:33> col:33 __x 'double'
| |-ConstAttr 0x5583d1793d48 <col:15> Inherited Implicit
| `-NoThrowAttr 0x5583d1793cf0 <col:54>
|-FunctionDecl 0x5583d1793e20 <col:70, col:138> col:84 __nearbyint 'double (double)' extern
| |-ParmVarDecl 0x5583d1793d88 <col:97, col:104> col:104 __x 'double'
| `-NoThrowAttr 0x5583d1793ec8 <col:125>
|-FunctionDecl 0x5583d1793ff8 <line:240:15> col:15 implicit round 'double (double)' extern
| |-ParmVarDecl 0x5583d1794098 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5583d1794108 <col:15> Implicit
| `-ConstAttr 0x5583d1794160 <col:15> Implicit
|-FunctionDecl 0x5583d1794188 prev 0x5583d1793ff8 <col:1, col:91> col:15 round 'double (double)' extern
| |-ParmVarDecl 0x5583d1793f60 <col:22, col:29> col:29 __x 'double'
| |-NoThrowAttr 0x5583d1794230 <col:50>
| `-ConstAttr 0x5583d1794288 <col:81>
|-FunctionDecl 0x5583d1794360 <col:94, col:186> col:108 __round 'double (double)' extern
| |-ParmVarDecl 0x5583d17942c8 <col:117, col:124> col:124 __x 'double'
| |-NoThrowAttr 0x5583d1794408 <col:145>
| `-ConstAttr 0x5583d1794460 <col:176>
|-FunctionDecl 0x5583d1794538 <line:244:15> col:15 implicit trunc 'double (double)' extern
| |-ParmVarDecl 0x5583d17945d8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5583d1794648 <col:15> Implicit
| `-ConstAttr 0x5583d17946a0 <col:15> Implicit
|-FunctionDecl 0x5583d17946c8 prev 0x5583d1794538 <col:1, col:91> col:15 trunc 'double (double)' extern
| |-ParmVarDecl 0x5583d17944a0 <col:22, col:29> col:29 __x 'double'
| |-NoThrowAttr 0x5583d1794770 <col:50>
| `-ConstAttr 0x5583d17947c8 <col:81>
|-FunctionDecl 0x5583d17948a0 <col:94, col:186> col:108 __trunc 'double (double)' extern
| |-ParmVarDecl 0x5583d1794808 <col:117, col:124> col:124 __x 'double'
| |-NoThrowAttr 0x5583d1794948 <col:145>
| `-ConstAttr 0x5583d17949a0 <col:176>
|-FunctionDecl 0x5583d1794bd8 <line:249:15> col:15 implicit remquo 'double (double, double, int *)' extern
| |-ParmVarDecl 0x5583d1794c78 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5583d1794ce0 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5583d1794d48 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x5583d1794dc8 <col:15> Implicit
|-FunctionDecl 0x5583d1794e20 prev 0x5583d1794bd8 <col:1, col:88> col:15 remquo 'double (double, double, int *)' extern
| |-ParmVarDecl 0x5583d17949e0 <col:23, col:30> col:30 __x 'double'
| |-ParmVarDecl 0x5583d1794a60 <col:35, col:42> col:42 __y 'double'
| |-ParmVarDecl 0x5583d1794ae0 <col:47, col:52> col:52 __quo 'int *'
| `-NoThrowAttr 0x5583d1794ed8 <col:75>
|-FunctionDecl 0x5583d1795118 <col:91, col:180> col:105 __remquo 'double (double, double, int *)' extern
| |-ParmVarDecl 0x5583d1794f70 <col:115, col:122> col:122 __x 'double'
| |-ParmVarDecl 0x5583d1794ff0 <col:127, col:134> col:134 __y 'double'
| |-ParmVarDecl 0x5583d1795070 <col:139, col:144> col:144 __quo 'int *'
| `-NoThrowAttr 0x5583d17951d0 <col:167>
|-FunctionDecl 0x5583d1795318 <line:256:17> col:17 implicit lrint 'long (double)' extern
| |-ParmVarDecl 0x5583d17953b8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d1795428 <col:17> Implicit
|-FunctionDecl 0x5583d1795480 prev 0x5583d1795318 <col:1, col:65> col:17 lrint 'long (double)' extern
| |-ParmVarDecl 0x5583d1795240 <col:24, col:31> col:31 __x 'double'
| `-NoThrowAttr 0x5583d1795528 <col:52>
|-FunctionDecl 0x5583d1795630 <col:68, col:134> col:84 __lrint 'long (double)' extern
| |-ParmVarDecl 0x5583d1795598 <col:93, col:100> col:100 __x 'double'
| `-NoThrowAttr 0x5583d17956d8 <col:121>
|-FunctionDecl 0x5583d1795818 <line:258:22> col:22 implicit llrint 'long long (double)' extern
| |-ParmVarDecl 0x5583d17958b8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d1795928 <col:22> Implicit
|-FunctionDecl 0x5583d1795980 prev 0x5583d1795818 <col:1, col:71> col:22 llrint 'long long (double)' extern
| |-ParmVarDecl 0x5583d1795748 <col:30, col:37> col:37 __x 'double'
| `-NoThrowAttr 0x5583d1795a28 <col:58>
|-FunctionDecl 0x5583d1795b30 <col:74, col:146> col:95 __llrint 'long long (double)' extern
| |-ParmVarDecl 0x5583d1795a98 <col:105, col:112> col:112 __x 'double'
| `-NoThrowAttr 0x5583d1795bd8 <col:133>
|-FunctionDecl 0x5583d1795ce0 <line:262:17> col:17 implicit lround 'long (double)' extern
| |-ParmVarDecl 0x5583d1795d80 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d1795df0 <col:17> Implicit
|-FunctionDecl 0x5583d1795e48 prev 0x5583d1795ce0 <col:1, col:66> col:17 lround 'long (double)' extern
| |-ParmVarDecl 0x5583d1795c48 <col:25, col:32> col:32 __x 'double'
| `-NoThrowAttr 0x5583d1795ef0 <col:53>
|-FunctionDecl 0x5583d1796018 <col:69, col:136> col:85 __lround 'long (double)' extern
| |-ParmVarDecl 0x5583d1795f80 <col:95, col:102> col:102 __x 'double'
| `-NoThrowAttr 0x5583d17960c0 <col:123>
|-FunctionDecl 0x5583d17961c8 <line:264:22> col:22 implicit llround 'long long (double)' extern
| |-ParmVarDecl 0x5583d1796268 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d17962d8 <col:22> Implicit
|-FunctionDecl 0x5583d1796330 prev 0x5583d17961c8 <col:1, col:72> col:22 llround 'long long (double)' extern
| |-ParmVarDecl 0x5583d1796130 <col:31, col:38> col:38 __x 'double'
| `-NoThrowAttr 0x5583d17963d8 <col:59>
|-FunctionDecl 0x5583d17964e0 <col:75, col:148> col:96 __llround 'long long (double)' extern
| |-ParmVarDecl 0x5583d1796448 <col:107, col:114> col:114 __x 'double'
| `-NoThrowAttr 0x5583d1796588 <col:135>
|-FunctionDecl 0x5583d1796718 <line:268:15> col:15 implicit fdim 'double (double, double)' extern
| |-ParmVarDecl 0x5583d17967b8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5583d1796820 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5583d1796898 <col:15> Implicit
|-FunctionDecl 0x5583d17968f0 prev 0x5583d1796718 <col:1, col:74> col:15 fdim 'double (double, double)' extern
| |-ParmVarDecl 0x5583d17965f8 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x5583d1796678 <col:33, col:40> col:40 __y 'double'
| `-NoThrowAttr 0x5583d17969a0 <col:61>
|-FunctionDecl 0x5583d1796b30 <col:77, col:152> col:91 __fdim 'double (double, double)' extern
| |-ParmVarDecl 0x5583d1796a10 <col:99, col:106> col:106 __x 'double'
| |-ParmVarDecl 0x5583d1796a90 <col:111, col:118> col:118 __y 'double'
| `-NoThrowAttr 0x5583d1796be0 <col:139>
|-FunctionDecl 0x5583d1796d70 <line:271:15> col:15 implicit fmax 'double (double, double)' extern
| |-ParmVarDecl 0x5583d1796e10 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5583d1796e78 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5583d1796ef0 <col:15> Implicit
| `-ConstAttr 0x5583d1796f48 <col:15> Implicit
|-FunctionDecl 0x5583d178aed0 prev 0x5583d1796d70 <col:1, col:102> col:15 fmax 'double (double, double)' extern
| |-ParmVarDecl 0x5583d1796c50 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x5583d1796cd0 <col:33, col:40> col:40 __y 'double'
| |-NoThrowAttr 0x5583d178af80 <col:61>
| `-ConstAttr 0x5583d178afd8 <col:92>
|-FunctionDecl 0x5583d178b138 <col:105, col:208> col:119 __fmax 'double (double, double)' extern
| |-ParmVarDecl 0x5583d178b018 <col:127, col:134> col:134 __x 'double'
| |-ParmVarDecl 0x5583d178b098 <col:139, col:146> col:146 __y 'double'
| |-NoThrowAttr 0x5583d178b1e8 <col:167>
| `-ConstAttr 0x5583d178b240 <col:198>
|-FunctionDecl 0x5583d178b3a0 <line:274:15> col:15 implicit fmin 'double (double, double)' extern
| |-ParmVarDecl 0x5583d178b440 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5583d178b4a8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5583d178b520 <col:15> Implicit
| `-ConstAttr 0x5583d178b578 <col:15> Implicit
|-FunctionDecl 0x5583d178b5a0 prev 0x5583d178b3a0 <col:1, col:102> col:15 fmin 'double (double, double)' extern
| |-ParmVarDecl 0x5583d178b280 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x5583d178b300 <col:33, col:40> col:40 __y 'double'
| |-NoThrowAttr 0x5583d178b650 <col:61>
| `-ConstAttr 0x5583d178b6a8 <col:92>
|-FunctionDecl 0x5583d178b808 <col:105, col:208> col:119 __fmin 'double (double, double)' extern
| |-ParmVarDecl 0x5583d178b6e8 <col:127, col:134> col:134 __x 'double'
| |-ParmVarDecl 0x5583d178b768 <col:139, col:146> col:146 __y 'double'
| |-NoThrowAttr 0x5583d178b8b8 <col:167>
| `-ConstAttr 0x5583d178b910 <col:198>
|-FunctionDecl 0x5583d178b9e8 <line:278:1, line:279:32> line:278:12 __fpclassify 'int (double)' extern
| |-ParmVarDecl 0x5583d178b950 <col:26, col:33> col:33 __value 'double'
| |-NoThrowAttr 0x5583d178ba90 <col:58>
| `-ConstAttr 0x5583d178bae8 <line:279:22>
|-FunctionDecl 0x5583d178bbc0 <line:282:1, line:283:32> line:282:12 __signbit 'int (double)' extern
| |-ParmVarDecl 0x5583d178bb28 <col:23, col:30> col:30 __value 'double'
| |-NoThrowAttr 0x5583d178bc68 <col:55>
| `-ConstAttr 0x5583d178bcc0 <line:283:22>
|-FunctionDecl 0x5583d1799ff0 <line:287:15> col:15 implicit fma 'double (double, double, double)' extern
| |-ParmVarDecl 0x5583d179a090 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5583d179a0f8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5583d179a160 <<invalid sloc>> <invalid sloc> 'double'
| |-ConstAttr 0x5583d179a1e0 <col:15> Implicit
| `-NoThrowAttr 0x5583d179a238 <col:15> Implicit
|-FunctionDecl 0x5583d179a260 prev 0x5583d1799ff0 <col:1, col:85> col:15 fma 'double (double, double, double)' extern
| |-ParmVarDecl 0x5583d178bd00 <col:20, col:27> col:27 __x 'double'
| |-ParmVarDecl 0x5583d178bd80 <col:32, col:39> col:39 __y 'double'
| |-ParmVarDecl 0x5583d178be00 <col:44, col:51> col:51 __z 'double'
| |-ConstAttr 0x5583d179a370 <col:15> Inherited Implicit
| `-NoThrowAttr 0x5583d179a318 <col:72>
|-FunctionDecl 0x5583d179a558 <col:88, col:174> col:102 __fma 'double (double, double, double)' extern
| |-ParmVarDecl 0x5583d179a3b0 <col:109, col:116> col:116 __x 'double'
| |-ParmVarDecl 0x5583d179a430 <col:121, col:128> col:128 __y 'double'
| |-ParmVarDecl 0x5583d179a4b0 <col:133, col:140> col:140 __z 'double'
| `-NoThrowAttr 0x5583d179a610 <col:161>
|-FunctionDecl 0x5583d179a7a0 <line:288:1, col:75> col:15 scalb 'double (double, double)' extern
| |-ParmVarDecl 0x5583d179a680 <col:22, col:29> col:29 __x 'double'
| |-ParmVarDecl 0x5583d179a700 <col:34, col:41> col:41 __n 'double'
| `-NoThrowAttr 0x5583d179a850 <col:62>
|-FunctionDecl 0x5583d179a9e0 <col:78, col:154> col:92 __scalb 'double (double, double)' extern
| |-ParmVarDecl 0x5583d179a8c0 <col:101, col:108> col:108 __x 'double'
| |-ParmVarDecl 0x5583d179a940 <col:113, col:120> col:120 __n 'double'
| `-NoThrowAttr 0x5583d179aa90 <col:141>
|-FunctionDecl 0x5583d179abd8 <line:289:14> col:14 implicit acosf 'float (float)' extern
| |-ParmVarDecl 0x5583d179ac78 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d179ace8 <col:14> Implicit
|-FunctionDecl 0x5583d179ad40 prev 0x5583d179abd8 <col:1, col:61> col:14 acosf 'float (float)' extern
| |-ParmVarDecl 0x5583d179ab00 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5583d179ade8 <col:48>
|-FunctionDecl 0x5583d179aef0 <col:64, col:126> col:77 __acosf 'float (float)' extern
| |-ParmVarDecl 0x5583d179ae58 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5583d179afc0 <col:113>
|-FunctionDecl 0x5583d179b0c8 <line:291:14> col:14 implicit asinf 'float (float)' extern
| |-ParmVarDecl 0x5583d179b168 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d179b1d8 <col:14> Implicit
|-FunctionDecl 0x5583d179b230 prev 0x5583d179b0c8 <col:1, col:61> col:14 asinf 'float (float)' extern
| |-ParmVarDecl 0x5583d179b030 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5583d179b2d8 <col:48>
|-FunctionDecl 0x5583d179b3e0 <col:64, col:126> col:77 __asinf 'float (float)' extern
| |-ParmVarDecl 0x5583d179b348 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5583d179b488 <col:113>
|-FunctionDecl 0x5583d179b590 <line:293:14> col:14 implicit atanf 'float (float)' extern
| |-ParmVarDecl 0x5583d179b630 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d179b6a0 <col:14> Implicit
|-FunctionDecl 0x5583d179b6f8 prev 0x5583d179b590 <col:1, col:61> col:14 atanf 'float (float)' extern
| |-ParmVarDecl 0x5583d179b4f8 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5583d179b7a0 <col:48>
|-FunctionDecl 0x5583d179b8a8 <col:64, col:126> col:77 __atanf 'float (float)' extern
| |-ParmVarDecl 0x5583d179b810 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5583d179b950 <col:113>
|-FunctionDecl 0x5583d179bb28 <line:295:14> col:14 implicit atan2f 'float (float, float)' extern
| |-ParmVarDecl 0x5583d179bbc8 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5583d179bc30 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d179bca8 <col:14> Implicit
|-FunctionDecl 0x5583d179bd00 prev 0x5583d179bb28 <col:1, col:73> col:14 atan2f 'float (float, float)' extern
| |-ParmVarDecl 0x5583d179b9c0 <col:22, col:28> col:28 __y 'float'
| |-ParmVarDecl 0x5583d179ba40 <col:33, col:39> col:39 __x 'float'
| `-NoThrowAttr 0x5583d179bdb0 <col:60>
|-FunctionDecl 0x5583d179bfd0 <col:76, col:150> col:89 __atan2f 'float (float, float)' extern
| |-ParmVarDecl 0x5583d179be20 <col:99, col:105> col:105 __y 'float'
| |-ParmVarDecl 0x5583d179bea0 <col:110, col:116> col:116 __x 'float'
| `-NoThrowAttr 0x5583d179c080 <col:137>
|-FunctionDecl 0x5583d179c188 <line:298:15> col:15 implicit cosf 'float (float)' extern
| |-ParmVarDecl 0x5583d179c228 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d179c298 <col:15> Implicit
|-FunctionDecl 0x5583d179c2f0 prev 0x5583d179c188 <col:2, col:61> col:15 cosf 'float (float)' extern
| |-ParmVarDecl 0x5583d179c0f0 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5583d179c398 <col:48>
|-FunctionDecl 0x5583d179c4a0 <col:64, col:125> col:77 __cosf 'float (float)' extern
| |-ParmVarDecl 0x5583d179c408 <col:85, col:91> col:91 __x 'float'
| `-NoThrowAttr 0x5583d179c548 <col:112>
|-FunctionDecl 0x5583d179c650 <line:300:15> col:15 implicit sinf 'float (float)' extern
| |-ParmVarDecl 0x5583d179c6f0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d179c760 <col:15> Implicit
|-FunctionDecl 0x5583d179c7b8 prev 0x5583d179c650 <col:2, col:61> col:15 sinf 'float (float)' extern
| |-ParmVarDecl 0x5583d179c5b8 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5583d179c860 <col:48>
|-FunctionDecl 0x5583d179c968 <col:64, col:125> col:77 __sinf 'float (float)' extern
| |-ParmVarDecl 0x5583d179c8d0 <col:85, col:91> col:91 __x 'float'
| `-NoThrowAttr 0x5583d179ca10 <col:112>
|-FunctionDecl 0x5583d179cb18 <line:302:14> col:14 implicit tanf 'float (float)' extern
| |-ParmVarDecl 0x5583d179cbb8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d179cc28 <col:14> Implicit
|-FunctionDecl 0x5583d179cc80 prev 0x5583d179cb18 <col:1, col:60> col:14 tanf 'float (float)' extern
| |-ParmVarDecl 0x5583d179ca80 <col:20, col:26> col:26 __x 'float'
| `-NoThrowAttr 0x5583d179cd28 <col:47>
|-FunctionDecl 0x5583d179ce30 <col:63, col:124> col:76 __tanf 'float (float)' extern
| |-ParmVarDecl 0x5583d179cd98 <col:84, col:90> col:90 __x 'float'
| `-NoThrowAttr 0x5583d179ced8 <col:111>
|-FunctionDecl 0x5583d179d010 <line:307:14> col:14 implicit coshf 'float (float)' extern
| |-ParmVarDecl 0x5583d179d0b0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d179d120 <col:14> Implicit
|-FunctionDecl 0x5583d179d178 prev 0x5583d179d010 <col:1, col:61> col:14 coshf 'float (float)' extern
| |-ParmVarDecl 0x5583d179cf48 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5583d179d220 <col:48>
|-FunctionDecl 0x5583d179d328 <col:64, col:126> col:77 __coshf 'float (float)' extern
| |-ParmVarDecl 0x5583d179d290 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5583d179d3d0 <col:113>
|-FunctionDecl 0x5583d179d4d8 <line:309:14> col:14 implicit sinhf 'float (float)' extern
| |-ParmVarDecl 0x5583d179d578 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d179d5e8 <col:14> Implicit
|-FunctionDecl 0x5583d179d640 prev 0x5583d179d4d8 <col:1, col:61> col:14 sinhf 'float (float)' extern
| |-ParmVarDecl 0x5583d179d440 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5583d179d6e8 <col:48>
|-FunctionDecl 0x5583d179d7f0 <col:64, col:126> col:77 __sinhf 'float (float)' extern
| |-ParmVarDecl 0x5583d179d758 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5583d179d898 <col:113>
|-FunctionDecl 0x5583d179d9a0 <line:311:14> col:14 implicit tanhf 'float (float)' extern
| |-ParmVarDecl 0x5583d179da40 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d179dab0 <col:14> Implicit
|-FunctionDecl 0x5583d179db08 prev 0x5583d179d9a0 <col:1, col:61> col:14 tanhf 'float (float)' extern
| |-ParmVarDecl 0x5583d179d908 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5583d179dbb0 <col:48>
|-FunctionDecl 0x5583d179dcb8 <col:64, col:126> col:77 __tanhf 'float (float)' extern
| |-ParmVarDecl 0x5583d179dc20 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5583d179dd60 <col:113>
|-FunctionDecl 0x5583d179de68 <line:312:14> col:14 implicit acoshf 'float (float)' extern
| |-ParmVarDecl 0x5583d179df08 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d179df78 <col:14> Implicit
|-FunctionDecl 0x5583d179dff0 prev 0x5583d179de68 <col:1, col:62> col:14 acoshf 'float (float)' extern
| |-ParmVarDecl 0x5583d179ddd0 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x5583d179e098 <col:49>
|-FunctionDecl 0x5583d179e1a0 <col:65, col:128> col:78 __acoshf 'float (float)' extern
| |-ParmVarDecl 0x5583d179e108 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x5583d179e248 <col:115>
|-FunctionDecl 0x5583d179e350 <line:314:14> col:14 implicit asinhf 'float (float)' extern
| |-ParmVarDecl 0x5583d179e3f0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d179e460 <col:14> Implicit
|-FunctionDecl 0x5583d179e4b8 prev 0x5583d179e350 <col:1, col:62> col:14 asinhf 'float (float)' extern
| |-ParmVarDecl 0x5583d179e2b8 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x5583d179e560 <col:49>
|-FunctionDecl 0x5583d179e668 <col:65, col:128> col:78 __asinhf 'float (float)' extern
| |-ParmVarDecl 0x5583d179e5d0 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x5583d179e710 <col:115>
|-FunctionDecl 0x5583d179e818 <line:316:14> col:14 implicit atanhf 'float (float)' extern
| |-ParmVarDecl 0x5583d179e8b8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d179e928 <col:14> Implicit
|-FunctionDecl 0x5583d179e980 prev 0x5583d179e818 <col:1, col:62> col:14 atanhf 'float (float)' extern
| |-ParmVarDecl 0x5583d179e780 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x5583d179ea28 <col:49>
|-FunctionDecl 0x5583d179eb30 <col:65, col:128> col:78 __atanhf 'float (float)' extern
| |-ParmVarDecl 0x5583d179ea98 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x5583d179ebd8 <col:115>
|-FunctionDecl 0x5583d179ece0 <line:324:15> col:15 implicit expf 'float (float)' extern
| |-ParmVarDecl 0x5583d179ed80 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d179edf0 <col:15> Implicit
|-FunctionDecl 0x5583d179ee48 prev 0x5583d179ece0 <col:2, col:61> col:15 expf 'float (float)' extern
| |-ParmVarDecl 0x5583d179ec48 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5583d179eef0 <col:48>
|-FunctionDecl 0x5583d179f030 <col:64, col:125> col:77 __expf 'float (float)' extern
| |-ParmVarDecl 0x5583d179ef60 <col:85, col:91> col:91 __x 'float'
| `-NoThrowAttr 0x5583d179f0d8 <col:112>
|-FunctionDecl 0x5583d179f2a8 <line:327:14> col:14 implicit frexpf 'float (float, int *)' extern
| |-ParmVarDecl 0x5583d179f348 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5583d179f3b0 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x5583d179f428 <col:14> Implicit
|-FunctionDecl 0x5583d179f480 prev 0x5583d179f2a8 <col:1, col:79> col:14 frexpf 'float (float, int *)' extern
| |-ParmVarDecl 0x5583d179f148 <col:22, col:28> col:28 __x 'float'
| |-ParmVarDecl 0x5583d179f1c8 <col:33, col:38> col:38 __exponent 'int *'
| `-NoThrowAttr 0x5583d179f530 <col:66>
|-FunctionDecl 0x5583d179f6c0 <col:82, col:162> col:95 __frexpf 'float (float, int *)' extern
| |-ParmVarDecl 0x5583d179f5a0 <col:105, col:111> col:111 __x 'float'
| |-ParmVarDecl 0x5583d179f620 <col:116, col:121> col:121 __exponent 'int *'
| `-NoThrowAttr 0x5583d179f770 <col:149>
|-FunctionDecl 0x5583d179f948 <line:330:14> col:14 implicit ldexpf 'float (float, int)' extern
| |-ParmVarDecl 0x5583d179f9e8 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5583d179fa50 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x5583d179fac8 <col:14> Implicit
|-FunctionDecl 0x5583d179fb20 prev 0x5583d179f948 <col:1, col:78> col:14 ldexpf 'float (float, int)' extern
| |-ParmVarDecl 0x5583d179f7e0 <col:22, col:28> col:28 __x 'float'
| |-ParmVarDecl 0x5583d179f860 <col:33, col:37> col:37 __exponent 'int'
| `-NoThrowAttr 0x5583d179fbd0 <col:65>
|-FunctionDecl 0x5583d179fd60 <col:81, col:160> col:94 __ldexpf 'float (float, int)' extern
| |-ParmVarDecl 0x5583d179fc40 <col:104, col:110> col:110 __x 'float'
| |-ParmVarDecl 0x5583d179fcc0 <col:115, col:119> col:119 __exponent 'int'
| `-NoThrowAttr 0x5583d179fe10 <col:147>
|-FunctionDecl 0x5583d179ff18 <line:333:15> col:15 implicit logf 'float (float)' extern
| |-ParmVarDecl 0x5583d17a0010 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d17a0080 <col:15> Implicit
|-FunctionDecl 0x5583d17a00d8 prev 0x5583d179ff18 <col:2, col:61> col:15 logf 'float (float)' extern
| |-ParmVarDecl 0x5583d179fe80 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5583d17a0180 <col:48>
|-FunctionDecl 0x5583d17a0288 <col:64, col:125> col:77 __logf 'float (float)' extern
| |-ParmVarDecl 0x5583d17a01f0 <col:85, col:91> col:91 __x 'float'
| `-NoThrowAttr 0x5583d17a0330 <col:112>
|-FunctionDecl 0x5583d17a0438 <line:336:14> col:14 implicit log10f 'float (float)' extern
| |-ParmVarDecl 0x5583d17a04d8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d17a0548 <col:14> Implicit
|-FunctionDecl 0x5583d17a05a0 prev 0x5583d17a0438 <col:1, col:62> col:14 log10f 'float (float)' extern
| |-ParmVarDecl 0x5583d17a03a0 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x5583d17a0648 <col:49>
|-FunctionDecl 0x5583d17a0750 <col:65, col:128> col:78 __log10f 'float (float)' extern
| |-ParmVarDecl 0x5583d17a06b8 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x5583d17a07f8 <col:115>
|-FunctionDecl 0x5583d17a09f8 <line:339:14> col:14 implicit modff 'float (float, float *)' extern
| |-ParmVarDecl 0x5583d17a0a98 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5583d17a0b00 <<invalid sloc>> <invalid sloc> 'float *'
| `-NoThrowAttr 0x5583d17a0b78 <col:14> Implicit
|-FunctionDecl 0x5583d17a0bd0 prev 0x5583d17a09f8 <col:1, col:76> col:14 modff 'float (float, float *)' extern
| |-ParmVarDecl 0x5583d17a0868 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x5583d17a0918 <col:32, col:39> col:39 __iptr 'float *'
| `-NoThrowAttr 0x5583d17a0c80 <col:63>
|-FunctionDecl 0x5583d17a0e30 <col:79, col:190> col:92 __modff 'float (float, float *)' extern
| |-ParmVarDecl 0x5583d17a0cf0 <col:101, col:107> col:107 __x 'float'
| |-ParmVarDecl 0x5583d17a0d70 <col:112, col:119> col:119 __iptr 'float *'
| |-NoThrowAttr 0x5583d17a0ee0 <col:143>
| `-NonNullAttr 0x5583d17a0f38 <col:174, col:188> 2
|-FunctionDecl 0x5583d17a1050 <line:340:14> col:14 implicit expm1f 'float (float)' extern
| |-ParmVarDecl 0x5583d17a10f0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d17a1160 <col:14> Implicit
|-FunctionDecl 0x5583d17a11b8 prev 0x5583d17a1050 <col:1, col:62> col:14 expm1f 'float (float)' extern
| |-ParmVarDecl 0x5583d17a0f90 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x5583d17a1260 <col:49>
|-FunctionDecl 0x5583d17a1368 <col:65, col:128> col:78 __expm1f 'float (float)' extern
| |-ParmVarDecl 0x5583d17a12d0 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x5583d17a1410 <col:115>
|-FunctionDecl 0x5583d17a1518 <line:343:14> col:14 implicit log1pf 'float (float)' extern
| |-ParmVarDecl 0x5583d17a15b8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d17a1628 <col:14> Implicit
|-FunctionDecl 0x5583d17a1680 prev 0x5583d17a1518 <col:1, col:62> col:14 log1pf 'float (float)' extern
| |-ParmVarDecl 0x5583d17a1480 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x5583d17a1728 <col:49>
|-FunctionDecl 0x5583d17a1830 <col:65, col:128> col:78 __log1pf 'float (float)' extern
| |-ParmVarDecl 0x5583d17a1798 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x5583d17a18d8 <col:115>
|-FunctionDecl 0x5583d17a19e0 <line:346:14> col:14 implicit logbf 'float (float)' extern
| |-ParmVarDecl 0x5583d17a1a80 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d17a1af0 <col:14> Implicit
|-FunctionDecl 0x5583d17a1b48 prev 0x5583d17a19e0 <col:1, col:61> col:14 logbf 'float (float)' extern
| |-ParmVarDecl 0x5583d17a1948 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5583d17a1bf0 <col:48>
|-FunctionDecl 0x5583d17a1cf8 <col:64, col:126> col:77 __logbf 'float (float)' extern
| |-ParmVarDecl 0x5583d17a1c60 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5583d17a1da0 <col:113>
|-FunctionDecl 0x5583d17a1ea8 <line:353:14> col:14 implicit exp2f 'float (float)' extern
| |-ParmVarDecl 0x5583d17a1f48 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d17a1fb8 <col:14> Implicit
|-FunctionDecl 0x5583d17a3040 prev 0x5583d17a1ea8 <col:1, col:61> col:14 exp2f 'float (float)' extern
| |-ParmVarDecl 0x5583d17a1e10 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5583d17a30e8 <col:48>
|-FunctionDecl 0x5583d17a31f0 <col:64, col:126> col:77 __exp2f 'float (float)' extern
| |-ParmVarDecl 0x5583d17a3158 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5583d17a3298 <col:113>
|-FunctionDecl 0x5583d17a33a0 <line:356:14> col:14 implicit log2f 'float (float)' extern
| |-ParmVarDecl 0x5583d17a3440 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d17a34b0 <col:14> Implicit
|-FunctionDecl 0x5583d17a3508 prev 0x5583d17a33a0 <col:1, col:61> col:14 log2f 'float (float)' extern
| |-ParmVarDecl 0x5583d17a3308 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5583d17a35b0 <col:48>
|-FunctionDecl 0x5583d17a36b8 <col:64, col:126> col:77 __log2f 'float (float)' extern
| |-ParmVarDecl 0x5583d17a3620 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5583d17a3760 <col:113>
|-FunctionDecl 0x5583d17a38f0 <line:357:15> col:15 implicit powf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d17a3990 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5583d17a39f8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d17a3a70 <col:15> Implicit
|-FunctionDecl 0x5583d17a3ac8 prev 0x5583d17a38f0 <col:2, col:72> col:15 powf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d17a37d0 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x5583d17a3850 <col:32, col:38> col:38 __y 'float'
| `-NoThrowAttr 0x5583d17a3b78 <col:59>
|-FunctionDecl 0x5583d17a3d08 <col:75, col:147> col:88 __powf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d17a3be8 <col:96, col:102> col:102 __x 'float'
| |-ParmVarDecl 0x5583d17a3c68 <col:107, col:113> col:113 __y 'float'
| `-NoThrowAttr 0x5583d17a3db8 <col:134>
|-FunctionDecl 0x5583d17a3ec0 <line:360:14> col:14 implicit sqrtf 'float (float)' extern
| |-ParmVarDecl 0x5583d17a3f60 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d17a3fd0 <col:14> Implicit
|-FunctionDecl 0x5583d17a4050 prev 0x5583d17a3ec0 <col:1, col:61> col:14 sqrtf 'float (float)' extern
| |-ParmVarDecl 0x5583d17a3e28 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5583d17a40f8 <col:48>
|-FunctionDecl 0x5583d17a4200 <col:64, col:126> col:77 __sqrtf 'float (float)' extern
| |-ParmVarDecl 0x5583d17a4168 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5583d17a42a8 <col:113>
|-FunctionDecl 0x5583d17a4438 <line:366:14> col:14 implicit hypotf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d17a44d8 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5583d17a4540 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d17a45b8 <col:14> Implicit
|-FunctionDecl 0x5583d17a4610 prev 0x5583d17a4438 <col:1, col:73> col:14 hypotf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d17a4318 <col:22, col:28> col:28 __x 'float'
| |-ParmVarDecl 0x5583d17a4398 <col:33, col:39> col:39 __y 'float'
| `-NoThrowAttr 0x5583d17a46c0 <col:60>
|-FunctionDecl 0x5583d17a4850 <col:76, col:150> col:89 __hypotf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d17a4730 <col:99, col:105> col:105 __x 'float'
| |-ParmVarDecl 0x5583d17a47b0 <col:110, col:116> col:116 __y 'float'
| `-NoThrowAttr 0x5583d17a4900 <col:137>
|-FunctionDecl 0x5583d17a4a08 <line:373:14> col:14 implicit cbrtf 'float (float)' extern
| |-ParmVarDecl 0x5583d17a4aa8 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5583d17a4b18 <col:14> Implicit
| `-ConstAttr 0x5583d17a4b70 <col:14> Implicit
|-FunctionDecl 0x5583d17a4b98 prev 0x5583d17a4a08 <col:1, col:61> col:14 cbrtf 'float (float)' extern
| |-ParmVarDecl 0x5583d17a4970 <col:21, col:27> col:27 __x 'float'
| |-ConstAttr 0x5583d17a4c98 <col:14> Inherited Implicit
| `-NoThrowAttr 0x5583d17a4c40 <col:48>
|-FunctionDecl 0x5583d17a4d70 <col:64, col:126> col:77 __cbrtf 'float (float)' extern
| |-ParmVarDecl 0x5583d17a4cd8 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5583d17a4e18 <col:113>
|-FunctionDecl 0x5583d17a4f20 <line:374:14> col:14 implicit ceilf 'float (float)' extern
| |-ParmVarDecl 0x5583d17a4fc0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5583d17a5060 <col:14> Implicit
| `-ConstAttr 0x5583d17a50b8 <col:14> Implicit
|-FunctionDecl 0x5583d17a50e0 prev 0x5583d17a4f20 <col:1, col:89> col:14 ceilf 'float (float)' extern
| |-ParmVarDecl 0x5583d17a4e88 <col:21, col:27> col:27 __x 'float'
| |-NoThrowAttr 0x5583d17a5188 <col:48>
| `-ConstAttr 0x5583d17a51e0 <col:79>
|-FunctionDecl 0x5583d17a52b8 <col:92, col:182> col:105 __ceilf 'float (float)' extern
| |-ParmVarDecl 0x5583d17a5220 <col:114, col:120> col:120 __x 'float'
| |-NoThrowAttr 0x5583d17a5360 <col:141>
| `-ConstAttr 0x5583d17a53b8 <col:172>
|-FunctionDecl 0x5583d17a5490 <line:377:14> col:14 implicit fabsf 'float (float)' extern
| |-ParmVarDecl 0x5583d17a5530 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5583d17a55a0 <col:14> Implicit
| `-ConstAttr 0x5583d17a55f8 <col:14> Implicit
|-FunctionDecl 0x5583d17a5620 prev 0x5583d17a5490 <col:1, col:89> col:14 fabsf 'float (float)' extern
| |-ParmVarDecl 0x5583d17a53f8 <col:21, col:27> col:27 __x 'float'
| |-NoThrowAttr 0x5583d17a56c8 <col:48>
| `-ConstAttr 0x5583d17a5720 <col:79>
|-FunctionDecl 0x5583d17a57f8 <col:92, col:182> col:105 __fabsf 'float (float)' extern
| |-ParmVarDecl 0x5583d17a5760 <col:114, col:120> col:120 __x 'float'
| |-NoThrowAttr 0x5583d17a58a0 <col:141>
| `-ConstAttr 0x5583d17a58f8 <col:172>
|-FunctionDecl 0x5583d17a59d0 <line:380:14> col:14 implicit floorf 'float (float)' extern
| |-ParmVarDecl 0x5583d17a5a70 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5583d17a5ae0 <col:14> Implicit
| `-ConstAttr 0x5583d17a5b38 <col:14> Implicit
|-FunctionDecl 0x5583d17a5b60 prev 0x5583d17a59d0 <col:1, col:90> col:14 floorf 'float (float)' extern
| |-ParmVarDecl 0x5583d17a5938 <col:22, col:28> col:28 __x 'float'
| |-NoThrowAttr 0x5583d17a5c08 <col:49>
| `-ConstAttr 0x5583d17a5c60 <col:80>
|-FunctionDecl 0x5583d17a5d38 <col:93, col:184> col:106 __floorf 'float (float)' extern
| |-ParmVarDecl 0x5583d17a5ca0 <col:116, col:122> col:122 __x 'float'
| |-NoThrowAttr 0x5583d17a5de0 <col:143>
| `-ConstAttr 0x5583d17a5e38 <col:174>
|-FunctionDecl 0x5583d17a5f98 <line:383:14> col:14 implicit fmodf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d17a6070 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5583d17a60d8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d17a6150 <col:14> Implicit
|-FunctionDecl 0x5583d17a61a8 prev 0x5583d17a5f98 <col:1, col:72> col:14 fmodf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d17a5e78 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x5583d17a5ef8 <col:32, col:38> col:38 __y 'float'
| `-NoThrowAttr 0x5583d17a6258 <col:59>
|-FunctionDecl 0x5583d17a63e8 <col:75, col:148> col:88 __fmodf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d17a62c8 <col:97, col:103> col:103 __x 'float'
| |-ParmVarDecl 0x5583d17a6348 <col:108, col:114> col:114 __y 'float'
| `-NoThrowAttr 0x5583d17a6498 <col:135>
|-FunctionDecl 0x5583d17a65d8 <line:388:1, col:94> col:12 used __isinff 'int (float)' extern
| |-ParmVarDecl 0x5583d17a6508 <col:22, col:28> col:28 __value 'float'
| |-NoThrowAttr 0x5583d17a6680 <col:53>
| `-ConstAttr 0x5583d17a66d8 <col:84>
|-FunctionDecl 0x5583d17a67b0 <line:391:12> col:12 implicit __finitef 'int (float)' extern
| |-ParmVarDecl 0x5583d17a6850 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5583d17a68c0 <col:12> Implicit
| `-ConstAttr 0x5583d17a6918 <col:12> Implicit
|-FunctionDecl 0x5583d17a6940 prev 0x5583d17a67b0 <col:1, col:95> col:12 __finitef 'int (float)' extern
| |-ParmVarDecl 0x5583d17a6718 <col:23, col:29> col:29 __value 'float'
| |-NoThrowAttr 0x5583d17a69e8 <col:54>
| `-ConstAttr 0x5583d17a6a40 <col:85>
|-FunctionDecl 0x5583d17a6b18 <line:397:1, col:92> col:12 isinff 'int (float)' extern
| |-ParmVarDecl 0x5583d17a6a80 <col:20, col:26> col:26 __value 'float'
| |-NoThrowAttr 0x5583d17a6bc0 <col:51>
| `-ConstAttr 0x5583d17a6c18 <col:82>
|-FunctionDecl 0x5583d17a6cf0 <line:400:12> col:12 implicit finitef 'int (float)' extern
| |-ParmVarDecl 0x5583d17a6d90 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5583d17a6e00 <col:12> Implicit
| `-ConstAttr 0x5583d17a6e58 <col:12> Implicit
|-FunctionDecl 0x5583d17a6e80 prev 0x5583d17a6cf0 <col:1, col:93> col:12 finitef 'int (float)' extern
| |-ParmVarDecl 0x5583d17a6c58 <col:21, col:27> col:27 __value 'float'
| |-NoThrowAttr 0x5583d17a6f28 <col:52>
| `-ConstAttr 0x5583d17a6f80 <col:83>
|-FunctionDecl 0x5583d17a7120 <line:403:1, col:72> col:14 dremf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d17a6fc0 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x5583d17a7080 <col:32, col:38> col:38 __y 'float'
| `-NoThrowAttr 0x5583d17a71d0 <col:59>
|-FunctionDecl 0x5583d17a7360 <col:75, col:148> col:88 __dremf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d17a7240 <col:97, col:103> col:103 __x 'float'
| |-ParmVarDecl 0x5583d17a72c0 <col:108, col:114> col:114 __y 'float'
| `-NoThrowAttr 0x5583d17a7410 <col:135>
|-FunctionDecl 0x5583d17a7518 <line:407:1, col:68> col:14 significandf 'float (float)' extern
| |-ParmVarDecl 0x5583d17a7480 <col:28, col:34> col:34 __x 'float'
| `-NoThrowAttr 0x5583d17a75c0 <col:55>
|-FunctionDecl 0x5583d17a76c8 <col:71, col:140> col:84 __significandf 'float (float)' extern
| |-ParmVarDecl 0x5583d17a7630 <col:100, col:106> col:106 __x 'float'
| `-NoThrowAttr 0x5583d17a7770 <col:127>
|-FunctionDecl 0x5583d17a7900 <line:413:14> col:14 implicit copysignf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d17a79a0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5583d17a7a08 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5583d17a7a80 <col:14> Implicit
| `-ConstAttr 0x5583d17a7ad8 <col:14> Implicit
|-FunctionDecl 0x5583d17a7b00 prev 0x5583d17a7900 <col:1, col:104> col:14 copysignf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d17a77e0 <col:25, col:31> col:31 __x 'float'
| |-ParmVarDecl 0x5583d17a7860 <col:36, col:42> col:42 __y 'float'
| |-NoThrowAttr 0x5583d17a7bb0 <col:63>
| `-ConstAttr 0x5583d17a7c08 <col:94>
|-FunctionDecl 0x5583d17a7d68 <col:107, col:212> col:120 __copysignf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d17a7c48 <col:133, col:139> col:139 __x 'float'
| |-ParmVarDecl 0x5583d17a7cc8 <col:144, col:150> col:150 __y 'float'
| |-NoThrowAttr 0x5583d17a7e18 <col:171>
| `-ConstAttr 0x5583d17a7e70 <col:202>
|-FunctionDecl 0x5583d17a7f88 <line:420:14> col:14 implicit nanf 'float (const char *)' extern
| |-ParmVarDecl 0x5583d17a8090 <<invalid sloc>> <invalid sloc> 'const char *'
| |-NoThrowAttr 0x5583d17a8100 <col:14> Implicit
| `-PureAttr 0x5583d17a8158 <col:14> Implicit
|-FunctionDecl 0x5583d17a8180 prev 0x5583d17a7f88 <col:1, col:97> col:14 nanf 'float (const char *)' extern
| |-ParmVarDecl 0x5583d17a7eb0 <col:20, col:32> col:32 __tagb 'const char *'
| |-PureAttr 0x5583d17a82a8 <col:14> Inherited Implicit
| |-NoThrowAttr 0x5583d17a8228 <col:56>
| `-ConstAttr 0x5583d17a8280 <col:87>
|-FunctionDecl 0x5583d17a8380 <col:100, col:198> col:113 __nanf 'float (const char *)' extern
| |-ParmVarDecl 0x5583d17a82e8 <col:121, col:133> col:133 __tagb 'const char *'
| |-NoThrowAttr 0x5583d17a8428 <col:157>
| `-ConstAttr 0x5583d17a8480 <col:188>
|-FunctionDecl 0x5583d17a8558 <line:426:1, col:94> col:12 used __isnanf 'int (float)' extern
| |-ParmVarDecl 0x5583d17a84c0 <col:22, col:28> col:28 __value 'float'
| |-NoThrowAttr 0x5583d17a8600 <col:53>
| `-ConstAttr 0x5583d17a8658 <col:84>
|-FunctionDecl 0x5583d17a8730 <line:430:1, col:92> col:12 isnanf 'int (float)' extern
| |-ParmVarDecl 0x5583d17a8698 <col:20, col:26> col:26 __value 'float'
| |-NoThrowAttr 0x5583d17a87d8 <col:51>
| `-ConstAttr 0x5583d17a8830 <col:82>
|-FunctionDecl 0x5583d17a8908 <line:433:1, col:55> col:14 j0f 'float (float)' extern
| |-ParmVarDecl 0x5583d17a8870 <col:19> col:24 'float'
| `-NoThrowAttr 0x5583d17a89b0 <col:42>
|-FunctionDecl 0x5583d17a8ab8 <col:58, col:114> col:71 __j0f 'float (float)' extern
| |-ParmVarDecl 0x5583d17a8a20 <col:78> col:83 'float'
| `-NoThrowAttr 0x5583d17a8b60 <col:101>
|-FunctionDecl 0x5583d17a8c68 <line:434:1, col:55> col:14 j1f 'float (float)' extern
| |-ParmVarDecl 0x5583d17a8bd0 <col:19> col:24 'float'
| `-NoThrowAttr 0x5583d17a8d10 <col:42>
|-FunctionDecl 0x5583d17a8e18 <col:58, col:114> col:71 __j1f 'float (float)' extern
| |-ParmVarDecl 0x5583d17a8d80 <col:78> col:83 'float'
| `-NoThrowAttr 0x5583d17a8ec0 <col:101>
|-FunctionDecl 0x5583d17a90d8 <line:435:1, col:60> col:14 jnf 'float (int, float)' extern
| |-ParmVarDecl 0x5583d17a8f30 <col:19> col:22 'int'
| |-ParmVarDecl 0x5583d17a8fb0 <col:24> col:29 'float'
| `-NoThrowAttr 0x5583d17a9188 <col:47>
|-FunctionDecl 0x5583d17a9318 <col:63, col:124> col:76 __jnf 'float (int, float)' extern
| |-ParmVarDecl 0x5583d17a91f8 <col:83> col:86 'int'
| |-ParmVarDecl 0x5583d17a9278 <col:88> col:93 'float'
| `-NoThrowAttr 0x5583d17a93c8 <col:111>
|-FunctionDecl 0x5583d17a94d0 <line:436:1, col:55> col:14 y0f 'float (float)' extern
| |-ParmVarDecl 0x5583d17a9438 <col:19> col:24 'float'
| `-NoThrowAttr 0x5583d17a9578 <col:42>
|-FunctionDecl 0x5583d17a9680 <col:58, col:114> col:71 __y0f 'float (float)' extern
| |-ParmVarDecl 0x5583d17a95e8 <col:78> col:83 'float'
| `-NoThrowAttr 0x5583d17a9728 <col:101>
|-FunctionDecl 0x5583d17a9830 <line:437:1, col:55> col:14 y1f 'float (float)' extern
| |-ParmVarDecl 0x5583d17a9798 <col:19> col:24 'float'
| `-NoThrowAttr 0x5583d17a98d8 <col:42>
|-FunctionDecl 0x5583d17a99e0 <col:58, col:114> col:71 __y1f 'float (float)' extern
| |-ParmVarDecl 0x5583d17a9948 <col:78> col:83 'float'
| `-NoThrowAttr 0x5583d17a9a88 <col:101>
|-FunctionDecl 0x5583d17a9c18 <line:438:1, col:60> col:14 ynf 'float (int, float)' extern
| |-ParmVarDecl 0x5583d17a9af8 <col:19> col:22 'int'
| |-ParmVarDecl 0x5583d17a9b78 <col:24> col:29 'float'
| `-NoThrowAttr 0x5583d17a9cc8 <col:47>
|-FunctionDecl 0x5583d17a9e58 <col:63, col:124> col:76 __ynf 'float (int, float)' extern
| |-ParmVarDecl 0x5583d17a9d38 <col:83> col:86 'int'
| |-ParmVarDecl 0x5583d17a9db8 <col:88> col:93 'float'
| `-NoThrowAttr 0x5583d17a9f08 <col:111>
|-FunctionDecl 0x5583d17aa0b0 <line:445:14> col:14 implicit erff 'float (float)' extern
| |-ParmVarDecl 0x5583d17aa150 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d17aa1c0 <col:14> Implicit
|-FunctionDecl 0x5583d17aa218 prev 0x5583d17aa0b0 <col:1, col:56> col:14 erff 'float (float)' extern
| |-ParmVarDecl 0x5583d17a9f78 <col:20> col:25 'float'
| `-NoThrowAttr 0x5583d17aa2c0 <col:43>
|-FunctionDecl 0x5583d17aa3c8 <col:59, col:116> col:72 __erff 'float (float)' extern
| |-ParmVarDecl 0x5583d17aa330 <col:80> col:85 'float'
| `-NoThrowAttr 0x5583d17aa470 <col:103>
|-FunctionDecl 0x5583d17aa578 <line:446:14> col:14 implicit erfcf 'float (float)' extern
| |-ParmVarDecl 0x5583d17aa618 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d17aa688 <col:14> Implicit
|-FunctionDecl 0x5583d17aa6e0 prev 0x5583d17aa578 <col:1, col:57> col:14 erfcf 'float (float)' extern
| |-ParmVarDecl 0x5583d17aa4e0 <col:21> col:26 'float'
| `-NoThrowAttr 0x5583d17aa788 <col:44>
|-FunctionDecl 0x5583d17aa890 <col:60, col:118> col:73 __erfcf 'float (float)' extern
| |-ParmVarDecl 0x5583d17aa7f8 <col:82> col:87 'float'
| `-NoThrowAttr 0x5583d17aa938 <col:105>
|-FunctionDecl 0x5583d17aaa40 <line:447:14> col:14 implicit lgammaf 'float (float)' extern
| |-ParmVarDecl 0x5583d17aaae0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d17aab50 <col:14> Implicit
|-FunctionDecl 0x5583d17aaba8 prev 0x5583d17aaa40 <col:1, col:59> col:14 lgammaf 'float (float)' extern
| |-ParmVarDecl 0x5583d17aa9a8 <col:23> col:28 'float'
| `-NoThrowAttr 0x5583d17aac50 <col:46>
|-FunctionDecl 0x5583d17aad58 <col:62, col:122> col:75 __lgammaf 'float (float)' extern
| |-ParmVarDecl 0x5583d17aacc0 <col:86> col:91 'float'
| `-NoThrowAttr 0x5583d17aae00 <col:109>
|-FunctionDecl 0x5583d17aaf08 <line:454:14> col:14 implicit tgammaf 'float (float)' extern
| |-ParmVarDecl 0x5583d17aafa8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d17ab018 <col:14> Implicit
|-FunctionDecl 0x5583d17ab0c0 prev 0x5583d17aaf08 <col:1, col:59> col:14 tgammaf 'float (float)' extern
| |-ParmVarDecl 0x5583d17aae70 <col:23> col:28 'float'
| `-NoThrowAttr 0x5583d17ab168 <col:46>
|-FunctionDecl 0x5583d17ab270 <col:62, col:122> col:75 __tgammaf 'float (float)' extern
| |-ParmVarDecl 0x5583d17ab1d8 <col:86> col:91 'float'
| `-NoThrowAttr 0x5583d17ab318 <col:109>
|-FunctionDecl 0x5583d17ab420 <line:460:1, col:58> col:14 gammaf 'float (float)' extern
| |-ParmVarDecl 0x5583d17ab388 <col:22> col:27 'float'
| `-NoThrowAttr 0x5583d17ab4c8 <col:45>
|-FunctionDecl 0x5583d17ab5d0 <col:61, col:120> col:74 __gammaf 'float (float)' extern
| |-ParmVarDecl 0x5583d17ab538 <col:84> col:89 'float'
| `-NoThrowAttr 0x5583d17ab678 <col:107>
|-FunctionDecl 0x5583d17ab808 <line:467:1, col:78> col:14 lgammaf_r 'float (float, int *)' extern
| |-ParmVarDecl 0x5583d17ab6e8 <col:25> col:30 'float'
| |-ParmVarDecl 0x5583d17ab768 <col:32, col:37> col:37 __signgamp 'int *'
| `-NoThrowAttr 0x5583d17ab8b8 <col:65>
|-FunctionDecl 0x5583d17aba48 <col:81, col:160> col:94 __lgammaf_r 'float (float, int *)' extern
| |-ParmVarDecl 0x5583d17ab928 <col:107> col:112 'float'
| |-ParmVarDecl 0x5583d17ab9a8 <col:114, col:119> col:119 __signgamp 'int *'
| `-NoThrowAttr 0x5583d17abaf8 <col:147>
|-FunctionDecl 0x5583d17abc00 <line:475:14> col:14 implicit rintf 'float (float)' extern
| |-ParmVarDecl 0x5583d17abca0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5583d17abd10 <col:14> Implicit
| `-ConstAttr 0x5583d17abd68 <col:14> Implicit
|-FunctionDecl 0x5583d17abd90 prev 0x5583d17abc00 <col:1, col:61> col:14 rintf 'float (float)' extern
| |-ParmVarDecl 0x5583d17abb68 <col:21, col:27> col:27 __x 'float'
| |-ConstAttr 0x5583d17abe90 <col:14> Inherited Implicit
| `-NoThrowAttr 0x5583d17abe38 <col:48>
|-FunctionDecl 0x5583d17abf68 <col:64, col:126> col:77 __rintf 'float (float)' extern
| |-ParmVarDecl 0x5583d17abed0 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5583d17ac010 <col:113>
|-FunctionDecl 0x5583d17ac1f0 <line:478:14> col:14 implicit nextafterf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d17ac290 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5583d17ac2f8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d17ac370 <col:14> Implicit
|-FunctionDecl 0x5583d17ac3c8 prev 0x5583d17ac1f0 <col:1, col:105> col:14 nextafterf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d17ac0d0 <col:26, col:32> col:32 __x 'float'
| |-ParmVarDecl 0x5583d17ac150 <col:37, col:43> col:43 __y 'float'
| |-NoThrowAttr 0x5583d17ac478 <col:64>
| `-ConstAttr 0x5583d17ac4d0 <col:95>
|-FunctionDecl 0x5583d17ac630 <col:108, col:214> col:121 __nextafterf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d17ac510 <col:135, col:141> col:141 __x 'float'
| |-ParmVarDecl 0x5583d17ac590 <col:146, col:152> col:152 __y 'float'
| |-NoThrowAttr 0x5583d17ac6e0 <col:173>
| `-ConstAttr 0x5583d17ac738 <col:204>
|-FunctionDecl 0x5583d17ac8d8 <line:480:14> col:14 implicit nexttowardf 'float (float, long double)' extern
| |-ParmVarDecl 0x5583d17ac978 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5583d17ac9e0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17aca58 <col:14> Implicit
|-FunctionDecl 0x5583d17acab0 prev 0x5583d17ac8d8 <col:1, col:112> col:14 nexttowardf 'float (float, long double)' extern
| |-ParmVarDecl 0x5583d17ac778 <col:27, col:33> col:33 __x 'float'
| |-ParmVarDecl 0x5583d17ac7f8 <col:38, col:50> col:50 __y 'long double'
| |-NoThrowAttr 0x5583d17acb60 <col:71>
| `-ConstAttr 0x5583d17acbb8 <col:102>
|-FunctionDecl 0x5583d17acd18 <col:115, col:228> col:128 __nexttowardf 'float (float, long double)' extern
| |-ParmVarDecl 0x5583d17acbf8 <col:143, col:149> col:149 __x 'float'
| |-ParmVarDecl 0x5583d17acc78 <col:154, col:166> col:166 __y 'long double'
| |-NoThrowAttr 0x5583d17acdc8 <col:187>
| `-ConstAttr 0x5583d17ace20 <col:218>
|-FunctionDecl 0x5583d17acf80 <line:484:14> col:14 implicit remainderf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d17ad020 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5583d17ad0e0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d17ad158 <col:14> Implicit
|-FunctionDecl 0x5583d17ad1b0 prev 0x5583d17acf80 <col:1, col:77> col:14 remainderf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d17ace60 <col:26, col:32> col:32 __x 'float'
| |-ParmVarDecl 0x5583d17acee0 <col:37, col:43> col:43 __y 'float'
| `-NoThrowAttr 0x5583d17ad260 <col:64>
|-FunctionDecl 0x5583d17ad3f0 <col:80, col:158> col:93 __remainderf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d17ad2d0 <col:107, col:113> col:113 __x 'float'
| |-ParmVarDecl 0x5583d17ad350 <col:118, col:124> col:124 __y 'float'
| `-NoThrowAttr 0x5583d17ad4a0 <col:145>
|-FunctionDecl 0x5583d17ad630 <line:488:14> col:14 implicit scalbnf 'float (float, int)' extern
| |-ParmVarDecl 0x5583d17ad6d0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5583d17ad738 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x5583d17ad7b0 <col:14> Implicit
|-FunctionDecl 0x5583d17ad808 prev 0x5583d17ad630 <col:1, col:72> col:14 scalbnf 'float (float, int)' extern
| |-ParmVarDecl 0x5583d17ad510 <col:23, col:29> col:29 __x 'float'
| |-ParmVarDecl 0x5583d17ad590 <col:34, col:38> col:38 __n 'int'
| `-NoThrowAttr 0x5583d17ad8b8 <col:59>
|-FunctionDecl 0x5583d17ada48 <col:75, col:148> col:88 __scalbnf 'float (float, int)' extern
| |-ParmVarDecl 0x5583d17ad928 <col:99, col:105> col:105 __x 'float'
| |-ParmVarDecl 0x5583d17ad9a8 <col:110, col:114> col:114 __n 'int'
| `-NoThrowAttr 0x5583d17adaf8 <col:135>
|-FunctionDecl 0x5583d17adc00 <line:492:12> col:12 implicit ilogbf 'int (float)' extern
| |-ParmVarDecl 0x5583d17adca0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d17add10 <col:12> Implicit
|-FunctionDecl 0x5583d17add68 prev 0x5583d17adc00 <col:1, col:60> col:12 ilogbf 'int (float)' extern
| |-ParmVarDecl 0x5583d17adb68 <col:20, col:26> col:26 __x 'float'
| `-NoThrowAttr 0x5583d17ade10 <col:47>
|-FunctionDecl 0x5583d17adf18 <col:63, col:124> col:74 __ilogbf 'int (float)' extern
| |-ParmVarDecl 0x5583d17ade80 <col:84, col:90> col:90 __x 'float'
| `-NoThrowAttr 0x5583d17adfc0 <col:111>
|-FunctionDecl 0x5583d17ae1d8 <line:497:14> col:14 implicit scalblnf 'float (float, long)' extern
| |-ParmVarDecl 0x5583d17ae278 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5583d17ae2e0 <<invalid sloc>> <invalid sloc> 'long'
| `-NoThrowAttr 0x5583d17ae358 <col:14> Implicit
|-FunctionDecl 0x5583d17ae3b0 prev 0x5583d17ae1d8 <col:1, col:78> col:14 scalblnf 'float (float, long)' extern
| |-ParmVarDecl 0x5583d17ae030 <col:24, col:30> col:30 __x 'float'
| |-ParmVarDecl 0x5583d17ae0f0 <col:35, col:44> col:44 __n 'long'
| `-NoThrowAttr 0x5583d17ae460 <col:65>
|-FunctionDecl 0x5583d17ae5f0 <col:81, col:160> col:94 __scalblnf 'float (float, long)' extern
| |-ParmVarDecl 0x5583d17ae4d0 <col:106, col:112> col:112 __x 'float'
| |-ParmVarDecl 0x5583d17ae550 <col:117, col:126> col:126 __n 'long'
| `-NoThrowAttr 0x5583d17ae6a0 <col:147>
|-FunctionDecl 0x5583d17ae7a8 <line:501:14> col:14 implicit nearbyintf 'float (float)' extern
| |-ParmVarDecl 0x5583d17ae848 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5583d17ae8b8 <col:14> Implicit
| `-ConstAttr 0x5583d17ae910 <col:14> Implicit
|-FunctionDecl 0x5583d17ae938 prev 0x5583d17ae7a8 <col:1, col:66> col:14 nearbyintf 'float (float)' extern
| |-ParmVarDecl 0x5583d17ae710 <col:26, col:32> col:32 __x 'float'
| |-ConstAttr 0x5583d17aea38 <col:14> Inherited Implicit
| `-NoThrowAttr 0x5583d17ae9e0 <col:53>
|-FunctionDecl 0x5583d17aeb10 <col:69, col:136> col:82 __nearbyintf 'float (float)' extern
| |-ParmVarDecl 0x5583d17aea78 <col:96, col:102> col:102 __x 'float'
| `-NoThrowAttr 0x5583d17aebb8 <col:123>
|-FunctionDecl 0x5583d17aecc0 <line:505:14> col:14 implicit roundf 'float (float)' extern
| |-ParmVarDecl 0x5583d17aed60 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5583d17aedd0 <col:14> Implicit
| `-ConstAttr 0x5583d17aee28 <col:14> Implicit
|-FunctionDecl 0x5583d17aee50 prev 0x5583d17aecc0 <col:1, col:90> col:14 roundf 'float (float)' extern
| |-ParmVarDecl 0x5583d17aec28 <col:22, col:28> col:28 __x 'float'
| |-NoThrowAttr 0x5583d17aeef8 <col:49>
| `-ConstAttr 0x5583d17aef50 <col:80>
|-FunctionDecl 0x5583d17af028 <col:93, col:184> col:106 __roundf 'float (float)' extern
| |-ParmVarDecl 0x5583d17aef90 <col:116, col:122> col:122 __x 'float'
| |-NoThrowAttr 0x5583d17af100 <col:143>
| `-ConstAttr 0x5583d17af158 <col:174>
|-FunctionDecl 0x5583d17af230 <line:509:14> col:14 implicit truncf 'float (float)' extern
| |-ParmVarDecl 0x5583d17af2d0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5583d17af340 <col:14> Implicit
| `-ConstAttr 0x5583d17af398 <col:14> Implicit
|-FunctionDecl 0x5583d17af3c0 prev 0x5583d17af230 <col:1, col:90> col:14 truncf 'float (float)' extern
| |-ParmVarDecl 0x5583d17af198 <col:22, col:28> col:28 __x 'float'
| |-NoThrowAttr 0x5583d17af468 <col:49>
| `-ConstAttr 0x5583d17af4c0 <col:80>
|-FunctionDecl 0x5583d17af598 <col:93, col:184> col:106 __truncf 'float (float)' extern
| |-ParmVarDecl 0x5583d17af500 <col:116, col:122> col:122 __x 'float'
| |-NoThrowAttr 0x5583d17af640 <col:143>
| `-ConstAttr 0x5583d17af698 <col:174>
|-FunctionDecl 0x5583d17af8c8 <line:514:14> col:14 implicit remquof 'float (float, float, int *)' extern
| |-ParmVarDecl 0x5583d17af968 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5583d17af9d0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5583d17afa38 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x5583d17afab8 <col:14> Implicit
|-FunctionDecl 0x5583d17afb10 prev 0x5583d17af8c8 <col:1, col:86> col:14 remquof 'float (float, float, int *)' extern
| |-ParmVarDecl 0x5583d17af6d8 <col:23, col:29> col:29 __x 'float'
| |-ParmVarDecl 0x5583d17af758 <col:34, col:40> col:40 __y 'float'
| |-ParmVarDecl 0x5583d17af7d8 <col:45, col:50> col:50 __quo 'int *'
| `-NoThrowAttr 0x5583d17afbc8 <col:73>
|-FunctionDecl 0x5583d17afde0 <col:89, col:176> col:102 __remquof 'float (float, float, int *)' extern
| |-ParmVarDecl 0x5583d17afc38 <col:113, col:119> col:119 __x 'float'
| |-ParmVarDecl 0x5583d17afcb8 <col:124, col:130> col:130 __y 'float'
| |-ParmVarDecl 0x5583d17afd38 <col:135, col:140> col:140 __quo 'int *'
| `-NoThrowAttr 0x5583d17afe98 <col:163>
|-FunctionDecl 0x5583d17affd8 <line:521:17> col:17 implicit lrintf 'long (float)' extern
| |-ParmVarDecl 0x5583d17b0078 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d17b1120 <col:17> Implicit
|-FunctionDecl 0x5583d17b1178 prev 0x5583d17affd8 <col:1, col:65> col:17 lrintf 'long (float)' extern
| |-ParmVarDecl 0x5583d17aff08 <col:25, col:31> col:31 __x 'float'
| `-NoThrowAttr 0x5583d17b1220 <col:52>
|-FunctionDecl 0x5583d17b1328 <col:68, col:134> col:84 __lrintf 'long (float)' extern
| |-ParmVarDecl 0x5583d17b1290 <col:94, col:100> col:100 __x 'float'
| `-NoThrowAttr 0x5583d17b13d0 <col:121>
|-FunctionDecl 0x5583d17b1518 <line:523:22> col:22 implicit llrintf 'long long (float)' extern
| |-ParmVarDecl 0x5583d17b15b8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d17b1628 <col:22> Implicit
|-FunctionDecl 0x5583d17b1680 prev 0x5583d17b1518 <col:1, col:71> col:22 llrintf 'long long (float)' extern
| |-ParmVarDecl 0x5583d17b1440 <col:31, col:37> col:37 __x 'float'
| `-NoThrowAttr 0x5583d17b1728 <col:58>
|-FunctionDecl 0x5583d17b1830 <col:74, col:146> col:95 __llrintf 'long long (float)' extern
| |-ParmVarDecl 0x5583d17b1798 <col:106, col:112> col:112 __x 'float'
| `-NoThrowAttr 0x5583d17b18d8 <col:133>
|-FunctionDecl 0x5583d17b19e0 <line:527:17> col:17 implicit lroundf 'long (float)' extern
| |-ParmVarDecl 0x5583d17b1a80 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d17b1af0 <col:17> Implicit
|-FunctionDecl 0x5583d17b1b48 prev 0x5583d17b19e0 <col:1, col:66> col:17 lroundf 'long (float)' extern
| |-ParmVarDecl 0x5583d17b1948 <col:26, col:32> col:32 __x 'float'
| `-NoThrowAttr 0x5583d17b1bf0 <col:53>
|-FunctionDecl 0x5583d17b1cf8 <col:69, col:136> col:85 __lroundf 'long (float)' extern
| |-ParmVarDecl 0x5583d17b1c60 <col:96, col:102> col:102 __x 'float'
| `-NoThrowAttr 0x5583d17b1da0 <col:123>
|-FunctionDecl 0x5583d17b1ea8 <line:529:22> col:22 implicit llroundf 'long long (float)' extern
| |-ParmVarDecl 0x5583d17b1f48 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d17b1fb8 <col:22> Implicit
|-FunctionDecl 0x5583d17b2010 prev 0x5583d17b1ea8 <col:1, col:72> col:22 llroundf 'long long (float)' extern
| |-ParmVarDecl 0x5583d17b1e10 <col:32, col:38> col:38 __x 'float'
| `-NoThrowAttr 0x5583d17b20b8 <col:59>
|-FunctionDecl 0x5583d1798050 <col:75, col:148> col:96 __llroundf 'long long (float)' extern
| |-ParmVarDecl 0x5583d1797fb8 <col:108, col:114> col:114 __x 'float'
| `-NoThrowAttr 0x5583d17980f8 <col:135>
|-FunctionDecl 0x5583d1798288 <line:533:14> col:14 implicit fdimf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d1798328 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5583d1798390 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5583d1798408 <col:14> Implicit
|-FunctionDecl 0x5583d1798460 prev 0x5583d1798288 <col:1, col:72> col:14 fdimf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d1798168 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x5583d17981e8 <col:32, col:38> col:38 __y 'float'
| `-NoThrowAttr 0x5583d1798510 <col:59>
|-FunctionDecl 0x5583d17986a0 <col:75, col:148> col:88 __fdimf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d1798580 <col:97, col:103> col:103 __x 'float'
| |-ParmVarDecl 0x5583d1798600 <col:108, col:114> col:114 __y 'float'
| `-NoThrowAttr 0x5583d1798750 <col:135>
|-FunctionDecl 0x5583d17988e0 <line:536:14> col:14 implicit fmaxf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d1798980 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5583d17989e8 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5583d1798a60 <col:14> Implicit
| `-ConstAttr 0x5583d1798ab8 <col:14> Implicit
|-FunctionDecl 0x5583d1798ae0 prev 0x5583d17988e0 <col:1, col:100> col:14 fmaxf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d17987c0 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x5583d1798840 <col:32, col:38> col:38 __y 'float'
| |-NoThrowAttr 0x5583d1798b90 <col:59>
| `-ConstAttr 0x5583d1798be8 <col:90>
|-FunctionDecl 0x5583d1798d48 <col:103, col:204> col:116 __fmaxf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d1798c28 <col:125, col:131> col:131 __x 'float'
| |-ParmVarDecl 0x5583d1798ca8 <col:136, col:142> col:142 __y 'float'
| |-NoThrowAttr 0x5583d1798df8 <col:163>
| `-ConstAttr 0x5583d1798e50 <col:194>
|-FunctionDecl 0x5583d17b6178 <line:539:14> col:14 implicit fminf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d17b6218 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5583d17b6280 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5583d17b62f8 <col:14> Implicit
| `-ConstAttr 0x5583d17b6350 <col:14> Implicit
|-FunctionDecl 0x5583d17b6378 prev 0x5583d17b6178 <col:1, col:100> col:14 fminf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d1798e90 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x5583d1798f10 <col:32, col:38> col:38 __y 'float'
| |-NoThrowAttr 0x5583d17b6428 <col:59>
| `-ConstAttr 0x5583d17b6480 <col:90>
|-FunctionDecl 0x5583d17b65e0 <col:103, col:204> col:116 __fminf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d17b64c0 <col:125, col:131> col:131 __x 'float'
| |-ParmVarDecl 0x5583d17b6540 <col:136, col:142> col:142 __y 'float'
| |-NoThrowAttr 0x5583d17b6690 <col:163>
| `-ConstAttr 0x5583d17b66e8 <col:194>
|-FunctionDecl 0x5583d17b67c0 <line:543:1, line:544:32> line:543:12 __fpclassifyf 'int (float)' extern
| |-ParmVarDecl 0x5583d17b6728 <col:27, col:33> col:33 __value 'float'
| |-NoThrowAttr 0x5583d17b6868 <col:58>
| `-ConstAttr 0x5583d17b68c0 <line:544:22>
|-FunctionDecl 0x5583d17b6998 <line:547:1, line:548:32> line:547:12 __signbitf 'int (float)' extern
| |-ParmVarDecl 0x5583d17b6900 <col:24, col:30> col:30 __value 'float'
| |-NoThrowAttr 0x5583d17b6a40 <col:55>
| `-ConstAttr 0x5583d17b6a98 <line:548:22>
|-FunctionDecl 0x5583d17b6cc8 <line:552:14> col:14 implicit fmaf 'float (float, float, float)' extern
| |-ParmVarDecl 0x5583d17b6d68 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5583d17b6dd0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5583d17b6e38 <<invalid sloc>> <invalid sloc> 'float'
| |-ConstAttr 0x5583d17b6eb8 <col:14> Implicit
| `-NoThrowAttr 0x5583d17b6f10 <col:14> Implicit
|-FunctionDecl 0x5583d17b6f38 prev 0x5583d17b6cc8 <col:1, col:82> col:14 fmaf 'float (float, float, float)' extern
| |-ParmVarDecl 0x5583d17b6ad8 <col:20, col:26> col:26 __x 'float'
| |-ParmVarDecl 0x5583d17b6b58 <col:31, col:37> col:37 __y 'float'
| |-ParmVarDecl 0x5583d17b6bd8 <col:42, col:48> col:48 __z 'float'
| |-ConstAttr 0x5583d17b7048 <col:14> Inherited Implicit
| `-NoThrowAttr 0x5583d17b6ff0 <col:69>
|-FunctionDecl 0x5583d17b7278 <col:85, col:168> col:98 __fmaf 'float (float, float, float)' extern
| |-ParmVarDecl 0x5583d17b7088 <col:106, col:112> col:112 __x 'float'
| |-ParmVarDecl 0x5583d17b7150 <col:117, col:123> col:123 __y 'float'
| |-ParmVarDecl 0x5583d17b71d0 <col:128, col:134> col:134 __z 'float'
| `-NoThrowAttr 0x5583d17b7330 <col:155>
|-FunctionDecl 0x5583d17b74c0 <line:553:1, col:73> col:14 scalbf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d17b73a0 <col:22, col:28> col:28 __x 'float'
| |-ParmVarDecl 0x5583d17b7420 <col:33, col:39> col:39 __n 'float'
| `-NoThrowAttr 0x5583d17b7570 <col:60>
|-FunctionDecl 0x5583d17b7700 <col:76, col:150> col:89 __scalbf 'float (float, float)' extern
| |-ParmVarDecl 0x5583d17b75e0 <col:99, col:105> col:105 __x 'float'
| |-ParmVarDecl 0x5583d17b7660 <col:110, col:116> col:116 __n 'float'
| `-NoThrowAttr 0x5583d17b77b0 <col:137>
|-FunctionDecl 0x5583d17b78f8 <line:554:20> col:20 implicit acosl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17b7998 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17b7a08 <col:20> Implicit
|-FunctionDecl 0x5583d17b7a60 prev 0x5583d17b78f8 <col:1, col:73> col:20 acosl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17b7820 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5583d17b7b08 <col:60>
|-FunctionDecl 0x5583d17b7c10 <col:76, col:150> col:95 __acosl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17b7b78 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5583d17b7cb8 <col:137>
|-FunctionDecl 0x5583d17b7dc0 <line:556:20> col:20 implicit asinl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17b7e60 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17b7ed0 <col:20> Implicit
|-FunctionDecl 0x5583d17b7f28 prev 0x5583d17b7dc0 <col:1, col:73> col:20 asinl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17b7d28 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5583d17b7fd0 <col:60>
|-FunctionDecl 0x5583d17b8160 <col:76, col:150> col:95 __asinl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17b8040 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5583d17b8208 <col:137>
|-FunctionDecl 0x5583d17b8310 <line:558:20> col:20 implicit atanl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17b83b0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17b8420 <col:20> Implicit
|-FunctionDecl 0x5583d17b8478 prev 0x5583d17b8310 <col:1, col:73> col:20 atanl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17b8278 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5583d17b8520 <col:60>
|-FunctionDecl 0x5583d17b8628 <col:76, col:150> col:95 __atanl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17b8590 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5583d17b86d0 <col:137>
|-FunctionDecl 0x5583d17b88a8 <line:560:20> col:20 implicit atan2l 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17b8948 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5583d17b89b0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17b8a28 <col:20> Implicit
|-FunctionDecl 0x5583d17b8a80 prev 0x5583d17b88a8 <col:1, col:91> col:20 atan2l 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17b8740 <col:28, col:40> col:40 __y 'long double'
| |-ParmVarDecl 0x5583d17b87c0 <col:45, col:57> col:57 __x 'long double'
| `-NoThrowAttr 0x5583d17b8b30 <col:78>
|-FunctionDecl 0x5583d17b8cc0 <col:94, col:186> col:113 __atan2l 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17b8ba0 <col:123, col:135> col:135 __y 'long double'
| |-ParmVarDecl 0x5583d17b8c20 <col:140, col:152> col:152 __x 'long double'
| `-NoThrowAttr 0x5583d17b8d70 <col:173>
|-FunctionDecl 0x5583d17b8e78 <line:563:21> col:21 implicit cosl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17b8f18 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17b8f88 <col:21> Implicit
|-FunctionDecl 0x5583d17b8fe0 prev 0x5583d17b8e78 <col:2, col:73> col:21 cosl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17b8de0 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5583d17b9088 <col:60>
|-FunctionDecl 0x5583d17b91a0 <col:76, col:149> col:95 __cosl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17b90f8 <col:103, col:115> col:115 __x 'long double'
| `-NoThrowAttr 0x5583d17b9248 <col:136>
|-FunctionDecl 0x5583d17b9350 <line:565:21> col:21 implicit sinl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17b93f0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17b9460 <col:21> Implicit
|-FunctionDecl 0x5583d17b94b8 prev 0x5583d17b9350 <col:2, col:73> col:21 sinl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17b92b8 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5583d17b9560 <col:60>
|-FunctionDecl 0x5583d17b9668 <col:76, col:149> col:95 __sinl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17b95d0 <col:103, col:115> col:115 __x 'long double'
| `-NoThrowAttr 0x5583d17b9710 <col:136>
|-FunctionDecl 0x5583d17b9818 <line:567:20> col:20 implicit tanl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17b98b8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17b9928 <col:20> Implicit
|-FunctionDecl 0x5583d17b9980 prev 0x5583d17b9818 <col:1, col:72> col:20 tanl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17b9780 <col:26, col:38> col:38 __x 'long double'
| `-NoThrowAttr 0x5583d17b9a28 <col:59>
|-FunctionDecl 0x5583d17b9b30 <col:75, col:148> col:94 __tanl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17b9a98 <col:102, col:114> col:114 __x 'long double'
| `-NoThrowAttr 0x5583d17b9bd8 <col:135>
|-FunctionDecl 0x5583d17b9ce0 <line:572:20> col:20 implicit coshl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17b9d80 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17b9df0 <col:20> Implicit
|-FunctionDecl 0x5583d17b9e48 prev 0x5583d17b9ce0 <col:1, col:73> col:20 coshl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17b9c48 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5583d17b9ef0 <col:60>
|-FunctionDecl 0x5583d17b9ff8 <col:76, col:150> col:95 __coshl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17b9f60 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5583d17ba0a0 <col:137>
|-FunctionDecl 0x5583d17ba218 <line:574:20> col:20 implicit sinhl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17ba2b8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17ba328 <col:20> Implicit
|-FunctionDecl 0x5583d17ba380 prev 0x5583d17ba218 <col:1, col:73> col:20 sinhl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17ba180 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5583d17ba428 <col:60>
|-FunctionDecl 0x5583d17ba530 <col:76, col:150> col:95 __sinhl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17ba498 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5583d17ba5d8 <col:137>
|-FunctionDecl 0x5583d17ba6e0 <line:576:20> col:20 implicit tanhl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17ba780 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17ba7f0 <col:20> Implicit
|-FunctionDecl 0x5583d17ba848 prev 0x5583d17ba6e0 <col:1, col:73> col:20 tanhl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17ba648 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5583d17ba8f0 <col:60>
|-FunctionDecl 0x5583d17ba9f8 <col:76, col:150> col:95 __tanhl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17ba960 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5583d17baaa0 <col:137>
|-FunctionDecl 0x5583d17baba8 <line:577:20> col:20 implicit acoshl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bac48 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17bacb8 <col:20> Implicit
|-FunctionDecl 0x5583d17bad10 prev 0x5583d17baba8 <col:1, col:74> col:20 acoshl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bab10 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x5583d17badb8 <col:61>
|-FunctionDecl 0x5583d17baec0 <col:77, col:152> col:96 __acoshl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bae28 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x5583d17baf68 <col:139>
|-FunctionDecl 0x5583d17bb070 <line:579:20> col:20 implicit asinhl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bb110 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17bb190 <col:20> Implicit
|-FunctionDecl 0x5583d17bb1e8 prev 0x5583d17bb070 <col:1, col:74> col:20 asinhl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bafd8 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x5583d17bb290 <col:61>
|-FunctionDecl 0x5583d17bb398 <col:77, col:152> col:96 __asinhl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bb300 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x5583d17bb440 <col:139>
|-FunctionDecl 0x5583d17bb548 <line:581:20> col:20 implicit atanhl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bb5e8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17bb658 <col:20> Implicit
|-FunctionDecl 0x5583d17bb6b0 prev 0x5583d17bb548 <col:1, col:74> col:20 atanhl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bb4b0 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x5583d17bb758 <col:61>
|-FunctionDecl 0x5583d17bb860 <col:77, col:152> col:96 __atanhl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bb7c8 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x5583d17bb908 <col:139>
|-FunctionDecl 0x5583d17bba10 <line:589:21> col:21 implicit expl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bbab0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17bbb20 <col:21> Implicit
|-FunctionDecl 0x5583d17bbb78 prev 0x5583d17bba10 <col:2, col:73> col:21 expl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bb978 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5583d17bbc20 <col:60>
|-FunctionDecl 0x5583d17bbd28 <col:76, col:149> col:95 __expl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bbc90 <col:103, col:115> col:115 __x 'long double'
| `-NoThrowAttr 0x5583d17bbdd0 <col:136>
|-FunctionDecl 0x5583d17bbfa8 <line:592:20> col:20 implicit frexpl 'long double (long double, int *)' extern
| |-ParmVarDecl 0x5583d17bc048 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5583d17bc0b0 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x5583d17bc128 <col:20> Implicit
|-FunctionDecl 0x5583d17bc1a0 prev 0x5583d17bbfa8 <col:1, col:91> col:20 frexpl 'long double (long double, int *)' extern
| |-ParmVarDecl 0x5583d17bbe40 <col:28, col:40> col:40 __x 'long double'
| |-ParmVarDecl 0x5583d17bbec0 <col:45, col:50> col:50 __exponent 'int *'
| `-NoThrowAttr 0x5583d17bc250 <col:78>
|-FunctionDecl 0x5583d17bc3e0 <col:94, col:186> col:113 __frexpl 'long double (long double, int *)' extern
| |-ParmVarDecl 0x5583d17bc2c0 <col:123, col:135> col:135 __x 'long double'
| |-ParmVarDecl 0x5583d17bc340 <col:140, col:145> col:145 __exponent 'int *'
| `-NoThrowAttr 0x5583d17bc490 <col:173>
|-FunctionDecl 0x5583d17bc668 <line:595:20> col:20 implicit ldexpl 'long double (long double, int)' extern
| |-ParmVarDecl 0x5583d17bc708 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5583d17bc770 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x5583d17bc7e8 <col:20> Implicit
|-FunctionDecl 0x5583d17bc840 prev 0x5583d17bc668 <col:1, col:90> col:20 ldexpl 'long double (long double, int)' extern
| |-ParmVarDecl 0x5583d17bc500 <col:28, col:40> col:40 __x 'long double'
| |-ParmVarDecl 0x5583d17bc580 <col:45, col:49> col:49 __exponent 'int'
| `-NoThrowAttr 0x5583d17bc8f0 <col:77>
|-FunctionDecl 0x5583d17bca80 <col:93, col:184> col:112 __ldexpl 'long double (long double, int)' extern
| |-ParmVarDecl 0x5583d17bc960 <col:122, col:134> col:134 __x 'long double'
| |-ParmVarDecl 0x5583d17bc9e0 <col:139, col:143> col:143 __exponent 'int'
| `-NoThrowAttr 0x5583d17bcb30 <col:171>
|-FunctionDecl 0x5583d17bcc38 <line:598:21> col:21 implicit logl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bccd8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17bcd48 <col:21> Implicit
|-FunctionDecl 0x5583d17bcda0 prev 0x5583d17bcc38 <col:2, col:73> col:21 logl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bcba0 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5583d17bce48 <col:60>
|-FunctionDecl 0x5583d17bcf50 <col:76, col:149> col:95 __logl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bceb8 <col:103, col:115> col:115 __x 'long double'
| `-NoThrowAttr 0x5583d17bcff8 <col:136>
|-FunctionDecl 0x5583d17bd100 <line:601:20> col:20 implicit log10l 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bd1b0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17bd220 <col:20> Implicit
|-FunctionDecl 0x5583d17bd278 prev 0x5583d17bd100 <col:1, col:74> col:20 log10l 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bd068 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x5583d17bd320 <col:61>
|-FunctionDecl 0x5583d17bd428 <col:77, col:152> col:96 __log10l 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bd390 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x5583d17bd4d0 <col:139>
|-FunctionDecl 0x5583d17bd6d8 <line:604:20> col:20 implicit modfl 'long double (long double, long double *)' extern
| |-ParmVarDecl 0x5583d17bd778 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5583d17bd7e0 <<invalid sloc>> <invalid sloc> 'long double *'
| `-NoThrowAttr 0x5583d17bd858 <col:20> Implicit
|-FunctionDecl 0x5583d17bd8b0 prev 0x5583d17bd6d8 <col:1, col:94> col:20 modfl 'long double (long double, long double *)' extern
| |-ParmVarDecl 0x5583d17bd540 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x5583d17bd5f8 <col:44, col:57> col:57 __iptr 'long double *'
| `-NoThrowAttr 0x5583d17bd960 <col:81>
|-FunctionDecl 0x5583d17bdb10 <col:97, col:226> col:116 __modfl 'long double (long double, long double *)' extern
| |-ParmVarDecl 0x5583d17bd9d0 <col:125, col:137> col:137 __x 'long double'
| |-ParmVarDecl 0x5583d17bda50 <col:142, col:155> col:155 __iptr 'long double *'
| |-NoThrowAttr 0x5583d17bdbc0 <col:179>
| `-NonNullAttr 0x5583d17bdc18 <col:210, col:224> 2
|-FunctionDecl 0x5583d17bdd08 <line:605:20> col:20 implicit expm1l 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bdda8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17bde18 <col:20> Implicit
|-FunctionDecl 0x5583d17bde70 prev 0x5583d17bdd08 <col:1, col:74> col:20 expm1l 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bdc70 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x5583d17bdf18 <col:61>
|-FunctionDecl 0x5583d17be020 <col:77, col:152> col:96 __expm1l 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bdf88 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x5583d17be0c8 <col:139>
|-FunctionDecl 0x5583d17be1f0 <line:608:20> col:20 implicit log1pl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17be290 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17be300 <col:20> Implicit
|-FunctionDecl 0x5583d17be358 prev 0x5583d17be1f0 <col:1, col:74> col:20 log1pl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17be138 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x5583d17be400 <col:61>
|-FunctionDecl 0x5583d17be508 <col:77, col:152> col:96 __log1pl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17be470 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x5583d17be5b0 <col:139>
|-FunctionDecl 0x5583d17be6b8 <line:611:20> col:20 implicit logbl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17be758 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17be7c8 <col:20> Implicit
|-FunctionDecl 0x5583d17be820 prev 0x5583d17be6b8 <col:1, col:73> col:20 logbl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17be620 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5583d17be8c8 <col:60>
|-FunctionDecl 0x5583d17be9d0 <col:76, col:150> col:95 __logbl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17be938 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5583d17bea78 <col:137>
|-FunctionDecl 0x5583d17beb80 <line:618:20> col:20 implicit exp2l 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bec20 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17bec90 <col:20> Implicit
|-FunctionDecl 0x5583d17bece8 prev 0x5583d17beb80 <col:1, col:73> col:20 exp2l 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17beae8 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5583d17bed90 <col:60>
|-FunctionDecl 0x5583d17bee98 <col:76, col:150> col:95 __exp2l 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bee00 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5583d17bef40 <col:137>
|-FunctionDecl 0x5583d17bf048 <line:621:20> col:20 implicit log2l 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bf0e8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17bf158 <col:20> Implicit
|-FunctionDecl 0x5583d17bf1d0 prev 0x5583d17bf048 <col:1, col:73> col:20 log2l 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17befb0 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5583d17bf278 <col:60>
|-FunctionDecl 0x5583d17bf380 <col:76, col:150> col:95 __log2l 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bf2e8 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5583d17bf428 <col:137>
|-FunctionDecl 0x5583d17bf5b8 <line:622:21> col:21 implicit powl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17bf658 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5583d17bf6c0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17bf738 <col:21> Implicit
|-FunctionDecl 0x5583d17bf790 prev 0x5583d17bf5b8 <col:2, col:90> col:21 powl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17bf498 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x5583d17bf518 <col:44, col:56> col:56 __y 'long double'
| `-NoThrowAttr 0x5583d17bf840 <col:77>
|-FunctionDecl 0x5583d17bf9d0 <col:93, col:183> col:112 __powl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17bf8b0 <col:120, col:132> col:132 __x 'long double'
| |-ParmVarDecl 0x5583d17bf930 <col:137, col:149> col:149 __y 'long double'
| `-NoThrowAttr 0x5583d17bfa80 <col:170>
|-FunctionDecl 0x5583d17bfb88 <line:625:20> col:20 implicit sqrtl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bfc28 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17bfc98 <col:20> Implicit
|-FunctionDecl 0x5583d17bfcf0 prev 0x5583d17bfb88 <col:1, col:73> col:20 sqrtl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bfaf0 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5583d17bfd98 <col:60>
|-FunctionDecl 0x5583d17bfea0 <col:76, col:150> col:95 __sqrtl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17bfe08 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5583d17bff48 <col:137>
|-FunctionDecl 0x5583d17c00d8 <line:631:20> col:20 implicit hypotl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17c01e0 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5583d17c0248 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17c02c0 <col:20> Implicit
|-FunctionDecl 0x5583d17c0318 prev 0x5583d17c00d8 <col:1, col:91> col:20 hypotl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17bffb8 <col:28, col:40> col:40 __x 'long double'
| |-ParmVarDecl 0x5583d17c0038 <col:45, col:57> col:57 __y 'long double'
| `-NoThrowAttr 0x5583d17c03c8 <col:78>
|-FunctionDecl 0x5583d17c0558 <col:94, col:186> col:113 __hypotl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17c0438 <col:123, col:135> col:135 __x 'long double'
| |-ParmVarDecl 0x5583d17c04b8 <col:140, col:152> col:152 __y 'long double'
| `-NoThrowAttr 0x5583d17c0608 <col:173>
|-FunctionDecl 0x5583d17c0710 <line:638:20> col:20 implicit cbrtl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c07b0 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5583d17c0820 <col:20> Implicit
| `-ConstAttr 0x5583d17c0878 <col:20> Implicit
|-FunctionDecl 0x5583d17c08a0 prev 0x5583d17c0710 <col:1, col:73> col:20 cbrtl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c0678 <col:27, col:39> col:39 __x 'long double'
| |-ConstAttr 0x5583d17c09a0 <col:20> Inherited Implicit
| `-NoThrowAttr 0x5583d17c0948 <col:60>
|-FunctionDecl 0x5583d17c0a78 <col:76, col:150> col:95 __cbrtl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c09e0 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5583d17c0b20 <col:137>
|-FunctionDecl 0x5583d17c0c28 <line:639:20> col:20 implicit ceill 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c0cc8 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5583d17c0d38 <col:20> Implicit
| `-ConstAttr 0x5583d17c0d90 <col:20> Implicit
|-FunctionDecl 0x5583d17c0db8 prev 0x5583d17c0c28 <col:1, col:101> col:20 ceill 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c0b90 <col:27, col:39> col:39 __x 'long double'
| |-NoThrowAttr 0x5583d17c0e60 <col:60>
| `-ConstAttr 0x5583d17c0eb8 <col:91>
|-FunctionDecl 0x5583d17c0f90 <col:104, col:206> col:123 __ceill 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c0ef8 <col:132, col:144> col:144 __x 'long double'
| |-NoThrowAttr 0x5583d17c1038 <col:165>
| `-ConstAttr 0x5583d17c1090 <col:196>
|-FunctionDecl 0x5583d17c11f0 <line:642:20> col:20 implicit fabsl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c1290 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5583d17c1300 <col:20> Implicit
| `-ConstAttr 0x5583d17c1358 <col:20> Implicit
|-FunctionDecl 0x5583d17c1380 prev 0x5583d17c11f0 <col:1, col:101> col:20 fabsl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c10d0 <col:27, col:39> col:39 __x 'long double'
| |-NoThrowAttr 0x5583d17c1428 <col:60>
| `-ConstAttr 0x5583d17c1480 <col:91>
|-FunctionDecl 0x5583d17c1558 <col:104, col:206> col:123 __fabsl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c14c0 <col:132, col:144> col:144 __x 'long double'
| |-NoThrowAttr 0x5583d17c1600 <col:165>
| `-ConstAttr 0x5583d17c1658 <col:196>
|-FunctionDecl 0x5583d17c1730 <line:645:20> col:20 implicit floorl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c17d0 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5583d17c1840 <col:20> Implicit
| `-ConstAttr 0x5583d17c1898 <col:20> Implicit
|-FunctionDecl 0x5583d17c18c0 prev 0x5583d17c1730 <col:1, col:102> col:20 floorl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c1698 <col:28, col:40> col:40 __x 'long double'
| |-NoThrowAttr 0x5583d17c1968 <col:61>
| `-ConstAttr 0x5583d17c19c0 <col:92>
|-FunctionDecl 0x5583d17c1a98 <col:105, col:208> col:124 __floorl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c1a00 <col:134, col:146> col:146 __x 'long double'
| |-NoThrowAttr 0x5583d17c1b40 <col:167>
| `-ConstAttr 0x5583d17c1b98 <col:198>
|-FunctionDecl 0x5583d17c1cf8 <line:648:20> col:20 implicit fmodl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17c1d98 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5583d17c1e00 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17c1e78 <col:20> Implicit
|-FunctionDecl 0x5583d17c1ed0 prev 0x5583d17c1cf8 <col:1, col:90> col:20 fmodl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17c1bd8 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x5583d17c1c58 <col:44, col:56> col:56 __y 'long double'
| `-NoThrowAttr 0x5583d17c1f80 <col:77>
|-FunctionDecl 0x5583d17c2110 <col:93, col:184> col:112 __fmodl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17c1ff0 <col:121, col:133> col:133 __x 'long double'
| |-ParmVarDecl 0x5583d17c2070 <col:138, col:150> col:150 __y 'long double'
| `-NoThrowAttr 0x5583d17c21c0 <col:171>
|-FunctionDecl 0x5583d17c2318 <line:653:1, col:100> col:12 used __isinfl 'int (long double)' extern
| |-ParmVarDecl 0x5583d17c2248 <col:22, col:34> col:34 __value 'long double'
| |-NoThrowAttr 0x5583d17c23c0 <col:59>
| `-ConstAttr 0x5583d17c2418 <col:90>
|-FunctionDecl 0x5583d17c24f0 <line:656:12> col:12 implicit __finitel 'int (long double)' extern
| |-ParmVarDecl 0x5583d17c2590 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5583d17c2600 <col:12> Implicit
| `-ConstAttr 0x5583d17c2658 <col:12> Implicit
|-FunctionDecl 0x5583d17c2680 prev 0x5583d17c24f0 <col:1, col:101> col:12 __finitel 'int (long double)' extern
| |-ParmVarDecl 0x5583d17c2458 <col:23, col:35> col:35 __value 'long double'
| |-NoThrowAttr 0x5583d17c2728 <col:60>
| `-ConstAttr 0x5583d17c2780 <col:91>
|-FunctionDecl 0x5583d17c2858 <line:662:1, col:98> col:12 isinfl 'int (long double)' extern
| |-ParmVarDecl 0x5583d17c27c0 <col:20, col:32> col:32 __value 'long double'
| |-NoThrowAttr 0x5583d17c2900 <col:57>
| `-ConstAttr 0x5583d17c2958 <col:88>
|-FunctionDecl 0x5583d17c2a30 <line:665:12> col:12 implicit finitel 'int (long double)' extern
| |-ParmVarDecl 0x5583d17c2ad0 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5583d17c2b40 <col:12> Implicit
| `-ConstAttr 0x5583d17c2b98 <col:12> Implicit
|-FunctionDecl 0x5583d17c2bc0 prev 0x5583d17c2a30 <col:1, col:99> col:12 finitel 'int (long double)' extern
| |-ParmVarDecl 0x5583d17c2998 <col:21, col:33> col:33 __value 'long double'
| |-NoThrowAttr 0x5583d17c2c68 <col:58>
| `-ConstAttr 0x5583d17c2cc0 <col:89>
|-FunctionDecl 0x5583d17c2e20 <line:668:1, col:90> col:20 dreml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17c2d00 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x5583d17c2d80 <col:44, col:56> col:56 __y 'long double'
| `-NoThrowAttr 0x5583d17c2ed0 <col:77>
|-FunctionDecl 0x5583d17c3060 <col:93, col:184> col:112 __dreml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17c2f40 <col:121, col:133> col:133 __x 'long double'
| |-ParmVarDecl 0x5583d17c2fc0 <col:138, col:150> col:150 __y 'long double'
| `-NoThrowAttr 0x5583d17c3110 <col:171>
|-FunctionDecl 0x5583d17c3240 <line:672:1, col:80> col:20 significandl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c3180 <col:34, col:46> col:46 __x 'long double'
| `-NoThrowAttr 0x5583d17c32e8 <col:67>
|-FunctionDecl 0x5583d17c33f0 <col:83, col:164> col:102 __significandl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c3358 <col:118, col:130> col:130 __x 'long double'
| `-NoThrowAttr 0x5583d17c3498 <col:151>
|-FunctionDecl 0x5583d17c3628 <line:678:20> col:20 implicit copysignl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17c36c8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5583d17c3730 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5583d17c37a8 <col:20> Implicit
| `-ConstAttr 0x5583d17c3800 <col:20> Implicit
|-FunctionDecl 0x5583d17c3828 prev 0x5583d17c3628 <col:1, col:122> col:20 copysignl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17c3508 <col:31, col:43> col:43 __x 'long double'
| |-ParmVarDecl 0x5583d17c3588 <col:48, col:60> col:60 __y 'long double'
| |-NoThrowAttr 0x5583d17c38d8 <col:81>
| `-ConstAttr 0x5583d17c3930 <col:112>
|-FunctionDecl 0x5583d17c3a90 <col:125, col:248> col:144 __copysignl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17c3970 <col:157, col:169> col:169 __x 'long double'
| |-ParmVarDecl 0x5583d17c39f0 <col:174, col:186> col:186 __y 'long double'
| |-NoThrowAttr 0x5583d17c3b40 <col:207>
| `-ConstAttr 0x5583d17c3b98 <col:238>
|-FunctionDecl 0x5583d17c3ca8 <line:685:20> col:20 implicit nanl 'long double (const char *)' extern
| |-ParmVarDecl 0x5583d17c3d48 <<invalid sloc>> <invalid sloc> 'const char *'
| |-NoThrowAttr 0x5583d17c3db8 <col:20> Implicit
| `-PureAttr 0x5583d17c3e10 <col:20> Implicit
|-FunctionDecl 0x5583d17c3e38 prev 0x5583d17c3ca8 <col:1, col:103> col:20 nanl 'long double (const char *)' extern
| |-ParmVarDecl 0x5583d17c3bd8 <col:26, col:38> col:38 __tagb 'const char *'
| |-PureAttr 0x5583d17c3f60 <col:20> Inherited Implicit
| |-NoThrowAttr 0x5583d17c3ee0 <col:62>
| `-ConstAttr 0x5583d17c3f38 <col:93>
|-FunctionDecl 0x5583d17c4038 <col:106, col:210> col:125 __nanl 'long double (const char *)' extern
| |-ParmVarDecl 0x5583d17c3fa0 <col:133, col:145> col:145 __tagb 'const char *'
| |-NoThrowAttr 0x5583d17c40e0 <col:169>
| `-ConstAttr 0x5583d17c4138 <col:200>
|-FunctionDecl 0x5583d17c4220 <line:691:1, col:100> col:12 used __isnanl 'int (long double)' extern
| |-ParmVarDecl 0x5583d17c4178 <col:22, col:34> col:34 __value 'long double'
| |-NoThrowAttr 0x5583d17c42c8 <col:59>
| `-ConstAttr 0x5583d17c4320 <col:90>
|-FunctionDecl 0x5583d17c43f8 <line:695:1, col:98> col:12 isnanl 'int (long double)' extern
| |-ParmVarDecl 0x5583d17c4360 <col:20, col:32> col:32 __value 'long double'
| |-NoThrowAttr 0x5583d17c44a0 <col:57>
| `-ConstAttr 0x5583d17c44f8 <col:88>
|-FunctionDecl 0x5583d17c45d0 <line:698:1, col:67> col:20 j0l 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c4538 <col:25, col:30> col:36 'long double'
| `-NoThrowAttr 0x5583d17c4678 <col:54>
|-FunctionDecl 0x5583d17c4780 <col:70, col:138> col:89 __j0l 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c46e8 <col:96, col:101> col:107 'long double'
| `-NoThrowAttr 0x5583d17c4828 <col:125>
|-FunctionDecl 0x5583d17c4930 <line:699:1, col:67> col:20 j1l 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c4898 <col:25, col:30> col:36 'long double'
| `-NoThrowAttr 0x5583d17c49d8 <col:54>
|-FunctionDecl 0x5583d17c4ae0 <col:70, col:138> col:89 __j1l 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c4a48 <col:96, col:101> col:107 'long double'
| `-NoThrowAttr 0x5583d17c4b88 <col:125>
|-FunctionDecl 0x5583d17c4d58 <line:700:1, col:72> col:20 jnl 'long double (int, long double)' extern
| |-ParmVarDecl 0x5583d17c4bf8 <col:25> col:28 'int'
| |-ParmVarDecl 0x5583d17c4c78 <col:30, col:35> col:41 'long double'
| `-NoThrowAttr 0x5583d17c4e08 <col:59>
|-FunctionDecl 0x5583d17c4f98 <col:75, col:148> col:94 __jnl 'long double (int, long double)' extern
| |-ParmVarDecl 0x5583d17c4e78 <col:101> col:104 'int'
| |-ParmVarDecl 0x5583d17c4ef8 <col:106, col:111> col:117 'long double'
| `-NoThrowAttr 0x5583d17c5048 <col:135>
|-FunctionDecl 0x5583d17c5150 <line:701:1, col:67> col:20 y0l 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c50b8 <col:25, col:30> col:36 'long double'
| `-NoThrowAttr 0x5583d17c51f8 <col:54>
|-FunctionDecl 0x5583d17c5310 <col:70, col:138> col:89 __y0l 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c5278 <col:96, col:101> col:107 'long double'
| `-NoThrowAttr 0x5583d17c53b8 <col:125>
|-FunctionDecl 0x5583d17c54c0 <line:702:1, col:67> col:20 y1l 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c5428 <col:25, col:30> col:36 'long double'
| `-NoThrowAttr 0x5583d17c5568 <col:54>
|-FunctionDecl 0x5583d17c5670 <col:70, col:138> col:89 __y1l 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c55d8 <col:96, col:101> col:107 'long double'
| `-NoThrowAttr 0x5583d17c5718 <col:125>
|-FunctionDecl 0x5583d17c58a8 <line:703:1, col:72> col:20 ynl 'long double (int, long double)' extern
| |-ParmVarDecl 0x5583d17c5788 <col:25> col:28 'int'
| |-ParmVarDecl 0x5583d17c5808 <col:30, col:35> col:41 'long double'
| `-NoThrowAttr 0x5583d17c5958 <col:59>
|-FunctionDecl 0x5583d17c5ae8 <col:75, col:148> col:94 __ynl 'long double (int, long double)' extern
| |-ParmVarDecl 0x5583d17c59c8 <col:101> col:104 'int'
| |-ParmVarDecl 0x5583d17c5a48 <col:106, col:111> col:117 'long double'
| `-NoThrowAttr 0x5583d17c5b98 <col:135>
|-FunctionDecl 0x5583d17c5ca0 <line:710:20> col:20 implicit erfl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c5d40 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17c5db0 <col:20> Implicit
|-FunctionDecl 0x5583d17c5e08 prev 0x5583d17c5ca0 <col:1, col:68> col:20 erfl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c5c08 <col:26, col:31> col:37 'long double'
| `-NoThrowAttr 0x5583d17c5eb0 <col:55>
|-FunctionDecl 0x5583d17c5fb8 <col:71, col:140> col:90 __erfl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c5f20 <col:98, col:103> col:109 'long double'
| `-NoThrowAttr 0x5583d17c6060 <col:127>
|-FunctionDecl 0x5583d17c6168 <line:711:20> col:20 implicit erfcl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17a2030 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17a20a0 <col:20> Implicit
|-FunctionDecl 0x5583d17a20f8 prev 0x5583d17c6168 <col:1, col:69> col:20 erfcl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c60d0 <col:27, col:32> col:38 'long double'
| `-NoThrowAttr 0x5583d17a21a0 <col:56>
|-FunctionDecl 0x5583d17a22a8 <col:72, col:142> col:91 __erfcl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17a2210 <col:100, col:105> col:111 'long double'
| `-NoThrowAttr 0x5583d17a2350 <col:129>
|-FunctionDecl 0x5583d17a2458 <line:712:20> col:20 implicit lgammal 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17a24f8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17a2568 <col:20> Implicit
|-FunctionDecl 0x5583d17a25c0 prev 0x5583d17a2458 <col:1, col:71> col:20 lgammal 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17a23c0 <col:29, col:34> col:40 'long double'
| `-NoThrowAttr 0x5583d17a2668 <col:58>
|-FunctionDecl 0x5583d17a2770 <col:74, col:146> col:93 __lgammal 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17a26d8 <col:104, col:109> col:115 'long double'
| `-NoThrowAttr 0x5583d17a2818 <col:133>
|-FunctionDecl 0x5583d17a2920 <line:719:20> col:20 implicit tgammal 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17a29c0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17a2a30 <col:20> Implicit
|-FunctionDecl 0x5583d17a2a88 prev 0x5583d17a2920 <col:1, col:71> col:20 tgammal 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17a2888 <col:29, col:34> col:40 'long double'
| `-NoThrowAttr 0x5583d17a2b30 <col:58>
|-FunctionDecl 0x5583d17a2c38 <col:74, col:146> col:93 __tgammal 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17a2ba0 <col:104, col:109> col:115 'long double'
| `-NoThrowAttr 0x5583d17a2ce0 <col:133>
|-FunctionDecl 0x5583d17a2de8 <line:725:1, col:70> col:20 gammal 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17a2d50 <col:28, col:33> col:39 'long double'
| `-NoThrowAttr 0x5583d17a2e90 <col:57>
|-FunctionDecl 0x5583d17c8250 <col:73, col:144> col:92 __gammal 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17a2f00 <col:102, col:107> col:113 'long double'
| `-NoThrowAttr 0x5583d17c82f8 <col:131>
|-FunctionDecl 0x5583d17c8488 <line:732:1, col:90> col:20 lgammal_r 'long double (long double, int *)' extern
| |-ParmVarDecl 0x5583d17c8368 <col:31, col:36> col:42 'long double'
| |-ParmVarDecl 0x5583d17c83e8 <col:44, col:49> col:49 __signgamp 'int *'
| `-NoThrowAttr 0x5583d17c8538 <col:77>
|-FunctionDecl 0x5583d17c86c8 <col:93, col:184> col:112 __lgammal_r 'long double (long double, int *)' extern
| |-ParmVarDecl 0x5583d17c85a8 <col:125, col:130> col:136 'long double'
| |-ParmVarDecl 0x5583d17c8628 <col:138, col:143> col:143 __signgamp 'int *'
| `-NoThrowAttr 0x5583d17c8778 <col:171>
|-FunctionDecl 0x5583d17c8880 <line:740:20> col:20 implicit rintl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c8920 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5583d17c8990 <col:20> Implicit
| `-ConstAttr 0x5583d17c89e8 <col:20> Implicit
|-FunctionDecl 0x5583d17c8a10 prev 0x5583d17c8880 <col:1, col:73> col:20 rintl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c87e8 <col:27, col:39> col:39 __x 'long double'
| |-ConstAttr 0x5583d17c8b10 <col:20> Inherited Implicit
| `-NoThrowAttr 0x5583d17c8ab8 <col:60>
|-FunctionDecl 0x5583d17c8be8 <col:76, col:150> col:95 __rintl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17c8b50 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5583d17c8c90 <col:137>
|-FunctionDecl 0x5583d17c8e20 <line:743:20> col:20 implicit nextafterl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17c8ec0 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5583d17c8f28 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17c8fa0 <col:20> Implicit
|-FunctionDecl 0x5583d17c8ff8 prev 0x5583d17c8e20 <col:1, col:123> col:20 nextafterl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17c8d00 <col:32, col:44> col:44 __x 'long double'
| |-ParmVarDecl 0x5583d17c8d80 <col:49, col:61> col:61 __y 'long double'
| |-NoThrowAttr 0x5583d17c90a8 <col:82>
| `-ConstAttr 0x5583d17c9100 <col:113>
|-FunctionDecl 0x5583d17c9298 <col:126, col:250> col:145 __nextafterl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17c9140 <col:159, col:171> col:171 __x 'long double'
| |-ParmVarDecl 0x5583d17c91c0 <col:176, col:188> col:188 __y 'long double'
| |-NoThrowAttr 0x5583d17c9348 <col:209>
| `-ConstAttr 0x5583d17c93a0 <col:240>
|-FunctionDecl 0x5583d17c9500 <line:745:20> col:20 implicit nexttowardl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17c95a0 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5583d17c9608 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17c9680 <col:20> Implicit
|-FunctionDecl 0x5583d17c96d8 prev 0x5583d17c9500 <col:1, col:124> col:20 nexttowardl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17c93e0 <col:33, col:45> col:45 __x 'long double'
| |-ParmVarDecl 0x5583d17c9460 <col:50, col:62> col:62 __y 'long double'
| |-NoThrowAttr 0x5583d17c9788 <col:83>
| `-ConstAttr 0x5583d17c97e0 <col:114>
|-FunctionDecl 0x5583d17c9940 <col:127, col:252> col:146 __nexttowardl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17c9820 <col:161, col:173> col:173 __x 'long double'
| |-ParmVarDecl 0x5583d17c98a0 <col:178, col:190> col:190 __y 'long double'
| |-NoThrowAttr 0x5583d17c99f0 <col:211>
| `-ConstAttr 0x5583d17c9a48 <col:242>
|-FunctionDecl 0x5583d17c9ba8 <line:749:20> col:20 implicit remainderl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17c9c48 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5583d17c9cb0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17c9d28 <col:20> Implicit
|-FunctionDecl 0x5583d17c9d80 prev 0x5583d17c9ba8 <col:1, col:95> col:20 remainderl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17c9a88 <col:32, col:44> col:44 __x 'long double'
| |-ParmVarDecl 0x5583d17c9b08 <col:49, col:61> col:61 __y 'long double'
| `-NoThrowAttr 0x5583d17c9e30 <col:82>
|-FunctionDecl 0x5583d17c9fc0 <col:98, col:194> col:117 __remainderl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17c9ea0 <col:131, col:143> col:143 __x 'long double'
| |-ParmVarDecl 0x5583d17c9f20 <col:148, col:160> col:160 __y 'long double'
| `-NoThrowAttr 0x5583d17ca070 <col:181>
|-FunctionDecl 0x5583d17cb280 <line:753:20> col:20 implicit scalbnl 'long double (long double, int)' extern
| |-ParmVarDecl 0x5583d17cb320 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5583d17cb388 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x5583d17cb400 <col:20> Implicit
|-FunctionDecl 0x5583d17cb458 prev 0x5583d17cb280 <col:1, col:84> col:20 scalbnl 'long double (long double, int)' extern
| |-ParmVarDecl 0x5583d17ca0e0 <col:29, col:41> col:41 __x 'long double'
| |-ParmVarDecl 0x5583d17ca160 <col:46, col:50> col:50 __n 'int'
| `-NoThrowAttr 0x5583d17cb508 <col:71>
|-FunctionDecl 0x5583d17cb698 <col:87, col:172> col:106 __scalbnl 'long double (long double, int)' extern
| |-ParmVarDecl 0x5583d17cb578 <col:117, col:129> col:129 __x 'long double'
| |-ParmVarDecl 0x5583d17cb5f8 <col:134, col:138> col:138 __n 'int'
| `-NoThrowAttr 0x5583d17cb748 <col:159>
|-FunctionDecl 0x5583d17cb850 <line:757:12> col:12 implicit ilogbl 'int (long double)' extern
| |-ParmVarDecl 0x5583d17cb8f0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17cb960 <col:12> Implicit
|-FunctionDecl 0x5583d17cb9b8 prev 0x5583d17cb850 <col:1, col:66> col:12 ilogbl 'int (long double)' extern
| |-ParmVarDecl 0x5583d17cb7b8 <col:20, col:32> col:32 __x 'long double'
| `-NoThrowAttr 0x5583d17cba60 <col:53>
|-FunctionDecl 0x5583d17cbb68 <col:69, col:136> col:80 __ilogbl 'int (long double)' extern
| |-ParmVarDecl 0x5583d17cbad0 <col:90, col:102> col:102 __x 'long double'
| `-NoThrowAttr 0x5583d17cbc10 <col:123>
|-FunctionDecl 0x5583d17cbde8 <line:762:20> col:20 implicit scalblnl 'long double (long double, long)' extern
| |-ParmVarDecl 0x5583d17cbe88 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5583d17cbef0 <<invalid sloc>> <invalid sloc> 'long'
| `-NoThrowAttr 0x5583d17cbf68 <col:20> Implicit
|-FunctionDecl 0x5583d17cbfc0 prev 0x5583d17cbde8 <col:1, col:90> col:20 scalblnl 'long double (long double, long)' extern
| |-ParmVarDecl 0x5583d17cbc80 <col:30, col:42> col:42 __x 'long double'
| |-ParmVarDecl 0x5583d17cbd00 <col:47, col:56> col:56 __n 'long'
| `-NoThrowAttr 0x5583d17cc070 <col:77>
|-FunctionDecl 0x5583d17cc290 <col:93, col:184> col:112 __scalblnl 'long double (long double, long)' extern
| |-ParmVarDecl 0x5583d17cc0e0 <col:124, col:136> col:136 __x 'long double'
| |-ParmVarDecl 0x5583d17cc160 <col:141, col:150> col:150 __n 'long'
| `-NoThrowAttr 0x5583d17cc340 <col:171>
|-FunctionDecl 0x5583d17cc448 <line:766:20> col:20 implicit nearbyintl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17cc4e8 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5583d17cc558 <col:20> Implicit
| `-ConstAttr 0x5583d17cc5b0 <col:20> Implicit
|-FunctionDecl 0x5583d17cc5d8 prev 0x5583d17cc448 <col:1, col:78> col:20 nearbyintl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17cc3b0 <col:32, col:44> col:44 __x 'long double'
| |-ConstAttr 0x5583d17cc6d8 <col:20> Inherited Implicit
| `-NoThrowAttr 0x5583d17cc680 <col:65>
|-FunctionDecl 0x5583d17cc7b0 <col:81, col:160> col:100 __nearbyintl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17cc718 <col:114, col:126> col:126 __x 'long double'
| `-NoThrowAttr 0x5583d17cc858 <col:147>
|-FunctionDecl 0x5583d17cc960 <line:770:20> col:20 implicit roundl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17cca00 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5583d17cca70 <col:20> Implicit
| `-ConstAttr 0x5583d17ccac8 <col:20> Implicit
|-FunctionDecl 0x5583d17ccaf0 prev 0x5583d17cc960 <col:1, col:102> col:20 roundl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17cc8c8 <col:28, col:40> col:40 __x 'long double'
| |-NoThrowAttr 0x5583d17ccb98 <col:61>
| `-ConstAttr 0x5583d17ccbf0 <col:92>
|-FunctionDecl 0x5583d17cccc8 <col:105, col:208> col:124 __roundl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17ccc30 <col:134, col:146> col:146 __x 'long double'
| |-NoThrowAttr 0x5583d17ccd70 <col:167>
| `-ConstAttr 0x5583d17ccdc8 <col:198>
|-FunctionDecl 0x5583d17ccea0 <line:774:20> col:20 implicit truncl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17ccf40 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5583d17ccfb0 <col:20> Implicit
| `-ConstAttr 0x5583d17cd008 <col:20> Implicit
|-FunctionDecl 0x5583d17cd030 prev 0x5583d17ccea0 <col:1, col:102> col:20 truncl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17cce08 <col:28, col:40> col:40 __x 'long double'
| |-NoThrowAttr 0x5583d17cd0d8 <col:61>
| `-ConstAttr 0x5583d17cd130 <col:92>
|-FunctionDecl 0x5583d17cd2a0 <col:105, col:208> col:124 __truncl 'long double (long double)' extern
| |-ParmVarDecl 0x5583d17cd170 <col:134, col:146> col:146 __x 'long double'
| |-NoThrowAttr 0x5583d17cd348 <col:167>
| `-ConstAttr 0x5583d17cd3a0 <col:198>
|-FunctionDecl 0x5583d17cd5d8 <line:779:20> col:20 implicit remquol 'long double (long double, long double, int *)' extern
| |-ParmVarDecl 0x5583d17cd678 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5583d17cd6e0 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5583d17cd748 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x5583d17cd7c8 <col:20> Implicit
|-FunctionDecl 0x5583d17cd820 prev 0x5583d17cd5d8 <col:1, col:104> col:20 remquol 'long double (long double, long double, int *)' extern
| |-ParmVarDecl 0x5583d17cd3e0 <col:29, col:41> col:41 __x 'long double'
| |-ParmVarDecl 0x5583d17cd460 <col:46, col:58> col:58 __y 'long double'
| |-ParmVarDecl 0x5583d17cd4e0 <col:63, col:68> col:68 __quo 'int *'
| `-NoThrowAttr 0x5583d17cd8d8 <col:91>
|-FunctionDecl 0x5583d17cdaf0 <col:107, col:212> col:126 __remquol 'long double (long double, long double, int *)' extern
| |-ParmVarDecl 0x5583d17cd948 <col:137, col:149> col:149 __x 'long double'
| |-ParmVarDecl 0x5583d17cd9c8 <col:154, col:166> col:166 __y 'long double'
| |-ParmVarDecl 0x5583d17cda48 <col:171, col:176> col:176 __quo 'int *'
| `-NoThrowAttr 0x5583d17cdba8 <col:199>
|-FunctionDecl 0x5583d17cdce8 <line:786:17> col:17 implicit lrintl 'long (long double)' extern
| |-ParmVarDecl 0x5583d17cdd88 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17cddf8 <col:17> Implicit
|-FunctionDecl 0x5583d17cde50 prev 0x5583d17cdce8 <col:1, col:71> col:17 lrintl 'long (long double)' extern
| |-ParmVarDecl 0x5583d17cdc18 <col:25, col:37> col:37 __x 'long double'
| `-NoThrowAttr 0x5583d17cdef8 <col:58>
|-FunctionDecl 0x5583d17ce000 <col:74, col:146> col:90 __lrintl 'long (long double)' extern
| |-ParmVarDecl 0x5583d17cdf68 <col:100, col:112> col:112 __x 'long double'
| `-NoThrowAttr 0x5583d17ce0a8 <col:133>
|-FunctionDecl 0x5583d17ce1e8 <line:788:22> col:22 implicit llrintl 'long long (long double)' extern
| |-ParmVarDecl 0x5583d17ce2b0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17ce320 <col:22> Implicit
|-FunctionDecl 0x5583d17ce378 prev 0x5583d17ce1e8 <col:1, col:77> col:22 llrintl 'long long (long double)' extern
| |-ParmVarDecl 0x5583d17ce118 <col:31, col:43> col:43 __x 'long double'
| `-NoThrowAttr 0x5583d17ce420 <col:64>
|-FunctionDecl 0x5583d17ce528 <col:80, col:158> col:101 __llrintl 'long long (long double)' extern
| |-ParmVarDecl 0x5583d17ce490 <col:112, col:124> col:124 __x 'long double'
| `-NoThrowAttr 0x5583d17ce5d0 <col:145>
|-FunctionDecl 0x5583d17ce6d8 <line:792:17> col:17 implicit lroundl 'long (long double)' extern
| |-ParmVarDecl 0x5583d17ce778 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17ce7e8 <col:17> Implicit
|-FunctionDecl 0x5583d17ce840 prev 0x5583d17ce6d8 <col:1, col:72> col:17 lroundl 'long (long double)' extern
| |-ParmVarDecl 0x5583d17ce640 <col:26, col:38> col:38 __x 'long double'
| `-NoThrowAttr 0x5583d17ce8e8 <col:59>
|-FunctionDecl 0x5583d17ce9f0 <col:75, col:148> col:91 __lroundl 'long (long double)' extern
| |-ParmVarDecl 0x5583d17ce958 <col:102, col:114> col:114 __x 'long double'
| `-NoThrowAttr 0x5583d17cea98 <col:135>
|-FunctionDecl 0x5583d17ceba0 <line:794:22> col:22 implicit llroundl 'long long (long double)' extern
| |-ParmVarDecl 0x5583d17cec40 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17cecb0 <col:22> Implicit
|-FunctionDecl 0x5583d17ced08 prev 0x5583d17ceba0 <col:1, col:78> col:22 llroundl 'long long (long double)' extern
| |-ParmVarDecl 0x5583d17ceb08 <col:32, col:44> col:44 __x 'long double'
| `-NoThrowAttr 0x5583d17cedb0 <col:65>
|-FunctionDecl 0x5583d17ceeb8 <col:81, col:160> col:102 __llroundl 'long long (long double)' extern
| |-ParmVarDecl 0x5583d17cee20 <col:114, col:126> col:126 __x 'long double'
| `-NoThrowAttr 0x5583d17cef60 <col:147>
|-FunctionDecl 0x5583d17cf0f0 <line:798:20> col:20 implicit fdiml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17cf190 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5583d17cf1f8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5583d17cf270 <col:20> Implicit
|-FunctionDecl 0x5583d17cf2f0 prev 0x5583d17cf0f0 <col:1, col:90> col:20 fdiml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17cefd0 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x5583d17cf050 <col:44, col:56> col:56 __y 'long double'
| `-NoThrowAttr 0x5583d17cf3a0 <col:77>
|-FunctionDecl 0x5583d17cf530 <col:93, col:184> col:112 __fdiml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17cf410 <col:121, col:133> col:133 __x 'long double'
| |-ParmVarDecl 0x5583d17cf490 <col:138, col:150> col:150 __y 'long double'
| `-NoThrowAttr 0x5583d17cf5e0 <col:171>
|-FunctionDecl 0x5583d17cf770 <line:801:20> col:20 implicit fmaxl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17cf810 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5583d17cf878 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5583d17cf8f0 <col:20> Implicit
| `-ConstAttr 0x5583d17cf948 <col:20> Implicit
|-FunctionDecl 0x5583d17cf970 prev 0x5583d17cf770 <col:1, col:118> col:20 fmaxl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17cf650 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x5583d17cf6d0 <col:44, col:56> col:56 __y 'long double'
| |-NoThrowAttr 0x5583d17cfa20 <col:77>
| `-ConstAttr 0x5583d17cfa78 <col:108>
|-FunctionDecl 0x5583d17cfbd8 <col:121, col:240> col:140 __fmaxl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17cfab8 <col:149, col:161> col:161 __x 'long double'
| |-ParmVarDecl 0x5583d17cfb38 <col:166, col:178> col:178 __y 'long double'
| |-NoThrowAttr 0x5583d17cfc88 <col:199>
| `-ConstAttr 0x5583d17cfce0 <col:230>
|-FunctionDecl 0x5583d17cfe40 <line:804:20> col:20 implicit fminl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17cfee0 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5583d17cff48 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5583d17cffc0 <col:20> Implicit
| `-ConstAttr 0x5583d17d0018 <col:20> Implicit
|-FunctionDecl 0x5583d17d0040 prev 0x5583d17cfe40 <col:1, col:118> col:20 fminl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17cfd20 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x5583d17cfda0 <col:44, col:56> col:56 __y 'long double'
| |-NoThrowAttr 0x5583d17d00f0 <col:77>
| `-ConstAttr 0x5583d17d0148 <col:108>
|-FunctionDecl 0x5583d17d02d0 <col:121, col:240> col:140 __fminl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17d0188 <col:149, col:161> col:161 __x 'long double'
| |-ParmVarDecl 0x5583d17d0208 <col:166, col:178> col:178 __y 'long double'
| |-NoThrowAttr 0x5583d17d0380 <col:199>
| `-ConstAttr 0x5583d17d03d8 <col:230>
|-FunctionDecl 0x5583d17d04b0 <line:808:1, line:809:32> line:808:12 __fpclassifyl 'int (long double)' extern
| |-ParmVarDecl 0x5583d17d0418 <col:27, col:39> col:39 __value 'long double'
| |-NoThrowAttr 0x5583d17d0558 <col:64>
| `-ConstAttr 0x5583d17d05b0 <line:809:22>
|-FunctionDecl 0x5583d17d0688 <line:812:1, line:813:32> line:812:12 __signbitl 'int (long double)' extern
| |-ParmVarDecl 0x5583d17d05f0 <col:24, col:36> col:36 __value 'long double'
| |-NoThrowAttr 0x5583d17d0730 <col:61>
| `-ConstAttr 0x5583d17d0788 <line:813:22>
|-FunctionDecl 0x5583d17d09b8 <line:817:20> col:20 implicit fmal 'long double (long double, long double, long double)' extern
| |-ParmVarDecl 0x5583d17d0a58 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5583d17d0ac0 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5583d17d0b28 <<invalid sloc>> <invalid sloc> 'long double'
| |-ConstAttr 0x5583d17d0ba8 <col:20> Implicit
| `-NoThrowAttr 0x5583d17d0c00 <col:20> Implicit
|-FunctionDecl 0x5583d17d0c28 prev 0x5583d17d09b8 <col:1, col:106> col:20 fmal 'long double (long double, long double, long double)' extern
| |-ParmVarDecl 0x5583d17d07c8 <col:26, col:38> col:38 __x 'long double'
| |-ParmVarDecl 0x5583d17d0848 <col:43, col:55> col:55 __y 'long double'
| |-ParmVarDecl 0x5583d17d08c8 <col:60, col:72> col:72 __z 'long double'
| |-ConstAttr 0x5583d17d0d38 <col:20> Inherited Implicit
| `-NoThrowAttr 0x5583d17d0ce0 <col:93>
|-FunctionDecl 0x5583d17d0f20 <col:109, col:216> col:128 __fmal 'long double (long double, long double, long double)' extern
| |-ParmVarDecl 0x5583d17d0d78 <col:136, col:148> col:148 __x 'long double'
| |-ParmVarDecl 0x5583d17d0df8 <col:153, col:165> col:165 __y 'long double'
| |-ParmVarDecl 0x5583d17d0e78 <col:170, col:182> col:182 __z 'long double'
| `-NoThrowAttr 0x5583d17d0fd8 <col:203>
|-FunctionDecl 0x5583d17d1168 <line:818:1, col:91> col:20 scalbl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17d1048 <col:28, col:40> col:40 __x 'long double'
| |-ParmVarDecl 0x5583d17d10c8 <col:45, col:57> col:57 __n 'long double'
| `-NoThrowAttr 0x5583d17d1218 <col:78>
|-FunctionDecl 0x5583d17d1400 <col:94, col:186> col:113 __scalbl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5583d17d12e0 <col:123, col:135> col:135 __x 'long double'
| |-ParmVarDecl 0x5583d17d1360 <col:140, col:152> col:152 __n 'long double'
| `-NoThrowAttr 0x5583d17d14b0 <col:173>
|-VarDecl 0x5583d17d1520 <line:819:1, col:12> col:12 signgam 'int' extern
|-EnumDecl 0x5583d17d1588 <line:820:1, line:837:3> line:820:1
| |-EnumConstantDecl 0x5583d17d1690 <line:822:5, line:824:7> line:822:5 FP_NAN 'int'
| | `-ConstantExpr 0x5583d17d1678 <line:824:7> 'int'
| |   `-IntegerLiteral 0x5583d17d1658 <col:7> 'int' 0
| |-EnumConstantDecl 0x5583d17d1718 <line:825:5, line:827:7> line:825:5 FP_INFINITE 'int'
| | `-ConstantExpr 0x5583d17d1700 <line:827:7> 'int'
| |   `-IntegerLiteral 0x5583d17d16e0 <col:7> 'int' 1
| |-EnumConstantDecl 0x5583d17d17a0 <line:828:5, line:830:7> line:828:5 FP_ZERO 'int'
| | `-ConstantExpr 0x5583d17d1788 <line:830:7> 'int'
| |   `-IntegerLiteral 0x5583d17d1768 <col:7> 'int' 2
| |-EnumConstantDecl 0x5583d17d1828 <line:831:5, line:833:7> line:831:5 FP_SUBNORMAL 'int'
| | `-ConstantExpr 0x5583d17d1810 <line:833:7> 'int'
| |   `-IntegerLiteral 0x5583d17d17f0 <col:7> 'int' 3
| `-EnumConstantDecl 0x5583d17d18b0 <line:834:5, line:836:7> line:834:5 FP_NORMAL 'int'
|   `-ConstantExpr 0x5583d17d1898 <line:836:7> 'int'
|     `-IntegerLiteral 0x5583d17d1878 <col:7> 'int' 4
|-EnumDecl 0x5583d17d1900 <line:838:9, line:845:1> line:838:9
| |-EnumConstantDecl 0x5583d17d1a18 <line:840:3, col:13> col:3 _IEEE_ 'int'
| | `-ConstantExpr 0x5583d17d1a00 <col:12, col:13> 'int'
| |   `-UnaryOperator 0x5583d17d19e8 <col:12, col:13> 'int' prefix '-'
| |     `-IntegerLiteral 0x5583d17d19c8 <col:13> 'int' 1
| |-EnumConstantDecl 0x5583d17d1a68 <line:841:3> col:3 _SVID_ 'int'
| |-EnumConstantDecl 0x5583d17d1ab8 <line:842:3> col:3 _XOPEN_ 'int'
| |-EnumConstantDecl 0x5583d17d1b08 <line:843:3> col:3 _POSIX_ 'int'
| `-EnumConstantDecl 0x5583d17d1b58 <line:844:3> col:3 _ISOC_ 'int'
|-TypedefDecl 0x5583d17d1c10 <line:838:1, line:845:3> col:3 referenced _LIB_VERSION_TYPE 'enum _LIB_VERSION_TYPE':'_LIB_VERSION_TYPE'
| `-ElaboratedType 0x5583d17d1bb0 'enum _LIB_VERSION_TYPE' sugar
|   `-EnumType 0x5583d17d19a0 '_LIB_VERSION_TYPE'
|     `-Enum 0x5583d17d1900 ''
|-VarDecl 0x5583d17d1cb8 <line:850:1, col:26> col:26 _LIB_VERSION '_LIB_VERSION_TYPE':'_LIB_VERSION_TYPE' extern
|-RecordDecl 0x5583d17d1d20 <line:851:1, line:859:3> line:851:8 struct exception definition
| |-FieldDecl 0x5583d17d1de0 <line:854:5, col:9> col:9 type 'int'
| |-FieldDecl 0x5583d17d1e48 <line:855:5, col:11> col:11 name 'char *'
| |-FieldDecl 0x5583d17d1eb0 <line:856:5, col:12> col:12 arg1 'double'
| |-FieldDecl 0x5583d17d1f18 <line:857:5, col:12> col:12 arg2 'double'
| `-FieldDecl 0x5583d17d1f80 <line:858:5, col:12> col:12 retval 'double'
|-FunctionDecl 0x5583d17d21a8 <line:864:1, col:44> col:12 matherr 'int (struct exception *)' extern
| `-ParmVarDecl 0x5583d17d2098 <col:21, col:39> col:39 __exc 'struct exception *'
|-EnumDecl 0x5583d17d22f0 <line:865:1, line:883:3> line:865:1
| |-EnumConstantDecl 0x5583d17d23f0 <line:867:5, line:869:7> line:867:5 FE_INVALID 'int'
| | `-ConstantExpr 0x5583d17d23d8 <line:869:7> 'int'
| |   `-IntegerLiteral 0x5583d17d23b8 <col:7> 'int' 1
| |-EnumConstantDecl 0x5583d17d2478 <line:870:5, col:19> col:5 __FE_DENORM 'int'
| | `-ConstantExpr 0x5583d17d2460 <col:19> 'int'
| |   `-IntegerLiteral 0x5583d17d2440 <col:19> 'int' 2
| |-EnumConstantDecl 0x5583d17d2500 <line:871:5, line:873:7> line:871:5 FE_DIVBYZERO 'int'
| | `-ConstantExpr 0x5583d17d24e8 <line:873:7> 'int'
| |   `-IntegerLiteral 0x5583d17d24c8 <col:7> 'int' 4
| |-EnumConstantDecl 0x5583d17d2588 <line:874:5, line:876:7> line:874:5 FE_OVERFLOW 'int'
| | `-ConstantExpr 0x5583d17d2570 <line:876:7> 'int'
| |   `-IntegerLiteral 0x5583d17d2550 <col:7> 'int' 8
| |-EnumConstantDecl 0x5583d17d2610 <line:877:5, line:879:7> line:877:5 FE_UNDERFLOW 'int'
| | `-ConstantExpr 0x5583d17d25f8 <line:879:7> 'int'
| |   `-IntegerLiteral 0x5583d17d25d8 <col:7> 'int' 16
| `-EnumConstantDecl 0x5583d17d2698 <line:880:5, line:882:7> line:880:5 FE_INEXACT 'int'
|   `-ConstantExpr 0x5583d17d2680 <line:882:7> 'int'
|     `-IntegerLiteral 0x5583d17d2660 <col:7> 'int' 32
|-EnumDecl 0x5583d17d26e8 <line:891:1, line:905:3> line:891:1
| |-EnumConstantDecl 0x5583d17d27f0 <line:893:5, line:895:7> line:893:5 FE_TONEAREST 'int'
| | `-ConstantExpr 0x5583d17d27d8 <line:895:7> 'int'
| |   `-IntegerLiteral 0x5583d17d27b8 <col:7> 'int' 0
| |-EnumConstantDecl 0x5583d17d2878 <line:896:5, line:898:7> line:896:5 FE_DOWNWARD 'int'
| | `-ConstantExpr 0x5583d17d2860 <line:898:7> 'int'
| |   `-IntegerLiteral 0x5583d17d2840 <col:7> 'int' 1024
| |-EnumConstantDecl 0x5583d17d2900 <line:899:5, line:901:7> line:899:5 FE_UPWARD 'int'
| | `-ConstantExpr 0x5583d17d28e8 <line:901:7> 'int'
| |   `-IntegerLiteral 0x5583d17d28c8 <col:7> 'int' 2048
| `-EnumConstantDecl 0x5583d17d2988 <line:902:5, line:904:7> line:902:5 FE_TOWARDZERO 'int'
|   `-ConstantExpr 0x5583d17d2970 <line:904:7> 'int'
|     `-IntegerLiteral 0x5583d17d2950 <col:7> 'int' 3072
|-TypedefDecl 0x5583d17d29f0 <line:909:1, col:28> col:28 referenced fexcept_t 'unsigned short'
| `-BuiltinType 0x5583d171aef0 'unsigned short'
|-RecordDecl 0x5583d17d2a48 <line:916:9, line:934:3> line:916:9 struct definition
| |-FieldDecl 0x5583d17d2b10 <line:918:5, col:24> col:24 __control_word 'unsigned short'
| |-FieldDecl 0x5583d17d2b78 <line:919:5, col:24> col:24 __glibc_reserved1 'unsigned short'
| |-FieldDecl 0x5583d17d2be0 <line:920:5, col:24> col:24 __status_word 'unsigned short'
| |-FieldDecl 0x5583d17d2c48 <line:921:5, col:24> col:24 __glibc_reserved2 'unsigned short'
| |-FieldDecl 0x5583d17d2cb0 <line:922:5, col:24> col:24 __tags 'unsigned short'
| |-FieldDecl 0x5583d17d2d18 <line:923:5, col:24> col:24 __glibc_reserved3 'unsigned short'
| |-FieldDecl 0x5583d17d2d80 <line:924:5, col:18> col:18 __eip 'unsigned int'
| |-FieldDecl 0x5583d17d2de8 <line:925:5, col:24> col:24 __cs_selector 'unsigned short'
| |-FieldDecl 0x5583d17d2e88 <line:926:5, col:27> col:18 __opcode 'unsigned int'
| | `-ConstantExpr 0x5583d17d2e70 <col:27> 'int'
| |   `-IntegerLiteral 0x5583d17d2e38 <col:27> 'int' 11
| |-FieldDecl 0x5583d17d2f28 <line:927:5, col:36> col:18 __glibc_reserved4 'unsigned int'
| | `-ConstantExpr 0x5583d17d2f10 <col:36> 'int'
| |   `-IntegerLiteral 0x5583d17d2ed8 <col:36> 'int' 5
| |-FieldDecl 0x5583d17d2f90 <line:928:5, col:18> col:18 __data_offset 'unsigned int'
| |-FieldDecl 0x5583d17d2ff8 <line:929:5, col:24> col:24 __data_selector 'unsigned short'
| `-FieldDecl 0x5583d17d3060 <line:930:5, col:24> col:24 __glibc_reserved5 'unsigned short'
|-TypedefDecl 0x5583d17d3110 <line:916:1, line:935:1> col:1 referenced fenv_t 'struct fenv_t':'fenv_t'
| `-ElaboratedType 0x5583d17d30b0 'struct fenv_t' sugar
|   `-RecordType 0x5583d17d2ad0 'fenv_t'
|     `-Record 0x5583d17d2a48 ''
|-FunctionDecl 0x5583d17d3300 <line:942:1, col:71> col:12 feclearexcept 'int (int)' extern
| |-ParmVarDecl 0x5583d17d3198 <col:27, col:31> col:31 __excepts 'int'
| `-NoThrowAttr 0x5583d17d33a8 <col:58>
|-FunctionDecl 0x5583d17d3648 <line:946:1, col:93> col:12 fegetexceptflag 'int (fexcept_t *, int)' extern
| |-ParmVarDecl 0x5583d17d34a0 <col:29, col:40> col:40 __flagp 'fexcept_t *'
| |-ParmVarDecl 0x5583d17d3520 <col:49, col:53> col:53 __excepts 'int'
| `-NoThrowAttr 0x5583d17d36f8 <col:80>
|-FunctionDecl 0x5583d17d3800 <line:949:1, col:71> col:12 feraiseexcept 'int (int)' extern
| |-ParmVarDecl 0x5583d17d3768 <col:27, col:31> col:31 __excepts 'int'
| `-NoThrowAttr 0x5583d17d38a8 <col:58>
|-FunctionDecl 0x5583d17d3b18 <line:953:1, col:99> col:12 fesetexceptflag 'int (const fexcept_t *, int)' extern
| |-ParmVarDecl 0x5583d17d3970 <col:29, col:46> col:46 __flagp 'const fexcept_t *'
| |-ParmVarDecl 0x5583d17d39f0 <col:55, col:59> col:59 __excepts 'int'
| `-NoThrowAttr 0x5583d17d3bc8 <col:86>
|-FunctionDecl 0x5583d17d3cd0 <line:957:1, col:70> col:12 fetestexcept 'int (int)' extern
| |-ParmVarDecl 0x5583d17d3c38 <col:26, col:30> col:30 __excepts 'int'
| `-NoThrowAttr 0x5583d17d3d78 <col:57>
|-FunctionDecl 0x5583d17d3ea8 <line:963:1, col:59> col:12 used fegetround 'int (void)' extern
| `-NoThrowAttr 0x5583d17d3f48 <col:46>
|-FunctionDecl 0x5583d17d4050 <line:966:1, col:79> col:12 used fesetround 'int (int)' extern
| |-ParmVarDecl 0x5583d17d3fb8 <col:24, col:28> col:28 __rounding_direction 'int'
| `-NoThrowAttr 0x5583d17d40f8 <col:66>
|-FunctionDecl 0x5583d17d5350 <line:973:1, col:67> col:12 fegetenv 'int (fenv_t *)' extern
| |-ParmVarDecl 0x5583d17d41f0 <col:22, col:30> col:30 __envp 'fenv_t *'
| `-NoThrowAttr 0x5583d17d53f8 <col:54>
|-FunctionDecl 0x5583d17d54f8 <line:978:1, col:71> col:12 feholdexcept 'int (fenv_t *)' extern
| |-ParmVarDecl 0x5583d17d5460 <col:26, col:34> col:34 __envp 'fenv_t *'
| `-NoThrowAttr 0x5583d17d55a0 <col:58>
|-FunctionDecl 0x5583d17d5788 <line:982:1, col:73> col:12 fesetenv 'int (const fenv_t *)' extern
| |-ParmVarDecl 0x5583d17d5670 <col:22, col:36> col:36 __envp 'const fenv_t *'
| `-NoThrowAttr 0x5583d17d5830 <col:60>
|-FunctionDecl 0x5583d17d5930 <line:987:1, col:76> col:12 feupdateenv 'int (const fenv_t *)' extern
| |-ParmVarDecl 0x5583d17d5898 <col:25, col:39> col:39 __envp 'const fenv_t *'
| `-NoThrowAttr 0x5583d17d59d8 <col:63>
|-FunctionDecl 0x5583d17d5b10 <line:989:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5583d17d5a48 <col:31> col:34 'int'
|-FunctionDecl 0x5583d17d5c40 <line:990:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5583d17d5d88 <line:991:1, col:88> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5583d17d5cf8 <col:24, col:28> col:28 used cond 'int'
| `-CompoundStmt 0x5583d17d5fd0 <col:34, col:88>
|   |-IfStmt 0x5583d17d5fa8 <col:36, col:78>
|   | |-UnaryOperator 0x5583d17d5e88 <col:40, col:46> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5583d17d5e70 <col:41, col:46> 'int' <LValueToRValue>
|   | |   `-ParenExpr 0x5583d17d5e50 <col:41, col:46> 'int' lvalue
|   | |     `-DeclRefExpr 0x5583d17d5e30 <col:42> 'int' lvalue ParmVar 0x5583d17d5cf8 'cond' 'int'
|   | `-CompoundStmt 0x5583d17d5f90 <col:49, col:78>
|   |   `-LabelStmt 0x5583d17d5f78 <col:51, col:75> 'ERROR'
|   |     `-CallExpr 0x5583d17d5f08 <col:58, col:75> 'void'
|   |       `-ImplicitCastExpr 0x5583d17d5ef0 <col:58> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5583d17d5ea0 <col:58> 'void () __attribute__((noreturn))' Function 0x5583d17d5c40 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   `-ReturnStmt 0x5583d17d5fc0 <col:80>
|-FunctionDecl 0x5583d17d6048 <line:993:1, col:33> col:8 used __VERIFIER_nondet_double 'double ()'
`-FunctionDecl 0x5583d17d6188 <line:995:1, line:1017:1> line:995:5 main 'int (void)'
  `-CompoundStmt 0x5583d17d9a10 <line:996:1, line:1017:1>
    |-DeclStmt 0x5583d17d6398 <line:997:3, col:40>
    | `-VarDecl 0x5583d17d6278 <col:3, col:39> col:10 used d 'double' cinit
    |   `-CallExpr 0x5583d17d6378 <col:14, col:39> 'double'
    |     `-ImplicitCastExpr 0x5583d17d6360 <col:14> 'double (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5583d17d62e0 <col:14> 'double ()' Function 0x5583d17d6048 '__VERIFIER_nondet_double' 'double ()'
    |-CallExpr 0x5583d17d68c8 <line:998:3, col:128> 'void'
    | |-ImplicitCastExpr 0x5583d17d68b0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5583d17d63b0 <col:3> 'void (int)' Function 0x5583d17d5b10 '__VERIFIER_assume' 'void (int)'
    | `-UnaryOperator 0x5583d17d6860 <col:21, col:127> 'int' prefix '!' cannot overflow
    |   `-ParenExpr 0x5583d17d6840 <col:22, col:127> 'int'
    |     `-ConditionalOperator 0x5583d17d6810 <col:23, col:126> 'int'
    |       |-BinaryOperator 0x5583d17d6468 <col:23, col:50> 'int' '=='
    |       | |-UnaryExprOrTypeTraitExpr 0x5583d17d6410 <col:23, col:32> 'unsigned long' sizeof
    |       | | `-ParenExpr 0x5583d17d63f0 <col:30, col:32> 'double' lvalue
    |       | |   `-DeclRefExpr 0x5583d17d63d0 <col:31> 'double' lvalue Var 0x5583d17d6278 'd' 'double' non_odr_use_unevaluated
    |       | `-UnaryExprOrTypeTraitExpr 0x5583d17d6448 <col:37, col:50> 'unsigned long' sizeof 'float'
    |       |-CallExpr 0x5583d17d6518 <col:54, col:65> 'int'
    |       | |-ImplicitCastExpr 0x5583d17d6500 <col:54> 'int (*)(float)' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x5583d17d6488 <col:54> 'int (float)' Function 0x5583d17a65d8 '__isinff' 'int (float)'
    |       | `-ImplicitCastExpr 0x5583d17d6558 <col:64> 'float' <FloatingCast>
    |       |   `-ImplicitCastExpr 0x5583d17d6540 <col:64> 'double' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5583d17d64a8 <col:64> 'double' lvalue Var 0x5583d17d6278 'd' 'double'
    |       `-ConditionalOperator 0x5583d17d67e0 <col:69, col:126> 'int'
    |         |-BinaryOperator 0x5583d17d6608 <col:69, col:97> 'int' '=='
    |         | |-UnaryExprOrTypeTraitExpr 0x5583d17d65b0 <col:69, col:78> 'unsigned long' sizeof
    |         | | `-ParenExpr 0x5583d17d6590 <col:76, col:78> 'double' lvalue
    |         | |   `-DeclRefExpr 0x5583d17d6570 <col:77> 'double' lvalue Var 0x5583d17d6278 'd' 'double' non_odr_use_unevaluated
    |         | `-UnaryExprOrTypeTraitExpr 0x5583d17d65e8 <col:83, col:97> 'unsigned long' sizeof 'double'
    |         |-CallExpr 0x5583d17d66b8 <col:101, col:111> 'int'
    |         | |-ImplicitCastExpr 0x5583d17d66a0 <col:101> 'int (*)(double)' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x5583d17d6628 <col:101> 'int (double)' Function 0x5583d178a988 '__isinf' 'int (double)'
    |         | `-ImplicitCastExpr 0x5583d17d66e0 <col:110> 'double' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5583d17d6648 <col:110> 'double' lvalue Var 0x5583d17d6278 'd' 'double'
    |         `-CallExpr 0x5583d17d6788 <col:115, col:126> 'int'
    |           |-ImplicitCastExpr 0x5583d17d6770 <col:115> 'int (*)(long double)' <FunctionToPointerDecay>
    |           | `-DeclRefExpr 0x5583d17d66f8 <col:115> 'int (long double)' Function 0x5583d17c2318 '__isinfl' 'int (long double)'
    |           `-ImplicitCastExpr 0x5583d17d67c8 <col:125> 'long double' <FloatingCast>
    |             `-ImplicitCastExpr 0x5583d17d67b0 <col:125> 'double' <LValueToRValue>
    |               `-DeclRefExpr 0x5583d17d6718 <col:125> 'double' lvalue Var 0x5583d17d6278 'd' 'double'
    |-CallExpr 0x5583d17d6d28 <line:999:3, col:128> 'void'
    | |-ImplicitCastExpr 0x5583d17d6d10 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5583d17d68f0 <col:3> 'void (int)' Function 0x5583d17d5b10 '__VERIFIER_assume' 'void (int)'
    | `-UnaryOperator 0x5583d17d6cf8 <col:21, col:127> 'int' prefix '!' cannot overflow
    |   `-ParenExpr 0x5583d17d6cd8 <col:22, col:127> 'int'
    |     `-ConditionalOperator 0x5583d17d6ca8 <col:23, col:126> 'int'
    |       |-BinaryOperator 0x5583d17d69a8 <col:23, col:50> 'int' '=='
    |       | |-UnaryExprOrTypeTraitExpr 0x5583d17d6950 <col:23, col:32> 'unsigned long' sizeof
    |       | | `-ParenExpr 0x5583d17d6930 <col:30, col:32> 'double' lvalue
    |       | |   `-DeclRefExpr 0x5583d17d6910 <col:31> 'double' lvalue Var 0x5583d17d6278 'd' 'double' non_odr_use_unevaluated
    |       | `-UnaryExprOrTypeTraitExpr 0x5583d17d6988 <col:37, col:50> 'unsigned long' sizeof 'float'
    |       |-CallExpr 0x5583d17d6a20 <col:54, col:65> 'int'
    |       | |-ImplicitCastExpr 0x5583d17d6a08 <col:54> 'int (*)(float)' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x5583d17d69c8 <col:54> 'int (float)' Function 0x5583d17a8558 '__isnanf' 'int (float)'
    |       | `-ImplicitCastExpr 0x5583d17d6a60 <col:64> 'float' <FloatingCast>
    |       |   `-ImplicitCastExpr 0x5583d17d6a48 <col:64> 'double' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5583d17d69e8 <col:64> 'double' lvalue Var 0x5583d17d6278 'd' 'double'
    |       `-ConditionalOperator 0x5583d17d6c78 <col:69, col:126> 'int'
    |         |-BinaryOperator 0x5583d17d6b10 <col:69, col:97> 'int' '=='
    |         | |-UnaryExprOrTypeTraitExpr 0x5583d17d6ab8 <col:69, col:78> 'unsigned long' sizeof
    |         | | `-ParenExpr 0x5583d17d6a98 <col:76, col:78> 'double' lvalue
    |         | |   `-DeclRefExpr 0x5583d17d6a78 <col:77> 'double' lvalue Var 0x5583d17d6278 'd' 'double' non_odr_use_unevaluated
    |         | `-UnaryExprOrTypeTraitExpr 0x5583d17d6af0 <col:83, col:97> 'unsigned long' sizeof 'double'
    |         |-CallExpr 0x5583d17d6b88 <col:101, col:111> 'int'
    |         | |-ImplicitCastExpr 0x5583d17d6b70 <col:101> 'int (*)(double)' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x5583d17d6b30 <col:101> 'int (double)' Function 0x5583d178d8e0 '__isnan' 'int (double)'
    |         | `-ImplicitCastExpr 0x5583d17d6bb0 <col:110> 'double' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5583d17d6b50 <col:110> 'double' lvalue Var 0x5583d17d6278 'd' 'double'
    |         `-CallExpr 0x5583d17d6c20 <col:115, col:126> 'int'
    |           |-ImplicitCastExpr 0x5583d17d6c08 <col:115> 'int (*)(long double)' <FunctionToPointerDecay>
    |           | `-DeclRefExpr 0x5583d17d6bc8 <col:115> 'int (long double)' Function 0x5583d17c4220 '__isnanl' 'int (long double)'
    |           `-ImplicitCastExpr 0x5583d17d6c60 <col:125> 'long double' <FloatingCast>
    |             `-ImplicitCastExpr 0x5583d17d6c48 <col:125> 'double' <LValueToRValue>
    |               `-DeclRefExpr 0x5583d17d6be8 <col:125> 'double' lvalue Var 0x5583d17d6278 'd' 'double'
    |-DeclStmt 0x5583d17d6e58 <line:1001:3, col:32>
    | `-VarDecl 0x5583d17d6d68 <col:3, col:31> col:7 used save_round 'int' cinit
    |   `-CallExpr 0x5583d17d6e38 <col:20, col:31> 'int'
    |     `-ImplicitCastExpr 0x5583d17d6e20 <col:20> 'int (*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5583d17d6dd0 <col:20> 'int (void)' Function 0x5583d17d3ea8 'fegetround' 'int (void)'
    |-CallExpr 0x5583d17d6ef8 <line:1002:3, col:19> 'int'
    | |-ImplicitCastExpr 0x5583d17d6ee0 <col:3> 'int (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5583d17d6e70 <col:3> 'int (int)' Function 0x5583d17d4050 'fesetround' 'int (int)'
    | `-IntegerLiteral 0x5583d17d6e90 <col:14> 'int' 2048
    |-DeclStmt 0x5583d17d7068 <line:1003:3, col:26>
    | `-VarDecl 0x5583d17d6f38 <col:3, col:25> col:10 used result 'double' cinit
    |   `-CallExpr 0x5583d17d7028 <col:19, col:25> 'double'
    |     |-ImplicitCastExpr 0x5583d17d7010 <col:19> 'double (*)(double)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x5583d17d6fa0 <col:19> 'double (double)' Function 0x5583d17910f0 'rint' 'double (double)'
    |     `-ImplicitCastExpr 0x5583d17d7050 <col:24> 'double' <LValueToRValue>
    |       `-DeclRefExpr 0x5583d17d6fc0 <col:24> 'double' lvalue Var 0x5583d17d6278 'd' 'double'
    |-CallExpr 0x5583d17d70d8 <line:1004:3, col:24> 'int'
    | |-ImplicitCastExpr 0x5583d17d70c0 <col:3> 'int (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5583d17d7080 <col:3> 'int (int)' Function 0x5583d17d4050 'fesetround' 'int (int)'
    | `-ImplicitCastExpr 0x5583d17d7100 <col:14> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x5583d17d70a0 <col:14> 'int' lvalue Var 0x5583d17d6d68 'save_round' 'int'
    |-CallExpr 0x5583d17d7240 <line:1006:3, col:38> 'void'
    | |-ImplicitCastExpr 0x5583d17d7228 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5583d17d7118 <col:3> 'void (int)' Function 0x5583d17d5d88 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x5583d17d7208 <col:21, col:32> 'int' '=='
    |   |-CallExpr 0x5583d17d7190 <col:21, col:27> 'double'
    |   | |-ImplicitCastExpr 0x5583d17d7178 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x5583d17d7138 <col:21> 'double (double)' Function 0x5583d17894b8 'ceil' 'double (double)'
    |   | `-ImplicitCastExpr 0x5583d17d71b8 <col:26> 'double' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5583d17d7158 <col:26> 'double' lvalue Var 0x5583d17d6278 'd' 'double'
    |   `-ImplicitCastExpr 0x5583d17d71f0 <col:32> 'double' <LValueToRValue>
    |     `-DeclRefExpr 0x5583d17d71d0 <col:32> 'double' lvalue Var 0x5583d17d6f38 'result' 'double'
    |-DeclStmt 0x5583d17d8370 <line:1008:3, col:41>
    | `-VarDecl 0x5583d17d7280 <col:3, col:40> col:10 used d1 'double' cinit
    |   `-CallExpr 0x5583d17d8350 <col:15, col:40> 'double'
    |     `-ImplicitCastExpr 0x5583d17d7308 <col:15> 'double (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5583d17d72e8 <col:15> 'double ()' Function 0x5583d17d6048 '__VERIFIER_nondet_double' 'double ()'
    |-CallExpr 0x5583d17d87a8 <line:1009:3, col:132> 'void'
    | |-ImplicitCastExpr 0x5583d17d8790 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5583d17d8388 <col:3> 'void (int)' Function 0x5583d17d5b10 '__VERIFIER_assume' 'void (int)'
    | `-ParenExpr 0x5583d17d8770 <col:21, col:131> 'int'
    |   `-ConditionalOperator 0x5583d17d8740 <col:22, col:130> 'int'
    |     |-BinaryOperator 0x5583d17d8440 <col:22, col:50> 'int' '=='
    |     | |-UnaryExprOrTypeTraitExpr 0x5583d17d83e8 <col:22, col:32> 'unsigned long' sizeof
    |     | | `-ParenExpr 0x5583d17d83c8 <col:29, col:32> 'double' lvalue
    |     | |   `-DeclRefExpr 0x5583d17d83a8 <col:30> 'double' lvalue Var 0x5583d17d7280 'd1' 'double' non_odr_use_unevaluated
    |     | `-UnaryExprOrTypeTraitExpr 0x5583d17d8420 <col:37, col:50> 'unsigned long' sizeof 'float'
    |     |-CallExpr 0x5583d17d84b8 <col:54, col:66> 'int'
    |     | |-ImplicitCastExpr 0x5583d17d84a0 <col:54> 'int (*)(float)' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x5583d17d8460 <col:54> 'int (float)' Function 0x5583d17a65d8 '__isinff' 'int (float)'
    |     | `-ImplicitCastExpr 0x5583d17d84f8 <col:64> 'float' <FloatingCast>
    |     |   `-ImplicitCastExpr 0x5583d17d84e0 <col:64> 'double' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5583d17d8480 <col:64> 'double' lvalue Var 0x5583d17d7280 'd1' 'double'
    |     `-ConditionalOperator 0x5583d17d8710 <col:70, col:130> 'int'
    |       |-BinaryOperator 0x5583d17d85a8 <col:70, col:99> 'int' '=='
    |       | |-UnaryExprOrTypeTraitExpr 0x5583d17d8550 <col:70, col:80> 'unsigned long' sizeof
    |       | | `-ParenExpr 0x5583d17d8530 <col:77, col:80> 'double' lvalue
    |       | |   `-DeclRefExpr 0x5583d17d8510 <col:78> 'double' lvalue Var 0x5583d17d7280 'd1' 'double' non_odr_use_unevaluated
    |       | `-UnaryExprOrTypeTraitExpr 0x5583d17d8588 <col:85, col:99> 'unsigned long' sizeof 'double'
    |       |-CallExpr 0x5583d17d8620 <col:103, col:114> 'int'
    |       | |-ImplicitCastExpr 0x5583d17d8608 <col:103> 'int (*)(double)' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x5583d17d85c8 <col:103> 'int (double)' Function 0x5583d178a988 '__isinf' 'int (double)'
    |       | `-ImplicitCastExpr 0x5583d17d8648 <col:112> 'double' <LValueToRValue>
    |       |   `-DeclRefExpr 0x5583d17d85e8 <col:112> 'double' lvalue Var 0x5583d17d7280 'd1' 'double'
    |       `-CallExpr 0x5583d17d86b8 <col:118, col:130> 'int'
    |         |-ImplicitCastExpr 0x5583d17d86a0 <col:118> 'int (*)(long double)' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x5583d17d8660 <col:118> 'int (long double)' Function 0x5583d17c2318 '__isinfl' 'int (long double)'
    |         `-ImplicitCastExpr 0x5583d17d86f8 <col:128> 'long double' <FloatingCast>
    |           `-ImplicitCastExpr 0x5583d17d86e0 <col:128> 'double' <LValueToRValue>
    |             `-DeclRefExpr 0x5583d17d8680 <col:128> 'double' lvalue Var 0x5583d17d7280 'd1' 'double'
    |-CallExpr 0x5583d17d8e00 <line:1010:3, col:162> 'void'
    | |-ImplicitCastExpr 0x5583d17d8de8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5583d17d87d0 <col:3> 'void (int)' Function 0x5583d17d5d88 '__VERIFIER_assert' 'void (int)'
    | `-ParenExpr 0x5583d17d8dc8 <col:21, col:161> 'int'
    |   `-ConditionalOperator 0x5583d17d8d98 <col:22, col:160> 'int'
    |     |-BinaryOperator 0x5583d17d8900 <col:22, col:56> 'int' '=='
    |     | |-UnaryExprOrTypeTraitExpr 0x5583d17d88a8 <col:22, col:38> 'unsigned long' sizeof
    |     | | `-ParenExpr 0x5583d17d8888 <col:29, col:38> 'double'
    |     | |   `-CallExpr 0x5583d17d8848 <col:30, col:37> 'double'
    |     | |     |-ImplicitCastExpr 0x5583d17d8830 <col:30> 'double (*)(double)' <FunctionToPointerDecay>
    |     | |     | `-DeclRefExpr 0x5583d17d87f0 <col:30> 'double (double)' Function 0x5583d17894b8 'ceil' 'double (double)' non_odr_use_unevaluated
    |     | |     `-ImplicitCastExpr 0x5583d17d8870 <col:35> 'double' <LValueToRValue>
    |     | |       `-DeclRefExpr 0x5583d17d8810 <col:35> 'double' lvalue Var 0x5583d17d7280 'd1' 'double' non_odr_use_unevaluated
    |     | `-UnaryExprOrTypeTraitExpr 0x5583d17d88e0 <col:43, col:56> 'unsigned long' sizeof 'float'
    |     |-CallExpr 0x5583d17d89f0 <col:60, col:78> 'int'
    |     | |-ImplicitCastExpr 0x5583d17d89d8 <col:60> 'int (*)(float)' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x5583d17d8920 <col:60> 'int (float)' Function 0x5583d17a65d8 '__isinff' 'int (float)'
    |     | `-ImplicitCastExpr 0x5583d17d8a18 <col:70, col:77> 'float' <FloatingCast>
    |     |   `-CallExpr 0x5583d17d8998 <col:70, col:77> 'double'
    |     |     |-ImplicitCastExpr 0x5583d17d8980 <col:70> 'double (*)(double)' <FunctionToPointerDecay>
    |     |     | `-DeclRefExpr 0x5583d17d8940 <col:70> 'double (double)' Function 0x5583d17894b8 'ceil' 'double (double)'
    |     |     `-ImplicitCastExpr 0x5583d17d89c0 <col:75> 'double' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5583d17d8960 <col:75> 'double' lvalue Var 0x5583d17d7280 'd1' 'double'
    |     `-ConditionalOperator 0x5583d17d8d68 <col:82, col:160> 'int'
    |       |-BinaryOperator 0x5583d17d8b40 <col:82, col:117> 'int' '=='
    |       | |-UnaryExprOrTypeTraitExpr 0x5583d17d8ae8 <col:82, col:98> 'unsigned long' sizeof
    |       | | `-ParenExpr 0x5583d17d8ac8 <col:89, col:98> 'double'
    |       | |   `-CallExpr 0x5583d17d8a88 <col:90, col:97> 'double'
    |       | |     |-ImplicitCastExpr 0x5583d17d8a70 <col:90> 'double (*)(double)' <FunctionToPointerDecay>
    |       | |     | `-DeclRefExpr 0x5583d17d8a30 <col:90> 'double (double)' Function 0x5583d17894b8 'ceil' 'double (double)' non_odr_use_unevaluated
    |       | |     `-ImplicitCastExpr 0x5583d17d8ab0 <col:95> 'double' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5583d17d8a50 <col:95> 'double' lvalue Var 0x5583d17d7280 'd1' 'double' non_odr_use_unevaluated
    |       | `-UnaryExprOrTypeTraitExpr 0x5583d17d8b20 <col:103, col:117> 'unsigned long' sizeof 'double'
    |       |-CallExpr 0x5583d17d8c30 <col:121, col:138> 'int'
    |       | |-ImplicitCastExpr 0x5583d17d8c18 <col:121> 'int (*)(double)' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x5583d17d8b60 <col:121> 'int (double)' Function 0x5583d178a988 '__isinf' 'int (double)'
    |       | `-CallExpr 0x5583d17d8bd8 <col:130, col:137> 'double'
    |       |   |-ImplicitCastExpr 0x5583d17d8bc0 <col:130> 'double (*)(double)' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x5583d17d8b80 <col:130> 'double (double)' Function 0x5583d17894b8 'ceil' 'double (double)'
    |       |   `-ImplicitCastExpr 0x5583d17d8c00 <col:135> 'double' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5583d17d8ba0 <col:135> 'double' lvalue Var 0x5583d17d7280 'd1' 'double'
    |       `-CallExpr 0x5583d17d8d28 <col:142, col:160> 'int'
    |         |-ImplicitCastExpr 0x5583d17d8d10 <col:142> 'int (*)(long double)' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x5583d17d8c58 <col:142> 'int (long double)' Function 0x5583d17c2318 '__isinfl' 'int (long double)'
    |         `-ImplicitCastExpr 0x5583d17d8d50 <col:152, col:159> 'long double' <FloatingCast>
    |           `-CallExpr 0x5583d17d8cd0 <col:152, col:159> 'double'
    |             |-ImplicitCastExpr 0x5583d17d8cb8 <col:152> 'double (*)(double)' <FunctionToPointerDecay>
    |             | `-DeclRefExpr 0x5583d17d8c78 <col:152> 'double (double)' Function 0x5583d17894b8 'ceil' 'double (double)'
    |             `-ImplicitCastExpr 0x5583d17d8cf8 <col:157> 'double' <LValueToRValue>
    |               `-DeclRefExpr 0x5583d17d8c98 <col:157> 'double' lvalue Var 0x5583d17d7280 'd1' 'double'
    |-DeclStmt 0x5583d17d8f00 <line:1012:3, col:41>
    | `-VarDecl 0x5583d17d8e40 <col:3, col:40> col:10 used d2 'double' cinit
    |   `-CallExpr 0x5583d17d8ee0 <col:15, col:40> 'double'
    |     `-ImplicitCastExpr 0x5583d17d8ec8 <col:15> 'double (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5583d17d8ea8 <col:15> 'double ()' Function 0x5583d17d6048 '__VERIFIER_nondet_double' 'double ()'
    |-CallExpr 0x5583d17d9360 <line:1013:3, col:132> 'void'
    | |-ImplicitCastExpr 0x5583d17d9320 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5583d17d8f18 <col:3> 'void (int)' Function 0x5583d17d5b10 '__VERIFIER_assume' 'void (int)'
    | `-ParenExpr 0x5583d17d9300 <col:21, col:131> 'int'
    |   `-ConditionalOperator 0x5583d17d92d0 <col:22, col:130> 'int'
    |     |-BinaryOperator 0x5583d17d8fd0 <col:22, col:50> 'int' '=='
    |     | |-UnaryExprOrTypeTraitExpr 0x5583d17d8f78 <col:22, col:32> 'unsigned long' sizeof
    |     | | `-ParenExpr 0x5583d17d8f58 <col:29, col:32> 'double' lvalue
    |     | |   `-DeclRefExpr 0x5583d17d8f38 <col:30> 'double' lvalue Var 0x5583d17d8e40 'd2' 'double' non_odr_use_unevaluated
    |     | `-UnaryExprOrTypeTraitExpr 0x5583d17d8fb0 <col:37, col:50> 'unsigned long' sizeof 'float'
    |     |-CallExpr 0x5583d17d9048 <col:54, col:66> 'int'
    |     | |-ImplicitCastExpr 0x5583d17d9030 <col:54> 'int (*)(float)' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x5583d17d8ff0 <col:54> 'int (float)' Function 0x5583d17a65d8 '__isinff' 'int (float)'
    |     | `-ImplicitCastExpr 0x5583d17d9088 <col:64> 'float' <FloatingCast>
    |     |   `-ImplicitCastExpr 0x5583d17d9070 <col:64> 'double' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5583d17d9010 <col:64> 'double' lvalue Var 0x5583d17d8e40 'd2' 'double'
    |     `-ConditionalOperator 0x5583d17d92a0 <col:70, col:130> 'int'
    |       |-BinaryOperator 0x5583d17d9138 <col:70, col:99> 'int' '=='
    |       | |-UnaryExprOrTypeTraitExpr 0x5583d17d90e0 <col:70, col:80> 'unsigned long' sizeof
    |       | | `-ParenExpr 0x5583d17d90c0 <col:77, col:80> 'double' lvalue
    |       | |   `-DeclRefExpr 0x5583d17d90a0 <col:78> 'double' lvalue Var 0x5583d17d8e40 'd2' 'double' non_odr_use_unevaluated
    |       | `-UnaryExprOrTypeTraitExpr 0x5583d17d9118 <col:85, col:99> 'unsigned long' sizeof 'double'
    |       |-CallExpr 0x5583d17d91b0 <col:103, col:114> 'int'
    |       | |-ImplicitCastExpr 0x5583d17d9198 <col:103> 'int (*)(double)' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x5583d17d9158 <col:103> 'int (double)' Function 0x5583d178a988 '__isinf' 'int (double)'
    |       | `-ImplicitCastExpr 0x5583d17d91d8 <col:112> 'double' <LValueToRValue>
    |       |   `-DeclRefExpr 0x5583d17d9178 <col:112> 'double' lvalue Var 0x5583d17d8e40 'd2' 'double'
    |       `-CallExpr 0x5583d17d9248 <col:118, col:130> 'int'
    |         |-ImplicitCastExpr 0x5583d17d9230 <col:118> 'int (*)(long double)' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x5583d17d91f0 <col:118> 'int (long double)' Function 0x5583d17c2318 '__isinfl' 'int (long double)'
    |         `-ImplicitCastExpr 0x5583d17d9288 <col:128> 'long double' <FloatingCast>
    |           `-ImplicitCastExpr 0x5583d17d9270 <col:128> 'double' <LValueToRValue>
    |             `-DeclRefExpr 0x5583d17d9210 <col:128> 'double' lvalue Var 0x5583d17d8e40 'd2' 'double'
    |-CallExpr 0x5583d17d99b8 <line:1014:3, col:162> 'void'
    | |-ImplicitCastExpr 0x5583d17d99a0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5583d17d9388 <col:3> 'void (int)' Function 0x5583d17d5d88 '__VERIFIER_assert' 'void (int)'
    | `-ParenExpr 0x5583d17d9980 <col:21, col:161> 'int'
    |   `-ConditionalOperator 0x5583d17d9950 <col:22, col:160> 'int'
    |     |-BinaryOperator 0x5583d17d94b8 <col:22, col:56> 'int' '=='
    |     | |-UnaryExprOrTypeTraitExpr 0x5583d17d9460 <col:22, col:38> 'unsigned long' sizeof
    |     | | `-ParenExpr 0x5583d17d9440 <col:29, col:38> 'double'
    |     | |   `-CallExpr 0x5583d17d9400 <col:30, col:37> 'double'
    |     | |     |-ImplicitCastExpr 0x5583d17d93e8 <col:30> 'double (*)(double)' <FunctionToPointerDecay>
    |     | |     | `-DeclRefExpr 0x5583d17d93a8 <col:30> 'double (double)' Function 0x5583d17894b8 'ceil' 'double (double)' non_odr_use_unevaluated
    |     | |     `-ImplicitCastExpr 0x5583d17d9428 <col:35> 'double' <LValueToRValue>
    |     | |       `-DeclRefExpr 0x5583d17d93c8 <col:35> 'double' lvalue Var 0x5583d17d8e40 'd2' 'double' non_odr_use_unevaluated
    |     | `-UnaryExprOrTypeTraitExpr 0x5583d17d9498 <col:43, col:56> 'unsigned long' sizeof 'float'
    |     |-CallExpr 0x5583d17d95a8 <col:60, col:78> 'int'
    |     | |-ImplicitCastExpr 0x5583d17d9590 <col:60> 'int (*)(float)' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x5583d17d94d8 <col:60> 'int (float)' Function 0x5583d17a65d8 '__isinff' 'int (float)'
    |     | `-ImplicitCastExpr 0x5583d17d95d0 <col:70, col:77> 'float' <FloatingCast>
    |     |   `-CallExpr 0x5583d17d9550 <col:70, col:77> 'double'
    |     |     |-ImplicitCastExpr 0x5583d17d9538 <col:70> 'double (*)(double)' <FunctionToPointerDecay>
    |     |     | `-DeclRefExpr 0x5583d17d94f8 <col:70> 'double (double)' Function 0x5583d17894b8 'ceil' 'double (double)'
    |     |     `-ImplicitCastExpr 0x5583d17d9578 <col:75> 'double' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5583d17d9518 <col:75> 'double' lvalue Var 0x5583d17d8e40 'd2' 'double'
    |     `-ConditionalOperator 0x5583d17d9920 <col:82, col:160> 'int'
    |       |-BinaryOperator 0x5583d17d96f8 <col:82, col:117> 'int' '=='
    |       | |-UnaryExprOrTypeTraitExpr 0x5583d17d96a0 <col:82, col:98> 'unsigned long' sizeof
    |       | | `-ParenExpr 0x5583d17d9680 <col:89, col:98> 'double'
    |       | |   `-CallExpr 0x5583d17d9640 <col:90, col:97> 'double'
    |       | |     |-ImplicitCastExpr 0x5583d17d9628 <col:90> 'double (*)(double)' <FunctionToPointerDecay>
    |       | |     | `-DeclRefExpr 0x5583d17d95e8 <col:90> 'double (double)' Function 0x5583d17894b8 'ceil' 'double (double)' non_odr_use_unevaluated
    |       | |     `-ImplicitCastExpr 0x5583d17d9668 <col:95> 'double' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5583d17d9608 <col:95> 'double' lvalue Var 0x5583d17d8e40 'd2' 'double' non_odr_use_unevaluated
    |       | `-UnaryExprOrTypeTraitExpr 0x5583d17d96d8 <col:103, col:117> 'unsigned long' sizeof 'double'
    |       |-CallExpr 0x5583d17d97e8 <col:121, col:138> 'int'
    |       | |-ImplicitCastExpr 0x5583d17d97d0 <col:121> 'int (*)(double)' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x5583d17d9718 <col:121> 'int (double)' Function 0x5583d178a988 '__isinf' 'int (double)'
    |       | `-CallExpr 0x5583d17d9790 <col:130, col:137> 'double'
    |       |   |-ImplicitCastExpr 0x5583d17d9778 <col:130> 'double (*)(double)' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x5583d17d9738 <col:130> 'double (double)' Function 0x5583d17894b8 'ceil' 'double (double)'
    |       |   `-ImplicitCastExpr 0x5583d17d97b8 <col:135> 'double' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5583d17d9758 <col:135> 'double' lvalue Var 0x5583d17d8e40 'd2' 'double'
    |       `-CallExpr 0x5583d17d98e0 <col:142, col:160> 'int'
    |         |-ImplicitCastExpr 0x5583d17d98c8 <col:142> 'int (*)(long double)' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x5583d17d9810 <col:142> 'int (long double)' Function 0x5583d17c2318 '__isinfl' 'int (long double)'
    |         `-ImplicitCastExpr 0x5583d17d9908 <col:152, col:159> 'long double' <FloatingCast>
    |           `-CallExpr 0x5583d17d9888 <col:152, col:159> 'double'
    |             |-ImplicitCastExpr 0x5583d17d9870 <col:152> 'double (*)(double)' <FunctionToPointerDecay>
    |             | `-DeclRefExpr 0x5583d17d9830 <col:152> 'double (double)' Function 0x5583d17894b8 'ceil' 'double (double)'
    |             `-ImplicitCastExpr 0x5583d17d98b0 <col:157> 'double' <LValueToRValue>
    |               `-DeclRefExpr 0x5583d17d9850 <col:157> 'double' lvalue Var 0x5583d17d8e40 'd2' 'double'
    `-ReturnStmt 0x5583d17d9a00 <line:1016:3, col:10>
      `-IntegerLiteral 0x5583d17d99e0 <col:10> 'int' 0
