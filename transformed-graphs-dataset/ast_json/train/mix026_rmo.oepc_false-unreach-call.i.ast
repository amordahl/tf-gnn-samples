TranslationUnitDecl 0x561c30120f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x561c30121848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x561c30121520 '__int128'
|-TypedefDecl 0x561c301218b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x561c30121540 'unsigned __int128'
|-TypedefDecl 0x561c30121bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x561c30121990 'struct __NSConstantString_tag'
|   `-Record 0x561c30121910 '__NSConstantString_tag'
|-TypedefDecl 0x561c30121c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x561c30121c20 'char *'
|   `-BuiltinType 0x561c30121020 'char'
|-TypedefDecl 0x561c30160b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x561c30121f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x561c30121d40 'struct __va_list_tag'
|     `-Record 0x561c30121cc0 '__va_list_tag'
|-FunctionDecl 0x561c30160ca0 <pthread-wmm/mix026_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x561c30160bd0 <col:31> col:34 'int'
|-FunctionDecl 0x561c30160e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x561c30160f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x561c301610d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x561c30161048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x561c30161308 <col:40, col:99>
|   |-IfStmt 0x561c301612d8 <col:42, col:88>
|   | |-UnaryOperator 0x561c301611b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x561c301611a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x561c30161180 <col:47> 'int' lvalue ParmVar 0x561c30161048 'expression' 'int'
|   | `-CompoundStmt 0x561c301612c0 <col:59, col:88>
|   |   `-LabelStmt 0x561c301612a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x561c30161238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x561c30161220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x561c301611d0 <col:68> 'void () __attribute__((noreturn))' Function 0x561c30160f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x561c301612f0 <col:89>
|   `-ReturnStmt 0x561c301612f8 <col:91>
|-FunctionDecl 0x561c30161350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x561c30161410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x561c30161790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561c301614c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x561c30161548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x561c301615c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x561c30161648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x561c30161850 <line:10:22>
|-FunctionDecl 0x561c301878a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561c301618c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x561c30161940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x561c301619c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x561c30161a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x561c30187960 <line:13:22>
|-FunctionDecl 0x561c30187c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561c301879d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x561c30187a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x561c30187ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x561c30187cc8 <line:15:22>
|-TypedefDecl 0x561c30187d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x561c301210e0 'unsigned char'
|-TypedefDecl 0x561c30187da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x561c30121100 'unsigned short'
|-TypedefDecl 0x561c30187e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x561c30121120 'unsigned int'
|-TypedefDecl 0x561c30187e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x561c30121140 'unsigned long'
|-TypedefDecl 0x561c30187ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x561c30121040 'signed char'
|-TypedefDecl 0x561c30187f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x561c301210e0 'unsigned char'
|-TypedefDecl 0x561c30187fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x561c30121060 'short'
|-TypedefDecl 0x561c30188048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x561c30121100 'unsigned short'
|-TypedefDecl 0x561c301880b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x561c30121080 'int'
|-TypedefDecl 0x561c30188128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x561c30121120 'unsigned int'
|-TypedefDecl 0x561c30188198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x561c301210a0 'long'
|-TypedefDecl 0x561c30188208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x561c30121140 'unsigned long'
|-TypedefDecl 0x561c30188278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x561c301210a0 'long'
|-TypedefDecl 0x561c301882e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x561c30121140 'unsigned long'
|-TypedefDecl 0x561c30188358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x561c30121140 'unsigned long'
|-TypedefDecl 0x561c301883c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x561c30121120 'unsigned int'
|-TypedefDecl 0x561c30188438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x561c30121120 'unsigned int'
|-TypedefDecl 0x561c301884a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x561c30121140 'unsigned long'
|-TypedefDecl 0x561c30188518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x561c30121140 'unsigned long'
|-TypedefDecl 0x561c30188588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x561c30121120 'unsigned int'
|-TypedefDecl 0x561c301885f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x561c30121140 'unsigned long'
|-TypedefDecl 0x561c30188668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x561c301210a0 'long'
|-TypedefDecl 0x561c301886d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x561c301210a0 'long'
|-TypedefDecl 0x561c30188748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x561c30121080 'int'
|-RecordDecl 0x561c301887a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x561c30188918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x561c301889d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x561c30188970 'struct __fsid_t' sugar
|   `-RecordType 0x561c30188820 '__fsid_t'
|     `-Record 0x561c301887a0 ''
|-TypedefDecl 0x561c30188a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x561c301210a0 'long'
|-TypedefDecl 0x561c30188ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x561c30121140 'unsigned long'
|-TypedefDecl 0x561c30188b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x561c30121140 'unsigned long'
|-TypedefDecl 0x561c30188ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x561c30121120 'unsigned int'
|-TypedefDecl 0x561c30188c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x561c301210a0 'long'
|-TypedefDecl 0x561c30188c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x561c30121120 'unsigned int'
|-TypedefDecl 0x561c30188cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x561c301210a0 'long'
|-TypedefDecl 0x561c30188d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x561c30121080 'int'
|-TypedefDecl 0x561c30188dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x561c30121080 'int'
|-TypedefDecl 0x561c30188e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x561c30121080 'int'
|-TypedefDecl 0x561c30188eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x561c301217a0 'void *'
|   `-BuiltinType 0x561c30120fe0 'void'
|-TypedefDecl 0x561c30188f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x561c301210a0 'long'
|-TypedefDecl 0x561c30188f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x561c301210a0 'long'
|-TypedefDecl 0x561c30189008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x561c301210a0 'long'
|-TypedefDecl 0x561c30189078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x561c30121140 'unsigned long'
|-TypedefDecl 0x561c301890e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x561c30121140 'unsigned long'
|-TypedefDecl 0x561c30189158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x561c30121140 'unsigned long'
|-TypedefDecl 0x561c301891c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x561c30121140 'unsigned long'
|-TypedefDecl 0x561c30189238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x561c301210a0 'long'
|-TypedefDecl 0x561c301892a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x561c301210a0 'long'
|-TypedefDecl 0x561c30189318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x561c301210a0 'long'
|-TypedefDecl 0x561c30189388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x561c30121140 'unsigned long'
|-TypedefDecl 0x561c30189418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x561c301893e0 '__off64_t' sugar
|   |-Typedef 0x561c301886d8 '__off64_t'
|   `-BuiltinType 0x561c301210a0 'long'
|-TypedefDecl 0x561c30189510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x561c301894d0 '__quad_t *'
|   `-TypedefType 0x561c30189470 '__quad_t' sugar
|     |-Typedef 0x561c30188278 '__quad_t'
|     `-BuiltinType 0x561c301210a0 'long'
|-TypedefDecl 0x561c30189580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x561c30121c20 'char *'
|   `-BuiltinType 0x561c30121020 'char'
|-TypedefDecl 0x561c301895f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x561c301210a0 'long'
|-TypedefDecl 0x561c30189660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x561c30121120 'unsigned int'
|-FunctionDecl 0x561c301897a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x561c301896d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x561c30189ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x561c30189ad8 <line:72:3, col:34>
|     `-CallExpr 0x561c30189a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x561c30189a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x561c30189a10 <col:10> '<builtin fn type>' Function 0x561c30189880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x561c30189ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x561c30189a30 <col:29> 'unsigned int' lvalue ParmVar 0x561c301896d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x561c30189880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x561c30189920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x561c30189990 <col:10> Implicit
| `-ConstAttr 0x561c301899e8 <col:10> Implicit
|-FunctionDecl 0x561c30189c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x561c30189b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x561c30189f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x561c30189f48 <line:77:3, col:34>
|     `-CallExpr 0x561c30189f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x561c30189ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x561c30189e78 <col:10> '<builtin fn type>' Function 0x561c30189ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x561c30189f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x561c30189e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x561c30189b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x561c30189ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x561c30189d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x561c30189df8 <col:10> Implicit
| `-ConstAttr 0x561c30189e50 <col:10> Implicit
|-TypedefDecl 0x561c30189f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x561c30121140 'unsigned long'
|-TypedefDecl 0x561c3018a018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x561c30189fe0 '__time_t' sugar
|   |-Typedef 0x561c30188c18 '__time_t'
|   `-BuiltinType 0x561c301210a0 'long'
|-RecordDecl 0x561c3018a070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x561c3018a128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x561c3018a1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x561c3018a248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x561c3018a210 '__pid_t' sugar
|   |-Typedef 0x561c30188748 '__pid_t'
|   `-BuiltinType 0x561c30121080 'int'
|-RecordDecl 0x561c3018a2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x561c3018a360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x561c3018a3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x561c3018a470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x561c3018a4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x561c30121140 'unsigned long'
|-RecordDecl 0x561c3018a530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x561c3018a7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x561c3018c8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x561c3018a810 'struct cpu_set_t' sugar
|   `-RecordType 0x561c3018a5b0 'cpu_set_t'
|     `-Record 0x561c3018a530 ''
|-FunctionDecl 0x561c3018cb88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x561c3018c958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561c3018ca60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x561c3018cc38 <line:107:19>
|-FunctionDecl 0x561c3018ce10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x561c3018cca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x561c3018ceb8 <col:69>
|-FunctionDecl 0x561c3018d030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x561c3018cf20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x561c3018d0d8 <col:64>
|-FunctionDecl 0x561c3018d398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x561c3018d140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561c3018d278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561c3018d448 <line:113:22>
|-FunctionDecl 0x561c3018d6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x561c3018d4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561c3018d5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x561c3018d778 <col:88>
|-FunctionDecl 0x561c3018da98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x561c3018d7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561c3018d8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x561c3018d950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561c3018db50 <col:62>
|-FunctionDecl 0x561c3018dcc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x561c3018dbb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x561c3018dd70 <col:63>
|-FunctionDecl 0x561c3018de98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x561c3018df38 <col:47>
|-FunctionDecl 0x561c3018e040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x561c3018dfa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x561c3018e0e8 <col:69>
|-FunctionDecl 0x561c3018e1f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x561c3018e158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x561c3018e298 <col:69>
|-FunctionDecl 0x561c3018e558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561c3018e300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561c3018e438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x561c3018e608 <col:88>
|-TypedefDecl 0x561c3018e698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x561c3018e660 '__clock_t' sugar
|   |-Typedef 0x561c30188a58 '__clock_t'
|   `-BuiltinType 0x561c301210a0 'long'
|-TypedefDecl 0x561c3018e728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x561c3018e6f0 '__clockid_t' sugar
|   |-Typedef 0x561c30188e48 '__clockid_t'
|   `-BuiltinType 0x561c30121080 'int'
|-TypedefDecl 0x561c3018e7b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x561c3018e780 '__timer_t' sugar
|   |-Typedef 0x561c30188eb8 '__timer_t'
|   `-PointerType 0x561c301217a0 'void *'
|     `-BuiltinType 0x561c30120fe0 'void'
|-RecordDecl 0x561c3018e810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x561c3018e8e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x561c3018e950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x561c3018e9b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x561c3018ea20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x561c3018ea88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x561c3018eaf0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x561c3018eb58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x561c3018ebc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x561c3018ec28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x561c3018ec90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x561c3018ecf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x561c3018ed48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x561c3018ee18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x561c3018ee88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x561c3018ef30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x561c3018f100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x561c3018f1a0 <col:45>
|-FunctionDecl 0x561c3018f380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x561c3018f270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x561c3018f428 <col:54>
|-FunctionDecl 0x561c3018f628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x561c3018f490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x561c3018f508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x561c3018f6d8 <line:157:22>
| `-ConstAttr 0x561c3018f730 <col:63>
|-FunctionDecl 0x561c30190560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561c3018f828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x561c30190608 <col:56>
|-FunctionDecl 0x561c301909b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x561c30190678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x561c301906f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561c30190770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x561c30190868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x561c30190a70 <col:54>
|-RecordDecl 0x561c30190ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x561c30190b78 parent 0x561c30120f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x561c30190dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x561c30190e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x561c30190ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x561c30190f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x561c30191038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x561c30191158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x561c30191100 'struct __locale_struct *'
|   `-ElaboratedType 0x561c30191090 'struct __locale_struct' sugar
|     `-RecordType 0x561c30190b50 'struct __locale_struct'
|       `-Record 0x561c30190ac8 '__locale_struct'
|-TypedefDecl 0x561c30191208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x561c301911d0 '__locale_t' sugar
|   |-Typedef 0x561c30191158 '__locale_t'
|   `-PointerType 0x561c30191100 'struct __locale_struct *'
|     `-ElaboratedType 0x561c30191090 'struct __locale_struct' sugar
|       `-RecordType 0x561c30190b50 'struct __locale_struct'
|         `-Record 0x561c30190ac8 '__locale_struct'
|-FunctionDecl 0x561c30191610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x561c30191278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x561c301912f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561c30191370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x561c30191400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x561c30191478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x561c301916d8 <col:40>
|-FunctionDecl 0x561c301918c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x561c301917a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x561c30191970 <col:66>
|-FunctionDecl 0x561c30191a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x561c301919d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x561c30191b28 <col:69>
|-FunctionDecl 0x561c30191d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x561c30191b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561c30191c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x561c30191e08 <col:52>
|-FunctionDecl 0x561c30191fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x561c30191e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561c30191f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x561c30192060 <col:55>
|-FunctionDecl 0x561c301921f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x561c301920e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x561c301922a0 <col:62>
|-FunctionDecl 0x561c30192418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x561c30192308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x561c301924c0 <col:60>
|-FunctionDecl 0x561c30192718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x561c30192578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x561c301925f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x561c301927c8 <col:44>
|-FunctionDecl 0x561c301929d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x561c30192830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561c301928b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x561c30192a88 <col:49>
|-VarDecl 0x561c30192b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x561c30192c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x561c30192c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x561c30192d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x561c30192e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x561c30192f20 <col:42>
|-VarDecl 0x561c30192f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x561c30193010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x561c30193198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x561c30193088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x561c30193240 <col:57>
|-FunctionDecl 0x561c30193350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561c301932c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x561c301933f8 <col:56>
|-FunctionDecl 0x561c30194540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561c30193478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x561c301945e8 <col:59>
|-FunctionDecl 0x561c301946f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x561c30194658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x561c30194798 <col:48>
| `-ConstAttr 0x561c301947f0 <col:89>
|-FunctionDecl 0x561c30194a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x561c301948a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x561c30194938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x561c30194cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561c30194b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561c30194bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x561c30194d68 <col:88>
|-FunctionDecl 0x561c30194f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561c30194dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561c30194e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x561c30194fb0 <col:88>
|-FunctionDecl 0x561c301951c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x561c30195018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561c301950a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x561c30195278 <line:208:22>
|-FunctionDecl 0x561c301955e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x561c301952e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561c30195360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x561c301953f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x561c30195480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x561c301958e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x561c301956e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x561c301957c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x561c30195998 <col:85>
|-FunctionDecl 0x561c30195d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x561c30195a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561c30195b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x561c30195c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x561c30195e40 <col:52>
|-FunctionDecl 0x561c30195fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x561c30195ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x561c30196060 <col:61>
|-FunctionDecl 0x561c30196560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x561c301960c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x561c30196148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x561c30196278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x561c30196368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x561c30196620 <col:62>
|-FunctionDecl 0x561c30196838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x561c30196688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x561c30196718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x561c301968e8 <line:221:22>
|-FunctionDecl 0x561c301969e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x561c30196950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x561c30196a90 <col:65>
|-TypedefDecl 0x561c30196b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x561c30121140 'unsigned long'
|-RecordDecl 0x561c30196b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x561c30196ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x561c30196d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561c30196db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x561c30196d60 'union pthread_attr_t' sugar
|   `-RecordType 0x561c30196be0 'union pthread_attr_t'
|     `-Record 0x561c30196b58 'pthread_attr_t'
|-RecordDecl 0x561c30196e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x561c30196f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x561c30197000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x561c301970b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x561c30197050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x561c30196e90 'struct __pthread_internal_list'
|     `-Record 0x561c30196e10 '__pthread_internal_list'
|-RecordDecl 0x561c30197120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x561c301971c8 parent 0x561c30120f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x561c301972a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561c30197308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x561c30197370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x561c301973d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x561c30197440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x561c301974a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x561c3019b580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x561c3019b630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x561c3019b720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x561c3019b788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561c3019b910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x561c3019b8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x561c301971a0 'pthread_mutex_t'
|     `-Record 0x561c30197120 ''
|-RecordDecl 0x561c3019b980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x561c3019bac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561c3019bb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561c3019bbe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x561c3019bb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x561c3019ba00 'pthread_mutexattr_t'
|     `-Record 0x561c3019b980 ''
|-RecordDecl 0x561c3019bc50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x561c3019bcf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x561c3019bdc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561c3019be28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x561c3019be90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x561c3019bef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x561c3019bf60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x561c3019bfc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x561c3019c030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x561c3019c098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x561c3019c150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix026_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix026_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x561c3019c240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x561c3019c2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x561c3019c3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x561c3019c380 'union pthread_cond_t' sugar
|   `-RecordType 0x561c3019bcd0 'pthread_cond_t'
|     `-Record 0x561c3019bc50 ''
|-RecordDecl 0x561c3019c450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x561c3019c590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561c3019c5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561c3019c6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x561c3019c650 'union pthread_condattr_t' sugar
|   `-RecordType 0x561c3019c4d0 'pthread_condattr_t'
|     `-Record 0x561c3019c450 ''
|-TypedefDecl 0x561c3019c738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x561c30121120 'unsigned int'
|-TypedefDecl 0x561c3019c7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x561c30121080 'int'
|-RecordDecl 0x561c3019c800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x561c3019c8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x561c3019c970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561c3019c9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x561c3019ca40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x561c3019caa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x561c3019cb10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x561c3019cb78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x561c3019cbe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x561c3019cc48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x561c3019ccb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x561c3019cd18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x561c3019cd80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x561c3019ce30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix026_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix026_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x561c3019ced8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x561c3019cf40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561c3019d090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x561c3019d030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x561c3019c880 'pthread_rwlock_t'
|     `-Record 0x561c3019c800 ''
|-RecordDecl 0x561c3019d100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x561c3019d240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x561c3019d2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561c3019d360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x561c3019d300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x561c3019d180 'pthread_rwlockattr_t'
|     `-Record 0x561c3019d100 ''
|-TypedefDecl 0x561c3019d3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x561c30121084 'volatile int' volatile
|   `-BuiltinType 0x561c30121080 'int'
|-RecordDecl 0x561c3019d440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x561c3019f5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x561c3019f618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561c3019f6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x561c3019f670 'union pthread_barrier_t' sugar
|   `-RecordType 0x561c3019d4c0 'pthread_barrier_t'
|     `-Record 0x561c3019d440 ''
|-RecordDecl 0x561c3019f740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x561c3019f840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561c3019f8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561c3019f960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x561c3019f900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x561c3019f7c0 'pthread_barrierattr_t'
|     `-Record 0x561c3019f740 ''
|-TypedefDecl 0x561c3019fa78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x561c3019fa10 'long [8]' 8 
|   `-BuiltinType 0x561c301210a0 'long'
|-EnumDecl 0x561c3019fad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x561c3019fb98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x561c3019fbe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x561c3019fc38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x561c3019fd08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x561c3019fd58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x561c3019fda8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x561c3019fdf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x561c3019fe80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x561c3019fe68 <col:26> 'int'
| |   `-DeclRefExpr 0x561c3019fe48 <col:26> 'int' EnumConstant 0x561c3019fd08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x561c3019ff08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x561c3019fef0 <col:29> 'int'
| |   `-DeclRefExpr 0x561c3019fed0 <col:29> 'int' EnumConstant 0x561c3019fd58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x561c3019ff90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x561c3019ff78 <col:30> 'int'
| |   `-DeclRefExpr 0x561c3019ff58 <col:30> 'int' EnumConstant 0x561c3019fda8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x561c301a0018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x561c301a0000 <col:27> 'int'
|     `-DeclRefExpr 0x561c3019ffe0 <col:27> 'int' EnumConstant 0x561c3019fe80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x561c301a0068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x561c301a0138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x561c301a01c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x561c301a01a8 <col:30> 'int'
| |   `-DeclRefExpr 0x561c301a0188 <col:30> 'int' EnumConstant 0x561c301a0138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x561c301a0210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x561c301a0298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x561c301a0280 <col:29> 'int'
|     `-DeclRefExpr 0x561c301a0260 <col:29> 'int' EnumConstant 0x561c301a0210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x561c301a02e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x561c301a03b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x561c301a0408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x561c301a0458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x561c301a04a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x561c301a05c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x561c301a0610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x561c301a0660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x561c301a06e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x561c301a06d0 <col:31> 'int'
|     `-DeclRefExpr 0x561c301a06b0 <col:31> 'int' EnumConstant 0x561c301a05c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x561c301a0738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x561c301a0808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x561c301a0858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x561c301a08a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x561c301a0978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x561c301a09c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x561c301a0a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x561c301a0ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x561c301a0b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x561c301a0b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x561c301a0dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x561c301a0e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x561c301a0e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x561c301a0fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x561c301a1008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x561c301a10d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x561c301a1128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x561c301a1178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x561c301a1248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x561c301a1298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x561c301a18f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x561c301a1390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x561c301a14a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561c301a16e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x561c301a1760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x561c301a19b8 <col:47>
| |-NonNullAttr 0x561c301a1a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x561c301a1a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x561c301a1b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x561c301a1aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x561c301a1dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x561c301a1c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x561c301a1ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x561c301a1f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x561c301a1e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x561c301a2040 <col:60>
|-FunctionDecl 0x561c301a2190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x561c301a2230 <col:54>
| `-ConstAttr 0x561c301a2288 <col:95>
|-FunctionDecl 0x561c301a2458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x561c301a22c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561c301a2338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x561c301a2508 <line:394:19>
| `-ConstAttr 0x561c301a2560 <col:60>
|-FunctionDecl 0x561c301a2f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x561c301a2e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x561c301a3010 <col:71>
| `-NonNullAttr 0x561c301a3068 <col:112, col:126> 1
|-FunctionDecl 0x561c301a3170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x561c301a30b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x561c301a3218 <line:397:22>
| `-NonNullAttr 0x561c301a3270 <col:63, col:77> 1
|-FunctionDecl 0x561c301a3498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x561c301a32b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x561c301a3338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x561c301a3548 <line:400:22>
| `-NonNullAttr 0x561c301a35a0 <col:63, col:80> 1 2
|-FunctionDecl 0x561c301a37a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561c301a35e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561c301a3668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x561c301a3858 <line:403:22>
| `-NonNullAttr 0x561c301a38b0 <col:63, col:77> 1
|-FunctionDecl 0x561c301a3b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x561c301a38f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x561c301a39a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x561c301a3bb8 <line:406:22>
| `-NonNullAttr 0x561c301a3c10 <col:63, col:80> 1 2
|-FunctionDecl 0x561c301a4e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x561c301a3c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561c301a3cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561c301a4ef8 <line:409:22>
| `-NonNullAttr 0x561c301a4f50 <col:63, col:77> 1
|-FunctionDecl 0x561c301a5188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561c301a4f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561c301a5028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x561c301a5238 <line:412:22>
| `-NonNullAttr 0x561c301a5290 <col:63, col:80> 1 2
|-FunctionDecl 0x561c301a54c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561c301a52d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x561c301a5368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x561c301a5578 <col:37>
| `-NonNullAttr 0x561c301a55d0 <col:78, col:95> 1 2
|-FunctionDecl 0x561c301a57b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561c301a5618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561c301a5698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x561c301a5868 <line:418:22>
| `-NonNullAttr 0x561c301a58c0 <col:63, col:80> 1 2
|-FunctionDecl 0x561c301a5a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561c301a5908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561c301a5988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x561c301a5af8 <line:420:22>
| `-NonNullAttr 0x561c301a5b50 <col:63, col:77> 1
|-FunctionDecl 0x561c301a5cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561c301a5b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561c301a5c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x561c301a5da8 <line:423:22>
| `-NonNullAttr 0x561c301a6e30 <col:63, col:80> 1 2
|-FunctionDecl 0x561c301a6fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561c301a6e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561c301a6ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x561c301a7068 <line:426:22>
| `-NonNullAttr 0x561c301a70c0 <col:63, col:77> 1
|-FunctionDecl 0x561c301a7268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561c301a7108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561c301a7188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x561c301a7318 <line:429:22>
| `-NonNullAttr 0x561c301a7370 <col:63, col:80> 1 2
|-FunctionDecl 0x561c301a74f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561c301a73b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561c301a7438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x561c301a75a8 <line:431:22>
| `-NonNullAttr 0x561c301a7600 <col:63, col:77> 1
|-FunctionDecl 0x561c301a7828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x561c301a7648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561c301a76c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x561c301a78d8 <line:434:22>
| |-NonNullAttr 0x561c301a7930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x561c301a7968 <col:100> "" ""
|-FunctionDecl 0x561c301a7b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x561c301a79b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561c301a7a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x561c301a7c28 <line:437:22>
| |-NonNullAttr 0x561c301a7c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x561c301a7cb8 <col:97> "" ""
|-FunctionDecl 0x561c301a7eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x561c301a7d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561c301a7d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x561c301a7f68 <line:440:22>
| `-NonNullAttr 0x561c301a7fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x561c301a8140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x561c301a8008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561c301a8080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561c301a81f0 <line:443:22>
| `-NonNullAttr 0x561c301a8248 <col:63, col:77> 1
|-FunctionDecl 0x561c301a8538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x561c301a8298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561c301a8318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x561c301a8390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x561c301a85f0 <line:447:22>
| `-NonNullAttr 0x561c301a8648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x561c301a88f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x561c301a86a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561c301a8720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x561c301a8798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561c301a89b0 <col:43>
| `-NonNullAttr 0x561c301a8a08 <col:84, col:98> 1
|-FunctionDecl 0x561c301a8cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x561c301a8a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561c301a8ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x561c301a8b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x561c301a8d80 <line:452:22>
| `-NonNullAttr 0x561c301a8dd8 <col:63, col:77> 3
|-FunctionDecl 0x561c301a90e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561c301a8e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561c301a8ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x561c301a8f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x561c301a91a0 <line:456:22>
| `-NonNullAttr 0x561c301a91f8 <col:63, col:80> 2 3
|-FunctionDecl 0x561c301a93e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x561c301a9248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561c301a92c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x561c301a9498 <line:458:22>
|-FunctionDecl 0x561c301a9868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x561c301a9560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x561c301a9700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x561c301a9918 <col:52, col:69> 1 2
|-FunctionDecl 0x561c301a9ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x561c301a99a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x561c301a9a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x561c301a9ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x561c301a9b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x561c301a9c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x561c301a9e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x561c301a9d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x561c301a9fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x561c301aa040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x561c301aa0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x561c301aa1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x561c301aa240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x561c301aa410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix026_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x561c301aa508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x561c301aa5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x561c301aa560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x561c301aa0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x561c301aa040 ''
| `-AlignedAttr 0x561c301aa618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x561c301aa690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x561c301aa7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x561c301aa858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x561c301aa8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x561c301aa928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x561c301aab30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x561c301aaa20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x561c301aac78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x561c301aabe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x561c301aae70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561c301aad30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x561c301aaf18 <line:487:22>
|-RecordDecl 0x561c301aaf70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x561c301ab288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x561c301ab0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x561c301ab168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x561c301ab338 <col:86>
| `-ReturnsTwiceAttr 0x561c301ab390 <col:12> Implicit
|-FunctionDecl 0x561c301ab6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561c301ab460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x561c301ab570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x561c301ab768 <line:493:22>
| `-NonNullAttr 0x561c301ab7c0 <col:63, col:77> 1
|-FunctionDecl 0x561c301ab938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561c301ab808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561c301ab9e0 <line:495:22>
| `-NonNullAttr 0x561c301aba38 <col:63, col:77> 1
|-FunctionDecl 0x561c301abb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561c301aba88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561c301abbe8 <line:497:22>
| `-NonNullAttr 0x561c301abc40 <col:52, col:66> 1
|-FunctionDecl 0x561c301abd40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561c301abc88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561c301abde8 <line:499:22>
| `-NonNullAttr 0x561c301abe40 <col:52, col:66> 1
|-FunctionDecl 0x561c301ac088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561c301abe98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561c301abf28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561c301ac138 <col:36>
| `-NonNullAttr 0x561c301ac190 <col:66, col:83> 1 2
|-FunctionDecl 0x561c301ac290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561c301ac1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561c301ac338 <line:504:22>
| `-NonNullAttr 0x561c301ac390 <col:52, col:66> 1
|-FunctionDecl 0x561c301ac628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561c301ac440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561c301ac4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x561c301ac6d8 <line:508:22>
| `-NonNullAttr 0x561c301ac730 <col:63, col:80> 1 2
|-FunctionDecl 0x561c301ac9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x561c301ac778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561c301ac7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x561c301ac878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x561c301acab0 <line:512:22>
| `-NonNullAttr 0x561c301acb08 <col:63, col:80> 1 3
|-FunctionDecl 0x561c301acc10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561c301acb58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561c301accb8 <line:514:22>
| `-NonNullAttr 0x561c301acd10 <col:63, col:77> 1
|-FunctionDecl 0x561c301acf38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561c301acdc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x561c301acfe0 <line:516:22>
| `-NonNullAttr 0x561c301ad038 <col:63, col:77> 1
|-FunctionDecl 0x561c301ad140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561c301ad088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x561c301ad1e8 <line:518:22>
| `-NonNullAttr 0x561c301ad240 <col:63, col:77> 1
|-FunctionDecl 0x561c301ad468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561c301ad288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561c301ad308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x561c301ad518 <line:522:22>
| `-NonNullAttr 0x561c301ad570 <col:63, col:80> 1 2
|-FunctionDecl 0x561c301ad778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561c301ad5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561c301ad638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x561c301ad828 <line:525:22>
| `-NonNullAttr 0x561c301ad880 <col:63, col:77> 1
|-FunctionDecl 0x561c301ada28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561c301ad8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561c301ad948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x561c301adad8 <line:528:22>
| `-NonNullAttr 0x561c301adb30 <col:63, col:80> 1 2
|-FunctionDecl 0x561c301adcb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561c301adb78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561c301adbf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x561c301add68 <line:530:22>
| `-NonNullAttr 0x561c301addc0 <col:63, col:77> 1
|-FunctionDecl 0x561c301aef90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561c301ade08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561c301aeeb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x561c301af040 <line:534:22>
| `-NonNullAttr 0x561c301af098 <col:63, col:80> 1 2
|-FunctionDecl 0x561c301af228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561c301af0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561c301af168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x561c301af2d8 <line:537:22>
| `-NonNullAttr 0x561c301af330 <col:63, col:77> 1
|-FunctionDecl 0x561c301af4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561c301af378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561c301af3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x561c301af588 <line:541:22>
| `-NonNullAttr 0x561c301af5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x561c301af768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561c301af628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561c301af6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x561c301af818 <line:544:22>
| `-NonNullAttr 0x561c301af870 <col:63, col:77> 1
|-FunctionDecl 0x561c301afa58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x561c301af8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x561c301af938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x561c301afb08 <line:547:22>
| `-NonNullAttr 0x561c301afb60 <col:63, col:80> 1 2
|-FunctionDecl 0x561c301afce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561c301afba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561c301afc28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x561c301afd98 <line:550:22>
| `-NonNullAttr 0x561c301afdf0 <col:63, col:77> 1
|-FunctionDecl 0x561c301b1168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x561c301b0f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561c301b1020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x561c301b1218 <col:29>
| `-NonNullAttr 0x561c301b1270 <col:70, col:84> 1
|-FunctionDecl 0x561c301b13e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561c301b12b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561c301b1490 <line:555:22>
| `-NonNullAttr 0x561c301b14e8 <col:63, col:77> 1
|-FunctionDecl 0x561c301b15f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561c301b1538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561c301b1698 <line:557:22>
| `-NonNullAttr 0x561c301b16f0 <col:52, col:66> 1
|-FunctionDecl 0x561c301b17f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561c301b1738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561c301b1898 <line:559:19>
| `-NonNullAttr 0x561c301b18f0 <col:49, col:63> 1
|-FunctionDecl 0x561c301b1b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561c301b1938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561c301b19c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561c301b1bd8 <col:39>
| `-NonNullAttr 0x561c301b1c30 <col:69, col:86> 1 2
|-FunctionDecl 0x561c301b1d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561c301b1c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561c301b1dd8 <line:564:22>
| `-NonNullAttr 0x561c301b1e30 <col:52, col:66> 1
|-FunctionDecl 0x561c301b1f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561c301b1ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561c301b2040 <line:566:22>
| `-NonNullAttr 0x561c301b2098 <col:52, col:66> 1
|-FunctionDecl 0x561c301b2258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561c301b20e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561c301b2178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561c301b2308 <col:39>
| `-NonNullAttr 0x561c301b2360 <col:69, col:86> 1 2
|-FunctionDecl 0x561c301b2460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561c301b23a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561c301b2508 <line:571:22>
| `-NonNullAttr 0x561c301b2560 <col:52, col:66> 1
|-FunctionDecl 0x561c301b2748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x561c301b2610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x561c301b27f0 <line:573:22>
| `-NonNullAttr 0x561c301b2848 <col:63, col:77> 1
|-FunctionDecl 0x561c301b2950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x561c301b2898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x561c301b29f8 <line:575:22>
| `-NonNullAttr 0x561c301b2a50 <col:63, col:77> 1
|-FunctionDecl 0x561c301b2c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561c301b2a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x561c301b2b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x561c301b2d28 <line:579:22>
| `-NonNullAttr 0x561c301b2d80 <col:63, col:80> 1 2
|-FunctionDecl 0x561c301b2fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x561c301b2dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x561c301b2e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x561c301b3058 <line:582:22>
| `-NonNullAttr 0x561c301b30b0 <col:63, col:77> 1
|-FunctionDecl 0x561c301b3258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561c301b30f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x561c301b3178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x561c301b3308 <line:586:22>
| `-NonNullAttr 0x561c301b3360 <col:63, col:80> 1 2
|-FunctionDecl 0x561c301b34e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x561c301b33a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x561c301b3428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x561c301b3598 <col:36>
| `-NonNullAttr 0x561c301b35f0 <col:77, col:91> 1
|-FunctionDecl 0x561c301b3928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x561c301b36d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561c301b37e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x561c301b39d8 <line:591:22>
| `-NonNullAttr 0x561c301b3a30 <col:63, col:77> 1
|-FunctionDecl 0x561c301b3ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561c301b3a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561c301b3c50 <line:593:22>
| `-NonNullAttr 0x561c301b3ca8 <col:63, col:77> 1
|-FunctionDecl 0x561c301b3db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561c301b3cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561c301b3e58 <line:595:22>
| `-NonNullAttr 0x561c301b3eb0 <col:52, col:66> 1
|-FunctionDecl 0x561c301b3fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561c301b3f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561c301b4070 <line:597:22>
| `-NonNullAttr 0x561c301b40c8 <col:52, col:66> 1
|-FunctionDecl 0x561c301b42f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x561c301b4118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561c301b4190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x561c301b43a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x561c301b46d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561c301b4428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561c301b44a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561c301b4530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x561c301b4790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x561c301b49a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x561c301b4870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x561c301b4a50 <line:606:22>
| `-NonNullAttr 0x561c301b4aa8 <col:63, col:77> 1
|-FunctionDecl 0x561c301b4bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x561c301b4af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x561c301b4c58 <line:608:22>
| `-NonNullAttr 0x561c301b4cb0 <col:63, col:77> 1
|-FunctionDecl 0x561c301b4f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561c301b4cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x561c301b4d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x561c301b4fc0 <line:612:22>
| `-NonNullAttr 0x561c301b5018 <col:63, col:80> 1 2
|-FunctionDecl 0x561c301b5228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x561c301b5068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x561c301b50e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x561c301b52d8 <col:37>
| `-NonNullAttr 0x561c301b5330 <col:78, col:92> 1
|-FunctionDecl 0x561c301b5548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x561c301b5378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x561c301b5420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x561c301b55f8 <line:618:22>
| `-NonNullAttr 0x561c301b5650 <col:63, col:80> 1 2
|-FunctionDecl 0x561c301b5818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x561c301b5698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x561c301b5710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x561c301b58c8 <line:621:22>
| `-NonNullAttr 0x561c301b5920 <col:63, col:77> 1
|-FunctionDecl 0x561c301b5bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x561c301b5a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x561c301b5a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x561c301b5c78 <line:623:22>
| `-NonNullAttr 0x561c301b5cd0 <col:63, col:77> 1
|-FunctionDecl 0x561c301b5e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561c301b5d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561c301b5f20 <line:625:22>
| `-NonNullAttr 0x561c301b5f78 <col:63, col:77> 1
|-FunctionDecl 0x561c301b6080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561c301b5fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561c301b6128 <line:627:22>
| `-NonNullAttr 0x561c301b6180 <col:52, col:66> 1
|-FunctionDecl 0x561c301b6280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561c301b61c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561c301b6328 <line:629:22>
| `-NonNullAttr 0x561c301b6380 <col:52, col:66> 1
|-FunctionDecl 0x561c301b6480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561c301b63c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561c301b6528 <line:631:22>
| `-NonNullAttr 0x561c301b6580 <col:52, col:66> 1
|-FunctionDecl 0x561c301b6958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x561c301b6660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x561c301b6770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x561c301b67f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x561c301b6a10 <line:635:22>
| `-NonNullAttr 0x561c301b6a68 <col:63, col:77> 1
|-FunctionDecl 0x561c301b6be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x561c301b6ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x561c301b6c90 <line:637:22>
| `-NonNullAttr 0x561c301b6ce8 <col:63, col:77> 1
|-FunctionDecl 0x561c301b6df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x561c301b6d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x561c301b6e98 <line:639:22>
| `-NonNullAttr 0x561c301b6ef0 <col:52, col:66> 1
|-FunctionDecl 0x561c301b70e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x561c301b6fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x561c301b7190 <line:641:22>
| `-NonNullAttr 0x561c301b71e8 <col:63, col:77> 1
|-FunctionDecl 0x561c301b72f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x561c301b7238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x561c301b7398 <line:643:22>
| `-NonNullAttr 0x561c301b73f0 <col:63, col:77> 1
|-FunctionDecl 0x561c301b7618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561c301b7438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x561c301b74b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x561c301b76c8 <line:647:22>
| `-NonNullAttr 0x561c301b7720 <col:63, col:80> 1 2
|-FunctionDecl 0x561c301b7928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x561c301b7768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x561c301b77e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x561c301b79d8 <line:650:22>
| `-NonNullAttr 0x561c301b7a30 <col:63, col:77> 1
|-FunctionDecl 0x561c301b7d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x561c301b7b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x561c301b7c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x561c301b7e28 <line:653:22>
| `-NonNullAttr 0x561c301b7e80 <col:63, col:77> 1
|-FunctionDecl 0x561c301b7fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x561c301b7ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x561c301b8090 <col:69>
|-FunctionDecl 0x561c301b8208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x561c301b80f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x561c301b82b0 <col:72>
|-FunctionDecl 0x561c301b84e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x561c301b8318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x561c301b83c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x561c301b8598 <col:44>
|-FunctionDecl 0x561c301b87b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x561c301b8600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561c301b8678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x561c301b8868 <line:660:22>
| `-NonNullAttr 0x561c301b88c0 <col:63, col:77> 2
|-FunctionDecl 0x561c301b8d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x561c301b89a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x561c301b8ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x561c301b8bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x561c301b8dc0 <col:47>
|-FunctionDecl 0x561c301b9f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x561c301b8e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561c301ba0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x561c301ba020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561c301ba210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x561c301ba178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561c301ba368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x561c301ba2d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561c301ba430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x561c301ba4f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x561c301ba5b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x561c301ba668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x561c301ba6e8 prev 0x561c301ba668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x561c301ba750 <col:24> 'int' 0
|-VarDecl 0x561c301ba788 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x561c301ba808 prev 0x561c301ba788 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x561c301ba870 <col:27> 'int' 0
|-VarDecl 0x561c301ba8a8 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x561c301ba928 prev 0x561c301ba8a8 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x561c301ba990 <col:27> 'int' 0
|-VarDecl 0x561c301ba9c8 <line:678:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x561c301baa48 prev 0x561c301ba9c8 <line:679:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x561c301baab0 <col:27> 'int' 0
|-VarDecl 0x561c301baae8 <line:680:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x561c301bab68 prev 0x561c301baae8 <line:681:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x561c301babd0 <col:27> 'int' 0
|-VarDecl 0x561c301bac08 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x561c301bac88 prev 0x561c301bac08 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x561c301bacf0 <col:9> 'int' 0
|-VarDecl 0x561c301bad20 <line:684:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x561c301bada0 <line:685:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x561c301bae18 <line:686:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x561c301bae90 <line:687:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x561c301baf70 <line:688:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x561c301bafe8 <line:689:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x561c301bb060 <line:690:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x561c301bb0d8 <line:691:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x561c301bb150 <line:692:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x561c301bb1c8 <line:693:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x561c301bb240 <line:694:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x561c301bb2b8 <line:695:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x561c301bb330 <line:696:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x561c301bb3b0 <line:697:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x561c301bb430 <line:698:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x561c301bb4a8 <line:699:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x561c301bb528 <line:700:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x561c301bb5a0 <line:701:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x561c301bb618 <line:702:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x561c301bb690 <line:703:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x561c301bb710 <line:704:1, col:5> col:5 used x 'int'
|-VarDecl 0x561c301bb790 prev 0x561c301bb710 <line:705:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x561c301bb7f8 <col:9> 'int' 0
|-VarDecl 0x561c301bb830 <line:706:1, col:5> col:5 used y 'int'
|-VarDecl 0x561c301bb8b0 prev 0x561c301bb830 <line:707:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x561c301bb918 <col:9> 'int' 0
|-VarDecl 0x561c301bb950 <line:708:1, col:5> col:5 used z 'int'
|-VarDecl 0x561c301bb9d0 prev 0x561c301bb950 <line:709:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x561c301bba38 <col:9> 'int' 0
|-VarDecl 0x561c301bba68 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x561c301bbae0 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x561c301bbbf8 prev 0x561c301b9f60 <line:712:1, line:741:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x561c301bbb60 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561c301bd4b8 <line:713:1, line:741:1>
|   |-CallExpr 0x561c301bbd08 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561c301bbcf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301bbca0 <col:3> 'void ()' Function 0x561c30161350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561c301bbd80 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561c301bbd28 <col:3> 'int' lvalue Var 0x561c301bb528 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x561c301bbd68 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561c301bbd48 <col:15> 'int' lvalue Var 0x561c301bb430 'a$w_buff0' 'int'
|   |-BinaryOperator 0x561c301bbde0 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561c301bbda0 <col:3> 'int' lvalue Var 0x561c301bb430 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x561c301bbdc0 <col:15> 'int' 1
|   |-BinaryOperator 0x561c301bbe58 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561c301bbe00 <col:3> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561c301bbe40 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561c301bbe20 <col:20> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561c301bbef0 <line:718:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x561c301bbe78 <col:3> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x561c301bbec8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561c301bbe98 <col:27> 'int' 1
|   |-CallExpr 0x561c301bc088 <line:719:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x561c301bc070 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x561c301bbf10 <col:3> 'void (int)' Function 0x561c301610d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x561c301bc020 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x561c301bc000 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x561c301bbfe0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x561c301bbf98 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x561c301bbf80 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x561c301bbf30 <col:23> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x561c301bbfc8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x561c301bbfb0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x561c301bbf50 <col:41> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561c301bc108 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561c301bc0b0 <col:3> '_Bool' lvalue Var 0x561c301bb0d8 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x561c301bc0f0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561c301bc0d0 <col:20> '_Bool' lvalue Var 0x561c301bae18 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x561c301bc180 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561c301bc128 <col:3> '_Bool' lvalue Var 0x561c301bb150 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561c301bc168 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561c301bc148 <col:20> '_Bool' lvalue Var 0x561c301bae90 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x561c301bc1f8 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561c301bc1a0 <col:3> '_Bool' lvalue Var 0x561c301bb1c8 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561c301bc1e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561c301bc1c0 <col:20> '_Bool' lvalue Var 0x561c301baf70 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x561c301bc270 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561c301bc218 <col:3> '_Bool' lvalue Var 0x561c301bb240 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561c301bc258 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561c301bc238 <col:20> '_Bool' lvalue Var 0x561c301bafe8 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x561c301bc2e8 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561c301bc290 <col:3> '_Bool' lvalue Var 0x561c301bb2b8 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x561c301bc2d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561c301bc2b0 <col:20> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x561c301bc380 <line:725:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x561c301bc308 <col:3> '_Bool' lvalue Var 0x561c301bae90 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x561c301bc358 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561c301bc328 <col:27> 'int' 1
|   |-CallExpr 0x561c301bc3d8 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561c301bc3c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301bc3a0 <col:3> 'void ()' Function 0x561c30161410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561c301bc430 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561c301bc418 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301bc3f8 <col:3> 'void ()' Function 0x561c30161350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561c301bc4a8 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561c301bc450 <col:3> 'int' lvalue Var 0x561c301ba808 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x561c301bc490 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561c301bc470 <col:25> 'int' lvalue Var 0x561c301bb790 'x' 'int'
|   |-CallExpr 0x561c301bc500 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561c301bc4e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301bc4c8 <col:3> 'void ()' Function 0x561c30161410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561c301bc558 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561c301bc540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301bc520 <col:3> 'void ()' Function 0x561c30161350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561c301bc840 <line:731:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561c301bc578 <col:3> 'int' lvalue Var 0x561c301bac88 'a' 'int'
|   | `-ConditionalOperator 0x561c301bc810 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561c301bc638 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561c301bc5f0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561c301bc5d8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561c301bc598 <col:7> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561c301bc620 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561c301bc608 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561c301bc5b8 <col:25> '_Bool' lvalue Var 0x561c301bae90 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x561c301bc7f8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561c301bc658 <col:42> 'int' lvalue Var 0x561c301bb430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x561c301bc7d8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561c301bc7a8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561c301bc718 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561c301bc6d0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561c301bc6b8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561c301bc678 <col:55> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561c301bc700 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561c301bc6e8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561c301bc698 <col:73> '_Bool' lvalue Var 0x561c301bb150 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x561c301bc778 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561c301bc738 <col:90> 'int' lvalue Var 0x561c301bb528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561c301bc790 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561c301bc758 <col:102> 'int' lvalue Var 0x561c301bac88 'a' 'int'
|   |-BinaryOperator 0x561c301bca48 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561c301bc860 <col:3> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561c301bca30 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561c301bca00 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561c301bc920 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561c301bc8d8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561c301bc8c0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561c301bc880 <col:20> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561c301bc908 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561c301bc8f0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561c301bc8a0 <col:38> '_Bool' lvalue Var 0x561c301bae90 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561c301bc9b8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561c301bc970 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561c301bc940 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561c301bc9e8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561c301bc9d0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561c301bc998 <col:66> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561c301bcd30 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561c301bca68 <col:3> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561c301bcd18 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561c301bcce8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561c301bcc08 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561c301bcb28 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561c301bcae0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561c301bcac8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561c301bca88 <col:20> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561c301bcb10 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561c301bcaf8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561c301bcaa8 <col:38> '_Bool' lvalue Var 0x561c301bae90 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x561c301bcbe8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561c301bcba0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561c301bcb88 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561c301bcb48 <col:56> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561c301bcbd0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561c301bcbb8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561c301bcb68 <col:74> '_Bool' lvalue Var 0x561c301bb150 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561c301bcca0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561c301bcc58 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561c301bcc28 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561c301bccd0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561c301bccb8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561c301bcc80 <col:102> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561c301bcf38 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561c301bcd50 <col:3> '_Bool' lvalue Var 0x561c301bae90 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561c301bcf20 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561c301bcef0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561c301bce10 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561c301bcdc8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561c301bcdb0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561c301bcd70 <col:20> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561c301bcdf8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561c301bcde0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561c301bcd90 <col:38> '_Bool' lvalue Var 0x561c301bae90 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561c301bcea8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561c301bce60 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561c301bce30 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561c301bced8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561c301bcec0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561c301bce88 <col:66> '_Bool' lvalue Var 0x561c301bae90 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x561c301bd238 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561c301bcf58 <col:3> '_Bool' lvalue Var 0x561c301bb150 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561c301bd220 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561c301bd1f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561c301bd110 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561c301bd030 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561c301bcfe8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561c301bcfd0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561c301bcf90 <col:20> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561c301bd018 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561c301bd000 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561c301bcfb0 <col:38> '_Bool' lvalue Var 0x561c301bae90 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x561c301bd0f0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561c301bd0a8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561c301bd090 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561c301bd050 <col:56> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561c301bd0d8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561c301bd0c0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561c301bd070 <col:74> '_Bool' lvalue Var 0x561c301bb150 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561c301bd1a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561c301bd160 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561c301bd130 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561c301bd1d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561c301bd1c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561c301bd188 <col:102> '_Bool' lvalue Var 0x561c301bb150 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x561c301bd290 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561c301bd278 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301bd258 <col:3> 'void ()' Function 0x561c30161410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561c301bd2e8 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561c301bd2d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301bd2b0 <col:3> 'void ()' Function 0x561c30161350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561c301bd3a0 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561c301bd308 <col:3> 'int' lvalue Var 0x561c301ba6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561c301bd380 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561c301bd368 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561c301bd328 <col:22> 'int' lvalue Var 0x561c301ba6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561c301bd348 <col:41> 'int' 1
|   |-CallExpr 0x561c301bd3f8 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561c301bd3e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301bd3c0 <col:3> 'void ()' Function 0x561c30161410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561c301bd4a8 <line:740:3, col:36>
|     `-CallExpr 0x561c301bd488 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561c301bd470 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561c301bd418 <col:10> 'void *(void)' Function 0x561c30160e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561c301bd650 prev 0x561c301ba0b8 <line:742:1, line:761:1> line:742:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x561c301bd5b8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561c301be8a0 <line:743:1, line:761:1>
|   |-CallExpr 0x561c301bd730 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561c301bd718 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301bd6f8 <col:3> 'void ()' Function 0x561c30161350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561c301bd790 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561c301bd750 <col:3> 'int' lvalue Var 0x561c301bb790 'x' 'int'
|   | `-IntegerLiteral 0x561c301bd770 <col:7> 'int' 1
|   |-CallExpr 0x561c301bd7e8 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561c301bd7d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301bd7b0 <col:3> 'void ()' Function 0x561c30161410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561c301bd840 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561c301bd828 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301bd808 <col:3> 'void ()' Function 0x561c30161350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561c301bd8b8 <line:748:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561c301bd860 <col:3> 'int' lvalue Var 0x561c301ba928 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x561c301bd8a0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561c301bd880 <col:25> 'int' lvalue Var 0x561c301bb8b0 'y' 'int'
|   |-CallExpr 0x561c301bd910 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561c301bd8f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301bd8d8 <col:3> 'void ()' Function 0x561c30161410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561c301bd968 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561c301bd950 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301bd930 <col:3> 'void ()' Function 0x561c30161350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561c301bdc50 <line:751:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561c301bd988 <col:3> 'int' lvalue Var 0x561c301bac88 'a' 'int'
|   | `-ConditionalOperator 0x561c301bdc20 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561c301bda48 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561c301bda00 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561c301bd9e8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561c301bd9a8 <col:7> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561c301bda30 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561c301bda18 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561c301bd9c8 <col:25> '_Bool' lvalue Var 0x561c301baf70 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x561c301bdc08 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561c301bda68 <col:42> 'int' lvalue Var 0x561c301bb430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x561c301bdbe8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561c301bdbb8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561c301bdb28 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561c301bdae0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561c301bdac8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561c301bda88 <col:55> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561c301bdb10 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561c301bdaf8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561c301bdaa8 <col:73> '_Bool' lvalue Var 0x561c301bb1c8 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x561c301bdb88 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561c301bdb48 <col:90> 'int' lvalue Var 0x561c301bb528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561c301bdba0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561c301bdb68 <col:102> 'int' lvalue Var 0x561c301bac88 'a' 'int'
|   |-BinaryOperator 0x561c301bde58 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561c301bdc70 <col:3> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561c301bde40 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561c301bde10 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561c301bdd30 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561c301bdce8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561c301bdcd0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561c301bdc90 <col:20> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561c301bdd18 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561c301bdd00 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561c301bdcb0 <col:38> '_Bool' lvalue Var 0x561c301baf70 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561c301bddc8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561c301bdd80 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561c301bdd50 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561c301bddf8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561c301bdde0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561c301bdda8 <col:66> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561c301be168 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561c301bde78 <col:3> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561c301be150 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561c301be120 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561c301be040 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561c301bdf38 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561c301bdef0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561c301bded8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561c301bde98 <col:20> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561c301bdf20 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561c301bdf08 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561c301bdeb8 <col:38> '_Bool' lvalue Var 0x561c301baf70 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x561c301be020 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561c301bdfd8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561c301bdfc0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561c301bdf58 <col:56> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561c301be008 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561c301bdff0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561c301bdfa0 <col:74> '_Bool' lvalue Var 0x561c301bb1c8 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561c301be0d8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561c301be090 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561c301be060 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561c301be108 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561c301be0f0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561c301be0b8 <col:102> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561c301be370 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561c301be188 <col:3> '_Bool' lvalue Var 0x561c301baf70 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561c301be358 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561c301be328 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561c301be248 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561c301be200 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561c301be1e8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561c301be1a8 <col:20> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561c301be230 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561c301be218 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561c301be1c8 <col:38> '_Bool' lvalue Var 0x561c301baf70 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561c301be2e0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561c301be298 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561c301be268 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561c301be310 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561c301be2f8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561c301be2c0 <col:66> '_Bool' lvalue Var 0x561c301baf70 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x561c301be658 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561c301be390 <col:3> '_Bool' lvalue Var 0x561c301bb1c8 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561c301be640 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561c301be610 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561c301be530 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561c301be450 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561c301be408 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561c301be3f0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561c301be3b0 <col:20> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561c301be438 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561c301be420 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561c301be3d0 <col:38> '_Bool' lvalue Var 0x561c301baf70 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x561c301be510 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561c301be4c8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561c301be4b0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561c301be470 <col:56> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561c301be4f8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561c301be4e0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561c301be490 <col:74> '_Bool' lvalue Var 0x561c301bb1c8 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561c301be5c8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561c301be580 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561c301be550 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561c301be5f8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561c301be5e0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561c301be5a8 <col:102> '_Bool' lvalue Var 0x561c301bb1c8 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x561c301be6b0 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561c301be698 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301be678 <col:3> 'void ()' Function 0x561c30161410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561c301be708 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561c301be6f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301be6d0 <col:3> 'void ()' Function 0x561c30161350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561c301be7c0 <line:758:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561c301be728 <col:3> 'int' lvalue Var 0x561c301ba6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561c301be7a0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561c301be788 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561c301be748 <col:22> 'int' lvalue Var 0x561c301ba6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561c301be768 <col:41> 'int' 1
|   |-CallExpr 0x561c301be818 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561c301be800 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301be7e0 <col:3> 'void ()' Function 0x561c30161410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561c301be890 <line:760:3, col:36>
|     `-CallExpr 0x561c301be870 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561c301be858 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561c301be838 <col:10> 'void *(void)' Function 0x561c30160e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561c301be9e8 prev 0x561c301ba210 <line:762:1, line:781:1> line:762:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x561c301be950 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561c301bfc08 <line:763:1, line:781:1>
|   |-CallExpr 0x561c301beac8 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561c301beab0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301bea90 <col:3> 'void ()' Function 0x561c30161350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561c301beb28 <line:765:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561c301beae8 <col:3> 'int' lvalue Var 0x561c301bb8b0 'y' 'int'
|   | `-IntegerLiteral 0x561c301beb08 <col:7> 'int' 1
|   |-CallExpr 0x561c301beb80 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561c301beb68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301beb48 <col:3> 'void ()' Function 0x561c30161410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561c301bebd8 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561c301bebc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301beba0 <col:3> 'void ()' Function 0x561c30161350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561c301bec38 <line:768:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561c301bebf8 <col:3> 'int' lvalue Var 0x561c301bb9d0 'z' 'int'
|   | `-IntegerLiteral 0x561c301bec18 <col:7> 'int' 1
|   |-CallExpr 0x561c301bec90 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561c301bec78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301bec58 <col:3> 'void ()' Function 0x561c30161410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561c301bece8 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561c301becd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301becb0 <col:3> 'void ()' Function 0x561c30161350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561c301befe0 <line:771:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561c301bed08 <col:3> 'int' lvalue Var 0x561c301bac88 'a' 'int'
|   | `-ConditionalOperator 0x561c301befb0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561c301bedc8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561c301bed80 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561c301bed68 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561c301bed28 <col:7> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561c301bedb0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561c301bed98 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561c301bed48 <col:25> '_Bool' lvalue Var 0x561c301bafe8 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x561c301bef88 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561c301bede8 <col:42> 'int' lvalue Var 0x561c301bb430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x561c301bef68 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561c301bef38 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561c301beea8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561c301bee60 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561c301bee48 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561c301bee08 <col:55> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561c301bee90 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561c301bee78 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561c301bee28 <col:73> '_Bool' lvalue Var 0x561c301bb240 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x561c301bef08 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561c301beec8 <col:90> 'int' lvalue Var 0x561c301bb528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561c301bef20 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561c301beee8 <col:102> 'int' lvalue Var 0x561c301bac88 'a' 'int'
|   |-BinaryOperator 0x561c301bf1e8 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561c301bf000 <col:3> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561c301bf1d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561c301bf1a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561c301bf0c0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561c301bf078 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561c301bf060 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561c301bf020 <col:20> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561c301bf0a8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561c301bf090 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561c301bf040 <col:38> '_Bool' lvalue Var 0x561c301bafe8 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561c301bf158 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561c301bf110 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561c301bf0e0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561c301bf188 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561c301bf170 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561c301bf138 <col:66> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561c301bf4d0 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561c301bf208 <col:3> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561c301bf4b8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561c301bf488 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561c301bf3a8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561c301bf2c8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561c301bf280 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561c301bf268 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561c301bf228 <col:20> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561c301bf2b0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561c301bf298 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561c301bf248 <col:38> '_Bool' lvalue Var 0x561c301bafe8 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x561c301bf388 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561c301bf340 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561c301bf328 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561c301bf2e8 <col:56> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561c301bf370 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561c301bf358 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561c301bf308 <col:74> '_Bool' lvalue Var 0x561c301bb240 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561c301bf440 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561c301bf3f8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561c301bf3c8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561c301bf470 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561c301bf458 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561c301bf420 <col:102> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561c301bf6d8 <line:774:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561c301bf4f0 <col:3> '_Bool' lvalue Var 0x561c301bafe8 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561c301bf6c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561c301bf690 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561c301bf5b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561c301bf568 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561c301bf550 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561c301bf510 <col:20> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561c301bf598 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561c301bf580 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561c301bf530 <col:38> '_Bool' lvalue Var 0x561c301bafe8 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561c301bf648 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561c301bf600 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561c301bf5d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561c301bf678 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561c301bf660 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561c301bf628 <col:66> '_Bool' lvalue Var 0x561c301bafe8 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x561c301bf9c0 <line:775:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561c301bf6f8 <col:3> '_Bool' lvalue Var 0x561c301bb240 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561c301bf9a8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561c301bf978 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561c301bf898 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561c301bf7b8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561c301bf770 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561c301bf758 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561c301bf718 <col:20> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561c301bf7a0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561c301bf788 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561c301bf738 <col:38> '_Bool' lvalue Var 0x561c301bafe8 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x561c301bf878 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561c301bf830 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561c301bf818 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561c301bf7d8 <col:56> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561c301bf860 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561c301bf848 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561c301bf7f8 <col:74> '_Bool' lvalue Var 0x561c301bb240 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561c301bf930 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561c301bf8e8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561c301bf8b8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561c301bf960 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561c301bf948 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561c301bf910 <col:102> '_Bool' lvalue Var 0x561c301bb240 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x561c301bfa18 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561c301bfa00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301bf9e0 <col:3> 'void ()' Function 0x561c30161410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561c301bfa70 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561c301bfa58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301bfa38 <col:3> 'void ()' Function 0x561c30161350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561c301bfb28 <line:778:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561c301bfa90 <col:3> 'int' lvalue Var 0x561c301ba6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561c301bfb08 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561c301bfaf0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561c301bfab0 <col:22> 'int' lvalue Var 0x561c301ba6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561c301bfad0 <col:41> 'int' 1
|   |-CallExpr 0x561c301bfb80 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561c301bfb68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301bfb48 <col:3> 'void ()' Function 0x561c30161410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561c301bfbf8 <line:780:3, col:36>
|     `-CallExpr 0x561c301bfbd8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561c301bfbc0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561c301bfba0 <col:10> 'void *(void)' Function 0x561c30160e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561c301bfd50 prev 0x561c301ba368 <line:782:1, line:817:1> line:782:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x561c301bfcb8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561c301c3a58 <line:783:1, line:817:1>
|   |-CallExpr 0x561c301bfe30 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561c301bfe18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301bfdf8 <col:3> 'void ()' Function 0x561c30161350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561c301bfe90 <line:785:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561c301bfe50 <col:3> 'int' lvalue Var 0x561c301bb9d0 'z' 'int'
|   | `-IntegerLiteral 0x561c301bfe70 <col:7> 'int' 2
|   |-CallExpr 0x561c301bfee8 <line:786:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561c301bfed0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301bfeb0 <col:3> 'void ()' Function 0x561c30161410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561c301bff40 <line:787:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561c301bff28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301bff08 <col:3> 'void ()' Function 0x561c30161350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561c301bffd8 <line:788:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561c301bff60 <col:3> 'int' lvalue Var 0x561c301baa48 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x561c301bffc0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561c301bff80 <col:25> 'int' lvalue Var 0x561c301bb9d0 'z' 'int'
|   |-CallExpr 0x561c301c0030 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561c301c0018 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301bfff8 <col:3> 'void ()' Function 0x561c30161410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561c301c0088 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561c301c0070 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301c0050 <col:3> 'void ()' Function 0x561c30161350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561c301c0138 <line:791:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x561c301c00a8 <col:3> '_Bool' lvalue Var 0x561c301bba68 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x561c301c0120 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x561c301c0100 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x561c301c00e8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x561c301c00c8 <col:19> 'void *(void)' Function 0x561c30160e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x561c301c01e8 <line:792:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x561c301c0158 <col:3> '_Bool' lvalue Var 0x561c301bbae0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x561c301c01d0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x561c301c01b0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x561c301c0198 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x561c301c0178 <col:19> 'void *(void)' Function 0x561c30160e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x561c301c0260 <line:793:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x561c301c0208 <col:3> '_Bool' lvalue Var 0x561c301bad20 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x561c301c0248 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561c301c0228 <col:21> '_Bool' lvalue Var 0x561c301bbae0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x561c301c02d8 <line:794:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561c301c0280 <col:3> 'int' lvalue Var 0x561c301bada0 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x561c301c02c0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561c301c02a0 <col:15> 'int' lvalue Var 0x561c301bac88 'a' 'int'
|   |-BinaryOperator 0x561c301c0710 <line:795:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x561c301c02f8 <col:3> 'int' lvalue Var 0x561c301bac88 'a' 'int'
|   | `-ConditionalOperator 0x561c301c06e0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x561c301c0508 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x561c301c0428 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x561c301c0350 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x561c301c0338 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x561c301c0318 <col:8> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x561c301c0408 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x561c301c03a0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x561c301c0388 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x561c301c0368 <col:27> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x561c301c03f0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x561c301c03d8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x561c301c03b8 <col:46> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x561c301c04e8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x561c301c0480 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x561c301c0468 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x561c301c0448 <col:65> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x561c301c04d0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x561c301c04b8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x561c301c0498 <col:84> '_Bool' lvalue Var 0x561c301bb2b8 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x561c301c06c8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561c301c0528 <col:101> 'int' lvalue Var 0x561c301bac88 'a' 'int'
|   |   `-ParenExpr 0x561c301c06a8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x561c301c0678 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x561c301c05e8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561c301c05a0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561c301c0588 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561c301c0548 <col:106> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561c301c05d0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561c301c05b8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561c301c0568 <col:124> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x561c301c0648 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561c301c0608 <col:141> 'int' lvalue Var 0x561c301bb430 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x561c301c0660 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561c301c0628 <col:153> 'int' lvalue Var 0x561c301bb528 'a$w_buff1' 'int'
|   |-BinaryOperator 0x561c301c0c20 <line:796:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x561c301c0730 <col:3> 'int' lvalue Var 0x561c301bb430 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x561c301c0bf0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x561c301c0bc0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561c301c0ba8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561c301c0750 <col:15> '_Bool' lvalue Var 0x561c301bbae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x561c301c0bd8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561c301c0770 <col:31> 'int' lvalue Var 0x561c301bb430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x561c301c0b88 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x561c301c0b58 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x561c301c0980 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x561c301c08a0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x561c301c07c8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x561c301c07b0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x561c301c0790 <col:45> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x561c301c0880 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x561c301c0818 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x561c301c0800 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x561c301c07e0 <col:64> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x561c301c0868 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x561c301c0850 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x561c301c0830 <col:83> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x561c301c0960 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x561c301c08f8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x561c301c08e0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x561c301c08c0 <col:102> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x561c301c0948 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x561c301c0930 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x561c301c0910 <col:121> '_Bool' lvalue Var 0x561c301bb2b8 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x561c301c0b40 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561c301c09a0 <col:138> 'int' lvalue Var 0x561c301bb430 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x561c301c0b20 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x561c301c0af0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x561c301c0a60 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x561c301c0a18 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x561c301c0a00 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x561c301c09c0 <col:151> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x561c301c0a48 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x561c301c0a30 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x561c301c09e0 <col:169> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x561c301c0ac0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x561c301c0a80 <col:186> 'int' lvalue Var 0x561c301bb430 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x561c301c0ad8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x561c301c0aa0 <col:198> 'int' lvalue Var 0x561c301bb430 'a$w_buff0' 'int'
|   |-BinaryOperator 0x561c301c1150 <line:797:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x561c301c0c40 <col:3> 'int' lvalue Var 0x561c301bb528 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x561c301c1120 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x561c301c10f0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561c301c10d8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561c301c0c60 <col:15> '_Bool' lvalue Var 0x561c301bbae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x561c301c1108 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561c301c0c80 <col:31> 'int' lvalue Var 0x561c301bb528 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x561c301c10b8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x561c301c1088 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x561c301c0e90 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x561c301c0db0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x561c301c0cd8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x561c301c0cc0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x561c301c0ca0 <col:45> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x561c301c0d90 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x561c301c0d28 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x561c301c0d10 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x561c301c0cf0 <col:64> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x561c301c0d78 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x561c301c0d60 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x561c301c0d40 <col:83> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x561c301c0e70 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x561c301c0e08 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x561c301c0df0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x561c301c0dd0 <col:102> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x561c301c0e58 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x561c301c0e40 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x561c301c0e20 <col:121> '_Bool' lvalue Var 0x561c301bb2b8 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x561c301c1070 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561c301c0eb0 <col:138> 'int' lvalue Var 0x561c301bb528 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x561c301c1050 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x561c301c1020 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x561c301c0f70 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x561c301c0f28 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x561c301c0f10 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x561c301c0ed0 <col:151> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x561c301c0f58 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x561c301c0f40 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x561c301c0ef0 <col:169> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x561c301c0ff0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x561c301c0f90 <col:186> 'int' lvalue Var 0x561c301bb528 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x561c301c1008 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x561c301c0fd0 <col:198> 'int' lvalue Var 0x561c301bb528 'a$w_buff1' 'int'
|   |-BinaryOperator 0x561c301c16f8 <line:798:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x561c301c1170 <col:3> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561c301c16e0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561c301c16b0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x561c301c1668 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561c301c1650 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561c301c1190 <col:20> '_Bool' lvalue Var 0x561c301bbae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561c301c1698 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561c301c1680 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561c301c11b0 <col:36> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x561c301c1630 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x561c301c1600 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x561c301c13c0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561c301c12e0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561c301c1208 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561c301c11f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561c301c11d0 <col:55> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561c301c12c0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561c301c1258 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561c301c1240 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561c301c1220 <col:74> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x561c301c12a8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561c301c1290 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561c301c1270 <col:93> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561c301c13a0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561c301c1338 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561c301c1320 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561c301c1300 <col:112> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x561c301c1388 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561c301c1370 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561c301c1350 <col:131> '_Bool' lvalue Var 0x561c301bb2b8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x561c301c15e8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561c301c15d0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561c301c13e0 <col:148> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x561c301c15b0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x561c301c1580 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x561c301c14a0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561c301c1458 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561c301c1440 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561c301c1400 <col:166> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561c301c1488 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561c301c1470 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561c301c1420 <col:184> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x561c301c1538 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561c301c14f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561c301c14c0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561c301c1568 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x561c301c1550 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x561c301c1518 <col:212> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561c301c1cc0 <line:799:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x561c301c1718 <col:3> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561c301c1ca8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561c301c1c78 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x561c301c1c30 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561c301c1c18 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561c301c1738 <col:20> '_Bool' lvalue Var 0x561c301bbae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561c301c1c60 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561c301c1c48 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561c301c1758 <col:36> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x561c301c1bf8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x561c301c1bc8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x561c301c1968 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561c301c1888 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561c301c17b0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561c301c1798 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561c301c1778 <col:55> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561c301c1868 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561c301c1800 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561c301c17e8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561c301c17c8 <col:74> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x561c301c1850 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561c301c1838 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561c301c1818 <col:93> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561c301c1948 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561c301c18e0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561c301c18c8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561c301c18a8 <col:112> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x561c301c1930 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561c301c1918 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561c301c18f8 <col:131> '_Bool' lvalue Var 0x561c301bb2b8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x561c301c1bb0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561c301c1b98 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561c301c1988 <col:148> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x561c301c1b78 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x561c301c1b48 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x561c301c1a48 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561c301c1a00 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561c301c19e8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561c301c19a8 <col:166> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561c301c1a30 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561c301c1a18 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561c301c19c8 <col:184> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x561c301c1b18 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561c301c1a98 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561c301c1a68 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561c301c1b30 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x561c301c1af0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x561c301c1ac0 <col:219> 'int' 0
|   |-BinaryOperator 0x561c301c2280 <line:800:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x561c301c1ce0 <col:3> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x561c301c2268 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561c301c2238 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x561c301c21f0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561c301c21d8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561c301c1d00 <col:20> '_Bool' lvalue Var 0x561c301bbae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561c301c2220 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561c301c2208 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561c301c1d20 <col:36> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x561c301c21b8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x561c301c2188 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x561c301c1f30 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561c301c1e50 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561c301c1d78 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561c301c1d60 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561c301c1d40 <col:55> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561c301c1e30 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561c301c1dc8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561c301c1db0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561c301c1d90 <col:74> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x561c301c1e18 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561c301c1e00 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561c301c1de0 <col:93> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561c301c1f10 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561c301c1ea8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561c301c1e90 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561c301c1e70 <col:112> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x561c301c1ef8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561c301c1ee0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561c301c1ec0 <col:131> '_Bool' lvalue Var 0x561c301bb2b8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x561c301c2170 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561c301c2158 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561c301c1f50 <col:148> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x561c301c2138 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x561c301c2108 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x561c301c2028 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561c301c1fe0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561c301c1fb0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561c301c1f70 <col:166> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561c301c2010 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561c301c1ff8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561c301c1f90 <col:184> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x561c301c20c0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561c301c2078 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561c301c2048 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561c301c20f0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x561c301c20d8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x561c301c20a0 <col:212> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x561c301c2848 <line:801:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x561c301c22a0 <col:3> '_Bool' lvalue Var 0x561c301bb2b8 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x561c301c2830 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561c301c2800 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x561c301c27b8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561c301c27a0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561c301c22c0 <col:20> '_Bool' lvalue Var 0x561c301bbae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561c301c27e8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561c301c27d0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561c301c22e0 <col:36> '_Bool' lvalue Var 0x561c301bb2b8 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x561c301c2780 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x561c301c2750 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x561c301c24f0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561c301c2410 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561c301c2338 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561c301c2320 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561c301c2300 <col:55> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561c301c23f0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561c301c2388 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561c301c2370 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561c301c2350 <col:74> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x561c301c23d8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561c301c23c0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561c301c23a0 <col:93> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561c301c24d0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561c301c2468 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561c301c2450 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561c301c2430 <col:112> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x561c301c24b8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561c301c24a0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561c301c2480 <col:131> '_Bool' lvalue Var 0x561c301bb2b8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x561c301c2738 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561c301c2720 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561c301c2510 <col:148> '_Bool' lvalue Var 0x561c301bb2b8 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x561c301c2700 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x561c301c26d0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x561c301c25d0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561c301c2588 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561c301c2570 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561c301c2530 <col:166> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561c301c25b8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561c301c25a0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561c301c2550 <col:184> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x561c301c26a0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561c301c2620 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561c301c25f0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561c301c26b8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x561c301c2678 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x561c301c2648 <col:219> 'int' 0
|   |-BinaryOperator 0x561c301c28c0 <line:802:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561c301c2868 <col:3> 'int' lvalue Var 0x561c301bab68 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x561c301c28a8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561c301c2888 <col:25> 'int' lvalue Var 0x561c301bac88 'a' 'int'
|   |-BinaryOperator 0x561c301c29f0 <line:803:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x561c301c28e0 <col:3> 'int' lvalue Var 0x561c301bac88 'a' 'int'
|   | `-ConditionalOperator 0x561c301c29c0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x561c301c2978 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561c301c2960 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561c301c2900 <col:7> '_Bool' lvalue Var 0x561c301bad20 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x561c301c2990 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561c301c2920 <col:25> 'int' lvalue Var 0x561c301bada0 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x561c301c29a8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x561c301c2940 <col:37> 'int' lvalue Var 0x561c301bac88 'a' 'int'
|   |-BinaryOperator 0x561c301c2a88 <line:804:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x561c301c2a10 <col:3> '_Bool' lvalue Var 0x561c301bad20 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x561c301c2a60 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561c301c2a30 <col:28> 'int' 0
|   |-CallExpr 0x561c301c2ae0 <line:805:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561c301c2ac8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301c2aa8 <col:3> 'void ()' Function 0x561c30161410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561c301c2b38 <line:806:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561c301c2b20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301c2b00 <col:3> 'void ()' Function 0x561c30161350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561c301c2e20 <line:807:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561c301c2b58 <col:3> 'int' lvalue Var 0x561c301bac88 'a' 'int'
|   | `-ConditionalOperator 0x561c301c2df0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561c301c2c18 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561c301c2bd0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561c301c2bb8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561c301c2b78 <col:7> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561c301c2c00 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561c301c2be8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561c301c2b98 <col:25> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x561c301c2dd8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561c301c2c38 <col:42> 'int' lvalue Var 0x561c301bb430 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x561c301c2db8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561c301c2d88 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561c301c2cf8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561c301c2cb0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561c301c2c98 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561c301c2c58 <col:55> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561c301c2ce0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561c301c2cc8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561c301c2c78 <col:73> '_Bool' lvalue Var 0x561c301bb2b8 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x561c301c2d58 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561c301c2d18 <col:90> 'int' lvalue Var 0x561c301bb528 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561c301c2d70 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561c301c2d38 <col:102> 'int' lvalue Var 0x561c301bac88 'a' 'int'
|   |-BinaryOperator 0x561c301c3038 <line:808:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561c301c2e40 <col:3> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561c301c3020 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561c301c2ff0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561c301c2f00 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561c301c2eb8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561c301c2ea0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561c301c2e60 <col:20> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561c301c2ee8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561c301c2ed0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561c301c2e80 <col:38> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x561c301c2f98 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561c301c2f50 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561c301c2f20 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561c301c2fc8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561c301c2fb0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561c301c2f78 <col:66> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561c301c3320 <line:809:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561c301c3058 <col:3> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561c301c3308 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561c301c32d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561c301c31f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561c301c3118 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561c301c30d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561c301c30b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561c301c3078 <col:20> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561c301c3100 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561c301c30e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561c301c3098 <col:38> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x561c301c31d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561c301c3190 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561c301c3178 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561c301c3138 <col:56> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561c301c31c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561c301c31a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561c301c3158 <col:74> '_Bool' lvalue Var 0x561c301bb2b8 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x561c301c3290 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561c301c3248 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561c301c3218 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561c301c32c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561c301c32a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561c301c3270 <col:102> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561c301c3528 <line:810:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561c301c3340 <col:3> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x561c301c3510 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561c301c34e0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561c301c3400 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561c301c33b8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561c301c33a0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561c301c3360 <col:20> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561c301c33e8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561c301c33d0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561c301c3380 <col:38> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x561c301c3498 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561c301c3450 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561c301c3420 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561c301c34c8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561c301c34b0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561c301c3478 <col:66> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x561c301c3810 <line:811:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561c301c3548 <col:3> '_Bool' lvalue Var 0x561c301bb2b8 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x561c301c37f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561c301c37c8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561c301c36e8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561c301c3608 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561c301c35c0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561c301c35a8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561c301c3568 <col:20> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561c301c35f0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561c301c35d8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561c301c3588 <col:38> '_Bool' lvalue Var 0x561c301bb060 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x561c301c36c8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561c301c3680 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561c301c3668 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561c301c3628 <col:56> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561c301c36b0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561c301c3698 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561c301c3648 <col:74> '_Bool' lvalue Var 0x561c301bb2b8 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x561c301c3780 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561c301c3738 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561c301c3708 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561c301c37b0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561c301c3798 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561c301c3760 <col:102> '_Bool' lvalue Var 0x561c301bb2b8 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x561c301c3868 <line:812:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561c301c3850 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301c3830 <col:3> 'void ()' Function 0x561c30161410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561c301c38c0 <line:813:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561c301c38a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301c3888 <col:3> 'void ()' Function 0x561c30161350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561c301c3978 <line:814:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561c301c38e0 <col:3> 'int' lvalue Var 0x561c301ba6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561c301c3958 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561c301c3940 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561c301c3900 <col:22> 'int' lvalue Var 0x561c301ba6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561c301c3920 <col:41> 'int' 1
|   |-CallExpr 0x561c301c39d0 <line:815:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561c301c39b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561c301c3998 <col:3> 'void ()' Function 0x561c30161410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561c301c3a48 <line:816:3, col:36>
|     `-CallExpr 0x561c301c3a28 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561c301c3a10 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561c301c39f0 <col:10> 'void *(void)' Function 0x561c30160e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561c301c3b90 prev 0x561c301ba430 <line:818:1, line:820:1> line:818:6 fence 'void ()'
| `-CompoundStmt 0x561c301c3c30 <line:819:1, line:820:1>
|-FunctionDecl 0x561c301c3c60 prev 0x561c301ba4f0 <line:821:1, line:823:1> line:821:6 isync 'void ()'
| `-CompoundStmt 0x561c301c3d00 <line:822:1, line:823:1>
|-FunctionDecl 0x561c301c3d30 prev 0x561c301ba5b0 <line:824:1, line:826:1> line:824:6 lwfence 'void ()'
| `-CompoundStmt 0x561c301c3dd0 <line:825:1, line:826:1>
`-FunctionDecl 0x561c301c3e38 <line:827:1, line:853:1> line:827:5 main 'int ()'
  `-CompoundStmt 0x561c301c5e60 <line:828:1, line:853:1>
    |-DeclStmt 0x561c301c3f50 <line:829:3, col:17>
    | `-VarDecl 0x561c301c3ee8 <col:3, col:13> col:13 used t699 'pthread_t':'unsigned long'
    |-CallExpr 0x561c301c4178 <line:830:3, col:53> 'int'
    | |-ImplicitCastExpr 0x561c301c4160 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561c301c3f68 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561c301a18f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561c301c3fa8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561c301c3f88 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561c301c3ee8 't699' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561c301c41b8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561c301c4040 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x561c301c4018 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561c301c3fc0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x561c301c41d0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561c301c4060 <col:38> 'void *(void *)' Function 0x561c301bbbf8 'P0' 'void *(void *)'
    | `-ParenExpr 0x561c301c40e0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x561c301c40b8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561c301c4080 <col:51> 'int' 0
    |-DeclStmt 0x561c301c4260 <line:831:3, col:17>
    | `-VarDecl 0x561c301c41f8 <col:3, col:13> col:13 used t700 'pthread_t':'unsigned long'
    |-CallExpr 0x561c301c4408 <line:832:3, col:53> 'int'
    | |-ImplicitCastExpr 0x561c301c43f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561c301c4278 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561c301a18f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561c301c42b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561c301c4298 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561c301c41f8 't700' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561c301c4448 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561c301c4330 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x561c301c4308 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561c301c42d0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x561c301c4460 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561c301c4350 <col:38> 'void *(void *)' Function 0x561c301bd650 'P1' 'void *(void *)'
    | `-ParenExpr 0x561c301c43d0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x561c301c43a8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561c301c4370 <col:51> 'int' 0
    |-DeclStmt 0x561c301c44f0 <line:833:3, col:17>
    | `-VarDecl 0x561c301c4488 <col:3, col:13> col:13 used t701 'pthread_t':'unsigned long'
    |-CallExpr 0x561c301c4698 <line:834:3, col:53> 'int'
    | |-ImplicitCastExpr 0x561c301c4680 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561c301c4508 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561c301a18f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561c301c4548 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561c301c4528 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561c301c4488 't701' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561c301c46d8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561c301c45c0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x561c301c4598 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561c301c4560 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x561c301c46f0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561c301c45e0 <col:38> 'void *(void *)' Function 0x561c301be9e8 'P2' 'void *(void *)'
    | `-ParenExpr 0x561c301c4660 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x561c301c4638 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561c301c4600 <col:51> 'int' 0
    |-DeclStmt 0x561c301c4780 <line:835:3, col:17>
    | `-VarDecl 0x561c301c4718 <col:3, col:13> col:13 used t702 'pthread_t':'unsigned long'
    |-CallExpr 0x561c301c4928 <line:836:3, col:53> 'int'
    | |-ImplicitCastExpr 0x561c301c4910 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561c301c4798 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561c301a18f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561c301c47d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561c301c47b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561c301c4718 't702' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561c301c4968 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561c301c4850 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x561c301c4828 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561c301c47f0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x561c301c4980 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561c301c4870 <col:38> 'void *(void *)' Function 0x561c301bfd50 'P3' 'void *(void *)'
    | `-ParenExpr 0x561c301c48f0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x561c301c48c8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561c301c4890 <col:51> 'int' 0
    |-CallExpr 0x561c301c49d0 <line:837:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561c301c49b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561c301c4998 <col:3> 'void ()' Function 0x561c30161350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561c301c4aa0 <line:838:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x561c301c49f0 <col:3> '_Bool' lvalue Var 0x561c301bb618 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x561c301c4a88 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x561c301c4a68 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x561c301c4a50 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x561c301c4a10 <col:21> 'int' lvalue Var 0x561c301ba6e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x561c301c4a30 <col:41> 'int' 4
    |-CallExpr 0x561c301c4af8 <line:839:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561c301c4ae0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561c301c4ac0 <col:3> 'void ()' Function 0x561c30161410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561c301c4b70 <line:840:3, col:36> 'void'
    | |-ImplicitCastExpr 0x561c301c4b58 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561c301c4b18 <col:3> 'void (int)' Function 0x561c30160ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x561c301c4bb0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x561c301c4b98 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x561c301c4b38 <col:21> '_Bool' lvalue Var 0x561c301bb618 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x561c301c4c00 <line:841:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561c301c4be8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561c301c4bc8 <col:3> 'void ()' Function 0x561c30161350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561c301c4ee8 <line:842:3, col:103> 'int' '='
    | |-DeclRefExpr 0x561c301c4c20 <col:3> 'int' lvalue Var 0x561c301bac88 'a' 'int'
    | `-ConditionalOperator 0x561c301c4eb8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x561c301c4ce0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x561c301c4c98 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x561c301c4c80 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x561c301c4c40 <col:7> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x561c301c4cc8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x561c301c4cb0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x561c301c4c60 <col:25> '_Bool' lvalue Var 0x561c301bae18 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x561c301c4ea0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x561c301c4d00 <col:42> 'int' lvalue Var 0x561c301bb430 'a$w_buff0' 'int'
    |   `-ParenExpr 0x561c301c4e80 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x561c301c4e50 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x561c301c4dc0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x561c301c4d78 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x561c301c4d60 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x561c301c4d20 <col:55> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x561c301c4da8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x561c301c4d90 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x561c301c4d40 <col:73> '_Bool' lvalue Var 0x561c301bb0d8 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x561c301c4e20 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x561c301c4de0 <col:90> 'int' lvalue Var 0x561c301bb528 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x561c301c4e38 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x561c301c4e00 <col:102> 'int' lvalue Var 0x561c301bac88 'a' 'int'
    |-BinaryOperator 0x561c301c5118 <line:843:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x561c301c4f08 <col:3> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x561c301c5100 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561c301c50d0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x561c301c4fc8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x561c301c4f80 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561c301c4f68 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x561c301c4f28 <col:20> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x561c301c4fb0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561c301c4f98 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561c301c4f48 <col:38> '_Bool' lvalue Var 0x561c301bae18 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561c301c5088 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561c301c5040 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561c301c5010 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x561c301c50b8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561c301c50a0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561c301c5068 <col:66> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x561c301c5400 <line:844:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x561c301c5138 <col:3> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x561c301c53e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561c301c53b8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x561c301c52d8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x561c301c51f8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x561c301c51b0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x561c301c5198 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x561c301c5158 <col:20> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x561c301c51e0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x561c301c51c8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x561c301c5178 <col:38> '_Bool' lvalue Var 0x561c301bae18 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x561c301c52b8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x561c301c5270 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x561c301c5258 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x561c301c5218 <col:56> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x561c301c52a0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x561c301c5288 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x561c301c5238 <col:74> '_Bool' lvalue Var 0x561c301bb0d8 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561c301c5370 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561c301c5328 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561c301c52f8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x561c301c53a0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561c301c5388 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561c301c5350 <col:102> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x561c301c5608 <line:845:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x561c301c5420 <col:3> '_Bool' lvalue Var 0x561c301bae18 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561c301c55f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561c301c55c0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x561c301c54e0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x561c301c5498 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561c301c5480 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x561c301c5440 <col:20> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x561c301c54c8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561c301c54b0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561c301c5460 <col:38> '_Bool' lvalue Var 0x561c301bae18 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561c301c5578 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561c301c5530 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561c301c5500 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x561c301c55a8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561c301c5590 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561c301c5558 <col:66> '_Bool' lvalue Var 0x561c301bae18 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x561c301c58f0 <line:846:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x561c301c5628 <col:3> '_Bool' lvalue Var 0x561c301bb0d8 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561c301c58d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561c301c58a8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x561c301c57c8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x561c301c56e8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x561c301c56a0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x561c301c5688 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x561c301c5648 <col:20> '_Bool' lvalue Var 0x561c301bb4a8 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x561c301c56d0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x561c301c56b8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x561c301c5668 <col:38> '_Bool' lvalue Var 0x561c301bae18 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x561c301c57a8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x561c301c5760 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x561c301c5748 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x561c301c5708 <col:56> '_Bool' lvalue Var 0x561c301bb5a0 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x561c301c5790 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x561c301c5778 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x561c301c5728 <col:74> '_Bool' lvalue Var 0x561c301bb0d8 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561c301c5860 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561c301c5818 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561c301c57e8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x561c301c5890 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561c301c5878 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561c301c5840 <col:102> '_Bool' lvalue Var 0x561c301bb0d8 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x561c301c5948 <line:847:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561c301c5930 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561c301c5910 <col:3> 'void ()' Function 0x561c30161410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561c301c59a0 <line:848:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561c301c5988 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561c301c5968 <col:3> 'void ()' Function 0x561c30161350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561c301c5d08 <line:849:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x561c301c59c0 <col:3> '_Bool' lvalue Var 0x561c301bb690 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x561c301c5cf0 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x561c301c5cd8 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x561c301c5cb8 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x561c301c5c98 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x561c301c5c00 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x561c301c5b68 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x561c301c5ad0 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x561c301c5a38 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x561c301c5a20 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x561c301c59e0 <col:23> 'int' lvalue Var 0x561c301bb9d0 'z' 'int'
    |         | | | | `-IntegerLiteral 0x561c301c5a00 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x561c301c5ab0 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x561c301c5a98 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x561c301c5a58 <col:33> 'int' lvalue Var 0x561c301ba808 '__unbuffered_p0_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x561c301c5a78 <col:56> 'int' 0
    |         | | `-BinaryOperator 0x561c301c5b48 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x561c301c5b30 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x561c301c5af0 <col:61> 'int' lvalue Var 0x561c301ba928 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x561c301c5b10 <col:84> 'int' 0
    |         | `-BinaryOperator 0x561c301c5be0 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x561c301c5bc8 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x561c301c5b88 <col:89> 'int' lvalue Var 0x561c301baa48 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x561c301c5ba8 <col:112> 'int' 2
    |         `-BinaryOperator 0x561c301c5c78 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x561c301c5c60 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x561c301c5c20 <col:117> 'int' lvalue Var 0x561c301bab68 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x561c301c5c40 <col:140> 'int' 0
    |-CallExpr 0x561c301c5d60 <line:850:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561c301c5d48 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561c301c5d28 <col:3> 'void ()' Function 0x561c30161410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561c301c5dd8 <line:851:3, col:36> 'void'
    | |-ImplicitCastExpr 0x561c301c5dc0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561c301c5d80 <col:3> 'void (int)' Function 0x561c301610d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x561c301c5e18 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x561c301c5e00 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x561c301c5da0 <col:21> '_Bool' lvalue Var 0x561c301bb690 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x561c301c5e50 <line:852:3, col:10>
      `-IntegerLiteral 0x561c301c5e30 <col:10> 'int' 0
