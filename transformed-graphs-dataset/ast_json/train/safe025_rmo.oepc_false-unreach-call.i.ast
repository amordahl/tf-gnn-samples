TranslationUnitDecl 0x55af87ef2f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55af87ef3848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55af87ef3520 '__int128'
|-TypedefDecl 0x55af87ef38b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55af87ef3540 'unsigned __int128'
|-TypedefDecl 0x55af87ef3bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55af87ef3990 'struct __NSConstantString_tag'
|   `-Record 0x55af87ef3910 '__NSConstantString_tag'
|-TypedefDecl 0x55af87ef3c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55af87ef3c20 'char *'
|   `-BuiltinType 0x55af87ef3020 'char'
|-TypedefDecl 0x55af87f32b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55af87ef3f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55af87ef3d40 'struct __va_list_tag'
|     `-Record 0x55af87ef3cc0 '__va_list_tag'
|-FunctionDecl 0x55af87f32c80 <pthread-wmm/safe025_rmo.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55af87f32e50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55af87f32d80 <col:31> col:34 'int'
|-FunctionDecl 0x55af87f32fc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55af87f330f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55af87f33238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55af87f331a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55af87f33468 <col:40, col:99>
|   |-IfStmt 0x55af87f33438 <col:42, col:88>
|   | |-UnaryOperator 0x55af87f33318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55af87f33300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55af87f332e0 <col:47> 'int' lvalue ParmVar 0x55af87f331a8 'expression' 'int'
|   | `-CompoundStmt 0x55af87f33420 <col:59, col:88>
|   |   `-LabelStmt 0x55af87f33408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55af87f33398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55af87f33380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55af87f33330 <col:68> 'void () __attribute__((noreturn))' Function 0x55af87f330f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55af87f33450 <col:89>
|   `-ReturnStmt 0x55af87f33458 <col:91>
|-FunctionDecl 0x55af87f334b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55af87f33570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55af87f338f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55af87f33628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55af87f336a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55af87f33728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55af87f337a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55af87f339b0 <line:11:22>
|-FunctionDecl 0x55af87f58f10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55af87f33a20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55af87f33aa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55af87f58d40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55af87f58dc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55af87f58fd0 <line:14:22>
|-FunctionDecl 0x55af87f59280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55af87f59040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55af87f590c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55af87f59140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55af87f59338 <line:16:22>
|-TypedefDecl 0x55af87f593a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55af87ef30e0 'unsigned char'
|-TypedefDecl 0x55af87f59418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55af87ef3100 'unsigned short'
|-TypedefDecl 0x55af87f59488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55af87ef3120 'unsigned int'
|-TypedefDecl 0x55af87f594f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55af87ef3140 'unsigned long'
|-TypedefDecl 0x55af87f59568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55af87ef3040 'signed char'
|-TypedefDecl 0x55af87f595d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55af87ef30e0 'unsigned char'
|-TypedefDecl 0x55af87f59648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55af87ef3060 'short'
|-TypedefDecl 0x55af87f596b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55af87ef3100 'unsigned short'
|-TypedefDecl 0x55af87f59728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55af87ef3080 'int'
|-TypedefDecl 0x55af87f59798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55af87ef3120 'unsigned int'
|-TypedefDecl 0x55af87f59808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55af87ef30a0 'long'
|-TypedefDecl 0x55af87f59878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55af87ef3140 'unsigned long'
|-TypedefDecl 0x55af87f598e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55af87ef30a0 'long'
|-TypedefDecl 0x55af87f59958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55af87ef3140 'unsigned long'
|-TypedefDecl 0x55af87f599c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55af87ef3140 'unsigned long'
|-TypedefDecl 0x55af87f59a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55af87ef3120 'unsigned int'
|-TypedefDecl 0x55af87f59aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55af87ef3120 'unsigned int'
|-TypedefDecl 0x55af87f59b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55af87ef3140 'unsigned long'
|-TypedefDecl 0x55af87f59b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55af87ef3140 'unsigned long'
|-TypedefDecl 0x55af87f59bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55af87ef3120 'unsigned int'
|-TypedefDecl 0x55af87f59c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55af87ef3140 'unsigned long'
|-TypedefDecl 0x55af87f59cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55af87ef30a0 'long'
|-TypedefDecl 0x55af87f59d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55af87ef30a0 'long'
|-TypedefDecl 0x55af87f59dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55af87ef3080 'int'
|-RecordDecl 0x55af87f59e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55af87f59f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55af87f5a030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55af87f59fd0 'struct __fsid_t' sugar
|   `-RecordType 0x55af87f59eb0 '__fsid_t'
|     `-Record 0x55af87f59e30 ''
|-TypedefDecl 0x55af87f5a0b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55af87ef30a0 'long'
|-TypedefDecl 0x55af87f5a128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55af87ef3140 'unsigned long'
|-TypedefDecl 0x55af87f5a198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55af87ef3140 'unsigned long'
|-TypedefDecl 0x55af87f5a208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55af87ef3120 'unsigned int'
|-TypedefDecl 0x55af87f5a278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55af87ef30a0 'long'
|-TypedefDecl 0x55af87f5a2e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55af87ef3120 'unsigned int'
|-TypedefDecl 0x55af87f5a358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55af87ef30a0 'long'
|-TypedefDecl 0x55af87f5a3c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55af87ef3080 'int'
|-TypedefDecl 0x55af87f5a438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55af87ef3080 'int'
|-TypedefDecl 0x55af87f5a4a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55af87ef3080 'int'
|-TypedefDecl 0x55af87f5a518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55af87ef37a0 'void *'
|   `-BuiltinType 0x55af87ef2fe0 'void'
|-TypedefDecl 0x55af87f5a588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55af87ef30a0 'long'
|-TypedefDecl 0x55af87f5a5f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55af87ef30a0 'long'
|-TypedefDecl 0x55af87f5a668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55af87ef30a0 'long'
|-TypedefDecl 0x55af87f5a6d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55af87ef3140 'unsigned long'
|-TypedefDecl 0x55af87f5a748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55af87ef3140 'unsigned long'
|-TypedefDecl 0x55af87f5a7b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55af87ef3140 'unsigned long'
|-TypedefDecl 0x55af87f5a828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55af87ef3140 'unsigned long'
|-TypedefDecl 0x55af87f5a898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55af87ef30a0 'long'
|-TypedefDecl 0x55af87f5a908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55af87ef30a0 'long'
|-TypedefDecl 0x55af87f5a978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55af87ef30a0 'long'
|-TypedefDecl 0x55af87f5a9e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55af87ef3140 'unsigned long'
|-TypedefDecl 0x55af87f5aa78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55af87f5aa40 '__off64_t' sugar
|   |-Typedef 0x55af87f59d68 '__off64_t'
|   `-BuiltinType 0x55af87ef30a0 'long'
|-TypedefDecl 0x55af87f5ab70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55af87f5ab30 '__quad_t *'
|   `-TypedefType 0x55af87f5aad0 '__quad_t' sugar
|     |-Typedef 0x55af87f598e8 '__quad_t'
|     `-BuiltinType 0x55af87ef30a0 'long'
|-TypedefDecl 0x55af87f5abe0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55af87ef3c20 'char *'
|   `-BuiltinType 0x55af87ef3020 'char'
|-TypedefDecl 0x55af87f5ac50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55af87ef30a0 'long'
|-TypedefDecl 0x55af87f5acc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55af87ef3120 'unsigned int'
|-FunctionDecl 0x55af87f5ae38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55af87f5ad60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55af87f5b148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55af87f5b138 <line:73:3, col:34>
|     `-CallExpr 0x55af87f5b0f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55af87f5b0e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55af87f5b070 <col:10> '<builtin fn type>' Function 0x55af87f5aee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55af87f5b120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55af87f5b090 <col:29> 'unsigned int' lvalue ParmVar 0x55af87f5ad60 '__bsx' 'unsigned int'
|-FunctionDecl 0x55af87f5aee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55af87f5af80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55af87f5aff0 <col:10> Implicit
| `-ConstAttr 0x55af87f5b048 <col:10> Implicit
|-FunctionDecl 0x55af87f5b2a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55af87f5b198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55af87f5b5b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55af87f5b5a8 <line:78:3, col:34>
|     `-CallExpr 0x55af87f5b568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55af87f5b550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55af87f5b4d8 <col:10> '<builtin fn type>' Function 0x55af87f5b348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55af87f5b590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55af87f5b4f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55af87f5b198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55af87f5b348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55af87f5b3e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55af87f5b458 <col:10> Implicit
| `-ConstAttr 0x55af87f5b4b0 <col:10> Implicit
|-TypedefDecl 0x55af87f5b5e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55af87ef3140 'unsigned long'
|-TypedefDecl 0x55af87f5b678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55af87f5b640 '__time_t' sugar
|   |-Typedef 0x55af87f5a278 '__time_t'
|   `-BuiltinType 0x55af87ef30a0 'long'
|-RecordDecl 0x55af87f5b6d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55af87f5b788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55af87f5b818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55af87f5b8a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55af87f5b870 '__pid_t' sugar
|   |-Typedef 0x55af87f59dd8 '__pid_t'
|   `-BuiltinType 0x55af87ef3080 'int'
|-RecordDecl 0x55af87f5b900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55af87f5b9c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55af87f5ba10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55af87f5bad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55af87f5bb38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55af87ef3140 'unsigned long'
|-RecordDecl 0x55af87f5bb90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55af87f5de70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55af87f5df20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55af87f5dec0 'struct cpu_set_t' sugar
|   `-RecordType 0x55af87f5bc10 'cpu_set_t'
|     `-Record 0x55af87f5bb90 ''
|-FunctionDecl 0x55af87f5e1f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55af87f5dfc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55af87f5e0d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55af87f5e2a8 <line:108:19>
|-FunctionDecl 0x55af87f5e480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55af87f5e310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55af87f5e528 <col:69>
|-FunctionDecl 0x55af87f5e6a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55af87f5e590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55af87f5e748 <col:64>
|-FunctionDecl 0x55af87f5ea08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55af87f5e7b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55af87f5e8e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55af87f5eab8 <line:114:22>
|-FunctionDecl 0x55af87f5ee60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55af87f5eb20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55af87f5ec18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55af87f5ef10 <col:88>
|-FunctionDecl 0x55af87f5f1c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55af87f5ef78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55af87f5eff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55af87f5f088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55af87f5f280 <col:62>
|-FunctionDecl 0x55af87f5f3f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55af87f5f2e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55af87f5f4a0 <col:63>
|-FunctionDecl 0x55af87f5f5c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55af87f5f668 <col:47>
|-FunctionDecl 0x55af87f5f770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55af87f5f6d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55af87f5f818 <col:69>
|-FunctionDecl 0x55af87f5f920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55af87f5f888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55af87f5f9c8 <col:69>
|-FunctionDecl 0x55af87f5fc88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55af87f5fa30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55af87f5fb68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55af87f5fd38 <col:88>
|-TypedefDecl 0x55af87f5fdc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55af87f5fd90 '__clock_t' sugar
|   |-Typedef 0x55af87f5a0b8 '__clock_t'
|   `-BuiltinType 0x55af87ef30a0 'long'
|-TypedefDecl 0x55af87f607e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55af87f5fe20 '__clockid_t' sugar
|   |-Typedef 0x55af87f5a4a8 '__clockid_t'
|   `-BuiltinType 0x55af87ef3080 'int'
|-TypedefDecl 0x55af87f60878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55af87f60840 '__timer_t' sugar
|   |-Typedef 0x55af87f5a518 '__timer_t'
|   `-PointerType 0x55af87ef37a0 'void *'
|     `-BuiltinType 0x55af87ef2fe0 'void'
|-RecordDecl 0x55af87f608d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55af87f60990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55af87f609f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55af87f60a60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55af87f60ac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55af87f60b30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55af87f60b98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55af87f60c00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55af87f60c68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55af87f60cd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55af87f60d38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55af87f60da0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55af87f60df0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55af87f60eb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55af87f60f28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55af87f60fd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55af87f611a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55af87f61240 <col:45>
|-FunctionDecl 0x55af87f61420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55af87f61310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55af87f614c8 <col:54>
|-FunctionDecl 0x55af87f616c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55af87f61530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55af87f615a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55af87f61778 <line:158:22>
| `-ConstAttr 0x55af87f62410 <col:63>
|-FunctionDecl 0x55af87f62610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55af87f62508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55af87f626b8 <col:56>
|-FunctionDecl 0x55af87f62a60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55af87f62728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55af87f627a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55af87f62820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55af87f62918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55af87f62b20 <col:54>
|-RecordDecl 0x55af87f62b78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55af87f62c28 parent 0x55af87ef2f88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55af87f62e88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55af87f62f28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55af87f62f90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55af87f62ff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55af87f630e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55af87f63208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55af87f631b0 'struct __locale_struct *'
|   `-ElaboratedType 0x55af87f63140 'struct __locale_struct' sugar
|     `-RecordType 0x55af87f62c00 'struct __locale_struct'
|       `-Record 0x55af87f62b78 '__locale_struct'
|-TypedefDecl 0x55af87f632b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55af87f63280 '__locale_t' sugar
|   |-Typedef 0x55af87f63208 '__locale_t'
|   `-PointerType 0x55af87f631b0 'struct __locale_struct *'
|     `-ElaboratedType 0x55af87f63140 'struct __locale_struct' sugar
|       `-RecordType 0x55af87f62c00 'struct __locale_struct'
|         `-Record 0x55af87f62b78 '__locale_struct'
|-FunctionDecl 0x55af87f636b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55af87f63328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55af87f633a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55af87f63438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55af87f634c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55af87f63540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55af87f63778 <col:40>
|-FunctionDecl 0x55af87f63968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55af87f63840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55af87f63a10 <col:66>
|-FunctionDecl 0x55af87f63b20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55af87f63a78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55af87f63bc8 <col:69>
|-FunctionDecl 0x55af87f63df8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55af87f63c30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55af87f63cc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55af87f63ea8 <col:52>
|-FunctionDecl 0x55af87f64050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55af87f63f10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55af87f63fa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55af87f64100 <col:55>
|-FunctionDecl 0x55af87f64298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55af87f64180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55af87f64340 <col:62>
|-FunctionDecl 0x55af87f64578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55af87f643a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55af87f64620 <col:60>
|-FunctionDecl 0x55af87f64848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55af87f646a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55af87f64720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55af87f648f8 <col:44>
|-FunctionDecl 0x55af87f64b08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55af87f64960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55af87f649e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55af87f64bb8 <col:49>
|-VarDecl 0x55af87f64cb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55af87f64d38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55af87f64db8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55af87f64e80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55af87f64fb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55af87f65050 <col:42>
|-VarDecl 0x55af87f650c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55af87f65140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55af87f652c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55af87f651b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55af87f65370 <col:57>
|-FunctionDecl 0x55af87f664f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55af87f653f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55af87f66598 <col:56>
|-FunctionDecl 0x55af87f666a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55af87f66618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55af87f66750 <col:59>
|-FunctionDecl 0x55af87f66858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55af87f667c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55af87f66900 <col:48>
| `-ConstAttr 0x55af87f66958 <col:89>
|-FunctionDecl 0x55af87f66bb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55af87f66a08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55af87f66a98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55af87f66e18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55af87f66ca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55af87f66d38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55af87f66ec8 <col:88>
|-FunctionDecl 0x55af87f67060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55af87f66f30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55af87f66fc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55af87f67110 <col:88>
|-FunctionDecl 0x55af87f67328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55af87f67178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55af87f67208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55af87f673d8 <line:209:22>
|-FunctionDecl 0x55af87f67778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55af87f67440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55af87f67500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55af87f67590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55af87f67620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55af87f67a78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55af87f67878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55af87f67950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55af87f67b28 <col:85>
|-FunctionDecl 0x55af87f67f18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55af87f67b90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55af87f67cc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55af87f67dd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55af87f67fd0 <col:52>
|-FunctionDecl 0x55af87f68148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55af87f68038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55af87f681f0 <col:61>
|-FunctionDecl 0x55af87f68668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55af87f68258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55af87f682d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55af87f68408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55af87f68510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55af87f68728 <col:62>
|-FunctionDecl 0x55af87f68948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55af87f68790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55af87f68820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55af87f689f8 <line:222:22>
|-FunctionDecl 0x55af87f68af8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55af87f68a60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55af87f68ba0 <col:65>
|-TypedefDecl 0x55af87f68c10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55af87ef3140 'unsigned long'
|-RecordDecl 0x55af87f68c68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55af87f68db0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55af87f68e18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55af87f68ec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55af87f68e70 'union pthread_attr_t' sugar
|   `-RecordType 0x55af87f68cf0 'union pthread_attr_t'
|     `-Record 0x55af87f68c68 'pthread_attr_t'
|-RecordDecl 0x55af87f68f20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55af87f69098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55af87f69110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55af87f691c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55af87f69160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55af87f68fa0 'struct __pthread_internal_list'
|     `-Record 0x55af87f68f20 '__pthread_internal_list'
|-RecordDecl 0x55af87f69230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55af87f692d8 parent 0x55af87ef2f88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55af87f693b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55af87f69418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55af87f69480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55af87f6d530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55af87f6d598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55af87f6d600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55af87f6d688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55af87f6d740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55af87f6d830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55af87f6d898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55af87f6da20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55af87f6d9c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55af87f692b0 'pthread_mutex_t'
|     `-Record 0x55af87f69230 ''
|-RecordDecl 0x55af87f6da90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55af87f6dbd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55af87f6dc38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55af87f6dcf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55af87f6dc90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55af87f6db10 'pthread_mutexattr_t'
|     `-Record 0x55af87f6da90 ''
|-RecordDecl 0x55af87f6dd60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55af87f6de08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55af87f6ded0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55af87f6df38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55af87f6dfa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55af87f6e008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55af87f6e070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55af87f6e0d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55af87f6e140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55af87f6e1a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55af87f6e260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe025_rmo.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe025_rmo.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55af87f6e350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55af87f6e3b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55af87f6e540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55af87f6e490 'union pthread_cond_t' sugar
|   `-RecordType 0x55af87f6dde0 'pthread_cond_t'
|     `-Record 0x55af87f6dd60 ''
|-RecordDecl 0x55af87f6e5b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55af87f6e6b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55af87f6e718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55af87f6e7d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55af87f6e770 'union pthread_condattr_t' sugar
|   `-RecordType 0x55af87f6e630 'pthread_condattr_t'
|     `-Record 0x55af87f6e5b0 ''
|-TypedefDecl 0x55af87f6e858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55af87ef3120 'unsigned int'
|-TypedefDecl 0x55af87f6e8c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55af87ef3080 'int'
|-RecordDecl 0x55af87f6e920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55af87f6e9c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55af87f6ea90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55af87f6eaf8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55af87f6eb60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55af87f6ebc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55af87f6ec30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55af87f6ec98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55af87f6ed00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55af87f6ed68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55af87f6edd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55af87f6ee38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55af87f6eea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55af87f6ef50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe025_rmo.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe025_rmo.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55af87f6eff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55af87f6f060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55af87f6f1b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55af87f6f150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55af87f6e9a0 'pthread_rwlock_t'
|     `-Record 0x55af87f6e920 ''
|-RecordDecl 0x55af87f6f220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55af87f6f360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55af87f6f3c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55af87f6f480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55af87f6f420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55af87f6f2a0 'pthread_rwlockattr_t'
|     `-Record 0x55af87f6f220 ''
|-TypedefDecl 0x55af87f71560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55af87ef3084 'volatile int' volatile
|   `-BuiltinType 0x55af87ef3080 'int'
|-RecordDecl 0x55af87f715b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55af87f71700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55af87f71768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55af87f71820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55af87f717c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55af87f71640 'pthread_barrier_t'
|     `-Record 0x55af87f715b8 ''
|-RecordDecl 0x55af87f71890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55af87f71990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55af87f719f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55af87f71ab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55af87f71a50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55af87f71910 'pthread_barrierattr_t'
|     `-Record 0x55af87f71890 ''
|-TypedefDecl 0x55af87f71bc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55af87f71b60 'long [8]' 8 
|   `-BuiltinType 0x55af87ef30a0 'long'
|-EnumDecl 0x55af87f71c20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55af87f71ce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55af87f71d38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55af87f71d88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55af87f71e58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55af87f71ea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55af87f71ef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55af87f71f48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55af87f71fd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55af87f71fb8 <col:26> 'int'
| |   `-DeclRefExpr 0x55af87f71f98 <col:26> 'int' EnumConstant 0x55af87f71e58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55af87f72058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55af87f72040 <col:29> 'int'
| |   `-DeclRefExpr 0x55af87f72020 <col:29> 'int' EnumConstant 0x55af87f71ea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55af87f720e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55af87f720c8 <col:30> 'int'
| |   `-DeclRefExpr 0x55af87f720a8 <col:30> 'int' EnumConstant 0x55af87f71ef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55af87f72168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55af87f72150 <col:27> 'int'
|     `-DeclRefExpr 0x55af87f72130 <col:27> 'int' EnumConstant 0x55af87f71fd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55af87f721b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55af87f72288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55af87f72310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55af87f722f8 <col:30> 'int'
| |   `-DeclRefExpr 0x55af87f722d8 <col:30> 'int' EnumConstant 0x55af87f72288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55af87f72360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55af87f723e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55af87f723d0 <col:29> 'int'
|     `-DeclRefExpr 0x55af87f723b0 <col:29> 'int' EnumConstant 0x55af87f72360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55af87f72438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55af87f72508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55af87f72570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55af87f725c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55af87f72610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55af87f726d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55af87f72728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55af87f72778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55af87f72800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55af87f727e8 <col:31> 'int'
|     `-DeclRefExpr 0x55af87f727c8 <col:31> 'int' EnumConstant 0x55af87f726d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55af87f72850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55af87f72918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55af87f72968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55af87f729b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55af87f72a88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55af87f72ad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55af87f72b28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55af87f72bf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55af87f72c48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55af87f72c98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55af87f72ed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55af87f72f40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55af87f72fa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55af87f730c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55af87f73118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55af87f731e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55af87f73238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55af87f73288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55af87f73358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55af87f733a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55af87f739d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55af87f734a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55af87f735c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55af87f737c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55af87f73840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55af87f73a98 <col:47>
| |-NonNullAttr 0x55af87f73af0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55af87f73b28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55af87f73c50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55af87f73b80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55af87f73ea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55af87f73d08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55af87f73d88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55af87f74078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55af87f73f68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55af87f74120 <col:60>
|-FunctionDecl 0x55af87f74270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55af87f74310 <col:54>
| `-ConstAttr 0x55af87f74368 <col:95>
|-FunctionDecl 0x55af87f74da0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55af87f743a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55af87f74418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55af87f74e50 <line:395:19>
| `-ConstAttr 0x55af87f74ea8 <col:60>
|-FunctionDecl 0x55af87f75078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55af87f74f40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55af87f75120 <col:71>
| `-NonNullAttr 0x55af87f75178 <col:112, col:126> 1
|-FunctionDecl 0x55af87f75280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55af87f751c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55af87f75328 <line:398:22>
| `-NonNullAttr 0x55af87f75380 <col:63, col:77> 1
|-FunctionDecl 0x55af87f755a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55af87f753c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55af87f75448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55af87f75658 <line:401:22>
| `-NonNullAttr 0x55af87f756b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55af87f758b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55af87f756f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55af87f75778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55af87f75968 <line:404:22>
| `-NonNullAttr 0x55af87f759c0 <col:63, col:77> 1
|-FunctionDecl 0x55af87f75c18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55af87f75a08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55af87f75ab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55af87f75cc8 <line:407:22>
| `-NonNullAttr 0x55af87f75d20 <col:63, col:80> 1 2
|-FunctionDecl 0x55af87f76f78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55af87f76dc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55af87f76e38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55af87f77028 <line:410:22>
| `-NonNullAttr 0x55af87f77080 <col:63, col:77> 1
|-FunctionDecl 0x55af87f772b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55af87f770c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55af87f77158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55af87f77368 <line:413:22>
| `-NonNullAttr 0x55af87f773c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55af87f775f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55af87f77408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55af87f77498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55af87f776a8 <col:37>
| `-NonNullAttr 0x55af87f77700 <col:78, col:95> 1 2
|-FunctionDecl 0x55af87f778e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55af87f77748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55af87f777c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55af87f77998 <line:419:22>
| `-NonNullAttr 0x55af87f779f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55af87f77b78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55af87f77a38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55af87f77ab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55af87f77c28 <line:421:22>
| `-NonNullAttr 0x55af87f77c80 <col:63, col:77> 1
|-FunctionDecl 0x55af87f78e58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55af87f77cc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55af87f77d48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55af87f78f08 <line:424:22>
| `-NonNullAttr 0x55af87f78f60 <col:63, col:80> 1 2
|-FunctionDecl 0x55af87f790e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55af87f78fa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55af87f79028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55af87f79198 <line:427:22>
| `-NonNullAttr 0x55af87f791f0 <col:63, col:77> 1
|-FunctionDecl 0x55af87f79398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55af87f79238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55af87f792b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55af87f79448 <line:430:22>
| `-NonNullAttr 0x55af87f794a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55af87f79628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55af87f794e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55af87f79568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55af87f796d8 <line:432:22>
| `-NonNullAttr 0x55af87f79730 <col:63, col:77> 1
|-FunctionDecl 0x55af87f79958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55af87f79778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55af87f797f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55af87f79a08 <line:435:22>
| |-NonNullAttr 0x55af87f79a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55af87f79a98 <col:100> "" ""
|-FunctionDecl 0x55af87f79ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55af87f79ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55af87f79b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55af87f79d58 <line:438:22>
| |-NonNullAttr 0x55af87f79db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x55af87f79df8 <col:97> "" ""
|-FunctionDecl 0x55af87f79fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55af87f79e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55af87f79ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55af87f7a098 <line:441:22>
| `-NonNullAttr 0x55af87f7a0f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55af87f7a270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55af87f7a138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55af87f7a1b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55af87f7a320 <line:444:22>
| `-NonNullAttr 0x55af87f7a378 <col:63, col:77> 1
|-FunctionDecl 0x55af87f7a668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55af87f7a3c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55af87f7a448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55af87f7a4c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55af87f7a720 <line:448:22>
| `-NonNullAttr 0x55af87f7a778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55af87f7aa28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55af87f7a7d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55af87f7a850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55af87f7a8c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55af87f7aae0 <col:43>
| `-NonNullAttr 0x55af87f7ab38 <col:84, col:98> 1
|-FunctionDecl 0x55af87f7ae40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55af87f7ab88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55af87f7ac08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55af87f7ac98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55af87f7aef8 <line:453:22>
| `-NonNullAttr 0x55af87f7af50 <col:63, col:77> 3
|-FunctionDecl 0x55af87f7b228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55af87f7af98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55af87f7b018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55af87f7b0a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55af87f7b2e0 <line:457:22>
| `-NonNullAttr 0x55af87f7b338 <col:63, col:80> 2 3
|-FunctionDecl 0x55af87f7b528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55af87f7b388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55af87f7b408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55af87f7b5d8 <line:459:22>
|-FunctionDecl 0x55af87f7b9a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55af87f7b6a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55af87f7b840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55af87f7ba58 <col:52, col:69> 1 2
|-FunctionDecl 0x55af87f7bc00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55af87f7bae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55af87f7bb60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55af87f7be10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55af87f7bcc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55af87f7bd48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55af87f7bf68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55af87f7bed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55af87f7c0a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55af87f7c148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55af87f7c1f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55af87f7c2e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55af87f7c350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55af87f7c520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe025_rmo.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55af87f7c618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55af87f7c6d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55af87f7c670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55af87f7c1d0 '__pthread_unwind_buf_t'
| |   `-Record 0x55af87f7c148 ''
| `-AlignedAttr 0x55af87f7c728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55af87f7c7a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55af87f7c900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55af87f7c968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55af87f7c9d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55af87f7ca38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55af87f7cc40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55af87f7cb30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55af87f7ce20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55af87f7ccf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55af87f7cfe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55af87f7ced8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55af87f7d088 <line:488:22>
|-RecordDecl 0x55af87f7d0e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55af87f7d3f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55af87f7d258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55af87f7d2d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55af87f7d4a8 <col:86>
| `-ReturnsTwiceAttr 0x55af87f7d500 <col:12> Implicit
|-FunctionDecl 0x55af87f7d828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55af87f7d5d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55af87f7d6e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55af87f7d8d8 <line:494:22>
| `-NonNullAttr 0x55af87f7d930 <col:63, col:77> 1
|-FunctionDecl 0x55af87f7daa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55af87f7d978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55af87f7db50 <line:496:22>
| `-NonNullAttr 0x55af87f7dba8 <col:63, col:77> 1
|-FunctionDecl 0x55af87f7dcb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55af87f7dbf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55af87f7dd58 <line:498:22>
| `-NonNullAttr 0x55af87f7ddb0 <col:52, col:66> 1
|-FunctionDecl 0x55af87f7dee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55af87f7de30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55af87f7df90 <line:500:22>
| `-NonNullAttr 0x55af87f7dfe8 <col:52, col:66> 1
|-FunctionDecl 0x55af87f7e228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55af87f7e038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55af87f7e0c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55af87f7e2d8 <col:36>
| `-NonNullAttr 0x55af87f7e330 <col:66, col:83> 1 2
|-FunctionDecl 0x55af87f7e430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55af87f7e378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55af87f7e4d8 <line:505:22>
| `-NonNullAttr 0x55af87f7e530 <col:52, col:66> 1
|-FunctionDecl 0x55af87f7e7c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55af87f7e5e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55af87f7e660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55af87f7e878 <line:509:22>
| `-NonNullAttr 0x55af87f7e8d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55af87f7eb98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55af87f7e918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55af87f7e998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55af87f7ea18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55af87f7ec50 <line:513:22>
| `-NonNullAttr 0x55af87f7eca8 <col:63, col:80> 1 3
|-FunctionDecl 0x55af87f7ee40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55af87f7ecf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55af87f7eee8 <line:515:22>
| `-NonNullAttr 0x55af87f7ef40 <col:63, col:77> 1
|-FunctionDecl 0x55af87f7f128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55af87f7eff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55af87f7f1d0 <line:517:22>
| `-NonNullAttr 0x55af87f7f228 <col:63, col:77> 1
|-FunctionDecl 0x55af87f7f330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55af87f7f278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55af87f7f3d8 <line:519:22>
| `-NonNullAttr 0x55af87f7f430 <col:63, col:77> 1
|-FunctionDecl 0x55af87f7f658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55af87f7f478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55af87f7f4f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55af87f7f708 <line:523:22>
| `-NonNullAttr 0x55af87f7f760 <col:63, col:80> 1 2
|-FunctionDecl 0x55af87f7f968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55af87f7f7a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55af87f7f828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55af87f7fa18 <line:526:22>
| `-NonNullAttr 0x55af87f7fa70 <col:63, col:77> 1
|-FunctionDecl 0x55af87f7fc18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55af87f7fab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55af87f7fb38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55af87f7fcc8 <line:529:22>
| `-NonNullAttr 0x55af87f7fd20 <col:63, col:80> 1 2
|-FunctionDecl 0x55af87f80f20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55af87f7fd68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55af87f80e60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55af87f80fd0 <line:531:22>
| `-NonNullAttr 0x55af87f81028 <col:63, col:77> 1
|-FunctionDecl 0x55af87f811d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55af87f81078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55af87f810f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55af87f81288 <line:535:22>
| `-NonNullAttr 0x55af87f812e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55af87f81468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55af87f81328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55af87f813a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55af87f81518 <line:538:22>
| `-NonNullAttr 0x55af87f81570 <col:63, col:77> 1
|-FunctionDecl 0x55af87f81718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55af87f815b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55af87f81638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55af87f817c8 <line:542:22>
| `-NonNullAttr 0x55af87f81820 <col:63, col:80> 1 2
|-FunctionDecl 0x55af87f819a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55af87f81868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55af87f818e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55af87f81a58 <line:545:22>
| `-NonNullAttr 0x55af87f81ab0 <col:63, col:77> 1
|-FunctionDecl 0x55af87f81c98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55af87f81af8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55af87f81b78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55af87f81d48 <line:548:22>
| `-NonNullAttr 0x55af87f81da0 <col:63, col:80> 1 2
|-FunctionDecl 0x55af87f82f58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55af87f81de8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55af87f82e98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55af87f83008 <line:551:22>
| `-NonNullAttr 0x55af87f83060 <col:63, col:77> 1
|-FunctionDecl 0x55af87f83398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55af87f83140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55af87f83250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55af87f83448 <col:29>
| `-NonNullAttr 0x55af87f834a0 <col:70, col:84> 1
|-FunctionDecl 0x55af87f83618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55af87f834e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55af87f836c0 <line:556:22>
| `-NonNullAttr 0x55af87f83718 <col:63, col:77> 1
|-FunctionDecl 0x55af87f83820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55af87f83768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55af87f838c8 <line:558:22>
| `-NonNullAttr 0x55af87f83920 <col:52, col:66> 1
|-FunctionDecl 0x55af87f83a20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55af87f83968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55af87f83ac8 <line:560:19>
| `-NonNullAttr 0x55af87f83b20 <col:49, col:63> 1
|-FunctionDecl 0x55af87f83d58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55af87f83b68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55af87f83bf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55af87f83e08 <col:39>
| `-NonNullAttr 0x55af87f83e90 <col:69, col:86> 1 2
|-FunctionDecl 0x55af87f83f90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55af87f83ed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55af87f84038 <line:565:22>
| `-NonNullAttr 0x55af87f84090 <col:52, col:66> 1
|-FunctionDecl 0x55af87f84190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55af87f840d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55af87f84238 <line:567:22>
| `-NonNullAttr 0x55af87f84290 <col:52, col:66> 1
|-FunctionDecl 0x55af87f84448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55af87f842d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55af87f84368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55af87f844f8 <col:39>
| `-NonNullAttr 0x55af87f84550 <col:69, col:86> 1 2
|-FunctionDecl 0x55af87f84650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55af87f84598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55af87f846f8 <line:572:22>
| `-NonNullAttr 0x55af87f84750 <col:52, col:66> 1
|-FunctionDecl 0x55af87f84938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55af87f84800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55af87f849e0 <line:574:22>
| `-NonNullAttr 0x55af87f84a38 <col:63, col:77> 1
|-FunctionDecl 0x55af87f84b40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55af87f84a88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55af87f84be8 <line:576:22>
| `-NonNullAttr 0x55af87f84c40 <col:63, col:77> 1
|-FunctionDecl 0x55af87f84ea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55af87f84c88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55af87f84d08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55af87f84f50 <line:580:22>
| `-NonNullAttr 0x55af87f84fa8 <col:63, col:80> 1 2
|-FunctionDecl 0x55af87f851b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55af87f84ff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55af87f85078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55af87f85268 <line:583:22>
| `-NonNullAttr 0x55af87f852c0 <col:63, col:77> 1
|-FunctionDecl 0x55af87f85468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55af87f85308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55af87f85388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55af87f85518 <line:587:22>
| `-NonNullAttr 0x55af87f85570 <col:63, col:80> 1 2
|-FunctionDecl 0x55af87f856f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55af87f855b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55af87f85638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55af87f857a8 <col:36>
| `-NonNullAttr 0x55af87f85800 <col:77, col:91> 1
|-FunctionDecl 0x55af87f85b38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55af87f858e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55af87f859f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55af87f85be8 <line:592:22>
| `-NonNullAttr 0x55af87f85c40 <col:63, col:77> 1
|-FunctionDecl 0x55af87f85db8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55af87f85c88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55af87f85e60 <line:594:22>
| `-NonNullAttr 0x55af87f85ee0 <col:63, col:77> 1
|-FunctionDecl 0x55af87f85fe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55af87f85f28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55af87f86088 <line:596:22>
| `-NonNullAttr 0x55af87f860e0 <col:52, col:66> 1
|-FunctionDecl 0x55af87f861e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55af87f86128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55af87f86288 <line:598:22>
| `-NonNullAttr 0x55af87f862e0 <col:52, col:66> 1
|-FunctionDecl 0x55af87f86508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55af87f86328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55af87f863a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55af87f865b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55af87f868e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55af87f86638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55af87f866b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55af87f86740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55af87f869a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55af87f86bb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55af87f86a80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55af87f86c60 <line:607:22>
| `-NonNullAttr 0x55af87f86cb8 <col:63, col:77> 1
|-FunctionDecl 0x55af87f86dc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55af87f86d08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55af87f86e68 <line:609:22>
| `-NonNullAttr 0x55af87f86ef0 <col:63, col:77> 1
|-FunctionDecl 0x55af87f87118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55af87f86f38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55af87f86fb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55af87f871c8 <line:613:22>
| `-NonNullAttr 0x55af87f87220 <col:63, col:80> 1 2
|-FunctionDecl 0x55af87f87428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55af87f87268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55af87f872e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55af87f874d8 <col:37>
| `-NonNullAttr 0x55af87f87530 <col:78, col:92> 1
|-FunctionDecl 0x55af87f87748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55af87f87578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55af87f87620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55af87f877f8 <line:619:22>
| `-NonNullAttr 0x55af87f87850 <col:63, col:80> 1 2
|-FunctionDecl 0x55af87f87a18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55af87f87898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55af87f87910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55af87f87ac8 <line:622:22>
| `-NonNullAttr 0x55af87f87b20 <col:63, col:77> 1
|-FunctionDecl 0x55af87f87dc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55af87f87c00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55af87f87c80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55af87f87e78 <line:624:22>
| `-NonNullAttr 0x55af87f87f00 <col:63, col:77> 1
|-FunctionDecl 0x55af87f88078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55af87f87f48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55af87f88120 <line:626:22>
| `-NonNullAttr 0x55af87f88178 <col:63, col:77> 1
|-FunctionDecl 0x55af87f88280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55af87f881c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55af87f88328 <line:628:22>
| `-NonNullAttr 0x55af87f88380 <col:52, col:66> 1
|-FunctionDecl 0x55af87f88480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55af87f883c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55af87f88528 <line:630:22>
| `-NonNullAttr 0x55af87f88580 <col:52, col:66> 1
|-FunctionDecl 0x55af87f88680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55af87f885c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55af87f88728 <line:632:22>
| `-NonNullAttr 0x55af87f88780 <col:52, col:66> 1
|-FunctionDecl 0x55af87f88b58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55af87f88860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55af87f88970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55af87f889f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55af87f88c10 <line:636:22>
| `-NonNullAttr 0x55af87f88c68 <col:63, col:77> 1
|-FunctionDecl 0x55af87f88de8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55af87f88cb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55af87f88e90 <line:638:22>
| `-NonNullAttr 0x55af87f88f10 <col:63, col:77> 1
|-FunctionDecl 0x55af87f89010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55af87f88f58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55af87f890b8 <line:640:22>
| `-NonNullAttr 0x55af87f89110 <col:52, col:66> 1
|-FunctionDecl 0x55af87f892f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55af87f891c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55af87f893a0 <line:642:22>
| `-NonNullAttr 0x55af87f893f8 <col:63, col:77> 1
|-FunctionDecl 0x55af87f89500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55af87f89448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55af87f895a8 <line:644:22>
| `-NonNullAttr 0x55af87f89600 <col:63, col:77> 1
|-FunctionDecl 0x55af87f89828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55af87f89648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55af87f896c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55af87f898d8 <line:648:22>
| `-NonNullAttr 0x55af87f89930 <col:63, col:80> 1 2
|-FunctionDecl 0x55af87f89b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55af87f89978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55af87f899f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55af87f89be8 <line:651:22>
| `-NonNullAttr 0x55af87f89c40 <col:63, col:77> 1
|-FunctionDecl 0x55af87f89fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55af87f89d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55af87f89e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55af87f8a058 <line:654:22>
| `-NonNullAttr 0x55af87f8a0b0 <col:63, col:77> 1
|-FunctionDecl 0x55af87f8a208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55af87f8a0f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55af87f8a2b0 <col:69>
|-FunctionDecl 0x55af87f8a428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55af87f8a318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55af87f8a4d0 <col:72>
|-FunctionDecl 0x55af87f8a708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55af87f8a538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55af87f8a5e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55af87f8a7b8 <col:44>
|-FunctionDecl 0x55af87f8a9d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55af87f8a820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55af87f8a898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55af87f8aa88 <line:661:22>
| `-NonNullAttr 0x55af87f8aae0 <col:63, col:77> 2
|-FunctionDecl 0x55af87f8bf50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55af87f8abc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55af87f8acd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55af87f8ade0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55af87f8c008 <col:47>
|-FunctionDecl 0x55af87f8c110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55af87f8c078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55af87f8c268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55af87f8c1d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55af87f8c3c0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55af87f8c328 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55af87f8c488 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55af87f8c548 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55af87f8c608 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55af87f8c6c0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55af87f8c740 prev 0x55af87f8c6c0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55af87f8c7a8 <col:24> 'int' 0
|-VarDecl 0x55af87f8c7e0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55af87f8c860 prev 0x55af87f8c7e0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55af87f8c8c8 <col:27> 'int' 0
|-VarDecl 0x55af87f8c900 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55af87f8c980 prev 0x55af87f8c900 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55af87f8c9e8 <col:27> 'int' 0
|-VarDecl 0x55af87f8ca18 <line:678:1, col:7> col:7 __unbuffered_p2_EAX$flush_delayed '_Bool'
|-VarDecl 0x55af87f8ca98 <line:679:1, col:5> col:5 __unbuffered_p2_EAX$mem_tmp 'int'
|-VarDecl 0x55af87f8cb10 <line:680:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x55af87f8cb88 <line:681:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x55af87f8cc00 <line:682:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x55af87f8cc78 <line:683:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x55af87f8ccf0 <line:684:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x55af87f8cd68 <line:685:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x55af87f8cde0 <line:686:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x55af87f8ce58 <line:687:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x55af87f8cf20 <line:688:1, col:7> col:7 used __unbuffered_p2_EAX$read_delayed '_Bool'
|-VarDecl 0x55af87f8cfa0 <line:689:1, col:6> col:6 used __unbuffered_p2_EAX$read_delayed_var 'int *'
|-VarDecl 0x55af87f8d020 <line:690:1, col:5> col:5 __unbuffered_p2_EAX$w_buff0 'int'
|-VarDecl 0x55af87f8d098 <line:691:1, col:7> col:7 __unbuffered_p2_EAX$w_buff0_used '_Bool'
|-VarDecl 0x55af87f8d118 <line:692:1, col:5> col:5 __unbuffered_p2_EAX$w_buff1 'int'
|-VarDecl 0x55af87f8d190 <line:693:1, col:7> col:7 __unbuffered_p2_EAX$w_buff1_used '_Bool'
|-VarDecl 0x55af87f8d210 <line:694:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x55af87f8d290 prev 0x55af87f8d210 <line:695:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x55af87f8d2f8 <col:27> 'int' 0
|-VarDecl 0x55af87f8d328 <line:696:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55af87f8d3a0 <line:697:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55af87f8d420 <line:698:1, col:5> col:5 used x 'int'
|-VarDecl 0x55af87f8d4a0 prev 0x55af87f8d420 <line:699:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55af87f8d508 <col:9> 'int' 0
|-VarDecl 0x55af87f8d538 <line:700:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x55af87f8d5b8 <line:701:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x55af87f8d630 <line:702:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x55af87f8d6a8 <line:703:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x55af87f8d720 <line:704:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x55af87f8d798 <line:705:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x55af87f8d810 <line:706:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x55af87f8d888 <line:707:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x55af87f8d900 <line:708:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x55af87f8d978 <line:709:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x55af87f8d9f0 <line:710:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x55af87f8da70 <line:711:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x55af87f8daf0 <line:712:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x55af87f8db68 <line:713:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x55af87f8dbe8 <line:714:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x55af87f8dc60 <line:715:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x55af87f8dce0 <line:716:1, col:5> col:5 used y 'int'
|-VarDecl 0x55af87f8dd60 prev 0x55af87f8dce0 <line:717:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55af87f8ddc8 <col:9> 'int' 0
|-VarDecl 0x55af87f8ddf8 <line:718:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55af87f8de70 <line:719:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x55af87f8df30 <line:720:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55af87f8e048 prev 0x55af87f8c110 <line:721:1, line:750:1> line:721:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55af87f8dfb0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55af87f91098 <line:722:1, line:750:1>
|   |-CallExpr 0x55af87f8e158 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55af87f8e140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55af87f8e0f0 <col:3> 'void ()' Function 0x55af87f334b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55af87f8e1b8 <line:724:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55af87f8e178 <col:3> 'int' lvalue Var 0x55af87f8dd60 'y' 'int'
|   | `-IntegerLiteral 0x55af87f8e198 <col:7> 'int' 1
|   |-CallExpr 0x55af87f8e210 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55af87f8e1f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55af87f8e1d8 <col:3> 'void ()' Function 0x55af87f33570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55af87f8e268 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55af87f8e250 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55af87f8e230 <col:3> 'void ()' Function 0x55af87f334b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55af87f8e2c0 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55af87f8e2a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55af87f8e288 <col:3> 'void ()' Function 0x55af87f33570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55af87f8e318 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55af87f8e300 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55af87f8e2e0 <col:3> 'void ()' Function 0x55af87f334b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55af87f8e3e8 <line:729:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55af87f8e338 <col:3> '_Bool' lvalue Var 0x55af87f8ddf8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55af87f8e3c8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55af87f8e3b0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55af87f8e358 <col:19> '_Bool (void)' Function 0x55af87f32c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55af87f8e480 <line:730:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55af87f8e408 <col:3> '_Bool' lvalue Var 0x55af87f8df30 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55af87f8e460 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55af87f8e448 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55af87f8e428 <col:19> '_Bool (void)' Function 0x55af87f32c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55af87f8e4f8 <line:731:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55af87f8e4a0 <col:3> '_Bool' lvalue Var 0x55af87f8d538 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55af87f8e4e0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55af87f8e4c0 <col:21> '_Bool' lvalue Var 0x55af87f8df30 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55af87f8e570 <line:732:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55af87f8e518 <col:3> 'int' lvalue Var 0x55af87f8d5b8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55af87f8e558 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55af87f8e538 <col:15> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
|   |-BinaryOperator 0x55af87f8e9a8 <line:733:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55af87f8e590 <col:3> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
|   | `-ConditionalOperator 0x55af87f8e978 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55af87f8e7a0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55af87f8e6c0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55af87f8e5e8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55af87f8e5d0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55af87f8e5b0 <col:8> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55af87f8e6a0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55af87f8e638 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55af87f8e620 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55af87f8e600 <col:27> '_Bool' lvalue Var 0x55af87f8d6a8 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x55af87f8e688 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55af87f8e670 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55af87f8e650 <col:46> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55af87f8e780 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55af87f8e718 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55af87f8e700 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55af87f8e6e0 <col:65> '_Bool' lvalue Var 0x55af87f8d6a8 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x55af87f8e768 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55af87f8e750 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55af87f8e730 <col:84> '_Bool' lvalue Var 0x55af87f8d888 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55af87f8e960 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55af87f8e7c0 <col:101> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
|   |   `-ParenExpr 0x55af87f8e940 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55af87f8e910 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55af87f8e880 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55af87f8e838 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55af87f8e820 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55af87f8e7e0 <col:106> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55af87f8e868 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55af87f8e850 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55af87f8e800 <col:124> '_Bool' lvalue Var 0x55af87f8d6a8 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55af87f8e8e0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55af87f8e8a0 <col:141> 'int' lvalue Var 0x55af87f8daf0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55af87f8e8f8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55af87f8e8c0 <col:153> 'int' lvalue Var 0x55af87f8dbe8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55af87f8eeb8 <line:734:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55af87f8e9c8 <col:3> 'int' lvalue Var 0x55af87f8daf0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55af87f8ee88 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55af87f8ee58 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55af87f8ee40 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55af87f8e9e8 <col:15> '_Bool' lvalue Var 0x55af87f8df30 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55af87f8ee70 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55af87f8ea08 <col:31> 'int' lvalue Var 0x55af87f8daf0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55af87f8ee20 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55af87f8edf0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55af87f8ec18 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55af87f8eb38 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55af87f8ea60 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55af87f8ea48 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55af87f8ea28 <col:45> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55af87f8eb18 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55af87f8eab0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55af87f8ea98 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55af87f8ea78 <col:64> '_Bool' lvalue Var 0x55af87f8d6a8 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55af87f8eb00 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55af87f8eae8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55af87f8eac8 <col:83> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55af87f8ebf8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55af87f8eb90 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55af87f8eb78 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55af87f8eb58 <col:102> '_Bool' lvalue Var 0x55af87f8d6a8 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55af87f8ebe0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55af87f8ebc8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55af87f8eba8 <col:121> '_Bool' lvalue Var 0x55af87f8d888 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55af87f8edd8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55af87f8ec38 <col:138> 'int' lvalue Var 0x55af87f8daf0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55af87f8edb8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55af87f8ed88 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55af87f8ecf8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55af87f8ecb0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55af87f8ec98 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55af87f8ec58 <col:151> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55af87f8ece0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55af87f8ecc8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55af87f8ec78 <col:169> '_Bool' lvalue Var 0x55af87f8d6a8 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55af87f8ed58 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55af87f8ed18 <col:186> 'int' lvalue Var 0x55af87f8daf0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55af87f8ed70 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55af87f8ed38 <col:198> 'int' lvalue Var 0x55af87f8daf0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55af87f8f3f0 <line:735:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55af87f8eed8 <col:3> 'int' lvalue Var 0x55af87f8dbe8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55af87f8f3c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55af87f8f390 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55af87f8f378 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55af87f8eef8 <col:15> '_Bool' lvalue Var 0x55af87f8df30 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55af87f8f3a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55af87f8ef40 <col:31> 'int' lvalue Var 0x55af87f8dbe8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55af87f8f358 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55af87f8f328 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55af87f8f150 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55af87f8f070 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55af87f8ef98 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55af87f8ef80 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55af87f8ef60 <col:45> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55af87f8f050 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55af87f8efe8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55af87f8efd0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55af87f8efb0 <col:64> '_Bool' lvalue Var 0x55af87f8d6a8 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55af87f8f038 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55af87f8f020 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55af87f8f000 <col:83> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55af87f8f130 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55af87f8f0c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55af87f8f0b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55af87f8f090 <col:102> '_Bool' lvalue Var 0x55af87f8d6a8 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55af87f8f118 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55af87f8f100 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55af87f8f0e0 <col:121> '_Bool' lvalue Var 0x55af87f8d888 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55af87f8f310 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55af87f8f170 <col:138> 'int' lvalue Var 0x55af87f8dbe8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55af87f8f2f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55af87f8f2c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55af87f8f230 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55af87f8f1e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55af87f8f1d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55af87f8f190 <col:151> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55af87f8f218 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55af87f8f200 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55af87f8f1b0 <col:169> '_Bool' lvalue Var 0x55af87f8d6a8 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55af87f8f290 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55af87f8f250 <col:186> 'int' lvalue Var 0x55af87f8dbe8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55af87f8f2a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55af87f8f270 <col:198> 'int' lvalue Var 0x55af87f8dbe8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55af87f8f998 <line:736:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55af87f8f410 <col:3> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55af87f8f980 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55af87f8f950 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55af87f8f908 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55af87f8f8f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55af87f8f430 <col:20> '_Bool' lvalue Var 0x55af87f8df30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55af87f8f938 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55af87f8f920 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55af87f8f450 <col:36> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55af87f8f8d0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55af87f8f8a0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55af87f8f660 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55af87f8f580 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55af87f8f4a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55af87f8f490 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55af87f8f470 <col:55> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55af87f8f560 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55af87f8f4f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55af87f8f4e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55af87f8f4c0 <col:74> '_Bool' lvalue Var 0x55af87f8d6a8 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55af87f8f548 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55af87f8f530 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55af87f8f510 <col:93> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55af87f8f640 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55af87f8f5d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55af87f8f5c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55af87f8f5a0 <col:112> '_Bool' lvalue Var 0x55af87f8d6a8 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55af87f8f628 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55af87f8f610 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55af87f8f5f0 <col:131> '_Bool' lvalue Var 0x55af87f8d888 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55af87f8f888 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55af87f8f870 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55af87f8f680 <col:148> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55af87f8f850 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55af87f8f820 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55af87f8f740 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55af87f8f6f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55af87f8f6e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55af87f8f6a0 <col:166> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55af87f8f728 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55af87f8f710 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55af87f8f6c0 <col:184> '_Bool' lvalue Var 0x55af87f8d6a8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55af87f8f7d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55af87f8f790 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55af87f8f760 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55af87f8f808 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55af87f8f7f0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55af87f8f7b8 <col:212> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55af87f8ff98 <line:737:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55af87f8f9b8 <col:3> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55af87f8ff80 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55af87f8ff50 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55af87f8fed0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55af87f8feb8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55af87f8f9d8 <col:20> '_Bool' lvalue Var 0x55af87f8df30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55af87f8ff00 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55af87f8fee8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55af87f8f9f8 <col:36> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55af87f8fe98 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55af87f8fe68 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55af87f8fc08 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55af87f8fb28 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55af87f8fa50 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55af87f8fa38 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55af87f8fa18 <col:55> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55af87f8fb08 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55af87f8faa0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55af87f8fa88 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55af87f8fa68 <col:74> '_Bool' lvalue Var 0x55af87f8d6a8 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55af87f8faf0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55af87f8fad8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55af87f8fab8 <col:93> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55af87f8fbe8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55af87f8fb80 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55af87f8fb68 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55af87f8fb48 <col:112> '_Bool' lvalue Var 0x55af87f8d6a8 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55af87f8fbd0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55af87f8fbb8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55af87f8fb98 <col:131> '_Bool' lvalue Var 0x55af87f8d888 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55af87f8fe50 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55af87f8fe38 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55af87f8fc28 <col:148> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55af87f8fe18 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55af87f8fde8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55af87f8fce8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55af87f8fca0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55af87f8fc88 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55af87f8fc48 <col:166> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55af87f8fcd0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55af87f8fcb8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55af87f8fc68 <col:184> '_Bool' lvalue Var 0x55af87f8d6a8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55af87f8fdb8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55af87f8fd38 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55af87f8fd08 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55af87f8fdd0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55af87f8fd90 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55af87f8fd60 <col:219> 'int' 0
|   |-BinaryOperator 0x55af87f90540 <line:738:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55af87f8ffb8 <col:3> '_Bool' lvalue Var 0x55af87f8d6a8 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55af87f90528 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55af87f904f8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55af87f904b0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55af87f90498 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55af87f8ffd8 <col:20> '_Bool' lvalue Var 0x55af87f8df30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55af87f904e0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55af87f904c8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55af87f8fff8 <col:36> '_Bool' lvalue Var 0x55af87f8d6a8 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55af87f90478 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55af87f90448 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55af87f90208 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55af87f90128 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55af87f90050 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55af87f90038 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55af87f90018 <col:55> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55af87f90108 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55af87f900a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55af87f90088 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55af87f90068 <col:74> '_Bool' lvalue Var 0x55af87f8d6a8 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55af87f900f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55af87f900d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55af87f900b8 <col:93> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55af87f901e8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55af87f90180 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55af87f90168 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55af87f90148 <col:112> '_Bool' lvalue Var 0x55af87f8d6a8 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55af87f901d0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55af87f901b8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55af87f90198 <col:131> '_Bool' lvalue Var 0x55af87f8d888 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55af87f90430 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55af87f90418 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55af87f90228 <col:148> '_Bool' lvalue Var 0x55af87f8d6a8 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55af87f903f8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55af87f903c8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55af87f902e8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55af87f902a0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55af87f90288 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55af87f90248 <col:166> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55af87f902d0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55af87f902b8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55af87f90268 <col:184> '_Bool' lvalue Var 0x55af87f8d6a8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55af87f90380 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55af87f90338 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55af87f90308 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55af87f903b0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55af87f90398 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55af87f90360 <col:212> '_Bool' lvalue Var 0x55af87f8d6a8 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55af87f90b08 <line:739:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55af87f90560 <col:3> '_Bool' lvalue Var 0x55af87f8d888 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55af87f90af0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55af87f90ac0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55af87f90a78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55af87f90a60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55af87f90580 <col:20> '_Bool' lvalue Var 0x55af87f8df30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55af87f90aa8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55af87f90a90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55af87f905a0 <col:36> '_Bool' lvalue Var 0x55af87f8d888 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55af87f90a40 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55af87f90a10 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55af87f907b0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55af87f906d0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55af87f905f8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55af87f905e0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55af87f905c0 <col:55> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55af87f906b0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55af87f90648 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55af87f90630 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55af87f90610 <col:74> '_Bool' lvalue Var 0x55af87f8d6a8 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55af87f90698 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55af87f90680 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55af87f90660 <col:93> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55af87f90790 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55af87f90728 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55af87f90710 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55af87f906f0 <col:112> '_Bool' lvalue Var 0x55af87f8d6a8 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55af87f90778 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55af87f90760 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55af87f90740 <col:131> '_Bool' lvalue Var 0x55af87f8d888 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55af87f909f8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55af87f909e0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55af87f907d0 <col:148> '_Bool' lvalue Var 0x55af87f8d888 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55af87f909c0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55af87f90990 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55af87f90890 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55af87f90848 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55af87f90830 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55af87f907f0 <col:166> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55af87f90878 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55af87f90860 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55af87f90810 <col:184> '_Bool' lvalue Var 0x55af87f8d6a8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55af87f90960 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55af87f908e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55af87f908b0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55af87f90978 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55af87f90938 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55af87f90908 <col:219> 'int' 0
|   |-BinaryOperator 0x55af87f90b80 <line:740:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55af87f90b28 <col:3> 'int' lvalue Var 0x55af87f8c860 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55af87f90b68 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55af87f90b48 <col:25> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
|   |-BinaryOperator 0x55af87f90cb0 <line:741:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55af87f90ba0 <col:3> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
|   | `-ConditionalOperator 0x55af87f90c80 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55af87f90c38 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55af87f90c20 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55af87f90bc0 <col:7> '_Bool' lvalue Var 0x55af87f8d538 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55af87f90c50 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55af87f90be0 <col:25> 'int' lvalue Var 0x55af87f8d5b8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55af87f90c68 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55af87f90c00 <col:37> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
|   |-BinaryOperator 0x55af87f90d48 <line:742:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55af87f90cd0 <col:3> '_Bool' lvalue Var 0x55af87f8d538 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55af87f90d20 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55af87f90cf0 <col:28> 'int' 0
|   |-CallExpr 0x55af87f90da0 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55af87f90d88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55af87f90d68 <col:3> 'void ()' Function 0x55af87f33570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55af87f90df8 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55af87f90de0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55af87f90dc0 <col:3> 'void ()' Function 0x55af87f334b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55af87f90e50 <line:745:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55af87f90e38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55af87f90e18 <col:3> 'void ()' Function 0x55af87f33570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55af87f90ea8 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55af87f90e90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55af87f90e70 <col:3> 'void ()' Function 0x55af87f334b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55af87f90f80 <line:747:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55af87f90ec8 <col:3> 'int' lvalue Var 0x55af87f8c740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55af87f90f60 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55af87f90f28 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55af87f90ee8 <col:22> 'int' lvalue Var 0x55af87f8c740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55af87f90f08 <col:41> 'int' 1
|   |-CallExpr 0x55af87f90fd8 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55af87f90fc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55af87f90fa0 <col:3> 'void ()' Function 0x55af87f33570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55af87f91088 <line:749:3, col:36>
|     `-CallExpr 0x55af87f91068 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55af87f91050 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55af87f90ff8 <col:10> 'void *(void)' Function 0x55af87f32fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55af87f91230 prev 0x55af87f8c268 <line:751:1, line:770:1> line:751:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55af87f91198 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55af87f92460 <line:752:1, line:770:1>
|   |-CallExpr 0x55af87f91310 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55af87f912f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55af87f912d8 <col:3> 'void ()' Function 0x55af87f334b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55af87f91370 <line:754:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55af87f91330 <col:3> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
|   | `-IntegerLiteral 0x55af87f91350 <col:7> 'int' 1
|   |-CallExpr 0x55af87f913c8 <line:755:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55af87f913b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55af87f91390 <col:3> 'void ()' Function 0x55af87f33570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55af87f91420 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55af87f91408 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55af87f913e8 <col:3> 'void ()' Function 0x55af87f334b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55af87f91480 <line:757:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55af87f91440 <col:3> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
|   | `-IntegerLiteral 0x55af87f91460 <col:7> 'int' 2
|   |-CallExpr 0x55af87f914d8 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55af87f914c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55af87f914a0 <col:3> 'void ()' Function 0x55af87f33570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55af87f91530 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55af87f91518 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55af87f914f8 <col:3> 'void ()' Function 0x55af87f334b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55af87f91818 <line:760:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55af87f91550 <col:3> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
|   | `-ConditionalOperator 0x55af87f917e8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55af87f91610 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55af87f915c8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55af87f915b0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55af87f91570 <col:7> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55af87f915f8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55af87f915e0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55af87f91590 <col:25> '_Bool' lvalue Var 0x55af87f8d720 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55af87f917d0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55af87f91630 <col:42> 'int' lvalue Var 0x55af87f8daf0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55af87f917b0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55af87f91780 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55af87f916f0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55af87f916a8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55af87f91690 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55af87f91650 <col:55> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55af87f916d8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55af87f916c0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55af87f91670 <col:73> '_Bool' lvalue Var 0x55af87f8d900 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55af87f91750 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55af87f91710 <col:90> 'int' lvalue Var 0x55af87f8dbe8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55af87f91768 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55af87f91730 <col:102> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
|   |-BinaryOperator 0x55af87f91a20 <line:761:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55af87f91838 <col:3> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55af87f91a08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55af87f919d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55af87f918f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55af87f918b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55af87f91898 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55af87f91858 <col:20> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55af87f918e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55af87f918c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55af87f91878 <col:38> '_Bool' lvalue Var 0x55af87f8d720 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55af87f91990 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55af87f91948 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55af87f91918 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55af87f919c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55af87f919a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55af87f91970 <col:66> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55af87f91d08 <line:762:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55af87f91a40 <col:3> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55af87f91cf0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55af87f91cc0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55af87f91be0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55af87f91b00 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55af87f91ab8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55af87f91aa0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55af87f91a60 <col:20> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55af87f91ae8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55af87f91ad0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55af87f91a80 <col:38> '_Bool' lvalue Var 0x55af87f8d720 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55af87f91bc0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55af87f91b78 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55af87f91b60 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55af87f91b20 <col:56> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55af87f91ba8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55af87f91b90 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55af87f91b40 <col:74> '_Bool' lvalue Var 0x55af87f8d900 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55af87f91c78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55af87f91c30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55af87f91c00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55af87f91ca8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55af87f91c90 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55af87f91c58 <col:102> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55af87f91f10 <line:763:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55af87f91d28 <col:3> '_Bool' lvalue Var 0x55af87f8d720 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55af87f91ef8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55af87f91ec8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55af87f91de8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55af87f91da0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55af87f91d88 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55af87f91d48 <col:20> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55af87f91dd0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55af87f91db8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55af87f91d68 <col:38> '_Bool' lvalue Var 0x55af87f8d720 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55af87f91e80 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55af87f91e38 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55af87f91e08 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55af87f91eb0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55af87f91e98 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55af87f91e60 <col:66> '_Bool' lvalue Var 0x55af87f8d720 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55af87f92218 <line:764:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55af87f91f30 <col:3> '_Bool' lvalue Var 0x55af87f8d900 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55af87f92200 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55af87f921d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55af87f920f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55af87f92010 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55af87f91fc8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55af87f91fb0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55af87f91f70 <col:20> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55af87f91ff8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55af87f91fe0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55af87f91f90 <col:38> '_Bool' lvalue Var 0x55af87f8d720 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55af87f920d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55af87f92088 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55af87f92070 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55af87f92030 <col:56> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55af87f920b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55af87f920a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55af87f92050 <col:74> '_Bool' lvalue Var 0x55af87f8d900 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55af87f92188 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55af87f92140 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55af87f92110 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55af87f921b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55af87f921a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55af87f92168 <col:102> '_Bool' lvalue Var 0x55af87f8d900 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55af87f92270 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55af87f92258 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55af87f92238 <col:3> 'void ()' Function 0x55af87f33570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55af87f922c8 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55af87f922b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55af87f92290 <col:3> 'void ()' Function 0x55af87f334b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55af87f92380 <line:767:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55af87f922e8 <col:3> 'int' lvalue Var 0x55af87f8c740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55af87f92360 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55af87f92348 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55af87f92308 <col:22> 'int' lvalue Var 0x55af87f8c740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55af87f92328 <col:41> 'int' 1
|   |-CallExpr 0x55af87f923d8 <line:768:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55af87f923c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55af87f923a0 <col:3> 'void ()' Function 0x55af87f33570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55af87f92450 <line:769:3, col:36>
|     `-CallExpr 0x55af87f92430 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55af87f92418 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55af87f923f8 <col:10> 'void *(void)' Function 0x55af87f32fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55af87f925a8 prev 0x55af87f8c3c0 <line:771:1, line:805:1> line:771:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55af87f92510 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55af87f96288 <line:772:1, line:805:1>
|   |-CallExpr 0x55af87f92688 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55af87f92670 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55af87f92650 <col:3> 'void ()' Function 0x55af87f334b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55af87f92720 <line:774:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55af87f926a8 <col:3> '_Bool' lvalue Var 0x55af87f8ddf8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55af87f92700 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55af87f926e8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55af87f926c8 <col:19> '_Bool (void)' Function 0x55af87f32c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55af87f927b8 <line:775:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55af87f92740 <col:3> '_Bool' lvalue Var 0x55af87f8df30 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55af87f92798 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55af87f92780 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55af87f92760 <col:19> '_Bool (void)' Function 0x55af87f32c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55af87f92830 <line:776:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55af87f927d8 <col:3> '_Bool' lvalue Var 0x55af87f8d538 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55af87f92818 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55af87f927f8 <col:21> '_Bool' lvalue Var 0x55af87f8df30 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55af87f928a8 <line:777:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55af87f92850 <col:3> 'int' lvalue Var 0x55af87f8d5b8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55af87f92890 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55af87f92870 <col:15> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
|   |-BinaryOperator 0x55af87f92ce0 <line:778:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55af87f928c8 <col:3> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
|   | `-ConditionalOperator 0x55af87f92cb0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55af87f92ad8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55af87f929f8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55af87f92920 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55af87f92908 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55af87f928e8 <col:8> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55af87f929d8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55af87f92970 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55af87f92958 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55af87f92938 <col:27> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x55af87f929c0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55af87f929a8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55af87f92988 <col:46> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55af87f92ab8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55af87f92a50 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55af87f92a38 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55af87f92a18 <col:65> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x55af87f92aa0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55af87f92a88 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55af87f92a68 <col:84> '_Bool' lvalue Var 0x55af87f8d978 'x$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55af87f92c98 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55af87f92af8 <col:101> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
|   |   `-ParenExpr 0x55af87f92c78 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55af87f92c48 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55af87f92bb8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55af87f92b70 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55af87f92b58 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55af87f92b18 <col:106> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55af87f92ba0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55af87f92b88 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55af87f92b38 <col:124> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55af87f92c18 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55af87f92bd8 <col:141> 'int' lvalue Var 0x55af87f8daf0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55af87f92c30 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55af87f92bf8 <col:153> 'int' lvalue Var 0x55af87f8dbe8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55af87f93200 <line:779:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55af87f92d00 <col:3> 'int' lvalue Var 0x55af87f8daf0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55af87f931d0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55af87f931a0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55af87f93188 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55af87f92d20 <col:15> '_Bool' lvalue Var 0x55af87f8df30 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55af87f931b8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55af87f92d40 <col:31> 'int' lvalue Var 0x55af87f8daf0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55af87f93168 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55af87f93138 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55af87f92f50 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55af87f92e70 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55af87f92d98 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55af87f92d80 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55af87f92d60 <col:45> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55af87f92e50 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55af87f92de8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55af87f92dd0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55af87f92db0 <col:64> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55af87f92e38 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55af87f92e20 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55af87f92e00 <col:83> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55af87f92f30 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55af87f92ec8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55af87f92eb0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55af87f92e90 <col:102> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55af87f92f18 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55af87f92f00 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55af87f92ee0 <col:121> '_Bool' lvalue Var 0x55af87f8d978 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55af87f93120 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55af87f92f80 <col:138> 'int' lvalue Var 0x55af87f8daf0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55af87f93100 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55af87f930d0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55af87f93040 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55af87f92ff8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55af87f92fe0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55af87f92fa0 <col:151> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55af87f93028 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55af87f93010 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55af87f92fc0 <col:169> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55af87f930a0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55af87f93060 <col:186> 'int' lvalue Var 0x55af87f8daf0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55af87f930b8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55af87f93080 <col:198> 'int' lvalue Var 0x55af87f8daf0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55af87f93710 <line:780:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55af87f93220 <col:3> 'int' lvalue Var 0x55af87f8dbe8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55af87f936e0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55af87f936b0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55af87f93698 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55af87f93240 <col:15> '_Bool' lvalue Var 0x55af87f8df30 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55af87f936c8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55af87f93260 <col:31> 'int' lvalue Var 0x55af87f8dbe8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55af87f93678 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55af87f93648 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55af87f93470 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55af87f93390 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55af87f932b8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55af87f932a0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55af87f93280 <col:45> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55af87f93370 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55af87f93308 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55af87f932f0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55af87f932d0 <col:64> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55af87f93358 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55af87f93340 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55af87f93320 <col:83> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55af87f93450 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55af87f933e8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55af87f933d0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55af87f933b0 <col:102> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55af87f93438 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55af87f93420 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55af87f93400 <col:121> '_Bool' lvalue Var 0x55af87f8d978 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55af87f93630 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55af87f93490 <col:138> 'int' lvalue Var 0x55af87f8dbe8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55af87f93610 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55af87f935e0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55af87f93550 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55af87f93508 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55af87f934f0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55af87f934b0 <col:151> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55af87f93538 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55af87f93520 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55af87f934d0 <col:169> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55af87f935b0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55af87f93570 <col:186> 'int' lvalue Var 0x55af87f8dbe8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55af87f935c8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55af87f93590 <col:198> 'int' lvalue Var 0x55af87f8dbe8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55af87f93cb8 <line:781:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55af87f93730 <col:3> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55af87f93ca0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55af87f93c70 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55af87f93c28 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55af87f93c10 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55af87f93750 <col:20> '_Bool' lvalue Var 0x55af87f8df30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55af87f93c58 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55af87f93c40 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55af87f93770 <col:36> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55af87f93bf0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55af87f93bc0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55af87f93980 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55af87f938a0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55af87f937c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55af87f937b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55af87f93790 <col:55> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55af87f93880 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55af87f93818 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55af87f93800 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55af87f937e0 <col:74> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55af87f93868 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55af87f93850 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55af87f93830 <col:93> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55af87f93960 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55af87f938f8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55af87f938e0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55af87f938c0 <col:112> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55af87f93948 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55af87f93930 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55af87f93910 <col:131> '_Bool' lvalue Var 0x55af87f8d978 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55af87f93ba8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55af87f93b90 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55af87f939a0 <col:148> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55af87f93b70 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55af87f93b40 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55af87f93a60 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55af87f93a18 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55af87f93a00 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55af87f939c0 <col:166> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55af87f93a48 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55af87f93a30 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55af87f939e0 <col:184> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55af87f93af8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55af87f93ab0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55af87f93a80 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55af87f93b28 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55af87f93b10 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55af87f93ad8 <col:212> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55af87f942a8 <line:782:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55af87f93cd8 <col:3> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55af87f94290 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55af87f94260 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55af87f94218 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55af87f94200 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55af87f93cf8 <col:20> '_Bool' lvalue Var 0x55af87f8df30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55af87f94248 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55af87f94230 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55af87f93d18 <col:36> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55af87f941e0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55af87f941b0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55af87f93f28 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55af87f93e48 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55af87f93d70 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55af87f93d58 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55af87f93d38 <col:55> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55af87f93e28 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55af87f93dc0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55af87f93da8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55af87f93d88 <col:74> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55af87f93e10 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55af87f93df8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55af87f93dd8 <col:93> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55af87f93f08 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55af87f93ea0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55af87f93e88 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55af87f93e68 <col:112> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55af87f93ef0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55af87f93ed8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55af87f93eb8 <col:131> '_Bool' lvalue Var 0x55af87f8d978 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55af87f94198 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55af87f94180 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55af87f93f48 <col:148> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55af87f94160 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55af87f94130 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55af87f94030 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55af87f93fe8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55af87f93fd0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55af87f93f90 <col:166> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55af87f94018 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55af87f94000 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55af87f93fb0 <col:184> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55af87f94100 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55af87f94080 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55af87f94050 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55af87f94118 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55af87f940d8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55af87f940a8 <col:219> 'int' 0
|   |-BinaryOperator 0x55af87f94850 <line:783:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55af87f942c8 <col:3> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55af87f94838 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55af87f94808 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55af87f947c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55af87f947a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55af87f942e8 <col:20> '_Bool' lvalue Var 0x55af87f8df30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55af87f947f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55af87f947d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55af87f94308 <col:36> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x55af87f94788 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55af87f94758 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55af87f94518 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55af87f94438 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55af87f94360 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55af87f94348 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55af87f94328 <col:55> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55af87f94418 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55af87f943b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55af87f94398 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55af87f94378 <col:74> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55af87f94400 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55af87f943e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55af87f943c8 <col:93> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55af87f944f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55af87f94490 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55af87f94478 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55af87f94458 <col:112> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55af87f944e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55af87f944c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55af87f944a8 <col:131> '_Bool' lvalue Var 0x55af87f8d978 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55af87f94740 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55af87f94728 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55af87f94538 <col:148> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x55af87f94708 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55af87f946d8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55af87f945f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55af87f945b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55af87f94598 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55af87f94558 <col:166> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55af87f945e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55af87f945c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55af87f94578 <col:184> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55af87f94690 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55af87f94648 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55af87f94618 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55af87f946c0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55af87f946a8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55af87f94670 <col:212> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55af87f94e18 <line:784:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55af87f94870 <col:3> '_Bool' lvalue Var 0x55af87f8d978 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55af87f94e00 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55af87f94dd0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55af87f94d88 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55af87f94d70 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55af87f94890 <col:20> '_Bool' lvalue Var 0x55af87f8df30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55af87f94db8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55af87f94da0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55af87f948b0 <col:36> '_Bool' lvalue Var 0x55af87f8d978 'x$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x55af87f94d50 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55af87f94d20 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55af87f94ac0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55af87f949e0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55af87f94908 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55af87f948f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55af87f948d0 <col:55> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55af87f949c0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55af87f94958 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55af87f94940 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55af87f94920 <col:74> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55af87f949a8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55af87f94990 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55af87f94970 <col:93> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55af87f94aa0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55af87f94a38 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55af87f94a20 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55af87f94a00 <col:112> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55af87f94a88 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55af87f94a70 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55af87f94a50 <col:131> '_Bool' lvalue Var 0x55af87f8d978 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55af87f94d08 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55af87f94cf0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55af87f94ae0 <col:148> '_Bool' lvalue Var 0x55af87f8d978 'x$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x55af87f94cd0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55af87f94ca0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55af87f94ba0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55af87f94b58 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55af87f94b40 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55af87f94b00 <col:166> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55af87f94b88 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55af87f94b70 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55af87f94b20 <col:184> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55af87f94c70 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55af87f94bf0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55af87f94bc0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55af87f94c88 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55af87f94c48 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55af87f94c18 <col:219> 'int' 0
|   |-BinaryOperator 0x55af87f94eb0 <line:785:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55af87f94e38 <col:3> '_Bool' lvalue Var 0x55af87f8cf20 '__unbuffered_p2_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55af87f94e88 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55af87f94e58 <col:45> 'int' 1
|   |-BinaryOperator 0x55af87f94f28 <line:786:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x55af87f94ed0 <col:3> 'int *' lvalue Var 0x55af87f8cfa0 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x55af87f94f10 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x55af87f94ef0 <col:43> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
|   |-BinaryOperator 0x55af87f94fb8 <line:787:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55af87f94f48 <col:3> 'int' lvalue Var 0x55af87f8c980 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55af87f94fa0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55af87f94f68 <col:25> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
|   |-BinaryOperator 0x55af87f950e8 <line:788:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55af87f94fd8 <col:3> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
|   | `-ConditionalOperator 0x55af87f950b8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55af87f95070 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55af87f95058 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55af87f94ff8 <col:7> '_Bool' lvalue Var 0x55af87f8d538 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55af87f95088 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55af87f95018 <col:25> 'int' lvalue Var 0x55af87f8d5b8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55af87f950a0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55af87f95038 <col:37> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
|   |-BinaryOperator 0x55af87f95180 <line:789:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55af87f95108 <col:3> '_Bool' lvalue Var 0x55af87f8d538 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55af87f95158 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55af87f95128 <col:28> 'int' 0
|   |-CallExpr 0x55af87f951d8 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55af87f951c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55af87f951a0 <col:3> 'void ()' Function 0x55af87f33570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55af87f95230 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55af87f95218 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55af87f951f8 <col:3> 'void ()' Function 0x55af87f334b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55af87f952a8 <line:792:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55af87f95250 <col:3> 'int' lvalue Var 0x55af87f8d290 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x55af87f95290 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55af87f95270 <col:25> 'int' lvalue Var 0x55af87f8dd60 'y' 'int'
|   |-CallExpr 0x55af87f95300 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55af87f952e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55af87f952c8 <col:3> 'void ()' Function 0x55af87f33570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55af87f95358 <line:794:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55af87f95340 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55af87f95320 <col:3> 'void ()' Function 0x55af87f334b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55af87f95640 <line:795:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55af87f95378 <col:3> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
|   | `-ConditionalOperator 0x55af87f95610 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55af87f95438 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55af87f953f0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55af87f953d8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55af87f95398 <col:7> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55af87f95420 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55af87f95408 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55af87f953b8 <col:25> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55af87f955f8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55af87f95458 <col:42> 'int' lvalue Var 0x55af87f8daf0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55af87f955d8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55af87f955a8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55af87f95518 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55af87f954d0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55af87f954b8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55af87f95478 <col:55> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55af87f95500 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55af87f954e8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55af87f95498 <col:73> '_Bool' lvalue Var 0x55af87f8d978 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55af87f95578 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55af87f95538 <col:90> 'int' lvalue Var 0x55af87f8dbe8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55af87f95590 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55af87f95558 <col:102> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
|   |-BinaryOperator 0x55af87f95848 <line:796:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55af87f95660 <col:3> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55af87f95830 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55af87f95800 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55af87f95720 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55af87f956d8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55af87f956c0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55af87f95680 <col:20> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55af87f95708 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55af87f956f0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55af87f956a0 <col:38> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55af87f957b8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55af87f95770 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55af87f95740 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55af87f957e8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55af87f957d0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55af87f95798 <col:66> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55af87f95b30 <line:797:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55af87f95868 <col:3> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55af87f95b18 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55af87f95ae8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55af87f95a08 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55af87f95928 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55af87f958e0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55af87f958c8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55af87f95888 <col:20> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55af87f95910 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55af87f958f8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55af87f958a8 <col:38> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55af87f959e8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55af87f959a0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55af87f95988 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55af87f95948 <col:56> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55af87f959d0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55af87f959b8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55af87f95968 <col:74> '_Bool' lvalue Var 0x55af87f8d978 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55af87f95aa0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55af87f95a58 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55af87f95a28 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55af87f95ad0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55af87f95ab8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55af87f95a80 <col:102> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55af87f95d38 <line:798:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55af87f95b50 <col:3> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55af87f95d20 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55af87f95cf0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55af87f95c10 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55af87f95bc8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55af87f95bb0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55af87f95b70 <col:20> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55af87f95bf8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55af87f95be0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55af87f95b90 <col:38> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55af87f95ca8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55af87f95c60 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55af87f95c30 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55af87f95cd8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55af87f95cc0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55af87f95c88 <col:66> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55af87f96040 <line:799:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55af87f95d58 <col:3> '_Bool' lvalue Var 0x55af87f8d978 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55af87f96028 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55af87f95ff8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55af87f95ef8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55af87f95e18 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55af87f95dd0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55af87f95db8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55af87f95d78 <col:20> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55af87f95e00 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55af87f95de8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55af87f95d98 <col:38> '_Bool' lvalue Var 0x55af87f8d798 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55af87f95ed8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55af87f95e90 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55af87f95e78 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55af87f95e38 <col:56> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55af87f95ec0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55af87f95ea8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55af87f95e58 <col:74> '_Bool' lvalue Var 0x55af87f8d978 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55af87f95fb0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55af87f95f48 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55af87f95f18 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55af87f95fe0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55af87f95fc8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55af87f95f70 <col:102> '_Bool' lvalue Var 0x55af87f8d978 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55af87f96098 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55af87f96080 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55af87f96060 <col:3> 'void ()' Function 0x55af87f33570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55af87f960f0 <line:801:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55af87f960d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55af87f960b8 <col:3> 'void ()' Function 0x55af87f334b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55af87f961a8 <line:802:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55af87f96110 <col:3> 'int' lvalue Var 0x55af87f8c740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55af87f96188 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55af87f96170 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55af87f96130 <col:22> 'int' lvalue Var 0x55af87f8c740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55af87f96150 <col:41> 'int' 1
|   |-CallExpr 0x55af87f96200 <line:803:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55af87f961e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55af87f961c8 <col:3> 'void ()' Function 0x55af87f33570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55af87f96278 <line:804:3, col:36>
|     `-CallExpr 0x55af87f96258 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55af87f96240 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55af87f96220 <col:10> 'void *(void)' Function 0x55af87f32fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55af87f963b8 prev 0x55af87f8c488 <line:806:1, line:808:1> line:806:6 fence 'void ()'
| `-CompoundStmt 0x55af87f96458 <line:807:1, line:808:1>
|-FunctionDecl 0x55af87f96488 prev 0x55af87f8c548 <line:809:1, line:811:1> line:809:6 isync 'void ()'
| `-CompoundStmt 0x55af87f96528 <line:810:1, line:811:1>
|-FunctionDecl 0x55af87f96558 prev 0x55af87f8c608 <line:812:1, line:814:1> line:812:6 lwfence 'void ()'
| `-CompoundStmt 0x55af87f965f8 <line:813:1, line:814:1>
`-FunctionDecl 0x55af87f96668 <line:815:1, line:854:1> line:815:5 main 'int ()'
  `-CompoundStmt 0x55af87f9b000 <line:816:1, line:854:1>
    |-DeclStmt 0x55af87f96780 <line:817:3, col:18>
    | `-VarDecl 0x55af87f96718 <col:3, col:13> col:13 used t2383 'pthread_t':'unsigned long'
    |-CallExpr 0x55af87f96988 <line:818:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55af87f96970 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55af87f96798 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55af87f739d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55af87f967d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55af87f967b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55af87f96718 't2383' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55af87f969c8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55af87f96850 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55af87f96828 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55af87f967f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55af87f969e0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55af87f96870 <col:39> 'void *(void *)' Function 0x55af87f8e048 'P0' 'void *(void *)'
    | `-ParenExpr 0x55af87f968f0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55af87f968c8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55af87f96890 <col:52> 'int' 0
    |-DeclStmt 0x55af87f96a70 <line:819:3, col:18>
    | `-VarDecl 0x55af87f96a08 <col:3, col:13> col:13 used t2384 'pthread_t':'unsigned long'
    |-CallExpr 0x55af87f96c18 <line:820:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55af87f96c00 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55af87f96a88 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55af87f739d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55af87f96ac8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55af87f96aa8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55af87f96a08 't2384' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55af87f96c58 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55af87f96b40 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55af87f96b18 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55af87f96ae0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55af87f96c70 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55af87f96b60 <col:39> 'void *(void *)' Function 0x55af87f91230 'P1' 'void *(void *)'
    | `-ParenExpr 0x55af87f96be0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55af87f96bb8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55af87f96b80 <col:52> 'int' 0
    |-DeclStmt 0x55af87f96d00 <line:821:3, col:18>
    | `-VarDecl 0x55af87f96c98 <col:3, col:13> col:13 used t2385 'pthread_t':'unsigned long'
    |-CallExpr 0x55af87f96ea8 <line:822:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55af87f96e90 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55af87f96d18 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55af87f739d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55af87f96d58 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55af87f96d38 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55af87f96c98 't2385' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55af87f96ee8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55af87f96dd0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55af87f96da8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55af87f96d70 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55af87f96f00 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55af87f96df0 <col:39> 'void *(void *)' Function 0x55af87f925a8 'P2' 'void *(void *)'
    | `-ParenExpr 0x55af87f96e70 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55af87f96e48 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55af87f96e10 <col:52> 'int' 0
    |-CallExpr 0x55af87f96f50 <line:823:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55af87f96f38 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55af87f96f18 <col:3> 'void ()' Function 0x55af87f334b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55af87f97030 <line:824:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55af87f96f70 <col:3> '_Bool' lvalue Var 0x55af87f8d328 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55af87f97018 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55af87f96ff8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55af87f96fe0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55af87f96f90 <col:21> 'int' lvalue Var 0x55af87f8c740 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55af87f96fc0 <col:41> 'int' 3
    |-CallExpr 0x55af87f97088 <line:825:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55af87f97070 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55af87f97050 <col:3> 'void ()' Function 0x55af87f33570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55af87f97138 <line:826:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55af87f97120 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55af87f970a8 <col:3> 'void (int)' Function 0x55af87f32e50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55af87f97178 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55af87f97160 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55af87f970c8 <col:21> '_Bool' lvalue Var 0x55af87f8d328 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55af87f971c8 <line:827:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55af87f971b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55af87f97190 <col:3> 'void ()' Function 0x55af87f334b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55af87f974b0 <line:828:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55af87f971e8 <col:3> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
    | `-ConditionalOperator 0x55af87f97480 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55af87f972a8 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55af87f97260 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55af87f97248 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55af87f97208 <col:7> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55af87f97290 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55af87f97278 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55af87f97228 <col:25> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55af87f97468 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55af87f972c8 <col:42> 'int' lvalue Var 0x55af87f8daf0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55af87f97448 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55af87f97418 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55af87f97388 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55af87f97340 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55af87f97328 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55af87f972e8 <col:55> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55af87f97370 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55af87f97358 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55af87f97308 <col:73> '_Bool' lvalue Var 0x55af87f8d810 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55af87f973e8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55af87f973a8 <col:90> 'int' lvalue Var 0x55af87f8dbe8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55af87f97400 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55af87f973c8 <col:102> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
    |-BinaryOperator 0x55af87f976b8 <line:829:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55af87f974d0 <col:3> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55af87f976a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55af87f97670 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55af87f97590 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55af87f97548 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55af87f97530 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55af87f974f0 <col:20> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55af87f97578 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55af87f97560 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55af87f97510 <col:38> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55af87f97628 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55af87f975e0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55af87f975b0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55af87f97658 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55af87f97640 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55af87f97608 <col:66> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55af87f979a0 <line:830:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55af87f976d8 <col:3> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55af87f97988 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55af87f97958 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55af87f97878 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55af87f97798 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55af87f97750 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55af87f97738 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55af87f976f8 <col:20> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55af87f97780 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55af87f97768 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55af87f97718 <col:38> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55af87f97858 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55af87f97810 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55af87f977f8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55af87f977b8 <col:56> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55af87f97840 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55af87f97828 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55af87f977d8 <col:74> '_Bool' lvalue Var 0x55af87f8d810 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55af87f97910 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55af87f978c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55af87f97898 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55af87f97940 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55af87f97928 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55af87f978f0 <col:102> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55af87f97ba8 <line:831:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55af87f979c0 <col:3> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55af87f97b90 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55af87f97b60 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55af87f97a80 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55af87f97a38 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55af87f97a20 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55af87f979e0 <col:20> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55af87f97a68 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55af87f97a50 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55af87f97a00 <col:38> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55af87f97b18 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55af87f97ad0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55af87f97aa0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55af87f97b48 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55af87f97b30 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55af87f97af8 <col:66> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55af87f97e90 <line:832:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55af87f97bc8 <col:3> '_Bool' lvalue Var 0x55af87f8d810 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55af87f97e78 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55af87f97e48 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55af87f97d68 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55af87f97c88 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55af87f97c40 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55af87f97c28 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55af87f97be8 <col:20> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55af87f97c70 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55af87f97c58 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55af87f97c08 <col:38> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55af87f97d48 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55af87f97d00 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55af87f97ce8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55af87f97ca8 <col:56> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55af87f97d30 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55af87f97d18 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55af87f97cc8 <col:74> '_Bool' lvalue Var 0x55af87f8d810 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55af87f97e00 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55af87f97db8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55af87f97d88 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55af87f97e30 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55af87f97e18 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55af87f97de0 <col:102> '_Bool' lvalue Var 0x55af87f8d810 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55af87f97ee8 <line:833:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55af87f97ed0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55af87f97eb0 <col:3> 'void ()' Function 0x55af87f33570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55af87f97f40 <line:834:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55af87f97f28 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55af87f97f08 <col:3> 'void ()' Function 0x55af87f334b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55af87f97ff0 <line:835:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55af87f97f60 <col:3> '_Bool' lvalue Var 0x55af87f8ddf8 'weak$$choice0' '_Bool'
    | `-CallExpr 0x55af87f97fd0 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55af87f97fa0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55af87f97f80 <col:19> '_Bool (void)' Function 0x55af87f32c80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55af87f98088 <line:836:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55af87f98010 <col:3> '_Bool' lvalue Var 0x55af87f8df30 'weak$$choice2' '_Bool'
    | `-CallExpr 0x55af87f98068 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55af87f98050 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55af87f98030 <col:19> '_Bool (void)' Function 0x55af87f32c80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55af87f98100 <line:837:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x55af87f980a8 <col:3> '_Bool' lvalue Var 0x55af87f8d538 'x$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x55af87f980e8 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x55af87f980c8 <col:21> '_Bool' lvalue Var 0x55af87f8df30 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x55af87f98178 <line:838:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55af87f98120 <col:3> 'int' lvalue Var 0x55af87f8d5b8 'x$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x55af87f98160 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55af87f98140 <col:15> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
    |-BinaryOperator 0x55af87f985b0 <line:839:3, col:162> 'int' '='
    | |-DeclRefExpr 0x55af87f98198 <col:3> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
    | `-ConditionalOperator 0x55af87f98580 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x55af87f983a8 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x55af87f982c8 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x55af87f981f0 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x55af87f981d8 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x55af87f981b8 <col:8> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x55af87f982a8 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x55af87f98240 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x55af87f98228 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x55af87f98208 <col:27> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x55af87f98290 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x55af87f98278 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x55af87f98258 <col:46> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x55af87f98388 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x55af87f98320 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x55af87f98308 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55af87f982e8 <col:65> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x55af87f98370 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x55af87f98358 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x55af87f98338 <col:84> '_Bool' lvalue Var 0x55af87f8d810 'x$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55af87f98568 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55af87f983c8 <col:101> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
    |   `-ParenExpr 0x55af87f98548 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x55af87f98518 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x55af87f98488 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55af87f98440 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55af87f98428 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55af87f983e8 <col:106> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55af87f98470 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55af87f98458 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55af87f98408 <col:124> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55af87f984e8 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55af87f984a8 <col:141> 'int' lvalue Var 0x55af87f8daf0 'x$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x55af87f98500 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55af87f984c8 <col:153> 'int' lvalue Var 0x55af87f8dbe8 'x$w_buff1' 'int'
    |-BinaryOperator 0x55af87f98ac0 <line:840:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55af87f985d0 <col:3> 'int' lvalue Var 0x55af87f8daf0 'x$w_buff0' 'int'
    | `-ConditionalOperator 0x55af87f98a90 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55af87f98a60 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55af87f98a48 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55af87f985f0 <col:15> '_Bool' lvalue Var 0x55af87f8df30 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55af87f98a78 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55af87f98610 <col:31> 'int' lvalue Var 0x55af87f8daf0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55af87f98a28 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55af87f989f8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55af87f98820 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55af87f98740 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55af87f98668 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55af87f98650 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55af87f98630 <col:45> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55af87f98720 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55af87f986b8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55af87f986a0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55af87f98680 <col:64> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55af87f98708 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55af87f986f0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55af87f986d0 <col:83> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55af87f98800 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55af87f98798 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55af87f98780 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55af87f98760 <col:102> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55af87f987e8 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55af87f987d0 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55af87f987b0 <col:121> '_Bool' lvalue Var 0x55af87f8d810 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55af87f989e0 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55af87f98840 <col:138> 'int' lvalue Var 0x55af87f8daf0 'x$w_buff0' 'int'
    |       `-ParenExpr 0x55af87f989c0 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55af87f98990 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55af87f98900 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55af87f988b8 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55af87f988a0 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55af87f98860 <col:151> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55af87f988e8 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55af87f988d0 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55af87f98880 <col:169> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55af87f98960 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55af87f98920 <col:186> 'int' lvalue Var 0x55af87f8daf0 'x$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x55af87f98978 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55af87f98940 <col:198> 'int' lvalue Var 0x55af87f8daf0 'x$w_buff0' 'int'
    |-BinaryOperator 0x55af87f98fe0 <line:841:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55af87f98ae0 <col:3> 'int' lvalue Var 0x55af87f8dbe8 'x$w_buff1' 'int'
    | `-ConditionalOperator 0x55af87f98fa0 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55af87f98f70 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55af87f98f58 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55af87f98b00 <col:15> '_Bool' lvalue Var 0x55af87f8df30 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55af87f98f88 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55af87f98b20 <col:31> 'int' lvalue Var 0x55af87f8dbe8 'x$w_buff1' 'int'
    |   `-ParenExpr 0x55af87f98f38 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55af87f98f08 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55af87f98d30 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55af87f98c50 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55af87f98b78 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55af87f98b60 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55af87f98b40 <col:45> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55af87f98c30 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55af87f98bc8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55af87f98bb0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55af87f98b90 <col:64> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55af87f98c18 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55af87f98c00 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55af87f98be0 <col:83> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55af87f98d10 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55af87f98ca8 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55af87f98c90 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55af87f98c70 <col:102> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55af87f98cf8 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55af87f98ce0 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55af87f98cc0 <col:121> '_Bool' lvalue Var 0x55af87f8d810 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55af87f98ef0 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55af87f98d50 <col:138> 'int' lvalue Var 0x55af87f8dbe8 'x$w_buff1' 'int'
    |       `-ParenExpr 0x55af87f98ed0 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55af87f98ea0 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55af87f98e10 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55af87f98dc8 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55af87f98db0 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55af87f98d70 <col:151> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55af87f98df8 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55af87f98de0 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55af87f98d90 <col:169> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55af87f98e70 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55af87f98e30 <col:186> 'int' lvalue Var 0x55af87f8dbe8 'x$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x55af87f98e88 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55af87f98e50 <col:198> 'int' lvalue Var 0x55af87f8dbe8 'x$w_buff1' 'int'
    |-BinaryOperator 0x55af87f99588 <line:842:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55af87f99000 <col:3> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55af87f99570 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55af87f99540 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55af87f994f8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55af87f994e0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55af87f99020 <col:20> '_Bool' lvalue Var 0x55af87f8df30 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55af87f99528 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55af87f99510 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55af87f99040 <col:36> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x55af87f994c0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55af87f99490 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55af87f99250 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55af87f99170 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55af87f99098 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55af87f99080 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55af87f99060 <col:55> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55af87f99150 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55af87f990e8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55af87f990d0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55af87f990b0 <col:74> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55af87f99138 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55af87f99120 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55af87f99100 <col:93> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55af87f99230 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55af87f991c8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55af87f991b0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55af87f99190 <col:112> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55af87f99218 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55af87f99200 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55af87f991e0 <col:131> '_Bool' lvalue Var 0x55af87f8d810 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55af87f99478 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55af87f99460 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55af87f99270 <col:148> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x55af87f99440 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55af87f99410 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55af87f99330 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55af87f992e8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55af87f992d0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55af87f99290 <col:166> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55af87f99318 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55af87f99300 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55af87f992b0 <col:184> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55af87f993c8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55af87f99380 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55af87f99350 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55af87f993f8 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55af87f993e0 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55af87f993a8 <col:212> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55af87f99b50 <line:843:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55af87f995a8 <col:3> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55af87f99b38 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55af87f99b08 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55af87f99ac0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55af87f99aa8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55af87f995c8 <col:20> '_Bool' lvalue Var 0x55af87f8df30 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55af87f99af0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55af87f99ad8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55af87f995e8 <col:36> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x55af87f99a88 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55af87f99a58 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55af87f997f8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55af87f99718 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55af87f99640 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55af87f99628 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55af87f99608 <col:55> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55af87f996f8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55af87f99690 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55af87f99678 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55af87f99658 <col:74> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55af87f996e0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55af87f996c8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55af87f996a8 <col:93> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55af87f997d8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55af87f99770 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55af87f99758 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55af87f99738 <col:112> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55af87f997c0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55af87f997a8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55af87f99788 <col:131> '_Bool' lvalue Var 0x55af87f8d810 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55af87f99a40 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55af87f99a28 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55af87f99818 <col:148> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x55af87f99a08 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55af87f999d8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55af87f998d8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55af87f99890 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55af87f99878 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55af87f99838 <col:166> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55af87f998c0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55af87f998a8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55af87f99858 <col:184> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55af87f999a8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55af87f99928 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55af87f998f8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55af87f999c0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55af87f99980 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55af87f99950 <col:219> 'int' 0
    |-BinaryOperator 0x55af87f9a118 <line:844:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55af87f99b70 <col:3> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55af87f9a100 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55af87f9a0d0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55af87f9a088 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55af87f9a070 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55af87f99b90 <col:20> '_Bool' lvalue Var 0x55af87f8df30 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55af87f9a0b8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55af87f9a0a0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55af87f99bb0 <col:36> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x55af87f9a050 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55af87f9a020 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55af87f99dc0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55af87f99ce0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55af87f99c08 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55af87f99bf0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55af87f99bd0 <col:55> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55af87f99cc0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55af87f99c58 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55af87f99c40 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55af87f99c20 <col:74> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55af87f99ca8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55af87f99c90 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55af87f99c70 <col:93> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55af87f99da0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55af87f99d38 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55af87f99d20 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55af87f99d00 <col:112> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55af87f99d88 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55af87f99d70 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55af87f99d50 <col:131> '_Bool' lvalue Var 0x55af87f8d810 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55af87f9a008 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55af87f99ff0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55af87f99de0 <col:148> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x55af87f99fb0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55af87f99f80 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55af87f99ea0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55af87f99e58 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55af87f99e40 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55af87f99e00 <col:166> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55af87f99e88 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55af87f99e70 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55af87f99e20 <col:184> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55af87f99f38 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55af87f99ef0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55af87f99ec0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55af87f99f68 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55af87f99f50 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55af87f99f18 <col:212> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55af87f9a6e0 <line:845:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55af87f9a138 <col:3> '_Bool' lvalue Var 0x55af87f8d810 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55af87f9a6c8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55af87f9a698 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55af87f9a650 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55af87f9a638 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55af87f9a158 <col:20> '_Bool' lvalue Var 0x55af87f8df30 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55af87f9a680 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55af87f9a668 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55af87f9a178 <col:36> '_Bool' lvalue Var 0x55af87f8d810 'x$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x55af87f9a618 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55af87f9a5e8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55af87f9a388 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55af87f9a2a8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55af87f9a1d0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55af87f9a1b8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55af87f9a198 <col:55> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55af87f9a288 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55af87f9a220 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55af87f9a208 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55af87f9a1e8 <col:74> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55af87f9a270 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55af87f9a258 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55af87f9a238 <col:93> '_Bool' lvalue Var 0x55af87f8dc60 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55af87f9a368 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55af87f9a300 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55af87f9a2e8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55af87f9a2c8 <col:112> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55af87f9a350 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55af87f9a338 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55af87f9a318 <col:131> '_Bool' lvalue Var 0x55af87f8d810 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55af87f9a5d0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55af87f9a5b8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55af87f9a3a8 <col:148> '_Bool' lvalue Var 0x55af87f8d810 'x$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x55af87f9a598 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55af87f9a568 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55af87f9a468 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55af87f9a420 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55af87f9a408 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55af87f9a3c8 <col:166> '_Bool' lvalue Var 0x55af87f8db68 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55af87f9a450 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55af87f9a438 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55af87f9a3e8 <col:184> '_Bool' lvalue Var 0x55af87f8d630 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55af87f9a538 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55af87f9a4b8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55af87f9a488 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55af87f9a550 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55af87f9a510 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55af87f9a4e0 <col:219> 'int' 0
    |-BinaryOperator 0x55af87f9a778 <line:846:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55af87f9a700 <col:3> '_Bool' lvalue Var 0x55af87f8de70 'weak$$choice1' '_Bool'
    | `-CallExpr 0x55af87f9a758 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55af87f9a740 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55af87f9a720 <col:19> '_Bool (void)' Function 0x55af87f32c80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55af87f9a9b0 <line:847:3, col:140> 'int' '='
    | |-DeclRefExpr 0x55af87f9a798 <col:3> 'int' lvalue Var 0x55af87f8c980 '__unbuffered_p2_EAX' 'int'
    | `-ConditionalOperator 0x55af87f9a980 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x55af87f9a950 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55af87f9a938 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55af87f9a7b8 <col:25> '_Bool' lvalue Var 0x55af87f8cf20 '__unbuffered_p2_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x55af87f9a8f8 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x55af87f9a8c8 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x55af87f9a880 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x55af87f9a868 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55af87f9a7d8 <col:61> '_Bool' lvalue Var 0x55af87f8de70 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x55af87f9a898 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x55af87f9a830 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x55af87f9a818 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x55af87f9a7f8 <col:78> 'int *' lvalue Var 0x55af87f8cfa0 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x55af87f9a8b0 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55af87f9a848 <col:117> 'int' lvalue Var 0x55af87f8c980 '__unbuffered_p2_EAX' 'int'
    |   `-ImplicitCastExpr 0x55af87f9a968 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55af87f9a918 <col:140> 'int' lvalue Var 0x55af87f8c980 '__unbuffered_p2_EAX' 'int'
    |-BinaryOperator 0x55af87f9ac80 <line:848:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x55af87f9a9d0 <col:3> '_Bool' lvalue Var 0x55af87f8d3a0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55af87f9ac68 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55af87f9ac50 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55af87f9ac30 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x55af87f9ac10 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x55af87f9ab78 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x55af87f9aae0 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x55af87f9aa48 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55af87f9aa30 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55af87f9a9f0 <col:23> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
    |         | | | `-IntegerLiteral 0x55af87f9aa10 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x55af87f9aac0 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55af87f9aaa8 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55af87f9aa68 <col:33> 'int' lvalue Var 0x55af87f8c860 '__unbuffered_p0_EAX' 'int'
    |         | |   `-IntegerLiteral 0x55af87f9aa88 <col:56> 'int' 0
    |         | `-BinaryOperator 0x55af87f9ab58 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55af87f9ab40 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55af87f9ab00 <col:61> 'int' lvalue Var 0x55af87f8c980 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x55af87f9ab20 <col:84> 'int' 2
    |         `-BinaryOperator 0x55af87f9abf0 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x55af87f9abd8 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55af87f9ab98 <col:89> 'int' lvalue Var 0x55af87f8d290 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x55af87f9abb8 <col:112> 'int' 0
    |-BinaryOperator 0x55af87f9adb0 <line:849:3, col:37> 'int' '='
    | |-DeclRefExpr 0x55af87f9aca0 <col:3> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
    | `-ConditionalOperator 0x55af87f9ad80 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x55af87f9ad38 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55af87f9ad20 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55af87f9acc0 <col:7> '_Bool' lvalue Var 0x55af87f8d538 'x$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x55af87f9ad50 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55af87f9ace0 <col:25> 'int' lvalue Var 0x55af87f8d5b8 'x$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x55af87f9ad68 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55af87f9ad00 <col:37> 'int' lvalue Var 0x55af87f8d4a0 'x' 'int'
    |-BinaryOperator 0x55af87f9ae48 <line:850:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x55af87f9add0 <col:3> '_Bool' lvalue Var 0x55af87f8d538 'x$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x55af87f9ae20 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x55af87f9adf0 <col:28> 'int' 0
    |-CallExpr 0x55af87f9aea0 <line:851:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55af87f9ae88 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55af87f9ae68 <col:3> 'void ()' Function 0x55af87f33570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55af87f9af18 <line:852:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55af87f9af00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55af87f9aec0 <col:3> 'void (int)' Function 0x55af87f33238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55af87f9af58 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55af87f9af40 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55af87f9aee0 <col:21> '_Bool' lvalue Var 0x55af87f8d3a0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55af87f9af90 <line:853:3, col:10>
      `-IntegerLiteral 0x55af87f9af70 <col:10> 'int' 0
