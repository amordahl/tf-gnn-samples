TranslationUnitDecl 0x560daead2f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x560daead3848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x560daead3520 '__int128'
|-TypedefDecl 0x560daead38b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x560daead3540 'unsigned __int128'
|-TypedefDecl 0x560daead3bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x560daead3990 'struct __NSConstantString_tag'
|   `-Record 0x560daead3910 '__NSConstantString_tag'
|-TypedefDecl 0x560daead3c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x560daead3c20 'char *'
|   `-BuiltinType 0x560daead3020 'char'
|-TypedefDecl 0x560daeb12b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x560daead3f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x560daead3d40 'struct __va_list_tag'
|     `-Record 0x560daead3cc0 '__va_list_tag'
|-FunctionDecl 0x560daeb12ca0 <pthread-wmm/safe009_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x560daeb12bd0 <col:31> col:34 'int'
|-FunctionDecl 0x560daeb12e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x560daeb12f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x560daeb130d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x560daeb13048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x560daeb13308 <col:40, col:99>
|   |-IfStmt 0x560daeb132d8 <col:42, col:88>
|   | |-UnaryOperator 0x560daeb131b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x560daeb131a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x560daeb13180 <col:47> 'int' lvalue ParmVar 0x560daeb13048 'expression' 'int'
|   | `-CompoundStmt 0x560daeb132c0 <col:59, col:88>
|   |   `-LabelStmt 0x560daeb132a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x560daeb13238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x560daeb13220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x560daeb131d0 <col:68> 'void () __attribute__((noreturn))' Function 0x560daeb12f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x560daeb132f0 <col:89>
|   `-ReturnStmt 0x560daeb132f8 <col:91>
|-FunctionDecl 0x560daeb13350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x560daeb13410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x560daeb13790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560daeb134c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x560daeb13548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x560daeb135c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560daeb13648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560daeb13850 <line:10:22>
|-FunctionDecl 0x560daeb398a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560daeb138c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x560daeb13940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x560daeb139c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560daeb13a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560daeb39960 <line:13:22>
|-FunctionDecl 0x560daeb39c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560daeb399d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x560daeb39a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x560daeb39ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x560daeb39cc8 <line:15:22>
|-TypedefDecl 0x560daeb39d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x560daead30e0 'unsigned char'
|-TypedefDecl 0x560daeb39da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x560daead3100 'unsigned short'
|-TypedefDecl 0x560daeb39e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x560daead3120 'unsigned int'
|-TypedefDecl 0x560daeb39e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x560daead3140 'unsigned long'
|-TypedefDecl 0x560daeb39ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x560daead3040 'signed char'
|-TypedefDecl 0x560daeb39f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x560daead30e0 'unsigned char'
|-TypedefDecl 0x560daeb39fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x560daead3060 'short'
|-TypedefDecl 0x560daeb3a048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x560daead3100 'unsigned short'
|-TypedefDecl 0x560daeb3a0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x560daead3080 'int'
|-TypedefDecl 0x560daeb3a128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x560daead3120 'unsigned int'
|-TypedefDecl 0x560daeb3a198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x560daead30a0 'long'
|-TypedefDecl 0x560daeb3a208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x560daead3140 'unsigned long'
|-TypedefDecl 0x560daeb3a278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x560daead30a0 'long'
|-TypedefDecl 0x560daeb3a2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x560daead3140 'unsigned long'
|-TypedefDecl 0x560daeb3a358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x560daead3140 'unsigned long'
|-TypedefDecl 0x560daeb3a3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x560daead3120 'unsigned int'
|-TypedefDecl 0x560daeb3a438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x560daead3120 'unsigned int'
|-TypedefDecl 0x560daeb3a4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x560daead3140 'unsigned long'
|-TypedefDecl 0x560daeb3a518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x560daead3140 'unsigned long'
|-TypedefDecl 0x560daeb3a588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x560daead3120 'unsigned int'
|-TypedefDecl 0x560daeb3a5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x560daead3140 'unsigned long'
|-TypedefDecl 0x560daeb3a668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x560daead30a0 'long'
|-TypedefDecl 0x560daeb3a6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x560daead30a0 'long'
|-TypedefDecl 0x560daeb3a748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x560daead3080 'int'
|-RecordDecl 0x560daeb3a7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x560daeb3a918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x560daeb3a9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x560daeb3a970 'struct __fsid_t' sugar
|   `-RecordType 0x560daeb3a820 '__fsid_t'
|     `-Record 0x560daeb3a7a0 ''
|-TypedefDecl 0x560daeb3aa58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x560daead30a0 'long'
|-TypedefDecl 0x560daeb3aac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x560daead3140 'unsigned long'
|-TypedefDecl 0x560daeb3ab38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x560daead3140 'unsigned long'
|-TypedefDecl 0x560daeb3aba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x560daead3120 'unsigned int'
|-TypedefDecl 0x560daeb3ac18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x560daead30a0 'long'
|-TypedefDecl 0x560daeb3ac88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x560daead3120 'unsigned int'
|-TypedefDecl 0x560daeb3acf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x560daead30a0 'long'
|-TypedefDecl 0x560daeb3ad68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x560daead3080 'int'
|-TypedefDecl 0x560daeb3add8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x560daead3080 'int'
|-TypedefDecl 0x560daeb3ae48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x560daead3080 'int'
|-TypedefDecl 0x560daeb3aeb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x560daead37a0 'void *'
|   `-BuiltinType 0x560daead2fe0 'void'
|-TypedefDecl 0x560daeb3af28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x560daead30a0 'long'
|-TypedefDecl 0x560daeb3af98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x560daead30a0 'long'
|-TypedefDecl 0x560daeb3b008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x560daead30a0 'long'
|-TypedefDecl 0x560daeb3b078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x560daead3140 'unsigned long'
|-TypedefDecl 0x560daeb3b0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x560daead3140 'unsigned long'
|-TypedefDecl 0x560daeb3b158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x560daead3140 'unsigned long'
|-TypedefDecl 0x560daeb3b1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x560daead3140 'unsigned long'
|-TypedefDecl 0x560daeb3b238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x560daead30a0 'long'
|-TypedefDecl 0x560daeb3b2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x560daead30a0 'long'
|-TypedefDecl 0x560daeb3b318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x560daead30a0 'long'
|-TypedefDecl 0x560daeb3b388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x560daead3140 'unsigned long'
|-TypedefDecl 0x560daeb3b418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x560daeb3b3e0 '__off64_t' sugar
|   |-Typedef 0x560daeb3a6d8 '__off64_t'
|   `-BuiltinType 0x560daead30a0 'long'
|-TypedefDecl 0x560daeb3b510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x560daeb3b4d0 '__quad_t *'
|   `-TypedefType 0x560daeb3b470 '__quad_t' sugar
|     |-Typedef 0x560daeb3a278 '__quad_t'
|     `-BuiltinType 0x560daead30a0 'long'
|-TypedefDecl 0x560daeb3b580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x560daead3c20 'char *'
|   `-BuiltinType 0x560daead3020 'char'
|-TypedefDecl 0x560daeb3b5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x560daead30a0 'long'
|-TypedefDecl 0x560daeb3b660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x560daead3120 'unsigned int'
|-FunctionDecl 0x560daeb3b7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x560daeb3b6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x560daeb3bae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x560daeb3bad8 <line:72:3, col:34>
|     `-CallExpr 0x560daeb3ba98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x560daeb3ba80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560daeb3ba10 <col:10> '<builtin fn type>' Function 0x560daeb3b880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x560daeb3bac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x560daeb3ba30 <col:29> 'unsigned int' lvalue ParmVar 0x560daeb3b6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x560daeb3b880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x560daeb3b920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x560daeb3b990 <col:10> Implicit
| `-ConstAttr 0x560daeb3b9e8 <col:10> Implicit
|-FunctionDecl 0x560daeb3bc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x560daeb3bb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x560daeb3bf58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x560daeb3bf48 <line:77:3, col:34>
|     `-CallExpr 0x560daeb3bf08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x560daeb3bef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560daeb3be78 <col:10> '<builtin fn type>' Function 0x560daeb3bce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x560daeb3bf30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x560daeb3be98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x560daeb3bb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x560daeb3bce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x560daeb3bd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x560daeb3bdf8 <col:10> Implicit
| `-ConstAttr 0x560daeb3be50 <col:10> Implicit
|-TypedefDecl 0x560daeb3bf88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x560daead3140 'unsigned long'
|-TypedefDecl 0x560daeb3c018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x560daeb3bfe0 '__time_t' sugar
|   |-Typedef 0x560daeb3ac18 '__time_t'
|   `-BuiltinType 0x560daead30a0 'long'
|-RecordDecl 0x560daeb3c070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x560daeb3c128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x560daeb3c1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x560daeb3c248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x560daeb3c210 '__pid_t' sugar
|   |-Typedef 0x560daeb3a748 '__pid_t'
|   `-BuiltinType 0x560daead3080 'int'
|-RecordDecl 0x560daeb3c2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x560daeb3c360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x560daeb3c3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x560daeb3c470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x560daeb3c4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x560daead3140 'unsigned long'
|-RecordDecl 0x560daeb3c530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x560daeb3c7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x560daeb3e8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x560daeb3c810 'struct cpu_set_t' sugar
|   `-RecordType 0x560daeb3c5b0 'cpu_set_t'
|     `-Record 0x560daeb3c530 ''
|-FunctionDecl 0x560daeb3eb88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x560daeb3e958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560daeb3ea60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x560daeb3ec38 <line:107:19>
|-FunctionDecl 0x560daeb3ee10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x560daeb3eca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x560daeb3eeb8 <col:69>
|-FunctionDecl 0x560daeb3f030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x560daeb3ef20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x560daeb3f0d8 <col:64>
|-FunctionDecl 0x560daeb3f398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x560daeb3f140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560daeb3f278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560daeb3f448 <line:113:22>
|-FunctionDecl 0x560daeb3f6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x560daeb3f4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560daeb3f5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x560daeb3f778 <col:88>
|-FunctionDecl 0x560daeb3fa98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560daeb3f7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560daeb3f8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x560daeb3f950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560daeb3fb50 <col:62>
|-FunctionDecl 0x560daeb3fcc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x560daeb3fbb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x560daeb3fd70 <col:63>
|-FunctionDecl 0x560daeb3fe98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x560daeb3ff38 <col:47>
|-FunctionDecl 0x560daeb40040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x560daeb3ffa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560daeb400e8 <col:69>
|-FunctionDecl 0x560daeb401f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x560daeb40158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560daeb40298 <col:69>
|-FunctionDecl 0x560daeb40558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560daeb40300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560daeb40438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x560daeb40608 <col:88>
|-TypedefDecl 0x560daeb40698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x560daeb40660 '__clock_t' sugar
|   |-Typedef 0x560daeb3aa58 '__clock_t'
|   `-BuiltinType 0x560daead30a0 'long'
|-TypedefDecl 0x560daeb40728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x560daeb406f0 '__clockid_t' sugar
|   |-Typedef 0x560daeb3ae48 '__clockid_t'
|   `-BuiltinType 0x560daead3080 'int'
|-TypedefDecl 0x560daeb407b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x560daeb40780 '__timer_t' sugar
|   |-Typedef 0x560daeb3aeb8 '__timer_t'
|   `-PointerType 0x560daead37a0 'void *'
|     `-BuiltinType 0x560daead2fe0 'void'
|-RecordDecl 0x560daeb40810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x560daeb408e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x560daeb40950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x560daeb409b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x560daeb40a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x560daeb40a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x560daeb40af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x560daeb40b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x560daeb40bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x560daeb40c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x560daeb40c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x560daeb40cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x560daeb40d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x560daeb40e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x560daeb40e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x560daeb40f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x560daeb41100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x560daeb411a0 <col:45>
|-FunctionDecl 0x560daeb41380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x560daeb41270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x560daeb41428 <col:54>
|-FunctionDecl 0x560daeb41628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x560daeb41490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x560daeb41508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x560daeb416d8 <line:157:22>
| `-ConstAttr 0x560daeb41730 <col:63>
|-FunctionDecl 0x560daeb42560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560daeb41828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560daeb42608 <col:56>
|-FunctionDecl 0x560daeb429b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x560daeb42678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x560daeb426f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560daeb42770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x560daeb42868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x560daeb42a70 <col:54>
|-RecordDecl 0x560daeb42ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x560daeb42b78 parent 0x560daead2f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x560daeb42dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x560daeb42e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x560daeb42ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x560daeb42f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x560daeb43038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x560daeb43158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x560daeb43100 'struct __locale_struct *'
|   `-ElaboratedType 0x560daeb43090 'struct __locale_struct' sugar
|     `-RecordType 0x560daeb42b50 'struct __locale_struct'
|       `-Record 0x560daeb42ac8 '__locale_struct'
|-TypedefDecl 0x560daeb43208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x560daeb431d0 '__locale_t' sugar
|   |-Typedef 0x560daeb43158 '__locale_t'
|   `-PointerType 0x560daeb43100 'struct __locale_struct *'
|     `-ElaboratedType 0x560daeb43090 'struct __locale_struct' sugar
|       `-RecordType 0x560daeb42b50 'struct __locale_struct'
|         `-Record 0x560daeb42ac8 '__locale_struct'
|-FunctionDecl 0x560daeb43610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x560daeb43278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x560daeb432f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560daeb43370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x560daeb43400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560daeb43478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x560daeb436d8 <col:40>
|-FunctionDecl 0x560daeb438c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560daeb437a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x560daeb43970 <col:66>
|-FunctionDecl 0x560daeb43a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560daeb439d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x560daeb43b28 <col:69>
|-FunctionDecl 0x560daeb43d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560daeb43b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560daeb43c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560daeb43e08 <col:52>
|-FunctionDecl 0x560daeb43fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560daeb43e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560daeb43f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560daeb44060 <col:55>
|-FunctionDecl 0x560daeb441f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x560daeb440e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x560daeb442a0 <col:62>
|-FunctionDecl 0x560daeb44418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x560daeb44308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x560daeb444c0 <col:60>
|-FunctionDecl 0x560daeb44718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560daeb44578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560daeb445f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x560daeb447c8 <col:44>
|-FunctionDecl 0x560daeb449d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560daeb44830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560daeb448b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x560daeb44a88 <col:49>
|-VarDecl 0x560daeb44b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x560daeb44c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x560daeb44c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x560daeb44d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x560daeb44e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x560daeb44f20 <col:42>
|-VarDecl 0x560daeb44f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x560daeb45010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x560daeb45198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x560daeb45088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x560daeb45240 <col:57>
|-FunctionDecl 0x560daeb45350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560daeb452c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560daeb453f8 <col:56>
|-FunctionDecl 0x560daeb46540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560daeb45478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x560daeb465e8 <col:59>
|-FunctionDecl 0x560daeb466f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x560daeb46658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x560daeb46798 <col:48>
| `-ConstAttr 0x560daeb467f0 <col:89>
|-FunctionDecl 0x560daeb46a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560daeb468a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x560daeb46938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x560daeb46cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560daeb46b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560daeb46bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x560daeb46d68 <col:88>
|-FunctionDecl 0x560daeb46f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560daeb46dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560daeb46e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x560daeb46fb0 <col:88>
|-FunctionDecl 0x560daeb471c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x560daeb47018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560daeb470a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x560daeb47278 <line:208:22>
|-FunctionDecl 0x560daeb475e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560daeb472e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560daeb47360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x560daeb473f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x560daeb47480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x560daeb478e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x560daeb476e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x560daeb477c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x560daeb47998 <col:85>
|-FunctionDecl 0x560daeb47d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x560daeb47a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560daeb47b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x560daeb47c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x560daeb47e40 <col:52>
|-FunctionDecl 0x560daeb47fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x560daeb47ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560daeb48060 <col:61>
|-FunctionDecl 0x560daeb48560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x560daeb480c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560daeb48148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x560daeb48278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x560daeb48368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x560daeb48620 <col:62>
|-FunctionDecl 0x560daeb48838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x560daeb48688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560daeb48718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x560daeb488e8 <line:221:22>
|-FunctionDecl 0x560daeb489e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x560daeb48950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560daeb48a90 <col:65>
|-TypedefDecl 0x560daeb48b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x560daead3140 'unsigned long'
|-RecordDecl 0x560daeb48b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x560daeb48ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560daeb48d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560daeb48db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x560daeb48d60 'union pthread_attr_t' sugar
|   `-RecordType 0x560daeb48be0 'union pthread_attr_t'
|     `-Record 0x560daeb48b58 'pthread_attr_t'
|-RecordDecl 0x560daeb48e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x560daeb48f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x560daeb49000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x560daeb490b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x560daeb49050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x560daeb48e90 'struct __pthread_internal_list'
|     `-Record 0x560daeb48e10 '__pthread_internal_list'
|-RecordDecl 0x560daeb49120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x560daeb491c8 parent 0x560daead2f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x560daeb492a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560daeb49308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x560daeb49370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x560daeb493d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x560daeb49440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x560daeb494a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x560daeb4d580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x560daeb4d630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x560daeb4d720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x560daeb4d788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560daeb4d910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x560daeb4d8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x560daeb491a0 'pthread_mutex_t'
|     `-Record 0x560daeb49120 ''
|-RecordDecl 0x560daeb4d980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x560daeb4dac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560daeb4db28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560daeb4dbe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x560daeb4db80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x560daeb4da00 'pthread_mutexattr_t'
|     `-Record 0x560daeb4d980 ''
|-RecordDecl 0x560daeb4dc50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x560daeb4dcf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x560daeb4ddc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560daeb4de28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x560daeb4de90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x560daeb4def8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x560daeb4df60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x560daeb4dfc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x560daeb4e030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x560daeb4e098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x560daeb4e150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe009_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe009_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x560daeb4e240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x560daeb4e2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x560daeb4e3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x560daeb4e380 'union pthread_cond_t' sugar
|   `-RecordType 0x560daeb4dcd0 'pthread_cond_t'
|     `-Record 0x560daeb4dc50 ''
|-RecordDecl 0x560daeb4e450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x560daeb4e590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560daeb4e5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560daeb4e6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x560daeb4e650 'union pthread_condattr_t' sugar
|   `-RecordType 0x560daeb4e4d0 'pthread_condattr_t'
|     `-Record 0x560daeb4e450 ''
|-TypedefDecl 0x560daeb4e738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x560daead3120 'unsigned int'
|-TypedefDecl 0x560daeb4e7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x560daead3080 'int'
|-RecordDecl 0x560daeb4e800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x560daeb4e8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x560daeb4e970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560daeb4e9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x560daeb4ea40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x560daeb4eaa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x560daeb4eb10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x560daeb4eb78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x560daeb4ebe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x560daeb4ec48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x560daeb4ecb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x560daeb4ed18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x560daeb4ed80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x560daeb4ee30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe009_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe009_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x560daeb4eed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560daeb4ef40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560daeb4f090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x560daeb4f030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x560daeb4e880 'pthread_rwlock_t'
|     `-Record 0x560daeb4e800 ''
|-RecordDecl 0x560daeb4f100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x560daeb4f240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x560daeb4f2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560daeb4f360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x560daeb4f300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x560daeb4f180 'pthread_rwlockattr_t'
|     `-Record 0x560daeb4f100 ''
|-TypedefDecl 0x560daeb4f3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x560daead3084 'volatile int' volatile
|   `-BuiltinType 0x560daead3080 'int'
|-RecordDecl 0x560daeb4f440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x560daeb515b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x560daeb51618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560daeb516d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x560daeb51670 'union pthread_barrier_t' sugar
|   `-RecordType 0x560daeb4f4c0 'pthread_barrier_t'
|     `-Record 0x560daeb4f440 ''
|-RecordDecl 0x560daeb51740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x560daeb51840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560daeb518a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560daeb51960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x560daeb51900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x560daeb517c0 'pthread_barrierattr_t'
|     `-Record 0x560daeb51740 ''
|-TypedefDecl 0x560daeb51a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x560daeb51a10 'long [8]' 8 
|   `-BuiltinType 0x560daead30a0 'long'
|-EnumDecl 0x560daeb51ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x560daeb51b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x560daeb51be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x560daeb51c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x560daeb51d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x560daeb51d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x560daeb51da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x560daeb51df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x560daeb51e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x560daeb51e68 <col:26> 'int'
| |   `-DeclRefExpr 0x560daeb51e48 <col:26> 'int' EnumConstant 0x560daeb51d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x560daeb51f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x560daeb51ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x560daeb51ed0 <col:29> 'int' EnumConstant 0x560daeb51d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x560daeb51f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x560daeb51f78 <col:30> 'int'
| |   `-DeclRefExpr 0x560daeb51f58 <col:30> 'int' EnumConstant 0x560daeb51da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x560daeb52018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x560daeb52000 <col:27> 'int'
|     `-DeclRefExpr 0x560daeb51fe0 <col:27> 'int' EnumConstant 0x560daeb51e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x560daeb52068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x560daeb52138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x560daeb521c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x560daeb521a8 <col:30> 'int'
| |   `-DeclRefExpr 0x560daeb52188 <col:30> 'int' EnumConstant 0x560daeb52138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x560daeb52210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x560daeb52298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x560daeb52280 <col:29> 'int'
|     `-DeclRefExpr 0x560daeb52260 <col:29> 'int' EnumConstant 0x560daeb52210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x560daeb522e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x560daeb523b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x560daeb52408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x560daeb52458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x560daeb524a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x560daeb525c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x560daeb52610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x560daeb52660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x560daeb526e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x560daeb526d0 <col:31> 'int'
|     `-DeclRefExpr 0x560daeb526b0 <col:31> 'int' EnumConstant 0x560daeb525c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x560daeb52738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x560daeb52808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x560daeb52858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x560daeb528a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x560daeb52978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x560daeb529c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x560daeb52a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x560daeb52ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x560daeb52b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x560daeb52b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x560daeb52dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x560daeb52e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x560daeb52e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x560daeb52fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x560daeb53008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x560daeb530d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x560daeb53128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x560daeb53178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x560daeb53248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x560daeb53298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x560daeb538f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x560daeb53390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x560daeb534a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560daeb536e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x560daeb53760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x560daeb539b8 <col:47>
| |-NonNullAttr 0x560daeb53a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x560daeb53a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x560daeb53b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x560daeb53aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x560daeb53dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x560daeb53c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x560daeb53ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x560daeb53f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x560daeb53e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x560daeb54040 <col:60>
|-FunctionDecl 0x560daeb54190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x560daeb54230 <col:54>
| `-ConstAttr 0x560daeb54288 <col:95>
|-FunctionDecl 0x560daeb54458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x560daeb542c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560daeb54338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x560daeb54508 <line:394:19>
| `-ConstAttr 0x560daeb54560 <col:60>
|-FunctionDecl 0x560daeb54f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560daeb54e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560daeb55010 <col:71>
| `-NonNullAttr 0x560daeb55068 <col:112, col:126> 1
|-FunctionDecl 0x560daeb55170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560daeb550b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560daeb55218 <line:397:22>
| `-NonNullAttr 0x560daeb55270 <col:63, col:77> 1
|-FunctionDecl 0x560daeb55498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x560daeb552b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560daeb55338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x560daeb55548 <line:400:22>
| `-NonNullAttr 0x560daeb555a0 <col:63, col:80> 1 2
|-FunctionDecl 0x560daeb557a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560daeb555e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560daeb55668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x560daeb55858 <line:403:22>
| `-NonNullAttr 0x560daeb558b0 <col:63, col:77> 1
|-FunctionDecl 0x560daeb55b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x560daeb558f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560daeb559a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x560daeb55bb8 <line:406:22>
| `-NonNullAttr 0x560daeb55c10 <col:63, col:80> 1 2
|-FunctionDecl 0x560daeb56e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560daeb55c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560daeb55cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560daeb56ef8 <line:409:22>
| `-NonNullAttr 0x560daeb56f50 <col:63, col:77> 1
|-FunctionDecl 0x560daeb57188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560daeb56f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560daeb57028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560daeb57238 <line:412:22>
| `-NonNullAttr 0x560daeb57290 <col:63, col:80> 1 2
|-FunctionDecl 0x560daeb574c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560daeb572d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x560daeb57368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x560daeb57578 <col:37>
| `-NonNullAttr 0x560daeb575d0 <col:78, col:95> 1 2
|-FunctionDecl 0x560daeb577b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560daeb57618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560daeb57698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x560daeb57868 <line:418:22>
| `-NonNullAttr 0x560daeb578c0 <col:63, col:80> 1 2
|-FunctionDecl 0x560daeb57a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560daeb57908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560daeb57988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x560daeb57af8 <line:420:22>
| `-NonNullAttr 0x560daeb57b50 <col:63, col:77> 1
|-FunctionDecl 0x560daeb57cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560daeb57b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560daeb57c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x560daeb57da8 <line:423:22>
| `-NonNullAttr 0x560daeb58e30 <col:63, col:80> 1 2
|-FunctionDecl 0x560daeb58fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560daeb58e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560daeb58ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x560daeb59068 <line:426:22>
| `-NonNullAttr 0x560daeb590c0 <col:63, col:77> 1
|-FunctionDecl 0x560daeb59268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560daeb59108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560daeb59188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x560daeb59318 <line:429:22>
| `-NonNullAttr 0x560daeb59370 <col:63, col:80> 1 2
|-FunctionDecl 0x560daeb594f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560daeb593b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560daeb59438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x560daeb595a8 <line:431:22>
| `-NonNullAttr 0x560daeb59600 <col:63, col:77> 1
|-FunctionDecl 0x560daeb59828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x560daeb59648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560daeb596c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x560daeb598d8 <line:434:22>
| |-NonNullAttr 0x560daeb59930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x560daeb59968 <col:100> "" ""
|-FunctionDecl 0x560daeb59b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x560daeb599b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560daeb59a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x560daeb59c28 <line:437:22>
| |-NonNullAttr 0x560daeb59c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x560daeb59cb8 <col:97> "" ""
|-FunctionDecl 0x560daeb59eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560daeb59d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560daeb59d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560daeb59f68 <line:440:22>
| `-NonNullAttr 0x560daeb59fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x560daeb5a140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560daeb5a008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560daeb5a080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560daeb5a1f0 <line:443:22>
| `-NonNullAttr 0x560daeb5a248 <col:63, col:77> 1
|-FunctionDecl 0x560daeb5a538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560daeb5a298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560daeb5a318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x560daeb5a390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560daeb5a5f0 <line:447:22>
| `-NonNullAttr 0x560daeb5a648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x560daeb5a8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x560daeb5a6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560daeb5a720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x560daeb5a798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560daeb5a9b0 <col:43>
| `-NonNullAttr 0x560daeb5aa08 <col:84, col:98> 1
|-FunctionDecl 0x560daeb5acc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560daeb5aa58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560daeb5aad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x560daeb5ab68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x560daeb5ad80 <line:452:22>
| `-NonNullAttr 0x560daeb5add8 <col:63, col:77> 3
|-FunctionDecl 0x560daeb5b0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560daeb5ae50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560daeb5aed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x560daeb5af60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560daeb5b1a0 <line:456:22>
| `-NonNullAttr 0x560daeb5b1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x560daeb5b3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x560daeb5b248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560daeb5b2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x560daeb5b498 <line:458:22>
|-FunctionDecl 0x560daeb5b868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x560daeb5b560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x560daeb5b700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x560daeb5b918 <col:52, col:69> 1 2
|-FunctionDecl 0x560daeb5bac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x560daeb5b9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x560daeb5ba20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x560daeb5bca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x560daeb5bb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x560daeb5bc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x560daeb5be60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x560daeb5bd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x560daeb5bfa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x560daeb5c040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x560daeb5c0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x560daeb5c1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x560daeb5c240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x560daeb5c410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe009_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x560daeb5c508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x560daeb5c5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x560daeb5c560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x560daeb5c0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x560daeb5c040 ''
| `-AlignedAttr 0x560daeb5c618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x560daeb5c690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x560daeb5c7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x560daeb5c858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x560daeb5c8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x560daeb5c928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x560daeb5cb30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560daeb5ca20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560daeb5cc78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560daeb5cbe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560daeb5ce70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560daeb5cd30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x560daeb5cf18 <line:487:22>
|-RecordDecl 0x560daeb5cf70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x560daeb5d288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x560daeb5d0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x560daeb5d168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x560daeb5d338 <col:86>
| `-ReturnsTwiceAttr 0x560daeb5d390 <col:12> Implicit
|-FunctionDecl 0x560daeb5d6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560daeb5d460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x560daeb5d570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x560daeb5d768 <line:493:22>
| `-NonNullAttr 0x560daeb5d7c0 <col:63, col:77> 1
|-FunctionDecl 0x560daeb5d938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560daeb5d808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560daeb5d9e0 <line:495:22>
| `-NonNullAttr 0x560daeb5da38 <col:63, col:77> 1
|-FunctionDecl 0x560daeb5db40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560daeb5da88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560daeb5dbe8 <line:497:22>
| `-NonNullAttr 0x560daeb5dc40 <col:52, col:66> 1
|-FunctionDecl 0x560daeb5dd40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560daeb5dc88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560daeb5dde8 <line:499:22>
| `-NonNullAttr 0x560daeb5de40 <col:52, col:66> 1
|-FunctionDecl 0x560daeb5e088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560daeb5de98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560daeb5df28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560daeb5e138 <col:36>
| `-NonNullAttr 0x560daeb5e190 <col:66, col:83> 1 2
|-FunctionDecl 0x560daeb5e290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560daeb5e1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560daeb5e338 <line:504:22>
| `-NonNullAttr 0x560daeb5e390 <col:52, col:66> 1
|-FunctionDecl 0x560daeb5e628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560daeb5e440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560daeb5e4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560daeb5e6d8 <line:508:22>
| `-NonNullAttr 0x560daeb5e730 <col:63, col:80> 1 2
|-FunctionDecl 0x560daeb5e9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x560daeb5e778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560daeb5e7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x560daeb5e878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x560daeb5eab0 <line:512:22>
| `-NonNullAttr 0x560daeb5eb08 <col:63, col:80> 1 3
|-FunctionDecl 0x560daeb5ec10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560daeb5eb58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560daeb5ecb8 <line:514:22>
| `-NonNullAttr 0x560daeb5ed10 <col:63, col:77> 1
|-FunctionDecl 0x560daeb5ef38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560daeb5edc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560daeb5efe0 <line:516:22>
| `-NonNullAttr 0x560daeb5f038 <col:63, col:77> 1
|-FunctionDecl 0x560daeb5f140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560daeb5f088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560daeb5f1e8 <line:518:22>
| `-NonNullAttr 0x560daeb5f240 <col:63, col:77> 1
|-FunctionDecl 0x560daeb5f468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560daeb5f288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560daeb5f308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x560daeb5f518 <line:522:22>
| `-NonNullAttr 0x560daeb5f570 <col:63, col:80> 1 2
|-FunctionDecl 0x560daeb5f778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560daeb5f5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560daeb5f638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x560daeb5f828 <line:525:22>
| `-NonNullAttr 0x560daeb5f880 <col:63, col:77> 1
|-FunctionDecl 0x560daeb5fa28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560daeb5f8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560daeb5f948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x560daeb5fad8 <line:528:22>
| `-NonNullAttr 0x560daeb5fb30 <col:63, col:80> 1 2
|-FunctionDecl 0x560daeb5fcb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560daeb5fb78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560daeb5fbf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x560daeb5fd68 <line:530:22>
| `-NonNullAttr 0x560daeb5fdc0 <col:63, col:77> 1
|-FunctionDecl 0x560daeb60f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560daeb5fe08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560daeb60eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x560daeb61040 <line:534:22>
| `-NonNullAttr 0x560daeb61098 <col:63, col:80> 1 2
|-FunctionDecl 0x560daeb61228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560daeb610e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560daeb61168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x560daeb612d8 <line:537:22>
| `-NonNullAttr 0x560daeb61330 <col:63, col:77> 1
|-FunctionDecl 0x560daeb614d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560daeb61378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560daeb613f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560daeb61588 <line:541:22>
| `-NonNullAttr 0x560daeb615e0 <col:63, col:80> 1 2
|-FunctionDecl 0x560daeb61768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560daeb61628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560daeb616a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x560daeb61818 <line:544:22>
| `-NonNullAttr 0x560daeb61870 <col:63, col:77> 1
|-FunctionDecl 0x560daeb61a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x560daeb618b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x560daeb61938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x560daeb61b08 <line:547:22>
| `-NonNullAttr 0x560daeb61b60 <col:63, col:80> 1 2
|-FunctionDecl 0x560daeb61ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560daeb61ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560daeb61c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x560daeb61d98 <line:550:22>
| `-NonNullAttr 0x560daeb61df0 <col:63, col:77> 1
|-FunctionDecl 0x560daeb63168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x560daeb62f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560daeb63020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x560daeb63218 <col:29>
| `-NonNullAttr 0x560daeb63270 <col:70, col:84> 1
|-FunctionDecl 0x560daeb633e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560daeb632b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560daeb63490 <line:555:22>
| `-NonNullAttr 0x560daeb634e8 <col:63, col:77> 1
|-FunctionDecl 0x560daeb635f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560daeb63538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560daeb63698 <line:557:22>
| `-NonNullAttr 0x560daeb636f0 <col:52, col:66> 1
|-FunctionDecl 0x560daeb637f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560daeb63738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560daeb63898 <line:559:19>
| `-NonNullAttr 0x560daeb638f0 <col:49, col:63> 1
|-FunctionDecl 0x560daeb63b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560daeb63938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560daeb639c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560daeb63bd8 <col:39>
| `-NonNullAttr 0x560daeb63c30 <col:69, col:86> 1 2
|-FunctionDecl 0x560daeb63d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560daeb63c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560daeb63dd8 <line:564:22>
| `-NonNullAttr 0x560daeb63e30 <col:52, col:66> 1
|-FunctionDecl 0x560daeb63f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560daeb63ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560daeb64040 <line:566:22>
| `-NonNullAttr 0x560daeb64098 <col:52, col:66> 1
|-FunctionDecl 0x560daeb64258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560daeb640e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560daeb64178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560daeb64308 <col:39>
| `-NonNullAttr 0x560daeb64360 <col:69, col:86> 1 2
|-FunctionDecl 0x560daeb64460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560daeb643a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560daeb64508 <line:571:22>
| `-NonNullAttr 0x560daeb64560 <col:52, col:66> 1
|-FunctionDecl 0x560daeb64748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560daeb64610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560daeb647f0 <line:573:22>
| `-NonNullAttr 0x560daeb64848 <col:63, col:77> 1
|-FunctionDecl 0x560daeb64950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560daeb64898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560daeb649f8 <line:575:22>
| `-NonNullAttr 0x560daeb64a50 <col:63, col:77> 1
|-FunctionDecl 0x560daeb64c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560daeb64a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560daeb64b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x560daeb64d28 <line:579:22>
| `-NonNullAttr 0x560daeb64d80 <col:63, col:80> 1 2
|-FunctionDecl 0x560daeb64fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560daeb64dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560daeb64e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x560daeb65058 <line:582:22>
| `-NonNullAttr 0x560daeb650b0 <col:63, col:77> 1
|-FunctionDecl 0x560daeb65258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560daeb650f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560daeb65178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x560daeb65308 <line:586:22>
| `-NonNullAttr 0x560daeb65360 <col:63, col:80> 1 2
|-FunctionDecl 0x560daeb654e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560daeb653a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560daeb65428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x560daeb65598 <col:36>
| `-NonNullAttr 0x560daeb655f0 <col:77, col:91> 1
|-FunctionDecl 0x560daeb65928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x560daeb656d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560daeb657e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x560daeb659d8 <line:591:22>
| `-NonNullAttr 0x560daeb65a30 <col:63, col:77> 1
|-FunctionDecl 0x560daeb65ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560daeb65a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560daeb65c50 <line:593:22>
| `-NonNullAttr 0x560daeb65ca8 <col:63, col:77> 1
|-FunctionDecl 0x560daeb65db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560daeb65cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560daeb65e58 <line:595:22>
| `-NonNullAttr 0x560daeb65eb0 <col:52, col:66> 1
|-FunctionDecl 0x560daeb65fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560daeb65f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560daeb66070 <line:597:22>
| `-NonNullAttr 0x560daeb660c8 <col:52, col:66> 1
|-FunctionDecl 0x560daeb662f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x560daeb66118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560daeb66190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x560daeb663a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x560daeb666d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560daeb66428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560daeb664a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560daeb66530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x560daeb66790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x560daeb669a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560daeb66870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560daeb66a50 <line:606:22>
| `-NonNullAttr 0x560daeb66aa8 <col:63, col:77> 1
|-FunctionDecl 0x560daeb66bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560daeb66af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560daeb66c58 <line:608:22>
| `-NonNullAttr 0x560daeb66cb0 <col:63, col:77> 1
|-FunctionDecl 0x560daeb66f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560daeb66cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560daeb66d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x560daeb66fc0 <line:612:22>
| `-NonNullAttr 0x560daeb67018 <col:63, col:80> 1 2
|-FunctionDecl 0x560daeb67228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x560daeb67068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560daeb670e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x560daeb672d8 <col:37>
| `-NonNullAttr 0x560daeb67330 <col:78, col:92> 1
|-FunctionDecl 0x560daeb67548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x560daeb67378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560daeb67420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x560daeb675f8 <line:618:22>
| `-NonNullAttr 0x560daeb67650 <col:63, col:80> 1 2
|-FunctionDecl 0x560daeb67818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x560daeb67698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560daeb67710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x560daeb678c8 <line:621:22>
| `-NonNullAttr 0x560daeb67920 <col:63, col:77> 1
|-FunctionDecl 0x560daeb67bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x560daeb67a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x560daeb67a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x560daeb67c78 <line:623:22>
| `-NonNullAttr 0x560daeb67cd0 <col:63, col:77> 1
|-FunctionDecl 0x560daeb67e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560daeb67d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560daeb67f20 <line:625:22>
| `-NonNullAttr 0x560daeb67f78 <col:63, col:77> 1
|-FunctionDecl 0x560daeb68080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560daeb67fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560daeb68128 <line:627:22>
| `-NonNullAttr 0x560daeb68180 <col:52, col:66> 1
|-FunctionDecl 0x560daeb68280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560daeb681c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560daeb68328 <line:629:22>
| `-NonNullAttr 0x560daeb68380 <col:52, col:66> 1
|-FunctionDecl 0x560daeb68480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560daeb683c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560daeb68528 <line:631:22>
| `-NonNullAttr 0x560daeb68580 <col:52, col:66> 1
|-FunctionDecl 0x560daeb68958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x560daeb68660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x560daeb68770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560daeb687f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x560daeb68a10 <line:635:22>
| `-NonNullAttr 0x560daeb68a68 <col:63, col:77> 1
|-FunctionDecl 0x560daeb68be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560daeb68ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560daeb68c90 <line:637:22>
| `-NonNullAttr 0x560daeb68ce8 <col:63, col:77> 1
|-FunctionDecl 0x560daeb68df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560daeb68d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560daeb68e98 <line:639:22>
| `-NonNullAttr 0x560daeb68ef0 <col:52, col:66> 1
|-FunctionDecl 0x560daeb690e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560daeb68fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560daeb69190 <line:641:22>
| `-NonNullAttr 0x560daeb691e8 <col:63, col:77> 1
|-FunctionDecl 0x560daeb692f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560daeb69238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560daeb69398 <line:643:22>
| `-NonNullAttr 0x560daeb693f0 <col:63, col:77> 1
|-FunctionDecl 0x560daeb69618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560daeb69438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560daeb694b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x560daeb696c8 <line:647:22>
| `-NonNullAttr 0x560daeb69720 <col:63, col:80> 1 2
|-FunctionDecl 0x560daeb69928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x560daeb69768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x560daeb697e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x560daeb699d8 <line:650:22>
| `-NonNullAttr 0x560daeb69a30 <col:63, col:77> 1
|-FunctionDecl 0x560daeb69d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x560daeb69b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x560daeb69c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x560daeb69e28 <line:653:22>
| `-NonNullAttr 0x560daeb69e80 <col:63, col:77> 1
|-FunctionDecl 0x560daeb69fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x560daeb69ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560daeb6a090 <col:69>
|-FunctionDecl 0x560daeb6a208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x560daeb6a0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560daeb6a2b0 <col:72>
|-FunctionDecl 0x560daeb6a4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x560daeb6a318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x560daeb6a3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x560daeb6a598 <col:44>
|-FunctionDecl 0x560daeb6a7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x560daeb6a600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560daeb6a678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x560daeb6a868 <line:660:22>
| `-NonNullAttr 0x560daeb6a8c0 <col:63, col:77> 2
|-FunctionDecl 0x560daeb6ad08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x560daeb6a9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x560daeb6aab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x560daeb6abc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x560daeb6adc0 <col:47>
|-FunctionDecl 0x560daeb6bf60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x560daeb6ae30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560daeb6c0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x560daeb6c020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560daeb6c210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x560daeb6c178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560daeb6c2d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x560daeb6c398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x560daeb6c458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x560daeb6c510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x560daeb6c590 prev 0x560daeb6c510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x560daeb6c5f8 <col:24> 'int' 0
|-VarDecl 0x560daeb6c630 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x560daeb6c6b0 prev 0x560daeb6c630 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x560daeb6c718 <col:27> 'int' 0
|-VarDecl 0x560daeb6c750 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x560daeb6c7d0 prev 0x560daeb6c750 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x560daeb6c838 <col:27> 'int' 0
|-VarDecl 0x560daeb6c868 <line:677:1, col:7> col:7 __unbuffered_p1_EAX$flush_delayed '_Bool'
|-VarDecl 0x560daeb6c8e8 <line:678:1, col:5> col:5 __unbuffered_p1_EAX$mem_tmp 'int'
|-VarDecl 0x560daeb6c960 <line:679:1, col:7> col:7 __unbuffered_p1_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x560daeb6c9d8 <line:680:1, col:7> col:7 __unbuffered_p1_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x560daeb6ca50 <line:681:1, col:7> col:7 __unbuffered_p1_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x560daeb6cac8 <line:682:1, col:7> col:7 __unbuffered_p1_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x560daeb6cb40 <line:683:1, col:7> col:7 __unbuffered_p1_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x560daeb6cbb8 <line:684:1, col:7> col:7 __unbuffered_p1_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x560daeb6cc30 <line:685:1, col:7> col:7 __unbuffered_p1_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x560daeb6cca8 <line:686:1, col:7> col:7 __unbuffered_p1_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x560daeb6cd20 <line:687:1, col:7> col:7 used __unbuffered_p1_EAX$read_delayed '_Bool'
|-VarDecl 0x560daeb6cda0 <line:688:1, col:6> col:6 used __unbuffered_p1_EAX$read_delayed_var 'int *'
|-VarDecl 0x560daeb6ce20 <line:689:1, col:5> col:5 __unbuffered_p1_EAX$w_buff0 'int'
|-VarDecl 0x560daeb6ce98 <line:690:1, col:7> col:7 __unbuffered_p1_EAX$w_buff0_used '_Bool'
|-VarDecl 0x560daeb6cf70 <line:691:1, col:5> col:5 __unbuffered_p1_EAX$w_buff1 'int'
|-VarDecl 0x560daeb6cfe8 <line:692:1, col:7> col:7 __unbuffered_p1_EAX$w_buff1_used '_Bool'
|-VarDecl 0x560daeb6d060 <line:693:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x560daeb6d0d8 <line:694:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x560daeb6d158 <line:695:1, col:5> col:5 used x 'int'
|-VarDecl 0x560daeb6d1d8 prev 0x560daeb6d158 <line:696:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x560daeb6d240 <col:9> 'int' 0
|-VarDecl 0x560daeb6d270 <line:697:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x560daeb6d2f0 <line:698:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x560daeb6d368 <line:699:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x560daeb6d3e0 <line:700:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x560daeb6d458 <line:701:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x560daeb6d4d0 <line:702:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x560daeb6d548 <line:703:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x560daeb6d5c0 <line:704:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x560daeb6d638 <line:705:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x560daeb6d6b0 <line:706:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x560daeb6d728 <line:707:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x560daeb6d7a8 <line:708:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x560daeb6d828 <line:709:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x560daeb6d8a0 <line:710:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x560daeb6d920 <line:711:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x560daeb6d998 <line:712:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x560daeb6da18 <line:713:1, col:5> col:5 used y 'int'
|-VarDecl 0x560daeb6da98 prev 0x560daeb6da18 <line:714:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x560daeb6db00 <col:9> 'int' 0
|-VarDecl 0x560daeb6db30 <line:715:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x560daeb6dba8 <line:716:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x560daeb6dc20 <line:717:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x560daeb6dd38 prev 0x560daeb6bf60 <line:718:1, line:746:1> line:718:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x560daeb6dca0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560daeb6f568 <line:719:1, line:746:1>
|   |-CallExpr 0x560daeb6de48 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560daeb6de30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560daeb6dde0 <col:3> 'void ()' Function 0x560daeb13350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560daeb6dec0 <line:721:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560daeb6de68 <col:3> 'int' lvalue Var 0x560daeb6c6b0 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x560daeb6dea8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560daeb6de88 <col:25> 'int' lvalue Var 0x560daeb6da98 'y' 'int'
|   |-CallExpr 0x560daeb6df18 <line:722:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560daeb6df00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560daeb6dee0 <col:3> 'void ()' Function 0x560daeb13410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560daeb6df80 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560daeb6df58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560daeb6df38 <col:3> 'void ()' Function 0x560daeb13350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560daeb6dff8 <line:724:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560daeb6dfa0 <col:3> 'int' lvalue Var 0x560daeb6d920 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x560daeb6dfe0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560daeb6dfc0 <col:15> 'int' lvalue Var 0x560daeb6d828 'x$w_buff0' 'int'
|   |-BinaryOperator 0x560daeb6e058 <line:725:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560daeb6e018 <col:3> 'int' lvalue Var 0x560daeb6d828 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x560daeb6e038 <col:15> 'int' 1
|   |-BinaryOperator 0x560daeb6e0d0 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb6e078 <col:3> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560daeb6e0b8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560daeb6e098 <col:20> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560daeb6e168 <line:727:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb6e0f0 <col:3> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x560daeb6e140 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560daeb6e110 <col:27> 'int' 1
|   |-CallExpr 0x560daeb6e2e8 <line:728:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x560daeb6e2d0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x560daeb6e188 <col:3> 'void (int)' Function 0x560daeb130d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x560daeb6e288 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x560daeb6e268 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x560daeb6e248 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x560daeb6e200 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x560daeb6e1e8 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x560daeb6e1a8 <col:23> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x560daeb6e230 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x560daeb6e218 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x560daeb6e1c8 <col:41> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560daeb6e368 <line:729:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb6e310 <col:3> '_Bool' lvalue Var 0x560daeb6d548 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x560daeb6e350 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560daeb6e330 <col:20> '_Bool' lvalue Var 0x560daeb6d368 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x560daeb6e3e0 <line:730:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb6e388 <col:3> '_Bool' lvalue Var 0x560daeb6d5c0 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560daeb6e3c8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560daeb6e3a8 <col:20> '_Bool' lvalue Var 0x560daeb6d3e0 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560daeb6e458 <line:731:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb6e400 <col:3> '_Bool' lvalue Var 0x560daeb6d638 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560daeb6e440 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560daeb6e420 <col:20> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560daeb6e4d0 <line:732:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb6e478 <col:3> '_Bool' lvalue Var 0x560daeb6d6b0 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560daeb6e4b8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560daeb6e498 <col:20> '_Bool' lvalue Var 0x560daeb6d4d0 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560daeb6e568 <line:733:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb6e4f0 <col:3> '_Bool' lvalue Var 0x560daeb6d3e0 'x$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x560daeb6e540 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560daeb6e510 <col:27> 'int' 1
|   |-CallExpr 0x560daeb6e5c0 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560daeb6e5a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560daeb6e588 <col:3> 'void ()' Function 0x560daeb13410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560daeb6e618 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560daeb6e600 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560daeb6e5e0 <col:3> 'void ()' Function 0x560daeb13350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560daeb6e900 <line:736:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560daeb6e638 <col:3> 'int' lvalue Var 0x560daeb6d1d8 'x' 'int'
|   | `-ConditionalOperator 0x560daeb6e8d0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560daeb6e6f8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560daeb6e6b0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560daeb6e698 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560daeb6e658 <col:7> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560daeb6e6e0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560daeb6e6c8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560daeb6e678 <col:25> '_Bool' lvalue Var 0x560daeb6d3e0 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x560daeb6e8b8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560daeb6e718 <col:42> 'int' lvalue Var 0x560daeb6d828 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x560daeb6e898 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560daeb6e868 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560daeb6e7d8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560daeb6e790 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560daeb6e778 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560daeb6e738 <col:55> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560daeb6e7c0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560daeb6e7a8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560daeb6e758 <col:73> '_Bool' lvalue Var 0x560daeb6d5c0 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560daeb6e838 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560daeb6e7f8 <col:90> 'int' lvalue Var 0x560daeb6d920 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560daeb6e850 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560daeb6e818 <col:102> 'int' lvalue Var 0x560daeb6d1d8 'x' 'int'
|   |-BinaryOperator 0x560daeb6eb08 <line:737:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb6e920 <col:3> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560daeb6eaf0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560daeb6eac0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560daeb6e9e0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560daeb6e998 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560daeb6e980 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560daeb6e940 <col:20> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560daeb6e9c8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560daeb6e9b0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560daeb6e960 <col:38> '_Bool' lvalue Var 0x560daeb6d3e0 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560daeb6ea78 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560daeb6ea30 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560daeb6ea00 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560daeb6eaa8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560daeb6ea90 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560daeb6ea58 <col:66> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560daeb6edf0 <line:738:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb6eb28 <col:3> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560daeb6edd8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560daeb6eda8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560daeb6ecc8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560daeb6ebe8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560daeb6eba0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560daeb6eb88 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560daeb6eb48 <col:20> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560daeb6ebd0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560daeb6ebb8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560daeb6eb68 <col:38> '_Bool' lvalue Var 0x560daeb6d3e0 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x560daeb6eca8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560daeb6ec60 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560daeb6ec48 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560daeb6ec08 <col:56> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560daeb6ec90 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560daeb6ec78 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560daeb6ec28 <col:74> '_Bool' lvalue Var 0x560daeb6d5c0 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560daeb6ed60 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560daeb6ed18 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560daeb6ece8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560daeb6ed90 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560daeb6ed78 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560daeb6ed40 <col:102> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560daeb6f008 <line:739:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb6ee10 <col:3> '_Bool' lvalue Var 0x560daeb6d3e0 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560daeb6eff0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560daeb6efc0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560daeb6eed0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560daeb6ee88 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560daeb6ee70 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560daeb6ee30 <col:20> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560daeb6eeb8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560daeb6eea0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560daeb6ee50 <col:38> '_Bool' lvalue Var 0x560daeb6d3e0 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560daeb6ef68 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560daeb6ef20 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560daeb6eef0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560daeb6efa8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560daeb6ef90 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560daeb6ef48 <col:66> '_Bool' lvalue Var 0x560daeb6d3e0 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560daeb6f2f0 <line:740:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb6f028 <col:3> '_Bool' lvalue Var 0x560daeb6d5c0 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560daeb6f2d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560daeb6f2a8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560daeb6f1c8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560daeb6f0e8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560daeb6f0a0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560daeb6f088 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560daeb6f048 <col:20> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560daeb6f0d0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560daeb6f0b8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560daeb6f068 <col:38> '_Bool' lvalue Var 0x560daeb6d3e0 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x560daeb6f1a8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560daeb6f160 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560daeb6f148 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560daeb6f108 <col:56> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560daeb6f190 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560daeb6f178 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560daeb6f128 <col:74> '_Bool' lvalue Var 0x560daeb6d5c0 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560daeb6f260 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560daeb6f218 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560daeb6f1e8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560daeb6f290 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560daeb6f278 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560daeb6f240 <col:102> '_Bool' lvalue Var 0x560daeb6d5c0 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x560daeb6f348 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560daeb6f330 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560daeb6f310 <col:3> 'void ()' Function 0x560daeb13410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560daeb6f3a0 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560daeb6f388 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560daeb6f368 <col:3> 'void ()' Function 0x560daeb13350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560daeb6f458 <line:743:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560daeb6f3c0 <col:3> 'int' lvalue Var 0x560daeb6c590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560daeb6f438 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560daeb6f420 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560daeb6f3e0 <col:22> 'int' lvalue Var 0x560daeb6c590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560daeb6f400 <col:41> 'int' 1
|   |-CallExpr 0x560daeb6f4b0 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560daeb6f498 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560daeb6f478 <col:3> 'void ()' Function 0x560daeb13410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560daeb6f558 <line:745:3, col:36>
|     `-CallExpr 0x560daeb6f538 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560daeb6f520 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560daeb6f4d0 <col:10> 'void *(void)' Function 0x560daeb12e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560daeb6f6f8 prev 0x560daeb6c0b8 <line:747:1, line:782:1> line:747:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x560daeb6f660 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560daeb74cb8 <line:748:1, line:782:1>
|   |-CallExpr 0x560daeb6f7d8 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560daeb6f7c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560daeb6f7a0 <col:3> 'void ()' Function 0x560daeb13350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560daeb6f888 <line:750:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb6f7f8 <col:3> '_Bool' lvalue Var 0x560daeb6db30 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x560daeb6f870 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x560daeb6f850 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x560daeb6f838 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x560daeb6f818 <col:19> 'void *(void)' Function 0x560daeb12e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x560daeb6f938 <line:751:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb6f8a8 <col:3> '_Bool' lvalue Var 0x560daeb6dc20 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x560daeb6f920 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x560daeb6f900 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x560daeb6f8e8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x560daeb6f8c8 <col:19> 'void *(void)' Function 0x560daeb12e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x560daeb6f9b0 <line:752:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb6f958 <col:3> '_Bool' lvalue Var 0x560daeb6d270 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x560daeb6f998 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560daeb6f978 <col:21> '_Bool' lvalue Var 0x560daeb6dc20 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x560daeb6fa28 <line:753:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560daeb6f9d0 <col:3> 'int' lvalue Var 0x560daeb6d2f0 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x560daeb6fa10 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560daeb6f9f0 <col:15> 'int' lvalue Var 0x560daeb6d1d8 'x' 'int'
|   |-BinaryOperator 0x560daeb6fad8 <line:754:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb6fa48 <col:3> '_Bool' lvalue Var 0x560daeb6dba8 'weak$$choice1' '_Bool'
|   | `-ImplicitCastExpr 0x560daeb6fac0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x560daeb6faa0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x560daeb6fa88 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x560daeb6fa68 <col:19> 'void *(void)' Function 0x560daeb12e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x560daeb70518 <line:755:3, col:363> 'int' '='
|   | |-DeclRefExpr 0x560daeb6faf8 <col:3> 'int' lvalue Var 0x560daeb6d1d8 'x' 'int'
|   | `-ConditionalOperator 0x560daeb704e8 <col:7, col:363> 'int'
|   |   |-UnaryOperator 0x560daeb6fb50 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | `-ImplicitCastExpr 0x560daeb6fb38 <col:8> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560daeb6fb18 <col:8> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |   |-ImplicitCastExpr 0x560daeb704d0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560daeb6fb68 <col:25> 'int' lvalue Var 0x560daeb6d1d8 'x' 'int'
|   |   `-ParenExpr 0x560daeb704b0 <col:29, col:363> 'int'
|   |     `-ConditionalOperator 0x560daeb70480 <col:30, col:362> 'int'
|   |       |-BinaryOperator 0x560daeb6fc28 <col:30, col:48> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560daeb6fbe0 <col:30> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560daeb6fbc8 <col:30> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560daeb6fb88 <col:30> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560daeb6fc10 <col:48> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560daeb6fbf8 <col:48> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560daeb6fba8 <col:48> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560daeb70468 <col:65> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560daeb6fc48 <col:65> 'int' lvalue Var 0x560daeb6d828 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x560daeb70448 <col:77, col:362> 'int'
|   |         `-ConditionalOperator 0x560daeb70418 <col:78, col:361> 'int'
|   |           |-BinaryOperator 0x560daeb6fde8 <col:78, col:134> 'int' '&&'
|   |           | |-BinaryOperator 0x560daeb6fd78 <col:78, col:115> 'int' '&&'
|   |           | | |-BinaryOperator 0x560daeb6fd08 <col:78, col:97> 'int' '&&'
|   |           | | | |-ImplicitCastExpr 0x560daeb6fcf0 <col:78> 'int' <IntegralCast>
|   |           | | | | `-ImplicitCastExpr 0x560daeb6fcd8 <col:78> '_Bool' <LValueToRValue>
|   |           | | | |   `-DeclRefExpr 0x560daeb6fc68 <col:78> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |           | | | `-UnaryOperator 0x560daeb6fcc0 <col:96, col:97> 'int' prefix '!' cannot overflow
|   |           | | |   `-ImplicitCastExpr 0x560daeb6fca8 <col:97> '_Bool' <LValueToRValue>
|   |           | | |     `-DeclRefExpr 0x560daeb6fc88 <col:97> '_Bool' lvalue Var 0x560daeb6d638 'x$r_buff1_thd2' '_Bool'
|   |           | | `-ImplicitCastExpr 0x560daeb6fd60 <col:115> 'int' <IntegralCast>
|   |           | |   `-ImplicitCastExpr 0x560daeb6fd48 <col:115> '_Bool' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x560daeb6fd28 <col:115> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |           | `-UnaryOperator 0x560daeb6fdd0 <col:133, col:134> 'int' prefix '!' cannot overflow
|   |           |   `-ImplicitCastExpr 0x560daeb6fdb8 <col:134> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560daeb6fd98 <col:134> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |           |-ParenExpr 0x560daeb6ffe8 <col:151, col:211> 'int'
|   |           | `-ConditionalOperator 0x560daeb6ffb8 <col:152, col:210> 'int'
|   |           |   |-ImplicitCastExpr 0x560daeb6ff70 <col:152> 'int' <IntegralCast>
|   |           |   | `-ImplicitCastExpr 0x560daeb6ff58 <col:152> '_Bool' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x560daeb6fe08 <col:152> '_Bool' lvalue Var 0x560daeb6db30 'weak$$choice0' '_Bool'
|   |           |   |-ImplicitCastExpr 0x560daeb6ffa0 <col:168> 'int' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x560daeb6fe28 <col:168> 'int' lvalue Var 0x560daeb6d1d8 'x' 'int'
|   |           |   `-ParenExpr 0x560daeb6ff38 <col:172, col:210> 'int'
|   |           |     `-ConditionalOperator 0x560daeb6ff08 <col:173, col:201> 'int'
|   |           |       |-ImplicitCastExpr 0x560daeb6fec0 <col:173> 'int' <IntegralCast>
|   |           |       | `-ImplicitCastExpr 0x560daeb6fea8 <col:173> '_Bool' <LValueToRValue>
|   |           |       |   `-DeclRefExpr 0x560daeb6fe48 <col:173> '_Bool' lvalue Var 0x560daeb6dba8 'weak$$choice1' '_Bool'
|   |           |       |-ImplicitCastExpr 0x560daeb6fed8 <col:189> 'int' <LValueToRValue>
|   |           |       | `-DeclRefExpr 0x560daeb6fe68 <col:189> 'int' lvalue Var 0x560daeb6d828 'x$w_buff0' 'int'
|   |           |       `-ImplicitCastExpr 0x560daeb6fef0 <col:201> 'int' <LValueToRValue>
|   |           |         `-DeclRefExpr 0x560daeb6fe88 <col:201> 'int' lvalue Var 0x560daeb6d920 'x$w_buff1' 'int'
|   |           `-ParenExpr 0x560daeb703f8 <col:215, col:361> 'int'
|   |             `-ConditionalOperator 0x560daeb703c8 <col:216, col:360> 'int'
|   |               |-BinaryOperator 0x560daeb70188 <col:216, col:271> 'int' '&&'
|   |               | |-BinaryOperator 0x560daeb70118 <col:216, col:252> 'int' '&&'
|   |               | | |-BinaryOperator 0x560daeb700a8 <col:216, col:234> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x560daeb70060 <col:216> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x560daeb70048 <col:216> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x560daeb70008 <col:216> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |               | | | `-ImplicitCastExpr 0x560daeb70090 <col:234> 'int' <IntegralCast>
|   |               | | |   `-ImplicitCastExpr 0x560daeb70078 <col:234> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x560daeb70028 <col:234> '_Bool' lvalue Var 0x560daeb6d638 'x$r_buff1_thd2' '_Bool'
|   |               | | `-ImplicitCastExpr 0x560daeb70100 <col:252> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x560daeb700e8 <col:252> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x560daeb700c8 <col:252> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x560daeb70170 <col:270, col:271> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x560daeb70158 <col:271> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x560daeb70138 <col:271> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |               |-ParenExpr 0x560daeb70298 <col:288, col:326> 'int'
|   |               | `-ConditionalOperator 0x560daeb70268 <col:289, col:317> 'int'
|   |               |   |-ImplicitCastExpr 0x560daeb70220 <col:289> 'int' <IntegralCast>
|   |               |   | `-ImplicitCastExpr 0x560daeb70208 <col:289> '_Bool' <LValueToRValue>
|   |               |   |   `-DeclRefExpr 0x560daeb701a8 <col:289> '_Bool' lvalue Var 0x560daeb6db30 'weak$$choice0' '_Bool'
|   |               |   |-ImplicitCastExpr 0x560daeb70238 <col:305> 'int' <LValueToRValue>
|   |               |   | `-DeclRefExpr 0x560daeb701c8 <col:305> 'int' lvalue Var 0x560daeb6d920 'x$w_buff1' 'int'
|   |               |   `-ImplicitCastExpr 0x560daeb70250 <col:317> 'int' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x560daeb701e8 <col:317> 'int' lvalue Var 0x560daeb6d828 'x$w_buff0' 'int'
|   |               `-ParenExpr 0x560daeb703a8 <col:330, col:360> 'int'
|   |                 `-ConditionalOperator 0x560daeb70378 <col:331, col:359> 'int'
|   |                   |-ImplicitCastExpr 0x560daeb70330 <col:331> 'int' <IntegralCast>
|   |                   | `-ImplicitCastExpr 0x560daeb70318 <col:331> '_Bool' <LValueToRValue>
|   |                   |   `-DeclRefExpr 0x560daeb702b8 <col:331> '_Bool' lvalue Var 0x560daeb6db30 'weak$$choice0' '_Bool'
|   |                   |-ImplicitCastExpr 0x560daeb70348 <col:347> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x560daeb702d8 <col:347> 'int' lvalue Var 0x560daeb6d828 'x$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x560daeb70360 <col:359> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x560daeb702f8 <col:359> 'int' lvalue Var 0x560daeb6d1d8 'x' 'int'
|   |-BinaryOperator 0x560daeb70cb8 <line:756:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x560daeb70538 <col:3> 'int' lvalue Var 0x560daeb6d828 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x560daeb70c88 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x560daeb70c58 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560daeb70c40 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560daeb70558 <col:15> '_Bool' lvalue Var 0x560daeb6dc20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560daeb70c70 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560daeb70578 <col:31> 'int' lvalue Var 0x560daeb6d828 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x560daeb70c20 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x560daeb70bf0 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x560daeb705d0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x560daeb705b8 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x560daeb70598 <col:45> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x560daeb70bd8 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560daeb705e8 <col:62> 'int' lvalue Var 0x560daeb6d828 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x560daeb70bb8 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x560daeb70b88 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x560daeb706a8 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560daeb70660 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560daeb70648 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560daeb70608 <col:75> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560daeb70690 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560daeb70678 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560daeb70628 <col:93> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x560daeb70b70 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560daeb706c8 <col:110> 'int' lvalue Var 0x560daeb6d828 'x$w_buff0' 'int'
|   |           `-ParenExpr 0x560daeb70b50 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x560daeb70b20 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x560daeb70868 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x560daeb707f8 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x560daeb70788 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x560daeb70770 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x560daeb70758 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x560daeb706e8 <col:123> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x560daeb70740 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x560daeb70728 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x560daeb70708 <col:142> '_Bool' lvalue Var 0x560daeb6d638 'x$r_buff1_thd2' '_Bool'
|   |               | | `-ImplicitCastExpr 0x560daeb707e0 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x560daeb707c8 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x560daeb707a8 <col:160> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x560daeb70850 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x560daeb70838 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x560daeb70818 <col:179> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |               |-ImplicitCastExpr 0x560daeb70b08 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x560daeb70888 <col:196> 'int' lvalue Var 0x560daeb6d828 'x$w_buff0' 'int'
|   |               `-ParenExpr 0x560daeb70ae8 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x560daeb70ab8 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x560daeb70a28 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x560daeb709b8 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x560daeb70948 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x560daeb70900 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x560daeb708e8 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x560daeb708a8 <col:209> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x560daeb70930 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x560daeb70918 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x560daeb708c8 <col:227> '_Bool' lvalue Var 0x560daeb6d638 'x$r_buff1_thd2' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x560daeb709a0 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x560daeb70988 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x560daeb70968 <col:245> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x560daeb70a10 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x560daeb709f8 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x560daeb709d8 <col:264> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |                   |-ImplicitCastExpr 0x560daeb70a88 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x560daeb70a48 <col:281> 'int' lvalue Var 0x560daeb6d828 'x$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x560daeb70aa0 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x560daeb70a68 <col:293> 'int' lvalue Var 0x560daeb6d828 'x$w_buff0' 'int'
|   |-BinaryOperator 0x560daeb71470 <line:757:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x560daeb70cd8 <col:3> 'int' lvalue Var 0x560daeb6d920 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x560daeb71440 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x560daeb71410 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560daeb713f8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560daeb70cf8 <col:15> '_Bool' lvalue Var 0x560daeb6dc20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560daeb71428 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560daeb70d18 <col:31> 'int' lvalue Var 0x560daeb6d920 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x560daeb713d8 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x560daeb713a8 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x560daeb70d70 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x560daeb70d58 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x560daeb70d38 <col:45> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x560daeb71390 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560daeb70d88 <col:62> 'int' lvalue Var 0x560daeb6d920 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x560daeb71370 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x560daeb71340 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x560daeb70e48 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560daeb70e00 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560daeb70de8 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560daeb70da8 <col:75> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560daeb70e30 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560daeb70e18 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560daeb70dc8 <col:93> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x560daeb71328 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560daeb70e68 <col:110> 'int' lvalue Var 0x560daeb6d920 'x$w_buff1' 'int'
|   |           `-ParenExpr 0x560daeb71308 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x560daeb712d8 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x560daeb71020 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x560daeb70fb0 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x560daeb70f28 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x560daeb70f10 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x560daeb70ef8 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x560daeb70e88 <col:123> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x560daeb70ee0 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x560daeb70ec8 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x560daeb70ea8 <col:142> '_Bool' lvalue Var 0x560daeb6d638 'x$r_buff1_thd2' '_Bool'
|   |               | | `-ImplicitCastExpr 0x560daeb70f80 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x560daeb70f68 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x560daeb70f48 <col:160> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x560daeb71008 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x560daeb70ff0 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x560daeb70fd0 <col:179> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |               |-ImplicitCastExpr 0x560daeb712c0 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x560daeb71040 <col:196> 'int' lvalue Var 0x560daeb6d920 'x$w_buff1' 'int'
|   |               `-ParenExpr 0x560daeb712a0 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x560daeb71270 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x560daeb711e0 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x560daeb71170 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x560daeb71100 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x560daeb710b8 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x560daeb710a0 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x560daeb71060 <col:209> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x560daeb710e8 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x560daeb710d0 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x560daeb71080 <col:227> '_Bool' lvalue Var 0x560daeb6d638 'x$r_buff1_thd2' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x560daeb71158 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x560daeb71140 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x560daeb71120 <col:245> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x560daeb711c8 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x560daeb711b0 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x560daeb71190 <col:264> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |                   |-ImplicitCastExpr 0x560daeb71240 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x560daeb71200 <col:281> 'int' lvalue Var 0x560daeb6d920 'x$w_buff1' 'int'
|   |                   `-ImplicitCastExpr 0x560daeb71258 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x560daeb71220 <col:293> 'int' lvalue Var 0x560daeb6d920 'x$w_buff1' 'int'
|   |-BinaryOperator 0x560daeb71d48 <line:758:3, col:349> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb71490 <col:3> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560daeb71d30 <col:20, col:349> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560daeb71d00 <col:20, col:349> 'int'
|   |     |-ImplicitCastExpr 0x560daeb71cb8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560daeb71ca0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560daeb714b0 <col:20> '_Bool' lvalue Var 0x560daeb6dc20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560daeb71ce8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560daeb71cd0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560daeb714d0 <col:36> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x560daeb71c80 <col:53, col:349> 'int'
|   |       `-ConditionalOperator 0x560daeb71c50 <col:54, col:348> 'int'
|   |         |-UnaryOperator 0x560daeb71528 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x560daeb71510 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560daeb714f0 <col:55> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x560daeb71c38 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560daeb71c20 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560daeb71540 <col:72> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x560daeb71c00 <col:89, col:348> 'int'
|   |           `-ConditionalOperator 0x560daeb71bd0 <col:90, col:347> 'int'
|   |             |-BinaryOperator 0x560daeb71600 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560daeb715b8 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560daeb715a0 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560daeb71560 <col:90> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560daeb715e8 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560daeb715d0 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560daeb71580 <col:108> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x560daeb71bb8 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560daeb71650 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560daeb71620 <col:132> 'int' 0
|   |             `-ParenExpr 0x560daeb71b98 <col:136, col:347> 'int'
|   |               `-ConditionalOperator 0x560daeb71b68 <col:137, col:346> 'int'
|   |                 |-BinaryOperator 0x560daeb717f8 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x560daeb71788 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x560daeb71718 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x560daeb71700 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x560daeb716e8 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x560daeb71678 <col:137> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x560daeb716d0 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x560daeb716b8 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x560daeb71698 <col:156> '_Bool' lvalue Var 0x560daeb6d638 'x$r_buff1_thd2' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x560daeb71770 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x560daeb71758 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x560daeb71738 <col:174> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x560daeb717e0 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x560daeb717c8 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x560daeb717a8 <col:193> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |                 |-BinaryOperator 0x560daeb718b8 <col:210, col:228> 'int' '||'
|   |                 | |-ImplicitCastExpr 0x560daeb718a0 <col:210> 'int' <IntegralCast>
|   |                 | | `-ImplicitCastExpr 0x560daeb71888 <col:210> '_Bool' <LValueToRValue>
|   |                 | |   `-DeclRefExpr 0x560daeb71818 <col:210> '_Bool' lvalue Var 0x560daeb6db30 'weak$$choice0' '_Bool'
|   |                 | `-UnaryOperator 0x560daeb71870 <col:227, col:228> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x560daeb71858 <col:228> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x560daeb71838 <col:228> '_Bool' lvalue Var 0x560daeb6dba8 'weak$$choice1' '_Bool'
|   |                 `-ParenExpr 0x560daeb71b48 <col:244, col:346> 'int'
|   |                   `-ConditionalOperator 0x560daeb71b18 <col:245, col:333> 'int'
|   |                     |-BinaryOperator 0x560daeb71a58 <col:245, col:300> 'int' '&&'
|   |                     | |-BinaryOperator 0x560daeb719e8 <col:245, col:281> 'int' '&&'
|   |                     | | |-BinaryOperator 0x560daeb71978 <col:245, col:263> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x560daeb71930 <col:245> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x560daeb71918 <col:245> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x560daeb718d8 <col:245> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x560daeb71960 <col:263> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x560daeb71948 <col:263> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x560daeb718f8 <col:263> '_Bool' lvalue Var 0x560daeb6d638 'x$r_buff1_thd2' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x560daeb719d0 <col:281> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x560daeb719b8 <col:281> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x560daeb71998 <col:281> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x560daeb71a40 <col:299, col:300> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x560daeb71a28 <col:300> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x560daeb71a08 <col:300> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |                     |-ImplicitCastExpr 0x560daeb71ad0 <col:317> 'int' <IntegralCast>
|   |                     | `-ImplicitCastExpr 0x560daeb71ab8 <col:317> '_Bool' <LValueToRValue>
|   |                     |   `-DeclRefExpr 0x560daeb71a78 <col:317> '_Bool' lvalue Var 0x560daeb6db30 'weak$$choice0' '_Bool'
|   |                     `-ImplicitCastExpr 0x560daeb71b00 <col:333> 'int' <IntegralCast>
|   |                       `-ImplicitCastExpr 0x560daeb71ae8 <col:333> '_Bool' <LValueToRValue>
|   |                         `-DeclRefExpr 0x560daeb71a98 <col:333> '_Bool' lvalue Var 0x560daeb6db30 'weak$$choice0' '_Bool'
|   |-BinaryOperator 0x560daeb72608 <line:759:3, col:321> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb71d68 <col:3> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560daeb725f0 <col:20, col:321> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560daeb725c0 <col:20, col:321> 'int'
|   |     |-ImplicitCastExpr 0x560daeb72578 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560daeb72560 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560daeb71d88 <col:20> '_Bool' lvalue Var 0x560daeb6dc20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560daeb725a8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560daeb72590 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560daeb71da8 <col:36> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x560daeb72540 <col:53, col:321> 'int'
|   |       `-ConditionalOperator 0x560daeb72510 <col:54, col:320> 'int'
|   |         |-UnaryOperator 0x560daeb71e00 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x560daeb71de8 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560daeb71dc8 <col:55> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x560daeb724f8 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560daeb724e0 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560daeb71e18 <col:72> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x560daeb724c0 <col:89, col:320> 'int'
|   |           `-ConditionalOperator 0x560daeb72490 <col:90, col:319> 'int'
|   |             |-BinaryOperator 0x560daeb71ed8 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560daeb71e90 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560daeb71e78 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560daeb71e38 <col:90> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560daeb71ec0 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560daeb71ea8 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560daeb71e58 <col:108> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x560daeb72478 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560daeb71f28 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560daeb71ef8 <col:132> 'int' 0
|   |             `-ParenExpr 0x560daeb72458 <col:136, col:319> 'int'
|   |               `-ConditionalOperator 0x560daeb72428 <col:137, col:318> 'int'
|   |                 |-BinaryOperator 0x560daeb720e8 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x560daeb72078 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x560daeb72008 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x560daeb71ff0 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x560daeb71fd8 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x560daeb71f50 <col:137> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x560daeb71fc0 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x560daeb71f90 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x560daeb71f70 <col:156> '_Bool' lvalue Var 0x560daeb6d638 'x$r_buff1_thd2' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x560daeb72060 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x560daeb72048 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x560daeb72028 <col:174> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x560daeb720d0 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x560daeb720b8 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x560daeb72098 <col:193> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |                 |-ImplicitCastExpr 0x560daeb72410 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x560daeb723f8 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x560daeb72108 <col:210> '_Bool' lvalue Var 0x560daeb6db30 'weak$$choice0' '_Bool'
|   |                 `-ParenExpr 0x560daeb723d8 <col:226, col:318> 'int'
|   |                   `-ConditionalOperator 0x560daeb723a8 <col:227, col:317> 'int'
|   |                     |-BinaryOperator 0x560daeb722a8 <col:227, col:282> 'int' '&&'
|   |                     | |-BinaryOperator 0x560daeb72238 <col:227, col:263> 'int' '&&'
|   |                     | | |-BinaryOperator 0x560daeb721c8 <col:227, col:245> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x560daeb72180 <col:227> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x560daeb72168 <col:227> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x560daeb72128 <col:227> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x560daeb721b0 <col:245> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x560daeb72198 <col:245> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x560daeb72148 <col:245> '_Bool' lvalue Var 0x560daeb6d638 'x$r_buff1_thd2' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x560daeb72220 <col:263> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x560daeb72208 <col:263> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x560daeb721e8 <col:263> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x560daeb72290 <col:281, col:282> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x560daeb72278 <col:282> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x560daeb72258 <col:282> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |                     |-ImplicitCastExpr 0x560daeb72378 <col:299, col:306> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x560daeb722f8 <col:299, col:306> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x560daeb722c8 <col:306> 'int' 0
|   |                     `-ImplicitCastExpr 0x560daeb72390 <col:310, col:317> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x560daeb72350 <col:310, col:317> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x560daeb72320 <col:317> 'int' 0
|   |-BinaryOperator 0x560daeb72eb0 <line:760:3, col:322> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb72628 <col:3> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560daeb72e98 <col:20, col:322> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560daeb72e68 <col:20, col:322> 'int'
|   |     |-ImplicitCastExpr 0x560daeb72e20 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560daeb72e08 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560daeb72648 <col:20> '_Bool' lvalue Var 0x560daeb6dc20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560daeb72e50 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560daeb72e38 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560daeb72668 <col:36> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x560daeb72de8 <col:53, col:322> 'int'
|   |       `-ConditionalOperator 0x560daeb72db8 <col:54, col:321> 'int'
|   |         |-UnaryOperator 0x560daeb726c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x560daeb726a8 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560daeb72688 <col:55> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x560daeb72da0 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560daeb72d88 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560daeb726d8 <col:72> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x560daeb72d68 <col:89, col:321> 'int'
|   |           `-ConditionalOperator 0x560daeb72d38 <col:90, col:320> 'int'
|   |             |-BinaryOperator 0x560daeb72798 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560daeb72750 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560daeb72738 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560daeb726f8 <col:90> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560daeb72780 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560daeb72768 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560daeb72718 <col:108> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x560daeb72d20 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560daeb727e8 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560daeb727b8 <col:132> 'int' 0
|   |             `-ParenExpr 0x560daeb72d00 <col:136, col:320> 'int'
|   |               `-ConditionalOperator 0x560daeb72cd0 <col:137, col:319> 'int'
|   |                 |-BinaryOperator 0x560daeb72990 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x560daeb72920 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x560daeb728b0 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x560daeb72898 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x560daeb72880 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x560daeb72810 <col:137> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x560daeb72868 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x560daeb72850 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x560daeb72830 <col:156> '_Bool' lvalue Var 0x560daeb6d638 'x$r_buff1_thd2' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x560daeb72908 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x560daeb728f0 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x560daeb728d0 <col:174> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x560daeb72978 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x560daeb72960 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x560daeb72940 <col:193> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |                 |-ImplicitCastExpr 0x560daeb72cb8 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x560daeb72ca0 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x560daeb729b0 <col:210> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |                 `-ParenExpr 0x560daeb72c80 <col:227, col:319> 'int'
|   |                   `-ConditionalOperator 0x560daeb72c50 <col:228, col:318> 'int'
|   |                     |-BinaryOperator 0x560daeb72b50 <col:228, col:283> 'int' '&&'
|   |                     | |-BinaryOperator 0x560daeb72ae0 <col:228, col:264> 'int' '&&'
|   |                     | | |-BinaryOperator 0x560daeb72a70 <col:228, col:246> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x560daeb72a28 <col:228> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x560daeb72a10 <col:228> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x560daeb729d0 <col:228> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x560daeb72a58 <col:246> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x560daeb72a40 <col:246> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x560daeb729f0 <col:246> '_Bool' lvalue Var 0x560daeb6d638 'x$r_buff1_thd2' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x560daeb72ac8 <col:264> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x560daeb72ab0 <col:264> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x560daeb72a90 <col:264> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x560daeb72b38 <col:282, col:283> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x560daeb72b20 <col:283> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x560daeb72b00 <col:283> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |                     |-ImplicitCastExpr 0x560daeb72c20 <col:300, col:307> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x560daeb72ba0 <col:300, col:307> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x560daeb72b70 <col:307> 'int' 0
|   |                     `-ImplicitCastExpr 0x560daeb72c38 <col:311, col:318> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x560daeb72bf8 <col:311, col:318> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x560daeb72bc8 <col:318> 'int' 0
|   |-BinaryOperator 0x560daeb73878 <line:761:3, col:351> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb72ed0 <col:3> '_Bool' lvalue Var 0x560daeb6d638 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560daeb73860 <col:20, col:351> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560daeb73830 <col:20, col:351> 'int'
|   |     |-ImplicitCastExpr 0x560daeb737e8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560daeb737d0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560daeb72ef0 <col:20> '_Bool' lvalue Var 0x560daeb6dc20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560daeb73818 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560daeb73800 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560daeb72f10 <col:36> '_Bool' lvalue Var 0x560daeb6d638 'x$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x560daeb737b0 <col:53, col:351> 'int'
|   |       `-ConditionalOperator 0x560daeb73780 <col:54, col:350> 'int'
|   |         |-UnaryOperator 0x560daeb72f68 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x560daeb72f50 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560daeb72f30 <col:55> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x560daeb73768 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560daeb73750 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560daeb72f80 <col:72> '_Bool' lvalue Var 0x560daeb6d638 'x$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x560daeb73730 <col:89, col:350> 'int'
|   |           `-ConditionalOperator 0x560daeb73700 <col:90, col:349> 'int'
|   |             |-BinaryOperator 0x560daeb73050 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560daeb73008 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560daeb72ff0 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560daeb72fa0 <col:90> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560daeb73038 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560daeb73020 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560daeb72fd0 <col:108> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x560daeb736e8 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560daeb730a0 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560daeb73070 <col:132> 'int' 0
|   |             `-ParenExpr 0x560daeb736c8 <col:136, col:349> 'int'
|   |               `-ConditionalOperator 0x560daeb73698 <col:137, col:348> 'int'
|   |                 |-BinaryOperator 0x560daeb73248 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x560daeb731d8 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x560daeb73168 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x560daeb73150 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x560daeb73138 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x560daeb730c8 <col:137> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x560daeb73120 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x560daeb73108 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x560daeb730e8 <col:156> '_Bool' lvalue Var 0x560daeb6d638 'x$r_buff1_thd2' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x560daeb731c0 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x560daeb731a8 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x560daeb73188 <col:174> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x560daeb73230 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x560daeb73218 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x560daeb731f8 <col:193> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |                 |-ParenExpr 0x560daeb733a8 <col:210, col:252> 'int'
|   |                 | `-ConditionalOperator 0x560daeb73378 <col:211, col:251> 'int'
|   |                 |   |-ImplicitCastExpr 0x560daeb73318 <col:211> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x560daeb73300 <col:211> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x560daeb73268 <col:211> '_Bool' lvalue Var 0x560daeb6db30 'weak$$choice0' '_Bool'
|   |                 |   |-ImplicitCastExpr 0x560daeb73348 <col:227> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x560daeb73330 <col:227> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x560daeb73288 <col:227> '_Bool' lvalue Var 0x560daeb6d638 'x$r_buff1_thd2' '_Bool'
|   |                 |   `-ImplicitCastExpr 0x560daeb73360 <col:244, col:251> 'int' <IntegralCast>
|   |                 |     `-CStyleCastExpr 0x560daeb732d8 <col:244, col:251> '_Bool' <IntegralToBoolean>
|   |                 |       `-IntegerLiteral 0x560daeb732a8 <col:251> 'int' 0
|   |                 `-ParenExpr 0x560daeb73678 <col:256, col:348> 'int'
|   |                   `-ConditionalOperator 0x560daeb73648 <col:257, col:347> 'int'
|   |                     |-BinaryOperator 0x560daeb73548 <col:257, col:312> 'int' '&&'
|   |                     | |-BinaryOperator 0x560daeb734d8 <col:257, col:293> 'int' '&&'
|   |                     | | |-BinaryOperator 0x560daeb73468 <col:257, col:275> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x560daeb73420 <col:257> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x560daeb73408 <col:257> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x560daeb733c8 <col:257> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x560daeb73450 <col:275> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x560daeb73438 <col:275> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x560daeb733e8 <col:275> '_Bool' lvalue Var 0x560daeb6d638 'x$r_buff1_thd2' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x560daeb734c0 <col:293> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x560daeb734a8 <col:293> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x560daeb73488 <col:293> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x560daeb73530 <col:311, col:312> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x560daeb73518 <col:312> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x560daeb734f8 <col:312> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |                     |-ImplicitCastExpr 0x560daeb73618 <col:329, col:336> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x560daeb73598 <col:329, col:336> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x560daeb73568 <col:336> 'int' 0
|   |                     `-ImplicitCastExpr 0x560daeb73630 <col:340, col:347> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x560daeb735f0 <col:340, col:347> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x560daeb735c0 <col:347> 'int' 0
|   |-BinaryOperator 0x560daeb73910 <line:762:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb73898 <col:3> '_Bool' lvalue Var 0x560daeb6cd20 '__unbuffered_p1_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x560daeb738e8 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560daeb738b8 <col:45> 'int' 1
|   |-BinaryOperator 0x560daeb73988 <line:763:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x560daeb73930 <col:3> 'int *' lvalue Var 0x560daeb6cda0 '__unbuffered_p1_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x560daeb73970 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x560daeb73950 <col:43> 'int' lvalue Var 0x560daeb6d1d8 'x' 'int'
|   |-BinaryOperator 0x560daeb73a00 <line:764:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560daeb739a8 <col:3> 'int' lvalue Var 0x560daeb6c7d0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x560daeb739e8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560daeb739c8 <col:25> 'int' lvalue Var 0x560daeb6d1d8 'x' 'int'
|   |-BinaryOperator 0x560daeb73b30 <line:765:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x560daeb73a20 <col:3> 'int' lvalue Var 0x560daeb6d1d8 'x' 'int'
|   | `-ConditionalOperator 0x560daeb73b00 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x560daeb73ab8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560daeb73aa0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560daeb73a40 <col:7> '_Bool' lvalue Var 0x560daeb6d270 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x560daeb73ad0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560daeb73a60 <col:25> 'int' lvalue Var 0x560daeb6d2f0 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x560daeb73ae8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x560daeb73a80 <col:37> 'int' lvalue Var 0x560daeb6d1d8 'x' 'int'
|   |-BinaryOperator 0x560daeb73bc8 <line:766:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb73b50 <col:3> '_Bool' lvalue Var 0x560daeb6d270 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x560daeb73ba0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560daeb73b70 <col:28> 'int' 0
|   |-CallExpr 0x560daeb73c20 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560daeb73c08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560daeb73be8 <col:3> 'void ()' Function 0x560daeb13410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560daeb73c78 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560daeb73c60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560daeb73c40 <col:3> 'void ()' Function 0x560daeb13350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560daeb73cd8 <line:769:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560daeb73c98 <col:3> 'int' lvalue Var 0x560daeb6da98 'y' 'int'
|   | `-IntegerLiteral 0x560daeb73cb8 <col:7> 'int' 1
|   |-CallExpr 0x560daeb73d30 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560daeb73d18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560daeb73cf8 <col:3> 'void ()' Function 0x560daeb13410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560daeb73d88 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560daeb73d70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560daeb73d50 <col:3> 'void ()' Function 0x560daeb13350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560daeb74090 <line:772:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560daeb73da8 <col:3> 'int' lvalue Var 0x560daeb6d1d8 'x' 'int'
|   | `-ConditionalOperator 0x560daeb74060 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560daeb73e68 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560daeb73e20 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560daeb73e08 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560daeb73dc8 <col:7> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560daeb73e50 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560daeb73e38 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560daeb73de8 <col:25> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x560daeb74048 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560daeb73e88 <col:42> 'int' lvalue Var 0x560daeb6d828 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x560daeb74028 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560daeb73ff8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560daeb73f48 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560daeb73f00 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560daeb73ee8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560daeb73ea8 <col:55> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560daeb73f30 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560daeb73f18 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560daeb73ec8 <col:73> '_Bool' lvalue Var 0x560daeb6d638 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560daeb73fa8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560daeb73f68 <col:90> 'int' lvalue Var 0x560daeb6d920 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560daeb73fe0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560daeb73f88 <col:102> 'int' lvalue Var 0x560daeb6d1d8 'x' 'int'
|   |-BinaryOperator 0x560daeb74298 <line:773:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb740b0 <col:3> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560daeb74280 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560daeb74250 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560daeb74170 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560daeb74128 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560daeb74110 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560daeb740d0 <col:20> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560daeb74158 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560daeb74140 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560daeb740f0 <col:38> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560daeb74208 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560daeb741c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560daeb74190 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560daeb74238 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560daeb74220 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560daeb741e8 <col:66> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560daeb74580 <line:774:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb742b8 <col:3> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560daeb74568 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560daeb74538 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560daeb74458 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560daeb74378 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560daeb74330 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560daeb74318 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560daeb742d8 <col:20> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560daeb74360 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560daeb74348 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560daeb742f8 <col:38> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x560daeb74438 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560daeb743f0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560daeb743d8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560daeb74398 <col:56> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560daeb74420 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560daeb74408 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560daeb743b8 <col:74> '_Bool' lvalue Var 0x560daeb6d638 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560daeb744f0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560daeb744a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560daeb74478 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560daeb74520 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560daeb74508 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560daeb744d0 <col:102> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560daeb74788 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb745a0 <col:3> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560daeb74770 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560daeb74740 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560daeb74660 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560daeb74618 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560daeb74600 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560daeb745c0 <col:20> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560daeb74648 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560daeb74630 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560daeb745e0 <col:38> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560daeb746f8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560daeb746b0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560daeb74680 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560daeb74728 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560daeb74710 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560daeb746d8 <col:66> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560daeb74a70 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb747a8 <col:3> '_Bool' lvalue Var 0x560daeb6d638 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560daeb74a58 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560daeb74a28 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560daeb74948 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560daeb74868 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560daeb74820 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560daeb74808 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560daeb747c8 <col:20> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560daeb74850 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560daeb74838 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560daeb747e8 <col:38> '_Bool' lvalue Var 0x560daeb6d458 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x560daeb74928 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560daeb748e0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560daeb748c8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560daeb74888 <col:56> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560daeb74910 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560daeb748f8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560daeb748a8 <col:74> '_Bool' lvalue Var 0x560daeb6d638 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560daeb749e0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560daeb74998 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560daeb74968 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560daeb74a10 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560daeb749f8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560daeb749c0 <col:102> '_Bool' lvalue Var 0x560daeb6d638 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x560daeb74ac8 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560daeb74ab0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560daeb74a90 <col:3> 'void ()' Function 0x560daeb13410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560daeb74b20 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560daeb74b08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560daeb74ae8 <col:3> 'void ()' Function 0x560daeb13350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560daeb74bd8 <line:779:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560daeb74b40 <col:3> 'int' lvalue Var 0x560daeb6c590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560daeb74bb8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560daeb74ba0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560daeb74b60 <col:22> 'int' lvalue Var 0x560daeb6c590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560daeb74b80 <col:41> 'int' 1
|   |-CallExpr 0x560daeb74c30 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560daeb74c18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560daeb74bf8 <col:3> 'void ()' Function 0x560daeb13410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560daeb74ca8 <line:781:3, col:36>
|     `-CallExpr 0x560daeb74c88 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560daeb74c70 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560daeb74c50 <col:10> 'void *(void)' Function 0x560daeb12e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560daeb74e80 prev 0x560daeb6c210 <line:783:1, line:799:1> line:783:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x560daeb74de8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560daeb76000 <line:784:1, line:799:1>
|   |-CallExpr 0x560daeb74f60 <line:785:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560daeb74f48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560daeb74f28 <col:3> 'void ()' Function 0x560daeb13350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560daeb74fc0 <line:786:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560daeb74f80 <col:3> 'int' lvalue Var 0x560daeb6da98 'y' 'int'
|   | `-IntegerLiteral 0x560daeb74fa0 <col:7> 'int' 2
|   |-CallExpr 0x560daeb75028 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560daeb75010 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560daeb74ff0 <col:3> 'void ()' Function 0x560daeb13410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560daeb75080 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560daeb75068 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560daeb75048 <col:3> 'void ()' Function 0x560daeb13350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560daeb75368 <line:789:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560daeb750a0 <col:3> 'int' lvalue Var 0x560daeb6d1d8 'x' 'int'
|   | `-ConditionalOperator 0x560daeb75338 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560daeb75160 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560daeb75118 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560daeb75100 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560daeb750c0 <col:7> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560daeb75148 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560daeb75130 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560daeb750e0 <col:25> '_Bool' lvalue Var 0x560daeb6d4d0 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x560daeb75320 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560daeb75180 <col:42> 'int' lvalue Var 0x560daeb6d828 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x560daeb75300 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560daeb752d0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560daeb75240 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560daeb751f8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560daeb751e0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560daeb751a0 <col:55> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560daeb75228 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560daeb75210 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560daeb751c0 <col:73> '_Bool' lvalue Var 0x560daeb6d6b0 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560daeb752a0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560daeb75260 <col:90> 'int' lvalue Var 0x560daeb6d920 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560daeb752b8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560daeb75280 <col:102> 'int' lvalue Var 0x560daeb6d1d8 'x' 'int'
|   |-BinaryOperator 0x560daeb75570 <line:790:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb75388 <col:3> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560daeb75558 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560daeb75528 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560daeb75448 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560daeb75400 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560daeb753e8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560daeb753a8 <col:20> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560daeb75430 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560daeb75418 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560daeb753c8 <col:38> '_Bool' lvalue Var 0x560daeb6d4d0 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560daeb754e0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560daeb75498 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560daeb75468 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560daeb75510 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560daeb754f8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560daeb754c0 <col:66> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560daeb75858 <line:791:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb75590 <col:3> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560daeb75840 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560daeb75810 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560daeb75730 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560daeb75650 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560daeb75608 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560daeb755f0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560daeb755b0 <col:20> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560daeb75638 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560daeb75620 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560daeb755d0 <col:38> '_Bool' lvalue Var 0x560daeb6d4d0 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x560daeb75710 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560daeb756c8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560daeb756b0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560daeb75670 <col:56> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560daeb756f8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560daeb756e0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560daeb75690 <col:74> '_Bool' lvalue Var 0x560daeb6d6b0 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560daeb757c8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560daeb75780 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560daeb75750 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560daeb757f8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560daeb757e0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560daeb757a8 <col:102> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560daeb75a60 <line:792:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb75878 <col:3> '_Bool' lvalue Var 0x560daeb6d4d0 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560daeb75a48 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560daeb75a18 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560daeb75938 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560daeb758f0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560daeb758d8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560daeb75898 <col:20> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560daeb75920 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560daeb75908 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560daeb758b8 <col:38> '_Bool' lvalue Var 0x560daeb6d4d0 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560daeb759d0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560daeb75988 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560daeb75958 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560daeb75a00 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560daeb759e8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560daeb759b0 <col:66> '_Bool' lvalue Var 0x560daeb6d4d0 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560daeb75d48 <line:793:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560daeb75a80 <col:3> '_Bool' lvalue Var 0x560daeb6d6b0 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560daeb75d30 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560daeb75d00 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560daeb75c20 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560daeb75b40 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560daeb75af8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560daeb75ae0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560daeb75aa0 <col:20> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560daeb75b28 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560daeb75b10 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560daeb75ac0 <col:38> '_Bool' lvalue Var 0x560daeb6d4d0 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x560daeb75c00 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560daeb75bb8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560daeb75ba0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560daeb75b60 <col:56> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560daeb75be8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560daeb75bd0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560daeb75b80 <col:74> '_Bool' lvalue Var 0x560daeb6d6b0 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560daeb75cb8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560daeb75c70 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560daeb75c40 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560daeb75ce8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560daeb75cd0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560daeb75c98 <col:102> '_Bool' lvalue Var 0x560daeb6d6b0 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x560daeb75da0 <line:794:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560daeb75d88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560daeb75d68 <col:3> 'void ()' Function 0x560daeb13410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560daeb75df8 <line:795:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560daeb75de0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560daeb75dc0 <col:3> 'void ()' Function 0x560daeb13350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560daeb75eb0 <line:796:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560daeb75e18 <col:3> 'int' lvalue Var 0x560daeb6c590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560daeb75e90 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560daeb75e78 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560daeb75e38 <col:22> 'int' lvalue Var 0x560daeb6c590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560daeb75e58 <col:41> 'int' 1
|   |-CallExpr 0x560daeb75f08 <line:797:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560daeb75ef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560daeb75ed0 <col:3> 'void ()' Function 0x560daeb13410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560daeb75f80 <line:798:3, col:36>
|     `-CallExpr 0x560daeb75f60 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560daeb75f48 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560daeb75f28 <col:10> 'void *(void)' Function 0x560daeb12e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560daeb760a0 prev 0x560daeb6c2d8 <line:800:1, line:802:1> line:800:6 fence 'void ()'
| `-CompoundStmt 0x560daeb76140 <line:801:1, line:802:1>
|-FunctionDecl 0x560daeb76170 prev 0x560daeb6c398 <line:803:1, line:805:1> line:803:6 isync 'void ()'
| `-CompoundStmt 0x560daeb76210 <line:804:1, line:805:1>
|-FunctionDecl 0x560daeb76240 prev 0x560daeb6c458 <line:806:1, line:808:1> line:806:6 lwfence 'void ()'
| `-CompoundStmt 0x560daeb762e0 <line:807:1, line:808:1>
`-FunctionDecl 0x560daeb76348 <line:809:1, line:835:1> line:809:5 main 'int ()'
  `-CompoundStmt 0x560daeb78280 <line:810:1, line:835:1>
    |-DeclStmt 0x560daeb76460 <line:811:3, col:18>
    | `-VarDecl 0x560daeb763f8 <col:3, col:13> col:13 used t1990 'pthread_t':'unsigned long'
    |-CallExpr 0x560daeb76668 <line:812:3, col:54> 'int'
    | |-ImplicitCastExpr 0x560daeb76650 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560daeb76478 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560daeb538f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560daeb764b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560daeb76498 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560daeb763f8 't1990' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560daeb766a8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560daeb76530 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x560daeb76508 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560daeb764d0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x560daeb766c0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560daeb76550 <col:39> 'void *(void *)' Function 0x560daeb6dd38 'P0' 'void *(void *)'
    | `-ParenExpr 0x560daeb765d0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x560daeb765a8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560daeb76570 <col:52> 'int' 0
    |-DeclStmt 0x560daeb76750 <line:813:3, col:18>
    | `-VarDecl 0x560daeb766e8 <col:3, col:13> col:13 used t1991 'pthread_t':'unsigned long'
    |-CallExpr 0x560daeb768f8 <line:814:3, col:54> 'int'
    | |-ImplicitCastExpr 0x560daeb768e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560daeb76768 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560daeb538f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560daeb767a8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560daeb76788 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560daeb766e8 't1991' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560daeb76938 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560daeb76820 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x560daeb767f8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560daeb767c0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x560daeb76950 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560daeb76840 <col:39> 'void *(void *)' Function 0x560daeb6f6f8 'P1' 'void *(void *)'
    | `-ParenExpr 0x560daeb768c0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x560daeb76898 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560daeb76860 <col:52> 'int' 0
    |-DeclStmt 0x560daeb769e0 <line:815:3, col:18>
    | `-VarDecl 0x560daeb76978 <col:3, col:13> col:13 used t1992 'pthread_t':'unsigned long'
    |-CallExpr 0x560daeb76b88 <line:816:3, col:54> 'int'
    | |-ImplicitCastExpr 0x560daeb76b70 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560daeb769f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560daeb538f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560daeb76a38 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560daeb76a18 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560daeb76978 't1992' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560daeb76bc8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560daeb76ab0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x560daeb76a88 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560daeb76a50 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x560daeb76be0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560daeb76ad0 <col:39> 'void *(void *)' Function 0x560daeb74e80 'P2' 'void *(void *)'
    | `-ParenExpr 0x560daeb76b50 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x560daeb76b28 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560daeb76af0 <col:52> 'int' 0
    |-CallExpr 0x560daeb76c30 <line:817:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560daeb76c18 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560daeb76bf8 <col:3> 'void ()' Function 0x560daeb13350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560daeb76d00 <line:818:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x560daeb76c50 <col:3> '_Bool' lvalue Var 0x560daeb6d060 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x560daeb76ce8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x560daeb76cc8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x560daeb76cb0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x560daeb76c70 <col:21> 'int' lvalue Var 0x560daeb6c590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x560daeb76c90 <col:41> 'int' 3
    |-CallExpr 0x560daeb76d58 <line:819:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560daeb76d40 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560daeb76d20 <col:3> 'void ()' Function 0x560daeb13410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560daeb76dd0 <line:820:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560daeb76db8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560daeb76d78 <col:3> 'void (int)' Function 0x560daeb12ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x560daeb76e10 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560daeb76df8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560daeb76d98 <col:21> '_Bool' lvalue Var 0x560daeb6d060 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x560daeb76e60 <line:821:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560daeb76e48 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560daeb76e28 <col:3> 'void ()' Function 0x560daeb13350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560daeb77168 <line:822:3, col:103> 'int' '='
    | |-DeclRefExpr 0x560daeb76e80 <col:3> 'int' lvalue Var 0x560daeb6d1d8 'x' 'int'
    | `-ConditionalOperator 0x560daeb77138 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x560daeb76f40 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x560daeb76ef8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x560daeb76ee0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x560daeb76ea0 <col:7> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x560daeb76f28 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x560daeb76f10 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x560daeb76ec0 <col:25> '_Bool' lvalue Var 0x560daeb6d368 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x560daeb77120 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560daeb76f60 <col:42> 'int' lvalue Var 0x560daeb6d828 'x$w_buff0' 'int'
    |   `-ParenExpr 0x560daeb77100 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x560daeb770d0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x560daeb77040 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x560daeb76fd8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x560daeb76fc0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x560daeb76f80 <col:55> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x560daeb77028 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x560daeb77010 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x560daeb76fa0 <col:73> '_Bool' lvalue Var 0x560daeb6d548 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560daeb770a0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560daeb77060 <col:90> 'int' lvalue Var 0x560daeb6d920 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x560daeb770b8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x560daeb77080 <col:102> 'int' lvalue Var 0x560daeb6d1d8 'x' 'int'
    |-BinaryOperator 0x560daeb77370 <line:823:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560daeb77188 <col:3> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x560daeb77358 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560daeb77328 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560daeb77248 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560daeb77200 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560daeb771e8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560daeb771a8 <col:20> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560daeb77230 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560daeb77218 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560daeb771c8 <col:38> '_Bool' lvalue Var 0x560daeb6d368 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560daeb772e0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560daeb77298 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560daeb77268 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560daeb77310 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560daeb772f8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560daeb772c0 <col:66> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x560daeb77658 <line:824:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560daeb77390 <col:3> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x560daeb77640 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560daeb77610 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560daeb77530 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560daeb77450 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560daeb77408 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560daeb773f0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560daeb773b0 <col:20> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560daeb77438 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560daeb77420 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560daeb773d0 <col:38> '_Bool' lvalue Var 0x560daeb6d368 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560daeb77510 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560daeb774c8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560daeb774b0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560daeb77470 <col:56> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560daeb774f8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560daeb774e0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560daeb77490 <col:74> '_Bool' lvalue Var 0x560daeb6d548 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560daeb775c8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560daeb77580 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560daeb77550 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560daeb775f8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560daeb775e0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560daeb775a8 <col:102> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x560daeb77860 <line:825:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560daeb77678 <col:3> '_Bool' lvalue Var 0x560daeb6d368 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560daeb77848 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560daeb77818 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560daeb77738 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560daeb776f0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560daeb776d8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560daeb77698 <col:20> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560daeb77720 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560daeb77708 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560daeb776b8 <col:38> '_Bool' lvalue Var 0x560daeb6d368 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560daeb777d0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560daeb77788 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560daeb77758 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560daeb77800 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560daeb777e8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560daeb777b0 <col:66> '_Bool' lvalue Var 0x560daeb6d368 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x560daeb77b48 <line:826:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560daeb77880 <col:3> '_Bool' lvalue Var 0x560daeb6d548 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560daeb77b30 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560daeb77b00 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560daeb77a20 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560daeb77940 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560daeb778f8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560daeb778e0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560daeb778a0 <col:20> '_Bool' lvalue Var 0x560daeb6d8a0 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560daeb77928 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560daeb77910 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560daeb778c0 <col:38> '_Bool' lvalue Var 0x560daeb6d368 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560daeb77a00 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560daeb779b8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560daeb779a0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560daeb77960 <col:56> '_Bool' lvalue Var 0x560daeb6d998 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560daeb779e8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560daeb779d0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560daeb77980 <col:74> '_Bool' lvalue Var 0x560daeb6d548 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560daeb77ab8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560daeb77a70 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560daeb77a40 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560daeb77ae8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560daeb77ad0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560daeb77a98 <col:102> '_Bool' lvalue Var 0x560daeb6d548 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x560daeb77ba0 <line:827:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560daeb77b88 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560daeb77b68 <col:3> 'void ()' Function 0x560daeb13410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560daeb77bf8 <line:828:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560daeb77be0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560daeb77bc0 <col:3> 'void ()' Function 0x560daeb13350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560daeb77ca8 <line:829:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x560daeb77c18 <col:3> '_Bool' lvalue Var 0x560daeb6dba8 'weak$$choice1' '_Bool'
    | `-ImplicitCastExpr 0x560daeb77c90 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x560daeb77c70 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x560daeb77c58 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x560daeb77c38 <col:19> 'void *(void)' Function 0x560daeb12e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x560daeb77ee0 <line:830:3, col:140> 'int' '='
    | |-DeclRefExpr 0x560daeb77cc8 <col:3> 'int' lvalue Var 0x560daeb6c7d0 '__unbuffered_p1_EAX' 'int'
    | `-ConditionalOperator 0x560daeb77eb0 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x560daeb77e80 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x560daeb77e68 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x560daeb77ce8 <col:25> '_Bool' lvalue Var 0x560daeb6cd20 '__unbuffered_p1_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x560daeb77e28 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x560daeb77df8 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x560daeb77db0 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x560daeb77d98 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x560daeb77d08 <col:61> '_Bool' lvalue Var 0x560daeb6dba8 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x560daeb77dc8 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x560daeb77d60 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x560daeb77d48 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x560daeb77d28 <col:78> 'int *' lvalue Var 0x560daeb6cda0 '__unbuffered_p1_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x560daeb77de0 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x560daeb77d78 <col:117> 'int' lvalue Var 0x560daeb6c7d0 '__unbuffered_p1_EAX' 'int'
    |   `-ImplicitCastExpr 0x560daeb77e98 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x560daeb77e48 <col:140> 'int' lvalue Var 0x560daeb6c7d0 '__unbuffered_p1_EAX' 'int'
    |-BinaryOperator 0x560daeb78128 <line:831:3, col:85> '_Bool' '='
    | |-DeclRefExpr 0x560daeb77f00 <col:3> '_Bool' lvalue Var 0x560daeb6d0d8 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x560daeb78110 <col:21, col:85> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x560daeb780f8 <col:21, col:85> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x560daeb780d8 <col:22, col:85> 'int'
    |       `-BinaryOperator 0x560daeb780b8 <col:23, col:84> 'int' '&&'
    |         |-BinaryOperator 0x560daeb78020 <col:23, col:56> 'int' '&&'
    |         | |-BinaryOperator 0x560daeb77f78 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x560daeb77f60 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x560daeb77f20 <col:23> 'int' lvalue Var 0x560daeb6da98 'y' 'int'
    |         | | `-IntegerLiteral 0x560daeb77f40 <col:28> 'int' 2
    |         | `-BinaryOperator 0x560daeb77ff0 <col:33, col:56> 'int' '=='
    |         |   |-ImplicitCastExpr 0x560daeb77fd8 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x560daeb77f98 <col:33> 'int' lvalue Var 0x560daeb6c6b0 '__unbuffered_p0_EAX' 'int'
    |         |   `-IntegerLiteral 0x560daeb77fb8 <col:56> 'int' 2
    |         `-BinaryOperator 0x560daeb78098 <col:61, col:84> 'int' '=='
    |           |-ImplicitCastExpr 0x560daeb78080 <col:61> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x560daeb78040 <col:61> 'int' lvalue Var 0x560daeb6c7d0 '__unbuffered_p1_EAX' 'int'
    |           `-IntegerLiteral 0x560daeb78060 <col:84> 'int' 1
    |-CallExpr 0x560daeb78180 <line:832:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560daeb78168 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560daeb78148 <col:3> 'void ()' Function 0x560daeb13410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560daeb781f8 <line:833:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560daeb781e0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560daeb781a0 <col:3> 'void (int)' Function 0x560daeb130d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x560daeb78238 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560daeb78220 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560daeb781c0 <col:21> '_Bool' lvalue Var 0x560daeb6d0d8 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x560daeb78270 <line:834:3, col:10>
      `-IntegerLiteral 0x560daeb78250 <col:10> 'int' 0
