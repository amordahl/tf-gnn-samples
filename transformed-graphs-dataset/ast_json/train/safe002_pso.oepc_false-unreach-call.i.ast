TranslationUnitDecl 0x5642a9f2ff88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5642a9f30848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5642a9f30520 '__int128'
|-TypedefDecl 0x5642a9f308b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5642a9f30540 'unsigned __int128'
|-TypedefDecl 0x5642a9f30bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5642a9f30990 'struct __NSConstantString_tag'
|   `-Record 0x5642a9f30910 '__NSConstantString_tag'
|-TypedefDecl 0x5642a9f30c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5642a9f30c20 'char *'
|   `-BuiltinType 0x5642a9f30020 'char'
|-TypedefDecl 0x5642a9f6fb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5642a9f30f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5642a9f30d40 'struct __va_list_tag'
|     `-Record 0x5642a9f30cc0 '__va_list_tag'
|-FunctionDecl 0x5642a9f6fc80 <pthread-wmm/safe002_pso.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x5642a9f6fe50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5642a9f6fd80 <col:31> col:34 'int'
|-FunctionDecl 0x5642a9f6ffc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5642a9f700f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5642a9f70238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5642a9f701a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5642a9f70468 <col:40, col:99>
|   |-IfStmt 0x5642a9f70438 <col:42, col:88>
|   | |-UnaryOperator 0x5642a9f70318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5642a9f70300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5642a9f702e0 <col:47> 'int' lvalue ParmVar 0x5642a9f701a8 'expression' 'int'
|   | `-CompoundStmt 0x5642a9f70420 <col:59, col:88>
|   |   `-LabelStmt 0x5642a9f70408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5642a9f70398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5642a9f70380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5642a9f70330 <col:68> 'void () __attribute__((noreturn))' Function 0x5642a9f700f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5642a9f70450 <col:89>
|   `-ReturnStmt 0x5642a9f70458 <col:91>
|-FunctionDecl 0x5642a9f704b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5642a9f70570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5642a9f708f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5642a9f70628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5642a9f706a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5642a9f70728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5642a9f707a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5642a9f709b0 <line:11:22>
|-FunctionDecl 0x5642a9f95f10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5642a9f70a20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5642a9f70aa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5642a9f95d40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5642a9f95dc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5642a9f95fd0 <line:14:22>
|-FunctionDecl 0x5642a9f96280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5642a9f96040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5642a9f960c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5642a9f96140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5642a9f96338 <line:16:22>
|-TypedefDecl 0x5642a9f963a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5642a9f300e0 'unsigned char'
|-TypedefDecl 0x5642a9f96418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5642a9f30100 'unsigned short'
|-TypedefDecl 0x5642a9f96488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5642a9f30120 'unsigned int'
|-TypedefDecl 0x5642a9f964f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5642a9f30140 'unsigned long'
|-TypedefDecl 0x5642a9f96568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5642a9f30040 'signed char'
|-TypedefDecl 0x5642a9f965d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5642a9f300e0 'unsigned char'
|-TypedefDecl 0x5642a9f96648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5642a9f30060 'short'
|-TypedefDecl 0x5642a9f966b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5642a9f30100 'unsigned short'
|-TypedefDecl 0x5642a9f96728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5642a9f30080 'int'
|-TypedefDecl 0x5642a9f96798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5642a9f30120 'unsigned int'
|-TypedefDecl 0x5642a9f96808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5642a9f300a0 'long'
|-TypedefDecl 0x5642a9f96878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5642a9f30140 'unsigned long'
|-TypedefDecl 0x5642a9f968e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5642a9f300a0 'long'
|-TypedefDecl 0x5642a9f96958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5642a9f30140 'unsigned long'
|-TypedefDecl 0x5642a9f969c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5642a9f30140 'unsigned long'
|-TypedefDecl 0x5642a9f96a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5642a9f30120 'unsigned int'
|-TypedefDecl 0x5642a9f96aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5642a9f30120 'unsigned int'
|-TypedefDecl 0x5642a9f96b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5642a9f30140 'unsigned long'
|-TypedefDecl 0x5642a9f96b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5642a9f30140 'unsigned long'
|-TypedefDecl 0x5642a9f96bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5642a9f30120 'unsigned int'
|-TypedefDecl 0x5642a9f96c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5642a9f30140 'unsigned long'
|-TypedefDecl 0x5642a9f96cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5642a9f300a0 'long'
|-TypedefDecl 0x5642a9f96d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5642a9f300a0 'long'
|-TypedefDecl 0x5642a9f96dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5642a9f30080 'int'
|-RecordDecl 0x5642a9f96e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x5642a9f96f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5642a9f97030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5642a9f96fd0 'struct __fsid_t' sugar
|   `-RecordType 0x5642a9f96eb0 '__fsid_t'
|     `-Record 0x5642a9f96e30 ''
|-TypedefDecl 0x5642a9f970b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5642a9f300a0 'long'
|-TypedefDecl 0x5642a9f97128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5642a9f30140 'unsigned long'
|-TypedefDecl 0x5642a9f97198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5642a9f30140 'unsigned long'
|-TypedefDecl 0x5642a9f97208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5642a9f30120 'unsigned int'
|-TypedefDecl 0x5642a9f97278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5642a9f300a0 'long'
|-TypedefDecl 0x5642a9f972e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5642a9f30120 'unsigned int'
|-TypedefDecl 0x5642a9f97358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5642a9f300a0 'long'
|-TypedefDecl 0x5642a9f973c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5642a9f30080 'int'
|-TypedefDecl 0x5642a9f97438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5642a9f30080 'int'
|-TypedefDecl 0x5642a9f974a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5642a9f30080 'int'
|-TypedefDecl 0x5642a9f97518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5642a9f307a0 'void *'
|   `-BuiltinType 0x5642a9f2ffe0 'void'
|-TypedefDecl 0x5642a9f97588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5642a9f300a0 'long'
|-TypedefDecl 0x5642a9f975f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5642a9f300a0 'long'
|-TypedefDecl 0x5642a9f97668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5642a9f300a0 'long'
|-TypedefDecl 0x5642a9f976d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5642a9f30140 'unsigned long'
|-TypedefDecl 0x5642a9f97748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5642a9f30140 'unsigned long'
|-TypedefDecl 0x5642a9f977b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5642a9f30140 'unsigned long'
|-TypedefDecl 0x5642a9f97828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5642a9f30140 'unsigned long'
|-TypedefDecl 0x5642a9f97898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5642a9f300a0 'long'
|-TypedefDecl 0x5642a9f97908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5642a9f300a0 'long'
|-TypedefDecl 0x5642a9f97978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5642a9f300a0 'long'
|-TypedefDecl 0x5642a9f979e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5642a9f30140 'unsigned long'
|-TypedefDecl 0x5642a9f97a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5642a9f97a40 '__off64_t' sugar
|   |-Typedef 0x5642a9f96d68 '__off64_t'
|   `-BuiltinType 0x5642a9f300a0 'long'
|-TypedefDecl 0x5642a9f97b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5642a9f97b30 '__quad_t *'
|   `-TypedefType 0x5642a9f97ad0 '__quad_t' sugar
|     |-Typedef 0x5642a9f968e8 '__quad_t'
|     `-BuiltinType 0x5642a9f300a0 'long'
|-TypedefDecl 0x5642a9f97be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5642a9f30c20 'char *'
|   `-BuiltinType 0x5642a9f30020 'char'
|-TypedefDecl 0x5642a9f97c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5642a9f300a0 'long'
|-TypedefDecl 0x5642a9f97cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5642a9f30120 'unsigned int'
|-FunctionDecl 0x5642a9f97e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5642a9f97d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5642a9f98148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x5642a9f98138 <line:73:3, col:34>
|     `-CallExpr 0x5642a9f980f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5642a9f980e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5642a9f98070 <col:10> '<builtin fn type>' Function 0x5642a9f97ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5642a9f98120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5642a9f98090 <col:29> 'unsigned int' lvalue ParmVar 0x5642a9f97d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x5642a9f97ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5642a9f97f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5642a9f97ff0 <col:10> Implicit
| `-ConstAttr 0x5642a9f98048 <col:10> Implicit
|-FunctionDecl 0x5642a9f982a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5642a9f98198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5642a9f985b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x5642a9f985a8 <line:78:3, col:34>
|     `-CallExpr 0x5642a9f98568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5642a9f98550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5642a9f984d8 <col:10> '<builtin fn type>' Function 0x5642a9f98348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5642a9f98590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5642a9f984f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5642a9f98198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5642a9f98348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5642a9f983e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5642a9f98458 <col:10> Implicit
| `-ConstAttr 0x5642a9f984b0 <col:10> Implicit
|-TypedefDecl 0x5642a9f985e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5642a9f30140 'unsigned long'
|-TypedefDecl 0x5642a9f98678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5642a9f98640 '__time_t' sugar
|   |-Typedef 0x5642a9f97278 '__time_t'
|   `-BuiltinType 0x5642a9f300a0 'long'
|-RecordDecl 0x5642a9f986d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x5642a9f98788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5642a9f98818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5642a9f988a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5642a9f98870 '__pid_t' sugar
|   |-Typedef 0x5642a9f96dd8 '__pid_t'
|   `-BuiltinType 0x5642a9f30080 'int'
|-RecordDecl 0x5642a9f98900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x5642a9f989c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5642a9f98a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x5642a9f98ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5642a9f98b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5642a9f30140 'unsigned long'
|-RecordDecl 0x5642a9f98b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x5642a9f9ae70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5642a9f9af20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5642a9f9aec0 'struct cpu_set_t' sugar
|   `-RecordType 0x5642a9f98c10 'cpu_set_t'
|     `-Record 0x5642a9f98b90 ''
|-FunctionDecl 0x5642a9f9b1f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5642a9f9afc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5642a9f9b0d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5642a9f9b2a8 <line:108:19>
|-FunctionDecl 0x5642a9f9b480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5642a9f9b310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5642a9f9b528 <col:69>
|-FunctionDecl 0x5642a9f9b6a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5642a9f9b590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5642a9f9b748 <col:64>
|-FunctionDecl 0x5642a9f9ba08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5642a9f9b7b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5642a9f9b8e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5642a9f9bab8 <line:114:22>
|-FunctionDecl 0x5642a9f9be60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5642a9f9bb20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5642a9f9bc18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5642a9f9bf10 <col:88>
|-FunctionDecl 0x5642a9f9c1c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5642a9f9bf78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5642a9f9bff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5642a9f9c088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5642a9f9c280 <col:62>
|-FunctionDecl 0x5642a9f9c3f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5642a9f9c2e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5642a9f9c4a0 <col:63>
|-FunctionDecl 0x5642a9f9c5c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5642a9f9c668 <col:47>
|-FunctionDecl 0x5642a9f9c770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5642a9f9c6d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5642a9f9c818 <col:69>
|-FunctionDecl 0x5642a9f9c920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5642a9f9c888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5642a9f9c9c8 <col:69>
|-FunctionDecl 0x5642a9f9cc88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5642a9f9ca30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5642a9f9cb68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5642a9f9cd38 <col:88>
|-TypedefDecl 0x5642a9f9cdc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5642a9f9cd90 '__clock_t' sugar
|   |-Typedef 0x5642a9f970b8 '__clock_t'
|   `-BuiltinType 0x5642a9f300a0 'long'
|-TypedefDecl 0x5642a9f9d7e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5642a9f9ce20 '__clockid_t' sugar
|   |-Typedef 0x5642a9f974a8 '__clockid_t'
|   `-BuiltinType 0x5642a9f30080 'int'
|-TypedefDecl 0x5642a9f9d878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5642a9f9d840 '__timer_t' sugar
|   |-Typedef 0x5642a9f97518 '__timer_t'
|   `-PointerType 0x5642a9f307a0 'void *'
|     `-BuiltinType 0x5642a9f2ffe0 'void'
|-RecordDecl 0x5642a9f9d8d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x5642a9f9d990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5642a9f9d9f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5642a9f9da60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5642a9f9dac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5642a9f9db30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5642a9f9db98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5642a9f9dc00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5642a9f9dc68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5642a9f9dcd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5642a9f9dd38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5642a9f9dda0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5642a9f9ddf0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x5642a9f9deb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5642a9f9df28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5642a9f9dfd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5642a9f9e1a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5642a9f9e240 <col:45>
|-FunctionDecl 0x5642a9f9e420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5642a9f9e310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5642a9f9e4c8 <col:54>
|-FunctionDecl 0x5642a9f9e6c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5642a9f9e530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5642a9f9e5a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5642a9f9e778 <line:158:22>
| `-ConstAttr 0x5642a9f9f410 <col:63>
|-FunctionDecl 0x5642a9f9f610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5642a9f9f508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5642a9f9f6b8 <col:56>
|-FunctionDecl 0x5642a9f9fa60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5642a9f9f728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5642a9f9f7a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5642a9f9f820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5642a9f9f918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5642a9f9fb20 <col:54>
|-RecordDecl 0x5642a9f9fb78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x5642a9f9fc28 parent 0x5642a9f2ff88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5642a9f9fe88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5642a9f9ff28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5642a9f9ff90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5642a9f9fff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5642a9fa00e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5642a9fa0208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5642a9fa01b0 'struct __locale_struct *'
|   `-ElaboratedType 0x5642a9fa0140 'struct __locale_struct' sugar
|     `-RecordType 0x5642a9f9fc00 'struct __locale_struct'
|       `-Record 0x5642a9f9fb78 '__locale_struct'
|-TypedefDecl 0x5642a9fa02b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5642a9fa0280 '__locale_t' sugar
|   |-Typedef 0x5642a9fa0208 '__locale_t'
|   `-PointerType 0x5642a9fa01b0 'struct __locale_struct *'
|     `-ElaboratedType 0x5642a9fa0140 'struct __locale_struct' sugar
|       `-RecordType 0x5642a9f9fc00 'struct __locale_struct'
|         `-Record 0x5642a9f9fb78 '__locale_struct'
|-FunctionDecl 0x5642a9fa06b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5642a9fa0328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5642a9fa03a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5642a9fa0438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5642a9fa04c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5642a9fa0540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5642a9fa0778 <col:40>
|-FunctionDecl 0x5642a9fa0968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5642a9fa0840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5642a9fa0a10 <col:66>
|-FunctionDecl 0x5642a9fa0b20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5642a9fa0a78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5642a9fa0bc8 <col:69>
|-FunctionDecl 0x5642a9fa0df8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5642a9fa0c30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5642a9fa0cc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5642a9fa0ea8 <col:52>
|-FunctionDecl 0x5642a9fa1050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5642a9fa0f10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5642a9fa0fa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5642a9fa1100 <col:55>
|-FunctionDecl 0x5642a9fa1298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5642a9fa1180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5642a9fa1340 <col:62>
|-FunctionDecl 0x5642a9fa1578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5642a9fa13a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5642a9fa1620 <col:60>
|-FunctionDecl 0x5642a9fa1848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5642a9fa16a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5642a9fa1720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5642a9fa18f8 <col:44>
|-FunctionDecl 0x5642a9fa1b08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5642a9fa1960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5642a9fa19e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5642a9fa1bb8 <col:49>
|-VarDecl 0x5642a9fa1cb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5642a9fa1d38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5642a9fa1db8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5642a9fa1e80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5642a9fa1fb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5642a9fa2050 <col:42>
|-VarDecl 0x5642a9fa20c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5642a9fa2140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5642a9fa22c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5642a9fa21b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5642a9fa2370 <col:57>
|-FunctionDecl 0x5642a9fa34f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5642a9fa23f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5642a9fa3598 <col:56>
|-FunctionDecl 0x5642a9fa36a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5642a9fa3618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5642a9fa3750 <col:59>
|-FunctionDecl 0x5642a9fa3858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5642a9fa37c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5642a9fa3900 <col:48>
| `-ConstAttr 0x5642a9fa3958 <col:89>
|-FunctionDecl 0x5642a9fa3bb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5642a9fa3a08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5642a9fa3a98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5642a9fa3e18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5642a9fa3ca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5642a9fa3d38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5642a9fa3ec8 <col:88>
|-FunctionDecl 0x5642a9fa4060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5642a9fa3f30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5642a9fa3fc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5642a9fa4110 <col:88>
|-FunctionDecl 0x5642a9fa4328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5642a9fa4178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5642a9fa4208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5642a9fa43d8 <line:209:22>
|-FunctionDecl 0x5642a9fa4778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5642a9fa4440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5642a9fa4500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5642a9fa4590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5642a9fa4620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5642a9fa4a78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5642a9fa4878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5642a9fa4950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5642a9fa4b28 <col:85>
|-FunctionDecl 0x5642a9fa4f18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5642a9fa4b90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5642a9fa4cc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5642a9fa4dd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5642a9fa4fd0 <col:52>
|-FunctionDecl 0x5642a9fa5148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5642a9fa5038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5642a9fa51f0 <col:61>
|-FunctionDecl 0x5642a9fa5668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5642a9fa5258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5642a9fa52d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5642a9fa5408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5642a9fa5510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5642a9fa5728 <col:62>
|-FunctionDecl 0x5642a9fa5948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5642a9fa5790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5642a9fa5820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5642a9fa59f8 <line:222:22>
|-FunctionDecl 0x5642a9fa5af8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5642a9fa5a60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5642a9fa5ba0 <col:65>
|-TypedefDecl 0x5642a9fa5c10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5642a9f30140 'unsigned long'
|-RecordDecl 0x5642a9fa5c68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x5642a9fa5db0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5642a9fa5e18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5642a9fa5ec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5642a9fa5e70 'union pthread_attr_t' sugar
|   `-RecordType 0x5642a9fa5cf0 'union pthread_attr_t'
|     `-Record 0x5642a9fa5c68 'pthread_attr_t'
|-RecordDecl 0x5642a9fa5f20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5642a9fa6098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5642a9fa6110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5642a9fa61c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5642a9fa6160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5642a9fa5fa0 'struct __pthread_internal_list'
|     `-Record 0x5642a9fa5f20 '__pthread_internal_list'
|-RecordDecl 0x5642a9fa6230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x5642a9fa62d8 parent 0x5642a9f2ff88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5642a9fa63b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5642a9fa6418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5642a9fa6480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5642a9faa530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5642a9faa598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5642a9faa600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5642a9faa688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5642a9faa740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5642a9faa830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5642a9faa898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5642a9faaa20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5642a9faa9c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5642a9fa62b0 'pthread_mutex_t'
|     `-Record 0x5642a9fa6230 ''
|-RecordDecl 0x5642a9faaa90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x5642a9faabd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5642a9faac38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5642a9faacf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5642a9faac90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5642a9faab10 'pthread_mutexattr_t'
|     `-Record 0x5642a9faaa90 ''
|-RecordDecl 0x5642a9faad60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x5642a9faae08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x5642a9faaed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5642a9faaf38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5642a9faafa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5642a9fab008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5642a9fab070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5642a9fab0d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5642a9fab140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5642a9fab1a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5642a9fab260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe002_pso.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe002_pso.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x5642a9fab350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5642a9fab3b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5642a9fab540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5642a9fab490 'union pthread_cond_t' sugar
|   `-RecordType 0x5642a9faade0 'pthread_cond_t'
|     `-Record 0x5642a9faad60 ''
|-RecordDecl 0x5642a9fab5b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x5642a9fab6b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5642a9fab718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5642a9fab7d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5642a9fab770 'union pthread_condattr_t' sugar
|   `-RecordType 0x5642a9fab630 'pthread_condattr_t'
|     `-Record 0x5642a9fab5b0 ''
|-TypedefDecl 0x5642a9fab858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5642a9f30120 'unsigned int'
|-TypedefDecl 0x5642a9fab8c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5642a9f30080 'int'
|-RecordDecl 0x5642a9fab920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x5642a9fab9c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x5642a9faba90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5642a9fabaf8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5642a9fabb60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5642a9fabbc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5642a9fabc30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5642a9fabc98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5642a9fabd00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5642a9fabd68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5642a9fabdd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5642a9fabe38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5642a9fabea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5642a9fabf50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe002_pso.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe002_pso.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x5642a9fabff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5642a9fac060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5642a9fac1b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5642a9fac150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5642a9fab9a0 'pthread_rwlock_t'
|     `-Record 0x5642a9fab920 ''
|-RecordDecl 0x5642a9fac220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x5642a9fac360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5642a9fac3c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5642a9fac480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5642a9fac420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5642a9fac2a0 'pthread_rwlockattr_t'
|     `-Record 0x5642a9fac220 ''
|-TypedefDecl 0x5642a9fae560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5642a9f30084 'volatile int' volatile
|   `-BuiltinType 0x5642a9f30080 'int'
|-RecordDecl 0x5642a9fae5b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x5642a9fae700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5642a9fae768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5642a9fae820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5642a9fae7c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x5642a9fae640 'pthread_barrier_t'
|     `-Record 0x5642a9fae5b8 ''
|-RecordDecl 0x5642a9fae890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x5642a9fae990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5642a9fae9f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5642a9faeab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5642a9faea50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5642a9fae910 'pthread_barrierattr_t'
|     `-Record 0x5642a9fae890 ''
|-TypedefDecl 0x5642a9faebc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5642a9faeb60 'long [8]' 8 
|   `-BuiltinType 0x5642a9f300a0 'long'
|-EnumDecl 0x5642a9faec20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x5642a9faece8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5642a9faed38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5642a9faed88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x5642a9faee58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5642a9faeea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5642a9faeef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5642a9faef48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5642a9faefd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5642a9faefb8 <col:26> 'int'
| |   `-DeclRefExpr 0x5642a9faef98 <col:26> 'int' EnumConstant 0x5642a9faee58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5642a9faf058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5642a9faf040 <col:29> 'int'
| |   `-DeclRefExpr 0x5642a9faf020 <col:29> 'int' EnumConstant 0x5642a9faeea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5642a9faf0e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5642a9faf0c8 <col:30> 'int'
| |   `-DeclRefExpr 0x5642a9faf0a8 <col:30> 'int' EnumConstant 0x5642a9faeef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5642a9faf168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5642a9faf150 <col:27> 'int'
|     `-DeclRefExpr 0x5642a9faf130 <col:27> 'int' EnumConstant 0x5642a9faefd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5642a9faf1b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x5642a9faf288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5642a9faf310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5642a9faf2f8 <col:30> 'int'
| |   `-DeclRefExpr 0x5642a9faf2d8 <col:30> 'int' EnumConstant 0x5642a9faf288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5642a9faf360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5642a9faf3e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5642a9faf3d0 <col:29> 'int'
|     `-DeclRefExpr 0x5642a9faf3b0 <col:29> 'int' EnumConstant 0x5642a9faf360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5642a9faf438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x5642a9faf508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5642a9faf570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5642a9faf5c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5642a9faf610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x5642a9faf6d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5642a9faf728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5642a9faf778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5642a9faf800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5642a9faf7e8 <col:31> 'int'
|     `-DeclRefExpr 0x5642a9faf7c8 <col:31> 'int' EnumConstant 0x5642a9faf6d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5642a9faf850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x5642a9faf918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5642a9faf968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5642a9faf9b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x5642a9fafa88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5642a9fafad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5642a9fafb28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x5642a9fafbf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5642a9fafc48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5642a9fafc98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5642a9fafed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5642a9faff40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5642a9faffa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5642a9fb00c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5642a9fb0118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x5642a9fb01e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5642a9fb0238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5642a9fb0288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x5642a9fb0358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5642a9fb03a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5642a9fb09d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5642a9fb04a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5642a9fb05c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5642a9fb07c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5642a9fb0840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5642a9fb0a98 <col:47>
| |-NonNullAttr 0x5642a9fb0af0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5642a9fb0b28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x5642a9fb0c50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5642a9fb0b80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5642a9fb0ea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5642a9fb0d08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5642a9fb0d88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5642a9fb1078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5642a9fb0f68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5642a9fb1120 <col:60>
|-FunctionDecl 0x5642a9fb1270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5642a9fb1310 <col:54>
| `-ConstAttr 0x5642a9fb1368 <col:95>
|-FunctionDecl 0x5642a9fb1da0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5642a9fb13a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5642a9fb1418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5642a9fb1e50 <line:395:19>
| `-ConstAttr 0x5642a9fb1ea8 <col:60>
|-FunctionDecl 0x5642a9fb2078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5642a9fb1f40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5642a9fb2120 <col:71>
| `-NonNullAttr 0x5642a9fb2178 <col:112, col:126> 1
|-FunctionDecl 0x5642a9fb2280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5642a9fb21c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5642a9fb2328 <line:398:22>
| `-NonNullAttr 0x5642a9fb2380 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fb25a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5642a9fb23c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5642a9fb2448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5642a9fb2658 <line:401:22>
| `-NonNullAttr 0x5642a9fb26b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5642a9fb28b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5642a9fb26f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5642a9fb2778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5642a9fb2968 <line:404:22>
| `-NonNullAttr 0x5642a9fb29c0 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fb2c18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5642a9fb2a08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5642a9fb2ab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5642a9fb2cc8 <line:407:22>
| `-NonNullAttr 0x5642a9fb2d20 <col:63, col:80> 1 2
|-FunctionDecl 0x5642a9fb3f78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5642a9fb3dc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5642a9fb3e38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5642a9fb4028 <line:410:22>
| `-NonNullAttr 0x5642a9fb4080 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fb42b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5642a9fb40c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5642a9fb4158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5642a9fb4368 <line:413:22>
| `-NonNullAttr 0x5642a9fb43c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5642a9fb45f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5642a9fb4408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5642a9fb4498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5642a9fb46a8 <col:37>
| `-NonNullAttr 0x5642a9fb4700 <col:78, col:95> 1 2
|-FunctionDecl 0x5642a9fb48e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5642a9fb4748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5642a9fb47c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5642a9fb4998 <line:419:22>
| `-NonNullAttr 0x5642a9fb49f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5642a9fb4b78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5642a9fb4a38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5642a9fb4ab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5642a9fb4c28 <line:421:22>
| `-NonNullAttr 0x5642a9fb4c80 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fb5e58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5642a9fb4cc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5642a9fb4d48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5642a9fb5f08 <line:424:22>
| `-NonNullAttr 0x5642a9fb5f60 <col:63, col:80> 1 2
|-FunctionDecl 0x5642a9fb60e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5642a9fb5fa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5642a9fb6028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5642a9fb6198 <line:427:22>
| `-NonNullAttr 0x5642a9fb61f0 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fb6398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5642a9fb6238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5642a9fb62b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5642a9fb6448 <line:430:22>
| `-NonNullAttr 0x5642a9fb64a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5642a9fb6628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5642a9fb64e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5642a9fb6568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5642a9fb66d8 <line:432:22>
| `-NonNullAttr 0x5642a9fb6730 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fb6958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5642a9fb6778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5642a9fb67f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5642a9fb6a08 <line:435:22>
| |-NonNullAttr 0x5642a9fb6a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5642a9fb6a98 <col:100> "" ""
|-FunctionDecl 0x5642a9fb6ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5642a9fb6ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5642a9fb6b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5642a9fb6d58 <line:438:22>
| |-NonNullAttr 0x5642a9fb6db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x5642a9fb6df8 <col:97> "" ""
|-FunctionDecl 0x5642a9fb6fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5642a9fb6e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5642a9fb6ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5642a9fb7098 <line:441:22>
| `-NonNullAttr 0x5642a9fb70f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5642a9fb7270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5642a9fb7138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5642a9fb71b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5642a9fb7320 <line:444:22>
| `-NonNullAttr 0x5642a9fb7378 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fb7668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5642a9fb73c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5642a9fb7448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5642a9fb74c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5642a9fb7720 <line:448:22>
| `-NonNullAttr 0x5642a9fb7778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5642a9fb7a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5642a9fb77d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5642a9fb7850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5642a9fb78c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5642a9fb7ae0 <col:43>
| `-NonNullAttr 0x5642a9fb7b38 <col:84, col:98> 1
|-FunctionDecl 0x5642a9fb7e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5642a9fb7b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5642a9fb7c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5642a9fb7c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5642a9fb7ef8 <line:453:22>
| `-NonNullAttr 0x5642a9fb7f50 <col:63, col:77> 3
|-FunctionDecl 0x5642a9fb8228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5642a9fb7f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5642a9fb8018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5642a9fb80a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5642a9fb82e0 <line:457:22>
| `-NonNullAttr 0x5642a9fb8338 <col:63, col:80> 2 3
|-FunctionDecl 0x5642a9fb8528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5642a9fb8388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5642a9fb8408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5642a9fb85d8 <line:459:22>
|-FunctionDecl 0x5642a9fb89a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5642a9fb86a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5642a9fb8840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5642a9fb8a58 <col:52, col:69> 1 2
|-FunctionDecl 0x5642a9fb8c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5642a9fb8ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5642a9fb8b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5642a9fb8e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5642a9fb8cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5642a9fb8d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5642a9fb8f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5642a9fb8ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5642a9fb90a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5642a9fb9148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x5642a9fb91f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x5642a9fb92e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5642a9fb9350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5642a9fb9520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe002_pso.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x5642a9fb9618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5642a9fb96d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5642a9fb9670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5642a9fb91d0 '__pthread_unwind_buf_t'
| |   `-Record 0x5642a9fb9148 ''
| `-AlignedAttr 0x5642a9fb9728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5642a9fb97a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5642a9fb9900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5642a9fb9968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5642a9fb99d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5642a9fb9a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5642a9fb9c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5642a9fb9b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5642a9fb9e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5642a9fb9cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5642a9fb9fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5642a9fb9ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5642a9fba088 <line:488:22>
|-RecordDecl 0x5642a9fba0e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5642a9fba3f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5642a9fba258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5642a9fba2d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5642a9fba4a8 <col:86>
| `-ReturnsTwiceAttr 0x5642a9fba500 <col:12> Implicit
|-FunctionDecl 0x5642a9fba828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5642a9fba5d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5642a9fba6e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5642a9fba8d8 <line:494:22>
| `-NonNullAttr 0x5642a9fba930 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fbaaa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5642a9fba978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5642a9fbab50 <line:496:22>
| `-NonNullAttr 0x5642a9fbaba8 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fbacb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5642a9fbabf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5642a9fbad58 <line:498:22>
| `-NonNullAttr 0x5642a9fbadb0 <col:52, col:66> 1
|-FunctionDecl 0x5642a9fbaee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5642a9fbae30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5642a9fbaf90 <line:500:22>
| `-NonNullAttr 0x5642a9fbafe8 <col:52, col:66> 1
|-FunctionDecl 0x5642a9fbb228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5642a9fbb038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5642a9fbb0c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5642a9fbb2d8 <col:36>
| `-NonNullAttr 0x5642a9fbb330 <col:66, col:83> 1 2
|-FunctionDecl 0x5642a9fbb430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5642a9fbb378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5642a9fbb4d8 <line:505:22>
| `-NonNullAttr 0x5642a9fbb530 <col:52, col:66> 1
|-FunctionDecl 0x5642a9fbb7c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5642a9fbb5e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5642a9fbb660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5642a9fbb878 <line:509:22>
| `-NonNullAttr 0x5642a9fbb8d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5642a9fbbb98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5642a9fbb918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5642a9fbb998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5642a9fbba18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5642a9fbbc50 <line:513:22>
| `-NonNullAttr 0x5642a9fbbca8 <col:63, col:80> 1 3
|-FunctionDecl 0x5642a9fbbe40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5642a9fbbcf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5642a9fbbee8 <line:515:22>
| `-NonNullAttr 0x5642a9fbbf40 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fbc128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5642a9fbbff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5642a9fbc1d0 <line:517:22>
| `-NonNullAttr 0x5642a9fbc228 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fbc330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5642a9fbc278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5642a9fbc3d8 <line:519:22>
| `-NonNullAttr 0x5642a9fbc430 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fbc658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5642a9fbc478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5642a9fbc4f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5642a9fbc708 <line:523:22>
| `-NonNullAttr 0x5642a9fbc760 <col:63, col:80> 1 2
|-FunctionDecl 0x5642a9fbc968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5642a9fbc7a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5642a9fbc828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5642a9fbca18 <line:526:22>
| `-NonNullAttr 0x5642a9fbca70 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fbcc18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5642a9fbcab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5642a9fbcb38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5642a9fbccc8 <line:529:22>
| `-NonNullAttr 0x5642a9fbcd20 <col:63, col:80> 1 2
|-FunctionDecl 0x5642a9fbdf20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5642a9fbcd68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5642a9fbde60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5642a9fbdfd0 <line:531:22>
| `-NonNullAttr 0x5642a9fbe028 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fbe1d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5642a9fbe078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5642a9fbe0f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5642a9fbe288 <line:535:22>
| `-NonNullAttr 0x5642a9fbe2e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5642a9fbe468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5642a9fbe328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5642a9fbe3a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5642a9fbe518 <line:538:22>
| `-NonNullAttr 0x5642a9fbe570 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fbe718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5642a9fbe5b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5642a9fbe638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5642a9fbe7c8 <line:542:22>
| `-NonNullAttr 0x5642a9fbe820 <col:63, col:80> 1 2
|-FunctionDecl 0x5642a9fbe9a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5642a9fbe868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5642a9fbe8e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5642a9fbea58 <line:545:22>
| `-NonNullAttr 0x5642a9fbeab0 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fbec98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5642a9fbeaf8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5642a9fbeb78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5642a9fbed48 <line:548:22>
| `-NonNullAttr 0x5642a9fbeda0 <col:63, col:80> 1 2
|-FunctionDecl 0x5642a9fbff58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5642a9fbede8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5642a9fbfe98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5642a9fc0008 <line:551:22>
| `-NonNullAttr 0x5642a9fc0060 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fc0398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5642a9fc0140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5642a9fc0250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5642a9fc0448 <col:29>
| `-NonNullAttr 0x5642a9fc04a0 <col:70, col:84> 1
|-FunctionDecl 0x5642a9fc0618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5642a9fc04e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5642a9fc06c0 <line:556:22>
| `-NonNullAttr 0x5642a9fc0718 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fc0820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5642a9fc0768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5642a9fc08c8 <line:558:22>
| `-NonNullAttr 0x5642a9fc0920 <col:52, col:66> 1
|-FunctionDecl 0x5642a9fc0a20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5642a9fc0968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5642a9fc0ac8 <line:560:19>
| `-NonNullAttr 0x5642a9fc0b20 <col:49, col:63> 1
|-FunctionDecl 0x5642a9fc0d58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5642a9fc0b68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5642a9fc0bf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5642a9fc0e08 <col:39>
| `-NonNullAttr 0x5642a9fc0e90 <col:69, col:86> 1 2
|-FunctionDecl 0x5642a9fc0f90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5642a9fc0ed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5642a9fc1038 <line:565:22>
| `-NonNullAttr 0x5642a9fc1090 <col:52, col:66> 1
|-FunctionDecl 0x5642a9fc1190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5642a9fc10d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5642a9fc1238 <line:567:22>
| `-NonNullAttr 0x5642a9fc1290 <col:52, col:66> 1
|-FunctionDecl 0x5642a9fc1448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5642a9fc12d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5642a9fc1368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5642a9fc14f8 <col:39>
| `-NonNullAttr 0x5642a9fc1550 <col:69, col:86> 1 2
|-FunctionDecl 0x5642a9fc1650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5642a9fc1598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5642a9fc16f8 <line:572:22>
| `-NonNullAttr 0x5642a9fc1750 <col:52, col:66> 1
|-FunctionDecl 0x5642a9fc1938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5642a9fc1800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5642a9fc19e0 <line:574:22>
| `-NonNullAttr 0x5642a9fc1a38 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fc1b40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5642a9fc1a88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5642a9fc1be8 <line:576:22>
| `-NonNullAttr 0x5642a9fc1c40 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fc1ea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5642a9fc1c88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5642a9fc1d08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5642a9fc1f50 <line:580:22>
| `-NonNullAttr 0x5642a9fc1fa8 <col:63, col:80> 1 2
|-FunctionDecl 0x5642a9fc21b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5642a9fc1ff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5642a9fc2078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5642a9fc2268 <line:583:22>
| `-NonNullAttr 0x5642a9fc22c0 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fc2468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5642a9fc2308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5642a9fc2388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5642a9fc2518 <line:587:22>
| `-NonNullAttr 0x5642a9fc2570 <col:63, col:80> 1 2
|-FunctionDecl 0x5642a9fc26f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5642a9fc25b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5642a9fc2638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5642a9fc27a8 <col:36>
| `-NonNullAttr 0x5642a9fc2800 <col:77, col:91> 1
|-FunctionDecl 0x5642a9fc2b38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5642a9fc28e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5642a9fc29f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5642a9fc2be8 <line:592:22>
| `-NonNullAttr 0x5642a9fc2c40 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fc2db8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5642a9fc2c88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5642a9fc2e60 <line:594:22>
| `-NonNullAttr 0x5642a9fc2ee0 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fc2fe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5642a9fc2f28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5642a9fc3088 <line:596:22>
| `-NonNullAttr 0x5642a9fc30e0 <col:52, col:66> 1
|-FunctionDecl 0x5642a9fc31e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5642a9fc3128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5642a9fc3288 <line:598:22>
| `-NonNullAttr 0x5642a9fc32e0 <col:52, col:66> 1
|-FunctionDecl 0x5642a9fc3508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5642a9fc3328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5642a9fc33a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5642a9fc35b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x5642a9fc38e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5642a9fc3638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5642a9fc36b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5642a9fc3740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5642a9fc39a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x5642a9fc3bb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5642a9fc3a80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5642a9fc3c60 <line:607:22>
| `-NonNullAttr 0x5642a9fc3cb8 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fc3dc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5642a9fc3d08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5642a9fc3e68 <line:609:22>
| `-NonNullAttr 0x5642a9fc3ef0 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fc4118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5642a9fc3f38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5642a9fc3fb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5642a9fc41c8 <line:613:22>
| `-NonNullAttr 0x5642a9fc4220 <col:63, col:80> 1 2
|-FunctionDecl 0x5642a9fc4428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5642a9fc4268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5642a9fc42e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5642a9fc44d8 <col:37>
| `-NonNullAttr 0x5642a9fc4530 <col:78, col:92> 1
|-FunctionDecl 0x5642a9fc4748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5642a9fc4578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5642a9fc4620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5642a9fc47f8 <line:619:22>
| `-NonNullAttr 0x5642a9fc4850 <col:63, col:80> 1 2
|-FunctionDecl 0x5642a9fc4a18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5642a9fc4898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5642a9fc4910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5642a9fc4ac8 <line:622:22>
| `-NonNullAttr 0x5642a9fc4b20 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fc4dc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5642a9fc4c00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5642a9fc4c80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5642a9fc4e78 <line:624:22>
| `-NonNullAttr 0x5642a9fc4f00 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fc5078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5642a9fc4f48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5642a9fc5120 <line:626:22>
| `-NonNullAttr 0x5642a9fc5178 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fc5280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5642a9fc51c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5642a9fc5328 <line:628:22>
| `-NonNullAttr 0x5642a9fc5380 <col:52, col:66> 1
|-FunctionDecl 0x5642a9fc5480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5642a9fc53c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5642a9fc5528 <line:630:22>
| `-NonNullAttr 0x5642a9fc5580 <col:52, col:66> 1
|-FunctionDecl 0x5642a9fc5680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5642a9fc55c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5642a9fc5728 <line:632:22>
| `-NonNullAttr 0x5642a9fc5780 <col:52, col:66> 1
|-FunctionDecl 0x5642a9fc5b58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5642a9fc5860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5642a9fc5970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5642a9fc59f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5642a9fc5c10 <line:636:22>
| `-NonNullAttr 0x5642a9fc5c68 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fc5de8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5642a9fc5cb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5642a9fc5e90 <line:638:22>
| `-NonNullAttr 0x5642a9fc5f10 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fc6010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5642a9fc5f58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5642a9fc60b8 <line:640:22>
| `-NonNullAttr 0x5642a9fc6110 <col:52, col:66> 1
|-FunctionDecl 0x5642a9fc62f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5642a9fc61c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5642a9fc63a0 <line:642:22>
| `-NonNullAttr 0x5642a9fc63f8 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fc6500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5642a9fc6448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5642a9fc65a8 <line:644:22>
| `-NonNullAttr 0x5642a9fc6600 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fc6828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5642a9fc6648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5642a9fc66c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5642a9fc68d8 <line:648:22>
| `-NonNullAttr 0x5642a9fc6930 <col:63, col:80> 1 2
|-FunctionDecl 0x5642a9fc6b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5642a9fc6978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5642a9fc69f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5642a9fc6be8 <line:651:22>
| `-NonNullAttr 0x5642a9fc6c40 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fc6fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5642a9fc6d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5642a9fc6e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5642a9fc7058 <line:654:22>
| `-NonNullAttr 0x5642a9fc70b0 <col:63, col:77> 1
|-FunctionDecl 0x5642a9fc7208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5642a9fc70f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5642a9fc72b0 <col:69>
|-FunctionDecl 0x5642a9fc7428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5642a9fc7318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5642a9fc74d0 <col:72>
|-FunctionDecl 0x5642a9fc7708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5642a9fc7538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5642a9fc75e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5642a9fc77b8 <col:44>
|-FunctionDecl 0x5642a9fc79d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5642a9fc7820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5642a9fc7898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5642a9fc7a88 <line:661:22>
| `-NonNullAttr 0x5642a9fc7ae0 <col:63, col:77> 2
|-FunctionDecl 0x5642a9fc8f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5642a9fc7bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5642a9fc7cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5642a9fc7de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5642a9fc9008 <col:47>
|-FunctionDecl 0x5642a9fc9110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5642a9fc9078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5642a9fc9268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5642a9fc91d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5642a9fc93c0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5642a9fc9328 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5642a9fc9488 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5642a9fc9548 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5642a9fc9608 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5642a9fc96c0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5642a9fc9740 prev 0x5642a9fc96c0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5642a9fc97a8 <col:24> 'int' 0
|-VarDecl 0x5642a9fc97e0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5642a9fc9860 prev 0x5642a9fc97e0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5642a9fc98c8 <col:27> 'int' 0
|-VarDecl 0x5642a9fc9900 <line:676:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x5642a9fc9980 prev 0x5642a9fc9900 <line:677:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x5642a9fc99e8 <col:27> 'int' 0
|-VarDecl 0x5642a9fc9a20 <line:678:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5642a9fc9aa0 prev 0x5642a9fc9a20 <line:679:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5642a9fc9b08 <col:27> 'int' 0
|-VarDecl 0x5642a9fc9b38 <line:680:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5642a9fc9bb0 <line:681:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5642a9fc9c30 <line:682:1, col:5> col:5 used x 'int'
|-VarDecl 0x5642a9fc9cb0 prev 0x5642a9fc9c30 <line:683:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5642a9fc9d18 <col:9> 'int' 0
|-VarDecl 0x5642a9fc9d48 <line:684:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x5642a9fc9dc8 <line:685:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x5642a9fc9e40 <line:686:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x5642a9fc9f20 <line:687:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x5642a9fc9f98 <line:688:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x5642a9fca010 <line:689:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x5642a9fca088 <line:690:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x5642a9fca100 <line:691:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x5642a9fca178 <line:692:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x5642a9fca1f0 <line:693:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x5642a9fca268 <line:694:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x5642a9fca2e8 <line:695:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x5642a9fca368 <line:696:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x5642a9fca3e0 <line:697:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x5642a9fca460 <line:698:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x5642a9fca4d8 <line:699:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x5642a9fca558 <line:700:1, col:5> col:5 used y 'int'
|-VarDecl 0x5642a9fca5d8 prev 0x5642a9fca558 <line:701:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5642a9fca640 <col:9> 'int' 0
|-VarDecl 0x5642a9fca670 <line:702:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5642a9fca6e8 <line:703:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5642a9fca800 prev 0x5642a9fc9110 <line:704:1, line:731:1> line:704:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5642a9fca768 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5642a9fcd778 <line:705:1, line:731:1>
|   |-CallExpr 0x5642a9fca918 <line:706:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5642a9fca900 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642a9fca8a8 <col:3> 'void ()' Function 0x5642a9f704b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5642a9fca990 <line:707:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5642a9fca938 <col:3> 'int' lvalue Var 0x5642a9fc9860 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5642a9fca978 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5642a9fca958 <col:25> 'int' lvalue Var 0x5642a9fca5d8 'y' 'int'
|   |-CallExpr 0x5642a9fca9e8 <line:708:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5642a9fca9d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642a9fca9b0 <col:3> 'void ()' Function 0x5642a9f70570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5642a9fcaa40 <line:709:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5642a9fcaa28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642a9fcaa08 <col:3> 'void ()' Function 0x5642a9f704b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5642a9fcab08 <line:710:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5642a9fcaa60 <col:3> '_Bool' lvalue Var 0x5642a9fca670 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x5642a9fcaae8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5642a9fcaad0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5642a9fcaa80 <col:19> '_Bool (void)' Function 0x5642a9f6fc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5642a9fcaba0 <line:711:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5642a9fcab28 <col:3> '_Bool' lvalue Var 0x5642a9fca6e8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x5642a9fcab80 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5642a9fcab68 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5642a9fcab48 <col:19> '_Bool (void)' Function 0x5642a9f6fc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5642a9fcac18 <line:712:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5642a9fcabc0 <col:3> '_Bool' lvalue Var 0x5642a9fc9d48 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5642a9fcac00 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5642a9fcabe0 <col:21> '_Bool' lvalue Var 0x5642a9fca6e8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5642a9fcac90 <line:713:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5642a9fcac38 <col:3> 'int' lvalue Var 0x5642a9fc9dc8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5642a9fcac78 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5642a9fcac58 <col:15> 'int' lvalue Var 0x5642a9fc9cb0 'x' 'int'
|   |-BinaryOperator 0x5642a9fcb0d8 <line:714:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5642a9fcacb0 <col:3> 'int' lvalue Var 0x5642a9fc9cb0 'x' 'int'
|   | `-ConditionalOperator 0x5642a9fcb0a8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5642a9fcaec0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5642a9fcade0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5642a9fcad08 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5642a9fcacf0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5642a9fcacd0 <col:8> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5642a9fcadc0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5642a9fcad58 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5642a9fcad40 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5642a9fcad20 <col:27> '_Bool' lvalue Var 0x5642a9fc9f20 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x5642a9fcada8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5642a9fcad90 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5642a9fcad70 <col:46> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5642a9fcaea0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5642a9fcae38 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5642a9fcae20 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5642a9fcae00 <col:65> '_Bool' lvalue Var 0x5642a9fc9f20 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x5642a9fcae88 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5642a9fcae70 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5642a9fcae50 <col:84> '_Bool' lvalue Var 0x5642a9fca100 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5642a9fcb090 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5642a9fcaee0 <col:101> 'int' lvalue Var 0x5642a9fc9cb0 'x' 'int'
|   |   `-ParenExpr 0x5642a9fcb070 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5642a9fcb040 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5642a9fcafb0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5642a9fcaf68 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5642a9fcaf50 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5642a9fcaf00 <col:106> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5642a9fcaf98 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5642a9fcaf80 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5642a9fcaf30 <col:124> '_Bool' lvalue Var 0x5642a9fc9f20 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5642a9fcb010 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5642a9fcafd0 <col:141> 'int' lvalue Var 0x5642a9fca368 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5642a9fcb028 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5642a9fcaff0 <col:153> 'int' lvalue Var 0x5642a9fca460 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5642a9fcb5e8 <line:715:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5642a9fcb0f8 <col:3> 'int' lvalue Var 0x5642a9fca368 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x5642a9fcb5b8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5642a9fcb588 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5642a9fcb570 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5642a9fcb118 <col:15> '_Bool' lvalue Var 0x5642a9fca6e8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5642a9fcb5a0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5642a9fcb138 <col:31> 'int' lvalue Var 0x5642a9fca368 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5642a9fcb550 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5642a9fcb520 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5642a9fcb348 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5642a9fcb268 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5642a9fcb190 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5642a9fcb178 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5642a9fcb158 <col:45> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5642a9fcb248 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5642a9fcb1e0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5642a9fcb1c8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5642a9fcb1a8 <col:64> '_Bool' lvalue Var 0x5642a9fc9f20 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5642a9fcb230 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5642a9fcb218 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5642a9fcb1f8 <col:83> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5642a9fcb328 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5642a9fcb2c0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5642a9fcb2a8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5642a9fcb288 <col:102> '_Bool' lvalue Var 0x5642a9fc9f20 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5642a9fcb310 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5642a9fcb2f8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5642a9fcb2d8 <col:121> '_Bool' lvalue Var 0x5642a9fca100 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5642a9fcb508 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5642a9fcb368 <col:138> 'int' lvalue Var 0x5642a9fca368 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x5642a9fcb4e8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5642a9fcb4b8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5642a9fcb428 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5642a9fcb3e0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5642a9fcb3c8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5642a9fcb388 <col:151> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5642a9fcb410 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5642a9fcb3f8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5642a9fcb3a8 <col:169> '_Bool' lvalue Var 0x5642a9fc9f20 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5642a9fcb488 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5642a9fcb448 <col:186> 'int' lvalue Var 0x5642a9fca368 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5642a9fcb4a0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5642a9fcb468 <col:198> 'int' lvalue Var 0x5642a9fca368 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5642a9fcbaf8 <line:716:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5642a9fcb608 <col:3> 'int' lvalue Var 0x5642a9fca460 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x5642a9fcbac8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5642a9fcba98 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5642a9fcba80 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5642a9fcb628 <col:15> '_Bool' lvalue Var 0x5642a9fca6e8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5642a9fcbab0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5642a9fcb648 <col:31> 'int' lvalue Var 0x5642a9fca460 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x5642a9fcba60 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5642a9fcba30 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5642a9fcb858 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5642a9fcb778 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5642a9fcb6a0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5642a9fcb688 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5642a9fcb668 <col:45> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5642a9fcb758 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5642a9fcb6f0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5642a9fcb6d8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5642a9fcb6b8 <col:64> '_Bool' lvalue Var 0x5642a9fc9f20 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5642a9fcb740 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5642a9fcb728 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5642a9fcb708 <col:83> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5642a9fcb838 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5642a9fcb7d0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5642a9fcb7b8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5642a9fcb798 <col:102> '_Bool' lvalue Var 0x5642a9fc9f20 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5642a9fcb820 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5642a9fcb808 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5642a9fcb7e8 <col:121> '_Bool' lvalue Var 0x5642a9fca100 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5642a9fcba18 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5642a9fcb878 <col:138> 'int' lvalue Var 0x5642a9fca460 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x5642a9fcb9f8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5642a9fcb9c8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5642a9fcb938 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5642a9fcb8f0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5642a9fcb8d8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5642a9fcb898 <col:151> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5642a9fcb920 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5642a9fcb908 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5642a9fcb8b8 <col:169> '_Bool' lvalue Var 0x5642a9fc9f20 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5642a9fcb998 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5642a9fcb958 <col:186> 'int' lvalue Var 0x5642a9fca460 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5642a9fcb9b0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5642a9fcb978 <col:198> 'int' lvalue Var 0x5642a9fca460 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5642a9fcc0b8 <line:717:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5642a9fcbb18 <col:3> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5642a9fcc0a0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5642a9fcc070 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5642a9fcc028 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5642a9fcc010 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5642a9fcbb38 <col:20> '_Bool' lvalue Var 0x5642a9fca6e8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5642a9fcc058 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5642a9fcc040 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5642a9fcbb58 <col:36> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5642a9fcbff0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5642a9fcbfc0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5642a9fcbd68 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5642a9fcbc88 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5642a9fcbbb0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5642a9fcbb98 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5642a9fcbb78 <col:55> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5642a9fcbc68 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5642a9fcbc00 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5642a9fcbbe8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5642a9fcbbc8 <col:74> '_Bool' lvalue Var 0x5642a9fc9f20 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5642a9fcbc50 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5642a9fcbc38 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5642a9fcbc18 <col:93> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5642a9fcbd48 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5642a9fcbce0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5642a9fcbcc8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5642a9fcbca8 <col:112> '_Bool' lvalue Var 0x5642a9fc9f20 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5642a9fcbd30 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5642a9fcbd18 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5642a9fcbcf8 <col:131> '_Bool' lvalue Var 0x5642a9fca100 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5642a9fcbfa8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5642a9fcbf90 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5642a9fcbd88 <col:148> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5642a9fcbf70 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5642a9fcbf40 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5642a9fcbe48 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5642a9fcbe00 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5642a9fcbde8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5642a9fcbda8 <col:166> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5642a9fcbe30 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5642a9fcbe18 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5642a9fcbdc8 <col:184> '_Bool' lvalue Var 0x5642a9fc9f20 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5642a9fcbee0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5642a9fcbe98 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5642a9fcbe68 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5642a9fcbf10 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5642a9fcbef8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5642a9fcbec0 <col:212> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5642a9fcc680 <line:718:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5642a9fcc0d8 <col:3> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5642a9fcc668 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5642a9fcc638 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5642a9fcc5f0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5642a9fcc5d8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5642a9fcc0f8 <col:20> '_Bool' lvalue Var 0x5642a9fca6e8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5642a9fcc620 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5642a9fcc608 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5642a9fcc118 <col:36> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5642a9fcc5b8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5642a9fcc588 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5642a9fcc328 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5642a9fcc248 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5642a9fcc170 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5642a9fcc158 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5642a9fcc138 <col:55> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5642a9fcc228 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5642a9fcc1c0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5642a9fcc1a8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5642a9fcc188 <col:74> '_Bool' lvalue Var 0x5642a9fc9f20 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5642a9fcc210 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5642a9fcc1f8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5642a9fcc1d8 <col:93> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5642a9fcc308 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5642a9fcc2a0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5642a9fcc288 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5642a9fcc268 <col:112> '_Bool' lvalue Var 0x5642a9fc9f20 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5642a9fcc2f0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5642a9fcc2d8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5642a9fcc2b8 <col:131> '_Bool' lvalue Var 0x5642a9fca100 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5642a9fcc570 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5642a9fcc558 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5642a9fcc348 <col:148> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5642a9fcc538 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5642a9fcc508 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5642a9fcc408 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5642a9fcc3c0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5642a9fcc3a8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5642a9fcc368 <col:166> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5642a9fcc3f0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5642a9fcc3d8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5642a9fcc388 <col:184> '_Bool' lvalue Var 0x5642a9fc9f20 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5642a9fcc4d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5642a9fcc458 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5642a9fcc428 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5642a9fcc4f0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5642a9fcc4b0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5642a9fcc480 <col:219> 'int' 0
|   |-BinaryOperator 0x5642a9fccc28 <line:719:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5642a9fcc6a0 <col:3> '_Bool' lvalue Var 0x5642a9fc9f20 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5642a9fccc10 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5642a9fccbe0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5642a9fccb98 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5642a9fccb80 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5642a9fcc6c0 <col:20> '_Bool' lvalue Var 0x5642a9fca6e8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5642a9fccbc8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5642a9fccbb0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5642a9fcc6e0 <col:36> '_Bool' lvalue Var 0x5642a9fc9f20 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x5642a9fccb60 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5642a9fccb30 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5642a9fcc8f0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5642a9fcc810 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5642a9fcc738 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5642a9fcc720 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5642a9fcc700 <col:55> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5642a9fcc7f0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5642a9fcc788 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5642a9fcc770 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5642a9fcc750 <col:74> '_Bool' lvalue Var 0x5642a9fc9f20 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5642a9fcc7d8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5642a9fcc7c0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5642a9fcc7a0 <col:93> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5642a9fcc8d0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5642a9fcc868 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5642a9fcc850 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5642a9fcc830 <col:112> '_Bool' lvalue Var 0x5642a9fc9f20 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5642a9fcc8b8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5642a9fcc8a0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5642a9fcc880 <col:131> '_Bool' lvalue Var 0x5642a9fca100 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5642a9fccb18 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5642a9fccb00 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5642a9fcc910 <col:148> '_Bool' lvalue Var 0x5642a9fc9f20 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x5642a9fccae0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5642a9fccab0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5642a9fcc9d0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5642a9fcc988 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5642a9fcc970 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5642a9fcc930 <col:166> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5642a9fcc9b8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5642a9fcc9a0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5642a9fcc950 <col:184> '_Bool' lvalue Var 0x5642a9fc9f20 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5642a9fcca68 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5642a9fcca20 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5642a9fcc9f0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5642a9fcca98 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5642a9fcca80 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5642a9fcca48 <col:212> '_Bool' lvalue Var 0x5642a9fc9f20 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5642a9fcd210 <line:720:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5642a9fccc48 <col:3> '_Bool' lvalue Var 0x5642a9fca100 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5642a9fcd1f8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5642a9fcd1c8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5642a9fcd180 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5642a9fcd168 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5642a9fccc68 <col:20> '_Bool' lvalue Var 0x5642a9fca6e8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5642a9fcd1b0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5642a9fcd198 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5642a9fccc88 <col:36> '_Bool' lvalue Var 0x5642a9fca100 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x5642a9fcd148 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5642a9fcd118 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5642a9fcce98 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5642a9fccdb8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5642a9fccce0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5642a9fcccc8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5642a9fccca8 <col:55> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5642a9fccd98 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5642a9fccd30 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5642a9fccd18 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5642a9fcccf8 <col:74> '_Bool' lvalue Var 0x5642a9fc9f20 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5642a9fccd80 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5642a9fccd68 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5642a9fccd48 <col:93> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5642a9fcce78 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5642a9fcce10 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5642a9fccdf8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5642a9fccdd8 <col:112> '_Bool' lvalue Var 0x5642a9fc9f20 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5642a9fcce60 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5642a9fcce48 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5642a9fcce28 <col:131> '_Bool' lvalue Var 0x5642a9fca100 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5642a9fcd100 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5642a9fcd0e8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5642a9fcceb8 <col:148> '_Bool' lvalue Var 0x5642a9fca100 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x5642a9fcd0c8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5642a9fcd098 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5642a9fccf98 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5642a9fccf50 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5642a9fccf18 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5642a9fcced8 <col:166> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5642a9fccf80 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5642a9fccf68 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5642a9fccef8 <col:184> '_Bool' lvalue Var 0x5642a9fc9f20 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5642a9fcd068 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5642a9fccfe8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5642a9fccfb8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5642a9fcd080 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5642a9fcd040 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5642a9fcd010 <col:219> 'int' 0
|   |-BinaryOperator 0x5642a9fcd288 <line:721:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5642a9fcd230 <col:3> 'int' lvalue Var 0x5642a9fc9980 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x5642a9fcd270 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5642a9fcd250 <col:25> 'int' lvalue Var 0x5642a9fc9cb0 'x' 'int'
|   |-BinaryOperator 0x5642a9fcd3b8 <line:722:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5642a9fcd2a8 <col:3> 'int' lvalue Var 0x5642a9fc9cb0 'x' 'int'
|   | `-ConditionalOperator 0x5642a9fcd388 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5642a9fcd340 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5642a9fcd328 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5642a9fcd2c8 <col:7> '_Bool' lvalue Var 0x5642a9fc9d48 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5642a9fcd358 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5642a9fcd2e8 <col:25> 'int' lvalue Var 0x5642a9fc9dc8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5642a9fcd370 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5642a9fcd308 <col:37> 'int' lvalue Var 0x5642a9fc9cb0 'x' 'int'
|   |-BinaryOperator 0x5642a9fcd450 <line:723:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5642a9fcd3d8 <col:3> '_Bool' lvalue Var 0x5642a9fc9d48 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5642a9fcd428 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5642a9fcd3f8 <col:28> 'int' 0
|   |-CallExpr 0x5642a9fcd4a8 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5642a9fcd490 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642a9fcd470 <col:3> 'void ()' Function 0x5642a9f70570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5642a9fcd500 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5642a9fcd4e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642a9fcd4c8 <col:3> 'void ()' Function 0x5642a9f704b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5642a9fcd558 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5642a9fcd540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642a9fcd520 <col:3> 'void ()' Function 0x5642a9f70570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5642a9fcd5b0 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5642a9fcd598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642a9fcd578 <col:3> 'void ()' Function 0x5642a9f704b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5642a9fcd668 <line:728:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5642a9fcd5d0 <col:3> 'int' lvalue Var 0x5642a9fc9740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5642a9fcd648 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5642a9fcd630 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5642a9fcd5f0 <col:22> 'int' lvalue Var 0x5642a9fc9740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5642a9fcd610 <col:41> 'int' 1
|   |-CallExpr 0x5642a9fcd6c0 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5642a9fcd6a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642a9fcd688 <col:3> 'void ()' Function 0x5642a9f70570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5642a9fcd768 <line:730:3, col:36>
|     `-CallExpr 0x5642a9fcd748 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5642a9fcd730 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5642a9fcd6e0 <col:10> 'void *(void)' Function 0x5642a9f6ffc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5642a9fcd900 prev 0x5642a9fc9268 <line:732:1, line:760:1> line:732:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5642a9fcd868 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5642a9fcf0c8 <line:733:1, line:760:1>
|   |-CallExpr 0x5642a9fcd9e0 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5642a9fcd9c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642a9fcd9a8 <col:3> 'void ()' Function 0x5642a9f704b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5642a9fcda58 <line:735:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5642a9fcda00 <col:3> 'int' lvalue Var 0x5642a9fca460 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5642a9fcda40 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5642a9fcda20 <col:15> 'int' lvalue Var 0x5642a9fca368 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5642a9fcdab8 <line:736:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5642a9fcda78 <col:3> 'int' lvalue Var 0x5642a9fca368 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x5642a9fcda98 <col:15> 'int' 1
|   |-BinaryOperator 0x5642a9fcdb30 <line:737:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5642a9fcdad8 <col:3> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5642a9fcdb18 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5642a9fcdaf8 <col:20> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5642a9fcdbc8 <line:738:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5642a9fcdb50 <col:3> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5642a9fcdba0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5642a9fcdb70 <col:27> 'int' 1
|   |-CallExpr 0x5642a9fcdd48 <line:739:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5642a9fcdd30 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5642a9fcdbe8 <col:3> 'void (int)' Function 0x5642a9f70238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5642a9fcdce8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5642a9fcdcc8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5642a9fcdca8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5642a9fcdc60 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5642a9fcdc48 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5642a9fcdc08 <col:23> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5642a9fcdc90 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5642a9fcdc78 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5642a9fcdc28 <col:41> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5642a9fcddc8 <line:740:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5642a9fcdd70 <col:3> '_Bool' lvalue Var 0x5642a9fca088 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5642a9fcddb0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5642a9fcdd90 <col:20> '_Bool' lvalue Var 0x5642a9fc9e40 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5642a9fcde40 <line:741:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5642a9fcdde8 <col:3> '_Bool' lvalue Var 0x5642a9fca100 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5642a9fcde28 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5642a9fcde08 <col:20> '_Bool' lvalue Var 0x5642a9fc9f20 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5642a9fcdeb8 <line:742:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5642a9fcde60 <col:3> '_Bool' lvalue Var 0x5642a9fca178 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5642a9fcdea0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5642a9fcde80 <col:20> '_Bool' lvalue Var 0x5642a9fc9f98 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5642a9fcdf30 <line:743:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5642a9fcded8 <col:3> '_Bool' lvalue Var 0x5642a9fca1f0 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5642a9fcdf18 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5642a9fcdef8 <col:20> '_Bool' lvalue Var 0x5642a9fca010 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5642a9fcdfd8 <line:744:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5642a9fcdf60 <col:3> '_Bool' lvalue Var 0x5642a9fc9f98 'x$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x5642a9fcdfb0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5642a9fcdf80 <col:27> 'int' 1
|   |-CallExpr 0x5642a9fce030 <line:745:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5642a9fce018 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642a9fcdff8 <col:3> 'void ()' Function 0x5642a9f70570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5642a9fce088 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5642a9fce070 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642a9fce050 <col:3> 'void ()' Function 0x5642a9f704b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5642a9fce0e8 <line:747:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5642a9fce0a8 <col:3> 'int' lvalue Var 0x5642a9fca5d8 'y' 'int'
|   | `-IntegerLiteral 0x5642a9fce0c8 <col:7> 'int' 1
|   |-CallExpr 0x5642a9fce140 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5642a9fce128 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642a9fce108 <col:3> 'void ()' Function 0x5642a9f70570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5642a9fce198 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5642a9fce180 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642a9fce160 <col:3> 'void ()' Function 0x5642a9f704b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5642a9fce480 <line:750:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5642a9fce1b8 <col:3> 'int' lvalue Var 0x5642a9fc9cb0 'x' 'int'
|   | `-ConditionalOperator 0x5642a9fce450 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5642a9fce278 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5642a9fce230 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5642a9fce218 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5642a9fce1d8 <col:7> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5642a9fce260 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5642a9fce248 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5642a9fce1f8 <col:25> '_Bool' lvalue Var 0x5642a9fc9f98 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5642a9fce438 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5642a9fce298 <col:42> 'int' lvalue Var 0x5642a9fca368 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5642a9fce418 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5642a9fce3e8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5642a9fce358 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5642a9fce310 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5642a9fce2f8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5642a9fce2b8 <col:55> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5642a9fce340 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5642a9fce328 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5642a9fce2d8 <col:73> '_Bool' lvalue Var 0x5642a9fca178 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5642a9fce3b8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5642a9fce378 <col:90> 'int' lvalue Var 0x5642a9fca460 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5642a9fce3d0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5642a9fce398 <col:102> 'int' lvalue Var 0x5642a9fc9cb0 'x' 'int'
|   |-BinaryOperator 0x5642a9fce688 <line:751:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5642a9fce4a0 <col:3> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5642a9fce670 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5642a9fce640 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5642a9fce560 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5642a9fce518 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5642a9fce500 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5642a9fce4c0 <col:20> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5642a9fce548 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5642a9fce530 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5642a9fce4e0 <col:38> '_Bool' lvalue Var 0x5642a9fc9f98 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5642a9fce5f8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5642a9fce5b0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5642a9fce580 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5642a9fce628 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5642a9fce610 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5642a9fce5d8 <col:66> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5642a9fce970 <line:752:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5642a9fce6a8 <col:3> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5642a9fce958 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5642a9fce928 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5642a9fce848 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5642a9fce768 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5642a9fce720 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5642a9fce708 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5642a9fce6c8 <col:20> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5642a9fce750 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5642a9fce738 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5642a9fce6e8 <col:38> '_Bool' lvalue Var 0x5642a9fc9f98 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5642a9fce828 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5642a9fce7e0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5642a9fce7c8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5642a9fce788 <col:56> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5642a9fce810 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5642a9fce7f8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5642a9fce7a8 <col:74> '_Bool' lvalue Var 0x5642a9fca178 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5642a9fce8e0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5642a9fce898 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5642a9fce868 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5642a9fce910 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5642a9fce8f8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5642a9fce8c0 <col:102> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5642a9fceb78 <line:753:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5642a9fce990 <col:3> '_Bool' lvalue Var 0x5642a9fc9f98 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5642a9fceb60 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5642a9fceb30 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5642a9fcea50 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5642a9fcea08 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5642a9fce9f0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5642a9fce9b0 <col:20> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5642a9fcea38 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5642a9fcea20 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5642a9fce9d0 <col:38> '_Bool' lvalue Var 0x5642a9fc9f98 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5642a9fceae8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5642a9fceaa0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5642a9fcea70 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5642a9fceb18 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5642a9fceb00 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5642a9fceac8 <col:66> '_Bool' lvalue Var 0x5642a9fc9f98 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5642a9fcee60 <line:754:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5642a9fceb98 <col:3> '_Bool' lvalue Var 0x5642a9fca178 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5642a9fcee48 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5642a9fcee18 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5642a9fced38 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5642a9fcec58 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5642a9fcec10 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5642a9fcebf8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5642a9fcebb8 <col:20> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5642a9fcec40 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5642a9fcec28 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5642a9fcebd8 <col:38> '_Bool' lvalue Var 0x5642a9fc9f98 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5642a9fced18 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5642a9fcecd0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5642a9fcecb8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5642a9fcec78 <col:56> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5642a9fced00 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5642a9fcece8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5642a9fcec98 <col:74> '_Bool' lvalue Var 0x5642a9fca178 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5642a9fcedd0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5642a9fced88 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5642a9fced58 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5642a9fcee00 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5642a9fcede8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5642a9fcedb0 <col:102> '_Bool' lvalue Var 0x5642a9fca178 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5642a9fceeb8 <line:755:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5642a9fceea0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642a9fcee80 <col:3> 'void ()' Function 0x5642a9f70570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5642a9fcef10 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5642a9fceef8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642a9fceed8 <col:3> 'void ()' Function 0x5642a9f704b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5642a9fcefe8 <line:757:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5642a9fcef30 <col:3> 'int' lvalue Var 0x5642a9fc9740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5642a9fcefc8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5642a9fcefb0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5642a9fcef70 <col:22> 'int' lvalue Var 0x5642a9fc9740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5642a9fcef90 <col:41> 'int' 1
|   |-CallExpr 0x5642a9fcf040 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5642a9fcf028 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642a9fcf008 <col:3> 'void ()' Function 0x5642a9f70570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5642a9fcf0b8 <line:759:3, col:36>
|     `-CallExpr 0x5642a9fcf098 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5642a9fcf080 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5642a9fcf060 <col:10> 'void *(void)' Function 0x5642a9f6ffc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5642a9fcf258 prev 0x5642a9fc93c0 <line:761:1, line:780:1> line:761:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5642a9fcf1c0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5642a9fd0490 <line:762:1, line:780:1>
|   |-CallExpr 0x5642a9fcf338 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5642a9fcf320 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642a9fcf300 <col:3> 'void ()' Function 0x5642a9f704b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5642a9fcf3b0 <line:764:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5642a9fcf358 <col:3> 'int' lvalue Var 0x5642a9fc9aa0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5642a9fcf398 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5642a9fcf378 <col:25> 'int' lvalue Var 0x5642a9fca5d8 'y' 'int'
|   |-CallExpr 0x5642a9fcf408 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5642a9fcf3f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642a9fcf3d0 <col:3> 'void ()' Function 0x5642a9f70570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5642a9fcf460 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5642a9fcf448 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642a9fcf428 <col:3> 'void ()' Function 0x5642a9f704b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5642a9fcf4c0 <line:767:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5642a9fcf480 <col:3> 'int' lvalue Var 0x5642a9fca5d8 'y' 'int'
|   | `-IntegerLiteral 0x5642a9fcf4a0 <col:7> 'int' 2
|   |-CallExpr 0x5642a9fcf518 <line:768:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5642a9fcf500 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642a9fcf4e0 <col:3> 'void ()' Function 0x5642a9f70570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5642a9fcf570 <line:769:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5642a9fcf558 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642a9fcf538 <col:3> 'void ()' Function 0x5642a9f704b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5642a9fcf858 <line:770:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5642a9fcf590 <col:3> 'int' lvalue Var 0x5642a9fc9cb0 'x' 'int'
|   | `-ConditionalOperator 0x5642a9fcf828 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5642a9fcf650 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5642a9fcf608 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5642a9fcf5f0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5642a9fcf5b0 <col:7> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5642a9fcf638 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5642a9fcf620 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5642a9fcf5d0 <col:25> '_Bool' lvalue Var 0x5642a9fca010 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5642a9fcf810 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5642a9fcf670 <col:42> 'int' lvalue Var 0x5642a9fca368 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5642a9fcf7f0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5642a9fcf7c0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5642a9fcf730 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5642a9fcf6e8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5642a9fcf6d0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5642a9fcf690 <col:55> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5642a9fcf718 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5642a9fcf700 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5642a9fcf6b0 <col:73> '_Bool' lvalue Var 0x5642a9fca1f0 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5642a9fcf790 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5642a9fcf750 <col:90> 'int' lvalue Var 0x5642a9fca460 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5642a9fcf7a8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5642a9fcf770 <col:102> 'int' lvalue Var 0x5642a9fc9cb0 'x' 'int'
|   |-BinaryOperator 0x5642a9fcfa60 <line:771:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5642a9fcf878 <col:3> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5642a9fcfa48 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5642a9fcfa18 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5642a9fcf938 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5642a9fcf8f0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5642a9fcf8d8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5642a9fcf898 <col:20> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5642a9fcf920 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5642a9fcf908 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5642a9fcf8b8 <col:38> '_Bool' lvalue Var 0x5642a9fca010 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5642a9fcf9d0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5642a9fcf988 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5642a9fcf958 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5642a9fcfa00 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5642a9fcf9e8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5642a9fcf9b0 <col:66> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5642a9fcfd48 <line:772:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5642a9fcfa80 <col:3> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5642a9fcfd30 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5642a9fcfd00 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5642a9fcfc20 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5642a9fcfb40 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5642a9fcfaf8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5642a9fcfae0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5642a9fcfaa0 <col:20> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5642a9fcfb28 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5642a9fcfb10 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5642a9fcfac0 <col:38> '_Bool' lvalue Var 0x5642a9fca010 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5642a9fcfc00 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5642a9fcfbb8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5642a9fcfba0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5642a9fcfb60 <col:56> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5642a9fcfbe8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5642a9fcfbd0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5642a9fcfb80 <col:74> '_Bool' lvalue Var 0x5642a9fca1f0 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5642a9fcfcb8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5642a9fcfc70 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5642a9fcfc40 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5642a9fcfce8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5642a9fcfcd0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5642a9fcfc98 <col:102> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5642a9fcff50 <line:773:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5642a9fcfd68 <col:3> '_Bool' lvalue Var 0x5642a9fca010 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5642a9fcff38 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5642a9fcff08 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5642a9fcfe28 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5642a9fcfde0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5642a9fcfdc8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5642a9fcfd88 <col:20> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5642a9fcfe10 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5642a9fcfdf8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5642a9fcfda8 <col:38> '_Bool' lvalue Var 0x5642a9fca010 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5642a9fcfec0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5642a9fcfe78 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5642a9fcfe48 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5642a9fcfef0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5642a9fcfed8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5642a9fcfea0 <col:66> '_Bool' lvalue Var 0x5642a9fca010 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5642a9fd0248 <line:774:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5642a9fcff80 <col:3> '_Bool' lvalue Var 0x5642a9fca1f0 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5642a9fd0230 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5642a9fd0200 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5642a9fd0120 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5642a9fd0040 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5642a9fcfff8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5642a9fcffe0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5642a9fcffa0 <col:20> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5642a9fd0028 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5642a9fd0010 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5642a9fcffc0 <col:38> '_Bool' lvalue Var 0x5642a9fca010 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5642a9fd0100 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5642a9fd00b8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5642a9fd00a0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5642a9fd0060 <col:56> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5642a9fd00e8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5642a9fd00d0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5642a9fd0080 <col:74> '_Bool' lvalue Var 0x5642a9fca1f0 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5642a9fd01b8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5642a9fd0170 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5642a9fd0140 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5642a9fd01e8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5642a9fd01d0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5642a9fd0198 <col:102> '_Bool' lvalue Var 0x5642a9fca1f0 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5642a9fd02a0 <line:775:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5642a9fd0288 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642a9fd0268 <col:3> 'void ()' Function 0x5642a9f70570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5642a9fd02f8 <line:776:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5642a9fd02e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642a9fd02c0 <col:3> 'void ()' Function 0x5642a9f704b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5642a9fd03b0 <line:777:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5642a9fd0318 <col:3> 'int' lvalue Var 0x5642a9fc9740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5642a9fd0390 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5642a9fd0378 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5642a9fd0338 <col:22> 'int' lvalue Var 0x5642a9fc9740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5642a9fd0358 <col:41> 'int' 1
|   |-CallExpr 0x5642a9fd0408 <line:778:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5642a9fd03f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642a9fd03d0 <col:3> 'void ()' Function 0x5642a9f70570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5642a9fd0480 <line:779:3, col:36>
|     `-CallExpr 0x5642a9fd0460 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5642a9fd0448 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5642a9fd0428 <col:10> 'void *(void)' Function 0x5642a9f6ffc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5642a9fd0548 prev 0x5642a9fc9488 <line:781:1, line:783:1> line:781:6 fence 'void ()'
| `-CompoundStmt 0x5642a9fd05e8 <line:782:1, line:783:1>
|-FunctionDecl 0x5642a9fd0618 prev 0x5642a9fc9548 <line:784:1, line:786:1> line:784:6 isync 'void ()'
| `-CompoundStmt 0x5642a9fd06b8 <line:785:1, line:786:1>
|-FunctionDecl 0x5642a9fd06e8 prev 0x5642a9fc9608 <line:787:1, line:789:1> line:787:6 lwfence 'void ()'
| `-CompoundStmt 0x5642a9fd0788 <line:788:1, line:789:1>
`-FunctionDecl 0x5642a9fd07f8 <line:790:1, line:814:1> line:790:5 main 'int ()'
  `-CompoundStmt 0x5642a9fd24d8 <line:791:1, line:814:1>
    |-DeclStmt 0x5642a9fd0910 <line:792:3, col:18>
    | `-VarDecl 0x5642a9fd08a8 <col:3, col:13> col:13 used t1833 'pthread_t':'unsigned long'
    |-CallExpr 0x5642a9fd0b18 <line:793:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5642a9fd0b00 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5642a9fd0928 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5642a9fb09d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5642a9fd0968 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5642a9fd0948 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5642a9fd08a8 't1833' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5642a9fd0b58 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5642a9fd09e0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5642a9fd09b8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5642a9fd0980 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5642a9fd0b70 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5642a9fd0a00 <col:39> 'void *(void *)' Function 0x5642a9fca800 'P0' 'void *(void *)'
    | `-ParenExpr 0x5642a9fd0a80 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5642a9fd0a58 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5642a9fd0a20 <col:52> 'int' 0
    |-DeclStmt 0x5642a9fd0c00 <line:794:3, col:18>
    | `-VarDecl 0x5642a9fd0b98 <col:3, col:13> col:13 used t1834 'pthread_t':'unsigned long'
    |-CallExpr 0x5642a9fd0da8 <line:795:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5642a9fd0d90 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5642a9fd0c18 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5642a9fb09d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5642a9fd0c58 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5642a9fd0c38 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5642a9fd0b98 't1834' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5642a9fd0de8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5642a9fd0cd0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5642a9fd0ca8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5642a9fd0c70 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5642a9fd0e00 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5642a9fd0cf0 <col:39> 'void *(void *)' Function 0x5642a9fcd900 'P1' 'void *(void *)'
    | `-ParenExpr 0x5642a9fd0d70 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5642a9fd0d48 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5642a9fd0d10 <col:52> 'int' 0
    |-DeclStmt 0x5642a9fd0e90 <line:796:3, col:18>
    | `-VarDecl 0x5642a9fd0e28 <col:3, col:13> col:13 used t1835 'pthread_t':'unsigned long'
    |-CallExpr 0x5642a9fd1048 <line:797:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5642a9fd1030 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5642a9fd0ea8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5642a9fb09d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5642a9fd0ee8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5642a9fd0ec8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5642a9fd0e28 't1835' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5642a9fd1088 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5642a9fd0f60 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5642a9fd0f38 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5642a9fd0f00 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5642a9fd10a0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5642a9fd0f90 <col:39> 'void *(void *)' Function 0x5642a9fcf258 'P2' 'void *(void *)'
    | `-ParenExpr 0x5642a9fd1010 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5642a9fd0fe8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5642a9fd0fb0 <col:52> 'int' 0
    |-CallExpr 0x5642a9fd10f0 <line:798:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5642a9fd10d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5642a9fd10b8 <col:3> 'void ()' Function 0x5642a9f704b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5642a9fd11c0 <line:799:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5642a9fd1110 <col:3> '_Bool' lvalue Var 0x5642a9fc9b38 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5642a9fd11a8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5642a9fd1188 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5642a9fd1170 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5642a9fd1130 <col:21> 'int' lvalue Var 0x5642a9fc9740 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5642a9fd1150 <col:41> 'int' 3
    |-CallExpr 0x5642a9fd1218 <line:800:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5642a9fd1200 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5642a9fd11e0 <col:3> 'void ()' Function 0x5642a9f70570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5642a9fd1290 <line:801:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5642a9fd1278 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5642a9fd1238 <col:3> 'void (int)' Function 0x5642a9f6fe50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5642a9fd12d0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5642a9fd12b8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5642a9fd1258 <col:21> '_Bool' lvalue Var 0x5642a9fc9b38 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5642a9fd1320 <line:802:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5642a9fd1308 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5642a9fd12e8 <col:3> 'void ()' Function 0x5642a9f704b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5642a9fd1608 <line:803:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5642a9fd1340 <col:3> 'int' lvalue Var 0x5642a9fc9cb0 'x' 'int'
    | `-ConditionalOperator 0x5642a9fd15d8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5642a9fd1400 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5642a9fd13b8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5642a9fd13a0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5642a9fd1360 <col:7> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5642a9fd13e8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5642a9fd13d0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5642a9fd1380 <col:25> '_Bool' lvalue Var 0x5642a9fc9e40 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5642a9fd15c0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5642a9fd1420 <col:42> 'int' lvalue Var 0x5642a9fca368 'x$w_buff0' 'int'
    |   `-ParenExpr 0x5642a9fd15a0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5642a9fd1570 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5642a9fd14e0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5642a9fd1498 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5642a9fd1480 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5642a9fd1440 <col:55> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5642a9fd14c8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5642a9fd14b0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5642a9fd1460 <col:73> '_Bool' lvalue Var 0x5642a9fca088 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5642a9fd1540 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5642a9fd1500 <col:90> 'int' lvalue Var 0x5642a9fca460 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5642a9fd1558 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5642a9fd1520 <col:102> 'int' lvalue Var 0x5642a9fc9cb0 'x' 'int'
    |-BinaryOperator 0x5642a9fd1810 <line:804:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5642a9fd1628 <col:3> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5642a9fd17f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5642a9fd17c8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5642a9fd16e8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5642a9fd16a0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5642a9fd1688 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5642a9fd1648 <col:20> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5642a9fd16d0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5642a9fd16b8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5642a9fd1668 <col:38> '_Bool' lvalue Var 0x5642a9fc9e40 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5642a9fd1780 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5642a9fd1738 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5642a9fd1708 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5642a9fd17b0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5642a9fd1798 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5642a9fd1760 <col:66> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5642a9fd1af8 <line:805:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5642a9fd1830 <col:3> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5642a9fd1ae0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5642a9fd1ab0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5642a9fd19d0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5642a9fd18f0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5642a9fd18a8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5642a9fd1890 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5642a9fd1850 <col:20> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5642a9fd18d8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5642a9fd18c0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5642a9fd1870 <col:38> '_Bool' lvalue Var 0x5642a9fc9e40 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5642a9fd19b0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5642a9fd1968 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5642a9fd1950 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5642a9fd1910 <col:56> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5642a9fd1998 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5642a9fd1980 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5642a9fd1930 <col:74> '_Bool' lvalue Var 0x5642a9fca088 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5642a9fd1a68 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5642a9fd1a20 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5642a9fd19f0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5642a9fd1a98 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5642a9fd1a80 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5642a9fd1a48 <col:102> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5642a9fd1d00 <line:806:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5642a9fd1b18 <col:3> '_Bool' lvalue Var 0x5642a9fc9e40 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5642a9fd1ce8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5642a9fd1cb8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5642a9fd1bd8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5642a9fd1b90 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5642a9fd1b78 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5642a9fd1b38 <col:20> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5642a9fd1bc0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5642a9fd1ba8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5642a9fd1b58 <col:38> '_Bool' lvalue Var 0x5642a9fc9e40 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5642a9fd1c70 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5642a9fd1c28 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5642a9fd1bf8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5642a9fd1ca0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5642a9fd1c88 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5642a9fd1c50 <col:66> '_Bool' lvalue Var 0x5642a9fc9e40 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5642a9fd2000 <line:807:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5642a9fd1d20 <col:3> '_Bool' lvalue Var 0x5642a9fca088 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5642a9fd1fe8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5642a9fd1fb8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5642a9fd1ec0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5642a9fd1de0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5642a9fd1d98 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5642a9fd1d80 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5642a9fd1d40 <col:20> '_Bool' lvalue Var 0x5642a9fca3e0 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5642a9fd1dc8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5642a9fd1db0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5642a9fd1d60 <col:38> '_Bool' lvalue Var 0x5642a9fc9e40 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5642a9fd1ea0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5642a9fd1e58 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5642a9fd1e40 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5642a9fd1e00 <col:56> '_Bool' lvalue Var 0x5642a9fca4d8 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5642a9fd1e88 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5642a9fd1e70 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5642a9fd1e20 <col:74> '_Bool' lvalue Var 0x5642a9fca088 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5642a9fd1f58 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5642a9fd1f10 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5642a9fd1ee0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5642a9fd1fa0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5642a9fd1f70 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5642a9fd1f38 <col:102> '_Bool' lvalue Var 0x5642a9fca088 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5642a9fd2058 <line:808:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5642a9fd2040 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5642a9fd2020 <col:3> 'void ()' Function 0x5642a9f70570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5642a9fd20b0 <line:809:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5642a9fd2098 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5642a9fd2078 <col:3> 'void ()' Function 0x5642a9f704b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5642a9fd2380 <line:810:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x5642a9fd20d0 <col:3> '_Bool' lvalue Var 0x5642a9fc9bb0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5642a9fd2368 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5642a9fd2350 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5642a9fd2330 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x5642a9fd2310 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x5642a9fd2278 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x5642a9fd21e0 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x5642a9fd2148 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x5642a9fd2130 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x5642a9fd20f0 <col:23> 'int' lvalue Var 0x5642a9fca5d8 'y' 'int'
    |         | | | `-IntegerLiteral 0x5642a9fd2110 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x5642a9fd21c0 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5642a9fd21a8 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5642a9fd2168 <col:33> 'int' lvalue Var 0x5642a9fc9860 '__unbuffered_p0_EAX' 'int'
    |         | |   `-IntegerLiteral 0x5642a9fd2188 <col:56> 'int' 2
    |         | `-BinaryOperator 0x5642a9fd2258 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5642a9fd2240 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5642a9fd2200 <col:61> 'int' lvalue Var 0x5642a9fc9980 '__unbuffered_p0_EBX' 'int'
    |         |   `-IntegerLiteral 0x5642a9fd2220 <col:84> 'int' 0
    |         `-BinaryOperator 0x5642a9fd22f0 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x5642a9fd22d8 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5642a9fd2298 <col:89> 'int' lvalue Var 0x5642a9fc9aa0 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x5642a9fd22b8 <col:112> 'int' 1
    |-CallExpr 0x5642a9fd23d8 <line:811:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5642a9fd23c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5642a9fd23a0 <col:3> 'void ()' Function 0x5642a9f70570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5642a9fd2450 <line:812:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5642a9fd2438 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5642a9fd23f8 <col:3> 'void (int)' Function 0x5642a9f70238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5642a9fd2490 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5642a9fd2478 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5642a9fd2418 <col:21> '_Bool' lvalue Var 0x5642a9fc9bb0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5642a9fd24c8 <line:813:3, col:10>
      `-IntegerLiteral 0x5642a9fd24a8 <col:10> 'int' 0
