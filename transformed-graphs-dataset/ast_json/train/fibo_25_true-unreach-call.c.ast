TranslationUnitDecl 0x55b2b87954d8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55b2b8795d98 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55b2b8795a70 '__int128'
|-TypedefDecl 0x55b2b8795e08 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55b2b8795a90 'unsigned __int128'
|-TypedefDecl 0x55b2b8796110 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55b2b8795ee0 'struct __NSConstantString_tag'
|   `-Record 0x55b2b8795e60 '__NSConstantString_tag'
|-TypedefDecl 0x55b2b87961b8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55b2b8796170 'char *'
|   `-BuiltinType 0x55b2b8795570 'char'
|-TypedefDecl 0x55b2b87d53a0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55b2b8796450 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55b2b8796290 'struct __va_list_tag'
|     `-Record 0x55b2b8796210 '__va_list_tag'
|-FunctionDecl 0x55b2b87d5458 <recursive-simple/fibo_25_true-unreach-call.c:1:1, col:34> col:12 __VERIFIER_nondet_int 'int ()' extern
|-FunctionDecl 0x55b2b87d5590 <line:2:1, col:30> col:13 used __VERIFIER_error 'void ()' extern
|-FunctionDecl 0x55b2b87d5718 <line:5:1, line:13:1> line:5:5 used fibo 'int (int)'
| |-ParmVarDecl 0x55b2b87d5648 <col:10, col:14> col:14 used n 'int'
| `-CompoundStmt 0x55b2b87d5bc0 <col:17, line:13:1>
|   `-IfStmt 0x55b2b87d5b98 <line:6:5, line:12:5> has_else
|     |-BinaryOperator 0x55b2b87d5818 <line:6:9, col:13> 'int' '<'
|     | |-ImplicitCastExpr 0x55b2b87d5800 <col:9> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55b2b87d57c0 <col:9> 'int' lvalue ParmVar 0x55b2b87d5648 'n' 'int'
|     | `-IntegerLiteral 0x55b2b87d57e0 <col:13> 'int' 1
|     |-CompoundStmt 0x55b2b87d5868 <col:16, line:8:5>
|     | `-ReturnStmt 0x55b2b87d5858 <line:7:9, col:16>
|     |   `-IntegerLiteral 0x55b2b87d5838 <col:16> 'int' 0
|     `-IfStmt 0x55b2b87d5b70 <line:8:12, line:12:5> has_else
|       |-BinaryOperator 0x55b2b87d58d8 <line:8:16, col:21> 'int' '=='
|       | |-ImplicitCastExpr 0x55b2b87d58c0 <col:16> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x55b2b87d5880 <col:16> 'int' lvalue ParmVar 0x55b2b87d5648 'n' 'int'
|       | `-IntegerLiteral 0x55b2b87d58a0 <col:21> 'int' 1
|       |-CompoundStmt 0x55b2b87d5928 <col:24, line:10:5>
|       | `-ReturnStmt 0x55b2b87d5918 <line:9:9, col:16>
|       |   `-IntegerLiteral 0x55b2b87d58f8 <col:16> 'int' 1
|       `-CompoundStmt 0x55b2b87d5b58 <line:10:12, line:12:5>
|         `-ReturnStmt 0x55b2b87d5b48 <line:11:9, col:36>
|           `-BinaryOperator 0x55b2b87d5b28 <col:16, col:36> 'int' '+'
|             |-CallExpr 0x55b2b87d5a28 <col:16, col:24> 'int'
|             | |-ImplicitCastExpr 0x55b2b87d5a10 <col:16> 'int (*)(int)' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x55b2b87d5940 <col:16> 'int (int)' Function 0x55b2b87d5718 'fibo' 'int (int)'
|             | `-BinaryOperator 0x55b2b87d59b8 <col:21, col:23> 'int' '-'
|             |   |-ImplicitCastExpr 0x55b2b87d59a0 <col:21> 'int' <LValueToRValue>
|             |   | `-DeclRefExpr 0x55b2b87d5960 <col:21> 'int' lvalue ParmVar 0x55b2b87d5648 'n' 'int'
|             |   `-IntegerLiteral 0x55b2b87d5980 <col:23> 'int' 1
|             `-CallExpr 0x55b2b87d5b00 <col:28, col:36> 'int'
|               |-ImplicitCastExpr 0x55b2b87d5ae8 <col:28> 'int (*)(int)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55b2b87d5a50 <col:28> 'int (int)' Function 0x55b2b87d5718 'fibo' 'int (int)'
|               `-BinaryOperator 0x55b2b87d5ac8 <col:33, col:35> 'int' '-'
|                 |-ImplicitCastExpr 0x55b2b87d5ab0 <col:33> 'int' <LValueToRValue>
|                 | `-DeclRefExpr 0x55b2b87d5a70 <col:33> 'int' lvalue ParmVar 0x55b2b87d5648 'n' 'int'
|                 `-IntegerLiteral 0x55b2b87d5a90 <col:35> 'int' 2
`-FunctionDecl 0x55b2b87d5ca8 <line:23:1, line:30:1> line:23:5 main 'int (void)'
  `-CompoundStmt 0x55b2b87d6130 <col:16, line:30:1>
    |-DeclStmt 0x55b2b87d5e20 <line:24:5, col:15>
    | `-VarDecl 0x55b2b87d5d98 <col:5, col:13> col:9 used x 'int' cinit
    |   `-IntegerLiteral 0x55b2b87d5e00 <col:13> 'int' 25
    |-DeclStmt 0x55b2b87d5f50 <line:25:5, col:25>
    | `-VarDecl 0x55b2b87d5e50 <col:5, col:24> col:9 used result 'int' cinit
    |   `-CallExpr 0x55b2b87d5f10 <col:18, col:24> 'int'
    |     |-ImplicitCastExpr 0x55b2b87d5ef8 <col:18> 'int (*)(int)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x55b2b87d5eb8 <col:18> 'int (int)' Function 0x55b2b87d5718 'fibo' 'int (int)'
    |     `-ImplicitCastExpr 0x55b2b87d5f38 <col:23> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x55b2b87d5ed8 <col:23> 'int' lvalue Var 0x55b2b87d5d98 'x' 'int'
    |-IfStmt 0x55b2b87d60e8 <line:26:5, line:28:5>
    | |-BinaryOperator 0x55b2b87d5fc0 <line:26:9, col:19> 'int' '!='
    | | |-ImplicitCastExpr 0x55b2b87d5fa8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x55b2b87d5f68 <col:9> 'int' lvalue Var 0x55b2b87d5e50 'result' 'int'
    | | `-IntegerLiteral 0x55b2b87d5f88 <col:19> 'int' 75025
    | `-CompoundStmt 0x55b2b87d60d0 <col:26, line:28:5>
    |   `-LabelStmt 0x55b2b87d60b8 <line:27:9, col:33> 'ERROR'
    |     `-CallExpr 0x55b2b87d6048 <col:16, col:33> 'void'
    |       `-ImplicitCastExpr 0x55b2b87d6030 <col:16> 'void (*)()' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0x55b2b87d5fe0 <col:16> 'void ()' Function 0x55b2b87d5590 '__VERIFIER_error' 'void ()'
    `-ReturnStmt 0x55b2b87d6120 <line:29:5, col:12>
      `-IntegerLiteral 0x55b2b87d6100 <col:12> 'int' 0
