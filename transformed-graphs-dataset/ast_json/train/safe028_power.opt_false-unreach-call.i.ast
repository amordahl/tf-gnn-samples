TranslationUnitDecl 0x55e0f6435f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55e0f6436848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55e0f6436520 '__int128'
|-TypedefDecl 0x55e0f64368b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55e0f6436540 'unsigned __int128'
|-TypedefDecl 0x55e0f6436bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55e0f6436990 'struct __NSConstantString_tag'
|   `-Record 0x55e0f6436910 '__NSConstantString_tag'
|-TypedefDecl 0x55e0f6436c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55e0f6436c20 'char *'
|   `-BuiltinType 0x55e0f6436020 'char'
|-TypedefDecl 0x55e0f6475b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55e0f6436f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55e0f6436d40 'struct __va_list_tag'
|     `-Record 0x55e0f6436cc0 '__va_list_tag'
|-FunctionDecl 0x55e0f6475c80 <pthread-wmm/safe028_power.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55e0f6475e50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55e0f6475d80 <col:31> col:34 'int'
|-FunctionDecl 0x55e0f6475fc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55e0f64760f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55e0f6476238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55e0f64761a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55e0f6476468 <col:40, col:99>
|   |-IfStmt 0x55e0f6476438 <col:42, col:88>
|   | |-UnaryOperator 0x55e0f6476318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55e0f6476300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55e0f64762e0 <col:47> 'int' lvalue ParmVar 0x55e0f64761a8 'expression' 'int'
|   | `-CompoundStmt 0x55e0f6476420 <col:59, col:88>
|   |   `-LabelStmt 0x55e0f6476408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55e0f6476398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55e0f6476380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55e0f6476330 <col:68> 'void () __attribute__((noreturn))' Function 0x55e0f64760f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55e0f6476450 <col:89>
|   `-ReturnStmt 0x55e0f6476458 <col:91>
|-FunctionDecl 0x55e0f64764b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55e0f6476570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55e0f64768f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55e0f6476628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55e0f64766a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55e0f6476728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55e0f64767a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55e0f64769b0 <line:11:22>
|-FunctionDecl 0x55e0f649bf10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55e0f6476a20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55e0f6476aa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55e0f649bd40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55e0f649bdc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55e0f649bfd0 <line:14:22>
|-FunctionDecl 0x55e0f649c280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55e0f649c040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55e0f649c0c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55e0f649c140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55e0f649c338 <line:16:22>
|-TypedefDecl 0x55e0f649c3a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55e0f64360e0 'unsigned char'
|-TypedefDecl 0x55e0f649c418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55e0f6436100 'unsigned short'
|-TypedefDecl 0x55e0f649c488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55e0f6436120 'unsigned int'
|-TypedefDecl 0x55e0f649c4f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55e0f6436140 'unsigned long'
|-TypedefDecl 0x55e0f649c568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55e0f6436040 'signed char'
|-TypedefDecl 0x55e0f649c5d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55e0f64360e0 'unsigned char'
|-TypedefDecl 0x55e0f649c648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55e0f6436060 'short'
|-TypedefDecl 0x55e0f649c6b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55e0f6436100 'unsigned short'
|-TypedefDecl 0x55e0f649c728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55e0f6436080 'int'
|-TypedefDecl 0x55e0f649c798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55e0f6436120 'unsigned int'
|-TypedefDecl 0x55e0f649c808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55e0f64360a0 'long'
|-TypedefDecl 0x55e0f649c878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55e0f6436140 'unsigned long'
|-TypedefDecl 0x55e0f649c8e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55e0f64360a0 'long'
|-TypedefDecl 0x55e0f649c958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55e0f6436140 'unsigned long'
|-TypedefDecl 0x55e0f649c9c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55e0f6436140 'unsigned long'
|-TypedefDecl 0x55e0f649ca38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55e0f6436120 'unsigned int'
|-TypedefDecl 0x55e0f649caa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55e0f6436120 'unsigned int'
|-TypedefDecl 0x55e0f649cb18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55e0f6436140 'unsigned long'
|-TypedefDecl 0x55e0f649cb88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55e0f6436140 'unsigned long'
|-TypedefDecl 0x55e0f649cbf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55e0f6436120 'unsigned int'
|-TypedefDecl 0x55e0f649cc68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55e0f6436140 'unsigned long'
|-TypedefDecl 0x55e0f649ccd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55e0f64360a0 'long'
|-TypedefDecl 0x55e0f649cd68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55e0f64360a0 'long'
|-TypedefDecl 0x55e0f649cdd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55e0f6436080 'int'
|-RecordDecl 0x55e0f649ce30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55e0f649cf78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55e0f649d030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55e0f649cfd0 'struct __fsid_t' sugar
|   `-RecordType 0x55e0f649ceb0 '__fsid_t'
|     `-Record 0x55e0f649ce30 ''
|-TypedefDecl 0x55e0f649d0b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55e0f64360a0 'long'
|-TypedefDecl 0x55e0f649d128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55e0f6436140 'unsigned long'
|-TypedefDecl 0x55e0f649d198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55e0f6436140 'unsigned long'
|-TypedefDecl 0x55e0f649d208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55e0f6436120 'unsigned int'
|-TypedefDecl 0x55e0f649d278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55e0f64360a0 'long'
|-TypedefDecl 0x55e0f649d2e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55e0f6436120 'unsigned int'
|-TypedefDecl 0x55e0f649d358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55e0f64360a0 'long'
|-TypedefDecl 0x55e0f649d3c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55e0f6436080 'int'
|-TypedefDecl 0x55e0f649d438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55e0f6436080 'int'
|-TypedefDecl 0x55e0f649d4a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55e0f6436080 'int'
|-TypedefDecl 0x55e0f649d518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55e0f64367a0 'void *'
|   `-BuiltinType 0x55e0f6435fe0 'void'
|-TypedefDecl 0x55e0f649d588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55e0f64360a0 'long'
|-TypedefDecl 0x55e0f649d5f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55e0f64360a0 'long'
|-TypedefDecl 0x55e0f649d668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55e0f64360a0 'long'
|-TypedefDecl 0x55e0f649d6d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55e0f6436140 'unsigned long'
|-TypedefDecl 0x55e0f649d748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55e0f6436140 'unsigned long'
|-TypedefDecl 0x55e0f649d7b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55e0f6436140 'unsigned long'
|-TypedefDecl 0x55e0f649d828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55e0f6436140 'unsigned long'
|-TypedefDecl 0x55e0f649d898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55e0f64360a0 'long'
|-TypedefDecl 0x55e0f649d908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55e0f64360a0 'long'
|-TypedefDecl 0x55e0f649d978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55e0f64360a0 'long'
|-TypedefDecl 0x55e0f649d9e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55e0f6436140 'unsigned long'
|-TypedefDecl 0x55e0f649da78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55e0f649da40 '__off64_t' sugar
|   |-Typedef 0x55e0f649cd68 '__off64_t'
|   `-BuiltinType 0x55e0f64360a0 'long'
|-TypedefDecl 0x55e0f649db70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55e0f649db30 '__quad_t *'
|   `-TypedefType 0x55e0f649dad0 '__quad_t' sugar
|     |-Typedef 0x55e0f649c8e8 '__quad_t'
|     `-BuiltinType 0x55e0f64360a0 'long'
|-TypedefDecl 0x55e0f649dbe0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55e0f6436c20 'char *'
|   `-BuiltinType 0x55e0f6436020 'char'
|-TypedefDecl 0x55e0f649dc50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55e0f64360a0 'long'
|-TypedefDecl 0x55e0f649dcc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55e0f6436120 'unsigned int'
|-FunctionDecl 0x55e0f649de38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55e0f649dd60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55e0f649e148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55e0f649e138 <line:73:3, col:34>
|     `-CallExpr 0x55e0f649e0f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55e0f649e0e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55e0f649e070 <col:10> '<builtin fn type>' Function 0x55e0f649dee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55e0f649e120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55e0f649e090 <col:29> 'unsigned int' lvalue ParmVar 0x55e0f649dd60 '__bsx' 'unsigned int'
|-FunctionDecl 0x55e0f649dee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55e0f649df80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55e0f649dff0 <col:10> Implicit
| `-ConstAttr 0x55e0f649e048 <col:10> Implicit
|-FunctionDecl 0x55e0f649e2a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55e0f649e198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55e0f649e5b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55e0f649e5a8 <line:78:3, col:34>
|     `-CallExpr 0x55e0f649e568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55e0f649e550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55e0f649e4d8 <col:10> '<builtin fn type>' Function 0x55e0f649e348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55e0f649e590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55e0f649e4f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55e0f649e198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55e0f649e348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55e0f649e3e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55e0f649e458 <col:10> Implicit
| `-ConstAttr 0x55e0f649e4b0 <col:10> Implicit
|-TypedefDecl 0x55e0f649e5e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55e0f6436140 'unsigned long'
|-TypedefDecl 0x55e0f649e678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55e0f649e640 '__time_t' sugar
|   |-Typedef 0x55e0f649d278 '__time_t'
|   `-BuiltinType 0x55e0f64360a0 'long'
|-RecordDecl 0x55e0f649e6d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55e0f649e788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55e0f649e818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55e0f649e8a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55e0f649e870 '__pid_t' sugar
|   |-Typedef 0x55e0f649cdd8 '__pid_t'
|   `-BuiltinType 0x55e0f6436080 'int'
|-RecordDecl 0x55e0f649e900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55e0f649e9c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55e0f649ea10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55e0f649ead0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55e0f649eb38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55e0f6436140 'unsigned long'
|-RecordDecl 0x55e0f649eb90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55e0f64a0e70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55e0f64a0f20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55e0f64a0ec0 'struct cpu_set_t' sugar
|   `-RecordType 0x55e0f649ec10 'cpu_set_t'
|     `-Record 0x55e0f649eb90 ''
|-FunctionDecl 0x55e0f64a11f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55e0f64a0fc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55e0f64a10d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55e0f64a12a8 <line:108:19>
|-FunctionDecl 0x55e0f64a1480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55e0f64a1310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55e0f64a1528 <col:69>
|-FunctionDecl 0x55e0f64a16a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55e0f64a1590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55e0f64a1748 <col:64>
|-FunctionDecl 0x55e0f64a1a08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55e0f64a17b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55e0f64a18e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55e0f64a1ab8 <line:114:22>
|-FunctionDecl 0x55e0f64a1e60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55e0f64a1b20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55e0f64a1c18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55e0f64a1f10 <col:88>
|-FunctionDecl 0x55e0f64a21c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55e0f64a1f78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55e0f64a1ff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55e0f64a2088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55e0f64a2280 <col:62>
|-FunctionDecl 0x55e0f64a23f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55e0f64a22e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55e0f64a24a0 <col:63>
|-FunctionDecl 0x55e0f64a25c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55e0f64a2668 <col:47>
|-FunctionDecl 0x55e0f64a2770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55e0f64a26d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55e0f64a2818 <col:69>
|-FunctionDecl 0x55e0f64a2920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55e0f64a2888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55e0f64a29c8 <col:69>
|-FunctionDecl 0x55e0f64a2c88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55e0f64a2a30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55e0f64a2b68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55e0f64a2d38 <col:88>
|-TypedefDecl 0x55e0f64a2dc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55e0f64a2d90 '__clock_t' sugar
|   |-Typedef 0x55e0f649d0b8 '__clock_t'
|   `-BuiltinType 0x55e0f64360a0 'long'
|-TypedefDecl 0x55e0f64a37e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55e0f64a2e20 '__clockid_t' sugar
|   |-Typedef 0x55e0f649d4a8 '__clockid_t'
|   `-BuiltinType 0x55e0f6436080 'int'
|-TypedefDecl 0x55e0f64a3878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55e0f64a3840 '__timer_t' sugar
|   |-Typedef 0x55e0f649d518 '__timer_t'
|   `-PointerType 0x55e0f64367a0 'void *'
|     `-BuiltinType 0x55e0f6435fe0 'void'
|-RecordDecl 0x55e0f64a38d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55e0f64a3990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55e0f64a39f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55e0f64a3a60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55e0f64a3ac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55e0f64a3b30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55e0f64a3b98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55e0f64a3c00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55e0f64a3c68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55e0f64a3cd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55e0f64a3d38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55e0f64a3da0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55e0f64a3df0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55e0f64a3eb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55e0f64a3f28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55e0f64a3fd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55e0f64a41a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55e0f64a4240 <col:45>
|-FunctionDecl 0x55e0f64a4420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55e0f64a4310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55e0f64a44c8 <col:54>
|-FunctionDecl 0x55e0f64a46c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55e0f64a4530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55e0f64a45a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55e0f64a4778 <line:158:22>
| `-ConstAttr 0x55e0f64a5410 <col:63>
|-FunctionDecl 0x55e0f64a5610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55e0f64a5508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55e0f64a56b8 <col:56>
|-FunctionDecl 0x55e0f64a5a60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55e0f64a5728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55e0f64a57a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55e0f64a5820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55e0f64a5918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55e0f64a5b20 <col:54>
|-RecordDecl 0x55e0f64a5b78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55e0f64a5c28 parent 0x55e0f6435f88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55e0f64a5e88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55e0f64a5f28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55e0f64a5f90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55e0f64a5ff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55e0f64a60e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55e0f64a6208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55e0f64a61b0 'struct __locale_struct *'
|   `-ElaboratedType 0x55e0f64a6140 'struct __locale_struct' sugar
|     `-RecordType 0x55e0f64a5c00 'struct __locale_struct'
|       `-Record 0x55e0f64a5b78 '__locale_struct'
|-TypedefDecl 0x55e0f64a62b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55e0f64a6280 '__locale_t' sugar
|   |-Typedef 0x55e0f64a6208 '__locale_t'
|   `-PointerType 0x55e0f64a61b0 'struct __locale_struct *'
|     `-ElaboratedType 0x55e0f64a6140 'struct __locale_struct' sugar
|       `-RecordType 0x55e0f64a5c00 'struct __locale_struct'
|         `-Record 0x55e0f64a5b78 '__locale_struct'
|-FunctionDecl 0x55e0f64a66b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55e0f64a6328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55e0f64a63a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55e0f64a6438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55e0f64a64c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55e0f64a6540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55e0f64a6778 <col:40>
|-FunctionDecl 0x55e0f64a6968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55e0f64a6840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55e0f64a6a10 <col:66>
|-FunctionDecl 0x55e0f64a6b20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55e0f64a6a78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55e0f64a6bc8 <col:69>
|-FunctionDecl 0x55e0f64a6df8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55e0f64a6c30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55e0f64a6cc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55e0f64a6ea8 <col:52>
|-FunctionDecl 0x55e0f64a7050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55e0f64a6f10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55e0f64a6fa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55e0f64a7100 <col:55>
|-FunctionDecl 0x55e0f64a7298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55e0f64a7180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55e0f64a7340 <col:62>
|-FunctionDecl 0x55e0f64a7578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55e0f64a73a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55e0f64a7620 <col:60>
|-FunctionDecl 0x55e0f64a7848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55e0f64a76a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55e0f64a7720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55e0f64a78f8 <col:44>
|-FunctionDecl 0x55e0f64a7b08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55e0f64a7960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55e0f64a79e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55e0f64a7bb8 <col:49>
|-VarDecl 0x55e0f64a7cb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55e0f64a7d38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55e0f64a7db8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55e0f64a7e80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55e0f64a7fb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55e0f64a8050 <col:42>
|-VarDecl 0x55e0f64a80c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55e0f64a8140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55e0f64a82c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55e0f64a81b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55e0f64a8370 <col:57>
|-FunctionDecl 0x55e0f64a94f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55e0f64a83f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55e0f64a9598 <col:56>
|-FunctionDecl 0x55e0f64a96a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55e0f64a9618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55e0f64a9750 <col:59>
|-FunctionDecl 0x55e0f64a9858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55e0f64a97c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55e0f64a9900 <col:48>
| `-ConstAttr 0x55e0f64a9958 <col:89>
|-FunctionDecl 0x55e0f64a9bb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55e0f64a9a08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55e0f64a9a98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55e0f64a9e18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55e0f64a9ca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55e0f64a9d38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55e0f64a9ec8 <col:88>
|-FunctionDecl 0x55e0f64aa060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55e0f64a9f30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55e0f64a9fc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55e0f64aa110 <col:88>
|-FunctionDecl 0x55e0f64aa328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55e0f64aa178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55e0f64aa208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55e0f64aa3d8 <line:209:22>
|-FunctionDecl 0x55e0f64aa778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55e0f64aa440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55e0f64aa500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55e0f64aa590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55e0f64aa620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55e0f64aaa78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55e0f64aa878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55e0f64aa950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55e0f64aab28 <col:85>
|-FunctionDecl 0x55e0f64aaf18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55e0f64aab90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55e0f64aacc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55e0f64aadd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55e0f64aafd0 <col:52>
|-FunctionDecl 0x55e0f64ab148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55e0f64ab038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55e0f64ab1f0 <col:61>
|-FunctionDecl 0x55e0f64ab668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55e0f64ab258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55e0f64ab2d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55e0f64ab408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55e0f64ab510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55e0f64ab728 <col:62>
|-FunctionDecl 0x55e0f64ab948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55e0f64ab790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55e0f64ab820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55e0f64ab9f8 <line:222:22>
|-FunctionDecl 0x55e0f64abaf8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55e0f64aba60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55e0f64abba0 <col:65>
|-TypedefDecl 0x55e0f64abc10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55e0f6436140 'unsigned long'
|-RecordDecl 0x55e0f64abc68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55e0f64abdb0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55e0f64abe18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55e0f64abec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55e0f64abe70 'union pthread_attr_t' sugar
|   `-RecordType 0x55e0f64abcf0 'union pthread_attr_t'
|     `-Record 0x55e0f64abc68 'pthread_attr_t'
|-RecordDecl 0x55e0f64abf20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55e0f64ac098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55e0f64ac110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55e0f64ac1c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55e0f64ac160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55e0f64abfa0 'struct __pthread_internal_list'
|     `-Record 0x55e0f64abf20 '__pthread_internal_list'
|-RecordDecl 0x55e0f64ac230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55e0f64ac2d8 parent 0x55e0f6435f88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55e0f64ac3b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55e0f64ac418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55e0f64ac480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55e0f64b0530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55e0f64b0598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55e0f64b0600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55e0f64b0688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55e0f64b0740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55e0f64b0830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55e0f64b0898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55e0f64b0a20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55e0f64b09c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55e0f64ac2b0 'pthread_mutex_t'
|     `-Record 0x55e0f64ac230 ''
|-RecordDecl 0x55e0f64b0a90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55e0f64b0bd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55e0f64b0c38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55e0f64b0cf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55e0f64b0c90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55e0f64b0b10 'pthread_mutexattr_t'
|     `-Record 0x55e0f64b0a90 ''
|-RecordDecl 0x55e0f64b0d60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55e0f64b0e08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55e0f64b0ed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55e0f64b0f38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55e0f64b0fa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55e0f64b1008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55e0f64b1070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55e0f64b10d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55e0f64b1140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55e0f64b11a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55e0f64b1260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe028_power.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe028_power.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55e0f64b1350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55e0f64b13b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55e0f64b1540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55e0f64b1490 'union pthread_cond_t' sugar
|   `-RecordType 0x55e0f64b0de0 'pthread_cond_t'
|     `-Record 0x55e0f64b0d60 ''
|-RecordDecl 0x55e0f64b15b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55e0f64b16b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55e0f64b1718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55e0f64b17d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55e0f64b1770 'union pthread_condattr_t' sugar
|   `-RecordType 0x55e0f64b1630 'pthread_condattr_t'
|     `-Record 0x55e0f64b15b0 ''
|-TypedefDecl 0x55e0f64b1858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55e0f6436120 'unsigned int'
|-TypedefDecl 0x55e0f64b18c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55e0f6436080 'int'
|-RecordDecl 0x55e0f64b1920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55e0f64b19c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55e0f64b1a90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55e0f64b1af8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55e0f64b1b60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55e0f64b1bc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55e0f64b1c30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55e0f64b1c98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55e0f64b1d00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55e0f64b1d68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55e0f64b1dd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55e0f64b1e38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55e0f64b1ea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55e0f64b1f50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe028_power.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe028_power.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55e0f64b1ff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55e0f64b2060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55e0f64b21b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55e0f64b2150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55e0f64b19a0 'pthread_rwlock_t'
|     `-Record 0x55e0f64b1920 ''
|-RecordDecl 0x55e0f64b2220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55e0f64b2360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55e0f64b23c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55e0f64b2480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55e0f64b2420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55e0f64b22a0 'pthread_rwlockattr_t'
|     `-Record 0x55e0f64b2220 ''
|-TypedefDecl 0x55e0f64b4560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55e0f6436084 'volatile int' volatile
|   `-BuiltinType 0x55e0f6436080 'int'
|-RecordDecl 0x55e0f64b45b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55e0f64b4700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55e0f64b4768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55e0f64b4820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55e0f64b47c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55e0f64b4640 'pthread_barrier_t'
|     `-Record 0x55e0f64b45b8 ''
|-RecordDecl 0x55e0f64b4890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55e0f64b4990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55e0f64b49f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55e0f64b4ab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55e0f64b4a50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55e0f64b4910 'pthread_barrierattr_t'
|     `-Record 0x55e0f64b4890 ''
|-TypedefDecl 0x55e0f64b4bc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55e0f64b4b60 'long [8]' 8 
|   `-BuiltinType 0x55e0f64360a0 'long'
|-EnumDecl 0x55e0f64b4c20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55e0f64b4ce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55e0f64b4d38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55e0f64b4d88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55e0f64b4e58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55e0f64b4ea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55e0f64b4ef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55e0f64b4f48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55e0f64b4fd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55e0f64b4fb8 <col:26> 'int'
| |   `-DeclRefExpr 0x55e0f64b4f98 <col:26> 'int' EnumConstant 0x55e0f64b4e58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55e0f64b5058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55e0f64b5040 <col:29> 'int'
| |   `-DeclRefExpr 0x55e0f64b5020 <col:29> 'int' EnumConstant 0x55e0f64b4ea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55e0f64b50e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55e0f64b50c8 <col:30> 'int'
| |   `-DeclRefExpr 0x55e0f64b50a8 <col:30> 'int' EnumConstant 0x55e0f64b4ef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55e0f64b5168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55e0f64b5150 <col:27> 'int'
|     `-DeclRefExpr 0x55e0f64b5130 <col:27> 'int' EnumConstant 0x55e0f64b4fd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55e0f64b51b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55e0f64b5288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55e0f64b5310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55e0f64b52f8 <col:30> 'int'
| |   `-DeclRefExpr 0x55e0f64b52d8 <col:30> 'int' EnumConstant 0x55e0f64b5288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55e0f64b5360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55e0f64b53e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55e0f64b53d0 <col:29> 'int'
|     `-DeclRefExpr 0x55e0f64b53b0 <col:29> 'int' EnumConstant 0x55e0f64b5360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55e0f64b5438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55e0f64b5508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55e0f64b5570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55e0f64b55c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55e0f64b5610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55e0f64b56d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55e0f64b5728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55e0f64b5778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55e0f64b5800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55e0f64b57e8 <col:31> 'int'
|     `-DeclRefExpr 0x55e0f64b57c8 <col:31> 'int' EnumConstant 0x55e0f64b56d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55e0f64b5850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55e0f64b5918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55e0f64b5968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55e0f64b59b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55e0f64b5a88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55e0f64b5ad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55e0f64b5b28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55e0f64b5bf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55e0f64b5c48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55e0f64b5c98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55e0f64b5ed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55e0f64b5f40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55e0f64b5fa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55e0f64b60c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55e0f64b6118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55e0f64b61e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55e0f64b6238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55e0f64b6288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55e0f64b6358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55e0f64b63a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55e0f64b69d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55e0f64b64a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55e0f64b65c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e0f64b67c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55e0f64b6840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55e0f64b6a98 <col:47>
| |-NonNullAttr 0x55e0f64b6af0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55e0f64b6b28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55e0f64b6c50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55e0f64b6b80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55e0f64b6ea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55e0f64b6d08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55e0f64b6d88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55e0f64b7078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55e0f64b6f68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55e0f64b7120 <col:60>
|-FunctionDecl 0x55e0f64b7270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55e0f64b7310 <col:54>
| `-ConstAttr 0x55e0f64b7368 <col:95>
|-FunctionDecl 0x55e0f64b7da0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55e0f64b73a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55e0f64b7418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55e0f64b7e50 <line:395:19>
| `-ConstAttr 0x55e0f64b7ea8 <col:60>
|-FunctionDecl 0x55e0f64b8078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55e0f64b7f40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55e0f64b8120 <col:71>
| `-NonNullAttr 0x55e0f64b8178 <col:112, col:126> 1
|-FunctionDecl 0x55e0f64b8280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55e0f64b81c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55e0f64b8328 <line:398:22>
| `-NonNullAttr 0x55e0f64b8380 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64b85a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55e0f64b83c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55e0f64b8448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55e0f64b8658 <line:401:22>
| `-NonNullAttr 0x55e0f64b86b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e0f64b88b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55e0f64b86f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e0f64b8778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55e0f64b8968 <line:404:22>
| `-NonNullAttr 0x55e0f64b89c0 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64b8c18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55e0f64b8a08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55e0f64b8ab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55e0f64b8cc8 <line:407:22>
| `-NonNullAttr 0x55e0f64b8d20 <col:63, col:80> 1 2
|-FunctionDecl 0x55e0f64b9f78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55e0f64b9dc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e0f64b9e38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55e0f64ba028 <line:410:22>
| `-NonNullAttr 0x55e0f64ba080 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64ba2b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55e0f64ba0c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e0f64ba158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55e0f64ba368 <line:413:22>
| `-NonNullAttr 0x55e0f64ba3c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e0f64ba5f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55e0f64ba408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e0f64ba498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55e0f64ba6a8 <col:37>
| `-NonNullAttr 0x55e0f64ba700 <col:78, col:95> 1 2
|-FunctionDecl 0x55e0f64ba8e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e0f64ba748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e0f64ba7c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55e0f64ba998 <line:419:22>
| `-NonNullAttr 0x55e0f64ba9f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e0f64bab78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55e0f64baa38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e0f64baab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55e0f64bac28 <line:421:22>
| `-NonNullAttr 0x55e0f64bac80 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64bbe58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e0f64bacc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e0f64bad48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55e0f64bbf08 <line:424:22>
| `-NonNullAttr 0x55e0f64bbf60 <col:63, col:80> 1 2
|-FunctionDecl 0x55e0f64bc0e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55e0f64bbfa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e0f64bc028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55e0f64bc198 <line:427:22>
| `-NonNullAttr 0x55e0f64bc1f0 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64bc398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e0f64bc238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e0f64bc2b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55e0f64bc448 <line:430:22>
| `-NonNullAttr 0x55e0f64bc4a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e0f64bc628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55e0f64bc4e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e0f64bc568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55e0f64bc6d8 <line:432:22>
| `-NonNullAttr 0x55e0f64bc730 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64bc958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55e0f64bc778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e0f64bc7f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55e0f64bca08 <line:435:22>
| |-NonNullAttr 0x55e0f64bca60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55e0f64bca98 <col:100> "" ""
|-FunctionDecl 0x55e0f64bcca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55e0f64bcae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e0f64bcb68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55e0f64bcd58 <line:438:22>
| |-NonNullAttr 0x55e0f64bcdb0 <col:63, col:77> 1
| `-DeprecatedAttr 0x55e0f64bcdf8 <col:97> "" ""
|-FunctionDecl 0x55e0f64bcfe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55e0f64bce48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e0f64bcec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55e0f64bd098 <line:441:22>
| `-NonNullAttr 0x55e0f64bd0f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e0f64bd270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55e0f64bd138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e0f64bd1b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55e0f64bd320 <line:444:22>
| `-NonNullAttr 0x55e0f64bd378 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64bd668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55e0f64bd3c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e0f64bd448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55e0f64bd4c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55e0f64bd720 <line:448:22>
| `-NonNullAttr 0x55e0f64bd778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55e0f64bda28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55e0f64bd7d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e0f64bd850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55e0f64bd8c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55e0f64bdae0 <col:43>
| `-NonNullAttr 0x55e0f64bdb38 <col:84, col:98> 1
|-FunctionDecl 0x55e0f64bde40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55e0f64bdb88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55e0f64bdc08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55e0f64bdc98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55e0f64bdef8 <line:453:22>
| `-NonNullAttr 0x55e0f64bdf50 <col:63, col:77> 3
|-FunctionDecl 0x55e0f64be228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55e0f64bdf98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55e0f64be018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55e0f64be0a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55e0f64be2e0 <line:457:22>
| `-NonNullAttr 0x55e0f64be338 <col:63, col:80> 2 3
|-FunctionDecl 0x55e0f64be528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55e0f64be388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55e0f64be408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55e0f64be5d8 <line:459:22>
|-FunctionDecl 0x55e0f64be9a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55e0f64be6a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55e0f64be840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55e0f64bea58 <col:52, col:69> 1 2
|-FunctionDecl 0x55e0f64bec00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55e0f64beae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55e0f64beb60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55e0f64bee10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55e0f64becc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55e0f64bed48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55e0f64bef68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55e0f64beed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55e0f64bf0a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55e0f64bf148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55e0f64bf1f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55e0f64bf2e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55e0f64bf350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55e0f64bf520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe028_power.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55e0f64bf618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55e0f64bf6d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55e0f64bf670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55e0f64bf1d0 '__pthread_unwind_buf_t'
| |   `-Record 0x55e0f64bf148 ''
| `-AlignedAttr 0x55e0f64bf728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55e0f64bf7a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55e0f64bf900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55e0f64bf968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55e0f64bf9d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55e0f64bfa38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55e0f64bfc40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55e0f64bfb30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55e0f64bfe20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55e0f64bfcf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55e0f64bffe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55e0f64bfed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55e0f64c0088 <line:488:22>
|-RecordDecl 0x55e0f64c00e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55e0f64c03f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55e0f64c0258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55e0f64c02d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55e0f64c04a8 <col:86>
| `-ReturnsTwiceAttr 0x55e0f64c0500 <col:12> Implicit
|-FunctionDecl 0x55e0f64c0828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55e0f64c05d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55e0f64c06e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55e0f64c08d8 <line:494:22>
| `-NonNullAttr 0x55e0f64c0930 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64c0aa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55e0f64c0978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55e0f64c0b50 <line:496:22>
| `-NonNullAttr 0x55e0f64c0ba8 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64c0cb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55e0f64c0bf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55e0f64c0d58 <line:498:22>
| `-NonNullAttr 0x55e0f64c0db0 <col:52, col:66> 1
|-FunctionDecl 0x55e0f64c0ee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55e0f64c0e30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55e0f64c0f90 <line:500:22>
| `-NonNullAttr 0x55e0f64c0fe8 <col:52, col:66> 1
|-FunctionDecl 0x55e0f64c1228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55e0f64c1038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55e0f64c10c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55e0f64c12d8 <col:36>
| `-NonNullAttr 0x55e0f64c1330 <col:66, col:83> 1 2
|-FunctionDecl 0x55e0f64c1430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55e0f64c1378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55e0f64c14d8 <line:505:22>
| `-NonNullAttr 0x55e0f64c1530 <col:52, col:66> 1
|-FunctionDecl 0x55e0f64c17c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e0f64c15e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55e0f64c1660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55e0f64c1878 <line:509:22>
| `-NonNullAttr 0x55e0f64c18d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e0f64c1b98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55e0f64c1918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55e0f64c1998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55e0f64c1a18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55e0f64c1c50 <line:513:22>
| `-NonNullAttr 0x55e0f64c1ca8 <col:63, col:80> 1 3
|-FunctionDecl 0x55e0f64c1e40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55e0f64c1cf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55e0f64c1ee8 <line:515:22>
| `-NonNullAttr 0x55e0f64c1f40 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64c2128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55e0f64c1ff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55e0f64c21d0 <line:517:22>
| `-NonNullAttr 0x55e0f64c2228 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64c2330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55e0f64c2278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55e0f64c23d8 <line:519:22>
| `-NonNullAttr 0x55e0f64c2430 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64c2658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e0f64c2478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55e0f64c24f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55e0f64c2708 <line:523:22>
| `-NonNullAttr 0x55e0f64c2760 <col:63, col:80> 1 2
|-FunctionDecl 0x55e0f64c2968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55e0f64c27a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e0f64c2828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55e0f64c2a18 <line:526:22>
| `-NonNullAttr 0x55e0f64c2a70 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64c2c18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e0f64c2ab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55e0f64c2b38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55e0f64c2cc8 <line:529:22>
| `-NonNullAttr 0x55e0f64c2d20 <col:63, col:80> 1 2
|-FunctionDecl 0x55e0f64c3f20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55e0f64c2d68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e0f64c3e60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55e0f64c3fd0 <line:531:22>
| `-NonNullAttr 0x55e0f64c4028 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64c41d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e0f64c4078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55e0f64c40f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55e0f64c4288 <line:535:22>
| `-NonNullAttr 0x55e0f64c42e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e0f64c4468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55e0f64c4328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e0f64c43a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55e0f64c4518 <line:538:22>
| `-NonNullAttr 0x55e0f64c4570 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64c4718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e0f64c45b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55e0f64c4638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55e0f64c47c8 <line:542:22>
| `-NonNullAttr 0x55e0f64c4820 <col:63, col:80> 1 2
|-FunctionDecl 0x55e0f64c49a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55e0f64c4868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e0f64c48e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55e0f64c4a58 <line:545:22>
| `-NonNullAttr 0x55e0f64c4ab0 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64c4c98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55e0f64c4af8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e0f64c4b78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55e0f64c4d48 <line:548:22>
| `-NonNullAttr 0x55e0f64c4da0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e0f64c5f58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55e0f64c4de8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e0f64c5e98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55e0f64c6008 <line:551:22>
| `-NonNullAttr 0x55e0f64c6060 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64c6398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55e0f64c6140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55e0f64c6250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55e0f64c6448 <col:29>
| `-NonNullAttr 0x55e0f64c64a0 <col:70, col:84> 1
|-FunctionDecl 0x55e0f64c6618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e0f64c64e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e0f64c66c0 <line:556:22>
| `-NonNullAttr 0x55e0f64c6718 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64c6820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e0f64c6768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e0f64c68c8 <line:558:22>
| `-NonNullAttr 0x55e0f64c6920 <col:52, col:66> 1
|-FunctionDecl 0x55e0f64c6a20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e0f64c6968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e0f64c6ac8 <line:560:19>
| `-NonNullAttr 0x55e0f64c6b20 <col:49, col:63> 1
|-FunctionDecl 0x55e0f64c6d58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55e0f64c6b68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55e0f64c6bf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55e0f64c6e08 <col:39>
| `-NonNullAttr 0x55e0f64c6e90 <col:69, col:86> 1 2
|-FunctionDecl 0x55e0f64c6f90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e0f64c6ed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e0f64c7038 <line:565:22>
| `-NonNullAttr 0x55e0f64c7090 <col:52, col:66> 1
|-FunctionDecl 0x55e0f64c7190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e0f64c70d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e0f64c7238 <line:567:22>
| `-NonNullAttr 0x55e0f64c7290 <col:52, col:66> 1
|-FunctionDecl 0x55e0f64c7448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55e0f64c72d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55e0f64c7368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55e0f64c74f8 <col:39>
| `-NonNullAttr 0x55e0f64c7550 <col:69, col:86> 1 2
|-FunctionDecl 0x55e0f64c7650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e0f64c7598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e0f64c76f8 <line:572:22>
| `-NonNullAttr 0x55e0f64c7750 <col:52, col:66> 1
|-FunctionDecl 0x55e0f64c7938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55e0f64c7800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55e0f64c79e0 <line:574:22>
| `-NonNullAttr 0x55e0f64c7a38 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64c7b40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55e0f64c7a88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55e0f64c7be8 <line:576:22>
| `-NonNullAttr 0x55e0f64c7c40 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64c7ea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e0f64c7c88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55e0f64c7d08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55e0f64c7f50 <line:580:22>
| `-NonNullAttr 0x55e0f64c7fa8 <col:63, col:80> 1 2
|-FunctionDecl 0x55e0f64c81b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55e0f64c7ff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55e0f64c8078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55e0f64c8268 <line:583:22>
| `-NonNullAttr 0x55e0f64c82c0 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64c8468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e0f64c8308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55e0f64c8388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55e0f64c8518 <line:587:22>
| `-NonNullAttr 0x55e0f64c8570 <col:63, col:80> 1 2
|-FunctionDecl 0x55e0f64c86f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55e0f64c85b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55e0f64c8638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55e0f64c87a8 <col:36>
| `-NonNullAttr 0x55e0f64c8800 <col:77, col:91> 1
|-FunctionDecl 0x55e0f64c8b38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55e0f64c88e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55e0f64c89f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55e0f64c8be8 <line:592:22>
| `-NonNullAttr 0x55e0f64c8c40 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64c8db8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55e0f64c8c88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55e0f64c8e60 <line:594:22>
| `-NonNullAttr 0x55e0f64c8ee0 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64c8fe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55e0f64c8f28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55e0f64c9088 <line:596:22>
| `-NonNullAttr 0x55e0f64c90e0 <col:52, col:66> 1
|-FunctionDecl 0x55e0f64c91e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55e0f64c9128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55e0f64c9288 <line:598:22>
| `-NonNullAttr 0x55e0f64c92e0 <col:52, col:66> 1
|-FunctionDecl 0x55e0f64c9508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55e0f64c9328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55e0f64c93a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55e0f64c95b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55e0f64c98e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55e0f64c9638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55e0f64c96b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55e0f64c9740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55e0f64c99a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55e0f64c9bb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55e0f64c9a80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55e0f64c9c60 <line:607:22>
| `-NonNullAttr 0x55e0f64c9cb8 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64c9dc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55e0f64c9d08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55e0f64c9e68 <line:609:22>
| `-NonNullAttr 0x55e0f64c9ef0 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64ca118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e0f64c9f38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55e0f64c9fb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55e0f64ca1c8 <line:613:22>
| `-NonNullAttr 0x55e0f64ca220 <col:63, col:80> 1 2
|-FunctionDecl 0x55e0f64ca428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55e0f64ca268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55e0f64ca2e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55e0f64ca4d8 <col:37>
| `-NonNullAttr 0x55e0f64ca530 <col:78, col:92> 1
|-FunctionDecl 0x55e0f64ca748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55e0f64ca578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55e0f64ca620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55e0f64ca7f8 <line:619:22>
| `-NonNullAttr 0x55e0f64ca850 <col:63, col:80> 1 2
|-FunctionDecl 0x55e0f64caa18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55e0f64ca898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55e0f64ca910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55e0f64caac8 <line:622:22>
| `-NonNullAttr 0x55e0f64cab20 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64cadc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55e0f64cac00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55e0f64cac80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55e0f64cae78 <line:624:22>
| `-NonNullAttr 0x55e0f64caf00 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64cb078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55e0f64caf48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55e0f64cb120 <line:626:22>
| `-NonNullAttr 0x55e0f64cb178 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64cb280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55e0f64cb1c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55e0f64cb328 <line:628:22>
| `-NonNullAttr 0x55e0f64cb380 <col:52, col:66> 1
|-FunctionDecl 0x55e0f64cb480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55e0f64cb3c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55e0f64cb528 <line:630:22>
| `-NonNullAttr 0x55e0f64cb580 <col:52, col:66> 1
|-FunctionDecl 0x55e0f64cb680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55e0f64cb5c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55e0f64cb728 <line:632:22>
| `-NonNullAttr 0x55e0f64cb780 <col:52, col:66> 1
|-FunctionDecl 0x55e0f64cbb58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55e0f64cb860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55e0f64cb970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55e0f64cb9f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55e0f64cbc10 <line:636:22>
| `-NonNullAttr 0x55e0f64cbc68 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64cbde8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55e0f64cbcb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55e0f64cbe90 <line:638:22>
| `-NonNullAttr 0x55e0f64cbf10 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64cc010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55e0f64cbf58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55e0f64cc0b8 <line:640:22>
| `-NonNullAttr 0x55e0f64cc110 <col:52, col:66> 1
|-FunctionDecl 0x55e0f64cc2f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55e0f64cc1c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55e0f64cc3a0 <line:642:22>
| `-NonNullAttr 0x55e0f64cc3f8 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64cc500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55e0f64cc448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55e0f64cc5a8 <line:644:22>
| `-NonNullAttr 0x55e0f64cc600 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64cc828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e0f64cc648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55e0f64cc6c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55e0f64cc8d8 <line:648:22>
| `-NonNullAttr 0x55e0f64cc930 <col:63, col:80> 1 2
|-FunctionDecl 0x55e0f64ccb38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55e0f64cc978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55e0f64cc9f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55e0f64ccbe8 <line:651:22>
| `-NonNullAttr 0x55e0f64ccc40 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64ccfa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55e0f64ccd20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55e0f64cce40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55e0f64cd058 <line:654:22>
| `-NonNullAttr 0x55e0f64cd0b0 <col:63, col:77> 1
|-FunctionDecl 0x55e0f64cd208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55e0f64cd0f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55e0f64cd2b0 <col:69>
|-FunctionDecl 0x55e0f64cd428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55e0f64cd318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55e0f64cd4d0 <col:72>
|-FunctionDecl 0x55e0f64cd708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55e0f64cd538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55e0f64cd5e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55e0f64cd7b8 <col:44>
|-FunctionDecl 0x55e0f64cd9d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55e0f64cd820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55e0f64cd898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55e0f64cda88 <line:661:22>
| `-NonNullAttr 0x55e0f64cdae0 <col:63, col:77> 2
|-FunctionDecl 0x55e0f64cef50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55e0f64cdbc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55e0f64cdcd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55e0f64cdde0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55e0f64cf008 <col:47>
|-FunctionDecl 0x55e0f64cf110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55e0f64cf078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55e0f64cf268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55e0f64cf1d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55e0f64cf3c0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55e0f64cf328 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55e0f64cf488 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55e0f64cf548 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55e0f64cf608 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55e0f64cf6c0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55e0f64cf740 prev 0x55e0f64cf6c0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55e0f64cf7a8 <col:24> 'int' 0
|-VarDecl 0x55e0f64cf7e0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55e0f64cf860 prev 0x55e0f64cf7e0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55e0f64cf8c8 <col:27> 'int' 0
|-VarDecl 0x55e0f64cf900 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55e0f64cf980 prev 0x55e0f64cf900 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55e0f64cf9e8 <col:27> 'int' 0
|-VarDecl 0x55e0f64cfa18 <line:678:1, col:7> col:7 __unbuffered_p2_EAX$flush_delayed '_Bool'
|-VarDecl 0x55e0f64cfa98 <line:679:1, col:5> col:5 __unbuffered_p2_EAX$mem_tmp 'int'
|-VarDecl 0x55e0f64cfb10 <line:680:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x55e0f64cfb88 <line:681:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x55e0f64cfc00 <line:682:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x55e0f64cfc78 <line:683:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x55e0f64cfcf0 <line:684:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x55e0f64cfd68 <line:685:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x55e0f64cfde0 <line:686:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x55e0f64cfe58 <line:687:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x55e0f64cff20 <line:688:1, col:7> col:7 used __unbuffered_p2_EAX$read_delayed '_Bool'
|-VarDecl 0x55e0f64cffa0 <line:689:1, col:6> col:6 used __unbuffered_p2_EAX$read_delayed_var 'int *'
|-VarDecl 0x55e0f64d0020 <line:690:1, col:5> col:5 __unbuffered_p2_EAX$w_buff0 'int'
|-VarDecl 0x55e0f64d0098 <line:691:1, col:7> col:7 __unbuffered_p2_EAX$w_buff0_used '_Bool'
|-VarDecl 0x55e0f64d0118 <line:692:1, col:5> col:5 __unbuffered_p2_EAX$w_buff1 'int'
|-VarDecl 0x55e0f64d0190 <line:693:1, col:7> col:7 __unbuffered_p2_EAX$w_buff1_used '_Bool'
|-VarDecl 0x55e0f64d0210 <line:694:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x55e0f64d0290 prev 0x55e0f64d0210 <line:695:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x55e0f64d02f8 <col:27> 'int' 0
|-VarDecl 0x55e0f64d0328 <line:696:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55e0f64d03a0 <line:697:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55e0f64d0420 <line:698:1, col:5> col:5 used x 'int'
|-VarDecl 0x55e0f64d04a0 prev 0x55e0f64d0420 <line:699:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55e0f64d0508 <col:9> 'int' 0
|-VarDecl 0x55e0f64d0538 <line:700:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x55e0f64d05b8 <line:701:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x55e0f64d0630 <line:702:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x55e0f64d06a8 <line:703:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x55e0f64d0720 <line:704:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x55e0f64d0798 <line:705:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x55e0f64d0810 <line:706:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x55e0f64d0888 <line:707:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x55e0f64d0900 <line:708:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x55e0f64d0978 <line:709:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x55e0f64d09f0 <line:710:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x55e0f64d0a70 <line:711:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x55e0f64d0af0 <line:712:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x55e0f64d0b68 <line:713:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x55e0f64d0be8 <line:714:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x55e0f64d0c60 <line:715:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x55e0f64d0ce0 <line:716:1, col:5> col:5 used y 'int'
|-VarDecl 0x55e0f64d0d60 prev 0x55e0f64d0ce0 <line:717:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55e0f64d0dc8 <col:9> 'int' 0
|-VarDecl 0x55e0f64d0df8 <line:718:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55e0f64d0e70 <line:719:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x55e0f64d0f30 <line:720:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55e0f64d1048 prev 0x55e0f64cf110 <line:721:1, line:750:1> line:721:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55e0f64d0fb0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55e0f64d4098 <line:722:1, line:750:1>
|   |-CallExpr 0x55e0f64d1158 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e0f64d1140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0f64d10f0 <col:3> 'void ()' Function 0x55e0f64764b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e0f64d11b8 <line:724:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55e0f64d1178 <col:3> 'int' lvalue Var 0x55e0f64d0d60 'y' 'int'
|   | `-IntegerLiteral 0x55e0f64d1198 <col:7> 'int' 1
|   |-CallExpr 0x55e0f64d1210 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e0f64d11f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0f64d11d8 <col:3> 'void ()' Function 0x55e0f6476570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e0f64d1268 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e0f64d1250 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0f64d1230 <col:3> 'void ()' Function 0x55e0f64764b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55e0f64d12c0 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e0f64d12a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0f64d1288 <col:3> 'void ()' Function 0x55e0f6476570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e0f64d1318 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e0f64d1300 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0f64d12e0 <col:3> 'void ()' Function 0x55e0f64764b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e0f64d13e8 <line:729:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d1338 <col:3> '_Bool' lvalue Var 0x55e0f64d0df8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55e0f64d13c8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55e0f64d13b0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55e0f64d1358 <col:19> '_Bool (void)' Function 0x55e0f6475c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55e0f64d1480 <line:730:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d1408 <col:3> '_Bool' lvalue Var 0x55e0f64d0f30 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55e0f64d1460 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55e0f64d1448 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55e0f64d1428 <col:19> '_Bool (void)' Function 0x55e0f6475c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55e0f64d14f8 <line:731:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d14a0 <col:3> '_Bool' lvalue Var 0x55e0f64d0538 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55e0f64d14e0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e0f64d14c0 <col:21> '_Bool' lvalue Var 0x55e0f64d0f30 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55e0f64d1570 <line:732:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55e0f64d1518 <col:3> 'int' lvalue Var 0x55e0f64d05b8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55e0f64d1558 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e0f64d1538 <col:15> 'int' lvalue Var 0x55e0f64d04a0 'x' 'int'
|   |-BinaryOperator 0x55e0f64d19a8 <line:733:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55e0f64d1590 <col:3> 'int' lvalue Var 0x55e0f64d04a0 'x' 'int'
|   | `-ConditionalOperator 0x55e0f64d1978 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55e0f64d17a0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55e0f64d16c0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55e0f64d15e8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55e0f64d15d0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55e0f64d15b0 <col:8> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55e0f64d16a0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55e0f64d1638 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55e0f64d1620 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55e0f64d1600 <col:27> '_Bool' lvalue Var 0x55e0f64d06a8 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x55e0f64d1688 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55e0f64d1670 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55e0f64d1650 <col:46> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55e0f64d1780 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55e0f64d1718 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55e0f64d1700 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55e0f64d16e0 <col:65> '_Bool' lvalue Var 0x55e0f64d06a8 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x55e0f64d1768 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55e0f64d1750 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55e0f64d1730 <col:84> '_Bool' lvalue Var 0x55e0f64d0888 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55e0f64d1960 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e0f64d17c0 <col:101> 'int' lvalue Var 0x55e0f64d04a0 'x' 'int'
|   |   `-ParenExpr 0x55e0f64d1940 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55e0f64d1910 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55e0f64d1880 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55e0f64d1838 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55e0f64d1820 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55e0f64d17e0 <col:106> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55e0f64d1868 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55e0f64d1850 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55e0f64d1800 <col:124> '_Bool' lvalue Var 0x55e0f64d06a8 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55e0f64d18e0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e0f64d18a0 <col:141> 'int' lvalue Var 0x55e0f64d0af0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55e0f64d18f8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e0f64d18c0 <col:153> 'int' lvalue Var 0x55e0f64d0be8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55e0f64d1eb8 <line:734:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55e0f64d19c8 <col:3> 'int' lvalue Var 0x55e0f64d0af0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55e0f64d1e88 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55e0f64d1e58 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55e0f64d1e40 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55e0f64d19e8 <col:15> '_Bool' lvalue Var 0x55e0f64d0f30 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55e0f64d1e70 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e0f64d1a08 <col:31> 'int' lvalue Var 0x55e0f64d0af0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55e0f64d1e20 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55e0f64d1df0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55e0f64d1c18 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55e0f64d1b38 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55e0f64d1a60 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55e0f64d1a48 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55e0f64d1a28 <col:45> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55e0f64d1b18 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55e0f64d1ab0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55e0f64d1a98 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55e0f64d1a78 <col:64> '_Bool' lvalue Var 0x55e0f64d06a8 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55e0f64d1b00 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55e0f64d1ae8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55e0f64d1ac8 <col:83> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55e0f64d1bf8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55e0f64d1b90 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55e0f64d1b78 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55e0f64d1b58 <col:102> '_Bool' lvalue Var 0x55e0f64d06a8 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55e0f64d1be0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55e0f64d1bc8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55e0f64d1ba8 <col:121> '_Bool' lvalue Var 0x55e0f64d0888 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55e0f64d1dd8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e0f64d1c38 <col:138> 'int' lvalue Var 0x55e0f64d0af0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55e0f64d1db8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55e0f64d1d88 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55e0f64d1cf8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55e0f64d1cb0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55e0f64d1c98 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55e0f64d1c58 <col:151> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55e0f64d1ce0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55e0f64d1cc8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55e0f64d1c78 <col:169> '_Bool' lvalue Var 0x55e0f64d06a8 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55e0f64d1d58 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55e0f64d1d18 <col:186> 'int' lvalue Var 0x55e0f64d0af0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55e0f64d1d70 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55e0f64d1d38 <col:198> 'int' lvalue Var 0x55e0f64d0af0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55e0f64d23f0 <line:735:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55e0f64d1ed8 <col:3> 'int' lvalue Var 0x55e0f64d0be8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55e0f64d23c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55e0f64d2390 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55e0f64d2378 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55e0f64d1ef8 <col:15> '_Bool' lvalue Var 0x55e0f64d0f30 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55e0f64d23a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e0f64d1f40 <col:31> 'int' lvalue Var 0x55e0f64d0be8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55e0f64d2358 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55e0f64d2328 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55e0f64d2150 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55e0f64d2070 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55e0f64d1f98 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55e0f64d1f80 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55e0f64d1f60 <col:45> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55e0f64d2050 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55e0f64d1fe8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55e0f64d1fd0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55e0f64d1fb0 <col:64> '_Bool' lvalue Var 0x55e0f64d06a8 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55e0f64d2038 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55e0f64d2020 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55e0f64d2000 <col:83> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55e0f64d2130 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55e0f64d20c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55e0f64d20b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55e0f64d2090 <col:102> '_Bool' lvalue Var 0x55e0f64d06a8 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55e0f64d2118 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55e0f64d2100 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55e0f64d20e0 <col:121> '_Bool' lvalue Var 0x55e0f64d0888 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55e0f64d2310 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e0f64d2170 <col:138> 'int' lvalue Var 0x55e0f64d0be8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55e0f64d22f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55e0f64d22c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55e0f64d2230 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55e0f64d21e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55e0f64d21d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55e0f64d2190 <col:151> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55e0f64d2218 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55e0f64d2200 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55e0f64d21b0 <col:169> '_Bool' lvalue Var 0x55e0f64d06a8 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55e0f64d2290 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55e0f64d2250 <col:186> 'int' lvalue Var 0x55e0f64d0be8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55e0f64d22a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55e0f64d2270 <col:198> 'int' lvalue Var 0x55e0f64d0be8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55e0f64d2998 <line:736:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d2410 <col:3> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e0f64d2980 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e0f64d2950 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55e0f64d2908 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e0f64d28f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e0f64d2430 <col:20> '_Bool' lvalue Var 0x55e0f64d0f30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e0f64d2938 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e0f64d2920 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e0f64d2450 <col:36> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55e0f64d28d0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55e0f64d28a0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55e0f64d2660 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55e0f64d2580 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55e0f64d24a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55e0f64d2490 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55e0f64d2470 <col:55> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55e0f64d2560 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55e0f64d24f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55e0f64d24e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55e0f64d24c0 <col:74> '_Bool' lvalue Var 0x55e0f64d06a8 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55e0f64d2548 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55e0f64d2530 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55e0f64d2510 <col:93> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55e0f64d2640 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55e0f64d25d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55e0f64d25c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55e0f64d25a0 <col:112> '_Bool' lvalue Var 0x55e0f64d06a8 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55e0f64d2628 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55e0f64d2610 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55e0f64d25f0 <col:131> '_Bool' lvalue Var 0x55e0f64d0888 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55e0f64d2888 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e0f64d2870 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e0f64d2680 <col:148> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55e0f64d2850 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55e0f64d2820 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55e0f64d2740 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e0f64d26f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e0f64d26e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e0f64d26a0 <col:166> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e0f64d2728 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e0f64d2710 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e0f64d26c0 <col:184> '_Bool' lvalue Var 0x55e0f64d06a8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55e0f64d27d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e0f64d2790 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e0f64d2760 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55e0f64d2808 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55e0f64d27f0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55e0f64d27b8 <col:212> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55e0f64d2f98 <line:737:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d29b8 <col:3> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e0f64d2f80 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e0f64d2f50 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55e0f64d2ed0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e0f64d2eb8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e0f64d29d8 <col:20> '_Bool' lvalue Var 0x55e0f64d0f30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e0f64d2f00 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e0f64d2ee8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e0f64d29f8 <col:36> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55e0f64d2e98 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55e0f64d2e68 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55e0f64d2c08 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55e0f64d2b28 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55e0f64d2a50 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55e0f64d2a38 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55e0f64d2a18 <col:55> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55e0f64d2b08 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55e0f64d2aa0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55e0f64d2a88 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55e0f64d2a68 <col:74> '_Bool' lvalue Var 0x55e0f64d06a8 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55e0f64d2af0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55e0f64d2ad8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55e0f64d2ab8 <col:93> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55e0f64d2be8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55e0f64d2b80 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55e0f64d2b68 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55e0f64d2b48 <col:112> '_Bool' lvalue Var 0x55e0f64d06a8 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55e0f64d2bd0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55e0f64d2bb8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55e0f64d2b98 <col:131> '_Bool' lvalue Var 0x55e0f64d0888 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55e0f64d2e50 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e0f64d2e38 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e0f64d2c28 <col:148> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55e0f64d2e18 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55e0f64d2de8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55e0f64d2ce8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e0f64d2ca0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e0f64d2c88 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e0f64d2c48 <col:166> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e0f64d2cd0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e0f64d2cb8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e0f64d2c68 <col:184> '_Bool' lvalue Var 0x55e0f64d06a8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55e0f64d2db8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e0f64d2d38 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e0f64d2d08 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55e0f64d2dd0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55e0f64d2d90 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55e0f64d2d60 <col:219> 'int' 0
|   |-BinaryOperator 0x55e0f64d3540 <line:738:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d2fb8 <col:3> '_Bool' lvalue Var 0x55e0f64d06a8 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55e0f64d3528 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e0f64d34f8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55e0f64d34b0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e0f64d3498 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e0f64d2fd8 <col:20> '_Bool' lvalue Var 0x55e0f64d0f30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e0f64d34e0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e0f64d34c8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e0f64d2ff8 <col:36> '_Bool' lvalue Var 0x55e0f64d06a8 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55e0f64d3478 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55e0f64d3448 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55e0f64d3208 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55e0f64d3128 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55e0f64d3050 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55e0f64d3038 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55e0f64d3018 <col:55> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55e0f64d3108 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55e0f64d30a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55e0f64d3088 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55e0f64d3068 <col:74> '_Bool' lvalue Var 0x55e0f64d06a8 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55e0f64d30f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55e0f64d30d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55e0f64d30b8 <col:93> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55e0f64d31e8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55e0f64d3180 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55e0f64d3168 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55e0f64d3148 <col:112> '_Bool' lvalue Var 0x55e0f64d06a8 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55e0f64d31d0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55e0f64d31b8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55e0f64d3198 <col:131> '_Bool' lvalue Var 0x55e0f64d0888 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55e0f64d3430 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e0f64d3418 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e0f64d3228 <col:148> '_Bool' lvalue Var 0x55e0f64d06a8 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55e0f64d33f8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55e0f64d33c8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55e0f64d32e8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e0f64d32a0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e0f64d3288 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e0f64d3248 <col:166> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e0f64d32d0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e0f64d32b8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e0f64d3268 <col:184> '_Bool' lvalue Var 0x55e0f64d06a8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55e0f64d3380 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e0f64d3338 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e0f64d3308 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55e0f64d33b0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55e0f64d3398 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55e0f64d3360 <col:212> '_Bool' lvalue Var 0x55e0f64d06a8 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55e0f64d3b08 <line:739:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d3560 <col:3> '_Bool' lvalue Var 0x55e0f64d0888 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55e0f64d3af0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e0f64d3ac0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55e0f64d3a78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e0f64d3a60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e0f64d3580 <col:20> '_Bool' lvalue Var 0x55e0f64d0f30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e0f64d3aa8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e0f64d3a90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e0f64d35a0 <col:36> '_Bool' lvalue Var 0x55e0f64d0888 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55e0f64d3a40 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55e0f64d3a10 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55e0f64d37b0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55e0f64d36d0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55e0f64d35f8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55e0f64d35e0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55e0f64d35c0 <col:55> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55e0f64d36b0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55e0f64d3648 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55e0f64d3630 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55e0f64d3610 <col:74> '_Bool' lvalue Var 0x55e0f64d06a8 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55e0f64d3698 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55e0f64d3680 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55e0f64d3660 <col:93> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55e0f64d3790 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55e0f64d3728 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55e0f64d3710 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55e0f64d36f0 <col:112> '_Bool' lvalue Var 0x55e0f64d06a8 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55e0f64d3778 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55e0f64d3760 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55e0f64d3740 <col:131> '_Bool' lvalue Var 0x55e0f64d0888 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55e0f64d39f8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e0f64d39e0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e0f64d37d0 <col:148> '_Bool' lvalue Var 0x55e0f64d0888 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55e0f64d39c0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55e0f64d3990 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55e0f64d3890 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e0f64d3848 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e0f64d3830 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e0f64d37f0 <col:166> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e0f64d3878 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e0f64d3860 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e0f64d3810 <col:184> '_Bool' lvalue Var 0x55e0f64d06a8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55e0f64d3960 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e0f64d38e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e0f64d38b0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55e0f64d3978 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55e0f64d3938 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55e0f64d3908 <col:219> 'int' 0
|   |-BinaryOperator 0x55e0f64d3b80 <line:740:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55e0f64d3b28 <col:3> 'int' lvalue Var 0x55e0f64cf860 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55e0f64d3b68 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e0f64d3b48 <col:25> 'int' lvalue Var 0x55e0f64d04a0 'x' 'int'
|   |-BinaryOperator 0x55e0f64d3cb0 <line:741:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55e0f64d3ba0 <col:3> 'int' lvalue Var 0x55e0f64d04a0 'x' 'int'
|   | `-ConditionalOperator 0x55e0f64d3c80 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55e0f64d3c38 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55e0f64d3c20 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55e0f64d3bc0 <col:7> '_Bool' lvalue Var 0x55e0f64d0538 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55e0f64d3c50 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e0f64d3be0 <col:25> 'int' lvalue Var 0x55e0f64d05b8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55e0f64d3c68 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55e0f64d3c00 <col:37> 'int' lvalue Var 0x55e0f64d04a0 'x' 'int'
|   |-BinaryOperator 0x55e0f64d3d48 <line:742:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d3cd0 <col:3> '_Bool' lvalue Var 0x55e0f64d0538 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55e0f64d3d20 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55e0f64d3cf0 <col:28> 'int' 0
|   |-CallExpr 0x55e0f64d3da0 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e0f64d3d88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0f64d3d68 <col:3> 'void ()' Function 0x55e0f6476570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e0f64d3df8 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e0f64d3de0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0f64d3dc0 <col:3> 'void ()' Function 0x55e0f64764b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55e0f64d3e50 <line:745:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e0f64d3e38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0f64d3e18 <col:3> 'void ()' Function 0x55e0f6476570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e0f64d3ea8 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e0f64d3e90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0f64d3e70 <col:3> 'void ()' Function 0x55e0f64764b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e0f64d3f80 <line:747:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55e0f64d3ec8 <col:3> 'int' lvalue Var 0x55e0f64cf740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55e0f64d3f60 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55e0f64d3f28 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e0f64d3ee8 <col:22> 'int' lvalue Var 0x55e0f64cf740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55e0f64d3f08 <col:41> 'int' 1
|   |-CallExpr 0x55e0f64d3fd8 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e0f64d3fc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0f64d3fa0 <col:3> 'void ()' Function 0x55e0f6476570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55e0f64d4088 <line:749:3, col:36>
|     `-CallExpr 0x55e0f64d4068 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55e0f64d4050 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55e0f64d3ff8 <col:10> 'void *(void)' Function 0x55e0f6475fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55e0f64d4230 prev 0x55e0f64cf268 <line:751:1, line:776:1> line:751:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55e0f64d4198 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55e0f64d58c8 <line:752:1, line:776:1>
|   |-CallExpr 0x55e0f64d4310 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e0f64d42f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0f64d42d8 <col:3> 'void ()' Function 0x55e0f64764b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e0f64d4388 <line:754:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55e0f64d4330 <col:3> 'int' lvalue Var 0x55e0f64d0be8 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55e0f64d4370 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e0f64d4350 <col:15> 'int' lvalue Var 0x55e0f64d0af0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55e0f64d43e8 <line:755:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55e0f64d43a8 <col:3> 'int' lvalue Var 0x55e0f64d0af0 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x55e0f64d43c8 <col:15> 'int' 1
|   |-BinaryOperator 0x55e0f64d4460 <line:756:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d4408 <col:3> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e0f64d4448 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e0f64d4428 <col:20> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55e0f64d44f8 <line:757:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d4480 <col:3> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55e0f64d44d0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55e0f64d44a0 <col:27> 'int' 1
|   |-CallExpr 0x55e0f64d4678 <line:758:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55e0f64d4660 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55e0f64d4518 <col:3> 'void (int)' Function 0x55e0f6476238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55e0f64d4618 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55e0f64d45f8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55e0f64d45d8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55e0f64d4590 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55e0f64d4578 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55e0f64d4538 <col:23> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55e0f64d45c0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55e0f64d45a8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55e0f64d4558 <col:41> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55e0f64d46f8 <line:759:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d46a0 <col:3> '_Bool' lvalue Var 0x55e0f64d0810 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55e0f64d46e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e0f64d46c0 <col:20> '_Bool' lvalue Var 0x55e0f64d0630 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55e0f64d4770 <line:760:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d4718 <col:3> '_Bool' lvalue Var 0x55e0f64d0888 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55e0f64d4758 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e0f64d4738 <col:20> '_Bool' lvalue Var 0x55e0f64d06a8 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55e0f64d47e8 <line:761:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d4790 <col:3> '_Bool' lvalue Var 0x55e0f64d0900 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55e0f64d47d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e0f64d47b0 <col:20> '_Bool' lvalue Var 0x55e0f64d0720 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55e0f64d4860 <line:762:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d4808 <col:3> '_Bool' lvalue Var 0x55e0f64d0978 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55e0f64d4848 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e0f64d4828 <col:20> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55e0f64d48f8 <line:763:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d4880 <col:3> '_Bool' lvalue Var 0x55e0f64d0720 'x$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x55e0f64d48d0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55e0f64d48a0 <col:27> 'int' 1
|   |-CallExpr 0x55e0f64d4950 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e0f64d4938 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0f64d4918 <col:3> 'void ()' Function 0x55e0f6476570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e0f64d49a8 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e0f64d4990 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0f64d4970 <col:3> 'void ()' Function 0x55e0f64764b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e0f64d4c90 <line:766:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55e0f64d49c8 <col:3> 'int' lvalue Var 0x55e0f64d04a0 'x' 'int'
|   | `-ConditionalOperator 0x55e0f64d4c60 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55e0f64d4a88 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55e0f64d4a40 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55e0f64d4a28 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55e0f64d49e8 <col:7> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55e0f64d4a70 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55e0f64d4a58 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55e0f64d4a08 <col:25> '_Bool' lvalue Var 0x55e0f64d0720 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55e0f64d4c48 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e0f64d4aa8 <col:42> 'int' lvalue Var 0x55e0f64d0af0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55e0f64d4c28 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55e0f64d4bf8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55e0f64d4b68 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55e0f64d4b20 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55e0f64d4b08 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55e0f64d4ac8 <col:55> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55e0f64d4b50 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55e0f64d4b38 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55e0f64d4ae8 <col:73> '_Bool' lvalue Var 0x55e0f64d0900 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55e0f64d4bc8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e0f64d4b88 <col:90> 'int' lvalue Var 0x55e0f64d0be8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55e0f64d4be0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e0f64d4ba8 <col:102> 'int' lvalue Var 0x55e0f64d04a0 'x' 'int'
|   |-BinaryOperator 0x55e0f64d4e98 <line:767:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d4cb0 <col:3> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e0f64d4e80 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e0f64d4e50 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55e0f64d4d70 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55e0f64d4d28 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55e0f64d4d10 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55e0f64d4cd0 <col:20> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55e0f64d4d58 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55e0f64d4d40 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55e0f64d4cf0 <col:38> '_Bool' lvalue Var 0x55e0f64d0720 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e0f64d4e08 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e0f64d4dc0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e0f64d4d90 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55e0f64d4e38 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e0f64d4e20 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e0f64d4de8 <col:66> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55e0f64d5190 <line:768:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d4eb8 <col:3> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e0f64d5178 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e0f64d5148 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55e0f64d5068 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55e0f64d4f88 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55e0f64d4f30 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55e0f64d4f18 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55e0f64d4ed8 <col:20> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55e0f64d4f70 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55e0f64d4f48 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55e0f64d4ef8 <col:38> '_Bool' lvalue Var 0x55e0f64d0720 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55e0f64d5048 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55e0f64d5000 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55e0f64d4fe8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55e0f64d4fa8 <col:56> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55e0f64d5030 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55e0f64d5018 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55e0f64d4fc8 <col:74> '_Bool' lvalue Var 0x55e0f64d0900 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e0f64d5100 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e0f64d50b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e0f64d5088 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55e0f64d5130 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e0f64d5118 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e0f64d50e0 <col:102> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55e0f64d5398 <line:769:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d51b0 <col:3> '_Bool' lvalue Var 0x55e0f64d0720 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55e0f64d5380 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e0f64d5350 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55e0f64d5270 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55e0f64d5228 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55e0f64d5210 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55e0f64d51d0 <col:20> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55e0f64d5258 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55e0f64d5240 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55e0f64d51f0 <col:38> '_Bool' lvalue Var 0x55e0f64d0720 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e0f64d5308 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e0f64d52c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e0f64d5290 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55e0f64d5338 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e0f64d5320 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e0f64d52e8 <col:66> '_Bool' lvalue Var 0x55e0f64d0720 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55e0f64d5680 <line:770:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d53b8 <col:3> '_Bool' lvalue Var 0x55e0f64d0900 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55e0f64d5668 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e0f64d5638 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55e0f64d5558 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55e0f64d5478 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55e0f64d5430 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55e0f64d5418 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55e0f64d53d8 <col:20> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55e0f64d5460 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55e0f64d5448 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55e0f64d53f8 <col:38> '_Bool' lvalue Var 0x55e0f64d0720 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55e0f64d5538 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55e0f64d54f0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55e0f64d54d8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55e0f64d5498 <col:56> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55e0f64d5520 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55e0f64d5508 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55e0f64d54b8 <col:74> '_Bool' lvalue Var 0x55e0f64d0900 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e0f64d55f0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e0f64d55a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e0f64d5578 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55e0f64d5620 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e0f64d5608 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e0f64d55d0 <col:102> '_Bool' lvalue Var 0x55e0f64d0900 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55e0f64d56d8 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e0f64d56c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0f64d56a0 <col:3> 'void ()' Function 0x55e0f6476570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e0f64d5730 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e0f64d5718 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0f64d56f8 <col:3> 'void ()' Function 0x55e0f64764b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e0f64d57e8 <line:773:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55e0f64d5750 <col:3> 'int' lvalue Var 0x55e0f64cf740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55e0f64d57c8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55e0f64d57b0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e0f64d5770 <col:22> 'int' lvalue Var 0x55e0f64cf740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55e0f64d5790 <col:41> 'int' 1
|   |-CallExpr 0x55e0f64d5840 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e0f64d5828 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0f64d5808 <col:3> 'void ()' Function 0x55e0f6476570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55e0f64d58b8 <line:775:3, col:36>
|     `-CallExpr 0x55e0f64d5898 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55e0f64d5880 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55e0f64d5860 <col:10> 'void *(void)' Function 0x55e0f6475fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55e0f64d5a40 prev 0x55e0f64cf3c0 <line:777:1, line:812:1> line:777:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55e0f64d59a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55e0f64db018 <line:778:1, line:812:1>
|   |-CallExpr 0x55e0f64d5b20 <line:779:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e0f64d5b08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0f64d5ae8 <col:3> 'void ()' Function 0x55e0f64764b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e0f64d5bb8 <line:780:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d5b40 <col:3> '_Bool' lvalue Var 0x55e0f64d0df8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55e0f64d5b98 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55e0f64d5b80 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55e0f64d5b60 <col:19> '_Bool (void)' Function 0x55e0f6475c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55e0f64d5c50 <line:781:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d5bd8 <col:3> '_Bool' lvalue Var 0x55e0f64d0f30 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55e0f64d5c30 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55e0f64d5c18 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55e0f64d5bf8 <col:19> '_Bool (void)' Function 0x55e0f6475c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55e0f64d5cc8 <line:782:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d5c70 <col:3> '_Bool' lvalue Var 0x55e0f64d0538 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55e0f64d5cb0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e0f64d5c90 <col:21> '_Bool' lvalue Var 0x55e0f64d0f30 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55e0f64d5d40 <line:783:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55e0f64d5ce8 <col:3> 'int' lvalue Var 0x55e0f64d05b8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55e0f64d5d28 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e0f64d5d08 <col:15> 'int' lvalue Var 0x55e0f64d04a0 'x' 'int'
|   |-BinaryOperator 0x55e0f64d5dd8 <line:784:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d5d60 <col:3> '_Bool' lvalue Var 0x55e0f64d0e70 'weak$$choice1' '_Bool'
|   | `-CallExpr 0x55e0f64d5db8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55e0f64d5da0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55e0f64d5d80 <col:19> '_Bool (void)' Function 0x55e0f6475c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55e0f64d6818 <line:785:3, col:363> 'int' '='
|   | |-DeclRefExpr 0x55e0f64d5df8 <col:3> 'int' lvalue Var 0x55e0f64d04a0 'x' 'int'
|   | `-ConditionalOperator 0x55e0f64d67e8 <col:7, col:363> 'int'
|   |   |-UnaryOperator 0x55e0f64d5e50 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | `-ImplicitCastExpr 0x55e0f64d5e38 <col:8> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55e0f64d5e18 <col:8> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |   |-ImplicitCastExpr 0x55e0f64d67d0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e0f64d5e68 <col:25> 'int' lvalue Var 0x55e0f64d04a0 'x' 'int'
|   |   `-ParenExpr 0x55e0f64d67b0 <col:29, col:363> 'int'
|   |     `-ConditionalOperator 0x55e0f64d6780 <col:30, col:362> 'int'
|   |       |-BinaryOperator 0x55e0f64d5f28 <col:30, col:48> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55e0f64d5ee0 <col:30> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55e0f64d5ec8 <col:30> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55e0f64d5e88 <col:30> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55e0f64d5f10 <col:48> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55e0f64d5ef8 <col:48> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55e0f64d5ea8 <col:48> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55e0f64d6768 <col:65> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e0f64d5f48 <col:65> 'int' lvalue Var 0x55e0f64d0af0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55e0f64d6748 <col:77, col:362> 'int'
|   |         `-ConditionalOperator 0x55e0f64d6718 <col:78, col:361> 'int'
|   |           |-BinaryOperator 0x55e0f64d6100 <col:78, col:134> 'int' '&&'
|   |           | |-BinaryOperator 0x55e0f64d6090 <col:78, col:115> 'int' '&&'
|   |           | | |-BinaryOperator 0x55e0f64d6020 <col:78, col:97> 'int' '&&'
|   |           | | | |-ImplicitCastExpr 0x55e0f64d6008 <col:78> 'int' <IntegralCast>
|   |           | | | | `-ImplicitCastExpr 0x55e0f64d5ff0 <col:78> '_Bool' <LValueToRValue>
|   |           | | | |   `-DeclRefExpr 0x55e0f64d5f80 <col:78> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |           | | | `-UnaryOperator 0x55e0f64d5fd8 <col:96, col:97> 'int' prefix '!' cannot overflow
|   |           | | |   `-ImplicitCastExpr 0x55e0f64d5fc0 <col:97> '_Bool' <LValueToRValue>
|   |           | | |     `-DeclRefExpr 0x55e0f64d5fa0 <col:97> '_Bool' lvalue Var 0x55e0f64d0978 'x$r_buff1_thd3' '_Bool'
|   |           | | `-ImplicitCastExpr 0x55e0f64d6078 <col:115> 'int' <IntegralCast>
|   |           | |   `-ImplicitCastExpr 0x55e0f64d6060 <col:115> '_Bool' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x55e0f64d6040 <col:115> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |           | `-UnaryOperator 0x55e0f64d60e8 <col:133, col:134> 'int' prefix '!' cannot overflow
|   |           |   `-ImplicitCastExpr 0x55e0f64d60d0 <col:134> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55e0f64d60b0 <col:134> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |           |-ParenExpr 0x55e0f64d62e8 <col:151, col:211> 'int'
|   |           | `-ConditionalOperator 0x55e0f64d62b8 <col:152, col:210> 'int'
|   |           |   |-ImplicitCastExpr 0x55e0f64d6288 <col:152> 'int' <IntegralCast>
|   |           |   | `-ImplicitCastExpr 0x55e0f64d6270 <col:152> '_Bool' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x55e0f64d6120 <col:152> '_Bool' lvalue Var 0x55e0f64d0df8 'weak$$choice0' '_Bool'
|   |           |   |-ImplicitCastExpr 0x55e0f64d62a0 <col:168> 'int' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x55e0f64d6140 <col:168> 'int' lvalue Var 0x55e0f64d04a0 'x' 'int'
|   |           |   `-ParenExpr 0x55e0f64d6250 <col:172, col:210> 'int'
|   |           |     `-ConditionalOperator 0x55e0f64d6220 <col:173, col:201> 'int'
|   |           |       |-ImplicitCastExpr 0x55e0f64d61d8 <col:173> 'int' <IntegralCast>
|   |           |       | `-ImplicitCastExpr 0x55e0f64d61c0 <col:173> '_Bool' <LValueToRValue>
|   |           |       |   `-DeclRefExpr 0x55e0f64d6160 <col:173> '_Bool' lvalue Var 0x55e0f64d0e70 'weak$$choice1' '_Bool'
|   |           |       |-ImplicitCastExpr 0x55e0f64d61f0 <col:189> 'int' <LValueToRValue>
|   |           |       | `-DeclRefExpr 0x55e0f64d6180 <col:189> 'int' lvalue Var 0x55e0f64d0af0 'x$w_buff0' 'int'
|   |           |       `-ImplicitCastExpr 0x55e0f64d6208 <col:201> 'int' <LValueToRValue>
|   |           |         `-DeclRefExpr 0x55e0f64d61a0 <col:201> 'int' lvalue Var 0x55e0f64d0be8 'x$w_buff1' 'int'
|   |           `-ParenExpr 0x55e0f64d66f8 <col:215, col:361> 'int'
|   |             `-ConditionalOperator 0x55e0f64d66c8 <col:216, col:360> 'int'
|   |               |-BinaryOperator 0x55e0f64d6488 <col:216, col:271> 'int' '&&'
|   |               | |-BinaryOperator 0x55e0f64d6418 <col:216, col:252> 'int' '&&'
|   |               | | |-BinaryOperator 0x55e0f64d63a8 <col:216, col:234> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55e0f64d6360 <col:216> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55e0f64d6348 <col:216> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55e0f64d6308 <col:216> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |               | | | `-ImplicitCastExpr 0x55e0f64d6390 <col:234> 'int' <IntegralCast>
|   |               | | |   `-ImplicitCastExpr 0x55e0f64d6378 <col:234> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55e0f64d6328 <col:234> '_Bool' lvalue Var 0x55e0f64d0978 'x$r_buff1_thd3' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55e0f64d6400 <col:252> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55e0f64d63e8 <col:252> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55e0f64d63c8 <col:252> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55e0f64d6470 <col:270, col:271> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55e0f64d6458 <col:271> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55e0f64d6438 <col:271> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |               |-ParenExpr 0x55e0f64d6598 <col:288, col:326> 'int'
|   |               | `-ConditionalOperator 0x55e0f64d6568 <col:289, col:317> 'int'
|   |               |   |-ImplicitCastExpr 0x55e0f64d6520 <col:289> 'int' <IntegralCast>
|   |               |   | `-ImplicitCastExpr 0x55e0f64d6508 <col:289> '_Bool' <LValueToRValue>
|   |               |   |   `-DeclRefExpr 0x55e0f64d64a8 <col:289> '_Bool' lvalue Var 0x55e0f64d0df8 'weak$$choice0' '_Bool'
|   |               |   |-ImplicitCastExpr 0x55e0f64d6538 <col:305> 'int' <LValueToRValue>
|   |               |   | `-DeclRefExpr 0x55e0f64d64c8 <col:305> 'int' lvalue Var 0x55e0f64d0be8 'x$w_buff1' 'int'
|   |               |   `-ImplicitCastExpr 0x55e0f64d6550 <col:317> 'int' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55e0f64d64e8 <col:317> 'int' lvalue Var 0x55e0f64d0af0 'x$w_buff0' 'int'
|   |               `-ParenExpr 0x55e0f64d66a8 <col:330, col:360> 'int'
|   |                 `-ConditionalOperator 0x55e0f64d6678 <col:331, col:359> 'int'
|   |                   |-ImplicitCastExpr 0x55e0f64d6630 <col:331> 'int' <IntegralCast>
|   |                   | `-ImplicitCastExpr 0x55e0f64d6618 <col:331> '_Bool' <LValueToRValue>
|   |                   |   `-DeclRefExpr 0x55e0f64d65b8 <col:331> '_Bool' lvalue Var 0x55e0f64d0df8 'weak$$choice0' '_Bool'
|   |                   |-ImplicitCastExpr 0x55e0f64d6648 <col:347> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55e0f64d65d8 <col:347> 'int' lvalue Var 0x55e0f64d0af0 'x$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x55e0f64d6660 <col:359> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55e0f64d65f8 <col:359> 'int' lvalue Var 0x55e0f64d04a0 'x' 'int'
|   |-BinaryOperator 0x55e0f64d6fd8 <line:786:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x55e0f64d6838 <col:3> 'int' lvalue Var 0x55e0f64d0af0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55e0f64d6fa8 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x55e0f64d6f58 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55e0f64d6f40 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55e0f64d6858 <col:15> '_Bool' lvalue Var 0x55e0f64d0f30 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55e0f64d6f90 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e0f64d6878 <col:31> 'int' lvalue Var 0x55e0f64d0af0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55e0f64d6f20 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x55e0f64d6ef0 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x55e0f64d68d0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x55e0f64d68b8 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55e0f64d6898 <col:45> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x55e0f64d6ed8 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e0f64d68e8 <col:62> 'int' lvalue Var 0x55e0f64d0af0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55e0f64d6eb8 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x55e0f64d6e88 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x55e0f64d69a8 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55e0f64d6960 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55e0f64d6948 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55e0f64d6908 <col:75> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55e0f64d6990 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55e0f64d6978 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55e0f64d6928 <col:93> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55e0f64d6e70 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55e0f64d69c8 <col:110> 'int' lvalue Var 0x55e0f64d0af0 'x$w_buff0' 'int'
|   |           `-ParenExpr 0x55e0f64d6e50 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x55e0f64d6e20 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x55e0f64d6b68 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x55e0f64d6af8 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x55e0f64d6a88 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55e0f64d6a70 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55e0f64d6a58 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55e0f64d69e8 <col:123> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x55e0f64d6a40 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x55e0f64d6a28 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55e0f64d6a08 <col:142> '_Bool' lvalue Var 0x55e0f64d0978 'x$r_buff1_thd3' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55e0f64d6ae0 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55e0f64d6ac8 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55e0f64d6aa8 <col:160> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55e0f64d6b50 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55e0f64d6b38 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55e0f64d6b18 <col:179> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |               |-ImplicitCastExpr 0x55e0f64d6e08 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x55e0f64d6b88 <col:196> 'int' lvalue Var 0x55e0f64d0af0 'x$w_buff0' 'int'
|   |               `-ParenExpr 0x55e0f64d6de8 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x55e0f64d6db8 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x55e0f64d6d28 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x55e0f64d6cb8 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x55e0f64d6c48 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x55e0f64d6c00 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x55e0f64d6be8 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x55e0f64d6ba8 <col:209> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x55e0f64d6c30 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x55e0f64d6c18 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x55e0f64d6bc8 <col:227> '_Bool' lvalue Var 0x55e0f64d0978 'x$r_buff1_thd3' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x55e0f64d6ca0 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x55e0f64d6c88 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x55e0f64d6c68 <col:245> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x55e0f64d6d10 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x55e0f64d6cf8 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x55e0f64d6cd8 <col:264> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |                   |-ImplicitCastExpr 0x55e0f64d6d88 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55e0f64d6d48 <col:281> 'int' lvalue Var 0x55e0f64d0af0 'x$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x55e0f64d6da0 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55e0f64d6d68 <col:293> 'int' lvalue Var 0x55e0f64d0af0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55e0f64d7778 <line:787:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x55e0f64d6ff8 <col:3> 'int' lvalue Var 0x55e0f64d0be8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55e0f64d7748 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x55e0f64d7718 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55e0f64d7700 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55e0f64d7018 <col:15> '_Bool' lvalue Var 0x55e0f64d0f30 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55e0f64d7730 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e0f64d7038 <col:31> 'int' lvalue Var 0x55e0f64d0be8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55e0f64d76e0 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x55e0f64d76b0 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x55e0f64d7090 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x55e0f64d7078 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55e0f64d7058 <col:45> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x55e0f64d7698 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e0f64d70a8 <col:62> 'int' lvalue Var 0x55e0f64d0be8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55e0f64d7678 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x55e0f64d7648 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x55e0f64d7168 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55e0f64d7120 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55e0f64d7108 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55e0f64d70c8 <col:75> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55e0f64d7150 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55e0f64d7138 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55e0f64d70e8 <col:93> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55e0f64d7630 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55e0f64d7188 <col:110> 'int' lvalue Var 0x55e0f64d0be8 'x$w_buff1' 'int'
|   |           `-ParenExpr 0x55e0f64d7610 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x55e0f64d75e0 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x55e0f64d7328 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x55e0f64d72b8 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x55e0f64d7248 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55e0f64d7230 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55e0f64d7218 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55e0f64d71a8 <col:123> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x55e0f64d7200 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x55e0f64d71e8 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55e0f64d71c8 <col:142> '_Bool' lvalue Var 0x55e0f64d0978 'x$r_buff1_thd3' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55e0f64d72a0 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55e0f64d7288 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55e0f64d7268 <col:160> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55e0f64d7310 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55e0f64d72f8 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55e0f64d72d8 <col:179> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |               |-ImplicitCastExpr 0x55e0f64d75c8 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x55e0f64d7348 <col:196> 'int' lvalue Var 0x55e0f64d0be8 'x$w_buff1' 'int'
|   |               `-ParenExpr 0x55e0f64d75a8 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x55e0f64d7578 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x55e0f64d74e8 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x55e0f64d7478 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x55e0f64d7408 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x55e0f64d73c0 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x55e0f64d73a8 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x55e0f64d7368 <col:209> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x55e0f64d73f0 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x55e0f64d73d8 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x55e0f64d7388 <col:227> '_Bool' lvalue Var 0x55e0f64d0978 'x$r_buff1_thd3' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x55e0f64d7460 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x55e0f64d7448 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x55e0f64d7428 <col:245> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x55e0f64d74d0 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x55e0f64d74b8 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x55e0f64d7498 <col:264> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |                   |-ImplicitCastExpr 0x55e0f64d7548 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55e0f64d7508 <col:281> 'int' lvalue Var 0x55e0f64d0be8 'x$w_buff1' 'int'
|   |                   `-ImplicitCastExpr 0x55e0f64d7560 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55e0f64d7528 <col:293> 'int' lvalue Var 0x55e0f64d0be8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55e0f64d8068 <line:788:3, col:349> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d7798 <col:3> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e0f64d8050 <col:20, col:349> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e0f64d8020 <col:20, col:349> 'int'
|   |     |-ImplicitCastExpr 0x55e0f64d7fd8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e0f64d7fc0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e0f64d77b8 <col:20> '_Bool' lvalue Var 0x55e0f64d0f30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e0f64d8008 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e0f64d7ff0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e0f64d77d8 <col:36> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55e0f64d7fa0 <col:53, col:349> 'int'
|   |       `-ConditionalOperator 0x55e0f64d7f58 <col:54, col:348> 'int'
|   |         |-UnaryOperator 0x55e0f64d7830 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55e0f64d7818 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e0f64d77f8 <col:55> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55e0f64d7f40 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e0f64d7f28 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e0f64d7848 <col:72> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55e0f64d7f08 <col:89, col:348> 'int'
|   |           `-ConditionalOperator 0x55e0f64d7ed8 <col:90, col:347> 'int'
|   |             |-BinaryOperator 0x55e0f64d7908 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e0f64d78c0 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e0f64d78a8 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e0f64d7868 <col:90> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e0f64d78f0 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e0f64d78d8 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e0f64d7888 <col:108> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55e0f64d7ec0 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e0f64d7958 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e0f64d7928 <col:132> 'int' 0
|   |             `-ParenExpr 0x55e0f64d7ea0 <col:136, col:347> 'int'
|   |               `-ConditionalOperator 0x55e0f64d7e70 <col:137, col:346> 'int'
|   |                 |-BinaryOperator 0x55e0f64d7b00 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55e0f64d7a90 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55e0f64d7a20 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55e0f64d7a08 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55e0f64d79f0 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55e0f64d7980 <col:137> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55e0f64d79d8 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55e0f64d79c0 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55e0f64d79a0 <col:156> '_Bool' lvalue Var 0x55e0f64d0978 'x$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55e0f64d7a78 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55e0f64d7a60 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55e0f64d7a40 <col:174> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55e0f64d7ae8 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55e0f64d7ad0 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55e0f64d7ab0 <col:193> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |                 |-BinaryOperator 0x55e0f64d7bc0 <col:210, col:228> 'int' '||'
|   |                 | |-ImplicitCastExpr 0x55e0f64d7ba8 <col:210> 'int' <IntegralCast>
|   |                 | | `-ImplicitCastExpr 0x55e0f64d7b90 <col:210> '_Bool' <LValueToRValue>
|   |                 | |   `-DeclRefExpr 0x55e0f64d7b20 <col:210> '_Bool' lvalue Var 0x55e0f64d0df8 'weak$$choice0' '_Bool'
|   |                 | `-UnaryOperator 0x55e0f64d7b78 <col:227, col:228> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55e0f64d7b60 <col:228> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55e0f64d7b40 <col:228> '_Bool' lvalue Var 0x55e0f64d0e70 'weak$$choice1' '_Bool'
|   |                 `-ParenExpr 0x55e0f64d7e50 <col:244, col:346> 'int'
|   |                   `-ConditionalOperator 0x55e0f64d7e20 <col:245, col:333> 'int'
|   |                     |-BinaryOperator 0x55e0f64d7d60 <col:245, col:300> 'int' '&&'
|   |                     | |-BinaryOperator 0x55e0f64d7cf0 <col:245, col:281> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55e0f64d7c80 <col:245, col:263> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55e0f64d7c38 <col:245> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55e0f64d7c20 <col:245> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55e0f64d7be0 <col:245> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55e0f64d7c68 <col:263> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55e0f64d7c50 <col:263> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55e0f64d7c00 <col:263> '_Bool' lvalue Var 0x55e0f64d0978 'x$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55e0f64d7cd8 <col:281> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55e0f64d7cc0 <col:281> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55e0f64d7ca0 <col:281> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55e0f64d7d48 <col:299, col:300> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55e0f64d7d30 <col:300> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55e0f64d7d10 <col:300> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x55e0f64d7dd8 <col:317> 'int' <IntegralCast>
|   |                     | `-ImplicitCastExpr 0x55e0f64d7dc0 <col:317> '_Bool' <LValueToRValue>
|   |                     |   `-DeclRefExpr 0x55e0f64d7d80 <col:317> '_Bool' lvalue Var 0x55e0f64d0df8 'weak$$choice0' '_Bool'
|   |                     `-ImplicitCastExpr 0x55e0f64d7e08 <col:333> 'int' <IntegralCast>
|   |                       `-ImplicitCastExpr 0x55e0f64d7df0 <col:333> '_Bool' <LValueToRValue>
|   |                         `-DeclRefExpr 0x55e0f64d7da0 <col:333> '_Bool' lvalue Var 0x55e0f64d0df8 'weak$$choice0' '_Bool'
|   |-BinaryOperator 0x55e0f64d8910 <line:789:3, col:321> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d8088 <col:3> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e0f64d88f8 <col:20, col:321> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e0f64d88c8 <col:20, col:321> 'int'
|   |     |-ImplicitCastExpr 0x55e0f64d8880 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e0f64d8868 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e0f64d80a8 <col:20> '_Bool' lvalue Var 0x55e0f64d0f30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e0f64d88b0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e0f64d8898 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e0f64d80c8 <col:36> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55e0f64d8848 <col:53, col:321> 'int'
|   |       `-ConditionalOperator 0x55e0f64d8818 <col:54, col:320> 'int'
|   |         |-UnaryOperator 0x55e0f64d8120 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55e0f64d8108 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e0f64d80e8 <col:55> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55e0f64d8800 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e0f64d87e8 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e0f64d8138 <col:72> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55e0f64d87c8 <col:89, col:320> 'int'
|   |           `-ConditionalOperator 0x55e0f64d8798 <col:90, col:319> 'int'
|   |             |-BinaryOperator 0x55e0f64d81f8 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e0f64d81b0 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e0f64d8198 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e0f64d8158 <col:90> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e0f64d81e0 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e0f64d81c8 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e0f64d8178 <col:108> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55e0f64d8780 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e0f64d8248 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e0f64d8218 <col:132> 'int' 0
|   |             `-ParenExpr 0x55e0f64d8760 <col:136, col:319> 'int'
|   |               `-ConditionalOperator 0x55e0f64d8730 <col:137, col:318> 'int'
|   |                 |-BinaryOperator 0x55e0f64d83f0 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55e0f64d8380 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55e0f64d8310 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55e0f64d82f8 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55e0f64d82e0 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55e0f64d8270 <col:137> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55e0f64d82c8 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55e0f64d82b0 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55e0f64d8290 <col:156> '_Bool' lvalue Var 0x55e0f64d0978 'x$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55e0f64d8368 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55e0f64d8350 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55e0f64d8330 <col:174> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55e0f64d83d8 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55e0f64d83c0 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55e0f64d83a0 <col:193> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |                 |-ImplicitCastExpr 0x55e0f64d8718 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x55e0f64d8700 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x55e0f64d8410 <col:210> '_Bool' lvalue Var 0x55e0f64d0df8 'weak$$choice0' '_Bool'
|   |                 `-ParenExpr 0x55e0f64d86e0 <col:226, col:318> 'int'
|   |                   `-ConditionalOperator 0x55e0f64d86b0 <col:227, col:317> 'int'
|   |                     |-BinaryOperator 0x55e0f64d85b0 <col:227, col:282> 'int' '&&'
|   |                     | |-BinaryOperator 0x55e0f64d8540 <col:227, col:263> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55e0f64d84d0 <col:227, col:245> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55e0f64d8488 <col:227> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55e0f64d8470 <col:227> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55e0f64d8430 <col:227> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55e0f64d84b8 <col:245> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55e0f64d84a0 <col:245> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55e0f64d8450 <col:245> '_Bool' lvalue Var 0x55e0f64d0978 'x$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55e0f64d8528 <col:263> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55e0f64d8510 <col:263> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55e0f64d84f0 <col:263> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55e0f64d8598 <col:281, col:282> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55e0f64d8580 <col:282> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55e0f64d8560 <col:282> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x55e0f64d8680 <col:299, col:306> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55e0f64d8600 <col:299, col:306> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55e0f64d85d0 <col:306> 'int' 0
|   |                     `-ImplicitCastExpr 0x55e0f64d8698 <col:310, col:317> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55e0f64d8658 <col:310, col:317> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55e0f64d8628 <col:317> 'int' 0
|   |-BinaryOperator 0x55e0f64d91e0 <line:790:3, col:322> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d8930 <col:3> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55e0f64d91c8 <col:20, col:322> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e0f64d9198 <col:20, col:322> 'int'
|   |     |-ImplicitCastExpr 0x55e0f64d9150 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e0f64d9138 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e0f64d8950 <col:20> '_Bool' lvalue Var 0x55e0f64d0f30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e0f64d9180 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e0f64d9168 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e0f64d8970 <col:36> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x55e0f64d9118 <col:53, col:322> 'int'
|   |       `-ConditionalOperator 0x55e0f64d90e8 <col:54, col:321> 'int'
|   |         |-UnaryOperator 0x55e0f64d89c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55e0f64d89b0 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e0f64d8990 <col:55> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55e0f64d90d0 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e0f64d90b8 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e0f64d89e0 <col:72> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x55e0f64d9098 <col:89, col:321> 'int'
|   |           `-ConditionalOperator 0x55e0f64d9068 <col:90, col:320> 'int'
|   |             |-BinaryOperator 0x55e0f64d8aa0 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e0f64d8a58 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e0f64d8a40 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e0f64d8a00 <col:90> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e0f64d8a88 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e0f64d8a70 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e0f64d8a20 <col:108> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55e0f64d9050 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e0f64d8af0 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e0f64d8ac0 <col:132> 'int' 0
|   |             `-ParenExpr 0x55e0f64d9030 <col:136, col:320> 'int'
|   |               `-ConditionalOperator 0x55e0f64d9000 <col:137, col:319> 'int'
|   |                 |-BinaryOperator 0x55e0f64d8c98 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55e0f64d8c28 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55e0f64d8bb8 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55e0f64d8ba0 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55e0f64d8b88 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55e0f64d8b18 <col:137> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55e0f64d8b70 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55e0f64d8b58 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55e0f64d8b38 <col:156> '_Bool' lvalue Var 0x55e0f64d0978 'x$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55e0f64d8c10 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55e0f64d8bf8 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55e0f64d8bd8 <col:174> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55e0f64d8c80 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55e0f64d8c68 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55e0f64d8c48 <col:193> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |                 |-ImplicitCastExpr 0x55e0f64d8fe8 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x55e0f64d8fd0 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x55e0f64d8cb8 <col:210> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |                 `-ParenExpr 0x55e0f64d8fb0 <col:227, col:319> 'int'
|   |                   `-ConditionalOperator 0x55e0f64d8f58 <col:228, col:318> 'int'
|   |                     |-BinaryOperator 0x55e0f64d8e58 <col:228, col:283> 'int' '&&'
|   |                     | |-BinaryOperator 0x55e0f64d8de8 <col:228, col:264> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55e0f64d8d78 <col:228, col:246> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55e0f64d8d30 <col:228> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55e0f64d8d18 <col:228> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55e0f64d8cd8 <col:228> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55e0f64d8d60 <col:246> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55e0f64d8d48 <col:246> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55e0f64d8cf8 <col:246> '_Bool' lvalue Var 0x55e0f64d0978 'x$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55e0f64d8dd0 <col:264> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55e0f64d8db8 <col:264> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55e0f64d8d98 <col:264> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55e0f64d8e40 <col:282, col:283> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55e0f64d8e28 <col:283> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55e0f64d8e08 <col:283> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x55e0f64d8f28 <col:300, col:307> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55e0f64d8ea8 <col:300, col:307> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55e0f64d8e78 <col:307> 'int' 0
|   |                     `-ImplicitCastExpr 0x55e0f64d8f40 <col:311, col:318> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55e0f64d8f00 <col:311, col:318> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55e0f64d8ed0 <col:318> 'int' 0
|   |-BinaryOperator 0x55e0f64d9b98 <line:791:3, col:351> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d9200 <col:3> '_Bool' lvalue Var 0x55e0f64d0978 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55e0f64d9b80 <col:20, col:351> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e0f64d9b50 <col:20, col:351> 'int'
|   |     |-ImplicitCastExpr 0x55e0f64d9b08 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e0f64d9af0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e0f64d9220 <col:20> '_Bool' lvalue Var 0x55e0f64d0f30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e0f64d9b38 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e0f64d9b20 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e0f64d9240 <col:36> '_Bool' lvalue Var 0x55e0f64d0978 'x$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x55e0f64d9ad0 <col:53, col:351> 'int'
|   |       `-ConditionalOperator 0x55e0f64d9aa0 <col:54, col:350> 'int'
|   |         |-UnaryOperator 0x55e0f64d9298 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55e0f64d9280 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e0f64d9260 <col:55> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55e0f64d9a88 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e0f64d9a70 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e0f64d92b0 <col:72> '_Bool' lvalue Var 0x55e0f64d0978 'x$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x55e0f64d9a50 <col:89, col:350> 'int'
|   |           `-ConditionalOperator 0x55e0f64d9a20 <col:90, col:349> 'int'
|   |             |-BinaryOperator 0x55e0f64d9370 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e0f64d9328 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e0f64d9310 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e0f64d92d0 <col:90> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e0f64d9358 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e0f64d9340 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e0f64d92f0 <col:108> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55e0f64d9a08 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e0f64d93c0 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e0f64d9390 <col:132> 'int' 0
|   |             `-ParenExpr 0x55e0f64d99e8 <col:136, col:349> 'int'
|   |               `-ConditionalOperator 0x55e0f64d99b8 <col:137, col:348> 'int'
|   |                 |-BinaryOperator 0x55e0f64d9568 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55e0f64d94f8 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55e0f64d9488 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55e0f64d9470 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55e0f64d9458 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55e0f64d93e8 <col:137> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55e0f64d9440 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55e0f64d9428 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55e0f64d9408 <col:156> '_Bool' lvalue Var 0x55e0f64d0978 'x$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55e0f64d94e0 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55e0f64d94c8 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55e0f64d94a8 <col:174> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55e0f64d9550 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55e0f64d9538 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55e0f64d9518 <col:193> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |                 |-ParenExpr 0x55e0f64d96c8 <col:210, col:252> 'int'
|   |                 | `-ConditionalOperator 0x55e0f64d9698 <col:211, col:251> 'int'
|   |                 |   |-ImplicitCastExpr 0x55e0f64d9638 <col:211> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x55e0f64d9620 <col:211> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x55e0f64d9588 <col:211> '_Bool' lvalue Var 0x55e0f64d0df8 'weak$$choice0' '_Bool'
|   |                 |   |-ImplicitCastExpr 0x55e0f64d9668 <col:227> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x55e0f64d9650 <col:227> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x55e0f64d95a8 <col:227> '_Bool' lvalue Var 0x55e0f64d0978 'x$r_buff1_thd3' '_Bool'
|   |                 |   `-ImplicitCastExpr 0x55e0f64d9680 <col:244, col:251> 'int' <IntegralCast>
|   |                 |     `-CStyleCastExpr 0x55e0f64d95f8 <col:244, col:251> '_Bool' <IntegralToBoolean>
|   |                 |       `-IntegerLiteral 0x55e0f64d95c8 <col:251> 'int' 0
|   |                 `-ParenExpr 0x55e0f64d9998 <col:256, col:348> 'int'
|   |                   `-ConditionalOperator 0x55e0f64d9968 <col:257, col:347> 'int'
|   |                     |-BinaryOperator 0x55e0f64d9868 <col:257, col:312> 'int' '&&'
|   |                     | |-BinaryOperator 0x55e0f64d97f8 <col:257, col:293> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55e0f64d9788 <col:257, col:275> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55e0f64d9740 <col:257> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55e0f64d9728 <col:257> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55e0f64d96e8 <col:257> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55e0f64d9770 <col:275> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55e0f64d9758 <col:275> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55e0f64d9708 <col:275> '_Bool' lvalue Var 0x55e0f64d0978 'x$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55e0f64d97e0 <col:293> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55e0f64d97c8 <col:293> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55e0f64d97a8 <col:293> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55e0f64d9850 <col:311, col:312> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55e0f64d9838 <col:312> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55e0f64d9818 <col:312> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x55e0f64d9938 <col:329, col:336> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55e0f64d98b8 <col:329, col:336> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55e0f64d9888 <col:336> 'int' 0
|   |                     `-ImplicitCastExpr 0x55e0f64d9950 <col:340, col:347> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55e0f64d9910 <col:340, col:347> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55e0f64d98e0 <col:347> 'int' 0
|   |-BinaryOperator 0x55e0f64d9c30 <line:792:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d9bb8 <col:3> '_Bool' lvalue Var 0x55e0f64cff20 '__unbuffered_p2_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55e0f64d9c08 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55e0f64d9bd8 <col:45> 'int' 1
|   |-BinaryOperator 0x55e0f64d9ca8 <line:793:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x55e0f64d9c50 <col:3> 'int *' lvalue Var 0x55e0f64cffa0 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x55e0f64d9c90 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x55e0f64d9c70 <col:43> 'int' lvalue Var 0x55e0f64d04a0 'x' 'int'
|   |-BinaryOperator 0x55e0f64d9d20 <line:794:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55e0f64d9cc8 <col:3> 'int' lvalue Var 0x55e0f64cf980 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55e0f64d9d08 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e0f64d9ce8 <col:25> 'int' lvalue Var 0x55e0f64d04a0 'x' 'int'
|   |-BinaryOperator 0x55e0f64d9e50 <line:795:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55e0f64d9d40 <col:3> 'int' lvalue Var 0x55e0f64d04a0 'x' 'int'
|   | `-ConditionalOperator 0x55e0f64d9e20 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55e0f64d9dd8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55e0f64d9dc0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55e0f64d9d60 <col:7> '_Bool' lvalue Var 0x55e0f64d0538 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55e0f64d9df0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e0f64d9d80 <col:25> 'int' lvalue Var 0x55e0f64d05b8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55e0f64d9e08 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55e0f64d9da0 <col:37> 'int' lvalue Var 0x55e0f64d04a0 'x' 'int'
|   |-BinaryOperator 0x55e0f64d9ee8 <line:796:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64d9e70 <col:3> '_Bool' lvalue Var 0x55e0f64d0538 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55e0f64d9ec0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55e0f64d9e90 <col:28> 'int' 0
|   |-CallExpr 0x55e0f64d9f40 <line:797:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e0f64d9f28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0f64d9f08 <col:3> 'void ()' Function 0x55e0f6476570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e0f64d9fc0 <line:798:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e0f64d9f80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0f64d9f60 <col:3> 'void ()' Function 0x55e0f64764b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e0f64da038 <line:799:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55e0f64d9fe0 <col:3> 'int' lvalue Var 0x55e0f64d0290 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x55e0f64da020 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e0f64da000 <col:25> 'int' lvalue Var 0x55e0f64d0d60 'y' 'int'
|   |-CallExpr 0x55e0f64da090 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e0f64da078 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0f64da058 <col:3> 'void ()' Function 0x55e0f6476570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e0f64da0e8 <line:801:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e0f64da0d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0f64da0b0 <col:3> 'void ()' Function 0x55e0f64764b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e0f64da3d0 <line:802:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55e0f64da108 <col:3> 'int' lvalue Var 0x55e0f64d04a0 'x' 'int'
|   | `-ConditionalOperator 0x55e0f64da3a0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55e0f64da1c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55e0f64da180 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55e0f64da168 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55e0f64da128 <col:7> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55e0f64da1b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55e0f64da198 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55e0f64da148 <col:25> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55e0f64da388 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e0f64da1e8 <col:42> 'int' lvalue Var 0x55e0f64d0af0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55e0f64da368 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55e0f64da338 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55e0f64da2a8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55e0f64da260 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55e0f64da248 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55e0f64da208 <col:55> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55e0f64da290 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55e0f64da278 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55e0f64da228 <col:73> '_Bool' lvalue Var 0x55e0f64d0978 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55e0f64da308 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e0f64da2c8 <col:90> 'int' lvalue Var 0x55e0f64d0be8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55e0f64da320 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e0f64da2e8 <col:102> 'int' lvalue Var 0x55e0f64d04a0 'x' 'int'
|   |-BinaryOperator 0x55e0f64da5d8 <line:803:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64da3f0 <col:3> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e0f64da5c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e0f64da590 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55e0f64da4b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55e0f64da468 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55e0f64da450 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55e0f64da410 <col:20> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55e0f64da498 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55e0f64da480 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55e0f64da430 <col:38> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55e0f64da548 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e0f64da500 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e0f64da4d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55e0f64da578 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e0f64da560 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e0f64da528 <col:66> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55e0f64da8c0 <line:804:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64da5f8 <col:3> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e0f64da8a8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e0f64da878 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55e0f64da798 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55e0f64da6b8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55e0f64da670 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55e0f64da658 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55e0f64da618 <col:20> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55e0f64da6a0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55e0f64da688 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55e0f64da638 <col:38> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55e0f64da778 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55e0f64da730 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55e0f64da718 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55e0f64da6d8 <col:56> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55e0f64da760 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55e0f64da748 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55e0f64da6f8 <col:74> '_Bool' lvalue Var 0x55e0f64d0978 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55e0f64da830 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e0f64da7e8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e0f64da7b8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55e0f64da860 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e0f64da848 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e0f64da810 <col:102> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55e0f64daac8 <line:805:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64da8e0 <col:3> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55e0f64daab0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e0f64daa80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55e0f64da9a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55e0f64da958 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55e0f64da940 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55e0f64da900 <col:20> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55e0f64da988 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55e0f64da970 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55e0f64da920 <col:38> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55e0f64daa38 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e0f64da9f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e0f64da9c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55e0f64daa68 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e0f64daa50 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e0f64daa18 <col:66> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55e0f64dadb0 <line:806:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55e0f64daae8 <col:3> '_Bool' lvalue Var 0x55e0f64d0978 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55e0f64dad98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e0f64dad68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55e0f64dac88 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55e0f64daba8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55e0f64dab60 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55e0f64dab48 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55e0f64dab08 <col:20> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55e0f64dab90 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55e0f64dab78 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55e0f64dab28 <col:38> '_Bool' lvalue Var 0x55e0f64d0798 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55e0f64dac68 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55e0f64dac20 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55e0f64dac08 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55e0f64dabc8 <col:56> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55e0f64dac50 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55e0f64dac38 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55e0f64dabe8 <col:74> '_Bool' lvalue Var 0x55e0f64d0978 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55e0f64dad20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e0f64dacd8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e0f64daca8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55e0f64dad50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e0f64dad38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e0f64dad00 <col:102> '_Bool' lvalue Var 0x55e0f64d0978 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55e0f64dae08 <line:807:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e0f64dadf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0f64dadd0 <col:3> 'void ()' Function 0x55e0f6476570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e0f64dae60 <line:808:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e0f64dae48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0f64dae28 <col:3> 'void ()' Function 0x55e0f64764b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e0f64daf18 <line:809:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55e0f64dae80 <col:3> 'int' lvalue Var 0x55e0f64cf740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55e0f64daef8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55e0f64daee0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e0f64daea0 <col:22> 'int' lvalue Var 0x55e0f64cf740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55e0f64daec0 <col:41> 'int' 1
|   |-CallExpr 0x55e0f64daf70 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e0f64daf58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e0f64daf38 <col:3> 'void ()' Function 0x55e0f6476570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55e0f64db008 <line:811:3, col:36>
|     `-CallExpr 0x55e0f64dafe8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55e0f64dafd0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55e0f64daf90 <col:10> 'void *(void)' Function 0x55e0f6475fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55e0f64db150 prev 0x55e0f64cf488 <line:813:1, line:815:1> line:813:6 fence 'void ()'
| `-CompoundStmt 0x55e0f64db1f0 <line:814:1, line:815:1>
|-FunctionDecl 0x55e0f64db220 prev 0x55e0f64cf548 <line:816:1, line:818:1> line:816:6 isync 'void ()'
| `-CompoundStmt 0x55e0f64db2c0 <line:817:1, line:818:1>
|-FunctionDecl 0x55e0f64db2f0 prev 0x55e0f64cf608 <line:819:1, line:821:1> line:819:6 lwfence 'void ()'
| `-CompoundStmt 0x55e0f64db390 <line:820:1, line:821:1>
`-FunctionDecl 0x55e0f64db3f8 <line:822:1, line:848:1> line:822:5 main 'int ()'
  `-CompoundStmt 0x55e0f64dd320 <line:823:1, line:848:1>
    |-DeclStmt 0x55e0f64db510 <line:824:3, col:18>
    | `-VarDecl 0x55e0f64db4a8 <col:3, col:13> col:13 used t2454 'pthread_t':'unsigned long'
    |-CallExpr 0x55e0f64db718 <line:825:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55e0f64db700 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e0f64db528 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55e0f64b69d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55e0f64db568 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55e0f64db548 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55e0f64db4a8 't2454' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55e0f64db758 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55e0f64db5e0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55e0f64db5b8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55e0f64db580 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55e0f64db770 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e0f64db600 <col:39> 'void *(void *)' Function 0x55e0f64d1048 'P0' 'void *(void *)'
    | `-ParenExpr 0x55e0f64db680 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55e0f64db658 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55e0f64db620 <col:52> 'int' 0
    |-DeclStmt 0x55e0f64db800 <line:826:3, col:18>
    | `-VarDecl 0x55e0f64db798 <col:3, col:13> col:13 used t2455 'pthread_t':'unsigned long'
    |-CallExpr 0x55e0f64db9a8 <line:827:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55e0f64db990 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e0f64db818 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55e0f64b69d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55e0f64db858 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55e0f64db838 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55e0f64db798 't2455' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55e0f64db9e8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55e0f64db8d0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55e0f64db8a8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55e0f64db870 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55e0f64dba00 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e0f64db8f0 <col:39> 'void *(void *)' Function 0x55e0f64d4230 'P1' 'void *(void *)'
    | `-ParenExpr 0x55e0f64db970 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55e0f64db948 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55e0f64db910 <col:52> 'int' 0
    |-DeclStmt 0x55e0f64dba90 <line:828:3, col:18>
    | `-VarDecl 0x55e0f64dba28 <col:3, col:13> col:13 used t2456 'pthread_t':'unsigned long'
    |-CallExpr 0x55e0f64dbc38 <line:829:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55e0f64dbc20 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e0f64dbaa8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55e0f64b69d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55e0f64dbae8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55e0f64dbac8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55e0f64dba28 't2456' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55e0f64dbc78 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55e0f64dbb60 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55e0f64dbb38 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55e0f64dbb00 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55e0f64dbc90 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e0f64dbb80 <col:39> 'void *(void *)' Function 0x55e0f64d5a40 'P2' 'void *(void *)'
    | `-ParenExpr 0x55e0f64dbc00 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55e0f64dbbd8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55e0f64dbba0 <col:52> 'int' 0
    |-CallExpr 0x55e0f64dbce0 <line:830:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55e0f64dbcc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e0f64dbca8 <col:3> 'void ()' Function 0x55e0f64764b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55e0f64dbdb0 <line:831:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55e0f64dbd00 <col:3> '_Bool' lvalue Var 0x55e0f64d0328 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55e0f64dbd98 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55e0f64dbd78 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55e0f64dbd60 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55e0f64dbd20 <col:21> 'int' lvalue Var 0x55e0f64cf740 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55e0f64dbd40 <col:41> 'int' 3
    |-CallExpr 0x55e0f64dbe08 <line:832:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55e0f64dbdf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e0f64dbdd0 <col:3> 'void ()' Function 0x55e0f6476570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55e0f64dbe80 <line:833:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55e0f64dbe68 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e0f64dbe28 <col:3> 'void (int)' Function 0x55e0f6475e50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55e0f64dbec0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55e0f64dbea8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55e0f64dbe48 <col:21> '_Bool' lvalue Var 0x55e0f64d0328 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55e0f64dbf10 <line:834:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55e0f64dbef8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e0f64dbed8 <col:3> 'void ()' Function 0x55e0f64764b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55e0f64dc218 <line:835:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55e0f64dbf30 <col:3> 'int' lvalue Var 0x55e0f64d04a0 'x' 'int'
    | `-ConditionalOperator 0x55e0f64dc1e8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55e0f64dc010 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55e0f64dbfa8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55e0f64dbf90 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55e0f64dbf50 <col:7> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55e0f64dbff8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55e0f64dbfe0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55e0f64dbf70 <col:25> '_Bool' lvalue Var 0x55e0f64d0630 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55e0f64dc1d0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55e0f64dc030 <col:42> 'int' lvalue Var 0x55e0f64d0af0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55e0f64dc1b0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55e0f64dc180 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55e0f64dc0f0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55e0f64dc0a8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55e0f64dc090 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55e0f64dc050 <col:55> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55e0f64dc0d8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55e0f64dc0c0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55e0f64dc070 <col:73> '_Bool' lvalue Var 0x55e0f64d0810 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55e0f64dc150 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55e0f64dc110 <col:90> 'int' lvalue Var 0x55e0f64d0be8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55e0f64dc168 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55e0f64dc130 <col:102> 'int' lvalue Var 0x55e0f64d04a0 'x' 'int'
    |-BinaryOperator 0x55e0f64dc420 <line:836:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55e0f64dc238 <col:3> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55e0f64dc408 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e0f64dc3d8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55e0f64dc2f8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55e0f64dc2b0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55e0f64dc298 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55e0f64dc258 <col:20> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55e0f64dc2e0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55e0f64dc2c8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55e0f64dc278 <col:38> '_Bool' lvalue Var 0x55e0f64d0630 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55e0f64dc390 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55e0f64dc348 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55e0f64dc318 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55e0f64dc3c0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55e0f64dc3a8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55e0f64dc370 <col:66> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55e0f64dc708 <line:837:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55e0f64dc440 <col:3> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55e0f64dc6f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e0f64dc6c0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55e0f64dc5e0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55e0f64dc500 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55e0f64dc4b8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55e0f64dc4a0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55e0f64dc460 <col:20> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55e0f64dc4e8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55e0f64dc4d0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55e0f64dc480 <col:38> '_Bool' lvalue Var 0x55e0f64d0630 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55e0f64dc5c0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55e0f64dc578 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55e0f64dc560 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55e0f64dc520 <col:56> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55e0f64dc5a8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55e0f64dc590 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55e0f64dc540 <col:74> '_Bool' lvalue Var 0x55e0f64d0810 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55e0f64dc678 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55e0f64dc630 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55e0f64dc600 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55e0f64dc6a8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55e0f64dc690 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55e0f64dc658 <col:102> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55e0f64dc910 <line:838:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55e0f64dc728 <col:3> '_Bool' lvalue Var 0x55e0f64d0630 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55e0f64dc8f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e0f64dc8c8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55e0f64dc7e8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55e0f64dc7a0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55e0f64dc788 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55e0f64dc748 <col:20> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55e0f64dc7d0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55e0f64dc7b8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55e0f64dc768 <col:38> '_Bool' lvalue Var 0x55e0f64d0630 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55e0f64dc880 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55e0f64dc838 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55e0f64dc808 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55e0f64dc8b0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55e0f64dc898 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55e0f64dc860 <col:66> '_Bool' lvalue Var 0x55e0f64d0630 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55e0f64dcbf8 <line:839:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55e0f64dc930 <col:3> '_Bool' lvalue Var 0x55e0f64d0810 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55e0f64dcbe0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e0f64dcbb0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55e0f64dcad0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55e0f64dc9f0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55e0f64dc9a8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55e0f64dc990 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55e0f64dc950 <col:20> '_Bool' lvalue Var 0x55e0f64d0b68 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55e0f64dc9d8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55e0f64dc9c0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55e0f64dc970 <col:38> '_Bool' lvalue Var 0x55e0f64d0630 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55e0f64dcab0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55e0f64dca68 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55e0f64dca50 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55e0f64dca10 <col:56> '_Bool' lvalue Var 0x55e0f64d0c60 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55e0f64dca98 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55e0f64dca80 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55e0f64dca30 <col:74> '_Bool' lvalue Var 0x55e0f64d0810 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55e0f64dcb68 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55e0f64dcb20 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55e0f64dcaf0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55e0f64dcb98 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55e0f64dcb80 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55e0f64dcb48 <col:102> '_Bool' lvalue Var 0x55e0f64d0810 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55e0f64dcc50 <line:840:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55e0f64dcc38 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e0f64dcc18 <col:3> 'void ()' Function 0x55e0f6476570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55e0f64dcca8 <line:841:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55e0f64dcc90 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e0f64dcc70 <col:3> 'void ()' Function 0x55e0f64764b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55e0f64dcd40 <line:842:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55e0f64dccc8 <col:3> '_Bool' lvalue Var 0x55e0f64d0e70 'weak$$choice1' '_Bool'
    | `-CallExpr 0x55e0f64dcd20 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55e0f64dcd08 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55e0f64dcce8 <col:19> '_Bool (void)' Function 0x55e0f6475c80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55e0f64dcf78 <line:843:3, col:140> 'int' '='
    | |-DeclRefExpr 0x55e0f64dcd60 <col:3> 'int' lvalue Var 0x55e0f64cf980 '__unbuffered_p2_EAX' 'int'
    | `-ConditionalOperator 0x55e0f64dcf48 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x55e0f64dcf18 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55e0f64dcf00 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55e0f64dcd80 <col:25> '_Bool' lvalue Var 0x55e0f64cff20 '__unbuffered_p2_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x55e0f64dcec0 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x55e0f64dce90 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x55e0f64dce48 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x55e0f64dce30 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55e0f64dcda0 <col:61> '_Bool' lvalue Var 0x55e0f64d0e70 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x55e0f64dce60 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x55e0f64dcdf8 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x55e0f64dcde0 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x55e0f64dcdc0 <col:78> 'int *' lvalue Var 0x55e0f64cffa0 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x55e0f64dce78 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55e0f64dce10 <col:117> 'int' lvalue Var 0x55e0f64cf980 '__unbuffered_p2_EAX' 'int'
    |   `-ImplicitCastExpr 0x55e0f64dcf30 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55e0f64dcee0 <col:140> 'int' lvalue Var 0x55e0f64cf980 '__unbuffered_p2_EAX' 'int'
    |-BinaryOperator 0x55e0f64dd1c8 <line:844:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x55e0f64dcf98 <col:3> '_Bool' lvalue Var 0x55e0f64d03a0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55e0f64dd1b0 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55e0f64dd198 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55e0f64dd178 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x55e0f64dd158 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x55e0f64dd0c0 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x55e0f64dd028 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x55e0f64dd010 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x55e0f64dcfb8 <col:23> 'int' lvalue Var 0x55e0f64cf860 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x55e0f64dcff0 <col:46> 'int' 0
    |         | `-BinaryOperator 0x55e0f64dd0a0 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55e0f64dd088 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55e0f64dd048 <col:51> 'int' lvalue Var 0x55e0f64cf980 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x55e0f64dd068 <col:74> 'int' 1
    |         `-BinaryOperator 0x55e0f64dd138 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x55e0f64dd120 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55e0f64dd0e0 <col:79> 'int' lvalue Var 0x55e0f64d0290 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x55e0f64dd100 <col:102> 'int' 0
    |-CallExpr 0x55e0f64dd220 <line:845:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55e0f64dd208 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e0f64dd1e8 <col:3> 'void ()' Function 0x55e0f6476570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55e0f64dd298 <line:846:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55e0f64dd280 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e0f64dd240 <col:3> 'void (int)' Function 0x55e0f6476238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55e0f64dd2d8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55e0f64dd2c0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55e0f64dd260 <col:21> '_Bool' lvalue Var 0x55e0f64d03a0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55e0f64dd310 <line:847:3, col:10>
      `-IntegerLiteral 0x55e0f64dd2f0 <col:10> 'int' 0
