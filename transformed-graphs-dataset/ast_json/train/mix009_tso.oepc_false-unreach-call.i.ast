TranslationUnitDecl 0x563d4e5d1f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x563d4e5d2848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x563d4e5d2520 '__int128'
|-TypedefDecl 0x563d4e5d28b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x563d4e5d2540 'unsigned __int128'
|-TypedefDecl 0x563d4e5d2bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x563d4e5d2990 'struct __NSConstantString_tag'
|   `-Record 0x563d4e5d2910 '__NSConstantString_tag'
|-TypedefDecl 0x563d4e5d2c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x563d4e5d2c20 'char *'
|   `-BuiltinType 0x563d4e5d2020 'char'
|-TypedefDecl 0x563d4e611b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x563d4e5d2f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x563d4e5d2d40 'struct __va_list_tag'
|     `-Record 0x563d4e5d2cc0 '__va_list_tag'
|-FunctionDecl 0x563d4e611ca0 <pthread-wmm/mix009_tso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x563d4e611bd0 <col:31> col:34 'int'
|-FunctionDecl 0x563d4e611e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x563d4e611f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x563d4e6120d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x563d4e612048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x563d4e612308 <col:40, col:99>
|   |-IfStmt 0x563d4e6122d8 <col:42, col:88>
|   | |-UnaryOperator 0x563d4e6121b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x563d4e6121a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x563d4e612180 <col:47> 'int' lvalue ParmVar 0x563d4e612048 'expression' 'int'
|   | `-CompoundStmt 0x563d4e6122c0 <col:59, col:88>
|   |   `-LabelStmt 0x563d4e6122a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x563d4e612238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x563d4e612220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x563d4e6121d0 <col:68> 'void () __attribute__((noreturn))' Function 0x563d4e611f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x563d4e6122f0 <col:89>
|   `-ReturnStmt 0x563d4e6122f8 <col:91>
|-FunctionDecl 0x563d4e612350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x563d4e612410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x563d4e612790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563d4e6124c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x563d4e612548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x563d4e6125c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x563d4e612648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x563d4e612850 <line:10:22>
|-FunctionDecl 0x563d4e6388a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563d4e6128c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x563d4e612940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x563d4e6129c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x563d4e612a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x563d4e638960 <line:13:22>
|-FunctionDecl 0x563d4e638c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563d4e6389d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x563d4e638a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x563d4e638ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x563d4e638cc8 <line:15:22>
|-TypedefDecl 0x563d4e638d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x563d4e5d20e0 'unsigned char'
|-TypedefDecl 0x563d4e638da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x563d4e5d2100 'unsigned short'
|-TypedefDecl 0x563d4e638e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x563d4e5d2120 'unsigned int'
|-TypedefDecl 0x563d4e638e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x563d4e5d2140 'unsigned long'
|-TypedefDecl 0x563d4e638ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x563d4e5d2040 'signed char'
|-TypedefDecl 0x563d4e638f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x563d4e5d20e0 'unsigned char'
|-TypedefDecl 0x563d4e638fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x563d4e5d2060 'short'
|-TypedefDecl 0x563d4e639048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x563d4e5d2100 'unsigned short'
|-TypedefDecl 0x563d4e6390b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x563d4e5d2080 'int'
|-TypedefDecl 0x563d4e639128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x563d4e5d2120 'unsigned int'
|-TypedefDecl 0x563d4e639198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x563d4e5d20a0 'long'
|-TypedefDecl 0x563d4e639208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x563d4e5d2140 'unsigned long'
|-TypedefDecl 0x563d4e639278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x563d4e5d20a0 'long'
|-TypedefDecl 0x563d4e6392e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x563d4e5d2140 'unsigned long'
|-TypedefDecl 0x563d4e639358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x563d4e5d2140 'unsigned long'
|-TypedefDecl 0x563d4e6393c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x563d4e5d2120 'unsigned int'
|-TypedefDecl 0x563d4e639438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x563d4e5d2120 'unsigned int'
|-TypedefDecl 0x563d4e6394a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x563d4e5d2140 'unsigned long'
|-TypedefDecl 0x563d4e639518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x563d4e5d2140 'unsigned long'
|-TypedefDecl 0x563d4e639588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x563d4e5d2120 'unsigned int'
|-TypedefDecl 0x563d4e6395f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x563d4e5d2140 'unsigned long'
|-TypedefDecl 0x563d4e639668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x563d4e5d20a0 'long'
|-TypedefDecl 0x563d4e6396d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x563d4e5d20a0 'long'
|-TypedefDecl 0x563d4e639748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x563d4e5d2080 'int'
|-RecordDecl 0x563d4e6397a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x563d4e639918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x563d4e6399d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x563d4e639970 'struct __fsid_t' sugar
|   `-RecordType 0x563d4e639820 '__fsid_t'
|     `-Record 0x563d4e6397a0 ''
|-TypedefDecl 0x563d4e639a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x563d4e5d20a0 'long'
|-TypedefDecl 0x563d4e639ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x563d4e5d2140 'unsigned long'
|-TypedefDecl 0x563d4e639b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x563d4e5d2140 'unsigned long'
|-TypedefDecl 0x563d4e639ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x563d4e5d2120 'unsigned int'
|-TypedefDecl 0x563d4e639c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x563d4e5d20a0 'long'
|-TypedefDecl 0x563d4e639c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x563d4e5d2120 'unsigned int'
|-TypedefDecl 0x563d4e639cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x563d4e5d20a0 'long'
|-TypedefDecl 0x563d4e639d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x563d4e5d2080 'int'
|-TypedefDecl 0x563d4e639dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x563d4e5d2080 'int'
|-TypedefDecl 0x563d4e639e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x563d4e5d2080 'int'
|-TypedefDecl 0x563d4e639eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x563d4e5d27a0 'void *'
|   `-BuiltinType 0x563d4e5d1fe0 'void'
|-TypedefDecl 0x563d4e639f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x563d4e5d20a0 'long'
|-TypedefDecl 0x563d4e639f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x563d4e5d20a0 'long'
|-TypedefDecl 0x563d4e63a008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x563d4e5d20a0 'long'
|-TypedefDecl 0x563d4e63a078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x563d4e5d2140 'unsigned long'
|-TypedefDecl 0x563d4e63a0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x563d4e5d2140 'unsigned long'
|-TypedefDecl 0x563d4e63a158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x563d4e5d2140 'unsigned long'
|-TypedefDecl 0x563d4e63a1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x563d4e5d2140 'unsigned long'
|-TypedefDecl 0x563d4e63a238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x563d4e5d20a0 'long'
|-TypedefDecl 0x563d4e63a2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x563d4e5d20a0 'long'
|-TypedefDecl 0x563d4e63a318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x563d4e5d20a0 'long'
|-TypedefDecl 0x563d4e63a388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x563d4e5d2140 'unsigned long'
|-TypedefDecl 0x563d4e63a418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x563d4e63a3e0 '__off64_t' sugar
|   |-Typedef 0x563d4e6396d8 '__off64_t'
|   `-BuiltinType 0x563d4e5d20a0 'long'
|-TypedefDecl 0x563d4e63a510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x563d4e63a4d0 '__quad_t *'
|   `-TypedefType 0x563d4e63a470 '__quad_t' sugar
|     |-Typedef 0x563d4e639278 '__quad_t'
|     `-BuiltinType 0x563d4e5d20a0 'long'
|-TypedefDecl 0x563d4e63a580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x563d4e5d2c20 'char *'
|   `-BuiltinType 0x563d4e5d2020 'char'
|-TypedefDecl 0x563d4e63a5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x563d4e5d20a0 'long'
|-TypedefDecl 0x563d4e63a660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x563d4e5d2120 'unsigned int'
|-FunctionDecl 0x563d4e63a7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x563d4e63a6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x563d4e63aae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x563d4e63aad8 <line:72:3, col:34>
|     `-CallExpr 0x563d4e63aa98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x563d4e63aa80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x563d4e63aa10 <col:10> '<builtin fn type>' Function 0x563d4e63a880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x563d4e63aac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x563d4e63aa30 <col:29> 'unsigned int' lvalue ParmVar 0x563d4e63a6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x563d4e63a880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x563d4e63a920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x563d4e63a990 <col:10> Implicit
| `-ConstAttr 0x563d4e63a9e8 <col:10> Implicit
|-FunctionDecl 0x563d4e63ac40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x563d4e63ab38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x563d4e63af58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x563d4e63af48 <line:77:3, col:34>
|     `-CallExpr 0x563d4e63af08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x563d4e63aef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x563d4e63ae78 <col:10> '<builtin fn type>' Function 0x563d4e63ace8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x563d4e63af30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x563d4e63ae98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x563d4e63ab38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x563d4e63ace8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x563d4e63ad88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x563d4e63adf8 <col:10> Implicit
| `-ConstAttr 0x563d4e63ae50 <col:10> Implicit
|-TypedefDecl 0x563d4e63af88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x563d4e5d2140 'unsigned long'
|-TypedefDecl 0x563d4e63b018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x563d4e63afe0 '__time_t' sugar
|   |-Typedef 0x563d4e639c18 '__time_t'
|   `-BuiltinType 0x563d4e5d20a0 'long'
|-RecordDecl 0x563d4e63b070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x563d4e63b128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x563d4e63b1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x563d4e63b248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x563d4e63b210 '__pid_t' sugar
|   |-Typedef 0x563d4e639748 '__pid_t'
|   `-BuiltinType 0x563d4e5d2080 'int'
|-RecordDecl 0x563d4e63b2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x563d4e63b360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x563d4e63b3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x563d4e63b470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x563d4e63b4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x563d4e5d2140 'unsigned long'
|-RecordDecl 0x563d4e63b530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x563d4e63b7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x563d4e63d8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x563d4e63b810 'struct cpu_set_t' sugar
|   `-RecordType 0x563d4e63b5b0 'cpu_set_t'
|     `-Record 0x563d4e63b530 ''
|-FunctionDecl 0x563d4e63db88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x563d4e63d958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563d4e63da60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x563d4e63dc38 <line:107:19>
|-FunctionDecl 0x563d4e63de10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x563d4e63dca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x563d4e63deb8 <col:69>
|-FunctionDecl 0x563d4e63e030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x563d4e63df20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x563d4e63e0d8 <col:64>
|-FunctionDecl 0x563d4e63e398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x563d4e63e140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563d4e63e278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x563d4e63e448 <line:113:22>
|-FunctionDecl 0x563d4e63e6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x563d4e63e4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563d4e63e5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x563d4e63e778 <col:88>
|-FunctionDecl 0x563d4e63ea98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x563d4e63e7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563d4e63e8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x563d4e63e950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x563d4e63eb50 <col:62>
|-FunctionDecl 0x563d4e63ecc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x563d4e63ebb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x563d4e63ed70 <col:63>
|-FunctionDecl 0x563d4e63ee98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x563d4e63ef38 <col:47>
|-FunctionDecl 0x563d4e63f040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x563d4e63efa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x563d4e63f0e8 <col:69>
|-FunctionDecl 0x563d4e63f1f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x563d4e63f158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x563d4e63f298 <col:69>
|-FunctionDecl 0x563d4e63f558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563d4e63f300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563d4e63f438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x563d4e63f608 <col:88>
|-TypedefDecl 0x563d4e63f698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x563d4e63f660 '__clock_t' sugar
|   |-Typedef 0x563d4e639a58 '__clock_t'
|   `-BuiltinType 0x563d4e5d20a0 'long'
|-TypedefDecl 0x563d4e63f728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x563d4e63f6f0 '__clockid_t' sugar
|   |-Typedef 0x563d4e639e48 '__clockid_t'
|   `-BuiltinType 0x563d4e5d2080 'int'
|-TypedefDecl 0x563d4e63f7b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x563d4e63f780 '__timer_t' sugar
|   |-Typedef 0x563d4e639eb8 '__timer_t'
|   `-PointerType 0x563d4e5d27a0 'void *'
|     `-BuiltinType 0x563d4e5d1fe0 'void'
|-RecordDecl 0x563d4e63f810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x563d4e63f8e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x563d4e63f950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x563d4e63f9b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x563d4e63fa20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x563d4e63fa88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x563d4e63faf0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x563d4e63fb58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x563d4e63fbc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x563d4e63fc28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x563d4e63fc90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x563d4e63fcf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x563d4e63fd48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x563d4e63fe18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x563d4e63fe88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x563d4e63ff30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x563d4e640100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x563d4e6401a0 <col:45>
|-FunctionDecl 0x563d4e640380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x563d4e640270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x563d4e640428 <col:54>
|-FunctionDecl 0x563d4e640628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x563d4e640490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x563d4e640508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x563d4e6406d8 <line:157:22>
| `-ConstAttr 0x563d4e640730 <col:63>
|-FunctionDecl 0x563d4e641560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563d4e640828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x563d4e641608 <col:56>
|-FunctionDecl 0x563d4e6419b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x563d4e641678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x563d4e6416f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563d4e641770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x563d4e641868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x563d4e641a70 <col:54>
|-RecordDecl 0x563d4e641ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x563d4e641b78 parent 0x563d4e5d1f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x563d4e641dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x563d4e641e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x563d4e641ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x563d4e641f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x563d4e642038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x563d4e642158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x563d4e642100 'struct __locale_struct *'
|   `-ElaboratedType 0x563d4e642090 'struct __locale_struct' sugar
|     `-RecordType 0x563d4e641b50 'struct __locale_struct'
|       `-Record 0x563d4e641ac8 '__locale_struct'
|-TypedefDecl 0x563d4e642208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x563d4e6421d0 '__locale_t' sugar
|   |-Typedef 0x563d4e642158 '__locale_t'
|   `-PointerType 0x563d4e642100 'struct __locale_struct *'
|     `-ElaboratedType 0x563d4e642090 'struct __locale_struct' sugar
|       `-RecordType 0x563d4e641b50 'struct __locale_struct'
|         `-Record 0x563d4e641ac8 '__locale_struct'
|-FunctionDecl 0x563d4e642610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x563d4e642278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x563d4e6422f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563d4e642370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x563d4e642400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x563d4e642478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x563d4e6426d8 <col:40>
|-FunctionDecl 0x563d4e6428c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x563d4e6427a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x563d4e642970 <col:66>
|-FunctionDecl 0x563d4e642a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x563d4e6429d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x563d4e642b28 <col:69>
|-FunctionDecl 0x563d4e642d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x563d4e642b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563d4e642c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x563d4e642e08 <col:52>
|-FunctionDecl 0x563d4e642fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x563d4e642e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563d4e642f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x563d4e643060 <col:55>
|-FunctionDecl 0x563d4e6431f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x563d4e6430e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x563d4e6432a0 <col:62>
|-FunctionDecl 0x563d4e643418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x563d4e643308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x563d4e6434c0 <col:60>
|-FunctionDecl 0x563d4e643718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x563d4e643578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x563d4e6435f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x563d4e6437c8 <col:44>
|-FunctionDecl 0x563d4e6439d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x563d4e643830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563d4e6438b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x563d4e643a88 <col:49>
|-VarDecl 0x563d4e643b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x563d4e643c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x563d4e643c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x563d4e643d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x563d4e643e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x563d4e643f20 <col:42>
|-VarDecl 0x563d4e643f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x563d4e644010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x563d4e644198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x563d4e644088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x563d4e644240 <col:57>
|-FunctionDecl 0x563d4e644350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563d4e6442c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x563d4e6443f8 <col:56>
|-FunctionDecl 0x563d4e645540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563d4e644478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x563d4e6455e8 <col:59>
|-FunctionDecl 0x563d4e6456f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x563d4e645658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x563d4e645798 <col:48>
| `-ConstAttr 0x563d4e6457f0 <col:89>
|-FunctionDecl 0x563d4e645a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x563d4e6458a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x563d4e645938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x563d4e645cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563d4e645b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563d4e645bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x563d4e645d68 <col:88>
|-FunctionDecl 0x563d4e645f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563d4e645dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563d4e645e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x563d4e645fb0 <col:88>
|-FunctionDecl 0x563d4e6461c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x563d4e646018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563d4e6460a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x563d4e646278 <line:208:22>
|-FunctionDecl 0x563d4e6465e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x563d4e6462e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563d4e646360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x563d4e6463f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x563d4e646480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x563d4e6468e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x563d4e6466e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x563d4e6467c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x563d4e646998 <col:85>
|-FunctionDecl 0x563d4e646d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x563d4e646a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563d4e646b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x563d4e646c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x563d4e646e40 <col:52>
|-FunctionDecl 0x563d4e646fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x563d4e646ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x563d4e647060 <col:61>
|-FunctionDecl 0x563d4e647560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x563d4e6470c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x563d4e647148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x563d4e647278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x563d4e647368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x563d4e647620 <col:62>
|-FunctionDecl 0x563d4e647838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x563d4e647688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x563d4e647718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x563d4e6478e8 <line:221:22>
|-FunctionDecl 0x563d4e6479e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x563d4e647950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x563d4e647a90 <col:65>
|-TypedefDecl 0x563d4e647b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x563d4e5d2140 'unsigned long'
|-RecordDecl 0x563d4e647b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x563d4e647ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x563d4e647d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563d4e647db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x563d4e647d60 'union pthread_attr_t' sugar
|   `-RecordType 0x563d4e647be0 'union pthread_attr_t'
|     `-Record 0x563d4e647b58 'pthread_attr_t'
|-RecordDecl 0x563d4e647e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x563d4e647f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x563d4e648000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x563d4e6480b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x563d4e648050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x563d4e647e90 'struct __pthread_internal_list'
|     `-Record 0x563d4e647e10 '__pthread_internal_list'
|-RecordDecl 0x563d4e648120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x563d4e6481c8 parent 0x563d4e5d1f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x563d4e6482a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563d4e648308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x563d4e648370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x563d4e6483d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x563d4e648440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x563d4e6484a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x563d4e64c580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x563d4e64c630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x563d4e64c720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x563d4e64c788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563d4e64c910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x563d4e64c8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x563d4e6481a0 'pthread_mutex_t'
|     `-Record 0x563d4e648120 ''
|-RecordDecl 0x563d4e64c980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x563d4e64cac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563d4e64cb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563d4e64cbe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x563d4e64cb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x563d4e64ca00 'pthread_mutexattr_t'
|     `-Record 0x563d4e64c980 ''
|-RecordDecl 0x563d4e64cc50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x563d4e64ccf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x563d4e64cdc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563d4e64ce28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x563d4e64ce90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x563d4e64cef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x563d4e64cf60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x563d4e64cfc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x563d4e64d030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x563d4e64d098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x563d4e64d150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix009_tso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix009_tso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x563d4e64d240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x563d4e64d2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x563d4e64d3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x563d4e64d380 'union pthread_cond_t' sugar
|   `-RecordType 0x563d4e64ccd0 'pthread_cond_t'
|     `-Record 0x563d4e64cc50 ''
|-RecordDecl 0x563d4e64d450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x563d4e64d590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563d4e64d5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563d4e64d6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x563d4e64d650 'union pthread_condattr_t' sugar
|   `-RecordType 0x563d4e64d4d0 'pthread_condattr_t'
|     `-Record 0x563d4e64d450 ''
|-TypedefDecl 0x563d4e64d738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x563d4e5d2120 'unsigned int'
|-TypedefDecl 0x563d4e64d7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x563d4e5d2080 'int'
|-RecordDecl 0x563d4e64d800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x563d4e64d8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x563d4e64d970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563d4e64d9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x563d4e64da40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x563d4e64daa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x563d4e64db10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x563d4e64db78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x563d4e64dbe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x563d4e64dc48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x563d4e64dcb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x563d4e64dd18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x563d4e64dd80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x563d4e64de30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix009_tso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix009_tso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x563d4e64ded8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x563d4e64df40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563d4e64e090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x563d4e64e030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x563d4e64d880 'pthread_rwlock_t'
|     `-Record 0x563d4e64d800 ''
|-RecordDecl 0x563d4e64e100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x563d4e64e240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x563d4e64e2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563d4e64e360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x563d4e64e300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x563d4e64e180 'pthread_rwlockattr_t'
|     `-Record 0x563d4e64e100 ''
|-TypedefDecl 0x563d4e64e3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x563d4e5d2084 'volatile int' volatile
|   `-BuiltinType 0x563d4e5d2080 'int'
|-RecordDecl 0x563d4e64e440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x563d4e6505b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x563d4e650618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563d4e6506d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x563d4e650670 'union pthread_barrier_t' sugar
|   `-RecordType 0x563d4e64e4c0 'pthread_barrier_t'
|     `-Record 0x563d4e64e440 ''
|-RecordDecl 0x563d4e650740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x563d4e650840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563d4e6508a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563d4e650960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x563d4e650900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x563d4e6507c0 'pthread_barrierattr_t'
|     `-Record 0x563d4e650740 ''
|-TypedefDecl 0x563d4e650a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x563d4e650a10 'long [8]' 8 
|   `-BuiltinType 0x563d4e5d20a0 'long'
|-EnumDecl 0x563d4e650ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x563d4e650b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x563d4e650be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x563d4e650c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x563d4e650d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x563d4e650d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x563d4e650da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x563d4e650df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x563d4e650e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x563d4e650e68 <col:26> 'int'
| |   `-DeclRefExpr 0x563d4e650e48 <col:26> 'int' EnumConstant 0x563d4e650d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x563d4e650f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x563d4e650ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x563d4e650ed0 <col:29> 'int' EnumConstant 0x563d4e650d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x563d4e650f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x563d4e650f78 <col:30> 'int'
| |   `-DeclRefExpr 0x563d4e650f58 <col:30> 'int' EnumConstant 0x563d4e650da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x563d4e651018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x563d4e651000 <col:27> 'int'
|     `-DeclRefExpr 0x563d4e650fe0 <col:27> 'int' EnumConstant 0x563d4e650e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x563d4e651068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x563d4e651138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x563d4e6511c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x563d4e6511a8 <col:30> 'int'
| |   `-DeclRefExpr 0x563d4e651188 <col:30> 'int' EnumConstant 0x563d4e651138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x563d4e651210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x563d4e651298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x563d4e651280 <col:29> 'int'
|     `-DeclRefExpr 0x563d4e651260 <col:29> 'int' EnumConstant 0x563d4e651210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x563d4e6512e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x563d4e6513b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x563d4e651408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x563d4e651458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x563d4e6514a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x563d4e6515c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x563d4e651610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x563d4e651660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x563d4e6516e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x563d4e6516d0 <col:31> 'int'
|     `-DeclRefExpr 0x563d4e6516b0 <col:31> 'int' EnumConstant 0x563d4e6515c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x563d4e651738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x563d4e651808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x563d4e651858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x563d4e6518a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x563d4e651978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x563d4e6519c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x563d4e651a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x563d4e651ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x563d4e651b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x563d4e651b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x563d4e651dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x563d4e651e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x563d4e651e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x563d4e651fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x563d4e652008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x563d4e6520d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x563d4e652128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x563d4e652178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x563d4e652248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x563d4e652298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x563d4e6528f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x563d4e652390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x563d4e6524a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563d4e6526e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x563d4e652760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x563d4e6529b8 <col:47>
| |-NonNullAttr 0x563d4e652a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x563d4e652a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x563d4e652b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x563d4e652aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x563d4e652dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x563d4e652c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x563d4e652ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x563d4e652f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x563d4e652e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x563d4e653040 <col:60>
|-FunctionDecl 0x563d4e653190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x563d4e653230 <col:54>
| `-ConstAttr 0x563d4e653288 <col:95>
|-FunctionDecl 0x563d4e653458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x563d4e6532c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563d4e653338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x563d4e653508 <line:394:19>
| `-ConstAttr 0x563d4e653560 <col:60>
|-FunctionDecl 0x563d4e653f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x563d4e653e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x563d4e654010 <col:71>
| `-NonNullAttr 0x563d4e654068 <col:112, col:126> 1
|-FunctionDecl 0x563d4e654170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x563d4e6540b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x563d4e654218 <line:397:22>
| `-NonNullAttr 0x563d4e654270 <col:63, col:77> 1
|-FunctionDecl 0x563d4e654498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x563d4e6542b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x563d4e654338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x563d4e654548 <line:400:22>
| `-NonNullAttr 0x563d4e6545a0 <col:63, col:80> 1 2
|-FunctionDecl 0x563d4e6547a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563d4e6545e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563d4e654668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x563d4e654858 <line:403:22>
| `-NonNullAttr 0x563d4e6548b0 <col:63, col:77> 1
|-FunctionDecl 0x563d4e654b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x563d4e6548f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x563d4e6549a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x563d4e654bb8 <line:406:22>
| `-NonNullAttr 0x563d4e654c10 <col:63, col:80> 1 2
|-FunctionDecl 0x563d4e655e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x563d4e654c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563d4e654cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563d4e655ef8 <line:409:22>
| `-NonNullAttr 0x563d4e655f50 <col:63, col:77> 1
|-FunctionDecl 0x563d4e656188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563d4e655f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563d4e656028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x563d4e656238 <line:412:22>
| `-NonNullAttr 0x563d4e656290 <col:63, col:80> 1 2
|-FunctionDecl 0x563d4e6564c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563d4e6562d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x563d4e656368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x563d4e656578 <col:37>
| `-NonNullAttr 0x563d4e6565d0 <col:78, col:95> 1 2
|-FunctionDecl 0x563d4e6567b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563d4e656618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563d4e656698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x563d4e656868 <line:418:22>
| `-NonNullAttr 0x563d4e6568c0 <col:63, col:80> 1 2
|-FunctionDecl 0x563d4e656a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563d4e656908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563d4e656988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x563d4e656af8 <line:420:22>
| `-NonNullAttr 0x563d4e656b50 <col:63, col:77> 1
|-FunctionDecl 0x563d4e656cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563d4e656b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563d4e656c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x563d4e656da8 <line:423:22>
| `-NonNullAttr 0x563d4e657e30 <col:63, col:80> 1 2
|-FunctionDecl 0x563d4e657fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563d4e657e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563d4e657ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x563d4e658068 <line:426:22>
| `-NonNullAttr 0x563d4e6580c0 <col:63, col:77> 1
|-FunctionDecl 0x563d4e658268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563d4e658108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563d4e658188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x563d4e658318 <line:429:22>
| `-NonNullAttr 0x563d4e658370 <col:63, col:80> 1 2
|-FunctionDecl 0x563d4e6584f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563d4e6583b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563d4e658438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x563d4e6585a8 <line:431:22>
| `-NonNullAttr 0x563d4e658600 <col:63, col:77> 1
|-FunctionDecl 0x563d4e658828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x563d4e658648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563d4e6586c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x563d4e6588d8 <line:434:22>
| |-NonNullAttr 0x563d4e658930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x563d4e658968 <col:100> "" ""
|-FunctionDecl 0x563d4e658b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x563d4e6589b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563d4e658a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x563d4e658c28 <line:437:22>
| |-NonNullAttr 0x563d4e658c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x563d4e658cb8 <col:97> "" ""
|-FunctionDecl 0x563d4e658eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x563d4e658d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563d4e658d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x563d4e658f68 <line:440:22>
| `-NonNullAttr 0x563d4e658fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x563d4e659140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x563d4e659008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563d4e659080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563d4e6591f0 <line:443:22>
| `-NonNullAttr 0x563d4e659248 <col:63, col:77> 1
|-FunctionDecl 0x563d4e659538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x563d4e659298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563d4e659318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x563d4e659390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x563d4e6595f0 <line:447:22>
| `-NonNullAttr 0x563d4e659648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x563d4e6598f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x563d4e6596a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563d4e659720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x563d4e659798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563d4e6599b0 <col:43>
| `-NonNullAttr 0x563d4e659a08 <col:84, col:98> 1
|-FunctionDecl 0x563d4e659cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x563d4e659a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563d4e659ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x563d4e659b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x563d4e659d80 <line:452:22>
| `-NonNullAttr 0x563d4e659dd8 <col:63, col:77> 3
|-FunctionDecl 0x563d4e65a0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563d4e659e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563d4e659ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x563d4e659f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x563d4e65a1a0 <line:456:22>
| `-NonNullAttr 0x563d4e65a1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x563d4e65a3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x563d4e65a248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563d4e65a2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x563d4e65a498 <line:458:22>
|-FunctionDecl 0x563d4e65a868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x563d4e65a560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x563d4e65a700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x563d4e65a918 <col:52, col:69> 1 2
|-FunctionDecl 0x563d4e65aac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x563d4e65a9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x563d4e65aa20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x563d4e65aca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x563d4e65ab88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x563d4e65ac08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x563d4e65ae60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x563d4e65ad68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x563d4e65afa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x563d4e65b040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x563d4e65b0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x563d4e65b1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x563d4e65b240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x563d4e65b410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix009_tso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x563d4e65b508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x563d4e65b5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x563d4e65b560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x563d4e65b0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x563d4e65b040 ''
| `-AlignedAttr 0x563d4e65b618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x563d4e65b690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x563d4e65b7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x563d4e65b858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x563d4e65b8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x563d4e65b928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x563d4e65bb30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x563d4e65ba20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x563d4e65bc78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x563d4e65bbe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x563d4e65be70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563d4e65bd30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x563d4e65bf18 <line:487:22>
|-RecordDecl 0x563d4e65bf70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x563d4e65c288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x563d4e65c0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x563d4e65c168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x563d4e65c338 <col:86>
| `-ReturnsTwiceAttr 0x563d4e65c390 <col:12> Implicit
|-FunctionDecl 0x563d4e65c6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563d4e65c460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x563d4e65c570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x563d4e65c768 <line:493:22>
| `-NonNullAttr 0x563d4e65c7c0 <col:63, col:77> 1
|-FunctionDecl 0x563d4e65c938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563d4e65c808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563d4e65c9e0 <line:495:22>
| `-NonNullAttr 0x563d4e65ca38 <col:63, col:77> 1
|-FunctionDecl 0x563d4e65cb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563d4e65ca88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563d4e65cbe8 <line:497:22>
| `-NonNullAttr 0x563d4e65cc40 <col:52, col:66> 1
|-FunctionDecl 0x563d4e65cd40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563d4e65cc88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563d4e65cde8 <line:499:22>
| `-NonNullAttr 0x563d4e65ce40 <col:52, col:66> 1
|-FunctionDecl 0x563d4e65d088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563d4e65ce98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563d4e65cf28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563d4e65d138 <col:36>
| `-NonNullAttr 0x563d4e65d190 <col:66, col:83> 1 2
|-FunctionDecl 0x563d4e65d290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563d4e65d1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563d4e65d338 <line:504:22>
| `-NonNullAttr 0x563d4e65d390 <col:52, col:66> 1
|-FunctionDecl 0x563d4e65d628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563d4e65d440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563d4e65d4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x563d4e65d6d8 <line:508:22>
| `-NonNullAttr 0x563d4e65d730 <col:63, col:80> 1 2
|-FunctionDecl 0x563d4e65d9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x563d4e65d778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563d4e65d7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x563d4e65d878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x563d4e65dab0 <line:512:22>
| `-NonNullAttr 0x563d4e65db08 <col:63, col:80> 1 3
|-FunctionDecl 0x563d4e65dc10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563d4e65db58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563d4e65dcb8 <line:514:22>
| `-NonNullAttr 0x563d4e65dd10 <col:63, col:77> 1
|-FunctionDecl 0x563d4e65df38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563d4e65ddc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x563d4e65dfe0 <line:516:22>
| `-NonNullAttr 0x563d4e65e038 <col:63, col:77> 1
|-FunctionDecl 0x563d4e65e140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563d4e65e088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x563d4e65e1e8 <line:518:22>
| `-NonNullAttr 0x563d4e65e240 <col:63, col:77> 1
|-FunctionDecl 0x563d4e65e468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563d4e65e288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563d4e65e308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x563d4e65e518 <line:522:22>
| `-NonNullAttr 0x563d4e65e570 <col:63, col:80> 1 2
|-FunctionDecl 0x563d4e65e778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563d4e65e5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563d4e65e638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x563d4e65e828 <line:525:22>
| `-NonNullAttr 0x563d4e65e880 <col:63, col:77> 1
|-FunctionDecl 0x563d4e65ea28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563d4e65e8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563d4e65e948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x563d4e65ead8 <line:528:22>
| `-NonNullAttr 0x563d4e65eb30 <col:63, col:80> 1 2
|-FunctionDecl 0x563d4e65ecb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563d4e65eb78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563d4e65ebf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x563d4e65ed68 <line:530:22>
| `-NonNullAttr 0x563d4e65edc0 <col:63, col:77> 1
|-FunctionDecl 0x563d4e65ff90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563d4e65ee08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563d4e65feb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x563d4e660040 <line:534:22>
| `-NonNullAttr 0x563d4e660098 <col:63, col:80> 1 2
|-FunctionDecl 0x563d4e660228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563d4e6600e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563d4e660168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x563d4e6602d8 <line:537:22>
| `-NonNullAttr 0x563d4e660330 <col:63, col:77> 1
|-FunctionDecl 0x563d4e6604d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563d4e660378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563d4e6603f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x563d4e660588 <line:541:22>
| `-NonNullAttr 0x563d4e6605e0 <col:63, col:80> 1 2
|-FunctionDecl 0x563d4e660768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563d4e660628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563d4e6606a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x563d4e660818 <line:544:22>
| `-NonNullAttr 0x563d4e660870 <col:63, col:77> 1
|-FunctionDecl 0x563d4e660a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x563d4e6608b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x563d4e660938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x563d4e660b08 <line:547:22>
| `-NonNullAttr 0x563d4e660b60 <col:63, col:80> 1 2
|-FunctionDecl 0x563d4e660ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563d4e660ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563d4e660c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x563d4e660d98 <line:550:22>
| `-NonNullAttr 0x563d4e660df0 <col:63, col:77> 1
|-FunctionDecl 0x563d4e662168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x563d4e661f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563d4e662020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x563d4e662218 <col:29>
| `-NonNullAttr 0x563d4e662270 <col:70, col:84> 1
|-FunctionDecl 0x563d4e6623e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563d4e6622b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563d4e662490 <line:555:22>
| `-NonNullAttr 0x563d4e6624e8 <col:63, col:77> 1
|-FunctionDecl 0x563d4e6625f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563d4e662538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563d4e662698 <line:557:22>
| `-NonNullAttr 0x563d4e6626f0 <col:52, col:66> 1
|-FunctionDecl 0x563d4e6627f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563d4e662738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563d4e662898 <line:559:19>
| `-NonNullAttr 0x563d4e6628f0 <col:49, col:63> 1
|-FunctionDecl 0x563d4e662b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563d4e662938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563d4e6629c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563d4e662bd8 <col:39>
| `-NonNullAttr 0x563d4e662c30 <col:69, col:86> 1 2
|-FunctionDecl 0x563d4e662d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563d4e662c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563d4e662dd8 <line:564:22>
| `-NonNullAttr 0x563d4e662e30 <col:52, col:66> 1
|-FunctionDecl 0x563d4e662f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563d4e662ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563d4e663040 <line:566:22>
| `-NonNullAttr 0x563d4e663098 <col:52, col:66> 1
|-FunctionDecl 0x563d4e663258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563d4e6630e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563d4e663178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563d4e663308 <col:39>
| `-NonNullAttr 0x563d4e663360 <col:69, col:86> 1 2
|-FunctionDecl 0x563d4e663460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563d4e6633a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563d4e663508 <line:571:22>
| `-NonNullAttr 0x563d4e663560 <col:52, col:66> 1
|-FunctionDecl 0x563d4e663748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x563d4e663610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x563d4e6637f0 <line:573:22>
| `-NonNullAttr 0x563d4e663848 <col:63, col:77> 1
|-FunctionDecl 0x563d4e663950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x563d4e663898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x563d4e6639f8 <line:575:22>
| `-NonNullAttr 0x563d4e663a50 <col:63, col:77> 1
|-FunctionDecl 0x563d4e663c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563d4e663a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x563d4e663b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x563d4e663d28 <line:579:22>
| `-NonNullAttr 0x563d4e663d80 <col:63, col:80> 1 2
|-FunctionDecl 0x563d4e663fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x563d4e663dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x563d4e663e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x563d4e664058 <line:582:22>
| `-NonNullAttr 0x563d4e6640b0 <col:63, col:77> 1
|-FunctionDecl 0x563d4e664258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563d4e6640f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x563d4e664178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x563d4e664308 <line:586:22>
| `-NonNullAttr 0x563d4e664360 <col:63, col:80> 1 2
|-FunctionDecl 0x563d4e6644e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x563d4e6643a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x563d4e664428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x563d4e664598 <col:36>
| `-NonNullAttr 0x563d4e6645f0 <col:77, col:91> 1
|-FunctionDecl 0x563d4e664928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x563d4e6646d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563d4e6647e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x563d4e6649d8 <line:591:22>
| `-NonNullAttr 0x563d4e664a30 <col:63, col:77> 1
|-FunctionDecl 0x563d4e664ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563d4e664a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563d4e664c50 <line:593:22>
| `-NonNullAttr 0x563d4e664ca8 <col:63, col:77> 1
|-FunctionDecl 0x563d4e664db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563d4e664cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563d4e664e58 <line:595:22>
| `-NonNullAttr 0x563d4e664eb0 <col:52, col:66> 1
|-FunctionDecl 0x563d4e664fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563d4e664f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563d4e665070 <line:597:22>
| `-NonNullAttr 0x563d4e6650c8 <col:52, col:66> 1
|-FunctionDecl 0x563d4e6652f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x563d4e665118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563d4e665190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x563d4e6653a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x563d4e6656d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563d4e665428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563d4e6654a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563d4e665530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x563d4e665790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x563d4e6659a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x563d4e665870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x563d4e665a50 <line:606:22>
| `-NonNullAttr 0x563d4e665aa8 <col:63, col:77> 1
|-FunctionDecl 0x563d4e665bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x563d4e665af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x563d4e665c58 <line:608:22>
| `-NonNullAttr 0x563d4e665cb0 <col:63, col:77> 1
|-FunctionDecl 0x563d4e665f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563d4e665cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x563d4e665d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x563d4e665fc0 <line:612:22>
| `-NonNullAttr 0x563d4e666018 <col:63, col:80> 1 2
|-FunctionDecl 0x563d4e666228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x563d4e666068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x563d4e6660e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x563d4e6662d8 <col:37>
| `-NonNullAttr 0x563d4e666330 <col:78, col:92> 1
|-FunctionDecl 0x563d4e666548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x563d4e666378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x563d4e666420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x563d4e6665f8 <line:618:22>
| `-NonNullAttr 0x563d4e666650 <col:63, col:80> 1 2
|-FunctionDecl 0x563d4e666818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x563d4e666698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x563d4e666710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x563d4e6668c8 <line:621:22>
| `-NonNullAttr 0x563d4e666920 <col:63, col:77> 1
|-FunctionDecl 0x563d4e666bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x563d4e666a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x563d4e666a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x563d4e666c78 <line:623:22>
| `-NonNullAttr 0x563d4e666cd0 <col:63, col:77> 1
|-FunctionDecl 0x563d4e666e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563d4e666d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563d4e666f20 <line:625:22>
| `-NonNullAttr 0x563d4e666f78 <col:63, col:77> 1
|-FunctionDecl 0x563d4e667080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563d4e666fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563d4e667128 <line:627:22>
| `-NonNullAttr 0x563d4e667180 <col:52, col:66> 1
|-FunctionDecl 0x563d4e667280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563d4e6671c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563d4e667328 <line:629:22>
| `-NonNullAttr 0x563d4e667380 <col:52, col:66> 1
|-FunctionDecl 0x563d4e667480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563d4e6673c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563d4e667528 <line:631:22>
| `-NonNullAttr 0x563d4e667580 <col:52, col:66> 1
|-FunctionDecl 0x563d4e667958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x563d4e667660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x563d4e667770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x563d4e6677f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x563d4e667a10 <line:635:22>
| `-NonNullAttr 0x563d4e667a68 <col:63, col:77> 1
|-FunctionDecl 0x563d4e667be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x563d4e667ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x563d4e667c90 <line:637:22>
| `-NonNullAttr 0x563d4e667ce8 <col:63, col:77> 1
|-FunctionDecl 0x563d4e667df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x563d4e667d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x563d4e667e98 <line:639:22>
| `-NonNullAttr 0x563d4e667ef0 <col:52, col:66> 1
|-FunctionDecl 0x563d4e6680e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x563d4e667fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x563d4e668190 <line:641:22>
| `-NonNullAttr 0x563d4e6681e8 <col:63, col:77> 1
|-FunctionDecl 0x563d4e6682f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x563d4e668238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x563d4e668398 <line:643:22>
| `-NonNullAttr 0x563d4e6683f0 <col:63, col:77> 1
|-FunctionDecl 0x563d4e668618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563d4e668438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x563d4e6684b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x563d4e6686c8 <line:647:22>
| `-NonNullAttr 0x563d4e668720 <col:63, col:80> 1 2
|-FunctionDecl 0x563d4e668928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x563d4e668768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x563d4e6687e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x563d4e6689d8 <line:650:22>
| `-NonNullAttr 0x563d4e668a30 <col:63, col:77> 1
|-FunctionDecl 0x563d4e668d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x563d4e668b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x563d4e668c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x563d4e668e28 <line:653:22>
| `-NonNullAttr 0x563d4e668e80 <col:63, col:77> 1
|-FunctionDecl 0x563d4e668fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x563d4e668ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x563d4e669090 <col:69>
|-FunctionDecl 0x563d4e669208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x563d4e6690f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x563d4e6692b0 <col:72>
|-FunctionDecl 0x563d4e6694e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x563d4e669318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x563d4e6693c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x563d4e669598 <col:44>
|-FunctionDecl 0x563d4e6697b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x563d4e669600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563d4e669678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x563d4e669868 <line:660:22>
| `-NonNullAttr 0x563d4e6698c0 <col:63, col:77> 2
|-FunctionDecl 0x563d4e669d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x563d4e6699a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x563d4e669ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x563d4e669bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x563d4e669dc0 <col:47>
|-FunctionDecl 0x563d4e66af60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x563d4e669e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563d4e66b0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x563d4e66b020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563d4e66b180 <line:667:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x563d4e66b240 <line:668:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x563d4e66b300 <line:669:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x563d4e66b3b8 <line:670:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x563d4e66b438 prev 0x563d4e66b3b8 <line:671:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x563d4e66b4a0 <col:24> 'int' 0
|-VarDecl 0x563d4e66b4d8 <line:672:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x563d4e66b558 prev 0x563d4e66b4d8 <line:673:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x563d4e66b5c0 <col:27> 'int' 0
|-VarDecl 0x563d4e66b5f8 <line:674:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x563d4e66b678 prev 0x563d4e66b5f8 <line:675:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x563d4e66b6e0 <col:27> 'int' 0
|-VarDecl 0x563d4e66b718 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x563d4e66b798 prev 0x563d4e66b718 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x563d4e66b800 <col:27> 'int' 0
|-VarDecl 0x563d4e66b838 <line:678:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x563d4e66b8b8 prev 0x563d4e66b838 <line:679:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x563d4e66b920 <col:27> 'int' 0
|-VarDecl 0x563d4e66b950 <line:680:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x563d4e66b9c8 <line:681:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x563d4e66ba48 <line:682:1, col:5> col:5 used x 'int'
|-VarDecl 0x563d4e66bac8 prev 0x563d4e66ba48 <line:683:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x563d4e66bb30 <col:9> 'int' 0
|-VarDecl 0x563d4e66bb68 <line:684:1, col:5> col:5 used y 'int'
|-VarDecl 0x563d4e66bbe8 prev 0x563d4e66bb68 <line:685:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x563d4e66bc50 <col:9> 'int' 0
|-VarDecl 0x563d4e66bc88 <line:686:1, col:5> col:5 used z 'int'
|-VarDecl 0x563d4e66bd08 prev 0x563d4e66bc88 <line:687:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x563d4e66bd70 <col:9> 'int' 0
|-VarDecl 0x563d4e66bda0 <line:688:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x563d4e66be20 <line:689:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x563d4e66be98 <line:690:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x563d4e66bf70 <line:691:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x563d4e66bfe8 <line:692:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x563d4e66c060 <line:693:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x563d4e66c0d8 <line:694:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x563d4e66c150 <line:695:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x563d4e66c1c8 <line:696:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x563d4e66c248 <line:697:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x563d4e66c2c8 <line:698:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x563d4e66c340 <line:699:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x563d4e66c3c0 <line:700:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x563d4e66c438 <line:701:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x563d4e66c4b0 <line:702:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x563d4e66c528 <line:703:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x563d4e66c640 prev 0x563d4e66af60 <line:704:1, line:737:1> line:704:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x563d4e66c5a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x563d4e66e068 <line:705:1, line:737:1>
|   |-CallExpr 0x563d4e66c758 <line:706:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563d4e66c740 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d4e66c6e8 <col:3> 'void ()' Function 0x563d4e612350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563d4e66c7d0 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563d4e66c778 <col:3> 'int' lvalue Var 0x563d4e66c3c0 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x563d4e66c7b8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d4e66c798 <col:15> 'int' lvalue Var 0x563d4e66c2c8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x563d4e66c830 <line:708:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563d4e66c7f0 <col:3> 'int' lvalue Var 0x563d4e66c2c8 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x563d4e66c810 <col:15> 'int' 1
|   |-BinaryOperator 0x563d4e66c8a8 <line:709:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563d4e66c850 <col:3> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563d4e66c890 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d4e66c870 <col:20> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563d4e66c940 <line:710:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x563d4e66c8c8 <col:3> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x563d4e66c918 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563d4e66c8e8 <col:27> 'int' 1
|   |-CallExpr 0x563d4e66cac8 <line:711:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x563d4e66cab0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x563d4e66c960 <col:3> 'void (int)' Function 0x563d4e6120d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x563d4e66ca60 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x563d4e66ca40 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x563d4e66ca20 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x563d4e66c9d8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x563d4e66c9c0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x563d4e66c980 <col:23> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x563d4e66ca08 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x563d4e66c9f0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x563d4e66c9a0 <col:41> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563d4e66cb48 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563d4e66caf0 <col:3> '_Bool' lvalue Var 0x563d4e66c060 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x563d4e66cb30 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d4e66cb10 <col:20> '_Bool' lvalue Var 0x563d4e66be98 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x563d4e66cbc0 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563d4e66cb68 <col:3> '_Bool' lvalue Var 0x563d4e66c0d8 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563d4e66cba8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d4e66cb88 <col:20> '_Bool' lvalue Var 0x563d4e66bf70 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x563d4e66cc38 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563d4e66cbe0 <col:3> '_Bool' lvalue Var 0x563d4e66c150 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563d4e66cc20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d4e66cc00 <col:20> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x563d4e66ccd0 <line:715:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x563d4e66cc58 <col:3> '_Bool' lvalue Var 0x563d4e66bf70 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x563d4e66cca8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563d4e66cc78 <col:27> 'int' 1
|   |-CallExpr 0x563d4e66cd28 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563d4e66cd10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d4e66ccf0 <col:3> 'void ()' Function 0x563d4e612410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563d4e66cd80 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563d4e66cd68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d4e66cd48 <col:3> 'void ()' Function 0x563d4e612350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563d4e66cde0 <line:718:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x563d4e66cda0 <col:3> 'int' lvalue Var 0x563d4e66bac8 'x' 'int'
|   | `-IntegerLiteral 0x563d4e66cdc0 <col:7> 'int' 1
|   |-CallExpr 0x563d4e66ce38 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563d4e66ce20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d4e66ce00 <col:3> 'void ()' Function 0x563d4e612410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563d4e66ce90 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563d4e66ce78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d4e66ce58 <col:3> 'void ()' Function 0x563d4e612350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563d4e66cf08 <line:721:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563d4e66ceb0 <col:3> 'int' lvalue Var 0x563d4e66b558 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x563d4e66cef0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d4e66ced0 <col:25> 'int' lvalue Var 0x563d4e66bac8 'x' 'int'
|   |-CallExpr 0x563d4e66cf80 <line:722:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563d4e66cf48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d4e66cf28 <col:3> 'void ()' Function 0x563d4e612410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563d4e66cfd8 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563d4e66cfc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d4e66cfa0 <col:3> 'void ()' Function 0x563d4e612350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563d4e66d050 <line:724:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563d4e66cff8 <col:3> 'int' lvalue Var 0x563d4e66b678 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x563d4e66d038 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d4e66d018 <col:25> 'int' lvalue Var 0x563d4e66bbe8 'y' 'int'
|   |-CallExpr 0x563d4e66d0a8 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563d4e66d090 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d4e66d070 <col:3> 'void ()' Function 0x563d4e612410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563d4e66d100 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563d4e66d0e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d4e66d0c8 <col:3> 'void ()' Function 0x563d4e612350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563d4e66d3e8 <line:727:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x563d4e66d120 <col:3> 'int' lvalue Var 0x563d4e66bd08 'z' 'int'
|   | `-ConditionalOperator 0x563d4e66d3b8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x563d4e66d1e0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x563d4e66d198 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x563d4e66d180 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x563d4e66d140 <col:7> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x563d4e66d1c8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x563d4e66d1b0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x563d4e66d160 <col:25> '_Bool' lvalue Var 0x563d4e66bf70 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x563d4e66d3a0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563d4e66d200 <col:42> 'int' lvalue Var 0x563d4e66c2c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x563d4e66d380 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x563d4e66d350 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x563d4e66d2c0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563d4e66d278 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563d4e66d260 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563d4e66d220 <col:55> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563d4e66d2a8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563d4e66d290 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563d4e66d240 <col:73> '_Bool' lvalue Var 0x563d4e66c0d8 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x563d4e66d320 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563d4e66d2e0 <col:90> 'int' lvalue Var 0x563d4e66c3c0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x563d4e66d338 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563d4e66d300 <col:102> 'int' lvalue Var 0x563d4e66bd08 'z' 'int'
|   |-BinaryOperator 0x563d4e66d5f0 <line:728:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563d4e66d408 <col:3> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563d4e66d5d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d4e66d5a8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563d4e66d4c8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563d4e66d480 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563d4e66d468 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563d4e66d428 <col:20> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563d4e66d4b0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563d4e66d498 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563d4e66d448 <col:38> '_Bool' lvalue Var 0x563d4e66bf70 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563d4e66d560 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563d4e66d518 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563d4e66d4e8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563d4e66d590 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563d4e66d578 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563d4e66d540 <col:66> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563d4e66d8d8 <line:729:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563d4e66d610 <col:3> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563d4e66d8c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d4e66d890 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563d4e66d7b0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563d4e66d6d0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563d4e66d688 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563d4e66d670 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563d4e66d630 <col:20> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563d4e66d6b8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563d4e66d6a0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563d4e66d650 <col:38> '_Bool' lvalue Var 0x563d4e66bf70 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x563d4e66d790 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563d4e66d748 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563d4e66d730 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563d4e66d6f0 <col:56> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563d4e66d778 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563d4e66d760 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563d4e66d710 <col:74> '_Bool' lvalue Var 0x563d4e66c0d8 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563d4e66d848 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563d4e66d800 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563d4e66d7d0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563d4e66d878 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563d4e66d860 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563d4e66d828 <col:102> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x563d4e66dae0 <line:730:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563d4e66d8f8 <col:3> '_Bool' lvalue Var 0x563d4e66bf70 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563d4e66dac8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d4e66da98 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563d4e66d9b8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563d4e66d970 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563d4e66d958 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563d4e66d918 <col:20> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563d4e66d9a0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563d4e66d988 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563d4e66d938 <col:38> '_Bool' lvalue Var 0x563d4e66bf70 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563d4e66da50 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563d4e66da08 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563d4e66d9d8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563d4e66da80 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563d4e66da68 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563d4e66da30 <col:66> '_Bool' lvalue Var 0x563d4e66bf70 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x563d4e66ddc8 <line:731:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563d4e66db00 <col:3> '_Bool' lvalue Var 0x563d4e66c0d8 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563d4e66ddb0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d4e66dd80 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563d4e66dca0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563d4e66dbc0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563d4e66db78 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563d4e66db60 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563d4e66db20 <col:20> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563d4e66dba8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563d4e66db90 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563d4e66db40 <col:38> '_Bool' lvalue Var 0x563d4e66bf70 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x563d4e66dc80 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563d4e66dc38 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563d4e66dc20 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563d4e66dbe0 <col:56> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563d4e66dc68 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563d4e66dc50 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563d4e66dc00 <col:74> '_Bool' lvalue Var 0x563d4e66c0d8 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563d4e66dd38 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563d4e66dcf0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563d4e66dcc0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563d4e66dd68 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563d4e66dd50 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563d4e66dd18 <col:102> '_Bool' lvalue Var 0x563d4e66c0d8 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x563d4e66de20 <line:732:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563d4e66de08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d4e66dde8 <col:3> 'void ()' Function 0x563d4e612410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563d4e66de78 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563d4e66de60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d4e66de40 <col:3> 'void ()' Function 0x563d4e612350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563d4e66df30 <line:734:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x563d4e66de98 <col:3> 'int' lvalue Var 0x563d4e66b438 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x563d4e66df10 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x563d4e66def8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563d4e66deb8 <col:22> 'int' lvalue Var 0x563d4e66b438 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x563d4e66ded8 <col:41> 'int' 1
|   |-CallExpr 0x563d4e66dfa8 <line:735:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563d4e66df90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d4e66df50 <col:3> 'void ()' Function 0x563d4e612410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x563d4e66e058 <line:736:3, col:36>
|     `-CallExpr 0x563d4e66e038 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x563d4e66e020 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x563d4e66dfc8 <col:10> 'void *(void)' Function 0x563d4e611e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x563d4e66e220 prev 0x563d4e66b0b8 <line:738:1, line:773:1> line:738:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x563d4e66e188 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x563d4e671fd0 <line:739:1, line:773:1>
|   |-CallExpr 0x563d4e66e300 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563d4e66e2e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d4e66e2c8 <col:3> 'void ()' Function 0x563d4e612350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563d4e66e360 <line:741:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x563d4e66e320 <col:3> 'int' lvalue Var 0x563d4e66bbe8 'y' 'int'
|   | `-IntegerLiteral 0x563d4e66e340 <col:7> 'int' 1
|   |-CallExpr 0x563d4e66e3b8 <line:742:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563d4e66e3a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d4e66e380 <col:3> 'void ()' Function 0x563d4e612410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563d4e66e410 <line:743:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563d4e66e3f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d4e66e3d8 <col:3> 'void ()' Function 0x563d4e612350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563d4e66e488 <line:744:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563d4e66e430 <col:3> 'int' lvalue Var 0x563d4e66b798 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x563d4e66e470 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d4e66e450 <col:25> 'int' lvalue Var 0x563d4e66bbe8 'y' 'int'
|   |-CallExpr 0x563d4e66e4e0 <line:745:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563d4e66e4c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d4e66e4a8 <col:3> 'void ()' Function 0x563d4e612410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563d4e66e538 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563d4e66e520 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d4e66e500 <col:3> 'void ()' Function 0x563d4e612350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563d4e66e5e8 <line:747:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x563d4e66e558 <col:3> '_Bool' lvalue Var 0x563d4e66c4b0 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x563d4e66e5d0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x563d4e66e5b0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x563d4e66e598 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x563d4e66e578 <col:19> 'void *(void)' Function 0x563d4e611e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x563d4e66e698 <line:748:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x563d4e66e608 <col:3> '_Bool' lvalue Var 0x563d4e66c528 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x563d4e66e680 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x563d4e66e660 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x563d4e66e648 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x563d4e66e628 <col:19> 'void *(void)' Function 0x563d4e611e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x563d4e66e710 <line:749:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x563d4e66e6b8 <col:3> '_Bool' lvalue Var 0x563d4e66bda0 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x563d4e66e6f8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d4e66e6d8 <col:21> '_Bool' lvalue Var 0x563d4e66c528 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x563d4e66e788 <line:750:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563d4e66e730 <col:3> 'int' lvalue Var 0x563d4e66be20 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x563d4e66e770 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d4e66e750 <col:15> 'int' lvalue Var 0x563d4e66bd08 'z' 'int'
|   |-BinaryOperator 0x563d4e66ebc0 <line:751:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x563d4e66e7a8 <col:3> 'int' lvalue Var 0x563d4e66bd08 'z' 'int'
|   | `-ConditionalOperator 0x563d4e66eb90 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x563d4e66e9b8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x563d4e66e8d8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x563d4e66e800 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x563d4e66e7e8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x563d4e66e7c8 <col:8> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x563d4e66e8b8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x563d4e66e850 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x563d4e66e838 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x563d4e66e818 <col:27> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x563d4e66e8a0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x563d4e66e888 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x563d4e66e868 <col:46> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x563d4e66e998 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x563d4e66e930 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x563d4e66e918 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x563d4e66e8f8 <col:65> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x563d4e66e980 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x563d4e66e968 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x563d4e66e948 <col:84> '_Bool' lvalue Var 0x563d4e66c150 'z$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x563d4e66eb78 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563d4e66e9d8 <col:101> 'int' lvalue Var 0x563d4e66bd08 'z' 'int'
|   |   `-ParenExpr 0x563d4e66eb58 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x563d4e66eb28 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x563d4e66ea98 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563d4e66ea50 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563d4e66ea38 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563d4e66e9f8 <col:106> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563d4e66ea80 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563d4e66ea68 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563d4e66ea18 <col:124> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x563d4e66eaf8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563d4e66eab8 <col:141> 'int' lvalue Var 0x563d4e66c2c8 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x563d4e66eb10 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563d4e66ead8 <col:153> 'int' lvalue Var 0x563d4e66c3c0 'z$w_buff1' 'int'
|   |-BinaryOperator 0x563d4e66f0e8 <line:752:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x563d4e66ebe0 <col:3> 'int' lvalue Var 0x563d4e66c2c8 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x563d4e66f0b8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x563d4e66f088 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563d4e66f070 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563d4e66ec00 <col:15> '_Bool' lvalue Var 0x563d4e66c528 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x563d4e66f0a0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563d4e66ec20 <col:31> 'int' lvalue Var 0x563d4e66c2c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x563d4e66f050 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x563d4e66f020 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x563d4e66ee30 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x563d4e66ed50 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x563d4e66ec78 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x563d4e66ec60 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x563d4e66ec40 <col:45> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x563d4e66ed30 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x563d4e66ecc8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x563d4e66ecb0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x563d4e66ec90 <col:64> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x563d4e66ed18 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x563d4e66ed00 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x563d4e66ece0 <col:83> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x563d4e66ee10 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x563d4e66eda8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x563d4e66ed90 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x563d4e66ed70 <col:102> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x563d4e66edf8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x563d4e66ede0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x563d4e66edc0 <col:121> '_Bool' lvalue Var 0x563d4e66c150 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x563d4e66f008 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563d4e66ee50 <col:138> 'int' lvalue Var 0x563d4e66c2c8 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x563d4e66efe8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x563d4e66efb8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x563d4e66ef10 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x563d4e66eec8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x563d4e66eeb0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x563d4e66ee70 <col:151> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x563d4e66eef8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x563d4e66eee0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x563d4e66ee90 <col:169> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x563d4e66ef70 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x563d4e66ef30 <col:186> 'int' lvalue Var 0x563d4e66c2c8 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x563d4e66efa0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x563d4e66ef50 <col:198> 'int' lvalue Var 0x563d4e66c2c8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x563d4e66f5f8 <line:753:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x563d4e66f108 <col:3> 'int' lvalue Var 0x563d4e66c3c0 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x563d4e66f5c8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x563d4e66f598 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563d4e66f580 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563d4e66f128 <col:15> '_Bool' lvalue Var 0x563d4e66c528 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x563d4e66f5b0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563d4e66f148 <col:31> 'int' lvalue Var 0x563d4e66c3c0 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x563d4e66f560 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x563d4e66f530 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x563d4e66f358 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x563d4e66f278 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x563d4e66f1a0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x563d4e66f188 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x563d4e66f168 <col:45> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x563d4e66f258 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x563d4e66f1f0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x563d4e66f1d8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x563d4e66f1b8 <col:64> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x563d4e66f240 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x563d4e66f228 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x563d4e66f208 <col:83> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x563d4e66f338 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x563d4e66f2d0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x563d4e66f2b8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x563d4e66f298 <col:102> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x563d4e66f320 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x563d4e66f308 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x563d4e66f2e8 <col:121> '_Bool' lvalue Var 0x563d4e66c150 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x563d4e66f518 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563d4e66f378 <col:138> 'int' lvalue Var 0x563d4e66c3c0 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x563d4e66f4f8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x563d4e66f4c8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x563d4e66f438 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x563d4e66f3f0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x563d4e66f3d8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x563d4e66f398 <col:151> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x563d4e66f420 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x563d4e66f408 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x563d4e66f3b8 <col:169> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x563d4e66f498 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x563d4e66f458 <col:186> 'int' lvalue Var 0x563d4e66c3c0 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x563d4e66f4b0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x563d4e66f478 <col:198> 'int' lvalue Var 0x563d4e66c3c0 'z$w_buff1' 'int'
|   |-BinaryOperator 0x563d4e66fba0 <line:754:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x563d4e66f618 <col:3> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563d4e66fb88 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d4e66fb58 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x563d4e66fb10 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563d4e66faf8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563d4e66f638 <col:20> '_Bool' lvalue Var 0x563d4e66c528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563d4e66fb40 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563d4e66fb28 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563d4e66f658 <col:36> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x563d4e66fad8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x563d4e66faa8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x563d4e66f868 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563d4e66f788 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563d4e66f6b0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563d4e66f698 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563d4e66f678 <col:55> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563d4e66f768 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563d4e66f700 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563d4e66f6e8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563d4e66f6c8 <col:74> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x563d4e66f750 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563d4e66f738 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563d4e66f718 <col:93> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563d4e66f848 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563d4e66f7e0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563d4e66f7c8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563d4e66f7a8 <col:112> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x563d4e66f830 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563d4e66f818 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563d4e66f7f8 <col:131> '_Bool' lvalue Var 0x563d4e66c150 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x563d4e66fa90 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563d4e66fa78 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563d4e66f888 <col:148> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x563d4e66fa58 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x563d4e66fa28 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x563d4e66f948 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563d4e66f900 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563d4e66f8e8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563d4e66f8a8 <col:166> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563d4e66f930 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563d4e66f918 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563d4e66f8c8 <col:184> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x563d4e66f9e0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563d4e66f998 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563d4e66f968 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563d4e66fa10 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x563d4e66f9f8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x563d4e66f9c0 <col:212> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563d4e670180 <line:755:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x563d4e66fbc0 <col:3> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563d4e670168 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d4e670138 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x563d4e6700f0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563d4e6700d8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563d4e66fbe0 <col:20> '_Bool' lvalue Var 0x563d4e66c528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563d4e670120 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563d4e670108 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563d4e66fc00 <col:36> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x563d4e6700b8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x563d4e670088 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x563d4e66fe10 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563d4e66fd30 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563d4e66fc58 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563d4e66fc40 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563d4e66fc20 <col:55> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563d4e66fd10 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563d4e66fca8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563d4e66fc90 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563d4e66fc70 <col:74> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x563d4e66fcf8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563d4e66fce0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563d4e66fcc0 <col:93> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563d4e66fdf0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563d4e66fd88 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563d4e66fd70 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563d4e66fd50 <col:112> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x563d4e66fdd8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563d4e66fdc0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563d4e66fda0 <col:131> '_Bool' lvalue Var 0x563d4e66c150 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x563d4e670070 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563d4e670058 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563d4e66fe30 <col:148> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x563d4e670038 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x563d4e670008 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x563d4e66fef0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563d4e66fea8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563d4e66fe90 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563d4e66fe50 <col:166> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563d4e66fed8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563d4e66fec0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563d4e66fe70 <col:184> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x563d4e66ffd8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563d4e66ff40 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563d4e66ff10 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563d4e66fff0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x563d4e66ffb0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x563d4e66ff68 <col:219> 'int' 0
|   |-BinaryOperator 0x563d4e670728 <line:756:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x563d4e6701a0 <col:3> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563d4e670710 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d4e6706e0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x563d4e670698 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563d4e670680 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563d4e6701c0 <col:20> '_Bool' lvalue Var 0x563d4e66c528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563d4e6706c8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563d4e6706b0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563d4e6701e0 <col:36> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x563d4e670660 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x563d4e670630 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x563d4e6703f0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563d4e670310 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563d4e670238 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563d4e670220 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563d4e670200 <col:55> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563d4e6702f0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563d4e670288 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563d4e670270 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563d4e670250 <col:74> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x563d4e6702d8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563d4e6702c0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563d4e6702a0 <col:93> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563d4e6703d0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563d4e670368 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563d4e670350 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563d4e670330 <col:112> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x563d4e6703b8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563d4e6703a0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563d4e670380 <col:131> '_Bool' lvalue Var 0x563d4e66c150 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x563d4e670618 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563d4e670600 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563d4e670410 <col:148> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x563d4e6705e0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x563d4e6705b0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x563d4e6704d0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563d4e670488 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563d4e670470 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563d4e670430 <col:166> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563d4e6704b8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563d4e6704a0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563d4e670450 <col:184> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x563d4e670568 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563d4e670520 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563d4e6704f0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563d4e670598 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x563d4e670580 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x563d4e670548 <col:212> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x563d4e670cf0 <line:757:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x563d4e670748 <col:3> '_Bool' lvalue Var 0x563d4e66c150 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563d4e670cd8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d4e670ca8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x563d4e670c60 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563d4e670c48 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563d4e670768 <col:20> '_Bool' lvalue Var 0x563d4e66c528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563d4e670c90 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563d4e670c78 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563d4e670788 <col:36> '_Bool' lvalue Var 0x563d4e66c150 'z$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x563d4e670c28 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x563d4e670bf8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x563d4e670998 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563d4e6708b8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563d4e6707e0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563d4e6707c8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563d4e6707a8 <col:55> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563d4e670898 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563d4e670830 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563d4e670818 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563d4e6707f8 <col:74> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x563d4e670880 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563d4e670868 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563d4e670848 <col:93> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563d4e670978 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563d4e670910 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563d4e6708f8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563d4e6708d8 <col:112> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x563d4e670960 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563d4e670948 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563d4e670928 <col:131> '_Bool' lvalue Var 0x563d4e66c150 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x563d4e670be0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563d4e670bc8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563d4e6709b8 <col:148> '_Bool' lvalue Var 0x563d4e66c150 'z$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x563d4e670ba8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x563d4e670b78 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x563d4e670a78 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563d4e670a30 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563d4e670a18 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563d4e6709d8 <col:166> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563d4e670a60 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563d4e670a48 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563d4e6709f8 <col:184> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x563d4e670b48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563d4e670ac8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563d4e670a98 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563d4e670b60 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x563d4e670b20 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x563d4e670af0 <col:219> 'int' 0
|   |-BinaryOperator 0x563d4e670d68 <line:758:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563d4e670d10 <col:3> 'int' lvalue Var 0x563d4e66b8b8 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x563d4e670d50 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d4e670d30 <col:25> 'int' lvalue Var 0x563d4e66bd08 'z' 'int'
|   |-BinaryOperator 0x563d4e670e98 <line:759:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x563d4e670d88 <col:3> 'int' lvalue Var 0x563d4e66bd08 'z' 'int'
|   | `-ConditionalOperator 0x563d4e670e68 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x563d4e670e20 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563d4e670e08 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563d4e670da8 <col:7> '_Bool' lvalue Var 0x563d4e66bda0 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x563d4e670e38 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563d4e670dc8 <col:25> 'int' lvalue Var 0x563d4e66be20 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x563d4e670e50 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x563d4e670de8 <col:37> 'int' lvalue Var 0x563d4e66bd08 'z' 'int'
|   |-BinaryOperator 0x563d4e670f30 <line:760:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x563d4e670eb8 <col:3> '_Bool' lvalue Var 0x563d4e66bda0 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x563d4e670f08 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563d4e670ed8 <col:28> 'int' 0
|   |-CallExpr 0x563d4e670f88 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563d4e670f70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d4e670f50 <col:3> 'void ()' Function 0x563d4e612410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563d4e670ff8 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563d4e670fe0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d4e670fc0 <col:3> 'void ()' Function 0x563d4e612350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563d4e6712e0 <line:763:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x563d4e671018 <col:3> 'int' lvalue Var 0x563d4e66bd08 'z' 'int'
|   | `-ConditionalOperator 0x563d4e6712b0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x563d4e6710d8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x563d4e671090 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x563d4e671078 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x563d4e671038 <col:7> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x563d4e6710c0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x563d4e6710a8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x563d4e671058 <col:25> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x563d4e671298 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563d4e6710f8 <col:42> 'int' lvalue Var 0x563d4e66c2c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x563d4e671278 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x563d4e671248 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x563d4e6711b8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563d4e671170 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563d4e671158 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563d4e671118 <col:55> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563d4e6711a0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563d4e671188 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563d4e671138 <col:73> '_Bool' lvalue Var 0x563d4e66c150 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x563d4e671218 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563d4e6711d8 <col:90> 'int' lvalue Var 0x563d4e66c3c0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x563d4e671230 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563d4e6711f8 <col:102> 'int' lvalue Var 0x563d4e66bd08 'z' 'int'
|   |-BinaryOperator 0x563d4e6714e8 <line:764:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563d4e671300 <col:3> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563d4e6714d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d4e6714a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563d4e6713c0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563d4e671378 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563d4e671360 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563d4e671320 <col:20> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563d4e6713a8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563d4e671390 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563d4e671340 <col:38> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563d4e671458 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563d4e671410 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563d4e6713e0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563d4e671488 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563d4e671470 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563d4e671438 <col:66> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563d4e6717d0 <line:765:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563d4e671508 <col:3> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563d4e6717b8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d4e671788 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563d4e6716a8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563d4e6715c8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563d4e671580 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563d4e671568 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563d4e671528 <col:20> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563d4e6715b0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563d4e671598 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563d4e671548 <col:38> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x563d4e671688 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563d4e671640 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563d4e671628 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563d4e6715e8 <col:56> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563d4e671670 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563d4e671658 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563d4e671608 <col:74> '_Bool' lvalue Var 0x563d4e66c150 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563d4e671740 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563d4e6716f8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563d4e6716c8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563d4e671770 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563d4e671758 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563d4e671720 <col:102> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x563d4e6719d8 <line:766:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563d4e6717f0 <col:3> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563d4e6719c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d4e671990 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563d4e6718b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563d4e671868 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563d4e671850 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563d4e671810 <col:20> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563d4e671898 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563d4e671880 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563d4e671830 <col:38> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563d4e671948 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563d4e671900 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563d4e6718d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563d4e671978 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563d4e671960 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563d4e671928 <col:66> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x563d4e671cc0 <line:767:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563d4e6719f8 <col:3> '_Bool' lvalue Var 0x563d4e66c150 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563d4e671ca8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563d4e671c78 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563d4e671b98 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563d4e671ab8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563d4e671a70 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563d4e671a58 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563d4e671a18 <col:20> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563d4e671aa0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563d4e671a88 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563d4e671a38 <col:38> '_Bool' lvalue Var 0x563d4e66bfe8 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x563d4e671b78 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563d4e671b30 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563d4e671b18 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563d4e671ad8 <col:56> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563d4e671b60 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563d4e671b48 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563d4e671af8 <col:74> '_Bool' lvalue Var 0x563d4e66c150 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563d4e671c30 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563d4e671be8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563d4e671bb8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563d4e671c60 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563d4e671c48 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563d4e671c10 <col:102> '_Bool' lvalue Var 0x563d4e66c150 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x563d4e671d18 <line:768:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563d4e671d00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d4e671ce0 <col:3> 'void ()' Function 0x563d4e612410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563d4e671d70 <line:769:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563d4e671d58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d4e671d38 <col:3> 'void ()' Function 0x563d4e612350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563d4e671e28 <line:770:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x563d4e671d90 <col:3> 'int' lvalue Var 0x563d4e66b438 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x563d4e671e08 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x563d4e671df0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563d4e671db0 <col:22> 'int' lvalue Var 0x563d4e66b438 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x563d4e671dd0 <col:41> 'int' 1
|   |-CallExpr 0x563d4e671e80 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563d4e671e68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563d4e671e48 <col:3> 'void ()' Function 0x563d4e612410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x563d4e671ef8 <line:772:3, col:36>
|     `-CallExpr 0x563d4e671ed8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x563d4e671ec0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x563d4e671ea0 <col:10> 'void *(void)' Function 0x563d4e611e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x563d4e672108 prev 0x563d4e66b180 <line:774:1, line:776:1> line:774:6 fence 'void ()'
| `-CompoundStmt 0x563d4e6721a8 <line:775:1, line:776:1>
|-FunctionDecl 0x563d4e6721d8 prev 0x563d4e66b240 <line:777:1, line:779:1> line:777:6 isync 'void ()'
| `-CompoundStmt 0x563d4e672278 <line:778:1, line:779:1>
|-FunctionDecl 0x563d4e6722a8 prev 0x563d4e66b300 <line:780:1, line:782:1> line:780:6 lwfence 'void ()'
| `-CompoundStmt 0x563d4e672348 <line:781:1, line:782:1>
`-FunctionDecl 0x563d4e6723b8 <line:783:1, line:805:1> line:783:5 main 'int ()'
  `-CompoundStmt 0x563d4e673e00 <line:784:1, line:805:1>
    |-DeclStmt 0x563d4e6724d0 <line:785:3, col:17>
    | `-VarDecl 0x563d4e672468 <col:3, col:13> col:13 used t255 'pthread_t':'unsigned long'
    |-CallExpr 0x563d4e6726d8 <line:786:3, col:53> 'int'
    | |-ImplicitCastExpr 0x563d4e6726c0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563d4e6724e8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x563d4e6528f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563d4e672528 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563d4e672508 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563d4e672468 't255' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563d4e672718 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563d4e6725a0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x563d4e672578 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563d4e672540 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x563d4e672730 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563d4e6725c0 <col:38> 'void *(void *)' Function 0x563d4e66c640 'P0' 'void *(void *)'
    | `-ParenExpr 0x563d4e672640 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x563d4e672618 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563d4e6725e0 <col:51> 'int' 0
    |-DeclStmt 0x563d4e6727c0 <line:787:3, col:17>
    | `-VarDecl 0x563d4e672758 <col:3, col:13> col:13 used t256 'pthread_t':'unsigned long'
    |-CallExpr 0x563d4e672968 <line:788:3, col:53> 'int'
    | |-ImplicitCastExpr 0x563d4e672950 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563d4e6727d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x563d4e6528f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563d4e672818 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563d4e6727f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563d4e672758 't256' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563d4e6729a8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563d4e672890 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x563d4e672868 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563d4e672830 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x563d4e6729c0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563d4e6728b0 <col:38> 'void *(void *)' Function 0x563d4e66e220 'P1' 'void *(void *)'
    | `-ParenExpr 0x563d4e672930 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x563d4e672908 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563d4e6728d0 <col:51> 'int' 0
    |-CallExpr 0x563d4e672a10 <line:789:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563d4e6729f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563d4e6729d8 <col:3> 'void ()' Function 0x563d4e612350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563d4e672ae0 <line:790:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x563d4e672a30 <col:3> '_Bool' lvalue Var 0x563d4e66b950 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x563d4e672ac8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x563d4e672aa8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x563d4e672a90 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x563d4e672a50 <col:21> 'int' lvalue Var 0x563d4e66b438 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x563d4e672a70 <col:41> 'int' 2
    |-CallExpr 0x563d4e672b38 <line:791:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563d4e672b20 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563d4e672b00 <col:3> 'void ()' Function 0x563d4e612410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563d4e672bb0 <line:792:3, col:36> 'void'
    | |-ImplicitCastExpr 0x563d4e672b98 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563d4e672b58 <col:3> 'void (int)' Function 0x563d4e611ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x563d4e672bf0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x563d4e672bd8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x563d4e672b78 <col:21> '_Bool' lvalue Var 0x563d4e66b950 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x563d4e672c40 <line:793:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563d4e672c28 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563d4e672c08 <col:3> 'void ()' Function 0x563d4e612350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563d4e672f28 <line:794:3, col:103> 'int' '='
    | |-DeclRefExpr 0x563d4e672c60 <col:3> 'int' lvalue Var 0x563d4e66bd08 'z' 'int'
    | `-ConditionalOperator 0x563d4e672ef8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x563d4e672d20 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x563d4e672cd8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x563d4e672cc0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x563d4e672c80 <col:7> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x563d4e672d08 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x563d4e672cf0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x563d4e672ca0 <col:25> '_Bool' lvalue Var 0x563d4e66be98 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x563d4e672ee0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x563d4e672d40 <col:42> 'int' lvalue Var 0x563d4e66c2c8 'z$w_buff0' 'int'
    |   `-ParenExpr 0x563d4e672ec0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x563d4e672e90 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x563d4e672e00 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x563d4e672db8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x563d4e672da0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x563d4e672d60 <col:55> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x563d4e672de8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x563d4e672dd0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x563d4e672d80 <col:73> '_Bool' lvalue Var 0x563d4e66c060 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x563d4e672e60 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x563d4e672e20 <col:90> 'int' lvalue Var 0x563d4e66c3c0 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x563d4e672e78 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x563d4e672e40 <col:102> 'int' lvalue Var 0x563d4e66bd08 'z' 'int'
    |-BinaryOperator 0x563d4e673150 <line:795:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x563d4e672f48 <col:3> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x563d4e673138 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563d4e673108 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x563d4e673028 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x563d4e672fe0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x563d4e672fa8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x563d4e672f68 <col:20> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x563d4e673010 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x563d4e672ff8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x563d4e672f88 <col:38> '_Bool' lvalue Var 0x563d4e66be98 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563d4e6730c0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563d4e673078 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563d4e673048 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x563d4e6730f0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563d4e6730d8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563d4e6730a0 <col:66> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x563d4e673438 <line:796:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x563d4e673170 <col:3> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x563d4e673420 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563d4e6733f0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x563d4e673310 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x563d4e673230 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x563d4e6731e8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x563d4e6731d0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x563d4e673190 <col:20> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x563d4e673218 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x563d4e673200 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x563d4e6731b0 <col:38> '_Bool' lvalue Var 0x563d4e66be98 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x563d4e6732f0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x563d4e6732a8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x563d4e673290 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x563d4e673250 <col:56> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x563d4e6732d8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x563d4e6732c0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x563d4e673270 <col:74> '_Bool' lvalue Var 0x563d4e66c060 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563d4e6733a8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563d4e673360 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563d4e673330 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x563d4e6733d8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563d4e6733c0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563d4e673388 <col:102> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x563d4e673640 <line:797:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x563d4e673458 <col:3> '_Bool' lvalue Var 0x563d4e66be98 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x563d4e673628 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563d4e6735f8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x563d4e673518 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x563d4e6734d0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x563d4e6734b8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x563d4e673478 <col:20> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x563d4e673500 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x563d4e6734e8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x563d4e673498 <col:38> '_Bool' lvalue Var 0x563d4e66be98 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563d4e6735b0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563d4e673568 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563d4e673538 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x563d4e6735e0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563d4e6735c8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563d4e673590 <col:66> '_Bool' lvalue Var 0x563d4e66be98 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x563d4e673928 <line:798:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x563d4e673660 <col:3> '_Bool' lvalue Var 0x563d4e66c060 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x563d4e673910 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563d4e6738e0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x563d4e673800 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x563d4e673720 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x563d4e6736d8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x563d4e6736c0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x563d4e673680 <col:20> '_Bool' lvalue Var 0x563d4e66c340 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x563d4e673708 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x563d4e6736f0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x563d4e6736a0 <col:38> '_Bool' lvalue Var 0x563d4e66be98 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x563d4e6737e0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x563d4e673798 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x563d4e673780 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x563d4e673740 <col:56> '_Bool' lvalue Var 0x563d4e66c438 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x563d4e6737c8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x563d4e6737b0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x563d4e673760 <col:74> '_Bool' lvalue Var 0x563d4e66c060 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563d4e673898 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563d4e673850 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563d4e673820 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x563d4e6738c8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563d4e6738b0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563d4e673878 <col:102> '_Bool' lvalue Var 0x563d4e66c060 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x563d4e673980 <line:799:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563d4e673968 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563d4e673948 <col:3> 'void ()' Function 0x563d4e612410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563d4e6739d8 <line:800:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563d4e6739c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563d4e6739a0 <col:3> 'void ()' Function 0x563d4e612350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563d4e673ca8 <line:801:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x563d4e6739f8 <col:3> '_Bool' lvalue Var 0x563d4e66b9c8 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x563d4e673c90 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x563d4e673c78 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x563d4e673c58 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x563d4e673c38 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x563d4e673ba0 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x563d4e673b08 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x563d4e673a70 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x563d4e673a58 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x563d4e673a18 <col:23> 'int' lvalue Var 0x563d4e66b558 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x563d4e673a38 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x563d4e673ae8 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x563d4e673ad0 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x563d4e673a90 <col:51> 'int' lvalue Var 0x563d4e66b678 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x563d4e673ab0 <col:74> 'int' 0
    |         | `-BinaryOperator 0x563d4e673b80 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x563d4e673b68 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x563d4e673b28 <col:79> 'int' lvalue Var 0x563d4e66b798 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x563d4e673b48 <col:102> 'int' 1
    |         `-BinaryOperator 0x563d4e673c18 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x563d4e673c00 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x563d4e673bc0 <col:107> 'int' lvalue Var 0x563d4e66b8b8 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x563d4e673be0 <col:130> 'int' 0
    |-CallExpr 0x563d4e673d00 <line:802:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563d4e673ce8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563d4e673cc8 <col:3> 'void ()' Function 0x563d4e612410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563d4e673d78 <line:803:3, col:36> 'void'
    | |-ImplicitCastExpr 0x563d4e673d60 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563d4e673d20 <col:3> 'void (int)' Function 0x563d4e6120d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x563d4e673db8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x563d4e673da0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x563d4e673d40 <col:21> '_Bool' lvalue Var 0x563d4e66b9c8 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x563d4e673df0 <line:804:3, col:10>
      `-IntegerLiteral 0x563d4e673dd0 <col:10> 'int' 0
