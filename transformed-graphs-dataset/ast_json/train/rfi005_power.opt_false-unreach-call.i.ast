TranslationUnitDecl 0x56011883df88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56011883e848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56011883e520 '__int128'
|-TypedefDecl 0x56011883e8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56011883e540 'unsigned __int128'
|-TypedefDecl 0x56011883ebc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56011883e990 'struct __NSConstantString_tag'
|   `-Record 0x56011883e910 '__NSConstantString_tag'
|-TypedefDecl 0x56011883ec68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56011883ec20 'char *'
|   `-BuiltinType 0x56011883e020 'char'
|-TypedefDecl 0x56011887db60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56011883ef00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56011883ed40 'struct __va_list_tag'
|     `-Record 0x56011883ecc0 '__va_list_tag'
|-FunctionDecl 0x56011887dc80 <pthread-wmm/rfi005_power.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x56011887de50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x56011887dd80 <col:31> col:34 'int'
|-FunctionDecl 0x56011887dfc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x56011887e0f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x56011887e238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x56011887e1a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x56011887e468 <col:40, col:99>
|   |-IfStmt 0x56011887e438 <col:42, col:88>
|   | |-UnaryOperator 0x56011887e318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x56011887e300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x56011887e2e0 <col:47> 'int' lvalue ParmVar 0x56011887e1a8 'expression' 'int'
|   | `-CompoundStmt 0x56011887e420 <col:59, col:88>
|   |   `-LabelStmt 0x56011887e408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x56011887e398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x56011887e380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x56011887e330 <col:68> 'void () __attribute__((noreturn))' Function 0x56011887e0f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x56011887e450 <col:89>
|   `-ReturnStmt 0x56011887e458 <col:91>
|-FunctionDecl 0x56011887e4b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x56011887e570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x56011887e8f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56011887e628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x56011887e6a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x56011887e728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56011887e7a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56011887e9b0 <line:11:22>
|-FunctionDecl 0x5601188a3f10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56011887ea20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x56011887eaa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5601188a3d40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5601188a3dc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5601188a3fd0 <line:14:22>
|-FunctionDecl 0x5601188a4280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5601188a4040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5601188a40c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5601188a4140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5601188a4338 <line:16:22>
|-TypedefDecl 0x5601188a43a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x56011883e0e0 'unsigned char'
|-TypedefDecl 0x5601188a4418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x56011883e100 'unsigned short'
|-TypedefDecl 0x5601188a4488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x56011883e120 'unsigned int'
|-TypedefDecl 0x5601188a44f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x56011883e140 'unsigned long'
|-TypedefDecl 0x5601188a4568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x56011883e040 'signed char'
|-TypedefDecl 0x5601188a45d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x56011883e0e0 'unsigned char'
|-TypedefDecl 0x5601188a4648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x56011883e060 'short'
|-TypedefDecl 0x5601188a46b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x56011883e100 'unsigned short'
|-TypedefDecl 0x5601188a4728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x56011883e080 'int'
|-TypedefDecl 0x5601188a4798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x56011883e120 'unsigned int'
|-TypedefDecl 0x5601188a4808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x56011883e0a0 'long'
|-TypedefDecl 0x5601188a4878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x56011883e140 'unsigned long'
|-TypedefDecl 0x5601188a48e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x56011883e0a0 'long'
|-TypedefDecl 0x5601188a4958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x56011883e140 'unsigned long'
|-TypedefDecl 0x5601188a49c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x56011883e140 'unsigned long'
|-TypedefDecl 0x5601188a4a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x56011883e120 'unsigned int'
|-TypedefDecl 0x5601188a4aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x56011883e120 'unsigned int'
|-TypedefDecl 0x5601188a4b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x56011883e140 'unsigned long'
|-TypedefDecl 0x5601188a4b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x56011883e140 'unsigned long'
|-TypedefDecl 0x5601188a4bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x56011883e120 'unsigned int'
|-TypedefDecl 0x5601188a4c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x56011883e140 'unsigned long'
|-TypedefDecl 0x5601188a4cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x56011883e0a0 'long'
|-TypedefDecl 0x5601188a4d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x56011883e0a0 'long'
|-TypedefDecl 0x5601188a4dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x56011883e080 'int'
|-RecordDecl 0x5601188a4e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x5601188a4f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5601188a5030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5601188a4fd0 'struct __fsid_t' sugar
|   `-RecordType 0x5601188a4eb0 '__fsid_t'
|     `-Record 0x5601188a4e30 ''
|-TypedefDecl 0x5601188a50b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x56011883e0a0 'long'
|-TypedefDecl 0x5601188a5128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x56011883e140 'unsigned long'
|-TypedefDecl 0x5601188a5198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x56011883e140 'unsigned long'
|-TypedefDecl 0x5601188a5208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x56011883e120 'unsigned int'
|-TypedefDecl 0x5601188a5278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x56011883e0a0 'long'
|-TypedefDecl 0x5601188a52e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x56011883e120 'unsigned int'
|-TypedefDecl 0x5601188a5358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x56011883e0a0 'long'
|-TypedefDecl 0x5601188a53c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x56011883e080 'int'
|-TypedefDecl 0x5601188a5438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x56011883e080 'int'
|-TypedefDecl 0x5601188a54a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x56011883e080 'int'
|-TypedefDecl 0x5601188a5518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x56011883e7a0 'void *'
|   `-BuiltinType 0x56011883dfe0 'void'
|-TypedefDecl 0x5601188a5588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x56011883e0a0 'long'
|-TypedefDecl 0x5601188a55f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x56011883e0a0 'long'
|-TypedefDecl 0x5601188a5668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x56011883e0a0 'long'
|-TypedefDecl 0x5601188a56d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x56011883e140 'unsigned long'
|-TypedefDecl 0x5601188a5748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x56011883e140 'unsigned long'
|-TypedefDecl 0x5601188a57b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x56011883e140 'unsigned long'
|-TypedefDecl 0x5601188a5828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x56011883e140 'unsigned long'
|-TypedefDecl 0x5601188a5898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x56011883e0a0 'long'
|-TypedefDecl 0x5601188a5908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x56011883e0a0 'long'
|-TypedefDecl 0x5601188a5978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x56011883e0a0 'long'
|-TypedefDecl 0x5601188a59e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x56011883e140 'unsigned long'
|-TypedefDecl 0x5601188a5a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5601188a5a40 '__off64_t' sugar
|   |-Typedef 0x5601188a4d68 '__off64_t'
|   `-BuiltinType 0x56011883e0a0 'long'
|-TypedefDecl 0x5601188a5b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5601188a5b30 '__quad_t *'
|   `-TypedefType 0x5601188a5ad0 '__quad_t' sugar
|     |-Typedef 0x5601188a48e8 '__quad_t'
|     `-BuiltinType 0x56011883e0a0 'long'
|-TypedefDecl 0x5601188a5be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x56011883ec20 'char *'
|   `-BuiltinType 0x56011883e020 'char'
|-TypedefDecl 0x5601188a5c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x56011883e0a0 'long'
|-TypedefDecl 0x5601188a5cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x56011883e120 'unsigned int'
|-FunctionDecl 0x5601188a5e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5601188a5d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5601188a6148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x5601188a6138 <line:73:3, col:34>
|     `-CallExpr 0x5601188a60f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5601188a60e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5601188a6070 <col:10> '<builtin fn type>' Function 0x5601188a5ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5601188a6120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5601188a6090 <col:29> 'unsigned int' lvalue ParmVar 0x5601188a5d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x5601188a5ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5601188a5f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5601188a5ff0 <col:10> Implicit
| `-ConstAttr 0x5601188a6048 <col:10> Implicit
|-FunctionDecl 0x5601188a62a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5601188a6198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5601188a65b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x5601188a65a8 <line:78:3, col:34>
|     `-CallExpr 0x5601188a6568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5601188a6550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5601188a64d8 <col:10> '<builtin fn type>' Function 0x5601188a6348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5601188a6590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5601188a64f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5601188a6198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5601188a6348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5601188a63e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5601188a6458 <col:10> Implicit
| `-ConstAttr 0x5601188a64b0 <col:10> Implicit
|-TypedefDecl 0x5601188a65e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x56011883e140 'unsigned long'
|-TypedefDecl 0x5601188a6678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5601188a6640 '__time_t' sugar
|   |-Typedef 0x5601188a5278 '__time_t'
|   `-BuiltinType 0x56011883e0a0 'long'
|-RecordDecl 0x5601188a66d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x5601188a6788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5601188a6818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5601188a68a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5601188a6870 '__pid_t' sugar
|   |-Typedef 0x5601188a4dd8 '__pid_t'
|   `-BuiltinType 0x56011883e080 'int'
|-RecordDecl 0x5601188a6900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x5601188a69c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5601188a6a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x5601188a6ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5601188a6b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x56011883e140 'unsigned long'
|-RecordDecl 0x5601188a6b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x5601188a8e70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5601188a8f20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5601188a8ec0 'struct cpu_set_t' sugar
|   `-RecordType 0x5601188a6c10 'cpu_set_t'
|     `-Record 0x5601188a6b90 ''
|-FunctionDecl 0x5601188a91f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5601188a8fc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5601188a90d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5601188a92a8 <line:108:19>
|-FunctionDecl 0x5601188a9480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5601188a9310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5601188a9528 <col:69>
|-FunctionDecl 0x5601188a96a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5601188a9590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5601188a9748 <col:64>
|-FunctionDecl 0x5601188a9a08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5601188a97b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5601188a98e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5601188a9ab8 <line:114:22>
|-FunctionDecl 0x5601188a9e60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5601188a9b20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5601188a9c18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5601188a9f10 <col:88>
|-FunctionDecl 0x5601188aa1c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5601188a9f78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5601188a9ff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5601188aa088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5601188aa280 <col:62>
|-FunctionDecl 0x5601188aa3f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5601188aa2e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5601188aa4a0 <col:63>
|-FunctionDecl 0x5601188aa5c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5601188aa668 <col:47>
|-FunctionDecl 0x5601188aa770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5601188aa6d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5601188aa818 <col:69>
|-FunctionDecl 0x5601188aa920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5601188aa888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5601188aa9c8 <col:69>
|-FunctionDecl 0x5601188aac88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5601188aaa30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5601188aab68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5601188aad38 <col:88>
|-TypedefDecl 0x5601188aadc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5601188aad90 '__clock_t' sugar
|   |-Typedef 0x5601188a50b8 '__clock_t'
|   `-BuiltinType 0x56011883e0a0 'long'
|-TypedefDecl 0x5601188ab7e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5601188aae20 '__clockid_t' sugar
|   |-Typedef 0x5601188a54a8 '__clockid_t'
|   `-BuiltinType 0x56011883e080 'int'
|-TypedefDecl 0x5601188ab878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5601188ab840 '__timer_t' sugar
|   |-Typedef 0x5601188a5518 '__timer_t'
|   `-PointerType 0x56011883e7a0 'void *'
|     `-BuiltinType 0x56011883dfe0 'void'
|-RecordDecl 0x5601188ab8d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x5601188ab990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5601188ab9f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5601188aba60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5601188abac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5601188abb30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5601188abb98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5601188abc00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5601188abc68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5601188abcd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5601188abd38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5601188abda0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5601188abdf0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x5601188abeb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5601188abf28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5601188abfd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5601188ac1a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5601188ac240 <col:45>
|-FunctionDecl 0x5601188ac420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5601188ac310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5601188ac4c8 <col:54>
|-FunctionDecl 0x5601188ac6c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5601188ac530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5601188ac5a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5601188ac778 <line:158:22>
| `-ConstAttr 0x5601188ad410 <col:63>
|-FunctionDecl 0x5601188ad610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5601188ad508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5601188ad6b8 <col:56>
|-FunctionDecl 0x5601188ada60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5601188ad728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5601188ad7a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5601188ad820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5601188ad918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5601188adb20 <col:54>
|-RecordDecl 0x5601188adb78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x5601188adc28 parent 0x56011883df88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5601188ade88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5601188adf28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5601188adf90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5601188adff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5601188ae0e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5601188ae208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5601188ae1b0 'struct __locale_struct *'
|   `-ElaboratedType 0x5601188ae140 'struct __locale_struct' sugar
|     `-RecordType 0x5601188adc00 'struct __locale_struct'
|       `-Record 0x5601188adb78 '__locale_struct'
|-TypedefDecl 0x5601188ae2b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5601188ae280 '__locale_t' sugar
|   |-Typedef 0x5601188ae208 '__locale_t'
|   `-PointerType 0x5601188ae1b0 'struct __locale_struct *'
|     `-ElaboratedType 0x5601188ae140 'struct __locale_struct' sugar
|       `-RecordType 0x5601188adc00 'struct __locale_struct'
|         `-Record 0x5601188adb78 '__locale_struct'
|-FunctionDecl 0x5601188ae6b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5601188ae328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5601188ae3a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5601188ae438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5601188ae4c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5601188ae540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5601188ae778 <col:40>
|-FunctionDecl 0x5601188ae968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5601188ae840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5601188aea10 <col:66>
|-FunctionDecl 0x5601188aeb20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5601188aea78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5601188aebc8 <col:69>
|-FunctionDecl 0x5601188aedf8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5601188aec30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5601188aecc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5601188aeea8 <col:52>
|-FunctionDecl 0x5601188af050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5601188aef10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5601188aefa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5601188af100 <col:55>
|-FunctionDecl 0x5601188af298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5601188af180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5601188af340 <col:62>
|-FunctionDecl 0x5601188af578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5601188af3a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5601188af620 <col:60>
|-FunctionDecl 0x5601188af848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5601188af6a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5601188af720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5601188af8f8 <col:44>
|-FunctionDecl 0x5601188afb08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5601188af960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5601188af9e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5601188afbb8 <col:49>
|-VarDecl 0x5601188afcb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5601188afd38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5601188afdb8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5601188afe80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5601188affb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5601188b0050 <col:42>
|-VarDecl 0x5601188b00c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5601188b0140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5601188b02c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5601188b01b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5601188b0370 <col:57>
|-FunctionDecl 0x5601188b14f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5601188b03f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5601188b1598 <col:56>
|-FunctionDecl 0x5601188b16a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5601188b1618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5601188b1750 <col:59>
|-FunctionDecl 0x5601188b1858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5601188b17c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5601188b1900 <col:48>
| `-ConstAttr 0x5601188b1958 <col:89>
|-FunctionDecl 0x5601188b1bb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5601188b1a08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5601188b1a98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5601188b1e18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5601188b1ca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5601188b1d38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5601188b1ec8 <col:88>
|-FunctionDecl 0x5601188b2060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5601188b1f30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5601188b1fc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5601188b2110 <col:88>
|-FunctionDecl 0x5601188b2328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5601188b2178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5601188b2208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5601188b23d8 <line:209:22>
|-FunctionDecl 0x5601188b2778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5601188b2440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5601188b2500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5601188b2590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5601188b2620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5601188b2a78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5601188b2878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5601188b2950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5601188b2b28 <col:85>
|-FunctionDecl 0x5601188b2f18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5601188b2b90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5601188b2cc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5601188b2dd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5601188b2fd0 <col:52>
|-FunctionDecl 0x5601188b3148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5601188b3038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5601188b31f0 <col:61>
|-FunctionDecl 0x5601188b3668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5601188b3258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5601188b32d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5601188b3408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5601188b3510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5601188b3728 <col:62>
|-FunctionDecl 0x5601188b3948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5601188b3790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5601188b3820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5601188b39f8 <line:222:22>
|-FunctionDecl 0x5601188b3af8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5601188b3a60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5601188b3ba0 <col:65>
|-TypedefDecl 0x5601188b3c10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x56011883e140 'unsigned long'
|-RecordDecl 0x5601188b3c68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x5601188b3db0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5601188b3e18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5601188b3ec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5601188b3e70 'union pthread_attr_t' sugar
|   `-RecordType 0x5601188b3cf0 'union pthread_attr_t'
|     `-Record 0x5601188b3c68 'pthread_attr_t'
|-RecordDecl 0x5601188b3f20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5601188b4098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5601188b4110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5601188b41c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5601188b4160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5601188b3fa0 'struct __pthread_internal_list'
|     `-Record 0x5601188b3f20 '__pthread_internal_list'
|-RecordDecl 0x5601188b4230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x5601188b42d8 parent 0x56011883df88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5601188b43b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5601188b4418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5601188b4480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5601188b8530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5601188b8598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5601188b8600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5601188b8688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5601188b8740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5601188b8830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5601188b8898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5601188b8a20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5601188b89c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5601188b42b0 'pthread_mutex_t'
|     `-Record 0x5601188b4230 ''
|-RecordDecl 0x5601188b8a90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x5601188b8bd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5601188b8c38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5601188b8cf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5601188b8c90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5601188b8b10 'pthread_mutexattr_t'
|     `-Record 0x5601188b8a90 ''
|-RecordDecl 0x5601188b8d60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x5601188b8e08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x5601188b8ed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5601188b8f38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5601188b8fa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5601188b9008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5601188b9070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5601188b90d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5601188b9140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5601188b91a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5601188b9260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi005_power.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/rfi005_power.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x5601188b9350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5601188b93b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5601188b9540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5601188b9490 'union pthread_cond_t' sugar
|   `-RecordType 0x5601188b8de0 'pthread_cond_t'
|     `-Record 0x5601188b8d60 ''
|-RecordDecl 0x5601188b95b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x5601188b96b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5601188b9718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5601188b97d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5601188b9770 'union pthread_condattr_t' sugar
|   `-RecordType 0x5601188b9630 'pthread_condattr_t'
|     `-Record 0x5601188b95b0 ''
|-TypedefDecl 0x5601188b9858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x56011883e120 'unsigned int'
|-TypedefDecl 0x5601188b98c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x56011883e080 'int'
|-RecordDecl 0x5601188b9920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x5601188b99c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x5601188b9a90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5601188b9af8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5601188b9b60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5601188b9bc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5601188b9c30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5601188b9c98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5601188b9d00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5601188b9d68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5601188b9dd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5601188b9e38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5601188b9ea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5601188b9f50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi005_power.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/rfi005_power.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x5601188b9ff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5601188ba060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5601188ba1b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5601188ba150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5601188b99a0 'pthread_rwlock_t'
|     `-Record 0x5601188b9920 ''
|-RecordDecl 0x5601188ba220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x5601188ba360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5601188ba3c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5601188ba480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5601188ba420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5601188ba2a0 'pthread_rwlockattr_t'
|     `-Record 0x5601188ba220 ''
|-TypedefDecl 0x5601188bc560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x56011883e084 'volatile int' volatile
|   `-BuiltinType 0x56011883e080 'int'
|-RecordDecl 0x5601188bc5b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x5601188bc700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5601188bc768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5601188bc820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5601188bc7c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x5601188bc640 'pthread_barrier_t'
|     `-Record 0x5601188bc5b8 ''
|-RecordDecl 0x5601188bc890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x5601188bc990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5601188bc9f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5601188bcab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5601188bca50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5601188bc910 'pthread_barrierattr_t'
|     `-Record 0x5601188bc890 ''
|-TypedefDecl 0x5601188bcbc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5601188bcb60 'long [8]' 8 
|   `-BuiltinType 0x56011883e0a0 'long'
|-EnumDecl 0x5601188bcc20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x5601188bcce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5601188bcd38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5601188bcd88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x5601188bce58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5601188bcea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5601188bcef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5601188bcf48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5601188bcfd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5601188bcfb8 <col:26> 'int'
| |   `-DeclRefExpr 0x5601188bcf98 <col:26> 'int' EnumConstant 0x5601188bce58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5601188bd058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5601188bd040 <col:29> 'int'
| |   `-DeclRefExpr 0x5601188bd020 <col:29> 'int' EnumConstant 0x5601188bcea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5601188bd0e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5601188bd0c8 <col:30> 'int'
| |   `-DeclRefExpr 0x5601188bd0a8 <col:30> 'int' EnumConstant 0x5601188bcef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5601188bd168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5601188bd150 <col:27> 'int'
|     `-DeclRefExpr 0x5601188bd130 <col:27> 'int' EnumConstant 0x5601188bcfd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5601188bd1b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x5601188bd288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5601188bd310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5601188bd2f8 <col:30> 'int'
| |   `-DeclRefExpr 0x5601188bd2d8 <col:30> 'int' EnumConstant 0x5601188bd288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5601188bd360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5601188bd3e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5601188bd3d0 <col:29> 'int'
|     `-DeclRefExpr 0x5601188bd3b0 <col:29> 'int' EnumConstant 0x5601188bd360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5601188bd438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x5601188bd508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5601188bd570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5601188bd5c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5601188bd610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x5601188bd6d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5601188bd728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5601188bd778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5601188bd800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5601188bd7e8 <col:31> 'int'
|     `-DeclRefExpr 0x5601188bd7c8 <col:31> 'int' EnumConstant 0x5601188bd6d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5601188bd850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x5601188bd918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5601188bd968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5601188bd9b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x5601188bda88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5601188bdad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5601188bdb28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x5601188bdbf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5601188bdc48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5601188bdc98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5601188bded8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5601188bdf40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5601188bdfa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5601188be0c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5601188be118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x5601188be1e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5601188be238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5601188be288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x5601188be358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5601188be3a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5601188be9d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5601188be4a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5601188be5c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5601188be7c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5601188be840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5601188bea98 <col:47>
| |-NonNullAttr 0x5601188beaf0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5601188beb28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x5601188bec50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5601188beb80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5601188beea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5601188bed08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5601188bed88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5601188bf078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5601188bef68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5601188bf120 <col:60>
|-FunctionDecl 0x5601188bf270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5601188bf310 <col:54>
| `-ConstAttr 0x5601188bf368 <col:95>
|-FunctionDecl 0x5601188bfda0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5601188bf3a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5601188bf418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5601188bfe50 <line:395:19>
| `-ConstAttr 0x5601188bfea8 <col:60>
|-FunctionDecl 0x5601188c0078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5601188bff40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5601188c0120 <col:71>
| `-NonNullAttr 0x5601188c0178 <col:112, col:126> 1
|-FunctionDecl 0x5601188c0280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5601188c01c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5601188c0328 <line:398:22>
| `-NonNullAttr 0x5601188c0380 <col:63, col:77> 1
|-FunctionDecl 0x5601188c05a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5601188c03c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5601188c0448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5601188c0658 <line:401:22>
| `-NonNullAttr 0x5601188c06b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5601188c08b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5601188c06f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5601188c0778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5601188c0968 <line:404:22>
| `-NonNullAttr 0x5601188c09c0 <col:63, col:77> 1
|-FunctionDecl 0x5601188c0c18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5601188c0a08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5601188c0ab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5601188c0cc8 <line:407:22>
| `-NonNullAttr 0x5601188c0d20 <col:63, col:80> 1 2
|-FunctionDecl 0x5601188c1f78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5601188c1dc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5601188c1e38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5601188c2028 <line:410:22>
| `-NonNullAttr 0x5601188c2080 <col:63, col:77> 1
|-FunctionDecl 0x5601188c22b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5601188c20c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5601188c2158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5601188c2368 <line:413:22>
| `-NonNullAttr 0x5601188c23c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5601188c25f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5601188c2408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5601188c2498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5601188c26a8 <col:37>
| `-NonNullAttr 0x5601188c2700 <col:78, col:95> 1 2
|-FunctionDecl 0x5601188c28e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5601188c2748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5601188c27c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5601188c2998 <line:419:22>
| `-NonNullAttr 0x5601188c29f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5601188c2b78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5601188c2a38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5601188c2ab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5601188c2c28 <line:421:22>
| `-NonNullAttr 0x5601188c2c80 <col:63, col:77> 1
|-FunctionDecl 0x5601188c3e58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5601188c2cc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5601188c2d48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5601188c3f08 <line:424:22>
| `-NonNullAttr 0x5601188c3f60 <col:63, col:80> 1 2
|-FunctionDecl 0x5601188c40e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5601188c3fa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5601188c4028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5601188c4198 <line:427:22>
| `-NonNullAttr 0x5601188c41f0 <col:63, col:77> 1
|-FunctionDecl 0x5601188c4398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5601188c4238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5601188c42b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5601188c4448 <line:430:22>
| `-NonNullAttr 0x5601188c44a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5601188c4628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5601188c44e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5601188c4568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5601188c46d8 <line:432:22>
| `-NonNullAttr 0x5601188c4730 <col:63, col:77> 1
|-FunctionDecl 0x5601188c4958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5601188c4778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5601188c47f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5601188c4a08 <line:435:22>
| |-NonNullAttr 0x5601188c4a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5601188c4a98 <col:100> "" ""
|-FunctionDecl 0x5601188c4ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5601188c4ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5601188c4b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5601188c4d58 <line:438:22>
| |-NonNullAttr 0x5601188c4db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x5601188c4df8 <col:97> "" ""
|-FunctionDecl 0x5601188c4fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5601188c4e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5601188c4ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5601188c5098 <line:441:22>
| `-NonNullAttr 0x5601188c50f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5601188c5270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5601188c5138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5601188c51b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5601188c5320 <line:444:22>
| `-NonNullAttr 0x5601188c5378 <col:63, col:77> 1
|-FunctionDecl 0x5601188c5668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5601188c53c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5601188c5448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5601188c54c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5601188c5720 <line:448:22>
| `-NonNullAttr 0x5601188c5778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5601188c5a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5601188c57d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5601188c5850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5601188c58c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5601188c5ae0 <col:43>
| `-NonNullAttr 0x5601188c5b38 <col:84, col:98> 1
|-FunctionDecl 0x5601188c5e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5601188c5b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5601188c5c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5601188c5c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5601188c5ef8 <line:453:22>
| `-NonNullAttr 0x5601188c5f50 <col:63, col:77> 3
|-FunctionDecl 0x5601188c6228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5601188c5f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5601188c6018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5601188c60a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5601188c62e0 <line:457:22>
| `-NonNullAttr 0x5601188c6338 <col:63, col:80> 2 3
|-FunctionDecl 0x5601188c6528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5601188c6388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5601188c6408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5601188c65d8 <line:459:22>
|-FunctionDecl 0x5601188c69a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5601188c66a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5601188c6840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5601188c6a58 <col:52, col:69> 1 2
|-FunctionDecl 0x5601188c6c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5601188c6ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5601188c6b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5601188c6e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5601188c6cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5601188c6d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5601188c6f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5601188c6ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5601188c70a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5601188c7148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x5601188c71f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x5601188c72e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5601188c7350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5601188c7520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/rfi005_power.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x5601188c7618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5601188c76d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5601188c7670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5601188c71d0 '__pthread_unwind_buf_t'
| |   `-Record 0x5601188c7148 ''
| `-AlignedAttr 0x5601188c7728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5601188c77a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5601188c7900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5601188c7968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5601188c79d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5601188c7a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5601188c7c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5601188c7b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5601188c7e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5601188c7cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5601188c7fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5601188c7ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5601188c8088 <line:488:22>
|-RecordDecl 0x5601188c80e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5601188c83f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5601188c8258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5601188c82d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5601188c84a8 <col:86>
| `-ReturnsTwiceAttr 0x5601188c8500 <col:12> Implicit
|-FunctionDecl 0x5601188c8828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5601188c85d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5601188c86e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5601188c88d8 <line:494:22>
| `-NonNullAttr 0x5601188c8930 <col:63, col:77> 1
|-FunctionDecl 0x5601188c8aa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5601188c8978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5601188c8b50 <line:496:22>
| `-NonNullAttr 0x5601188c8ba8 <col:63, col:77> 1
|-FunctionDecl 0x5601188c8cb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5601188c8bf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5601188c8d58 <line:498:22>
| `-NonNullAttr 0x5601188c8db0 <col:52, col:66> 1
|-FunctionDecl 0x5601188c8ee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5601188c8e30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5601188c8f90 <line:500:22>
| `-NonNullAttr 0x5601188c8fe8 <col:52, col:66> 1
|-FunctionDecl 0x5601188c9228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5601188c9038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5601188c90c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5601188c92d8 <col:36>
| `-NonNullAttr 0x5601188c9330 <col:66, col:83> 1 2
|-FunctionDecl 0x5601188c9430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5601188c9378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5601188c94d8 <line:505:22>
| `-NonNullAttr 0x5601188c9530 <col:52, col:66> 1
|-FunctionDecl 0x5601188c97c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5601188c95e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5601188c9660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5601188c9878 <line:509:22>
| `-NonNullAttr 0x5601188c98d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5601188c9b98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5601188c9918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5601188c9998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5601188c9a18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5601188c9c50 <line:513:22>
| `-NonNullAttr 0x5601188c9ca8 <col:63, col:80> 1 3
|-FunctionDecl 0x5601188c9e40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5601188c9cf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5601188c9ee8 <line:515:22>
| `-NonNullAttr 0x5601188c9f40 <col:63, col:77> 1
|-FunctionDecl 0x5601188ca128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5601188c9ff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5601188ca1d0 <line:517:22>
| `-NonNullAttr 0x5601188ca228 <col:63, col:77> 1
|-FunctionDecl 0x5601188ca330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5601188ca278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5601188ca3d8 <line:519:22>
| `-NonNullAttr 0x5601188ca430 <col:63, col:77> 1
|-FunctionDecl 0x5601188ca658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5601188ca478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5601188ca4f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5601188ca708 <line:523:22>
| `-NonNullAttr 0x5601188ca760 <col:63, col:80> 1 2
|-FunctionDecl 0x5601188ca968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5601188ca7a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5601188ca828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5601188caa18 <line:526:22>
| `-NonNullAttr 0x5601188caa70 <col:63, col:77> 1
|-FunctionDecl 0x5601188cac18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5601188caab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5601188cab38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5601188cacc8 <line:529:22>
| `-NonNullAttr 0x5601188cad20 <col:63, col:80> 1 2
|-FunctionDecl 0x5601188cbf20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5601188cad68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5601188cbe60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5601188cbfd0 <line:531:22>
| `-NonNullAttr 0x5601188cc028 <col:63, col:77> 1
|-FunctionDecl 0x5601188cc1d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5601188cc078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5601188cc0f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5601188cc288 <line:535:22>
| `-NonNullAttr 0x5601188cc2e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5601188cc468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5601188cc328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5601188cc3a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5601188cc518 <line:538:22>
| `-NonNullAttr 0x5601188cc570 <col:63, col:77> 1
|-FunctionDecl 0x5601188cc718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5601188cc5b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5601188cc638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5601188cc7c8 <line:542:22>
| `-NonNullAttr 0x5601188cc820 <col:63, col:80> 1 2
|-FunctionDecl 0x5601188cc9a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5601188cc868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5601188cc8e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5601188cca58 <line:545:22>
| `-NonNullAttr 0x5601188ccab0 <col:63, col:77> 1
|-FunctionDecl 0x5601188ccc98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5601188ccaf8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5601188ccb78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5601188ccd48 <line:548:22>
| `-NonNullAttr 0x5601188ccda0 <col:63, col:80> 1 2
|-FunctionDecl 0x5601188cdf58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5601188ccde8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5601188cde98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5601188ce008 <line:551:22>
| `-NonNullAttr 0x5601188ce060 <col:63, col:77> 1
|-FunctionDecl 0x5601188ce398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5601188ce140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5601188ce250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5601188ce448 <col:29>
| `-NonNullAttr 0x5601188ce4a0 <col:70, col:84> 1
|-FunctionDecl 0x5601188ce618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5601188ce4e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5601188ce6c0 <line:556:22>
| `-NonNullAttr 0x5601188ce718 <col:63, col:77> 1
|-FunctionDecl 0x5601188ce820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5601188ce768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5601188ce8c8 <line:558:22>
| `-NonNullAttr 0x5601188ce920 <col:52, col:66> 1
|-FunctionDecl 0x5601188cea20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5601188ce968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5601188ceac8 <line:560:19>
| `-NonNullAttr 0x5601188ceb20 <col:49, col:63> 1
|-FunctionDecl 0x5601188ced58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5601188ceb68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5601188cebf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5601188cee08 <col:39>
| `-NonNullAttr 0x5601188cee90 <col:69, col:86> 1 2
|-FunctionDecl 0x5601188cef90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5601188ceed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5601188cf038 <line:565:22>
| `-NonNullAttr 0x5601188cf090 <col:52, col:66> 1
|-FunctionDecl 0x5601188cf190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5601188cf0d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5601188cf238 <line:567:22>
| `-NonNullAttr 0x5601188cf290 <col:52, col:66> 1
|-FunctionDecl 0x5601188cf448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5601188cf2d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5601188cf368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5601188cf4f8 <col:39>
| `-NonNullAttr 0x5601188cf550 <col:69, col:86> 1 2
|-FunctionDecl 0x5601188cf650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5601188cf598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5601188cf6f8 <line:572:22>
| `-NonNullAttr 0x5601188cf750 <col:52, col:66> 1
|-FunctionDecl 0x5601188cf938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5601188cf800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5601188cf9e0 <line:574:22>
| `-NonNullAttr 0x5601188cfa38 <col:63, col:77> 1
|-FunctionDecl 0x5601188cfb40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5601188cfa88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5601188cfbe8 <line:576:22>
| `-NonNullAttr 0x5601188cfc40 <col:63, col:77> 1
|-FunctionDecl 0x5601188cfea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5601188cfc88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5601188cfd08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5601188cff50 <line:580:22>
| `-NonNullAttr 0x5601188cffa8 <col:63, col:80> 1 2
|-FunctionDecl 0x5601188d01b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5601188cfff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5601188d0078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5601188d0268 <line:583:22>
| `-NonNullAttr 0x5601188d02c0 <col:63, col:77> 1
|-FunctionDecl 0x5601188d0468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5601188d0308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5601188d0388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5601188d0518 <line:587:22>
| `-NonNullAttr 0x5601188d0570 <col:63, col:80> 1 2
|-FunctionDecl 0x5601188d06f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5601188d05b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5601188d0638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5601188d07a8 <col:36>
| `-NonNullAttr 0x5601188d0800 <col:77, col:91> 1
|-FunctionDecl 0x5601188d0b38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5601188d08e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5601188d09f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5601188d0be8 <line:592:22>
| `-NonNullAttr 0x5601188d0c40 <col:63, col:77> 1
|-FunctionDecl 0x5601188d0db8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5601188d0c88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5601188d0e60 <line:594:22>
| `-NonNullAttr 0x5601188d0ee0 <col:63, col:77> 1
|-FunctionDecl 0x5601188d0fe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5601188d0f28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5601188d1088 <line:596:22>
| `-NonNullAttr 0x5601188d10e0 <col:52, col:66> 1
|-FunctionDecl 0x5601188d11e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5601188d1128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5601188d1288 <line:598:22>
| `-NonNullAttr 0x5601188d12e0 <col:52, col:66> 1
|-FunctionDecl 0x5601188d1508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5601188d1328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5601188d13a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5601188d15b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x5601188d18e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5601188d1638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5601188d16b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5601188d1740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5601188d19a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x5601188d1bb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5601188d1a80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5601188d1c60 <line:607:22>
| `-NonNullAttr 0x5601188d1cb8 <col:63, col:77> 1
|-FunctionDecl 0x5601188d1dc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5601188d1d08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5601188d1e68 <line:609:22>
| `-NonNullAttr 0x5601188d1ef0 <col:63, col:77> 1
|-FunctionDecl 0x5601188d2118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5601188d1f38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5601188d1fb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5601188d21c8 <line:613:22>
| `-NonNullAttr 0x5601188d2220 <col:63, col:80> 1 2
|-FunctionDecl 0x5601188d2428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5601188d2268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5601188d22e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5601188d24d8 <col:37>
| `-NonNullAttr 0x5601188d2530 <col:78, col:92> 1
|-FunctionDecl 0x5601188d2748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5601188d2578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5601188d2620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5601188d27f8 <line:619:22>
| `-NonNullAttr 0x5601188d2850 <col:63, col:80> 1 2
|-FunctionDecl 0x5601188d2a18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5601188d2898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5601188d2910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5601188d2ac8 <line:622:22>
| `-NonNullAttr 0x5601188d2b20 <col:63, col:77> 1
|-FunctionDecl 0x5601188d2dc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5601188d2c00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5601188d2c80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5601188d2e78 <line:624:22>
| `-NonNullAttr 0x5601188d2f00 <col:63, col:77> 1
|-FunctionDecl 0x5601188d3078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5601188d2f48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5601188d3120 <line:626:22>
| `-NonNullAttr 0x5601188d3178 <col:63, col:77> 1
|-FunctionDecl 0x5601188d3280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5601188d31c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5601188d3328 <line:628:22>
| `-NonNullAttr 0x5601188d3380 <col:52, col:66> 1
|-FunctionDecl 0x5601188d3480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5601188d33c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5601188d3528 <line:630:22>
| `-NonNullAttr 0x5601188d3580 <col:52, col:66> 1
|-FunctionDecl 0x5601188d3680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5601188d35c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5601188d3728 <line:632:22>
| `-NonNullAttr 0x5601188d3780 <col:52, col:66> 1
|-FunctionDecl 0x5601188d3b58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5601188d3860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5601188d3970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5601188d39f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5601188d3c10 <line:636:22>
| `-NonNullAttr 0x5601188d3c68 <col:63, col:77> 1
|-FunctionDecl 0x5601188d3de8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5601188d3cb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5601188d3e90 <line:638:22>
| `-NonNullAttr 0x5601188d3f10 <col:63, col:77> 1
|-FunctionDecl 0x5601188d4010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5601188d3f58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5601188d40b8 <line:640:22>
| `-NonNullAttr 0x5601188d4110 <col:52, col:66> 1
|-FunctionDecl 0x5601188d42f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5601188d41c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5601188d43a0 <line:642:22>
| `-NonNullAttr 0x5601188d43f8 <col:63, col:77> 1
|-FunctionDecl 0x5601188d4500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5601188d4448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5601188d45a8 <line:644:22>
| `-NonNullAttr 0x5601188d4600 <col:63, col:77> 1
|-FunctionDecl 0x5601188d4828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5601188d4648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5601188d46c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5601188d48d8 <line:648:22>
| `-NonNullAttr 0x5601188d4930 <col:63, col:80> 1 2
|-FunctionDecl 0x5601188d4b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5601188d4978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5601188d49f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5601188d4be8 <line:651:22>
| `-NonNullAttr 0x5601188d4c40 <col:63, col:77> 1
|-FunctionDecl 0x5601188d4fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5601188d4d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5601188d4e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5601188d5058 <line:654:22>
| `-NonNullAttr 0x5601188d50b0 <col:63, col:77> 1
|-FunctionDecl 0x5601188d5208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5601188d50f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5601188d52b0 <col:69>
|-FunctionDecl 0x5601188d5428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5601188d5318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5601188d54d0 <col:72>
|-FunctionDecl 0x5601188d5708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5601188d5538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5601188d55e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5601188d57b8 <col:44>
|-FunctionDecl 0x5601188d59d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5601188d5820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5601188d5898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5601188d5a88 <line:661:22>
| `-NonNullAttr 0x5601188d5ae0 <col:63, col:77> 2
|-FunctionDecl 0x5601188d6f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5601188d5bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5601188d5cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5601188d5de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5601188d7008 <col:47>
|-FunctionDecl 0x5601188d7110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5601188d7078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5601188d7268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5601188d71d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5601188d7330 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5601188d73f0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5601188d74b0 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5601188d7568 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5601188d75e8 prev 0x5601188d7568 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5601188d7650 <col:24> 'int' 0
|-VarDecl 0x5601188d7688 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5601188d7708 prev 0x5601188d7688 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5601188d7770 <col:27> 'int' 0
|-VarDecl 0x5601188d77a8 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5601188d7828 prev 0x5601188d77a8 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5601188d7890 <col:27> 'int' 0
|-VarDecl 0x5601188d78c8 <line:677:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x5601188d7948 prev 0x5601188d78c8 <line:678:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x5601188d79b0 <col:27> 'int' 0
|-VarDecl 0x5601188d79e0 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5601188d7a58 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5601188d7ad8 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x5601188d7b58 prev 0x5601188d7ad8 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5601188d7bc0 <col:9> 'int' 0
|-VarDecl 0x5601188d7bf8 <line:683:1, col:5> col:5 used y 'int'
|-VarDecl 0x5601188d7c78 prev 0x5601188d7bf8 <line:684:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5601188d7ce0 <col:9> 'int' 0
|-VarDecl 0x5601188d7d10 <line:685:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x5601188d7d90 <line:686:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x5601188d7e08 <line:687:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x5601188d7e80 <line:688:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x5601188d7f20 <line:689:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x5601188d7f98 <line:690:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x5601188d8010 <line:691:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x5601188d8088 <line:692:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x5601188d8100 <line:693:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x5601188d8180 <line:694:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x5601188d8200 <line:695:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x5601188d8278 <line:696:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x5601188d82f8 <line:697:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x5601188d8370 <line:698:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x5601188d83e8 <line:699:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5601188d8460 <line:700:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5601188d8578 prev 0x5601188d7110 <line:701:1, line:730:1> line:701:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5601188d84e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5601188db5b8 <line:702:1, line:730:1>
|   |-CallExpr 0x5601188d8688 <line:703:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5601188d8670 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5601188d8620 <col:3> 'void ()' Function 0x56011887e4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5601188d86e8 <line:704:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5601188d86a8 <col:3> 'int' lvalue Var 0x5601188d7b58 'x' 'int'
|   | `-IntegerLiteral 0x5601188d86c8 <col:7> 'int' 1
|   |-CallExpr 0x5601188d8740 <line:705:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5601188d8728 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5601188d8708 <col:3> 'void ()' Function 0x56011887e570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5601188d8798 <line:706:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5601188d8780 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5601188d8760 <col:3> 'void ()' Function 0x56011887e4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5601188d87f0 <line:707:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5601188d87d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5601188d87b8 <col:3> 'void ()' Function 0x56011887e570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5601188d8848 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5601188d8830 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5601188d8810 <col:3> 'void ()' Function 0x56011887e4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5601188d8918 <line:709:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5601188d8868 <col:3> '_Bool' lvalue Var 0x5601188d83e8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x5601188d88f8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5601188d88e0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5601188d8888 <col:19> '_Bool (void)' Function 0x56011887dc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5601188d89b0 <line:710:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5601188d8938 <col:3> '_Bool' lvalue Var 0x5601188d8460 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x5601188d8990 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5601188d8978 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5601188d8958 <col:19> '_Bool (void)' Function 0x56011887dc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5601188d8a28 <line:711:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5601188d89d0 <col:3> '_Bool' lvalue Var 0x5601188d7d10 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5601188d8a10 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5601188d89f0 <col:21> '_Bool' lvalue Var 0x5601188d8460 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5601188d8aa0 <line:712:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5601188d8a48 <col:3> 'int' lvalue Var 0x5601188d7d90 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5601188d8a88 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5601188d8a68 <col:15> 'int' lvalue Var 0x5601188d7c78 'y' 'int'
|   |-BinaryOperator 0x5601188d8ed8 <line:713:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5601188d8ac0 <col:3> 'int' lvalue Var 0x5601188d7c78 'y' 'int'
|   | `-ConditionalOperator 0x5601188d8ea8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5601188d8cd0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5601188d8bf0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5601188d8b18 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5601188d8b00 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5601188d8ae0 <col:8> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5601188d8bd0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5601188d8b68 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5601188d8b50 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5601188d8b30 <col:27> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x5601188d8bb8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5601188d8ba0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5601188d8b80 <col:46> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5601188d8cb0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5601188d8c48 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5601188d8c30 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5601188d8c10 <col:65> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x5601188d8c98 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5601188d8c80 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5601188d8c60 <col:84> '_Bool' lvalue Var 0x5601188d8010 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5601188d8e90 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5601188d8cf0 <col:101> 'int' lvalue Var 0x5601188d7c78 'y' 'int'
|   |   `-ParenExpr 0x5601188d8e70 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5601188d8e40 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5601188d8db0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5601188d8d68 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5601188d8d50 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5601188d8d10 <col:106> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5601188d8d98 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5601188d8d80 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5601188d8d30 <col:124> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5601188d8e10 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5601188d8dd0 <col:141> 'int' lvalue Var 0x5601188d8200 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5601188d8e28 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5601188d8df0 <col:153> 'int' lvalue Var 0x5601188d82f8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5601188d9400 <line:714:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5601188d8ef8 <col:3> 'int' lvalue Var 0x5601188d8200 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x5601188d93d0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5601188d93a0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5601188d9388 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5601188d8f30 <col:15> '_Bool' lvalue Var 0x5601188d8460 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5601188d93b8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5601188d8f50 <col:31> 'int' lvalue Var 0x5601188d8200 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5601188d9368 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5601188d9338 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5601188d9160 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5601188d9080 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5601188d8fa8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5601188d8f90 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5601188d8f70 <col:45> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5601188d9060 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5601188d8ff8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5601188d8fe0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5601188d8fc0 <col:64> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5601188d9048 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5601188d9030 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5601188d9010 <col:83> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5601188d9140 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5601188d90d8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5601188d90c0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5601188d90a0 <col:102> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5601188d9128 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5601188d9110 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5601188d90f0 <col:121> '_Bool' lvalue Var 0x5601188d8010 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5601188d9320 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5601188d9180 <col:138> 'int' lvalue Var 0x5601188d8200 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x5601188d9300 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5601188d92d0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5601188d9240 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5601188d91f8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5601188d91e0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5601188d91a0 <col:151> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5601188d9228 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5601188d9210 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5601188d91c0 <col:169> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5601188d92a0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5601188d9260 <col:186> 'int' lvalue Var 0x5601188d8200 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5601188d92b8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5601188d9280 <col:198> 'int' lvalue Var 0x5601188d8200 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5601188d9910 <line:715:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5601188d9420 <col:3> 'int' lvalue Var 0x5601188d82f8 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x5601188d98e0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5601188d98b0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5601188d9898 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5601188d9440 <col:15> '_Bool' lvalue Var 0x5601188d8460 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5601188d98c8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5601188d9460 <col:31> 'int' lvalue Var 0x5601188d82f8 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x5601188d9878 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5601188d9848 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5601188d9670 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5601188d9590 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5601188d94b8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5601188d94a0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5601188d9480 <col:45> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5601188d9570 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5601188d9508 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5601188d94f0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5601188d94d0 <col:64> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5601188d9558 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5601188d9540 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5601188d9520 <col:83> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5601188d9650 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5601188d95e8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5601188d95d0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5601188d95b0 <col:102> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5601188d9638 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5601188d9620 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5601188d9600 <col:121> '_Bool' lvalue Var 0x5601188d8010 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5601188d9830 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5601188d9690 <col:138> 'int' lvalue Var 0x5601188d82f8 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x5601188d9810 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5601188d97e0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5601188d9750 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5601188d9708 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5601188d96f0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5601188d96b0 <col:151> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5601188d9738 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5601188d9720 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5601188d96d0 <col:169> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5601188d97b0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5601188d9770 <col:186> 'int' lvalue Var 0x5601188d82f8 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5601188d97c8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5601188d9790 <col:198> 'int' lvalue Var 0x5601188d82f8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5601188d9eb8 <line:716:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5601188d9930 <col:3> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5601188d9ea0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5601188d9e70 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5601188d9e28 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5601188d9e10 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5601188d9950 <col:20> '_Bool' lvalue Var 0x5601188d8460 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5601188d9e58 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5601188d9e40 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5601188d9970 <col:36> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5601188d9df0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5601188d9dc0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5601188d9b80 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5601188d9aa0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5601188d99c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5601188d99b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5601188d9990 <col:55> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5601188d9a80 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5601188d9a18 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5601188d9a00 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5601188d99e0 <col:74> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5601188d9a68 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5601188d9a50 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5601188d9a30 <col:93> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5601188d9b60 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5601188d9af8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5601188d9ae0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5601188d9ac0 <col:112> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5601188d9b48 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5601188d9b30 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5601188d9b10 <col:131> '_Bool' lvalue Var 0x5601188d8010 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5601188d9da8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5601188d9d90 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5601188d9ba0 <col:148> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5601188d9d70 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5601188d9d40 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5601188d9c60 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5601188d9c18 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5601188d9c00 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5601188d9bc0 <col:166> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5601188d9c48 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5601188d9c30 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5601188d9be0 <col:184> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5601188d9cf8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5601188d9cb0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5601188d9c80 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5601188d9d28 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5601188d9d10 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5601188d9cd8 <col:212> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5601188da4a8 <line:717:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5601188d9ed8 <col:3> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5601188da490 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5601188da460 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5601188da418 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5601188da400 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5601188d9ef8 <col:20> '_Bool' lvalue Var 0x5601188d8460 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5601188da448 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5601188da430 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5601188d9f40 <col:36> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5601188da3e0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5601188da3b0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5601188da150 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5601188da070 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5601188d9f98 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5601188d9f80 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5601188d9f60 <col:55> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5601188da050 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5601188d9fe8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5601188d9fd0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5601188d9fb0 <col:74> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5601188da038 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5601188da020 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5601188da000 <col:93> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5601188da130 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5601188da0c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5601188da0b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5601188da090 <col:112> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5601188da118 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5601188da100 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5601188da0e0 <col:131> '_Bool' lvalue Var 0x5601188d8010 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5601188da398 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5601188da380 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5601188da170 <col:148> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5601188da360 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5601188da330 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5601188da230 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5601188da1e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5601188da1d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5601188da190 <col:166> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5601188da218 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5601188da200 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5601188da1b0 <col:184> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5601188da300 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5601188da280 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5601188da250 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5601188da318 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5601188da2d8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5601188da2a8 <col:219> 'int' 0
|   |-BinaryOperator 0x5601188daa50 <line:718:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5601188da4c8 <col:3> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5601188daa38 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5601188daa08 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5601188da9c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5601188da9a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5601188da4e8 <col:20> '_Bool' lvalue Var 0x5601188d8460 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5601188da9f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5601188da9d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5601188da508 <col:36> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x5601188da988 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5601188da958 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5601188da718 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5601188da638 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5601188da560 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5601188da548 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5601188da528 <col:55> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5601188da618 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5601188da5b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5601188da598 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5601188da578 <col:74> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5601188da600 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5601188da5e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5601188da5c8 <col:93> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5601188da6f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5601188da690 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5601188da678 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5601188da658 <col:112> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5601188da6e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5601188da6c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5601188da6a8 <col:131> '_Bool' lvalue Var 0x5601188d8010 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5601188da940 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5601188da928 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5601188da738 <col:148> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x5601188da908 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5601188da8d8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5601188da7f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5601188da7b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5601188da798 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5601188da758 <col:166> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5601188da7e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5601188da7c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5601188da778 <col:184> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5601188da890 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5601188da848 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5601188da818 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5601188da8c0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5601188da8a8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5601188da870 <col:212> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5601188db048 <line:719:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5601188daa70 <col:3> '_Bool' lvalue Var 0x5601188d8010 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5601188db030 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5601188db000 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5601188dafb8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5601188dafa0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5601188daa90 <col:20> '_Bool' lvalue Var 0x5601188d8460 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5601188dafe8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5601188dafd0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5601188daab0 <col:36> '_Bool' lvalue Var 0x5601188d8010 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x5601188daf80 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5601188daf50 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5601188dacc0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5601188dabe0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5601188dab08 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5601188daaf0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5601188daad0 <col:55> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5601188dabc0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5601188dab58 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5601188dab40 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5601188dab20 <col:74> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5601188daba8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5601188dab90 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5601188dab70 <col:93> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5601188daca0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5601188dac38 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5601188dac20 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5601188dac00 <col:112> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5601188dac88 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5601188dac70 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5601188dac50 <col:131> '_Bool' lvalue Var 0x5601188d8010 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5601188daf08 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5601188daef0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5601188dace0 <col:148> '_Bool' lvalue Var 0x5601188d8010 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x5601188daed0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5601188daea0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5601188dada0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5601188dad58 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5601188dad40 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5601188dad00 <col:166> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5601188dad88 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5601188dad70 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5601188dad20 <col:184> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5601188dae70 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5601188dadf0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5601188dadc0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5601188dae88 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5601188dae48 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5601188dae18 <col:219> 'int' 0
|   |-BinaryOperator 0x5601188db0c0 <line:720:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5601188db068 <col:3> 'int' lvalue Var 0x5601188d7708 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5601188db0a8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5601188db088 <col:25> 'int' lvalue Var 0x5601188d7c78 'y' 'int'
|   |-BinaryOperator 0x5601188db1f0 <line:721:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5601188db0e0 <col:3> 'int' lvalue Var 0x5601188d7c78 'y' 'int'
|   | `-ConditionalOperator 0x5601188db1c0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5601188db178 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5601188db160 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5601188db100 <col:7> '_Bool' lvalue Var 0x5601188d7d10 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5601188db190 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5601188db120 <col:25> 'int' lvalue Var 0x5601188d7d90 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5601188db1a8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5601188db140 <col:37> 'int' lvalue Var 0x5601188d7c78 'y' 'int'
|   |-BinaryOperator 0x5601188db288 <line:722:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5601188db210 <col:3> '_Bool' lvalue Var 0x5601188d7d10 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5601188db260 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5601188db230 <col:28> 'int' 0
|   |-CallExpr 0x5601188db2e0 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5601188db2c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5601188db2a8 <col:3> 'void ()' Function 0x56011887e570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5601188db338 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5601188db320 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5601188db300 <col:3> 'void ()' Function 0x56011887e4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5601188db390 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5601188db378 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5601188db358 <col:3> 'void ()' Function 0x56011887e570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5601188db3e8 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5601188db3d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5601188db3b0 <col:3> 'void ()' Function 0x56011887e4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5601188db4a0 <line:727:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5601188db408 <col:3> 'int' lvalue Var 0x5601188d75e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5601188db480 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5601188db468 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5601188db428 <col:22> 'int' lvalue Var 0x5601188d75e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5601188db448 <col:41> 'int' 1
|   |-CallExpr 0x5601188db4f8 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5601188db4e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5601188db4c0 <col:3> 'void ()' Function 0x56011887e570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5601188db5a8 <line:729:3, col:36>
|     `-CallExpr 0x5601188db588 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5601188db570 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5601188db518 <col:10> 'void *(void)' Function 0x56011887dfc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5601188db750 prev 0x5601188d7268 <line:731:1, line:785:1> line:731:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5601188db6b8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5601188dffa0 <line:732:1, line:785:1>
|   |-CallExpr 0x5601188db830 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5601188db818 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5601188db7f8 <col:3> 'void ()' Function 0x56011887e4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5601188db8a8 <line:734:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5601188db850 <col:3> 'int' lvalue Var 0x5601188d82f8 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5601188db890 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5601188db870 <col:15> 'int' lvalue Var 0x5601188d8200 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5601188db908 <line:735:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5601188db8c8 <col:3> 'int' lvalue Var 0x5601188d8200 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x5601188db8e8 <col:15> 'int' 1
|   |-BinaryOperator 0x5601188db980 <line:736:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5601188db928 <col:3> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5601188db968 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5601188db948 <col:20> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5601188dba18 <line:737:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5601188db9a0 <col:3> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5601188db9f0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5601188db9c0 <col:27> 'int' 1
|   |-CallExpr 0x5601188dbb98 <line:738:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5601188dbb80 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5601188dba38 <col:3> 'void (int)' Function 0x56011887e238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5601188dbb38 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5601188dbb18 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5601188dbaf8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5601188dbab0 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5601188dba98 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5601188dba58 <col:23> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5601188dbae0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5601188dbac8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5601188dba78 <col:41> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5601188dbc18 <line:739:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5601188dbbc0 <col:3> '_Bool' lvalue Var 0x5601188d7f98 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5601188dbc00 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5601188dbbe0 <col:20> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5601188dbc90 <line:740:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5601188dbc38 <col:3> '_Bool' lvalue Var 0x5601188d8010 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5601188dbc78 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5601188dbc58 <col:20> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5601188dbd08 <line:741:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5601188dbcb0 <col:3> '_Bool' lvalue Var 0x5601188d8088 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5601188dbcf0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5601188dbcd0 <col:20> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5601188dbda0 <line:742:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5601188dbd28 <col:3> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x5601188dbd78 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5601188dbd48 <col:27> 'int' 1
|   |-CallExpr 0x5601188dbdf8 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5601188dbde0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5601188dbdc0 <col:3> 'void ()' Function 0x56011887e570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5601188dbe50 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5601188dbe38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5601188dbe18 <col:3> 'void ()' Function 0x56011887e4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5601188dbec8 <line:745:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5601188dbe70 <col:3> 'int' lvalue Var 0x5601188d82f8 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5601188dbeb0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5601188dbe90 <col:15> 'int' lvalue Var 0x5601188d8200 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5601188dbf28 <line:746:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5601188dbee8 <col:3> 'int' lvalue Var 0x5601188d8200 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x5601188dbf08 <col:15> 'int' 2
|   |-BinaryOperator 0x5601188dbfb8 <line:747:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5601188dbf60 <col:3> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5601188dbfa0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5601188dbf80 <col:20> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5601188dc050 <line:748:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5601188dbfd8 <col:3> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5601188dc028 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5601188dbff8 <col:27> 'int' 1
|   |-CallExpr 0x5601188dc1a0 <line:749:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5601188dc188 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5601188dc070 <col:3> 'void (int)' Function 0x56011887e238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5601188dc170 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5601188dc150 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5601188dc130 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5601188dc0e8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5601188dc0d0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5601188dc090 <col:23> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5601188dc118 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5601188dc100 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5601188dc0b0 <col:41> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5601188dc220 <line:750:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5601188dc1c8 <col:3> '_Bool' lvalue Var 0x5601188d7f98 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5601188dc208 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5601188dc1e8 <col:20> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5601188dc298 <line:751:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5601188dc240 <col:3> '_Bool' lvalue Var 0x5601188d8010 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5601188dc280 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5601188dc260 <col:20> '_Bool' lvalue Var 0x5601188d7e80 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5601188dc310 <line:752:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5601188dc2b8 <col:3> '_Bool' lvalue Var 0x5601188d8088 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5601188dc2f8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5601188dc2d8 <col:20> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5601188dc3a8 <line:753:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5601188dc330 <col:3> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x5601188dc380 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5601188dc350 <col:27> 'int' 1
|   |-CallExpr 0x5601188dc400 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5601188dc3e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5601188dc3c8 <col:3> 'void ()' Function 0x56011887e570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5601188dc458 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5601188dc440 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5601188dc420 <col:3> 'void ()' Function 0x56011887e4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5601188dc4f0 <line:756:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5601188dc478 <col:3> '_Bool' lvalue Var 0x5601188d83e8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x5601188dc4d0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5601188dc4b8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5601188dc498 <col:19> '_Bool (void)' Function 0x56011887dc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5601188dc588 <line:757:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5601188dc510 <col:3> '_Bool' lvalue Var 0x5601188d8460 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x5601188dc568 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5601188dc550 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5601188dc530 <col:19> '_Bool (void)' Function 0x56011887dc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5601188dc600 <line:758:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5601188dc5a8 <col:3> '_Bool' lvalue Var 0x5601188d7d10 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5601188dc5e8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5601188dc5c8 <col:21> '_Bool' lvalue Var 0x5601188d8460 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5601188dc678 <line:759:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5601188dc620 <col:3> 'int' lvalue Var 0x5601188d7d90 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5601188dc660 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5601188dc640 <col:15> 'int' lvalue Var 0x5601188d7c78 'y' 'int'
|   |-BinaryOperator 0x5601188dcab0 <line:760:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5601188dc698 <col:3> 'int' lvalue Var 0x5601188d7c78 'y' 'int'
|   | `-ConditionalOperator 0x5601188dca80 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5601188dc8a8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5601188dc7c8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5601188dc6f0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5601188dc6d8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5601188dc6b8 <col:8> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5601188dc7a8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5601188dc740 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5601188dc728 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5601188dc708 <col:27> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x5601188dc790 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5601188dc778 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5601188dc758 <col:46> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5601188dc888 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5601188dc820 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5601188dc808 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5601188dc7e8 <col:65> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x5601188dc870 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5601188dc858 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5601188dc838 <col:84> '_Bool' lvalue Var 0x5601188d8088 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5601188dca68 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5601188dc8c8 <col:101> 'int' lvalue Var 0x5601188d7c78 'y' 'int'
|   |   `-ParenExpr 0x5601188dca48 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5601188dca18 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5601188dc988 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5601188dc940 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5601188dc928 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5601188dc8e8 <col:106> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5601188dc970 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5601188dc958 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5601188dc908 <col:124> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5601188dc9e8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5601188dc9a8 <col:141> 'int' lvalue Var 0x5601188d8200 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5601188dca00 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5601188dc9c8 <col:153> 'int' lvalue Var 0x5601188d82f8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5601188dcfd0 <line:761:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5601188dcad0 <col:3> 'int' lvalue Var 0x5601188d8200 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x5601188dcfa0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5601188dcf70 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5601188dcf48 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5601188dcaf0 <col:15> '_Bool' lvalue Var 0x5601188d8460 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5601188dcf88 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5601188dcb10 <col:31> 'int' lvalue Var 0x5601188d8200 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5601188dcf28 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5601188dcef8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5601188dcd20 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5601188dcc40 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5601188dcb68 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5601188dcb50 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5601188dcb30 <col:45> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5601188dcc20 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5601188dcbb8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5601188dcba0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5601188dcb80 <col:64> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5601188dcc08 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5601188dcbf0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5601188dcbd0 <col:83> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5601188dcd00 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5601188dcc98 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5601188dcc80 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5601188dcc60 <col:102> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5601188dcce8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5601188dccd0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5601188dccb0 <col:121> '_Bool' lvalue Var 0x5601188d8088 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5601188dcee0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5601188dcd40 <col:138> 'int' lvalue Var 0x5601188d8200 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x5601188dcec0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5601188dce90 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5601188dce00 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5601188dcdb8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5601188dcda0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5601188dcd60 <col:151> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5601188dcde8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5601188dcdd0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5601188dcd80 <col:169> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5601188dce60 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5601188dce20 <col:186> 'int' lvalue Var 0x5601188d8200 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5601188dce78 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5601188dce40 <col:198> 'int' lvalue Var 0x5601188d8200 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5601188dd4e0 <line:762:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5601188dcff0 <col:3> 'int' lvalue Var 0x5601188d82f8 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x5601188dd4b0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5601188dd480 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5601188dd468 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5601188dd010 <col:15> '_Bool' lvalue Var 0x5601188d8460 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5601188dd498 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5601188dd030 <col:31> 'int' lvalue Var 0x5601188d82f8 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x5601188dd448 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5601188dd418 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5601188dd240 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5601188dd160 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5601188dd088 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5601188dd070 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5601188dd050 <col:45> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5601188dd140 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5601188dd0d8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5601188dd0c0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5601188dd0a0 <col:64> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5601188dd128 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5601188dd110 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5601188dd0f0 <col:83> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5601188dd220 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5601188dd1b8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5601188dd1a0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5601188dd180 <col:102> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5601188dd208 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5601188dd1f0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5601188dd1d0 <col:121> '_Bool' lvalue Var 0x5601188d8088 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5601188dd400 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5601188dd260 <col:138> 'int' lvalue Var 0x5601188d82f8 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x5601188dd3e0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5601188dd3b0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5601188dd320 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5601188dd2d8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5601188dd2c0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5601188dd280 <col:151> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5601188dd308 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5601188dd2f0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5601188dd2a0 <col:169> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5601188dd380 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5601188dd340 <col:186> 'int' lvalue Var 0x5601188d82f8 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5601188dd398 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5601188dd360 <col:198> 'int' lvalue Var 0x5601188d82f8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5601188dda88 <line:763:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5601188dd500 <col:3> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5601188dda70 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5601188dda40 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5601188dd9f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5601188dd9e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5601188dd520 <col:20> '_Bool' lvalue Var 0x5601188d8460 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5601188dda28 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5601188dda10 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5601188dd540 <col:36> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5601188dd9c0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5601188dd990 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5601188dd750 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5601188dd670 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5601188dd598 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5601188dd580 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5601188dd560 <col:55> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5601188dd650 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5601188dd5e8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5601188dd5d0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5601188dd5b0 <col:74> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5601188dd638 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5601188dd620 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5601188dd600 <col:93> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5601188dd730 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5601188dd6c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5601188dd6b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5601188dd690 <col:112> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5601188dd718 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5601188dd700 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5601188dd6e0 <col:131> '_Bool' lvalue Var 0x5601188d8088 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5601188dd978 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5601188dd960 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5601188dd770 <col:148> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5601188dd940 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5601188dd910 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5601188dd830 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5601188dd7e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5601188dd7d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5601188dd790 <col:166> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5601188dd818 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5601188dd800 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5601188dd7b0 <col:184> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5601188dd8c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5601188dd880 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5601188dd850 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5601188dd8f8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5601188dd8e0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5601188dd8a8 <col:212> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5601188de078 <line:764:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5601188ddaa8 <col:3> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5601188de060 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5601188de030 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5601188ddfe8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5601188ddfd0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5601188ddac8 <col:20> '_Bool' lvalue Var 0x5601188d8460 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5601188de018 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5601188de000 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5601188ddae8 <col:36> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5601188ddfb0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5601188ddf80 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5601188ddcf8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5601188ddc18 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5601188ddb40 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5601188ddb28 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5601188ddb08 <col:55> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5601188ddbf8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5601188ddb90 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5601188ddb78 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5601188ddb58 <col:74> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5601188ddbe0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5601188ddbc8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5601188ddba8 <col:93> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5601188ddcd8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5601188ddc70 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5601188ddc58 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5601188ddc38 <col:112> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5601188ddcc0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5601188ddca8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5601188ddc88 <col:131> '_Bool' lvalue Var 0x5601188d8088 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5601188ddf40 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5601188ddf28 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5601188ddd18 <col:148> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5601188ddf08 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5601188dded8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5601188dddd8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5601188ddd90 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5601188ddd78 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5601188ddd38 <col:166> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5601188dddc0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5601188ddda8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5601188ddd58 <col:184> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5601188ddea8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5601188dde28 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5601188dddf8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5601188ddec0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5601188dde80 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5601188dde50 <col:219> 'int' 0
|   |-BinaryOperator 0x5601188de620 <line:765:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5601188de098 <col:3> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5601188de608 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5601188de5d8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5601188de590 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5601188de578 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5601188de0b8 <col:20> '_Bool' lvalue Var 0x5601188d8460 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5601188de5c0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5601188de5a8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5601188de0d8 <col:36> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x5601188de558 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5601188de528 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5601188de2e8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5601188de208 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5601188de130 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5601188de118 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5601188de0f8 <col:55> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5601188de1e8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5601188de180 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5601188de168 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5601188de148 <col:74> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5601188de1d0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5601188de1b8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5601188de198 <col:93> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5601188de2c8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5601188de260 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5601188de248 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5601188de228 <col:112> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5601188de2b0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5601188de298 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5601188de278 <col:131> '_Bool' lvalue Var 0x5601188d8088 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5601188de510 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5601188de4f8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5601188de308 <col:148> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x5601188de4d8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5601188de4a8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5601188de3c8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5601188de380 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5601188de368 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5601188de328 <col:166> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5601188de3b0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5601188de398 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5601188de348 <col:184> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5601188de460 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5601188de418 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5601188de3e8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5601188de490 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5601188de478 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5601188de440 <col:212> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5601188debe8 <line:766:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5601188de640 <col:3> '_Bool' lvalue Var 0x5601188d8088 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5601188debd0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5601188deba0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5601188deb58 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5601188deb40 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5601188de660 <col:20> '_Bool' lvalue Var 0x5601188d8460 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5601188deb88 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5601188deb70 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5601188de680 <col:36> '_Bool' lvalue Var 0x5601188d8088 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x5601188deb20 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5601188deaf0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5601188de890 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5601188de7b0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5601188de6d8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5601188de6c0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5601188de6a0 <col:55> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5601188de790 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5601188de728 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5601188de710 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5601188de6f0 <col:74> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5601188de778 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5601188de760 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5601188de740 <col:93> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5601188de870 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5601188de808 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5601188de7f0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5601188de7d0 <col:112> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5601188de858 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5601188de840 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5601188de820 <col:131> '_Bool' lvalue Var 0x5601188d8088 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5601188dead8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5601188deac0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5601188de8b0 <col:148> '_Bool' lvalue Var 0x5601188d8088 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x5601188deaa0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5601188dea70 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5601188de970 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5601188de928 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5601188de910 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5601188de8d0 <col:166> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5601188de958 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5601188de940 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5601188de8f0 <col:184> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5601188dea40 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5601188de9c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5601188de990 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5601188dea58 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5601188dea18 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5601188de9e8 <col:219> 'int' 0
|   |-BinaryOperator 0x5601188dec60 <line:767:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5601188dec08 <col:3> 'int' lvalue Var 0x5601188d7828 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5601188dec48 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5601188dec28 <col:25> 'int' lvalue Var 0x5601188d7c78 'y' 'int'
|   |-BinaryOperator 0x5601188ded90 <line:768:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5601188dec80 <col:3> 'int' lvalue Var 0x5601188d7c78 'y' 'int'
|   | `-ConditionalOperator 0x5601188ded60 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5601188ded18 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5601188ded00 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5601188deca0 <col:7> '_Bool' lvalue Var 0x5601188d7d10 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5601188ded30 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5601188decc0 <col:25> 'int' lvalue Var 0x5601188d7d90 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5601188ded48 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5601188dece0 <col:37> 'int' lvalue Var 0x5601188d7c78 'y' 'int'
|   |-BinaryOperator 0x5601188dee28 <line:769:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5601188dedb0 <col:3> '_Bool' lvalue Var 0x5601188d7d10 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5601188dee00 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5601188dedd0 <col:28> 'int' 0
|   |-CallExpr 0x5601188dee80 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5601188dee68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5601188dee48 <col:3> 'void ()' Function 0x56011887e570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5601188deed8 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5601188deec0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5601188deea0 <col:3> 'void ()' Function 0x56011887e4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5601188def50 <line:772:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5601188deef8 <col:3> 'int' lvalue Var 0x5601188d7948 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x5601188def38 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5601188def18 <col:25> 'int' lvalue Var 0x5601188d7b58 'x' 'int'
|   |-CallExpr 0x5601188defc8 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5601188defb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5601188def90 <col:3> 'void ()' Function 0x56011887e570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5601188df020 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5601188df008 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5601188defe8 <col:3> 'void ()' Function 0x56011887e4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5601188df308 <line:775:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5601188df040 <col:3> 'int' lvalue Var 0x5601188d7c78 'y' 'int'
|   | `-ConditionalOperator 0x5601188df2d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5601188df100 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5601188df0b8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5601188df0a0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5601188df060 <col:7> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5601188df0e8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5601188df0d0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5601188df080 <col:25> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5601188df2c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5601188df120 <col:42> 'int' lvalue Var 0x5601188d8200 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5601188df2a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5601188df270 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5601188df1e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5601188df198 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5601188df180 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5601188df140 <col:55> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5601188df1c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5601188df1b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5601188df160 <col:73> '_Bool' lvalue Var 0x5601188d8088 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5601188df240 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5601188df200 <col:90> 'int' lvalue Var 0x5601188d82f8 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5601188df258 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5601188df220 <col:102> 'int' lvalue Var 0x5601188d7c78 'y' 'int'
|   |-BinaryOperator 0x5601188df510 <line:776:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5601188df328 <col:3> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5601188df4f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5601188df4c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5601188df3e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5601188df3a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5601188df388 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5601188df348 <col:20> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5601188df3d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5601188df3b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5601188df368 <col:38> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5601188df480 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5601188df438 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5601188df408 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5601188df4b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5601188df498 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5601188df460 <col:66> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5601188df7f8 <line:777:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5601188df530 <col:3> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5601188df7e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5601188df7b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5601188df6d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5601188df5f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5601188df5a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5601188df590 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5601188df550 <col:20> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5601188df5d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5601188df5c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5601188df570 <col:38> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5601188df6b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5601188df668 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5601188df650 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5601188df610 <col:56> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5601188df698 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5601188df680 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5601188df630 <col:74> '_Bool' lvalue Var 0x5601188d8088 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5601188df768 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5601188df720 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5601188df6f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5601188df798 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5601188df780 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5601188df748 <col:102> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5601188dfa00 <line:778:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5601188df818 <col:3> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5601188df9e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5601188df9b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5601188df8d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5601188df890 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5601188df878 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5601188df838 <col:20> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5601188df8c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5601188df8a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5601188df858 <col:38> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5601188df970 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5601188df928 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5601188df8f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5601188df9a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5601188df988 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5601188df950 <col:66> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5601188dfce8 <line:779:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5601188dfa20 <col:3> '_Bool' lvalue Var 0x5601188d8088 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5601188dfcd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5601188dfca0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5601188dfbc0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5601188dfae0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5601188dfa98 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5601188dfa80 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5601188dfa40 <col:20> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5601188dfac8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5601188dfab0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5601188dfa60 <col:38> '_Bool' lvalue Var 0x5601188d7f20 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5601188dfba0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5601188dfb58 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5601188dfb40 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5601188dfb00 <col:56> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5601188dfb88 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5601188dfb70 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5601188dfb20 <col:74> '_Bool' lvalue Var 0x5601188d8088 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5601188dfc58 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5601188dfc10 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5601188dfbe0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5601188dfc88 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5601188dfc70 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5601188dfc38 <col:102> '_Bool' lvalue Var 0x5601188d8088 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5601188dfd40 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5601188dfd28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5601188dfd08 <col:3> 'void ()' Function 0x56011887e570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5601188dfd98 <line:781:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5601188dfd80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5601188dfd60 <col:3> 'void ()' Function 0x56011887e4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5601188dfe50 <line:782:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5601188dfdb8 <col:3> 'int' lvalue Var 0x5601188d75e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5601188dfe30 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5601188dfe18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5601188dfdd8 <col:22> 'int' lvalue Var 0x5601188d75e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5601188dfdf8 <col:41> 'int' 1
|   |-CallExpr 0x5601188dfea8 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5601188dfe90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5601188dfe70 <col:3> 'void ()' Function 0x56011887e570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5601188dff20 <line:784:3, col:36>
|     `-CallExpr 0x5601188dff00 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5601188dfee8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5601188dfec8 <col:10> 'void *(void)' Function 0x56011887dfc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5601188e0170 prev 0x5601188d7330 <line:786:1, line:788:1> line:786:6 fence 'void ()'
| `-CompoundStmt 0x5601188e0210 <line:787:1, line:788:1>
|-FunctionDecl 0x5601188e0240 prev 0x5601188d73f0 <line:789:1, line:791:1> line:789:6 isync 'void ()'
| `-CompoundStmt 0x5601188e02e0 <line:790:1, line:791:1>
|-FunctionDecl 0x5601188e0310 prev 0x5601188d74b0 <line:792:1, line:794:1> line:792:6 lwfence 'void ()'
| `-CompoundStmt 0x5601188e03b0 <line:793:1, line:794:1>
`-FunctionDecl 0x5601188e0418 <line:795:1, line:830:1> line:795:5 main 'int ()'
  `-CompoundStmt 0x5601188e47d0 <line:796:1, line:830:1>
    |-DeclStmt 0x5601188e0530 <line:797:3, col:18>
    | `-VarDecl 0x5601188e04c8 <col:3, col:13> col:13 used t1669 'pthread_t':'unsigned long'
    |-CallExpr 0x5601188e0738 <line:798:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5601188e0720 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5601188e0548 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5601188be9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5601188e0588 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5601188e0568 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5601188e04c8 't1669' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5601188e0778 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5601188e0600 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5601188e05d8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5601188e05a0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5601188e0790 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5601188e0620 <col:39> 'void *(void *)' Function 0x5601188d8578 'P0' 'void *(void *)'
    | `-ParenExpr 0x5601188e06a0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5601188e0678 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5601188e0640 <col:52> 'int' 0
    |-DeclStmt 0x5601188e0820 <line:799:3, col:18>
    | `-VarDecl 0x5601188e07b8 <col:3, col:13> col:13 used t1670 'pthread_t':'unsigned long'
    |-CallExpr 0x5601188e09c8 <line:800:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5601188e09b0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5601188e0838 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5601188be9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5601188e0878 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5601188e0858 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5601188e07b8 't1670' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5601188e0a08 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5601188e08f0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5601188e08c8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5601188e0890 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5601188e0a20 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5601188e0910 <col:39> 'void *(void *)' Function 0x5601188db750 'P1' 'void *(void *)'
    | `-ParenExpr 0x5601188e0990 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5601188e0968 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5601188e0930 <col:52> 'int' 0
    |-CallExpr 0x5601188e0a70 <line:801:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5601188e0a58 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5601188e0a38 <col:3> 'void ()' Function 0x56011887e4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5601188e0b40 <line:802:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5601188e0a90 <col:3> '_Bool' lvalue Var 0x5601188d79e0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5601188e0b28 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5601188e0b08 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5601188e0af0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5601188e0ab0 <col:21> 'int' lvalue Var 0x5601188d75e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5601188e0ad0 <col:41> 'int' 2
    |-CallExpr 0x5601188e0b98 <line:803:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5601188e0b80 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5601188e0b60 <col:3> 'void ()' Function 0x56011887e570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5601188e0c10 <line:804:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5601188e0bf8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5601188e0bb8 <col:3> 'void (int)' Function 0x56011887de50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5601188e0c50 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5601188e0c38 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5601188e0bd8 <col:21> '_Bool' lvalue Var 0x5601188d79e0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5601188e0ca0 <line:805:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5601188e0c88 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5601188e0c68 <col:3> 'void ()' Function 0x56011887e4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5601188e0fb0 <line:806:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5601188e0cc0 <col:3> 'int' lvalue Var 0x5601188d7c78 'y' 'int'
    | `-ConditionalOperator 0x5601188e0f58 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5601188e0d80 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5601188e0d38 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5601188e0d20 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5601188e0ce0 <col:7> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5601188e0d68 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5601188e0d50 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5601188e0d00 <col:25> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5601188e0f40 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5601188e0da0 <col:42> 'int' lvalue Var 0x5601188d8200 'y$w_buff0' 'int'
    |   `-ParenExpr 0x5601188e0f20 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5601188e0ef0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5601188e0e60 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5601188e0e18 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5601188e0e00 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5601188e0dc0 <col:55> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5601188e0e48 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5601188e0e30 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5601188e0de0 <col:73> '_Bool' lvalue Var 0x5601188d7f98 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5601188e0ec0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5601188e0e80 <col:90> 'int' lvalue Var 0x5601188d82f8 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5601188e0ed8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5601188e0ea0 <col:102> 'int' lvalue Var 0x5601188d7c78 'y' 'int'
    |-BinaryOperator 0x5601188e11b8 <line:807:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5601188e0fd0 <col:3> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5601188e11a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5601188e1170 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5601188e1090 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5601188e1048 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5601188e1030 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5601188e0ff0 <col:20> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5601188e1078 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5601188e1060 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5601188e1010 <col:38> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5601188e1128 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5601188e10e0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5601188e10b0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5601188e1158 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5601188e1140 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5601188e1108 <col:66> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5601188e14a0 <line:808:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5601188e11d8 <col:3> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5601188e1488 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5601188e1458 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5601188e1378 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5601188e1298 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5601188e1250 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5601188e1238 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5601188e11f8 <col:20> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5601188e1280 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5601188e1268 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5601188e1218 <col:38> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5601188e1358 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5601188e1310 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5601188e12f8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5601188e12b8 <col:56> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5601188e1340 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5601188e1328 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5601188e12d8 <col:74> '_Bool' lvalue Var 0x5601188d7f98 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5601188e1410 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5601188e13c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5601188e1398 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5601188e1440 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5601188e1428 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5601188e13f0 <col:102> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5601188e16a8 <line:809:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5601188e14c0 <col:3> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5601188e1690 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5601188e1660 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5601188e1580 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5601188e1538 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5601188e1520 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5601188e14e0 <col:20> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5601188e1568 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5601188e1550 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5601188e1500 <col:38> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5601188e1618 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5601188e15d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5601188e15a0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5601188e1648 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5601188e1630 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5601188e15f8 <col:66> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5601188e1990 <line:810:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5601188e16c8 <col:3> '_Bool' lvalue Var 0x5601188d7f98 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5601188e1978 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5601188e1948 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5601188e1868 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5601188e1788 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5601188e1740 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5601188e1728 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5601188e16e8 <col:20> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5601188e1770 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5601188e1758 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5601188e1708 <col:38> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5601188e1848 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5601188e1800 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5601188e17e8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5601188e17a8 <col:56> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5601188e1830 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5601188e1818 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5601188e17c8 <col:74> '_Bool' lvalue Var 0x5601188d7f98 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5601188e1900 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5601188e18b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5601188e1888 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5601188e1930 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5601188e1918 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5601188e18e0 <col:102> '_Bool' lvalue Var 0x5601188d7f98 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5601188e19e8 <line:811:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5601188e19d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5601188e19b0 <col:3> 'void ()' Function 0x56011887e570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5601188e1a40 <line:812:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5601188e1a28 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5601188e1a08 <col:3> 'void ()' Function 0x56011887e4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5601188e1ad8 <line:813:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x5601188e1a60 <col:3> '_Bool' lvalue Var 0x5601188d83e8 'weak$$choice0' '_Bool'
    | `-CallExpr 0x5601188e1ab8 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x5601188e1aa0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x5601188e1a80 <col:19> '_Bool (void)' Function 0x56011887dc80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x5601188e1b70 <line:814:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x5601188e1af8 <col:3> '_Bool' lvalue Var 0x5601188d8460 'weak$$choice2' '_Bool'
    | `-CallExpr 0x5601188e1b50 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x5601188e1b38 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x5601188e1b18 <col:19> '_Bool (void)' Function 0x56011887dc80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x5601188e1be8 <line:815:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x5601188e1b90 <col:3> '_Bool' lvalue Var 0x5601188d7d10 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x5601188e1bd0 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x5601188e1bb0 <col:21> '_Bool' lvalue Var 0x5601188d8460 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x5601188e1c60 <line:816:3, col:15> 'int' '='
    | |-DeclRefExpr 0x5601188e1c08 <col:3> 'int' lvalue Var 0x5601188d7d90 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x5601188e1c48 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x5601188e1c28 <col:15> 'int' lvalue Var 0x5601188d7c78 'y' 'int'
    |-BinaryOperator 0x5601188e20a8 <line:817:3, col:162> 'int' '='
    | |-DeclRefExpr 0x5601188e1c80 <col:3> 'int' lvalue Var 0x5601188d7c78 'y' 'int'
    | `-ConditionalOperator 0x5601188e2078 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x5601188e1e90 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x5601188e1db0 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x5601188e1cd8 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x5601188e1cc0 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x5601188e1ca0 <col:8> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x5601188e1d90 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x5601188e1d28 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x5601188e1d10 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x5601188e1cf0 <col:27> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x5601188e1d78 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x5601188e1d60 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x5601188e1d40 <col:46> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x5601188e1e70 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x5601188e1e08 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x5601188e1df0 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x5601188e1dd0 <col:65> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x5601188e1e58 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x5601188e1e40 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x5601188e1e20 <col:84> '_Bool' lvalue Var 0x5601188d7f98 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5601188e2060 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5601188e1eb0 <col:101> 'int' lvalue Var 0x5601188d7c78 'y' 'int'
    |   `-ParenExpr 0x5601188e2040 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x5601188e2010 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x5601188e1f70 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5601188e1f28 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5601188e1f10 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5601188e1ed0 <col:106> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5601188e1f58 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5601188e1f40 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5601188e1ef0 <col:124> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5601188e1fe0 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5601188e1f90 <col:141> 'int' lvalue Var 0x5601188d8200 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x5601188e1ff8 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5601188e1fc0 <col:153> 'int' lvalue Var 0x5601188d82f8 'y$w_buff1' 'int'
    |-BinaryOperator 0x5601188e25b8 <line:818:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5601188e20c8 <col:3> 'int' lvalue Var 0x5601188d8200 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x5601188e2588 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5601188e2558 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5601188e2540 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5601188e20e8 <col:15> '_Bool' lvalue Var 0x5601188d8460 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5601188e2570 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5601188e2108 <col:31> 'int' lvalue Var 0x5601188d8200 'y$w_buff0' 'int'
    |   `-ParenExpr 0x5601188e2520 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5601188e24f0 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5601188e2318 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5601188e2238 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5601188e2160 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5601188e2148 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5601188e2128 <col:45> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5601188e2218 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5601188e21b0 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5601188e2198 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5601188e2178 <col:64> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5601188e2200 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5601188e21e8 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5601188e21c8 <col:83> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5601188e22f8 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5601188e2290 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5601188e2278 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5601188e2258 <col:102> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5601188e22e0 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5601188e22c8 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5601188e22a8 <col:121> '_Bool' lvalue Var 0x5601188d7f98 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5601188e24d8 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5601188e2338 <col:138> 'int' lvalue Var 0x5601188d8200 'y$w_buff0' 'int'
    |       `-ParenExpr 0x5601188e24b8 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5601188e2488 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5601188e23f8 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5601188e23b0 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5601188e2398 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5601188e2358 <col:151> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5601188e23e0 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5601188e23c8 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5601188e2378 <col:169> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5601188e2458 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5601188e2418 <col:186> 'int' lvalue Var 0x5601188d8200 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x5601188e2470 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5601188e2438 <col:198> 'int' lvalue Var 0x5601188d8200 'y$w_buff0' 'int'
    |-BinaryOperator 0x5601188e2ac8 <line:819:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5601188e25d8 <col:3> 'int' lvalue Var 0x5601188d82f8 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x5601188e2a98 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5601188e2a68 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5601188e2a50 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5601188e25f8 <col:15> '_Bool' lvalue Var 0x5601188d8460 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5601188e2a80 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5601188e2618 <col:31> 'int' lvalue Var 0x5601188d82f8 'y$w_buff1' 'int'
    |   `-ParenExpr 0x5601188e2a30 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5601188e2a00 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5601188e2828 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5601188e2748 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5601188e2670 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5601188e2658 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5601188e2638 <col:45> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5601188e2728 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5601188e26c0 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5601188e26a8 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5601188e2688 <col:64> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5601188e2710 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5601188e26f8 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5601188e26d8 <col:83> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5601188e2808 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5601188e27a0 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5601188e2788 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5601188e2768 <col:102> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5601188e27f0 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5601188e27d8 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5601188e27b8 <col:121> '_Bool' lvalue Var 0x5601188d7f98 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5601188e29e8 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5601188e2848 <col:138> 'int' lvalue Var 0x5601188d82f8 'y$w_buff1' 'int'
    |       `-ParenExpr 0x5601188e29c8 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5601188e2998 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5601188e2908 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5601188e28c0 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5601188e28a8 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5601188e2868 <col:151> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5601188e28f0 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5601188e28d8 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5601188e2888 <col:169> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5601188e2968 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5601188e2928 <col:186> 'int' lvalue Var 0x5601188d82f8 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x5601188e2980 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5601188e2948 <col:198> 'int' lvalue Var 0x5601188d82f8 'y$w_buff1' 'int'
    |-BinaryOperator 0x5601188e3098 <line:820:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5601188e2ae8 <col:3> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5601188e3080 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5601188e3050 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5601188e3008 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5601188e2ff0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5601188e2b08 <col:20> '_Bool' lvalue Var 0x5601188d8460 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5601188e3038 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5601188e3020 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5601188e2b28 <col:36> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x5601188e2fd0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5601188e2f78 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5601188e2d38 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5601188e2c58 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5601188e2b80 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5601188e2b68 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5601188e2b48 <col:55> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5601188e2c38 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5601188e2bd0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5601188e2bb8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5601188e2b98 <col:74> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5601188e2c20 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5601188e2c08 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5601188e2be8 <col:93> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5601188e2d18 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5601188e2cb0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5601188e2c98 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5601188e2c78 <col:112> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5601188e2d00 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5601188e2ce8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5601188e2cc8 <col:131> '_Bool' lvalue Var 0x5601188d7f98 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5601188e2f60 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5601188e2f48 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5601188e2d58 <col:148> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x5601188e2f28 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5601188e2ef8 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5601188e2e18 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5601188e2dd0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5601188e2db8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5601188e2d78 <col:166> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5601188e2e00 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5601188e2de8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5601188e2d98 <col:184> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5601188e2eb0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5601188e2e68 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5601188e2e38 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5601188e2ee0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5601188e2ec8 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5601188e2e90 <col:212> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5601188e3660 <line:821:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5601188e30b8 <col:3> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5601188e3648 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5601188e3618 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5601188e35d0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5601188e35b8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5601188e30d8 <col:20> '_Bool' lvalue Var 0x5601188d8460 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5601188e3600 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5601188e35e8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5601188e30f8 <col:36> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x5601188e3598 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5601188e3568 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5601188e3308 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5601188e3228 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5601188e3150 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5601188e3138 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5601188e3118 <col:55> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5601188e3208 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5601188e31a0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5601188e3188 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5601188e3168 <col:74> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5601188e31f0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5601188e31d8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5601188e31b8 <col:93> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5601188e32e8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5601188e3280 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5601188e3268 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5601188e3248 <col:112> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5601188e32d0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5601188e32b8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5601188e3298 <col:131> '_Bool' lvalue Var 0x5601188d7f98 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5601188e3550 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5601188e3538 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5601188e3328 <col:148> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x5601188e3518 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5601188e34e8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5601188e33e8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5601188e33a0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5601188e3388 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5601188e3348 <col:166> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5601188e33d0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5601188e33b8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5601188e3368 <col:184> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5601188e34b8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5601188e3438 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5601188e3408 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5601188e34d0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5601188e3490 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5601188e3460 <col:219> 'int' 0
    |-BinaryOperator 0x5601188e3c08 <line:822:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5601188e3680 <col:3> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5601188e3bf0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5601188e3bc0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5601188e3b78 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5601188e3b60 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5601188e36a0 <col:20> '_Bool' lvalue Var 0x5601188d8460 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5601188e3ba8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5601188e3b90 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5601188e36c0 <col:36> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x5601188e3b40 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5601188e3b10 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5601188e38d0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5601188e37f0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5601188e3718 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5601188e3700 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5601188e36e0 <col:55> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5601188e37d0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5601188e3768 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5601188e3750 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5601188e3730 <col:74> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5601188e37b8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5601188e37a0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5601188e3780 <col:93> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5601188e38b0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5601188e3848 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5601188e3830 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5601188e3810 <col:112> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5601188e3898 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5601188e3880 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5601188e3860 <col:131> '_Bool' lvalue Var 0x5601188d7f98 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5601188e3af8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5601188e3ae0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5601188e38f0 <col:148> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x5601188e3ac0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5601188e3a90 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5601188e39b0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5601188e3968 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5601188e3950 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5601188e3910 <col:166> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5601188e3998 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5601188e3980 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5601188e3930 <col:184> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5601188e3a48 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5601188e3a00 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5601188e39d0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5601188e3a78 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5601188e3a60 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5601188e3a28 <col:212> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5601188e41e0 <line:823:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5601188e3c28 <col:3> '_Bool' lvalue Var 0x5601188d7f98 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5601188e41c8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5601188e4198 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5601188e4150 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5601188e4138 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5601188e3c48 <col:20> '_Bool' lvalue Var 0x5601188d8460 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5601188e4180 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5601188e4168 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5601188e3c68 <col:36> '_Bool' lvalue Var 0x5601188d7f98 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x5601188e4118 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5601188e40e8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5601188e3e78 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5601188e3d98 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5601188e3cc0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5601188e3ca8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5601188e3c88 <col:55> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5601188e3d78 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5601188e3d10 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5601188e3cf8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5601188e3cd8 <col:74> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5601188e3d60 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5601188e3d48 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5601188e3d28 <col:93> '_Bool' lvalue Var 0x5601188d8370 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5601188e3e58 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5601188e3df0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5601188e3dd8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5601188e3db8 <col:112> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5601188e3e40 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5601188e3e28 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5601188e3e08 <col:131> '_Bool' lvalue Var 0x5601188d7f98 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5601188e40d0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5601188e40b8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5601188e3e98 <col:148> '_Bool' lvalue Var 0x5601188d7f98 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x5601188e4098 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5601188e4068 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5601188e3f58 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5601188e3f10 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5601188e3ef8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5601188e3eb8 <col:166> '_Bool' lvalue Var 0x5601188d8278 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5601188e3f40 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5601188e3f28 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5601188e3ed8 <col:184> '_Bool' lvalue Var 0x5601188d7e08 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5601188e4038 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5601188e3fa8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5601188e3f78 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5601188e4050 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5601188e4010 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5601188e3fe0 <col:219> 'int' 0
    |-BinaryOperator 0x5601188e44b0 <line:824:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x5601188e4200 <col:3> '_Bool' lvalue Var 0x5601188d7a58 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5601188e4498 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5601188e4480 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5601188e4460 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x5601188e4440 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x5601188e43a8 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x5601188e4310 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x5601188e4278 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x5601188e4260 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x5601188e4220 <col:23> 'int' lvalue Var 0x5601188d7c78 'y' 'int'
    |         | | | `-IntegerLiteral 0x5601188e4240 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x5601188e42f0 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5601188e42d8 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5601188e4298 <col:33> 'int' lvalue Var 0x5601188d7708 '__unbuffered_p0_EAX' 'int'
    |         | |   `-IntegerLiteral 0x5601188e42b8 <col:56> 'int' 0
    |         | `-BinaryOperator 0x5601188e4388 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5601188e4370 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5601188e4330 <col:61> 'int' lvalue Var 0x5601188d7828 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x5601188e4350 <col:84> 'int' 2
    |         `-BinaryOperator 0x5601188e4420 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x5601188e4408 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5601188e43c8 <col:89> 'int' lvalue Var 0x5601188d7948 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x5601188e43e8 <col:112> 'int' 0
    |-BinaryOperator 0x5601188e45e0 <line:825:3, col:37> 'int' '='
    | |-DeclRefExpr 0x5601188e44d0 <col:3> 'int' lvalue Var 0x5601188d7c78 'y' 'int'
    | `-ConditionalOperator 0x5601188e45b0 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x5601188e4568 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5601188e4550 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5601188e44f0 <col:7> '_Bool' lvalue Var 0x5601188d7d10 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x5601188e4580 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5601188e4510 <col:25> 'int' lvalue Var 0x5601188d7d90 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x5601188e4598 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x5601188e4530 <col:37> 'int' lvalue Var 0x5601188d7c78 'y' 'int'
    |-BinaryOperator 0x5601188e4678 <line:826:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x5601188e4600 <col:3> '_Bool' lvalue Var 0x5601188d7d10 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x5601188e4650 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x5601188e4620 <col:28> 'int' 0
    |-CallExpr 0x5601188e46d0 <line:827:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5601188e46b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5601188e4698 <col:3> 'void ()' Function 0x56011887e570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5601188e4748 <line:828:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5601188e4730 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5601188e46f0 <col:3> 'void (int)' Function 0x56011887e238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5601188e4788 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5601188e4770 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5601188e4710 <col:21> '_Bool' lvalue Var 0x5601188d7a58 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5601188e47c0 <line:829:3, col:10>
      `-IntegerLiteral 0x5601188e47a0 <col:10> 'int' 0
