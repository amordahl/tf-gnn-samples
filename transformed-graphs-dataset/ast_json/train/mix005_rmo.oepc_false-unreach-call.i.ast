TranslationUnitDecl 0x564504a93f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x564504a94848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x564504a94520 '__int128'
|-TypedefDecl 0x564504a948b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x564504a94540 'unsigned __int128'
|-TypedefDecl 0x564504a94bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x564504a94990 'struct __NSConstantString_tag'
|   `-Record 0x564504a94910 '__NSConstantString_tag'
|-TypedefDecl 0x564504a94c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x564504a94c20 'char *'
|   `-BuiltinType 0x564504a94020 'char'
|-TypedefDecl 0x564504ad3b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x564504a94f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x564504a94d40 'struct __va_list_tag'
|     `-Record 0x564504a94cc0 '__va_list_tag'
|-FunctionDecl 0x564504ad3ca0 <pthread-wmm/mix005_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x564504ad3bd0 <col:31> col:34 'int'
|-FunctionDecl 0x564504ad3e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x564504ad3f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x564504ad40d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x564504ad4048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x564504ad4308 <col:40, col:99>
|   |-IfStmt 0x564504ad42d8 <col:42, col:88>
|   | |-UnaryOperator 0x564504ad41b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x564504ad41a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x564504ad4180 <col:47> 'int' lvalue ParmVar 0x564504ad4048 'expression' 'int'
|   | `-CompoundStmt 0x564504ad42c0 <col:59, col:88>
|   |   `-LabelStmt 0x564504ad42a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x564504ad4238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x564504ad4220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x564504ad41d0 <col:68> 'void () __attribute__((noreturn))' Function 0x564504ad3f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x564504ad42f0 <col:89>
|   `-ReturnStmt 0x564504ad42f8 <col:91>
|-FunctionDecl 0x564504ad4350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x564504ad4410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x564504ad4790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564504ad44c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x564504ad4548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x564504ad45c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564504ad4648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564504ad4850 <line:10:22>
|-FunctionDecl 0x564504afa8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564504ad48c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x564504ad4940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x564504ad49c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564504ad4a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564504afa960 <line:13:22>
|-FunctionDecl 0x564504afac10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564504afa9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x564504afaa50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x564504afaad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x564504afacc8 <line:15:22>
|-TypedefDecl 0x564504afad38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x564504a940e0 'unsigned char'
|-TypedefDecl 0x564504afada8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x564504a94100 'unsigned short'
|-TypedefDecl 0x564504afae18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x564504a94120 'unsigned int'
|-TypedefDecl 0x564504afae88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x564504a94140 'unsigned long'
|-TypedefDecl 0x564504afaef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x564504a94040 'signed char'
|-TypedefDecl 0x564504afaf68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x564504a940e0 'unsigned char'
|-TypedefDecl 0x564504afafd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x564504a94060 'short'
|-TypedefDecl 0x564504afb048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x564504a94100 'unsigned short'
|-TypedefDecl 0x564504afb0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x564504a94080 'int'
|-TypedefDecl 0x564504afb128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x564504a94120 'unsigned int'
|-TypedefDecl 0x564504afb198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x564504a940a0 'long'
|-TypedefDecl 0x564504afb208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x564504a94140 'unsigned long'
|-TypedefDecl 0x564504afb278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x564504a940a0 'long'
|-TypedefDecl 0x564504afb2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x564504a94140 'unsigned long'
|-TypedefDecl 0x564504afb358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x564504a94140 'unsigned long'
|-TypedefDecl 0x564504afb3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x564504a94120 'unsigned int'
|-TypedefDecl 0x564504afb438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x564504a94120 'unsigned int'
|-TypedefDecl 0x564504afb4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x564504a94140 'unsigned long'
|-TypedefDecl 0x564504afb518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x564504a94140 'unsigned long'
|-TypedefDecl 0x564504afb588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x564504a94120 'unsigned int'
|-TypedefDecl 0x564504afb5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x564504a94140 'unsigned long'
|-TypedefDecl 0x564504afb668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x564504a940a0 'long'
|-TypedefDecl 0x564504afb6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x564504a940a0 'long'
|-TypedefDecl 0x564504afb748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x564504a94080 'int'
|-RecordDecl 0x564504afb7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x564504afb918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x564504afb9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x564504afb970 'struct __fsid_t' sugar
|   `-RecordType 0x564504afb820 '__fsid_t'
|     `-Record 0x564504afb7a0 ''
|-TypedefDecl 0x564504afba58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x564504a940a0 'long'
|-TypedefDecl 0x564504afbac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x564504a94140 'unsigned long'
|-TypedefDecl 0x564504afbb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x564504a94140 'unsigned long'
|-TypedefDecl 0x564504afbba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x564504a94120 'unsigned int'
|-TypedefDecl 0x564504afbc18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x564504a940a0 'long'
|-TypedefDecl 0x564504afbc88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x564504a94120 'unsigned int'
|-TypedefDecl 0x564504afbcf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x564504a940a0 'long'
|-TypedefDecl 0x564504afbd68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x564504a94080 'int'
|-TypedefDecl 0x564504afbdd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x564504a94080 'int'
|-TypedefDecl 0x564504afbe48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x564504a94080 'int'
|-TypedefDecl 0x564504afbeb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x564504a947a0 'void *'
|   `-BuiltinType 0x564504a93fe0 'void'
|-TypedefDecl 0x564504afbf28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x564504a940a0 'long'
|-TypedefDecl 0x564504afbf98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x564504a940a0 'long'
|-TypedefDecl 0x564504afc008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x564504a940a0 'long'
|-TypedefDecl 0x564504afc078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x564504a94140 'unsigned long'
|-TypedefDecl 0x564504afc0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x564504a94140 'unsigned long'
|-TypedefDecl 0x564504afc158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x564504a94140 'unsigned long'
|-TypedefDecl 0x564504afc1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x564504a94140 'unsigned long'
|-TypedefDecl 0x564504afc238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x564504a940a0 'long'
|-TypedefDecl 0x564504afc2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x564504a940a0 'long'
|-TypedefDecl 0x564504afc318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x564504a940a0 'long'
|-TypedefDecl 0x564504afc388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x564504a94140 'unsigned long'
|-TypedefDecl 0x564504afc418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x564504afc3e0 '__off64_t' sugar
|   |-Typedef 0x564504afb6d8 '__off64_t'
|   `-BuiltinType 0x564504a940a0 'long'
|-TypedefDecl 0x564504afc510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x564504afc4d0 '__quad_t *'
|   `-TypedefType 0x564504afc470 '__quad_t' sugar
|     |-Typedef 0x564504afb278 '__quad_t'
|     `-BuiltinType 0x564504a940a0 'long'
|-TypedefDecl 0x564504afc580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x564504a94c20 'char *'
|   `-BuiltinType 0x564504a94020 'char'
|-TypedefDecl 0x564504afc5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x564504a940a0 'long'
|-TypedefDecl 0x564504afc660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x564504a94120 'unsigned int'
|-FunctionDecl 0x564504afc7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x564504afc6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x564504afcae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x564504afcad8 <line:72:3, col:34>
|     `-CallExpr 0x564504afca98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x564504afca80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x564504afca10 <col:10> '<builtin fn type>' Function 0x564504afc880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x564504afcac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x564504afca30 <col:29> 'unsigned int' lvalue ParmVar 0x564504afc6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x564504afc880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x564504afc920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x564504afc990 <col:10> Implicit
| `-ConstAttr 0x564504afc9e8 <col:10> Implicit
|-FunctionDecl 0x564504afcc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x564504afcb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x564504afcf58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x564504afcf48 <line:77:3, col:34>
|     `-CallExpr 0x564504afcf08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x564504afcef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x564504afce78 <col:10> '<builtin fn type>' Function 0x564504afcce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x564504afcf30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x564504afce98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x564504afcb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x564504afcce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x564504afcd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x564504afcdf8 <col:10> Implicit
| `-ConstAttr 0x564504afce50 <col:10> Implicit
|-TypedefDecl 0x564504afcf88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x564504a94140 'unsigned long'
|-TypedefDecl 0x564504afd018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x564504afcfe0 '__time_t' sugar
|   |-Typedef 0x564504afbc18 '__time_t'
|   `-BuiltinType 0x564504a940a0 'long'
|-RecordDecl 0x564504afd070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x564504afd128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x564504afd1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x564504afd248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x564504afd210 '__pid_t' sugar
|   |-Typedef 0x564504afb748 '__pid_t'
|   `-BuiltinType 0x564504a94080 'int'
|-RecordDecl 0x564504afd2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x564504afd360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x564504afd3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x564504afd470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x564504afd4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x564504a94140 'unsigned long'
|-RecordDecl 0x564504afd530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x564504afd7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x564504aff8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x564504afd810 'struct cpu_set_t' sugar
|   `-RecordType 0x564504afd5b0 'cpu_set_t'
|     `-Record 0x564504afd530 ''
|-FunctionDecl 0x564504affb88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x564504aff958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564504affa60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x564504affc38 <line:107:19>
|-FunctionDecl 0x564504affe10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x564504affca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x564504affeb8 <col:69>
|-FunctionDecl 0x564504b00030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x564504afff20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x564504b000d8 <col:64>
|-FunctionDecl 0x564504b00398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x564504b00140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564504b00278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564504b00448 <line:113:22>
|-FunctionDecl 0x564504b006c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x564504b004b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564504b005a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x564504b00778 <col:88>
|-FunctionDecl 0x564504b00a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564504b007e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564504b008c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x564504b00950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564504b00b50 <col:62>
|-FunctionDecl 0x564504b00cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x564504b00bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x564504b00d70 <col:63>
|-FunctionDecl 0x564504b00e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x564504b00f38 <col:47>
|-FunctionDecl 0x564504b01040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x564504b00fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564504b010e8 <col:69>
|-FunctionDecl 0x564504b011f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x564504b01158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564504b01298 <col:69>
|-FunctionDecl 0x564504b01558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564504b01300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564504b01438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x564504b01608 <col:88>
|-TypedefDecl 0x564504b01698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x564504b01660 '__clock_t' sugar
|   |-Typedef 0x564504afba58 '__clock_t'
|   `-BuiltinType 0x564504a940a0 'long'
|-TypedefDecl 0x564504b01728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x564504b016f0 '__clockid_t' sugar
|   |-Typedef 0x564504afbe48 '__clockid_t'
|   `-BuiltinType 0x564504a94080 'int'
|-TypedefDecl 0x564504b017b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x564504b01780 '__timer_t' sugar
|   |-Typedef 0x564504afbeb8 '__timer_t'
|   `-PointerType 0x564504a947a0 'void *'
|     `-BuiltinType 0x564504a93fe0 'void'
|-RecordDecl 0x564504b01810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x564504b018e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x564504b01950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x564504b019b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x564504b01a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x564504b01a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x564504b01af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x564504b01b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x564504b01bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x564504b01c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x564504b01c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x564504b01cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x564504b01d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x564504b01e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x564504b01e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x564504b01f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x564504b02100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x564504b021a0 <col:45>
|-FunctionDecl 0x564504b02380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x564504b02270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x564504b02428 <col:54>
|-FunctionDecl 0x564504b02628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x564504b02490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x564504b02508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x564504b026d8 <line:157:22>
| `-ConstAttr 0x564504b02730 <col:63>
|-FunctionDecl 0x564504b03560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564504b02828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564504b03608 <col:56>
|-FunctionDecl 0x564504b039b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x564504b03678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x564504b036f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564504b03770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x564504b03868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x564504b03a70 <col:54>
|-RecordDecl 0x564504b03ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x564504b03b78 parent 0x564504a93f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x564504b03dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x564504b03e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x564504b03ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x564504b03f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x564504b04038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x564504b04158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x564504b04100 'struct __locale_struct *'
|   `-ElaboratedType 0x564504b04090 'struct __locale_struct' sugar
|     `-RecordType 0x564504b03b50 'struct __locale_struct'
|       `-Record 0x564504b03ac8 '__locale_struct'
|-TypedefDecl 0x564504b04208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x564504b041d0 '__locale_t' sugar
|   |-Typedef 0x564504b04158 '__locale_t'
|   `-PointerType 0x564504b04100 'struct __locale_struct *'
|     `-ElaboratedType 0x564504b04090 'struct __locale_struct' sugar
|       `-RecordType 0x564504b03b50 'struct __locale_struct'
|         `-Record 0x564504b03ac8 '__locale_struct'
|-FunctionDecl 0x564504b04610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x564504b04278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x564504b042f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564504b04370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x564504b04400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564504b04478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x564504b046d8 <col:40>
|-FunctionDecl 0x564504b048c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x564504b047a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x564504b04970 <col:66>
|-FunctionDecl 0x564504b04a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x564504b049d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x564504b04b28 <col:69>
|-FunctionDecl 0x564504b04d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564504b04b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564504b04c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564504b04e08 <col:52>
|-FunctionDecl 0x564504b04fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564504b04e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564504b04f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564504b05060 <col:55>
|-FunctionDecl 0x564504b051f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x564504b050e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x564504b052a0 <col:62>
|-FunctionDecl 0x564504b05418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x564504b05308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x564504b054c0 <col:60>
|-FunctionDecl 0x564504b05718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564504b05578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564504b055f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x564504b057c8 <col:44>
|-FunctionDecl 0x564504b059d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564504b05830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564504b058b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x564504b05a88 <col:49>
|-VarDecl 0x564504b05b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x564504b05c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x564504b05c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x564504b05d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x564504b05e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x564504b05f20 <col:42>
|-VarDecl 0x564504b05f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x564504b06010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x564504b06198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x564504b06088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x564504b06240 <col:57>
|-FunctionDecl 0x564504b06350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564504b062c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564504b063f8 <col:56>
|-FunctionDecl 0x564504b07540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564504b06478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x564504b075e8 <col:59>
|-FunctionDecl 0x564504b076f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x564504b07658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x564504b07798 <col:48>
| `-ConstAttr 0x564504b077f0 <col:89>
|-FunctionDecl 0x564504b07a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564504b078a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x564504b07938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x564504b07cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564504b07b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564504b07bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x564504b07d68 <col:88>
|-FunctionDecl 0x564504b07f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564504b07dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564504b07e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x564504b07fb0 <col:88>
|-FunctionDecl 0x564504b081c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x564504b08018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564504b080a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x564504b08278 <line:208:22>
|-FunctionDecl 0x564504b085e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564504b082e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564504b08360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x564504b083f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x564504b08480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x564504b088e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x564504b086e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x564504b087c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x564504b08998 <col:85>
|-FunctionDecl 0x564504b08d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x564504b08a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564504b08b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x564504b08c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x564504b08e40 <col:52>
|-FunctionDecl 0x564504b08fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x564504b08ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564504b09060 <col:61>
|-FunctionDecl 0x564504b09560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x564504b090c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564504b09148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x564504b09278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x564504b09368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x564504b09620 <col:62>
|-FunctionDecl 0x564504b09838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x564504b09688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564504b09718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x564504b098e8 <line:221:22>
|-FunctionDecl 0x564504b099e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x564504b09950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564504b09a90 <col:65>
|-TypedefDecl 0x564504b09b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x564504a94140 'unsigned long'
|-RecordDecl 0x564504b09b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x564504b09ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564504b09d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564504b09db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x564504b09d60 'union pthread_attr_t' sugar
|   `-RecordType 0x564504b09be0 'union pthread_attr_t'
|     `-Record 0x564504b09b58 'pthread_attr_t'
|-RecordDecl 0x564504b09e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x564504b09f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x564504b0a000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x564504b0a0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x564504b0a050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x564504b09e90 'struct __pthread_internal_list'
|     `-Record 0x564504b09e10 '__pthread_internal_list'
|-RecordDecl 0x564504b0a120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x564504b0a1c8 parent 0x564504a93f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x564504b0a2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564504b0a308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x564504b0a370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x564504b0a3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x564504b0a440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x564504b0a4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x564504b0e580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x564504b0e630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x564504b0e720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x564504b0e788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564504b0e910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x564504b0e8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x564504b0a1a0 'pthread_mutex_t'
|     `-Record 0x564504b0a120 ''
|-RecordDecl 0x564504b0e980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x564504b0eac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564504b0eb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564504b0ebe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x564504b0eb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x564504b0ea00 'pthread_mutexattr_t'
|     `-Record 0x564504b0e980 ''
|-RecordDecl 0x564504b0ec50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x564504b0ecf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x564504b0edc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564504b0ee28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x564504b0ee90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x564504b0eef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x564504b0ef60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x564504b0efc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x564504b0f030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x564504b0f098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x564504b0f150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix005_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix005_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x564504b0f240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x564504b0f2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x564504b0f3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x564504b0f380 'union pthread_cond_t' sugar
|   `-RecordType 0x564504b0ecd0 'pthread_cond_t'
|     `-Record 0x564504b0ec50 ''
|-RecordDecl 0x564504b0f450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x564504b0f590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564504b0f5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564504b0f6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x564504b0f650 'union pthread_condattr_t' sugar
|   `-RecordType 0x564504b0f4d0 'pthread_condattr_t'
|     `-Record 0x564504b0f450 ''
|-TypedefDecl 0x564504b0f738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x564504a94120 'unsigned int'
|-TypedefDecl 0x564504b0f7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x564504a94080 'int'
|-RecordDecl 0x564504b0f800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x564504b0f8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x564504b0f970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564504b0f9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x564504b0fa40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x564504b0faa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x564504b0fb10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x564504b0fb78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x564504b0fbe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x564504b0fc48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x564504b0fcb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x564504b0fd18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x564504b0fd80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x564504b0fe30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix005_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix005_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x564504b0fed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564504b0ff40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564504b10090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x564504b10030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x564504b0f880 'pthread_rwlock_t'
|     `-Record 0x564504b0f800 ''
|-RecordDecl 0x564504b10100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x564504b10240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x564504b102a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564504b10360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x564504b10300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x564504b10180 'pthread_rwlockattr_t'
|     `-Record 0x564504b10100 ''
|-TypedefDecl 0x564504b103e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x564504a94084 'volatile int' volatile
|   `-BuiltinType 0x564504a94080 'int'
|-RecordDecl 0x564504b10440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x564504b125b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x564504b12618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564504b126d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x564504b12670 'union pthread_barrier_t' sugar
|   `-RecordType 0x564504b104c0 'pthread_barrier_t'
|     `-Record 0x564504b10440 ''
|-RecordDecl 0x564504b12740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x564504b12840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564504b128a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564504b12960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x564504b12900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x564504b127c0 'pthread_barrierattr_t'
|     `-Record 0x564504b12740 ''
|-TypedefDecl 0x564504b12a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x564504b12a10 'long [8]' 8 
|   `-BuiltinType 0x564504a940a0 'long'
|-EnumDecl 0x564504b12ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x564504b12b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x564504b12be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x564504b12c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x564504b12d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x564504b12d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x564504b12da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x564504b12df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x564504b12e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x564504b12e68 <col:26> 'int'
| |   `-DeclRefExpr 0x564504b12e48 <col:26> 'int' EnumConstant 0x564504b12d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x564504b12f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x564504b12ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x564504b12ed0 <col:29> 'int' EnumConstant 0x564504b12d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x564504b12f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x564504b12f78 <col:30> 'int'
| |   `-DeclRefExpr 0x564504b12f58 <col:30> 'int' EnumConstant 0x564504b12da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x564504b13018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x564504b13000 <col:27> 'int'
|     `-DeclRefExpr 0x564504b12fe0 <col:27> 'int' EnumConstant 0x564504b12e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x564504b13068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x564504b13138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x564504b131c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x564504b131a8 <col:30> 'int'
| |   `-DeclRefExpr 0x564504b13188 <col:30> 'int' EnumConstant 0x564504b13138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x564504b13210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x564504b13298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x564504b13280 <col:29> 'int'
|     `-DeclRefExpr 0x564504b13260 <col:29> 'int' EnumConstant 0x564504b13210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x564504b132e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x564504b133b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x564504b13408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x564504b13458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x564504b134a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x564504b135c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x564504b13610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x564504b13660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x564504b136e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x564504b136d0 <col:31> 'int'
|     `-DeclRefExpr 0x564504b136b0 <col:31> 'int' EnumConstant 0x564504b135c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x564504b13738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x564504b13808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x564504b13858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x564504b138a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x564504b13978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x564504b139c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x564504b13a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x564504b13ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x564504b13b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x564504b13b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x564504b13dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x564504b13e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x564504b13e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x564504b13fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x564504b14008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x564504b140d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x564504b14128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x564504b14178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x564504b14248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x564504b14298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x564504b148f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x564504b14390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x564504b144a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564504b146e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x564504b14760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x564504b149b8 <col:47>
| |-NonNullAttr 0x564504b14a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x564504b14a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x564504b14b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x564504b14aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x564504b14dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x564504b14c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x564504b14ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x564504b14f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x564504b14e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x564504b15040 <col:60>
|-FunctionDecl 0x564504b15190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x564504b15230 <col:54>
| `-ConstAttr 0x564504b15288 <col:95>
|-FunctionDecl 0x564504b15458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x564504b152c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564504b15338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x564504b15508 <line:394:19>
| `-ConstAttr 0x564504b15560 <col:60>
|-FunctionDecl 0x564504b15f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564504b15e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564504b16010 <col:71>
| `-NonNullAttr 0x564504b16068 <col:112, col:126> 1
|-FunctionDecl 0x564504b16170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564504b160b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564504b16218 <line:397:22>
| `-NonNullAttr 0x564504b16270 <col:63, col:77> 1
|-FunctionDecl 0x564504b16498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x564504b162b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564504b16338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x564504b16548 <line:400:22>
| `-NonNullAttr 0x564504b165a0 <col:63, col:80> 1 2
|-FunctionDecl 0x564504b167a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564504b165e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564504b16668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x564504b16858 <line:403:22>
| `-NonNullAttr 0x564504b168b0 <col:63, col:77> 1
|-FunctionDecl 0x564504b16b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x564504b168f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564504b169a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x564504b16bb8 <line:406:22>
| `-NonNullAttr 0x564504b16c10 <col:63, col:80> 1 2
|-FunctionDecl 0x564504b17e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564504b16c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564504b16cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564504b17ef8 <line:409:22>
| `-NonNullAttr 0x564504b17f50 <col:63, col:77> 1
|-FunctionDecl 0x564504b18188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564504b17f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564504b18028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564504b18238 <line:412:22>
| `-NonNullAttr 0x564504b18290 <col:63, col:80> 1 2
|-FunctionDecl 0x564504b184c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564504b182d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x564504b18368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x564504b18578 <col:37>
| `-NonNullAttr 0x564504b185d0 <col:78, col:95> 1 2
|-FunctionDecl 0x564504b187b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564504b18618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564504b18698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x564504b18868 <line:418:22>
| `-NonNullAttr 0x564504b188c0 <col:63, col:80> 1 2
|-FunctionDecl 0x564504b18a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564504b18908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564504b18988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x564504b18af8 <line:420:22>
| `-NonNullAttr 0x564504b18b50 <col:63, col:77> 1
|-FunctionDecl 0x564504b18cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564504b18b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564504b18c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x564504b18da8 <line:423:22>
| `-NonNullAttr 0x564504b19e30 <col:63, col:80> 1 2
|-FunctionDecl 0x564504b19fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564504b19e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564504b19ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x564504b1a068 <line:426:22>
| `-NonNullAttr 0x564504b1a0c0 <col:63, col:77> 1
|-FunctionDecl 0x564504b1a268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564504b1a108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564504b1a188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x564504b1a318 <line:429:22>
| `-NonNullAttr 0x564504b1a370 <col:63, col:80> 1 2
|-FunctionDecl 0x564504b1a4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564504b1a3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564504b1a438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x564504b1a5a8 <line:431:22>
| `-NonNullAttr 0x564504b1a600 <col:63, col:77> 1
|-FunctionDecl 0x564504b1a828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x564504b1a648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564504b1a6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x564504b1a8d8 <line:434:22>
| |-NonNullAttr 0x564504b1a930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x564504b1a968 <col:100> "" ""
|-FunctionDecl 0x564504b1ab78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x564504b1a9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564504b1aa38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x564504b1ac28 <line:437:22>
| |-NonNullAttr 0x564504b1ac80 <col:63, col:77> 1
| `-DeprecatedAttr 0x564504b1acb8 <col:97> "" ""
|-FunctionDecl 0x564504b1aeb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564504b1ad08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564504b1ad80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564504b1af68 <line:440:22>
| `-NonNullAttr 0x564504b1afc0 <col:63, col:80> 1 2
|-FunctionDecl 0x564504b1b140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564504b1b008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564504b1b080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564504b1b1f0 <line:443:22>
| `-NonNullAttr 0x564504b1b248 <col:63, col:77> 1
|-FunctionDecl 0x564504b1b538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564504b1b298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564504b1b318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x564504b1b390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564504b1b5f0 <line:447:22>
| `-NonNullAttr 0x564504b1b648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x564504b1b8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x564504b1b6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564504b1b720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x564504b1b798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564504b1b9b0 <col:43>
| `-NonNullAttr 0x564504b1ba08 <col:84, col:98> 1
|-FunctionDecl 0x564504b1bcc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564504b1ba58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564504b1bad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x564504b1bb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x564504b1bd80 <line:452:22>
| `-NonNullAttr 0x564504b1bdd8 <col:63, col:77> 3
|-FunctionDecl 0x564504b1c0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564504b1be50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564504b1bed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x564504b1bf60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564504b1c1a0 <line:456:22>
| `-NonNullAttr 0x564504b1c1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x564504b1c3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x564504b1c248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564504b1c2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x564504b1c498 <line:458:22>
|-FunctionDecl 0x564504b1c868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x564504b1c560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x564504b1c700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x564504b1c918 <col:52, col:69> 1 2
|-FunctionDecl 0x564504b1cac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x564504b1c9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x564504b1ca20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x564504b1cca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x564504b1cb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x564504b1cc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x564504b1ce60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x564504b1cd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x564504b1cfa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x564504b1d040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x564504b1d0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x564504b1d1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x564504b1d240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x564504b1d410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix005_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x564504b1d508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x564504b1d5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x564504b1d560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x564504b1d0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x564504b1d040 ''
| `-AlignedAttr 0x564504b1d618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x564504b1d690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x564504b1d7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x564504b1d858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x564504b1d8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x564504b1d928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x564504b1db30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564504b1da20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564504b1dc78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564504b1dbe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564504b1de70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564504b1dd30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x564504b1df18 <line:487:22>
|-RecordDecl 0x564504b1df70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x564504b1e288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x564504b1e0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x564504b1e168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x564504b1e338 <col:86>
| `-ReturnsTwiceAttr 0x564504b1e390 <col:12> Implicit
|-FunctionDecl 0x564504b1e6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564504b1e460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x564504b1e570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x564504b1e768 <line:493:22>
| `-NonNullAttr 0x564504b1e7c0 <col:63, col:77> 1
|-FunctionDecl 0x564504b1e938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564504b1e808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564504b1e9e0 <line:495:22>
| `-NonNullAttr 0x564504b1ea38 <col:63, col:77> 1
|-FunctionDecl 0x564504b1eb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564504b1ea88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564504b1ebe8 <line:497:22>
| `-NonNullAttr 0x564504b1ec40 <col:52, col:66> 1
|-FunctionDecl 0x564504b1ed40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564504b1ec88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564504b1ede8 <line:499:22>
| `-NonNullAttr 0x564504b1ee40 <col:52, col:66> 1
|-FunctionDecl 0x564504b1f088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564504b1ee98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564504b1ef28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564504b1f138 <col:36>
| `-NonNullAttr 0x564504b1f190 <col:66, col:83> 1 2
|-FunctionDecl 0x564504b1f290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564504b1f1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564504b1f338 <line:504:22>
| `-NonNullAttr 0x564504b1f390 <col:52, col:66> 1
|-FunctionDecl 0x564504b1f628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564504b1f440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564504b1f4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564504b1f6d8 <line:508:22>
| `-NonNullAttr 0x564504b1f730 <col:63, col:80> 1 2
|-FunctionDecl 0x564504b1f9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x564504b1f778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564504b1f7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x564504b1f878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x564504b1fab0 <line:512:22>
| `-NonNullAttr 0x564504b1fb08 <col:63, col:80> 1 3
|-FunctionDecl 0x564504b1fc10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564504b1fb58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564504b1fcb8 <line:514:22>
| `-NonNullAttr 0x564504b1fd10 <col:63, col:77> 1
|-FunctionDecl 0x564504b1ff38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564504b1fdc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564504b1ffe0 <line:516:22>
| `-NonNullAttr 0x564504b20038 <col:63, col:77> 1
|-FunctionDecl 0x564504b20140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564504b20088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564504b201e8 <line:518:22>
| `-NonNullAttr 0x564504b20240 <col:63, col:77> 1
|-FunctionDecl 0x564504b20468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564504b20288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564504b20308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x564504b20518 <line:522:22>
| `-NonNullAttr 0x564504b20570 <col:63, col:80> 1 2
|-FunctionDecl 0x564504b20778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564504b205b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564504b20638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x564504b20828 <line:525:22>
| `-NonNullAttr 0x564504b20880 <col:63, col:77> 1
|-FunctionDecl 0x564504b20a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564504b208c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564504b20948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x564504b20ad8 <line:528:22>
| `-NonNullAttr 0x564504b20b30 <col:63, col:80> 1 2
|-FunctionDecl 0x564504b20cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564504b20b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564504b20bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x564504b20d68 <line:530:22>
| `-NonNullAttr 0x564504b20dc0 <col:63, col:77> 1
|-FunctionDecl 0x564504b21f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564504b20e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564504b21eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x564504b22040 <line:534:22>
| `-NonNullAttr 0x564504b22098 <col:63, col:80> 1 2
|-FunctionDecl 0x564504b22228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564504b220e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564504b22168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x564504b222d8 <line:537:22>
| `-NonNullAttr 0x564504b22330 <col:63, col:77> 1
|-FunctionDecl 0x564504b224d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564504b22378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564504b223f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564504b22588 <line:541:22>
| `-NonNullAttr 0x564504b225e0 <col:63, col:80> 1 2
|-FunctionDecl 0x564504b22768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564504b22628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564504b226a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x564504b22818 <line:544:22>
| `-NonNullAttr 0x564504b22870 <col:63, col:77> 1
|-FunctionDecl 0x564504b22a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x564504b228b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x564504b22938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x564504b22b08 <line:547:22>
| `-NonNullAttr 0x564504b22b60 <col:63, col:80> 1 2
|-FunctionDecl 0x564504b22ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564504b22ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564504b22c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x564504b22d98 <line:550:22>
| `-NonNullAttr 0x564504b22df0 <col:63, col:77> 1
|-FunctionDecl 0x564504b24168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x564504b23f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564504b24020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x564504b24218 <col:29>
| `-NonNullAttr 0x564504b24270 <col:70, col:84> 1
|-FunctionDecl 0x564504b243e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564504b242b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564504b24490 <line:555:22>
| `-NonNullAttr 0x564504b244e8 <col:63, col:77> 1
|-FunctionDecl 0x564504b245f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564504b24538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564504b24698 <line:557:22>
| `-NonNullAttr 0x564504b246f0 <col:52, col:66> 1
|-FunctionDecl 0x564504b247f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564504b24738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564504b24898 <line:559:19>
| `-NonNullAttr 0x564504b248f0 <col:49, col:63> 1
|-FunctionDecl 0x564504b24b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564504b24938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564504b249c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564504b24bd8 <col:39>
| `-NonNullAttr 0x564504b24c30 <col:69, col:86> 1 2
|-FunctionDecl 0x564504b24d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564504b24c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564504b24dd8 <line:564:22>
| `-NonNullAttr 0x564504b24e30 <col:52, col:66> 1
|-FunctionDecl 0x564504b24f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564504b24ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564504b25040 <line:566:22>
| `-NonNullAttr 0x564504b25098 <col:52, col:66> 1
|-FunctionDecl 0x564504b25258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564504b250e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564504b25178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564504b25308 <col:39>
| `-NonNullAttr 0x564504b25360 <col:69, col:86> 1 2
|-FunctionDecl 0x564504b25460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564504b253a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564504b25508 <line:571:22>
| `-NonNullAttr 0x564504b25560 <col:52, col:66> 1
|-FunctionDecl 0x564504b25748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564504b25610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564504b257f0 <line:573:22>
| `-NonNullAttr 0x564504b25848 <col:63, col:77> 1
|-FunctionDecl 0x564504b25950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564504b25898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564504b259f8 <line:575:22>
| `-NonNullAttr 0x564504b25a50 <col:63, col:77> 1
|-FunctionDecl 0x564504b25c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564504b25a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564504b25b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x564504b25d28 <line:579:22>
| `-NonNullAttr 0x564504b25d80 <col:63, col:80> 1 2
|-FunctionDecl 0x564504b25fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564504b25dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564504b25e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x564504b26058 <line:582:22>
| `-NonNullAttr 0x564504b260b0 <col:63, col:77> 1
|-FunctionDecl 0x564504b26258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564504b260f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564504b26178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x564504b26308 <line:586:22>
| `-NonNullAttr 0x564504b26360 <col:63, col:80> 1 2
|-FunctionDecl 0x564504b264e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564504b263a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564504b26428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x564504b26598 <col:36>
| `-NonNullAttr 0x564504b265f0 <col:77, col:91> 1
|-FunctionDecl 0x564504b26928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x564504b266d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564504b267e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x564504b269d8 <line:591:22>
| `-NonNullAttr 0x564504b26a30 <col:63, col:77> 1
|-FunctionDecl 0x564504b26ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564504b26a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564504b26c50 <line:593:22>
| `-NonNullAttr 0x564504b26ca8 <col:63, col:77> 1
|-FunctionDecl 0x564504b26db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564504b26cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564504b26e58 <line:595:22>
| `-NonNullAttr 0x564504b26eb0 <col:52, col:66> 1
|-FunctionDecl 0x564504b26fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564504b26f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564504b27070 <line:597:22>
| `-NonNullAttr 0x564504b270c8 <col:52, col:66> 1
|-FunctionDecl 0x564504b272f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x564504b27118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564504b27190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x564504b273a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x564504b276d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564504b27428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564504b274a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564504b27530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x564504b27790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x564504b279a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564504b27870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x564504b27a50 <line:606:22>
| `-NonNullAttr 0x564504b27aa8 <col:63, col:77> 1
|-FunctionDecl 0x564504b27bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564504b27af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x564504b27c58 <line:608:22>
| `-NonNullAttr 0x564504b27cb0 <col:63, col:77> 1
|-FunctionDecl 0x564504b27f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564504b27cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564504b27d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x564504b27fc0 <line:612:22>
| `-NonNullAttr 0x564504b28018 <col:63, col:80> 1 2
|-FunctionDecl 0x564504b28228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x564504b28068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564504b280e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x564504b282d8 <col:37>
| `-NonNullAttr 0x564504b28330 <col:78, col:92> 1
|-FunctionDecl 0x564504b28548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x564504b28378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564504b28420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x564504b285f8 <line:618:22>
| `-NonNullAttr 0x564504b28650 <col:63, col:80> 1 2
|-FunctionDecl 0x564504b28818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x564504b28698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564504b28710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x564504b288c8 <line:621:22>
| `-NonNullAttr 0x564504b28920 <col:63, col:77> 1
|-FunctionDecl 0x564504b28bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x564504b28a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x564504b28a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x564504b28c78 <line:623:22>
| `-NonNullAttr 0x564504b28cd0 <col:63, col:77> 1
|-FunctionDecl 0x564504b28e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564504b28d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564504b28f20 <line:625:22>
| `-NonNullAttr 0x564504b28f78 <col:63, col:77> 1
|-FunctionDecl 0x564504b29080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564504b28fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564504b29128 <line:627:22>
| `-NonNullAttr 0x564504b29180 <col:52, col:66> 1
|-FunctionDecl 0x564504b29280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564504b291c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564504b29328 <line:629:22>
| `-NonNullAttr 0x564504b29380 <col:52, col:66> 1
|-FunctionDecl 0x564504b29480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564504b293c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564504b29528 <line:631:22>
| `-NonNullAttr 0x564504b29580 <col:52, col:66> 1
|-FunctionDecl 0x564504b29958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x564504b29660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x564504b29770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564504b297f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x564504b29a10 <line:635:22>
| `-NonNullAttr 0x564504b29a68 <col:63, col:77> 1
|-FunctionDecl 0x564504b29be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x564504b29ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x564504b29c90 <line:637:22>
| `-NonNullAttr 0x564504b29ce8 <col:63, col:77> 1
|-FunctionDecl 0x564504b29df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x564504b29d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x564504b29e98 <line:639:22>
| `-NonNullAttr 0x564504b29ef0 <col:52, col:66> 1
|-FunctionDecl 0x564504b2a0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564504b29fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564504b2a190 <line:641:22>
| `-NonNullAttr 0x564504b2a1e8 <col:63, col:77> 1
|-FunctionDecl 0x564504b2a2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564504b2a238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564504b2a398 <line:643:22>
| `-NonNullAttr 0x564504b2a3f0 <col:63, col:77> 1
|-FunctionDecl 0x564504b2a618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564504b2a438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564504b2a4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x564504b2a6c8 <line:647:22>
| `-NonNullAttr 0x564504b2a720 <col:63, col:80> 1 2
|-FunctionDecl 0x564504b2a928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x564504b2a768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x564504b2a7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x564504b2a9d8 <line:650:22>
| `-NonNullAttr 0x564504b2aa30 <col:63, col:77> 1
|-FunctionDecl 0x564504b2ad78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x564504b2ab10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x564504b2ac30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x564504b2ae28 <line:653:22>
| `-NonNullAttr 0x564504b2ae80 <col:63, col:77> 1
|-FunctionDecl 0x564504b2afe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x564504b2aec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564504b2b090 <col:69>
|-FunctionDecl 0x564504b2b208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x564504b2b0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564504b2b2b0 <col:72>
|-FunctionDecl 0x564504b2b4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x564504b2b318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x564504b2b3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x564504b2b598 <col:44>
|-FunctionDecl 0x564504b2b7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x564504b2b600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564504b2b678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x564504b2b868 <line:660:22>
| `-NonNullAttr 0x564504b2b8c0 <col:63, col:77> 2
|-FunctionDecl 0x564504b2bd08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x564504b2b9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x564504b2bab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x564504b2bbc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x564504b2bdc0 <col:47>
|-FunctionDecl 0x564504b2cf60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x564504b2be30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564504b2d0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x564504b2d020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564504b2d210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x564504b2d178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564504b2d368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x564504b2d2d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564504b2d430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x564504b2d4f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x564504b2d5b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x564504b2d668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x564504b2d6e8 prev 0x564504b2d668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x564504b2d750 <col:24> 'int' 0
|-VarDecl 0x564504b2d788 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x564504b2d808 prev 0x564504b2d788 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x564504b2d870 <col:27> 'int' 0
|-VarDecl 0x564504b2d8a8 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x564504b2d928 prev 0x564504b2d8a8 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x564504b2d990 <col:27> 'int' 0
|-VarDecl 0x564504b2d9c8 <line:678:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x564504b2da48 prev 0x564504b2d9c8 <line:679:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x564504b2dab0 <col:27> 'int' 0
|-VarDecl 0x564504b2dae8 <line:680:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x564504b2db68 prev 0x564504b2dae8 <line:681:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x564504b2dbd0 <col:27> 'int' 0
|-VarDecl 0x564504b2dc08 <line:682:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x564504b2dc88 prev 0x564504b2dc08 <line:683:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x564504b2dcf0 <col:27> 'int' 0
|-VarDecl 0x564504b2dd28 <line:684:1, col:5> col:5 used a 'int'
|-VarDecl 0x564504b2dda8 prev 0x564504b2dd28 <line:685:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x564504b2de10 <col:9> 'int' 0
|-VarDecl 0x564504b2de40 <line:686:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x564504b2dec0 <line:687:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x564504b2df70 <line:688:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x564504b2dfe8 <line:689:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x564504b2e060 <line:690:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x564504b2e0d8 <line:691:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x564504b2e150 <line:692:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x564504b2e1c8 <line:693:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x564504b2e240 <line:694:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x564504b2e2b8 <line:695:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x564504b2e330 <line:696:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x564504b2e3a8 <line:697:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x564504b2e420 <line:698:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x564504b2e4a0 <line:699:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x564504b2e520 <line:700:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x564504b2e598 <line:701:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x564504b2e618 <line:702:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x564504b2e690 <line:703:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x564504b2e708 <line:704:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x564504b2e780 <line:705:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x564504b2e800 <line:706:1, col:5> col:5 used x 'int'
|-VarDecl 0x564504b2e880 prev 0x564504b2e800 <line:707:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x564504b2e8e8 <col:9> 'int' 0
|-VarDecl 0x564504b2e920 <line:708:1, col:5> col:5 used y 'int'
|-VarDecl 0x564504b2e9a0 prev 0x564504b2e920 <line:709:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x564504b2ea08 <col:9> 'int' 0
|-VarDecl 0x564504b2ea40 <line:710:1, col:5> col:5 used z 'int'
|-VarDecl 0x564504b2eac0 prev 0x564504b2ea40 <line:711:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x564504b2eb28 <col:9> 'int' 0
|-VarDecl 0x564504b2eb58 <line:712:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x564504b2ebd0 <line:713:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x564504b2ece8 prev 0x564504b2cf60 <line:714:1, line:743:1> line:714:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x564504b2ec50 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564504b30588 <line:715:1, line:743:1>
|   |-CallExpr 0x564504b2edf8 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564504b2ede0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b2ed90 <col:3> 'void ()' Function 0x564504ad4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564504b2ee70 <line:717:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564504b2ee18 <col:3> 'int' lvalue Var 0x564504b2e618 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x564504b2ee58 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564504b2ee38 <col:15> 'int' lvalue Var 0x564504b2e520 'a$w_buff0' 'int'
|   |-BinaryOperator 0x564504b2eed0 <line:718:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564504b2ee90 <col:3> 'int' lvalue Var 0x564504b2e520 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x564504b2eeb0 <col:15> 'int' 1
|   |-BinaryOperator 0x564504b2ef48 <line:719:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564504b2eef0 <col:3> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564504b2ef30 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564504b2ef10 <col:20> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564504b2eff8 <line:720:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x564504b2ef80 <col:3> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x564504b2efd0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564504b2efa0 <col:27> 'int' 1
|   |-CallExpr 0x564504b2f178 <line:721:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x564504b2f160 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x564504b2f018 <col:3> 'void (int)' Function 0x564504ad40d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x564504b2f118 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x564504b2f0f8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x564504b2f0d8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x564504b2f090 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x564504b2f078 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x564504b2f038 <col:23> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x564504b2f0c0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x564504b2f0a8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x564504b2f058 <col:41> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564504b2f1f8 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564504b2f1a0 <col:3> '_Bool' lvalue Var 0x564504b2e1c8 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x564504b2f1e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564504b2f1c0 <col:20> '_Bool' lvalue Var 0x564504b2df70 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x564504b2f270 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564504b2f218 <col:3> '_Bool' lvalue Var 0x564504b2e240 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564504b2f258 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564504b2f238 <col:20> '_Bool' lvalue Var 0x564504b2dfe8 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x564504b2f2e8 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564504b2f290 <col:3> '_Bool' lvalue Var 0x564504b2e2b8 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564504b2f2d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564504b2f2b0 <col:20> '_Bool' lvalue Var 0x564504b2e060 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564504b2f360 <line:725:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564504b2f308 <col:3> '_Bool' lvalue Var 0x564504b2e330 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564504b2f348 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564504b2f328 <col:20> '_Bool' lvalue Var 0x564504b2e0d8 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x564504b2f3d8 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564504b2f380 <col:3> '_Bool' lvalue Var 0x564504b2e3a8 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x564504b2f3c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564504b2f3a0 <col:20> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x564504b2f470 <line:727:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x564504b2f3f8 <col:3> '_Bool' lvalue Var 0x564504b2dfe8 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x564504b2f448 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564504b2f418 <col:27> 'int' 1
|   |-CallExpr 0x564504b2f4c8 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564504b2f4b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b2f490 <col:3> 'void ()' Function 0x564504ad4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564504b2f520 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564504b2f508 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b2f4e8 <col:3> 'void ()' Function 0x564504ad4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564504b2f580 <line:730:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564504b2f540 <col:3> 'int' lvalue Var 0x564504b2e880 'x' 'int'
|   | `-IntegerLiteral 0x564504b2f560 <col:7> 'int' 1
|   |-CallExpr 0x564504b2f5d8 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564504b2f5c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b2f5a0 <col:3> 'void ()' Function 0x564504ad4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564504b2f630 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564504b2f618 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b2f5f8 <col:3> 'void ()' Function 0x564504ad4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564504b2f918 <line:733:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564504b2f650 <col:3> 'int' lvalue Var 0x564504b2dda8 'a' 'int'
|   | `-ConditionalOperator 0x564504b2f8e8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564504b2f710 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564504b2f6c8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564504b2f6b0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564504b2f670 <col:7> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564504b2f6f8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564504b2f6e0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564504b2f690 <col:25> '_Bool' lvalue Var 0x564504b2dfe8 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x564504b2f8d0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564504b2f730 <col:42> 'int' lvalue Var 0x564504b2e520 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x564504b2f8b0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564504b2f880 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564504b2f7f0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564504b2f7a8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564504b2f790 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564504b2f750 <col:55> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564504b2f7d8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564504b2f7c0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564504b2f770 <col:73> '_Bool' lvalue Var 0x564504b2e240 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x564504b2f850 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564504b2f810 <col:90> 'int' lvalue Var 0x564504b2e618 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564504b2f868 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564504b2f830 <col:102> 'int' lvalue Var 0x564504b2dda8 'a' 'int'
|   |-BinaryOperator 0x564504b2fb20 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564504b2f938 <col:3> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564504b2fb08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564504b2fad8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564504b2f9f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564504b2f9b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564504b2f998 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564504b2f958 <col:20> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564504b2f9e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564504b2f9c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564504b2f978 <col:38> '_Bool' lvalue Var 0x564504b2dfe8 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564504b2fa90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564504b2fa48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564504b2fa18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564504b2fac0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564504b2faa8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564504b2fa70 <col:66> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564504b2fe08 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564504b2fb40 <col:3> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564504b2fdf0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564504b2fdc0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564504b2fce0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564504b2fc00 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564504b2fbb8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564504b2fba0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564504b2fb60 <col:20> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564504b2fbe8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564504b2fbd0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564504b2fb80 <col:38> '_Bool' lvalue Var 0x564504b2dfe8 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x564504b2fcc0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564504b2fc78 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564504b2fc60 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564504b2fc20 <col:56> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564504b2fca8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564504b2fc90 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564504b2fc40 <col:74> '_Bool' lvalue Var 0x564504b2e240 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564504b2fd78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564504b2fd30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564504b2fd00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564504b2fda8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564504b2fd90 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564504b2fd58 <col:102> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564504b30020 <line:736:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564504b2fe28 <col:3> '_Bool' lvalue Var 0x564504b2dfe8 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564504b30008 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564504b2ffd8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564504b2fee8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564504b2fea0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564504b2fe88 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564504b2fe48 <col:20> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564504b2fed0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564504b2feb8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564504b2fe68 <col:38> '_Bool' lvalue Var 0x564504b2dfe8 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564504b2ff90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564504b2ff38 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564504b2ff08 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564504b2ffc0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564504b2ffa8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564504b2ff60 <col:66> '_Bool' lvalue Var 0x564504b2dfe8 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x564504b30308 <line:737:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564504b30040 <col:3> '_Bool' lvalue Var 0x564504b2e240 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564504b302f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564504b302c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564504b301e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564504b30100 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564504b300b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564504b300a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564504b30060 <col:20> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564504b300e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564504b300d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564504b30080 <col:38> '_Bool' lvalue Var 0x564504b2dfe8 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x564504b301c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564504b30178 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564504b30160 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564504b30120 <col:56> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564504b301a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564504b30190 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564504b30140 <col:74> '_Bool' lvalue Var 0x564504b2e240 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564504b30278 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564504b30230 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564504b30200 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564504b302a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564504b30290 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564504b30258 <col:102> '_Bool' lvalue Var 0x564504b2e240 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x564504b30360 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564504b30348 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b30328 <col:3> 'void ()' Function 0x564504ad4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564504b303b8 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564504b303a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b30380 <col:3> 'void ()' Function 0x564504ad4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564504b30470 <line:740:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564504b303d8 <col:3> 'int' lvalue Var 0x564504b2d6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564504b30450 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564504b30438 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564504b303f8 <col:22> 'int' lvalue Var 0x564504b2d6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564504b30418 <col:41> 'int' 1
|   |-CallExpr 0x564504b304c8 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564504b304b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b30490 <col:3> 'void ()' Function 0x564504ad4410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564504b30578 <line:742:3, col:36>
|     `-CallExpr 0x564504b30558 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564504b30540 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564504b304e8 <col:10> 'void *(void)' Function 0x564504ad3e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564504b30720 prev 0x564504b2d0b8 <line:744:1, line:763:1> line:744:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x564504b30688 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564504b31960 <line:745:1, line:763:1>
|   |-CallExpr 0x564504b30800 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564504b307e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b307c8 <col:3> 'void ()' Function 0x564504ad4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564504b30860 <line:747:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564504b30820 <col:3> 'int' lvalue Var 0x564504b2e880 'x' 'int'
|   | `-IntegerLiteral 0x564504b30840 <col:7> 'int' 2
|   |-CallExpr 0x564504b308b8 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564504b308a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b30880 <col:3> 'void ()' Function 0x564504ad4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564504b30910 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564504b308f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b308d8 <col:3> 'void ()' Function 0x564504ad4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564504b30988 <line:750:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564504b30930 <col:3> 'int' lvalue Var 0x564504b2d808 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x564504b30970 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564504b30950 <col:25> 'int' lvalue Var 0x564504b2e9a0 'y' 'int'
|   |-CallExpr 0x564504b309e0 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564504b309c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b309a8 <col:3> 'void ()' Function 0x564504ad4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564504b30a38 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564504b30a20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b30a00 <col:3> 'void ()' Function 0x564504ad4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564504b30d20 <line:753:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564504b30a58 <col:3> 'int' lvalue Var 0x564504b2dda8 'a' 'int'
|   | `-ConditionalOperator 0x564504b30cf0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564504b30b18 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564504b30ad0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564504b30ab8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564504b30a78 <col:7> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564504b30b00 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564504b30ae8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564504b30a98 <col:25> '_Bool' lvalue Var 0x564504b2e060 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x564504b30cd8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564504b30b38 <col:42> 'int' lvalue Var 0x564504b2e520 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x564504b30cb8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564504b30c88 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564504b30bf8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564504b30bb0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564504b30b98 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564504b30b58 <col:55> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564504b30be0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564504b30bc8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564504b30b78 <col:73> '_Bool' lvalue Var 0x564504b2e2b8 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564504b30c58 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564504b30c18 <col:90> 'int' lvalue Var 0x564504b2e618 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564504b30c70 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564504b30c38 <col:102> 'int' lvalue Var 0x564504b2dda8 'a' 'int'
|   |-BinaryOperator 0x564504b30f28 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564504b30d40 <col:3> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564504b30f10 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564504b30ee0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564504b30e00 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564504b30db8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564504b30da0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564504b30d60 <col:20> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564504b30de8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564504b30dd0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564504b30d80 <col:38> '_Bool' lvalue Var 0x564504b2e060 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564504b30e98 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564504b30e50 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564504b30e20 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564504b30ec8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564504b30eb0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564504b30e78 <col:66> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564504b31228 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564504b30f48 <col:3> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564504b31210 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564504b311e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564504b31100 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564504b31020 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564504b30fd8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564504b30fc0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564504b30f68 <col:20> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564504b31008 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564504b30ff0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564504b30fa0 <col:38> '_Bool' lvalue Var 0x564504b2e060 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x564504b310e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564504b31098 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564504b31080 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564504b31040 <col:56> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564504b310c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564504b310b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564504b31060 <col:74> '_Bool' lvalue Var 0x564504b2e2b8 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564504b31198 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564504b31150 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564504b31120 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564504b311c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564504b311b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564504b31178 <col:102> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564504b31430 <line:756:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564504b31248 <col:3> '_Bool' lvalue Var 0x564504b2e060 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564504b31418 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564504b313e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564504b31308 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564504b312c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564504b312a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564504b31268 <col:20> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564504b312f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564504b312d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564504b31288 <col:38> '_Bool' lvalue Var 0x564504b2e060 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564504b313a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564504b31358 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564504b31328 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564504b313d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564504b313b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564504b31380 <col:66> '_Bool' lvalue Var 0x564504b2e060 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564504b31718 <line:757:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564504b31450 <col:3> '_Bool' lvalue Var 0x564504b2e2b8 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564504b31700 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564504b316d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564504b315f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564504b31510 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564504b314c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564504b314b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564504b31470 <col:20> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564504b314f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564504b314e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564504b31490 <col:38> '_Bool' lvalue Var 0x564504b2e060 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x564504b315d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564504b31588 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564504b31570 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564504b31530 <col:56> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564504b315b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564504b315a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564504b31550 <col:74> '_Bool' lvalue Var 0x564504b2e2b8 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564504b31688 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564504b31640 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564504b31610 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564504b316b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564504b316a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564504b31668 <col:102> '_Bool' lvalue Var 0x564504b2e2b8 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x564504b31770 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564504b31758 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b31738 <col:3> 'void ()' Function 0x564504ad4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564504b317c8 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564504b317b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b31790 <col:3> 'void ()' Function 0x564504ad4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564504b31880 <line:760:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564504b317e8 <col:3> 'int' lvalue Var 0x564504b2d6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564504b31860 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564504b31848 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564504b31808 <col:22> 'int' lvalue Var 0x564504b2d6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564504b31828 <col:41> 'int' 1
|   |-CallExpr 0x564504b318d8 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564504b318c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b318a0 <col:3> 'void ()' Function 0x564504ad4410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564504b31950 <line:762:3, col:36>
|     `-CallExpr 0x564504b31930 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564504b31918 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564504b318f8 <col:10> 'void *(void)' Function 0x564504ad3e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564504b31aa8 prev 0x564504b2d210 <line:764:1, line:786:1> line:764:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x564504b31a10 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564504b32e10 <line:765:1, line:786:1>
|   |-CallExpr 0x564504b31b88 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564504b31b70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b31b50 <col:3> 'void ()' Function 0x564504ad4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564504b31be8 <line:767:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564504b31ba8 <col:3> 'int' lvalue Var 0x564504b2e9a0 'y' 'int'
|   | `-IntegerLiteral 0x564504b31bc8 <col:7> 'int' 1
|   |-CallExpr 0x564504b31c40 <line:768:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564504b31c28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b31c08 <col:3> 'void ()' Function 0x564504ad4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564504b31c98 <line:769:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564504b31c80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b31c60 <col:3> 'void ()' Function 0x564504ad4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564504b31d10 <line:770:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564504b31cb8 <col:3> 'int' lvalue Var 0x564504b2d928 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x564504b31cf8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564504b31cd8 <col:25> 'int' lvalue Var 0x564504b2e9a0 'y' 'int'
|   |-CallExpr 0x564504b31d68 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564504b31d50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b31d30 <col:3> 'void ()' Function 0x564504ad4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564504b31dc0 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564504b31da8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b31d88 <col:3> 'void ()' Function 0x564504ad4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564504b31e38 <line:773:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564504b31de0 <col:3> 'int' lvalue Var 0x564504b2da48 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x564504b31e20 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564504b31e00 <col:25> 'int' lvalue Var 0x564504b2eac0 'z' 'int'
|   |-CallExpr 0x564504b31e90 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564504b31e78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b31e58 <col:3> 'void ()' Function 0x564504ad4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564504b31ee8 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564504b31ed0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b31eb0 <col:3> 'void ()' Function 0x564504ad4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564504b321e8 <line:776:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564504b31f08 <col:3> 'int' lvalue Var 0x564504b2dda8 'a' 'int'
|   | `-ConditionalOperator 0x564504b321b8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564504b31fe0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564504b31f80 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564504b31f68 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564504b31f28 <col:7> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564504b31fc8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564504b31fb0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564504b31f48 <col:25> '_Bool' lvalue Var 0x564504b2e0d8 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x564504b321a0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564504b32000 <col:42> 'int' lvalue Var 0x564504b2e520 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x564504b32180 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564504b32150 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564504b320c0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564504b32078 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564504b32060 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564504b32020 <col:55> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564504b320a8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564504b32090 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564504b32040 <col:73> '_Bool' lvalue Var 0x564504b2e330 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x564504b32120 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564504b320e0 <col:90> 'int' lvalue Var 0x564504b2e618 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564504b32138 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564504b32100 <col:102> 'int' lvalue Var 0x564504b2dda8 'a' 'int'
|   |-BinaryOperator 0x564504b323f0 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564504b32208 <col:3> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564504b323d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564504b323a8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564504b322c8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564504b32280 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564504b32268 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564504b32228 <col:20> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564504b322b0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564504b32298 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564504b32248 <col:38> '_Bool' lvalue Var 0x564504b2e0d8 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564504b32360 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564504b32318 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564504b322e8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564504b32390 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564504b32378 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564504b32340 <col:66> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564504b326d8 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564504b32410 <col:3> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564504b326c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564504b32690 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564504b325b0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564504b324d0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564504b32488 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564504b32470 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564504b32430 <col:20> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564504b324b8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564504b324a0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564504b32450 <col:38> '_Bool' lvalue Var 0x564504b2e0d8 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x564504b32590 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564504b32548 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564504b32530 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564504b324f0 <col:56> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564504b32578 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564504b32560 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564504b32510 <col:74> '_Bool' lvalue Var 0x564504b2e330 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564504b32648 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564504b32600 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564504b325d0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564504b32678 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564504b32660 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564504b32628 <col:102> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564504b328e0 <line:779:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564504b326f8 <col:3> '_Bool' lvalue Var 0x564504b2e0d8 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564504b328c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564504b32898 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564504b327b8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564504b32770 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564504b32758 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564504b32718 <col:20> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564504b327a0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564504b32788 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564504b32738 <col:38> '_Bool' lvalue Var 0x564504b2e0d8 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564504b32850 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564504b32808 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564504b327d8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564504b32880 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564504b32868 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564504b32830 <col:66> '_Bool' lvalue Var 0x564504b2e0d8 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x564504b32bc8 <line:780:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564504b32900 <col:3> '_Bool' lvalue Var 0x564504b2e330 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564504b32bb0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564504b32b80 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564504b32aa0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564504b329c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564504b32978 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564504b32960 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564504b32920 <col:20> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564504b329a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564504b32990 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564504b32940 <col:38> '_Bool' lvalue Var 0x564504b2e0d8 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x564504b32a80 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564504b32a38 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564504b32a20 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564504b329e0 <col:56> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564504b32a68 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564504b32a50 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564504b32a00 <col:74> '_Bool' lvalue Var 0x564504b2e330 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564504b32b38 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564504b32af0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564504b32ac0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564504b32b68 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564504b32b50 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564504b32b18 <col:102> '_Bool' lvalue Var 0x564504b2e330 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x564504b32c20 <line:781:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564504b32c08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b32be8 <col:3> 'void ()' Function 0x564504ad4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564504b32c78 <line:782:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564504b32c60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b32c40 <col:3> 'void ()' Function 0x564504ad4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564504b32d30 <line:783:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564504b32c98 <col:3> 'int' lvalue Var 0x564504b2d6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564504b32d10 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564504b32cf8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564504b32cb8 <col:22> 'int' lvalue Var 0x564504b2d6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564504b32cd8 <col:41> 'int' 1
|   |-CallExpr 0x564504b32d88 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564504b32d70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b32d50 <col:3> 'void ()' Function 0x564504ad4410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564504b32e00 <line:785:3, col:36>
|     `-CallExpr 0x564504b32de0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564504b32dc8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564504b32da8 <col:10> 'void *(void)' Function 0x564504ad3e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564504b32fc0 prev 0x564504b2d368 <line:787:1, line:822:1> line:787:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x564504b32ed8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564504b36cb0 <line:788:1, line:822:1>
|   |-CallExpr 0x564504b330a0 <line:789:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564504b33088 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b33068 <col:3> 'void ()' Function 0x564504ad4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564504b33100 <line:790:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564504b330c0 <col:3> 'int' lvalue Var 0x564504b2eac0 'z' 'int'
|   | `-IntegerLiteral 0x564504b330e0 <col:7> 'int' 1
|   |-CallExpr 0x564504b33158 <line:791:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564504b33140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b33120 <col:3> 'void ()' Function 0x564504ad4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564504b331b0 <line:792:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564504b33198 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b33178 <col:3> 'void ()' Function 0x564504ad4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564504b33228 <line:793:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564504b331d0 <col:3> 'int' lvalue Var 0x564504b2db68 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x564504b33210 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564504b331f0 <col:25> 'int' lvalue Var 0x564504b2eac0 'z' 'int'
|   |-CallExpr 0x564504b33280 <line:794:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564504b33268 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b33248 <col:3> 'void ()' Function 0x564504ad4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564504b332d8 <line:795:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564504b332c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b332a0 <col:3> 'void ()' Function 0x564504ad4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564504b33388 <line:796:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x564504b332f8 <col:3> '_Bool' lvalue Var 0x564504b2eb58 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x564504b33370 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x564504b33350 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x564504b33338 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x564504b33318 <col:19> 'void *(void)' Function 0x564504ad3e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x564504b33438 <line:797:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x564504b333a8 <col:3> '_Bool' lvalue Var 0x564504b2ebd0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x564504b33420 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x564504b33400 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x564504b333e8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x564504b333c8 <col:19> 'void *(void)' Function 0x564504ad3e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x564504b334b0 <line:798:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x564504b33458 <col:3> '_Bool' lvalue Var 0x564504b2de40 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x564504b33498 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564504b33478 <col:21> '_Bool' lvalue Var 0x564504b2ebd0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x564504b33528 <line:799:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564504b334d0 <col:3> 'int' lvalue Var 0x564504b2dec0 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x564504b33510 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564504b334f0 <col:15> 'int' lvalue Var 0x564504b2dda8 'a' 'int'
|   |-BinaryOperator 0x564504b33960 <line:800:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x564504b33548 <col:3> 'int' lvalue Var 0x564504b2dda8 'a' 'int'
|   | `-ConditionalOperator 0x564504b33930 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x564504b33758 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x564504b33678 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x564504b335a0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x564504b33588 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x564504b33568 <col:8> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x564504b33658 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x564504b335f0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x564504b335d8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x564504b335b8 <col:27> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x564504b33640 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x564504b33628 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x564504b33608 <col:46> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x564504b33738 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x564504b336d0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x564504b336b8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x564504b33698 <col:65> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x564504b33720 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x564504b33708 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x564504b336e8 <col:84> '_Bool' lvalue Var 0x564504b2e3a8 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x564504b33918 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564504b33778 <col:101> 'int' lvalue Var 0x564504b2dda8 'a' 'int'
|   |   `-ParenExpr 0x564504b338f8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x564504b338c8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x564504b33838 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564504b337f0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564504b337d8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564504b33798 <col:106> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564504b33820 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564504b33808 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564504b337b8 <col:124> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x564504b33898 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564504b33858 <col:141> 'int' lvalue Var 0x564504b2e520 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x564504b338b0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564504b33878 <col:153> 'int' lvalue Var 0x564504b2e618 'a$w_buff1' 'int'
|   |-BinaryOperator 0x564504b33e70 <line:801:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564504b33980 <col:3> 'int' lvalue Var 0x564504b2e520 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x564504b33e40 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x564504b33e10 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564504b33df8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564504b339a0 <col:15> '_Bool' lvalue Var 0x564504b2ebd0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564504b33e28 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564504b339c0 <col:31> 'int' lvalue Var 0x564504b2e520 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x564504b33dd8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564504b33da8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x564504b33bd0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x564504b33af0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564504b33a18 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x564504b33a00 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x564504b339e0 <col:45> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x564504b33ad0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564504b33a68 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564504b33a50 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564504b33a30 <col:64> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x564504b33ab8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564504b33aa0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564504b33a80 <col:83> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564504b33bb0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564504b33b48 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564504b33b30 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x564504b33b10 <col:102> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x564504b33b98 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564504b33b80 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564504b33b60 <col:121> '_Bool' lvalue Var 0x564504b2e3a8 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x564504b33d90 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564504b33bf0 <col:138> 'int' lvalue Var 0x564504b2e520 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x564504b33d70 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564504b33d40 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564504b33cb0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564504b33c68 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564504b33c50 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564504b33c10 <col:151> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564504b33c98 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564504b33c80 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564504b33c30 <col:169> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x564504b33d10 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564504b33cd0 <col:186> 'int' lvalue Var 0x564504b2e520 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x564504b33d28 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564504b33cf0 <col:198> 'int' lvalue Var 0x564504b2e520 'a$w_buff0' 'int'
|   |-BinaryOperator 0x564504b343a0 <line:802:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564504b33e90 <col:3> 'int' lvalue Var 0x564504b2e618 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x564504b34370 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x564504b34340 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564504b34328 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564504b33eb0 <col:15> '_Bool' lvalue Var 0x564504b2ebd0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564504b34358 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564504b33ed0 <col:31> 'int' lvalue Var 0x564504b2e618 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x564504b34308 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564504b342d8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x564504b34100 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x564504b34020 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564504b33f28 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x564504b33f10 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x564504b33ef0 <col:45> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x564504b34000 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564504b33f78 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564504b33f60 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564504b33f40 <col:64> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x564504b33fe8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564504b33fd0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564504b33f90 <col:83> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564504b340e0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564504b34078 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564504b34060 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x564504b34040 <col:102> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x564504b340c8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564504b340b0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564504b34090 <col:121> '_Bool' lvalue Var 0x564504b2e3a8 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x564504b342c0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564504b34120 <col:138> 'int' lvalue Var 0x564504b2e618 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x564504b342a0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564504b34270 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564504b341e0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564504b34198 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564504b34180 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564504b34140 <col:151> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564504b341c8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564504b341b0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564504b34160 <col:169> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x564504b34240 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564504b34200 <col:186> 'int' lvalue Var 0x564504b2e618 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x564504b34258 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564504b34220 <col:198> 'int' lvalue Var 0x564504b2e618 'a$w_buff1' 'int'
|   |-BinaryOperator 0x564504b34948 <line:803:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x564504b343c0 <col:3> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564504b34930 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564504b34900 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x564504b348b8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564504b348a0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564504b343e0 <col:20> '_Bool' lvalue Var 0x564504b2ebd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564504b348e8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564504b348d0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564504b34400 <col:36> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x564504b34880 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x564504b34850 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564504b34610 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564504b34530 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564504b34458 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564504b34440 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564504b34420 <col:55> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564504b34510 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564504b344a8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564504b34490 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564504b34470 <col:74> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x564504b344f8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564504b344e0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564504b344c0 <col:93> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564504b345f0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564504b34588 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564504b34570 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564504b34550 <col:112> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x564504b345d8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564504b345c0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564504b345a0 <col:131> '_Bool' lvalue Var 0x564504b2e3a8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x564504b34838 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564504b34820 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564504b34630 <col:148> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x564504b34800 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x564504b347d0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x564504b346f0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564504b346a8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564504b34690 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564504b34650 <col:166> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564504b346d8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564504b346c0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564504b34670 <col:184> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x564504b34788 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564504b34740 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564504b34710 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564504b347b8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564504b347a0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x564504b34768 <col:212> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564504b34f10 <line:804:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x564504b34968 <col:3> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564504b34ef8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564504b34ec8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x564504b34e80 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564504b34e68 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564504b34988 <col:20> '_Bool' lvalue Var 0x564504b2ebd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564504b34eb0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564504b34e98 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564504b349a8 <col:36> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x564504b34e48 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564504b34e18 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x564504b34bb8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564504b34ad8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564504b34a00 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564504b349e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564504b349c8 <col:55> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564504b34ab8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564504b34a50 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564504b34a38 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564504b34a18 <col:74> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x564504b34aa0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564504b34a88 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564504b34a68 <col:93> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564504b34b98 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564504b34b30 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564504b34b18 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564504b34af8 <col:112> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x564504b34b80 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564504b34b68 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564504b34b48 <col:131> '_Bool' lvalue Var 0x564504b2e3a8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x564504b34e00 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564504b34de8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564504b34bd8 <col:148> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x564504b34dc8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x564504b34d98 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x564504b34c98 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564504b34c50 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564504b34c38 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564504b34bf8 <col:166> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564504b34c80 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564504b34c68 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564504b34c18 <col:184> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x564504b34d68 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564504b34ce8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564504b34cb8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564504b34d80 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564504b34d40 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564504b34d10 <col:219> 'int' 0
|   |-BinaryOperator 0x564504b354d0 <line:805:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x564504b34f30 <col:3> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x564504b354b8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564504b35488 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x564504b35440 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564504b35428 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564504b34f50 <col:20> '_Bool' lvalue Var 0x564504b2ebd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564504b35470 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564504b35458 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564504b34f70 <col:36> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x564504b35408 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x564504b353d8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564504b35198 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564504b350b8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564504b34fe0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564504b34fb0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564504b34f90 <col:55> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564504b35098 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564504b35030 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564504b35018 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564504b34ff8 <col:74> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x564504b35080 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564504b35068 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564504b35048 <col:93> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564504b35178 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564504b35110 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564504b350f8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564504b350d8 <col:112> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x564504b35160 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564504b35148 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564504b35128 <col:131> '_Bool' lvalue Var 0x564504b2e3a8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x564504b353c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564504b353a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564504b351b8 <col:148> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x564504b35388 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x564504b35358 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x564504b35278 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564504b35230 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564504b35218 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564504b351d8 <col:166> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564504b35260 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564504b35248 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564504b351f8 <col:184> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x564504b35310 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564504b352c8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564504b35298 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564504b35340 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564504b35328 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x564504b352f0 <col:212> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x564504b35a98 <line:806:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x564504b354f0 <col:3> '_Bool' lvalue Var 0x564504b2e3a8 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x564504b35a80 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564504b35a50 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x564504b35a08 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564504b359f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564504b35510 <col:20> '_Bool' lvalue Var 0x564504b2ebd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564504b35a38 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564504b35a20 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564504b35530 <col:36> '_Bool' lvalue Var 0x564504b2e3a8 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x564504b359d0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564504b359a0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x564504b35740 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564504b35660 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564504b35588 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564504b35570 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564504b35550 <col:55> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564504b35640 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564504b355d8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564504b355c0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564504b355a0 <col:74> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x564504b35628 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564504b35610 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564504b355f0 <col:93> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564504b35720 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564504b356b8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564504b356a0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564504b35680 <col:112> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x564504b35708 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564504b356f0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564504b356d0 <col:131> '_Bool' lvalue Var 0x564504b2e3a8 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x564504b35988 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564504b35970 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564504b35760 <col:148> '_Bool' lvalue Var 0x564504b2e3a8 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x564504b35950 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x564504b35920 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x564504b35820 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564504b357d8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564504b357c0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564504b35780 <col:166> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564504b35808 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564504b357f0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564504b357a0 <col:184> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x564504b358f0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564504b35870 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564504b35840 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564504b35908 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564504b358c8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564504b35898 <col:219> 'int' 0
|   |-BinaryOperator 0x564504b35b10 <line:807:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564504b35ab8 <col:3> 'int' lvalue Var 0x564504b2dc88 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x564504b35af8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564504b35ad8 <col:25> 'int' lvalue Var 0x564504b2dda8 'a' 'int'
|   |-BinaryOperator 0x564504b35c40 <line:808:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x564504b35b30 <col:3> 'int' lvalue Var 0x564504b2dda8 'a' 'int'
|   | `-ConditionalOperator 0x564504b35c10 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x564504b35bc8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564504b35bb0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564504b35b50 <col:7> '_Bool' lvalue Var 0x564504b2de40 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x564504b35be0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564504b35b70 <col:25> 'int' lvalue Var 0x564504b2dec0 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x564504b35bf8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x564504b35b90 <col:37> 'int' lvalue Var 0x564504b2dda8 'a' 'int'
|   |-BinaryOperator 0x564504b35cd8 <line:809:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x564504b35c60 <col:3> '_Bool' lvalue Var 0x564504b2de40 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x564504b35cb0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564504b35c80 <col:28> 'int' 0
|   |-CallExpr 0x564504b35d30 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564504b35d18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b35cf8 <col:3> 'void ()' Function 0x564504ad4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564504b35d88 <line:811:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564504b35d70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b35d50 <col:3> 'void ()' Function 0x564504ad4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564504b36088 <line:812:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564504b35da8 <col:3> 'int' lvalue Var 0x564504b2dda8 'a' 'int'
|   | `-ConditionalOperator 0x564504b36058 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564504b35e68 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564504b35e20 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564504b35e08 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564504b35dc8 <col:7> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564504b35e50 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564504b35e38 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564504b35de8 <col:25> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x564504b36040 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564504b35e88 <col:42> 'int' lvalue Var 0x564504b2e520 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x564504b36020 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564504b35ff0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564504b35f48 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564504b35f00 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564504b35ee8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564504b35ea8 <col:55> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564504b35f30 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564504b35f18 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564504b35ec8 <col:73> '_Bool' lvalue Var 0x564504b2e3a8 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x564504b35fa8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564504b35f68 <col:90> 'int' lvalue Var 0x564504b2e618 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564504b35fc0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564504b35f88 <col:102> 'int' lvalue Var 0x564504b2dda8 'a' 'int'
|   |-BinaryOperator 0x564504b36290 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564504b360a8 <col:3> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564504b36278 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564504b36248 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564504b36168 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564504b36120 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564504b36108 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564504b360c8 <col:20> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564504b36150 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564504b36138 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564504b360e8 <col:38> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x564504b36200 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564504b361b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564504b36188 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564504b36230 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564504b36218 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564504b361e0 <col:66> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564504b36578 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564504b362b0 <col:3> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564504b36560 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564504b36530 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564504b36450 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564504b36370 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564504b36328 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564504b36310 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564504b362d0 <col:20> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564504b36358 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564504b36340 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564504b362f0 <col:38> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x564504b36430 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564504b363e8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564504b363d0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564504b36390 <col:56> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564504b36418 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564504b36400 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564504b363b0 <col:74> '_Bool' lvalue Var 0x564504b2e3a8 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x564504b364e8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564504b364a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564504b36470 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564504b36518 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564504b36500 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564504b364c8 <col:102> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564504b36780 <line:815:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564504b36598 <col:3> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x564504b36768 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564504b36738 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564504b36658 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564504b36610 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564504b365f8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564504b365b8 <col:20> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564504b36640 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564504b36628 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564504b365d8 <col:38> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x564504b366f0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564504b366a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564504b36678 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564504b36720 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564504b36708 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564504b366d0 <col:66> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x564504b36a68 <line:816:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564504b367a0 <col:3> '_Bool' lvalue Var 0x564504b2e3a8 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x564504b36a50 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564504b36a20 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564504b36940 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564504b36860 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564504b36818 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564504b36800 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564504b367c0 <col:20> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564504b36848 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564504b36830 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564504b367e0 <col:38> '_Bool' lvalue Var 0x564504b2e150 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x564504b36920 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564504b368d8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564504b368c0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564504b36880 <col:56> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564504b36908 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564504b368f0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564504b368a0 <col:74> '_Bool' lvalue Var 0x564504b2e3a8 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x564504b369d8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564504b36990 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564504b36960 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564504b36a08 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564504b369f0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564504b369b8 <col:102> '_Bool' lvalue Var 0x564504b2e3a8 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x564504b36ac0 <line:817:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564504b36aa8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b36a88 <col:3> 'void ()' Function 0x564504ad4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564504b36b18 <line:818:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564504b36b00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b36ae0 <col:3> 'void ()' Function 0x564504ad4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564504b36bd0 <line:819:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564504b36b38 <col:3> 'int' lvalue Var 0x564504b2d6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564504b36bb0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564504b36b98 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564504b36b58 <col:22> 'int' lvalue Var 0x564504b2d6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564504b36b78 <col:41> 'int' 1
|   |-CallExpr 0x564504b36c28 <line:820:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564504b36c10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564504b36bf0 <col:3> 'void ()' Function 0x564504ad4410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564504b36ca0 <line:821:3, col:36>
|     `-CallExpr 0x564504b36c80 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564504b36c68 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564504b36c48 <col:10> 'void *(void)' Function 0x564504ad3e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564504b36de8 prev 0x564504b2d430 <line:823:1, line:825:1> line:823:6 fence 'void ()'
| `-CompoundStmt 0x564504b36e88 <line:824:1, line:825:1>
|-FunctionDecl 0x564504b36eb8 prev 0x564504b2d4f0 <line:826:1, line:828:1> line:826:6 isync 'void ()'
| `-CompoundStmt 0x564504b36f58 <line:827:1, line:828:1>
|-FunctionDecl 0x564504b37000 prev 0x564504b2d5b0 <line:829:1, line:831:1> line:829:6 lwfence 'void ()'
| `-CompoundStmt 0x564504b370a0 <line:830:1, line:831:1>
`-FunctionDecl 0x564504b37108 <line:832:1, line:858:1> line:832:5 main 'int ()'
  `-CompoundStmt 0x564504b391c8 <line:833:1, line:858:1>
    |-DeclStmt 0x564504b37220 <line:834:3, col:17>
    | `-VarDecl 0x564504b371b8 <col:3, col:13> col:13 used t139 'pthread_t':'unsigned long'
    |-CallExpr 0x564504b37428 <line:835:3, col:53> 'int'
    | |-ImplicitCastExpr 0x564504b37410 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564504b37238 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564504b148f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564504b37278 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564504b37258 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564504b371b8 't139' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564504b37468 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564504b372f0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x564504b372c8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564504b37290 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x564504b37480 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564504b37310 <col:38> 'void *(void *)' Function 0x564504b2ece8 'P0' 'void *(void *)'
    | `-ParenExpr 0x564504b37390 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x564504b37368 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564504b37330 <col:51> 'int' 0
    |-DeclStmt 0x564504b37510 <line:836:3, col:17>
    | `-VarDecl 0x564504b374a8 <col:3, col:13> col:13 used t140 'pthread_t':'unsigned long'
    |-CallExpr 0x564504b376b8 <line:837:3, col:53> 'int'
    | |-ImplicitCastExpr 0x564504b376a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564504b37528 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564504b148f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564504b37568 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564504b37548 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564504b374a8 't140' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564504b376f8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564504b375e0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x564504b375b8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564504b37580 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x564504b37710 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564504b37600 <col:38> 'void *(void *)' Function 0x564504b30720 'P1' 'void *(void *)'
    | `-ParenExpr 0x564504b37680 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x564504b37658 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564504b37620 <col:51> 'int' 0
    |-DeclStmt 0x564504b377a0 <line:838:3, col:17>
    | `-VarDecl 0x564504b37738 <col:3, col:13> col:13 used t141 'pthread_t':'unsigned long'
    |-CallExpr 0x564504b37948 <line:839:3, col:53> 'int'
    | |-ImplicitCastExpr 0x564504b37930 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564504b377b8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564504b148f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564504b377f8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564504b377d8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564504b37738 't141' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564504b37988 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564504b37870 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x564504b37848 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564504b37810 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x564504b379a0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564504b37890 <col:38> 'void *(void *)' Function 0x564504b31aa8 'P2' 'void *(void *)'
    | `-ParenExpr 0x564504b37910 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x564504b378e8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564504b378b0 <col:51> 'int' 0
    |-DeclStmt 0x564504b37a30 <line:840:3, col:17>
    | `-VarDecl 0x564504b379c8 <col:3, col:13> col:13 used t142 'pthread_t':'unsigned long'
    |-CallExpr 0x564504b37bd8 <line:841:3, col:53> 'int'
    | |-ImplicitCastExpr 0x564504b37bc0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564504b37a48 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564504b148f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564504b37a88 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564504b37a68 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564504b379c8 't142' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564504b37c18 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564504b37b00 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x564504b37ad8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564504b37aa0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x564504b37c30 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564504b37b20 <col:38> 'void *(void *)' Function 0x564504b32fc0 'P3' 'void *(void *)'
    | `-ParenExpr 0x564504b37ba0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x564504b37b78 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564504b37b40 <col:51> 'int' 0
    |-CallExpr 0x564504b37c80 <line:842:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564504b37c68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564504b37c48 <col:3> 'void ()' Function 0x564504ad4350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564504b37d50 <line:843:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x564504b37ca0 <col:3> '_Bool' lvalue Var 0x564504b2e708 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x564504b37d38 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x564504b37d18 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x564504b37d00 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x564504b37cc0 <col:21> 'int' lvalue Var 0x564504b2d6e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x564504b37ce0 <col:41> 'int' 4
    |-CallExpr 0x564504b37da8 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564504b37d90 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564504b37d70 <col:3> 'void ()' Function 0x564504ad4410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564504b37e20 <line:845:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564504b37e08 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564504b37dc8 <col:3> 'void (int)' Function 0x564504ad3ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x564504b37e60 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564504b37e48 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564504b37de8 <col:21> '_Bool' lvalue Var 0x564504b2e708 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x564504b37eb0 <line:846:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564504b37e98 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564504b37e78 <col:3> 'void ()' Function 0x564504ad4350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564504b381b8 <line:847:3, col:103> 'int' '='
    | |-DeclRefExpr 0x564504b37ed0 <col:3> 'int' lvalue Var 0x564504b2dda8 'a' 'int'
    | `-ConditionalOperator 0x564504b38188 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x564504b37f90 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x564504b37f48 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x564504b37f30 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x564504b37ef0 <col:7> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x564504b37f78 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x564504b37f60 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x564504b37f10 <col:25> '_Bool' lvalue Var 0x564504b2df70 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x564504b38170 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564504b37fb0 <col:42> 'int' lvalue Var 0x564504b2e520 'a$w_buff0' 'int'
    |   `-ParenExpr 0x564504b38150 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x564504b38120 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x564504b38090 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x564504b38048 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x564504b38030 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x564504b37fd0 <col:55> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x564504b38078 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x564504b38060 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x564504b38010 <col:73> '_Bool' lvalue Var 0x564504b2e1c8 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x564504b380f0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x564504b380b0 <col:90> 'int' lvalue Var 0x564504b2e618 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x564504b38108 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x564504b380d0 <col:102> 'int' lvalue Var 0x564504b2dda8 'a' 'int'
    |-BinaryOperator 0x564504b383c0 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x564504b381d8 <col:3> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x564504b383a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564504b38378 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564504b38298 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564504b38250 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x564504b38238 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x564504b381f8 <col:20> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564504b38280 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564504b38268 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x564504b38218 <col:38> '_Bool' lvalue Var 0x564504b2df70 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564504b38330 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564504b382e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564504b382b8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564504b38360 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564504b38348 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564504b38310 <col:66> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x564504b386a8 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x564504b383e0 <col:3> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x564504b38690 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564504b38660 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564504b38580 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564504b384a0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564504b38458 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564504b38440 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x564504b38400 <col:20> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564504b38488 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564504b38470 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x564504b38420 <col:38> '_Bool' lvalue Var 0x564504b2df70 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564504b38560 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x564504b38518 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x564504b38500 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x564504b384c0 <col:56> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564504b38548 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x564504b38530 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x564504b384e0 <col:74> '_Bool' lvalue Var 0x564504b2e1c8 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564504b38618 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564504b385d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564504b385a0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564504b38648 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564504b38630 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564504b385f8 <col:102> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x564504b388b0 <line:850:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x564504b386c8 <col:3> '_Bool' lvalue Var 0x564504b2df70 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564504b38898 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564504b38868 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564504b38788 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564504b38740 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x564504b38728 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x564504b386e8 <col:20> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564504b38770 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564504b38758 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x564504b38708 <col:38> '_Bool' lvalue Var 0x564504b2df70 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564504b38820 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564504b387d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564504b387a8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564504b38850 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564504b38838 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564504b38800 <col:66> '_Bool' lvalue Var 0x564504b2df70 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x564504b38b98 <line:851:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x564504b388d0 <col:3> '_Bool' lvalue Var 0x564504b2e1c8 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564504b38b80 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564504b38b50 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564504b38a70 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564504b38990 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564504b38948 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564504b38930 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x564504b388f0 <col:20> '_Bool' lvalue Var 0x564504b2e598 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564504b38978 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564504b38960 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x564504b38910 <col:38> '_Bool' lvalue Var 0x564504b2df70 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564504b38a50 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x564504b38a08 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x564504b389f0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x564504b389b0 <col:56> '_Bool' lvalue Var 0x564504b2e690 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564504b38a38 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x564504b38a20 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x564504b389d0 <col:74> '_Bool' lvalue Var 0x564504b2e1c8 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564504b38b08 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564504b38ac0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564504b38a90 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564504b38b38 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564504b38b20 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564504b38ae8 <col:102> '_Bool' lvalue Var 0x564504b2e1c8 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x564504b38bf0 <line:852:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564504b38bd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564504b38bb8 <col:3> 'void ()' Function 0x564504ad4410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564504b38c48 <line:853:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564504b38c30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564504b38c10 <col:3> 'void ()' Function 0x564504ad4350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564504b39070 <line:854:3, col:169> '_Bool' '='
    | |-DeclRefExpr 0x564504b38c68 <col:3> '_Bool' lvalue Var 0x564504b2e780 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x564504b39058 <col:21, col:169> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x564504b39040 <col:21, col:169> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x564504b39020 <col:22, col:169> 'int'
    |       `-BinaryOperator 0x564504b38fd8 <col:23, col:168> 'int' '&&'
    |         |-BinaryOperator 0x564504b38f40 <col:23, col:140> 'int' '&&'
    |         | |-BinaryOperator 0x564504b38ea8 <col:23, col:112> 'int' '&&'
    |         | | |-BinaryOperator 0x564504b38e10 <col:23, col:84> 'int' '&&'
    |         | | | |-BinaryOperator 0x564504b38d78 <col:23, col:56> 'int' '&&'
    |         | | | | |-BinaryOperator 0x564504b38ce0 <col:23, col:28> 'int' '=='
    |         | | | | | |-ImplicitCastExpr 0x564504b38cc8 <col:23> 'int' <LValueToRValue>
    |         | | | | | | `-DeclRefExpr 0x564504b38c88 <col:23> 'int' lvalue Var 0x564504b2e880 'x' 'int'
    |         | | | | | `-IntegerLiteral 0x564504b38ca8 <col:28> 'int' 2
    |         | | | | `-BinaryOperator 0x564504b38d58 <col:33, col:56> 'int' '=='
    |         | | | |   |-ImplicitCastExpr 0x564504b38d40 <col:33> 'int' <LValueToRValue>
    |         | | | |   | `-DeclRefExpr 0x564504b38d00 <col:33> 'int' lvalue Var 0x564504b2d808 '__unbuffered_p1_EAX' 'int'
    |         | | | |   `-IntegerLiteral 0x564504b38d20 <col:56> 'int' 0
    |         | | | `-BinaryOperator 0x564504b38df0 <col:61, col:84> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x564504b38dd8 <col:61> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x564504b38d98 <col:61> 'int' lvalue Var 0x564504b2d928 '__unbuffered_p2_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x564504b38db8 <col:84> 'int' 1
    |         | | `-BinaryOperator 0x564504b38e88 <col:89, col:112> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x564504b38e70 <col:89> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x564504b38e30 <col:89> 'int' lvalue Var 0x564504b2da48 '__unbuffered_p2_EBX' 'int'
    |         | |   `-IntegerLiteral 0x564504b38e50 <col:112> 'int' 0
    |         | `-BinaryOperator 0x564504b38f20 <col:117, col:140> 'int' '=='
    |         |   |-ImplicitCastExpr 0x564504b38f08 <col:117> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x564504b38ec8 <col:117> 'int' lvalue Var 0x564504b2db68 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x564504b38ee8 <col:140> 'int' 1
    |         `-BinaryOperator 0x564504b38fb8 <col:145, col:168> 'int' '=='
    |           |-ImplicitCastExpr 0x564504b38fa0 <col:145> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x564504b38f60 <col:145> 'int' lvalue Var 0x564504b2dc88 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x564504b38f80 <col:168> 'int' 0
    |-CallExpr 0x564504b390c8 <line:855:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564504b390b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564504b39090 <col:3> 'void ()' Function 0x564504ad4410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564504b39140 <line:856:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564504b39128 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564504b390e8 <col:3> 'void (int)' Function 0x564504ad40d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x564504b39180 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564504b39168 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564504b39108 <col:21> '_Bool' lvalue Var 0x564504b2e780 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x564504b391b8 <line:857:3, col:10>
      `-IntegerLiteral 0x564504b39198 <col:10> 'int' 0
