TranslationUnitDecl 0x5577df7c9f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5577df7ca848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5577df7ca520 '__int128'
|-TypedefDecl 0x5577df7ca8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5577df7ca540 'unsigned __int128'
|-TypedefDecl 0x5577df7cabc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5577df7ca990 'struct __NSConstantString_tag'
|   `-Record 0x5577df7ca910 '__NSConstantString_tag'
|-TypedefDecl 0x5577df7cac68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5577df7cac20 'char *'
|   `-BuiltinType 0x5577df7ca020 'char'
|-TypedefDecl 0x5577df809b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5577df7caf00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5577df7cad40 'struct __va_list_tag'
|     `-Record 0x5577df7cacc0 '__va_list_tag'
|-FunctionDecl 0x5577df809ca0 <pthread-wmm/mix032_pso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5577df809bd0 <col:31> col:34 'int'
|-FunctionDecl 0x5577df809e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5577df809f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5577df80a0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5577df80a048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5577df80a308 <col:40, col:99>
|   |-IfStmt 0x5577df80a2d8 <col:42, col:88>
|   | |-UnaryOperator 0x5577df80a1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5577df80a1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5577df80a180 <col:47> 'int' lvalue ParmVar 0x5577df80a048 'expression' 'int'
|   | `-CompoundStmt 0x5577df80a2c0 <col:59, col:88>
|   |   `-LabelStmt 0x5577df80a2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5577df80a238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5577df80a220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5577df80a1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x5577df809f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5577df80a2f0 <col:89>
|   `-ReturnStmt 0x5577df80a2f8 <col:91>
|-FunctionDecl 0x5577df80a350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5577df80a410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5577df80a790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5577df80a4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5577df80a548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5577df80a5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5577df80a648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5577df80a850 <line:10:22>
|-FunctionDecl 0x5577df8308a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5577df80a8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5577df80a940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5577df80a9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5577df80aa40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5577df830960 <line:13:22>
|-FunctionDecl 0x5577df830c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5577df8309d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5577df830a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5577df830ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5577df830cc8 <line:15:22>
|-TypedefDecl 0x5577df830d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5577df7ca0e0 'unsigned char'
|-TypedefDecl 0x5577df830da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5577df7ca100 'unsigned short'
|-TypedefDecl 0x5577df830e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5577df7ca120 'unsigned int'
|-TypedefDecl 0x5577df830e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5577df7ca140 'unsigned long'
|-TypedefDecl 0x5577df830ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5577df7ca040 'signed char'
|-TypedefDecl 0x5577df830f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5577df7ca0e0 'unsigned char'
|-TypedefDecl 0x5577df830fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5577df7ca060 'short'
|-TypedefDecl 0x5577df831048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5577df7ca100 'unsigned short'
|-TypedefDecl 0x5577df8310b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5577df7ca080 'int'
|-TypedefDecl 0x5577df831128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5577df7ca120 'unsigned int'
|-TypedefDecl 0x5577df831198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5577df7ca0a0 'long'
|-TypedefDecl 0x5577df831208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5577df7ca140 'unsigned long'
|-TypedefDecl 0x5577df831278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5577df7ca0a0 'long'
|-TypedefDecl 0x5577df8312e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5577df7ca140 'unsigned long'
|-TypedefDecl 0x5577df831358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5577df7ca140 'unsigned long'
|-TypedefDecl 0x5577df8313c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5577df7ca120 'unsigned int'
|-TypedefDecl 0x5577df831438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5577df7ca120 'unsigned int'
|-TypedefDecl 0x5577df8314a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5577df7ca140 'unsigned long'
|-TypedefDecl 0x5577df831518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5577df7ca140 'unsigned long'
|-TypedefDecl 0x5577df831588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5577df7ca120 'unsigned int'
|-TypedefDecl 0x5577df8315f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5577df7ca140 'unsigned long'
|-TypedefDecl 0x5577df831668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5577df7ca0a0 'long'
|-TypedefDecl 0x5577df8316d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5577df7ca0a0 'long'
|-TypedefDecl 0x5577df831748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5577df7ca080 'int'
|-RecordDecl 0x5577df8317a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5577df831918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5577df8319d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5577df831970 'struct __fsid_t' sugar
|   `-RecordType 0x5577df831820 '__fsid_t'
|     `-Record 0x5577df8317a0 ''
|-TypedefDecl 0x5577df831a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5577df7ca0a0 'long'
|-TypedefDecl 0x5577df831ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5577df7ca140 'unsigned long'
|-TypedefDecl 0x5577df831b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5577df7ca140 'unsigned long'
|-TypedefDecl 0x5577df831ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5577df7ca120 'unsigned int'
|-TypedefDecl 0x5577df831c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5577df7ca0a0 'long'
|-TypedefDecl 0x5577df831c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5577df7ca120 'unsigned int'
|-TypedefDecl 0x5577df831cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5577df7ca0a0 'long'
|-TypedefDecl 0x5577df831d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5577df7ca080 'int'
|-TypedefDecl 0x5577df831dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5577df7ca080 'int'
|-TypedefDecl 0x5577df831e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5577df7ca080 'int'
|-TypedefDecl 0x5577df831eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5577df7ca7a0 'void *'
|   `-BuiltinType 0x5577df7c9fe0 'void'
|-TypedefDecl 0x5577df831f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5577df7ca0a0 'long'
|-TypedefDecl 0x5577df831f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5577df7ca0a0 'long'
|-TypedefDecl 0x5577df832008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5577df7ca0a0 'long'
|-TypedefDecl 0x5577df832078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5577df7ca140 'unsigned long'
|-TypedefDecl 0x5577df8320e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5577df7ca140 'unsigned long'
|-TypedefDecl 0x5577df832158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5577df7ca140 'unsigned long'
|-TypedefDecl 0x5577df8321c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5577df7ca140 'unsigned long'
|-TypedefDecl 0x5577df832238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5577df7ca0a0 'long'
|-TypedefDecl 0x5577df8322a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5577df7ca0a0 'long'
|-TypedefDecl 0x5577df832318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5577df7ca0a0 'long'
|-TypedefDecl 0x5577df832388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5577df7ca140 'unsigned long'
|-TypedefDecl 0x5577df832418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5577df8323e0 '__off64_t' sugar
|   |-Typedef 0x5577df8316d8 '__off64_t'
|   `-BuiltinType 0x5577df7ca0a0 'long'
|-TypedefDecl 0x5577df832510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5577df8324d0 '__quad_t *'
|   `-TypedefType 0x5577df832470 '__quad_t' sugar
|     |-Typedef 0x5577df831278 '__quad_t'
|     `-BuiltinType 0x5577df7ca0a0 'long'
|-TypedefDecl 0x5577df832580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5577df7cac20 'char *'
|   `-BuiltinType 0x5577df7ca020 'char'
|-TypedefDecl 0x5577df8325f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5577df7ca0a0 'long'
|-TypedefDecl 0x5577df832660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5577df7ca120 'unsigned int'
|-FunctionDecl 0x5577df8327a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5577df8326d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5577df832ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5577df832ad8 <line:72:3, col:34>
|     `-CallExpr 0x5577df832a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5577df832a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5577df832a10 <col:10> '<builtin fn type>' Function 0x5577df832880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5577df832ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5577df832a30 <col:29> 'unsigned int' lvalue ParmVar 0x5577df8326d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5577df832880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5577df832920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5577df832990 <col:10> Implicit
| `-ConstAttr 0x5577df8329e8 <col:10> Implicit
|-FunctionDecl 0x5577df832c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5577df832b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5577df832f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5577df832f48 <line:77:3, col:34>
|     `-CallExpr 0x5577df832f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5577df832ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5577df832e78 <col:10> '<builtin fn type>' Function 0x5577df832ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5577df832f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5577df832e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5577df832b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5577df832ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5577df832d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5577df832df8 <col:10> Implicit
| `-ConstAttr 0x5577df832e50 <col:10> Implicit
|-TypedefDecl 0x5577df832f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5577df7ca140 'unsigned long'
|-TypedefDecl 0x5577df833018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5577df832fe0 '__time_t' sugar
|   |-Typedef 0x5577df831c18 '__time_t'
|   `-BuiltinType 0x5577df7ca0a0 'long'
|-RecordDecl 0x5577df833070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5577df833128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5577df8331b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5577df833248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5577df833210 '__pid_t' sugar
|   |-Typedef 0x5577df831748 '__pid_t'
|   `-BuiltinType 0x5577df7ca080 'int'
|-RecordDecl 0x5577df8332a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5577df833360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5577df8333b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5577df833470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5577df8334d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5577df7ca140 'unsigned long'
|-RecordDecl 0x5577df833530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5577df8337c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5577df8358b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5577df833810 'struct cpu_set_t' sugar
|   `-RecordType 0x5577df8335b0 'cpu_set_t'
|     `-Record 0x5577df833530 ''
|-FunctionDecl 0x5577df835b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5577df835958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5577df835a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5577df835c38 <line:107:19>
|-FunctionDecl 0x5577df835e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5577df835ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5577df835eb8 <col:69>
|-FunctionDecl 0x5577df836030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5577df835f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5577df8360d8 <col:64>
|-FunctionDecl 0x5577df836398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5577df836140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5577df836278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5577df836448 <line:113:22>
|-FunctionDecl 0x5577df8366c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5577df8364b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5577df8365a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5577df836778 <col:88>
|-FunctionDecl 0x5577df836a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5577df8367e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5577df8368c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5577df836950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5577df836b50 <col:62>
|-FunctionDecl 0x5577df836cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5577df836bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5577df836d70 <col:63>
|-FunctionDecl 0x5577df836e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5577df836f38 <col:47>
|-FunctionDecl 0x5577df837040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5577df836fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5577df8370e8 <col:69>
|-FunctionDecl 0x5577df8371f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5577df837158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5577df837298 <col:69>
|-FunctionDecl 0x5577df837558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5577df837300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5577df837438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5577df837608 <col:88>
|-TypedefDecl 0x5577df837698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5577df837660 '__clock_t' sugar
|   |-Typedef 0x5577df831a58 '__clock_t'
|   `-BuiltinType 0x5577df7ca0a0 'long'
|-TypedefDecl 0x5577df837728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5577df8376f0 '__clockid_t' sugar
|   |-Typedef 0x5577df831e48 '__clockid_t'
|   `-BuiltinType 0x5577df7ca080 'int'
|-TypedefDecl 0x5577df8377b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5577df837780 '__timer_t' sugar
|   |-Typedef 0x5577df831eb8 '__timer_t'
|   `-PointerType 0x5577df7ca7a0 'void *'
|     `-BuiltinType 0x5577df7c9fe0 'void'
|-RecordDecl 0x5577df837810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5577df8378e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5577df837950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5577df8379b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5577df837a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5577df837a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5577df837af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5577df837b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5577df837bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5577df837c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5577df837c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5577df837cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5577df837d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5577df837e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5577df837e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5577df837f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5577df838100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5577df8381a0 <col:45>
|-FunctionDecl 0x5577df838380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5577df838270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5577df838428 <col:54>
|-FunctionDecl 0x5577df838628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5577df838490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5577df838508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5577df8386d8 <line:157:22>
| `-ConstAttr 0x5577df838730 <col:63>
|-FunctionDecl 0x5577df839560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5577df838828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5577df839608 <col:56>
|-FunctionDecl 0x5577df8399b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5577df839678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5577df8396f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5577df839770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5577df839868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5577df839a70 <col:54>
|-RecordDecl 0x5577df839ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5577df839b78 parent 0x5577df7c9f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5577df839dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5577df839e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5577df839ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5577df839f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5577df83a038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5577df83a158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5577df83a100 'struct __locale_struct *'
|   `-ElaboratedType 0x5577df83a090 'struct __locale_struct' sugar
|     `-RecordType 0x5577df839b50 'struct __locale_struct'
|       `-Record 0x5577df839ac8 '__locale_struct'
|-TypedefDecl 0x5577df83a208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5577df83a1d0 '__locale_t' sugar
|   |-Typedef 0x5577df83a158 '__locale_t'
|   `-PointerType 0x5577df83a100 'struct __locale_struct *'
|     `-ElaboratedType 0x5577df83a090 'struct __locale_struct' sugar
|       `-RecordType 0x5577df839b50 'struct __locale_struct'
|         `-Record 0x5577df839ac8 '__locale_struct'
|-FunctionDecl 0x5577df83a610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5577df83a278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5577df83a2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5577df83a370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5577df83a400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5577df83a478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5577df83a6d8 <col:40>
|-FunctionDecl 0x5577df83a8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5577df83a7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5577df83a970 <col:66>
|-FunctionDecl 0x5577df83aa80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5577df83a9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5577df83ab28 <col:69>
|-FunctionDecl 0x5577df83ad58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5577df83ab90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5577df83ac20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5577df83ae08 <col:52>
|-FunctionDecl 0x5577df83afb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5577df83ae70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5577df83af00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5577df83b060 <col:55>
|-FunctionDecl 0x5577df83b1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5577df83b0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5577df83b2a0 <col:62>
|-FunctionDecl 0x5577df83b418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5577df83b308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5577df83b4c0 <col:60>
|-FunctionDecl 0x5577df83b718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5577df83b578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5577df83b5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5577df83b7c8 <col:44>
|-FunctionDecl 0x5577df83b9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5577df83b830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5577df83b8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5577df83ba88 <col:49>
|-VarDecl 0x5577df83bb88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5577df83bc08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5577df83bc88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5577df83bd50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5577df83be80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5577df83bf20 <col:42>
|-VarDecl 0x5577df83bf90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5577df83c010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5577df83c198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5577df83c088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5577df83c240 <col:57>
|-FunctionDecl 0x5577df83c350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5577df83c2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5577df83c3f8 <col:56>
|-FunctionDecl 0x5577df83d540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5577df83c478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5577df83d5e8 <col:59>
|-FunctionDecl 0x5577df83d6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5577df83d658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5577df83d798 <col:48>
| `-ConstAttr 0x5577df83d7f0 <col:89>
|-FunctionDecl 0x5577df83da58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5577df83d8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5577df83d938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5577df83dcb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5577df83db48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5577df83dbd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5577df83dd68 <col:88>
|-FunctionDecl 0x5577df83df00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5577df83ddd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5577df83de60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5577df83dfb0 <col:88>
|-FunctionDecl 0x5577df83e1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5577df83e018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5577df83e0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5577df83e278 <line:208:22>
|-FunctionDecl 0x5577df83e5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5577df83e2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5577df83e360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5577df83e3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5577df83e480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5577df83e8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5577df83e6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5577df83e7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5577df83e998 <col:85>
|-FunctionDecl 0x5577df83ed88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5577df83ea00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5577df83eb38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5577df83ec40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5577df83ee40 <col:52>
|-FunctionDecl 0x5577df83efb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5577df83eea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5577df83f060 <col:61>
|-FunctionDecl 0x5577df83f560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5577df83f0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5577df83f148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5577df83f278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5577df83f368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5577df83f620 <col:62>
|-FunctionDecl 0x5577df83f838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5577df83f688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5577df83f718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5577df83f8e8 <line:221:22>
|-FunctionDecl 0x5577df83f9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5577df83f950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5577df83fa90 <col:65>
|-TypedefDecl 0x5577df83fb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5577df7ca140 'unsigned long'
|-RecordDecl 0x5577df83fb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5577df83fca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5577df83fd08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5577df83fdb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5577df83fd60 'union pthread_attr_t' sugar
|   `-RecordType 0x5577df83fbe0 'union pthread_attr_t'
|     `-Record 0x5577df83fb58 'pthread_attr_t'
|-RecordDecl 0x5577df83fe10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5577df83ff88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5577df840000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5577df8400b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5577df840050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5577df83fe90 'struct __pthread_internal_list'
|     `-Record 0x5577df83fe10 '__pthread_internal_list'
|-RecordDecl 0x5577df840120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5577df8401c8 parent 0x5577df7c9f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5577df8402a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5577df840308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5577df840370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5577df8403d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5577df840440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5577df8404a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5577df844580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5577df844630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5577df844720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5577df844788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5577df844910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5577df8448b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5577df8401a0 'pthread_mutex_t'
|     `-Record 0x5577df840120 ''
|-RecordDecl 0x5577df844980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5577df844ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5577df844b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5577df844be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5577df844b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5577df844a00 'pthread_mutexattr_t'
|     `-Record 0x5577df844980 ''
|-RecordDecl 0x5577df844c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5577df844cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5577df844dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5577df844e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5577df844e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5577df844ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5577df844f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5577df844fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5577df845030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5577df845098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5577df845150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix032_pso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix032_pso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5577df845240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5577df8452a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5577df8453e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5577df845380 'union pthread_cond_t' sugar
|   `-RecordType 0x5577df844cd0 'pthread_cond_t'
|     `-Record 0x5577df844c50 ''
|-RecordDecl 0x5577df845450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5577df845590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5577df8455f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5577df8456b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5577df845650 'union pthread_condattr_t' sugar
|   `-RecordType 0x5577df8454d0 'pthread_condattr_t'
|     `-Record 0x5577df845450 ''
|-TypedefDecl 0x5577df845738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5577df7ca120 'unsigned int'
|-TypedefDecl 0x5577df8457a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5577df7ca080 'int'
|-RecordDecl 0x5577df845800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5577df8458a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5577df845970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5577df8459d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5577df845a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5577df845aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5577df845b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5577df845b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5577df845be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5577df845c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5577df845cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5577df845d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5577df845d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5577df845e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix032_pso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix032_pso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5577df845ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5577df845f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5577df846090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5577df846030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5577df845880 'pthread_rwlock_t'
|     `-Record 0x5577df845800 ''
|-RecordDecl 0x5577df846100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5577df846240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5577df8462a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5577df846360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5577df846300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5577df846180 'pthread_rwlockattr_t'
|     `-Record 0x5577df846100 ''
|-TypedefDecl 0x5577df8463e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5577df7ca084 'volatile int' volatile
|   `-BuiltinType 0x5577df7ca080 'int'
|-RecordDecl 0x5577df846440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5577df8485b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5577df848618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5577df8486d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5577df848670 'union pthread_barrier_t' sugar
|   `-RecordType 0x5577df8464c0 'pthread_barrier_t'
|     `-Record 0x5577df846440 ''
|-RecordDecl 0x5577df848740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5577df848840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5577df8488a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5577df848960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5577df848900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5577df8487c0 'pthread_barrierattr_t'
|     `-Record 0x5577df848740 ''
|-TypedefDecl 0x5577df848a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5577df848a10 'long [8]' 8 
|   `-BuiltinType 0x5577df7ca0a0 'long'
|-EnumDecl 0x5577df848ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5577df848b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5577df848be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5577df848c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5577df848d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5577df848d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5577df848da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5577df848df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5577df848e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5577df848e68 <col:26> 'int'
| |   `-DeclRefExpr 0x5577df848e48 <col:26> 'int' EnumConstant 0x5577df848d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5577df848f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5577df848ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x5577df848ed0 <col:29> 'int' EnumConstant 0x5577df848d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5577df848f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5577df848f78 <col:30> 'int'
| |   `-DeclRefExpr 0x5577df848f58 <col:30> 'int' EnumConstant 0x5577df848da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5577df849018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5577df849000 <col:27> 'int'
|     `-DeclRefExpr 0x5577df848fe0 <col:27> 'int' EnumConstant 0x5577df848e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5577df849068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5577df849138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5577df8491c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5577df8491a8 <col:30> 'int'
| |   `-DeclRefExpr 0x5577df849188 <col:30> 'int' EnumConstant 0x5577df849138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5577df849210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5577df849298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5577df849280 <col:29> 'int'
|     `-DeclRefExpr 0x5577df849260 <col:29> 'int' EnumConstant 0x5577df849210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5577df8492e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5577df8493b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5577df849408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5577df849458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5577df8494a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5577df8495c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5577df849610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5577df849660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5577df8496e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5577df8496d0 <col:31> 'int'
|     `-DeclRefExpr 0x5577df8496b0 <col:31> 'int' EnumConstant 0x5577df8495c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5577df849738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5577df849808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5577df849858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5577df8498a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5577df849978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5577df8499c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5577df849a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5577df849ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5577df849b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5577df849b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5577df849dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5577df849e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5577df849e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5577df849fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5577df84a008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5577df84a0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5577df84a128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5577df84a178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5577df84a248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5577df84a298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5577df84a8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5577df84a390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5577df84a4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5577df84a6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5577df84a760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5577df84a9b8 <col:47>
| |-NonNullAttr 0x5577df84aa10 <col:77, col:94> 1 3
| `-CallbackAttr 0x5577df84aa48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5577df84ab70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5577df84aaa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5577df84adc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5577df84ac28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5577df84aca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5577df84af98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5577df84ae88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5577df84b040 <col:60>
|-FunctionDecl 0x5577df84b190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5577df84b230 <col:54>
| `-ConstAttr 0x5577df84b288 <col:95>
|-FunctionDecl 0x5577df84b458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5577df84b2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5577df84b338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5577df84b508 <line:394:19>
| `-ConstAttr 0x5577df84b560 <col:60>
|-FunctionDecl 0x5577df84bf68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5577df84be30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5577df84c010 <col:71>
| `-NonNullAttr 0x5577df84c068 <col:112, col:126> 1
|-FunctionDecl 0x5577df84c170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5577df84c0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5577df84c218 <line:397:22>
| `-NonNullAttr 0x5577df84c270 <col:63, col:77> 1
|-FunctionDecl 0x5577df84c498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5577df84c2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5577df84c338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5577df84c548 <line:400:22>
| `-NonNullAttr 0x5577df84c5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5577df84c7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5577df84c5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5577df84c668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5577df84c858 <line:403:22>
| `-NonNullAttr 0x5577df84c8b0 <col:63, col:77> 1
|-FunctionDecl 0x5577df84cb08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5577df84c8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5577df84c9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5577df84cbb8 <line:406:22>
| `-NonNullAttr 0x5577df84cc10 <col:63, col:80> 1 2
|-FunctionDecl 0x5577df84de48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5577df84cc58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5577df84ccd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5577df84def8 <line:409:22>
| `-NonNullAttr 0x5577df84df50 <col:63, col:77> 1
|-FunctionDecl 0x5577df84e188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5577df84df98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5577df84e028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5577df84e238 <line:412:22>
| `-NonNullAttr 0x5577df84e290 <col:63, col:80> 1 2
|-FunctionDecl 0x5577df84e4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5577df84e2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5577df84e368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5577df84e578 <col:37>
| `-NonNullAttr 0x5577df84e5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x5577df84e7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5577df84e618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5577df84e698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5577df84e868 <line:418:22>
| `-NonNullAttr 0x5577df84e8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5577df84ea48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5577df84e908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5577df84e988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5577df84eaf8 <line:420:22>
| `-NonNullAttr 0x5577df84eb50 <col:63, col:77> 1
|-FunctionDecl 0x5577df84ecf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5577df84eb98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5577df84ec18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5577df84eda8 <line:423:22>
| `-NonNullAttr 0x5577df84fe30 <col:63, col:80> 1 2
|-FunctionDecl 0x5577df84ffb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5577df84fe78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5577df84fef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5577df850068 <line:426:22>
| `-NonNullAttr 0x5577df8500c0 <col:63, col:77> 1
|-FunctionDecl 0x5577df850268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5577df850108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5577df850188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5577df850318 <line:429:22>
| `-NonNullAttr 0x5577df850370 <col:63, col:80> 1 2
|-FunctionDecl 0x5577df8504f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5577df8503b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5577df850438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5577df8505a8 <line:431:22>
| `-NonNullAttr 0x5577df850600 <col:63, col:77> 1
|-FunctionDecl 0x5577df850828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5577df850648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5577df8506c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5577df8508d8 <line:434:22>
| |-NonNullAttr 0x5577df850930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5577df850968 <col:100> "" ""
|-FunctionDecl 0x5577df850b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5577df8509b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5577df850a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5577df850c28 <line:437:22>
| |-NonNullAttr 0x5577df850c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x5577df850cb8 <col:97> "" ""
|-FunctionDecl 0x5577df850eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5577df850d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5577df850d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5577df850f68 <line:440:22>
| `-NonNullAttr 0x5577df850fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x5577df851140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5577df851008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5577df851080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5577df8511f0 <line:443:22>
| `-NonNullAttr 0x5577df851248 <col:63, col:77> 1
|-FunctionDecl 0x5577df851538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5577df851298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5577df851318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5577df851390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5577df8515f0 <line:447:22>
| `-NonNullAttr 0x5577df851648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5577df8518f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5577df8516a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5577df851720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5577df851798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5577df8519b0 <col:43>
| `-NonNullAttr 0x5577df851a08 <col:84, col:98> 1
|-FunctionDecl 0x5577df851cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5577df851a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5577df851ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5577df851b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5577df851d80 <line:452:22>
| `-NonNullAttr 0x5577df851dd8 <col:63, col:77> 3
|-FunctionDecl 0x5577df8520e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5577df851e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5577df851ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5577df851f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5577df8521a0 <line:456:22>
| `-NonNullAttr 0x5577df8521f8 <col:63, col:80> 2 3
|-FunctionDecl 0x5577df8523e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5577df852248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5577df8522c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5577df852498 <line:458:22>
|-FunctionDecl 0x5577df852868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5577df852560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5577df852700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5577df852918 <col:52, col:69> 1 2
|-FunctionDecl 0x5577df852ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5577df8529a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5577df852a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5577df852ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5577df852b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5577df852c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5577df852e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5577df852d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5577df852fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5577df853040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5577df8530e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5577df8531d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5577df853240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5577df853410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix032_pso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5577df853508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5577df8535c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5577df853560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5577df8530c0 '__pthread_unwind_buf_t'
| |   `-Record 0x5577df853040 ''
| `-AlignedAttr 0x5577df853618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5577df853690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5577df8537f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5577df853858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5577df8538c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5577df853928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5577df853b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5577df853a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5577df853c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5577df853be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5577df853e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5577df853d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5577df853f18 <line:487:22>
|-RecordDecl 0x5577df853f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5577df854288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5577df8540e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5577df854168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5577df854338 <col:86>
| `-ReturnsTwiceAttr 0x5577df854390 <col:12> Implicit
|-FunctionDecl 0x5577df8546b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5577df854460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5577df854570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5577df854768 <line:493:22>
| `-NonNullAttr 0x5577df8547c0 <col:63, col:77> 1
|-FunctionDecl 0x5577df854938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5577df854808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5577df8549e0 <line:495:22>
| `-NonNullAttr 0x5577df854a38 <col:63, col:77> 1
|-FunctionDecl 0x5577df854b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5577df854a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5577df854be8 <line:497:22>
| `-NonNullAttr 0x5577df854c40 <col:52, col:66> 1
|-FunctionDecl 0x5577df854d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5577df854c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5577df854de8 <line:499:22>
| `-NonNullAttr 0x5577df854e40 <col:52, col:66> 1
|-FunctionDecl 0x5577df855088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5577df854e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5577df854f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5577df855138 <col:36>
| `-NonNullAttr 0x5577df855190 <col:66, col:83> 1 2
|-FunctionDecl 0x5577df855290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5577df8551d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5577df855338 <line:504:22>
| `-NonNullAttr 0x5577df855390 <col:52, col:66> 1
|-FunctionDecl 0x5577df855628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5577df855440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5577df8554c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5577df8556d8 <line:508:22>
| `-NonNullAttr 0x5577df855730 <col:63, col:80> 1 2
|-FunctionDecl 0x5577df8559f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5577df855778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5577df8557f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5577df855878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5577df855ab0 <line:512:22>
| `-NonNullAttr 0x5577df855b08 <col:63, col:80> 1 3
|-FunctionDecl 0x5577df855c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5577df855b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5577df855cb8 <line:514:22>
| `-NonNullAttr 0x5577df855d10 <col:63, col:77> 1
|-FunctionDecl 0x5577df855f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5577df855dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5577df855fe0 <line:516:22>
| `-NonNullAttr 0x5577df856038 <col:63, col:77> 1
|-FunctionDecl 0x5577df856140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5577df856088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5577df8561e8 <line:518:22>
| `-NonNullAttr 0x5577df856240 <col:63, col:77> 1
|-FunctionDecl 0x5577df856468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5577df856288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5577df856308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5577df856518 <line:522:22>
| `-NonNullAttr 0x5577df856570 <col:63, col:80> 1 2
|-FunctionDecl 0x5577df856778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5577df8565b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5577df856638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5577df856828 <line:525:22>
| `-NonNullAttr 0x5577df856880 <col:63, col:77> 1
|-FunctionDecl 0x5577df856a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5577df8568c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5577df856948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5577df856ad8 <line:528:22>
| `-NonNullAttr 0x5577df856b30 <col:63, col:80> 1 2
|-FunctionDecl 0x5577df856cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5577df856b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5577df856bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5577df856d68 <line:530:22>
| `-NonNullAttr 0x5577df856dc0 <col:63, col:77> 1
|-FunctionDecl 0x5577df857f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5577df856e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5577df857eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5577df858040 <line:534:22>
| `-NonNullAttr 0x5577df858098 <col:63, col:80> 1 2
|-FunctionDecl 0x5577df858228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5577df8580e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5577df858168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5577df8582d8 <line:537:22>
| `-NonNullAttr 0x5577df858330 <col:63, col:77> 1
|-FunctionDecl 0x5577df8584d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5577df858378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5577df8583f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5577df858588 <line:541:22>
| `-NonNullAttr 0x5577df8585e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5577df858768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5577df858628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5577df8586a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5577df858818 <line:544:22>
| `-NonNullAttr 0x5577df858870 <col:63, col:77> 1
|-FunctionDecl 0x5577df858a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5577df8588b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5577df858938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5577df858b08 <line:547:22>
| `-NonNullAttr 0x5577df858b60 <col:63, col:80> 1 2
|-FunctionDecl 0x5577df858ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5577df858ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5577df858c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5577df858d98 <line:550:22>
| `-NonNullAttr 0x5577df858df0 <col:63, col:77> 1
|-FunctionDecl 0x5577df85a168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5577df859f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5577df85a020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5577df85a218 <col:29>
| `-NonNullAttr 0x5577df85a270 <col:70, col:84> 1
|-FunctionDecl 0x5577df85a3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5577df85a2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5577df85a490 <line:555:22>
| `-NonNullAttr 0x5577df85a4e8 <col:63, col:77> 1
|-FunctionDecl 0x5577df85a5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5577df85a538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5577df85a698 <line:557:22>
| `-NonNullAttr 0x5577df85a6f0 <col:52, col:66> 1
|-FunctionDecl 0x5577df85a7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5577df85a738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5577df85a898 <line:559:19>
| `-NonNullAttr 0x5577df85a8f0 <col:49, col:63> 1
|-FunctionDecl 0x5577df85ab28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5577df85a938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5577df85a9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5577df85abd8 <col:39>
| `-NonNullAttr 0x5577df85ac30 <col:69, col:86> 1 2
|-FunctionDecl 0x5577df85ad30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5577df85ac78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5577df85add8 <line:564:22>
| `-NonNullAttr 0x5577df85ae30 <col:52, col:66> 1
|-FunctionDecl 0x5577df85af98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5577df85aee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5577df85b040 <line:566:22>
| `-NonNullAttr 0x5577df85b098 <col:52, col:66> 1
|-FunctionDecl 0x5577df85b258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5577df85b0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5577df85b178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5577df85b308 <col:39>
| `-NonNullAttr 0x5577df85b360 <col:69, col:86> 1 2
|-FunctionDecl 0x5577df85b460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5577df85b3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5577df85b508 <line:571:22>
| `-NonNullAttr 0x5577df85b560 <col:52, col:66> 1
|-FunctionDecl 0x5577df85b748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5577df85b610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5577df85b7f0 <line:573:22>
| `-NonNullAttr 0x5577df85b848 <col:63, col:77> 1
|-FunctionDecl 0x5577df85b950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5577df85b898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5577df85b9f8 <line:575:22>
| `-NonNullAttr 0x5577df85ba50 <col:63, col:77> 1
|-FunctionDecl 0x5577df85bc78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5577df85ba98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5577df85bb18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5577df85bd28 <line:579:22>
| `-NonNullAttr 0x5577df85bd80 <col:63, col:80> 1 2
|-FunctionDecl 0x5577df85bfa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5577df85bdc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5577df85be48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5577df85c058 <line:582:22>
| `-NonNullAttr 0x5577df85c0b0 <col:63, col:77> 1
|-FunctionDecl 0x5577df85c258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5577df85c0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5577df85c178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5577df85c308 <line:586:22>
| `-NonNullAttr 0x5577df85c360 <col:63, col:80> 1 2
|-FunctionDecl 0x5577df85c4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5577df85c3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5577df85c428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5577df85c598 <col:36>
| `-NonNullAttr 0x5577df85c5f0 <col:77, col:91> 1
|-FunctionDecl 0x5577df85c928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5577df85c6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5577df85c7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5577df85c9d8 <line:591:22>
| `-NonNullAttr 0x5577df85ca30 <col:63, col:77> 1
|-FunctionDecl 0x5577df85cba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5577df85ca78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5577df85cc50 <line:593:22>
| `-NonNullAttr 0x5577df85cca8 <col:63, col:77> 1
|-FunctionDecl 0x5577df85cdb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5577df85ccf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5577df85ce58 <line:595:22>
| `-NonNullAttr 0x5577df85ceb0 <col:52, col:66> 1
|-FunctionDecl 0x5577df85cfc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5577df85cf10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5577df85d070 <line:597:22>
| `-NonNullAttr 0x5577df85d0c8 <col:52, col:66> 1
|-FunctionDecl 0x5577df85d2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5577df85d118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5577df85d190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5577df85d3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5577df85d6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5577df85d428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5577df85d4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5577df85d530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5577df85d790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5577df85d9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5577df85d870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5577df85da50 <line:606:22>
| `-NonNullAttr 0x5577df85daa8 <col:63, col:77> 1
|-FunctionDecl 0x5577df85dbb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5577df85daf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5577df85dc58 <line:608:22>
| `-NonNullAttr 0x5577df85dcb0 <col:63, col:77> 1
|-FunctionDecl 0x5577df85df10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5577df85dcf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5577df85dd78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5577df85dfc0 <line:612:22>
| `-NonNullAttr 0x5577df85e018 <col:63, col:80> 1 2
|-FunctionDecl 0x5577df85e228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5577df85e068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5577df85e0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5577df85e2d8 <col:37>
| `-NonNullAttr 0x5577df85e330 <col:78, col:92> 1
|-FunctionDecl 0x5577df85e548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5577df85e378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5577df85e420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5577df85e5f8 <line:618:22>
| `-NonNullAttr 0x5577df85e650 <col:63, col:80> 1 2
|-FunctionDecl 0x5577df85e818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5577df85e698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5577df85e710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5577df85e8c8 <line:621:22>
| `-NonNullAttr 0x5577df85e920 <col:63, col:77> 1
|-FunctionDecl 0x5577df85ebc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5577df85ea00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5577df85ea80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5577df85ec78 <line:623:22>
| `-NonNullAttr 0x5577df85ecd0 <col:63, col:77> 1
|-FunctionDecl 0x5577df85ee48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5577df85ed18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5577df85ef20 <line:625:22>
| `-NonNullAttr 0x5577df85ef78 <col:63, col:77> 1
|-FunctionDecl 0x5577df85f080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5577df85efc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5577df85f128 <line:627:22>
| `-NonNullAttr 0x5577df85f180 <col:52, col:66> 1
|-FunctionDecl 0x5577df85f280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5577df85f1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5577df85f328 <line:629:22>
| `-NonNullAttr 0x5577df85f380 <col:52, col:66> 1
|-FunctionDecl 0x5577df85f480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5577df85f3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5577df85f528 <line:631:22>
| `-NonNullAttr 0x5577df85f580 <col:52, col:66> 1
|-FunctionDecl 0x5577df85f958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5577df85f660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5577df85f770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5577df85f7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5577df85fa10 <line:635:22>
| `-NonNullAttr 0x5577df85fa68 <col:63, col:77> 1
|-FunctionDecl 0x5577df85fbe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5577df85fab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5577df85fc90 <line:637:22>
| `-NonNullAttr 0x5577df85fce8 <col:63, col:77> 1
|-FunctionDecl 0x5577df85fdf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5577df85fd38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5577df85fe98 <line:639:22>
| `-NonNullAttr 0x5577df85fef0 <col:52, col:66> 1
|-FunctionDecl 0x5577df8600e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5577df85ffb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5577df860190 <line:641:22>
| `-NonNullAttr 0x5577df8601e8 <col:63, col:77> 1
|-FunctionDecl 0x5577df8602f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5577df860238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5577df860398 <line:643:22>
| `-NonNullAttr 0x5577df8603f0 <col:63, col:77> 1
|-FunctionDecl 0x5577df860618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5577df860438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5577df8604b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5577df8606c8 <line:647:22>
| `-NonNullAttr 0x5577df860720 <col:63, col:80> 1 2
|-FunctionDecl 0x5577df860928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5577df860768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5577df8607e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5577df8609d8 <line:650:22>
| `-NonNullAttr 0x5577df860a30 <col:63, col:77> 1
|-FunctionDecl 0x5577df860d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5577df860b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5577df860c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5577df860e28 <line:653:22>
| `-NonNullAttr 0x5577df860e80 <col:63, col:77> 1
|-FunctionDecl 0x5577df860fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5577df860ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5577df861090 <col:69>
|-FunctionDecl 0x5577df861208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5577df8610f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5577df8612b0 <col:72>
|-FunctionDecl 0x5577df8614e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5577df861318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5577df8613c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5577df861598 <col:44>
|-FunctionDecl 0x5577df8617b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5577df861600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5577df861678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5577df861868 <line:660:22>
| `-NonNullAttr 0x5577df8618c0 <col:63, col:77> 2
|-FunctionDecl 0x5577df861d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5577df8619a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5577df861ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5577df861bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5577df861dc0 <col:47>
|-FunctionDecl 0x5577df862f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5577df861e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5577df8630b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5577df863020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5577df863210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5577df863178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5577df8632d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5577df863398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5577df863458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5577df863510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5577df863590 prev 0x5577df863510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5577df8635f8 <col:24> 'int' 0
|-VarDecl 0x5577df863630 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5577df8636b0 prev 0x5577df863630 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5577df863718 <col:27> 'int' 0
|-VarDecl 0x5577df863750 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5577df8637d0 prev 0x5577df863750 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5577df863838 <col:27> 'int' 0
|-VarDecl 0x5577df863870 <line:677:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x5577df8638f0 prev 0x5577df863870 <line:678:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x5577df863958 <col:27> 'int' 0
|-VarDecl 0x5577df863990 <line:679:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5577df863a10 prev 0x5577df863990 <line:680:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5577df863a78 <col:27> 'int' 0
|-VarDecl 0x5577df863ab0 <line:681:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x5577df863b30 prev 0x5577df863ab0 <line:682:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x5577df863b98 <col:27> 'int' 0
|-VarDecl 0x5577df863bd0 <line:683:1, col:5> col:5 used a 'int'
|-VarDecl 0x5577df863c50 prev 0x5577df863bd0 <line:684:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x5577df863cb8 <col:9> 'int' 0
|-VarDecl 0x5577df863cf0 <line:685:1, col:5> col:5 used b 'int'
|-VarDecl 0x5577df863d70 prev 0x5577df863cf0 <line:686:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x5577df863dd8 <col:9> 'int' 0
|-VarDecl 0x5577df863e08 <line:687:1, col:7> col:7 used b$flush_delayed '_Bool'
|-VarDecl 0x5577df863e88 <line:688:1, col:5> col:5 used b$mem_tmp 'int'
|-VarDecl 0x5577df863f70 <line:689:1, col:7> col:7 used b$r_buff0_thd0 '_Bool'
|-VarDecl 0x5577df863fe8 <line:690:1, col:7> col:7 used b$r_buff0_thd1 '_Bool'
|-VarDecl 0x5577df864060 <line:691:1, col:7> col:7 used b$r_buff0_thd2 '_Bool'
|-VarDecl 0x5577df8640d8 <line:692:1, col:7> col:7 used b$r_buff0_thd3 '_Bool'
|-VarDecl 0x5577df864150 <line:693:1, col:7> col:7 used b$r_buff1_thd0 '_Bool'
|-VarDecl 0x5577df8641c8 <line:694:1, col:7> col:7 used b$r_buff1_thd1 '_Bool'
|-VarDecl 0x5577df864240 <line:695:1, col:7> col:7 used b$r_buff1_thd2 '_Bool'
|-VarDecl 0x5577df8642b8 <line:696:1, col:7> col:7 used b$r_buff1_thd3 '_Bool'
|-VarDecl 0x5577df864330 <line:697:1, col:7> col:7 b$read_delayed '_Bool'
|-VarDecl 0x5577df8643b0 <line:698:1, col:6> col:6 b$read_delayed_var 'int *'
|-VarDecl 0x5577df864430 <line:699:1, col:5> col:5 used b$w_buff0 'int'
|-VarDecl 0x5577df8644a8 <line:700:1, col:7> col:7 used b$w_buff0_used '_Bool'
|-VarDecl 0x5577df864528 <line:701:1, col:5> col:5 used b$w_buff1 'int'
|-VarDecl 0x5577df8645a0 <line:702:1, col:7> col:7 used b$w_buff1_used '_Bool'
|-VarDecl 0x5577df864618 <line:703:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5577df864690 <line:704:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5577df864710 <line:705:1, col:5> col:5 used x 'int'
|-VarDecl 0x5577df864790 prev 0x5577df864710 <line:706:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5577df8647f8 <col:9> 'int' 0
|-VarDecl 0x5577df864830 <line:707:1, col:5> col:5 used y 'int'
|-VarDecl 0x5577df8648b0 prev 0x5577df864830 <line:708:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5577df864918 <col:9> 'int' 0
|-VarDecl 0x5577df864950 <line:709:1, col:5> col:5 used z 'int'
|-VarDecl 0x5577df8649d0 prev 0x5577df864950 <line:710:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5577df864a38 <col:9> 'int' 0
|-VarDecl 0x5577df864a68 <line:711:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5577df864ae0 <line:712:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5577df864bf8 prev 0x5577df862f60 <line:713:1, line:741:1> line:713:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5577df864b60 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5577df866448 <line:714:1, line:741:1>
|   |-CallExpr 0x5577df864d08 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5577df864cf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df864ca0 <col:3> 'void ()' Function 0x5577df80a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5577df864d80 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5577df864d28 <col:3> 'int' lvalue Var 0x5577df864528 'b$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5577df864d68 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5577df864d48 <col:15> 'int' lvalue Var 0x5577df864430 'b$w_buff0' 'int'
|   |-BinaryOperator 0x5577df864de0 <line:717:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5577df864da0 <col:3> 'int' lvalue Var 0x5577df864430 'b$w_buff0' 'int'
|   | `-IntegerLiteral 0x5577df864dc0 <col:15> 'int' 1
|   |-BinaryOperator 0x5577df864e58 <line:718:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5577df864e00 <col:3> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5577df864e40 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5577df864e20 <col:20> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5577df864ef0 <line:719:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5577df864e78 <col:3> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5577df864ec8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5577df864e98 <col:27> 'int' 1
|   |-CallExpr 0x5577df865088 <line:720:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5577df865070 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5577df864f10 <col:3> 'void (int)' Function 0x5577df80a0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5577df865020 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5577df865000 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5577df864fe0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5577df864f98 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5577df864f80 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5577df864f30 <col:23> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5577df864fc8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5577df864fb0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5577df864f50 <col:41> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5577df865108 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5577df8650b0 <col:3> '_Bool' lvalue Var 0x5577df864150 'b$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5577df8650f0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5577df8650d0 <col:20> '_Bool' lvalue Var 0x5577df863f70 'b$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5577df865180 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5577df865128 <col:3> '_Bool' lvalue Var 0x5577df8641c8 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5577df865168 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5577df865148 <col:20> '_Bool' lvalue Var 0x5577df863fe8 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5577df8651f8 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5577df8651a0 <col:3> '_Bool' lvalue Var 0x5577df864240 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5577df8651e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5577df8651c0 <col:20> '_Bool' lvalue Var 0x5577df864060 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5577df865270 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5577df865218 <col:3> '_Bool' lvalue Var 0x5577df8642b8 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5577df865258 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5577df865238 <col:20> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5577df865308 <line:725:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5577df865290 <col:3> '_Bool' lvalue Var 0x5577df863fe8 'b$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x5577df8652e0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5577df8652b0 <col:27> 'int' 1
|   |-CallExpr 0x5577df865360 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5577df865348 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df865328 <col:3> 'void ()' Function 0x5577df80a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5577df8653b8 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5577df8653a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df865380 <col:3> 'void ()' Function 0x5577df80a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5577df865430 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5577df8653d8 <col:3> 'int' lvalue Var 0x5577df8636b0 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5577df865418 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5577df8653f8 <col:25> 'int' lvalue Var 0x5577df864790 'x' 'int'
|   |-CallExpr 0x5577df865488 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5577df865470 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df865450 <col:3> 'void ()' Function 0x5577df80a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5577df8654e0 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5577df8654c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df8654a8 <col:3> 'void ()' Function 0x5577df80a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5577df8657c8 <line:731:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5577df865500 <col:3> 'int' lvalue Var 0x5577df863d70 'b' 'int'
|   | `-ConditionalOperator 0x5577df865798 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5577df8655c0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5577df865578 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5577df865560 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5577df865520 <col:7> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5577df8655a8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5577df865590 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5577df865540 <col:25> '_Bool' lvalue Var 0x5577df863fe8 'b$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5577df865780 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5577df8655e0 <col:42> 'int' lvalue Var 0x5577df864430 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x5577df865760 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5577df865730 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5577df8656a0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5577df865658 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5577df865640 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5577df865600 <col:55> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5577df865688 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5577df865670 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5577df865620 <col:73> '_Bool' lvalue Var 0x5577df8641c8 'b$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5577df865700 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5577df8656c0 <col:90> 'int' lvalue Var 0x5577df864528 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5577df865718 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5577df8656e0 <col:102> 'int' lvalue Var 0x5577df863d70 'b' 'int'
|   |-BinaryOperator 0x5577df8659d0 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5577df8657e8 <col:3> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5577df8659b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5577df865988 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5577df8658a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5577df865860 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5577df865848 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5577df865808 <col:20> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5577df865890 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5577df865878 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5577df865828 <col:38> '_Bool' lvalue Var 0x5577df863fe8 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5577df865940 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5577df8658f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5577df8658c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5577df865970 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5577df865958 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5577df865920 <col:66> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5577df865cb8 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5577df8659f0 <col:3> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5577df865ca0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5577df865c70 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5577df865b90 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5577df865ab0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5577df865a68 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5577df865a50 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5577df865a10 <col:20> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5577df865a98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5577df865a80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5577df865a30 <col:38> '_Bool' lvalue Var 0x5577df863fe8 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5577df865b70 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5577df865b28 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5577df865b10 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5577df865ad0 <col:56> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5577df865b58 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5577df865b40 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5577df865af0 <col:74> '_Bool' lvalue Var 0x5577df8641c8 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5577df865c28 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5577df865be0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5577df865bb0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5577df865c58 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5577df865c40 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5577df865c08 <col:102> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5577df865ec0 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5577df865cd8 <col:3> '_Bool' lvalue Var 0x5577df863fe8 'b$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5577df865ea8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5577df865e78 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5577df865d98 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5577df865d50 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5577df865d38 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5577df865cf8 <col:20> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5577df865d80 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5577df865d68 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5577df865d18 <col:38> '_Bool' lvalue Var 0x5577df863fe8 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5577df865e30 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5577df865de8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5577df865db8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5577df865e60 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5577df865e48 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5577df865e10 <col:66> '_Bool' lvalue Var 0x5577df863fe8 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5577df8661c8 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5577df865ee0 <col:3> '_Bool' lvalue Var 0x5577df8641c8 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5577df8661b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5577df866180 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5577df8660a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5577df865fc0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5577df865f58 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5577df865f40 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5577df865f00 <col:20> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5577df865fa8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5577df865f90 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5577df865f20 <col:38> '_Bool' lvalue Var 0x5577df863fe8 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5577df866080 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5577df866038 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5577df866020 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5577df865fe0 <col:56> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5577df866068 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5577df866050 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5577df866000 <col:74> '_Bool' lvalue Var 0x5577df8641c8 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5577df866138 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5577df8660f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5577df8660c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5577df866168 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5577df866150 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5577df866118 <col:102> '_Bool' lvalue Var 0x5577df8641c8 'b$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5577df866220 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5577df866208 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df8661e8 <col:3> 'void ()' Function 0x5577df80a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5577df866278 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5577df866260 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df866240 <col:3> 'void ()' Function 0x5577df80a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5577df866330 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5577df866298 <col:3> 'int' lvalue Var 0x5577df863590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5577df866310 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5577df8662f8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5577df8662b8 <col:22> 'int' lvalue Var 0x5577df863590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5577df8662d8 <col:41> 'int' 1
|   |-CallExpr 0x5577df866388 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5577df866370 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df866350 <col:3> 'void ()' Function 0x5577df80a410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5577df866438 <line:740:3, col:36>
|     `-CallExpr 0x5577df866418 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5577df866400 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5577df8663a8 <col:10> 'void *(void)' Function 0x5577df809e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5577df8665d8 prev 0x5577df8630b8 <line:742:1, line:767:1> line:742:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5577df866540 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5577df867a50 <line:743:1, line:767:1>
|   |-CallExpr 0x5577df8666b8 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5577df8666a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df866680 <col:3> 'void ()' Function 0x5577df80a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5577df866718 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5577df8666d8 <col:3> 'int' lvalue Var 0x5577df864790 'x' 'int'
|   | `-IntegerLiteral 0x5577df8666f8 <col:7> 'int' 1
|   |-CallExpr 0x5577df866770 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5577df866758 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df866738 <col:3> 'void ()' Function 0x5577df80a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5577df8667c8 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5577df8667b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df866790 <col:3> 'void ()' Function 0x5577df80a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5577df866828 <line:748:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5577df8667e8 <col:3> 'int' lvalue Var 0x5577df8648b0 'y' 'int'
|   | `-IntegerLiteral 0x5577df866808 <col:7> 'int' 1
|   |-CallExpr 0x5577df866880 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5577df866868 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df866848 <col:3> 'void ()' Function 0x5577df80a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5577df8668d8 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5577df8668c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df8668a0 <col:3> 'void ()' Function 0x5577df80a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5577df866950 <line:751:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5577df8668f8 <col:3> 'int' lvalue Var 0x5577df8637d0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5577df866938 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5577df866918 <col:25> 'int' lvalue Var 0x5577df8648b0 'y' 'int'
|   |-CallExpr 0x5577df8669a8 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5577df866990 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df866970 <col:3> 'void ()' Function 0x5577df80a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5577df866a00 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5577df8669e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df8669c8 <col:3> 'void ()' Function 0x5577df80a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5577df866a78 <line:754:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5577df866a20 <col:3> 'int' lvalue Var 0x5577df8638f0 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x5577df866a60 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5577df866a40 <col:25> 'int' lvalue Var 0x5577df8649d0 'z' 'int'
|   |-CallExpr 0x5577df866ad0 <line:755:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5577df866ab8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df866a98 <col:3> 'void ()' Function 0x5577df80a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5577df866b28 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5577df866b10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df866af0 <col:3> 'void ()' Function 0x5577df80a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5577df866e10 <line:757:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5577df866b48 <col:3> 'int' lvalue Var 0x5577df863d70 'b' 'int'
|   | `-ConditionalOperator 0x5577df866de0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5577df866c08 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5577df866bc0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5577df866ba8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5577df866b68 <col:7> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5577df866bf0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5577df866bd8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5577df866b88 <col:25> '_Bool' lvalue Var 0x5577df864060 'b$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5577df866dc8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5577df866c28 <col:42> 'int' lvalue Var 0x5577df864430 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x5577df866da8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5577df866d78 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5577df866ce8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5577df866ca0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5577df866c88 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5577df866c48 <col:55> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5577df866cd0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5577df866cb8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5577df866c68 <col:73> '_Bool' lvalue Var 0x5577df864240 'b$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5577df866d48 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5577df866d08 <col:90> 'int' lvalue Var 0x5577df864528 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5577df866d60 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5577df866d28 <col:102> 'int' lvalue Var 0x5577df863d70 'b' 'int'
|   |-BinaryOperator 0x5577df867030 <line:758:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5577df866e30 <col:3> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5577df867018 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5577df866fe8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5577df866ef0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5577df866ea8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5577df866e90 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5577df866e50 <col:20> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5577df866ed8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5577df866ec0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5577df866e70 <col:38> '_Bool' lvalue Var 0x5577df864060 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5577df866fa0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5577df866f40 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5577df866f10 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5577df866fd0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5577df866fb8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5577df866f68 <col:66> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5577df867318 <line:759:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5577df867050 <col:3> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5577df867300 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5577df8672d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5577df8671f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5577df867110 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5577df8670c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5577df8670b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5577df867070 <col:20> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5577df8670f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5577df8670e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5577df867090 <col:38> '_Bool' lvalue Var 0x5577df864060 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5577df8671d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5577df867188 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5577df867170 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5577df867130 <col:56> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5577df8671b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5577df8671a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5577df867150 <col:74> '_Bool' lvalue Var 0x5577df864240 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5577df867288 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5577df867240 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5577df867210 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5577df8672b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5577df8672a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5577df867268 <col:102> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5577df867520 <line:760:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5577df867338 <col:3> '_Bool' lvalue Var 0x5577df864060 'b$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5577df867508 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5577df8674d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5577df8673f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5577df8673b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5577df867398 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5577df867358 <col:20> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5577df8673e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5577df8673c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5577df867378 <col:38> '_Bool' lvalue Var 0x5577df864060 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5577df867490 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5577df867448 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5577df867418 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5577df8674c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5577df8674a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5577df867470 <col:66> '_Bool' lvalue Var 0x5577df864060 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5577df867808 <line:761:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5577df867540 <col:3> '_Bool' lvalue Var 0x5577df864240 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5577df8677f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5577df8677c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5577df8676e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5577df867600 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5577df8675b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5577df8675a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5577df867560 <col:20> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5577df8675e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5577df8675d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5577df867580 <col:38> '_Bool' lvalue Var 0x5577df864060 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5577df8676c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5577df867678 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5577df867660 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5577df867620 <col:56> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5577df8676a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5577df867690 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5577df867640 <col:74> '_Bool' lvalue Var 0x5577df864240 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5577df867778 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5577df867730 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5577df867700 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5577df8677a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5577df867790 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5577df867758 <col:102> '_Bool' lvalue Var 0x5577df864240 'b$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5577df867860 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5577df867848 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df867828 <col:3> 'void ()' Function 0x5577df80a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5577df8678b8 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5577df8678a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df867880 <col:3> 'void ()' Function 0x5577df80a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5577df867970 <line:764:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5577df8678d8 <col:3> 'int' lvalue Var 0x5577df863590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5577df867950 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5577df867938 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5577df8678f8 <col:22> 'int' lvalue Var 0x5577df863590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5577df867918 <col:41> 'int' 1
|   |-CallExpr 0x5577df8679c8 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5577df8679b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df867990 <col:3> 'void ()' Function 0x5577df80a410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5577df867a40 <line:766:3, col:36>
|     `-CallExpr 0x5577df867a20 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5577df867a08 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5577df8679e8 <col:10> 'void *(void)' Function 0x5577df809e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5577df867bc8 prev 0x5577df863210 <line:768:1, line:806:1> line:768:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5577df867b30 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5577df86b9c0 <line:769:1, line:806:1>
|   |-CallExpr 0x5577df867ca8 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5577df867c90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df867c70 <col:3> 'void ()' Function 0x5577df80a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5577df867d08 <line:771:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5577df867cc8 <col:3> 'int' lvalue Var 0x5577df8649d0 'z' 'int'
|   | `-IntegerLiteral 0x5577df867ce8 <col:7> 'int' 1
|   |-CallExpr 0x5577df867d60 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5577df867d48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df867d28 <col:3> 'void ()' Function 0x5577df80a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5577df867db8 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5577df867da0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df867d80 <col:3> 'void ()' Function 0x5577df80a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5577df867e18 <line:774:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5577df867dd8 <col:3> 'int' lvalue Var 0x5577df863c50 'a' 'int'
|   | `-IntegerLiteral 0x5577df867df8 <col:7> 'int' 1
|   |-CallExpr 0x5577df867e70 <line:775:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5577df867e58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df867e38 <col:3> 'void ()' Function 0x5577df80a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5577df867ec8 <line:776:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5577df867eb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df867e90 <col:3> 'void ()' Function 0x5577df80a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5577df867f40 <line:777:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5577df867ee8 <col:3> 'int' lvalue Var 0x5577df863a10 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5577df867f28 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5577df867f08 <col:25> 'int' lvalue Var 0x5577df863c50 'a' 'int'
|   |-CallExpr 0x5577df867fb0 <line:778:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5577df867f80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df867f60 <col:3> 'void ()' Function 0x5577df80a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5577df868008 <line:779:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5577df867ff0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df867fd0 <col:3> 'void ()' Function 0x5577df80a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5577df8680b8 <line:780:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5577df868028 <col:3> '_Bool' lvalue Var 0x5577df864a68 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5577df8680a0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5577df868080 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5577df868068 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5577df868048 <col:19> 'void *(void)' Function 0x5577df809e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5577df868168 <line:781:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5577df8680d8 <col:3> '_Bool' lvalue Var 0x5577df864ae0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5577df868150 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5577df868130 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5577df868118 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5577df8680f8 <col:19> 'void *(void)' Function 0x5577df809e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5577df8681e0 <line:782:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5577df868188 <col:3> '_Bool' lvalue Var 0x5577df863e08 'b$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5577df8681c8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5577df8681a8 <col:21> '_Bool' lvalue Var 0x5577df864ae0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5577df868258 <line:783:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5577df868200 <col:3> 'int' lvalue Var 0x5577df863e88 'b$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5577df868240 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5577df868220 <col:15> 'int' lvalue Var 0x5577df863d70 'b' 'int'
|   |-BinaryOperator 0x5577df868690 <line:784:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5577df868278 <col:3> 'int' lvalue Var 0x5577df863d70 'b' 'int'
|   | `-ConditionalOperator 0x5577df868660 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5577df868488 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5577df8683a8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5577df8682d0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5577df8682b8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5577df868298 <col:8> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5577df868388 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5577df868320 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5577df868308 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5577df8682e8 <col:27> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x5577df868370 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5577df868358 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5577df868338 <col:46> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5577df868468 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5577df868400 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5577df8683e8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5577df8683c8 <col:65> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x5577df868450 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5577df868438 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5577df868418 <col:84> '_Bool' lvalue Var 0x5577df8642b8 'b$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5577df868648 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5577df8684a8 <col:101> 'int' lvalue Var 0x5577df863d70 'b' 'int'
|   |   `-ParenExpr 0x5577df868628 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5577df8685f8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5577df868568 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5577df868520 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5577df868508 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5577df8684c8 <col:106> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5577df868550 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5577df868538 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5577df8684e8 <col:124> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5577df8685c8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5577df868588 <col:141> 'int' lvalue Var 0x5577df864430 'b$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5577df8685e0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5577df8685a8 <col:153> 'int' lvalue Var 0x5577df864528 'b$w_buff1' 'int'
|   |-BinaryOperator 0x5577df868ba0 <line:785:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5577df8686b0 <col:3> 'int' lvalue Var 0x5577df864430 'b$w_buff0' 'int'
|   | `-ConditionalOperator 0x5577df868b70 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5577df868b40 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5577df868b28 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5577df8686d0 <col:15> '_Bool' lvalue Var 0x5577df864ae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5577df868b58 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5577df8686f0 <col:31> 'int' lvalue Var 0x5577df864430 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x5577df868b08 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5577df868ad8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5577df868900 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5577df868820 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5577df868748 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5577df868730 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5577df868710 <col:45> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5577df868800 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5577df868798 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5577df868780 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5577df868760 <col:64> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5577df8687e8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5577df8687d0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5577df8687b0 <col:83> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5577df8688e0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5577df868878 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5577df868860 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5577df868840 <col:102> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5577df8688c8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5577df8688b0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5577df868890 <col:121> '_Bool' lvalue Var 0x5577df8642b8 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5577df868ac0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5577df868920 <col:138> 'int' lvalue Var 0x5577df864430 'b$w_buff0' 'int'
|   |       `-ParenExpr 0x5577df868aa0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5577df868a70 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5577df8689e0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5577df868998 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5577df868980 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5577df868940 <col:151> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5577df8689c8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5577df8689b0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5577df868960 <col:169> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5577df868a40 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5577df868a00 <col:186> 'int' lvalue Var 0x5577df864430 'b$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5577df868a58 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5577df868a20 <col:198> 'int' lvalue Var 0x5577df864430 'b$w_buff0' 'int'
|   |-BinaryOperator 0x5577df8690c0 <line:786:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5577df868bc0 <col:3> 'int' lvalue Var 0x5577df864528 'b$w_buff1' 'int'
|   | `-ConditionalOperator 0x5577df869090 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5577df869060 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5577df869048 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5577df868be0 <col:15> '_Bool' lvalue Var 0x5577df864ae0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5577df869078 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5577df868c00 <col:31> 'int' lvalue Var 0x5577df864528 'b$w_buff1' 'int'
|   |   `-ParenExpr 0x5577df869028 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5577df868ff8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5577df868e10 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5577df868d30 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5577df868c58 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5577df868c40 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5577df868c20 <col:45> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5577df868d10 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5577df868ca8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5577df868c90 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5577df868c70 <col:64> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5577df868cf8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5577df868ce0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5577df868cc0 <col:83> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5577df868df0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5577df868d88 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5577df868d70 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5577df868d50 <col:102> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5577df868dd8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5577df868dc0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5577df868da0 <col:121> '_Bool' lvalue Var 0x5577df8642b8 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5577df868fe0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5577df868e30 <col:138> 'int' lvalue Var 0x5577df864528 'b$w_buff1' 'int'
|   |       `-ParenExpr 0x5577df868fc0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5577df868f80 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5577df868ef0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5577df868ea8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5577df868e90 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5577df868e50 <col:151> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5577df868ed8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5577df868ec0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5577df868e70 <col:169> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5577df868f50 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5577df868f10 <col:186> 'int' lvalue Var 0x5577df864528 'b$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5577df868f68 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5577df868f30 <col:198> 'int' lvalue Var 0x5577df864528 'b$w_buff1' 'int'
|   |-BinaryOperator 0x5577df869668 <line:787:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5577df8690e0 <col:3> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5577df869650 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5577df869620 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5577df8695d8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5577df8695c0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5577df869100 <col:20> '_Bool' lvalue Var 0x5577df864ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5577df869608 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5577df8695f0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5577df869120 <col:36> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5577df8695a0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5577df869570 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5577df869330 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5577df869250 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5577df869178 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5577df869160 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5577df869140 <col:55> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5577df869230 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5577df8691c8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5577df8691b0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5577df869190 <col:74> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5577df869218 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5577df869200 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5577df8691e0 <col:93> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5577df869310 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5577df8692a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5577df869290 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5577df869270 <col:112> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5577df8692f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5577df8692e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5577df8692c0 <col:131> '_Bool' lvalue Var 0x5577df8642b8 'b$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5577df869558 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5577df869540 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5577df869350 <col:148> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5577df869520 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5577df8694f0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5577df869410 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5577df8693c8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5577df8693b0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5577df869370 <col:166> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5577df8693f8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5577df8693e0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5577df869390 <col:184> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5577df8694a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5577df869460 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5577df869430 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5577df8694d8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5577df8694c0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5577df869488 <col:212> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5577df869c30 <line:788:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5577df869688 <col:3> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5577df869c18 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5577df869be8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5577df869ba0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5577df869b88 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5577df8696a8 <col:20> '_Bool' lvalue Var 0x5577df864ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5577df869bd0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5577df869bb8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5577df8696c8 <col:36> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5577df869b68 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5577df869b38 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5577df8698d8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5577df8697f8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5577df869720 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5577df869708 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5577df8696e8 <col:55> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5577df8697d8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5577df869770 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5577df869758 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5577df869738 <col:74> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5577df8697c0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5577df8697a8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5577df869788 <col:93> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5577df8698b8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5577df869850 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5577df869838 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5577df869818 <col:112> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5577df8698a0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5577df869888 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5577df869868 <col:131> '_Bool' lvalue Var 0x5577df8642b8 'b$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5577df869b20 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5577df869b08 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5577df8698f8 <col:148> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5577df869ae8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5577df869ab8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5577df8699b8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5577df869970 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5577df869958 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5577df869918 <col:166> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5577df8699a0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5577df869988 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5577df869938 <col:184> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5577df869a88 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5577df869a08 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5577df8699d8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5577df869aa0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5577df869a60 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5577df869a30 <col:219> 'int' 0
|   |-BinaryOperator 0x5577df86a1e8 <line:789:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5577df869c50 <col:3> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5577df86a1d0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5577df86a1a0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5577df86a158 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5577df86a140 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5577df869c70 <col:20> '_Bool' lvalue Var 0x5577df864ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5577df86a188 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5577df86a170 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5577df869c90 <col:36> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x5577df86a120 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5577df86a0f0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5577df869ea0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5577df869dc0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5577df869ce8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5577df869cd0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5577df869cb0 <col:55> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5577df869da0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5577df869d38 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5577df869d20 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5577df869d00 <col:74> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5577df869d88 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5577df869d70 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5577df869d50 <col:93> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5577df869e80 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5577df869e18 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5577df869e00 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5577df869de0 <col:112> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5577df869e68 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5577df869e50 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5577df869e30 <col:131> '_Bool' lvalue Var 0x5577df8642b8 'b$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5577df86a0d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5577df86a0c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5577df869ec0 <col:148> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x5577df86a0a0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5577df86a070 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5577df869f80 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5577df869f38 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5577df869f20 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5577df869ee0 <col:166> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5577df869f68 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5577df869f50 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5577df869f00 <col:184> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5577df86a028 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5577df869fe0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5577df869fa0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5577df86a058 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5577df86a040 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5577df86a008 <col:212> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5577df86a7b0 <line:790:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5577df86a208 <col:3> '_Bool' lvalue Var 0x5577df8642b8 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5577df86a798 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5577df86a768 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5577df86a720 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5577df86a708 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5577df86a228 <col:20> '_Bool' lvalue Var 0x5577df864ae0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5577df86a750 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5577df86a738 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5577df86a248 <col:36> '_Bool' lvalue Var 0x5577df8642b8 'b$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x5577df86a6e8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5577df86a6b8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5577df86a458 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5577df86a378 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5577df86a2a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5577df86a288 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5577df86a268 <col:55> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5577df86a358 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5577df86a2f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5577df86a2d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5577df86a2b8 <col:74> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5577df86a340 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5577df86a328 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5577df86a308 <col:93> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5577df86a438 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5577df86a3d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5577df86a3b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5577df86a398 <col:112> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5577df86a420 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5577df86a408 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5577df86a3e8 <col:131> '_Bool' lvalue Var 0x5577df8642b8 'b$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5577df86a6a0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5577df86a688 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5577df86a478 <col:148> '_Bool' lvalue Var 0x5577df8642b8 'b$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x5577df86a668 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5577df86a638 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5577df86a538 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5577df86a4f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5577df86a4d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5577df86a498 <col:166> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5577df86a520 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5577df86a508 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5577df86a4b8 <col:184> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5577df86a608 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5577df86a588 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5577df86a558 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5577df86a620 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5577df86a5e0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5577df86a5b0 <col:219> 'int' 0
|   |-BinaryOperator 0x5577df86a828 <line:791:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5577df86a7d0 <col:3> 'int' lvalue Var 0x5577df863b30 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x5577df86a810 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5577df86a7f0 <col:25> 'int' lvalue Var 0x5577df863d70 'b' 'int'
|   |-BinaryOperator 0x5577df86a958 <line:792:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5577df86a848 <col:3> 'int' lvalue Var 0x5577df863d70 'b' 'int'
|   | `-ConditionalOperator 0x5577df86a928 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5577df86a8e0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5577df86a8c8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5577df86a868 <col:7> '_Bool' lvalue Var 0x5577df863e08 'b$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5577df86a8f8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5577df86a888 <col:25> 'int' lvalue Var 0x5577df863e88 'b$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5577df86a910 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5577df86a8a8 <col:37> 'int' lvalue Var 0x5577df863d70 'b' 'int'
|   |-BinaryOperator 0x5577df86a9f0 <line:793:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5577df86a978 <col:3> '_Bool' lvalue Var 0x5577df863e08 'b$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5577df86a9c8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5577df86a998 <col:28> 'int' 0
|   |-CallExpr 0x5577df86aa48 <line:794:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5577df86aa30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df86aa10 <col:3> 'void ()' Function 0x5577df80a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5577df86aaa0 <line:795:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5577df86aa88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df86aa68 <col:3> 'void ()' Function 0x5577df80a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5577df86ad88 <line:796:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5577df86aac0 <col:3> 'int' lvalue Var 0x5577df863d70 'b' 'int'
|   | `-ConditionalOperator 0x5577df86ad58 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5577df86ab80 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5577df86ab38 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5577df86ab20 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5577df86aae0 <col:7> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5577df86ab68 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5577df86ab50 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5577df86ab00 <col:25> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5577df86ad40 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5577df86aba0 <col:42> 'int' lvalue Var 0x5577df864430 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x5577df86ad20 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5577df86acf0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5577df86ac60 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5577df86ac18 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5577df86ac00 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5577df86abc0 <col:55> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5577df86ac48 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5577df86ac30 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5577df86abe0 <col:73> '_Bool' lvalue Var 0x5577df8642b8 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5577df86acc0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5577df86ac80 <col:90> 'int' lvalue Var 0x5577df864528 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5577df86acd8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5577df86aca0 <col:102> 'int' lvalue Var 0x5577df863d70 'b' 'int'
|   |-BinaryOperator 0x5577df86af90 <line:797:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5577df86ada8 <col:3> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5577df86af78 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5577df86af48 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5577df86ae68 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5577df86ae20 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5577df86ae08 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5577df86adc8 <col:20> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5577df86ae50 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5577df86ae38 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5577df86ade8 <col:38> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5577df86af00 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5577df86aeb8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5577df86ae88 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5577df86af30 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5577df86af18 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5577df86aee0 <col:66> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5577df86b288 <line:798:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5577df86afb0 <col:3> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5577df86b270 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5577df86b240 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5577df86b160 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5577df86b080 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5577df86b038 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5577df86b020 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5577df86afe0 <col:20> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5577df86b068 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5577df86b050 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5577df86b000 <col:38> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5577df86b140 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5577df86b0f8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5577df86b0e0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5577df86b0a0 <col:56> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5577df86b128 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5577df86b110 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5577df86b0c0 <col:74> '_Bool' lvalue Var 0x5577df8642b8 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5577df86b1f8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5577df86b1b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5577df86b180 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5577df86b228 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5577df86b210 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5577df86b1d8 <col:102> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5577df86b490 <line:799:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5577df86b2a8 <col:3> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5577df86b478 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5577df86b448 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5577df86b368 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5577df86b320 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5577df86b308 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5577df86b2c8 <col:20> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5577df86b350 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5577df86b338 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5577df86b2e8 <col:38> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5577df86b400 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5577df86b3b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5577df86b388 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5577df86b430 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5577df86b418 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5577df86b3e0 <col:66> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5577df86b778 <line:800:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5577df86b4b0 <col:3> '_Bool' lvalue Var 0x5577df8642b8 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5577df86b760 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5577df86b730 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5577df86b650 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5577df86b570 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5577df86b528 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5577df86b510 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5577df86b4d0 <col:20> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5577df86b558 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5577df86b540 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5577df86b4f0 <col:38> '_Bool' lvalue Var 0x5577df8640d8 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5577df86b630 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5577df86b5e8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5577df86b5d0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5577df86b590 <col:56> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5577df86b618 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5577df86b600 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5577df86b5b0 <col:74> '_Bool' lvalue Var 0x5577df8642b8 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5577df86b6e8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5577df86b6a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5577df86b670 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5577df86b718 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5577df86b700 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5577df86b6c8 <col:102> '_Bool' lvalue Var 0x5577df8642b8 'b$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5577df86b7d0 <line:801:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5577df86b7b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df86b798 <col:3> 'void ()' Function 0x5577df80a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5577df86b828 <line:802:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5577df86b810 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df86b7f0 <col:3> 'void ()' Function 0x5577df80a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5577df86b8e0 <line:803:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5577df86b848 <col:3> 'int' lvalue Var 0x5577df863590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5577df86b8c0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5577df86b8a8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5577df86b868 <col:22> 'int' lvalue Var 0x5577df863590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5577df86b888 <col:41> 'int' 1
|   |-CallExpr 0x5577df86b938 <line:804:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5577df86b920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577df86b900 <col:3> 'void ()' Function 0x5577df80a410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5577df86b9b0 <line:805:3, col:36>
|     `-CallExpr 0x5577df86b990 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5577df86b978 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5577df86b958 <col:10> 'void *(void)' Function 0x5577df809e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5577df86bb10 prev 0x5577df8632d8 <line:807:1, line:809:1> line:807:6 fence 'void ()'
| `-CompoundStmt 0x5577df86bbb0 <line:808:1, line:809:1>
|-FunctionDecl 0x5577df86bbe0 prev 0x5577df863398 <line:810:1, line:812:1> line:810:6 isync 'void ()'
| `-CompoundStmt 0x5577df86bc80 <line:811:1, line:812:1>
|-FunctionDecl 0x5577df86bcb0 prev 0x5577df863458 <line:813:1, line:815:1> line:813:6 lwfence 'void ()'
| `-CompoundStmt 0x5577df86bd50 <line:814:1, line:815:1>
`-FunctionDecl 0x5577df86bdb8 <line:816:1, line:840:1> line:816:5 main 'int ()'
  `-CompoundStmt 0x5577df86db38 <line:817:1, line:840:1>
    |-DeclStmt 0x5577df86bed0 <line:818:3, col:17>
    | `-VarDecl 0x5577df86be68 <col:3, col:13> col:13 used t857 'pthread_t':'unsigned long'
    |-CallExpr 0x5577df86c0e8 <line:819:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5577df86c0d0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5577df86bee8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5577df84a8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5577df86bf28 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5577df86bf08 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5577df86be68 't857' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5577df86c128 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5577df86bfa0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5577df86bf78 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5577df86bf40 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5577df86c140 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5577df86bfc0 <col:38> 'void *(void *)' Function 0x5577df864bf8 'P0' 'void *(void *)'
    | `-ParenExpr 0x5577df86c050 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5577df86c028 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5577df86bff0 <col:51> 'int' 0
    |-DeclStmt 0x5577df86c1d0 <line:820:3, col:17>
    | `-VarDecl 0x5577df86c168 <col:3, col:13> col:13 used t858 'pthread_t':'unsigned long'
    |-CallExpr 0x5577df86c378 <line:821:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5577df86c360 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5577df86c1e8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5577df84a8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5577df86c228 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5577df86c208 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5577df86c168 't858' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5577df86c3b8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5577df86c2a0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5577df86c278 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5577df86c240 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5577df86c3d0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5577df86c2c0 <col:38> 'void *(void *)' Function 0x5577df8665d8 'P1' 'void *(void *)'
    | `-ParenExpr 0x5577df86c340 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5577df86c318 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5577df86c2e0 <col:51> 'int' 0
    |-DeclStmt 0x5577df86c460 <line:822:3, col:17>
    | `-VarDecl 0x5577df86c3f8 <col:3, col:13> col:13 used t859 'pthread_t':'unsigned long'
    |-CallExpr 0x5577df86c608 <line:823:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5577df86c5f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5577df86c478 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5577df84a8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5577df86c4b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5577df86c498 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5577df86c3f8 't859' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5577df86c648 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5577df86c530 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5577df86c508 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5577df86c4d0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5577df86c660 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5577df86c550 <col:38> 'void *(void *)' Function 0x5577df867bc8 'P2' 'void *(void *)'
    | `-ParenExpr 0x5577df86c5d0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5577df86c5a8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5577df86c570 <col:51> 'int' 0
    |-CallExpr 0x5577df86c6b0 <line:824:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5577df86c698 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5577df86c678 <col:3> 'void ()' Function 0x5577df80a350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5577df86c780 <line:825:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5577df86c6d0 <col:3> '_Bool' lvalue Var 0x5577df864618 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5577df86c768 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5577df86c748 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5577df86c730 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5577df86c6f0 <col:21> 'int' lvalue Var 0x5577df863590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5577df86c710 <col:41> 'int' 3
    |-CallExpr 0x5577df86c7d8 <line:826:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5577df86c7c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5577df86c7a0 <col:3> 'void ()' Function 0x5577df80a410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5577df86c850 <line:827:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5577df86c838 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5577df86c7f8 <col:3> 'void (int)' Function 0x5577df809ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5577df86c890 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5577df86c878 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5577df86c818 <col:21> '_Bool' lvalue Var 0x5577df864618 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5577df86c8e0 <line:828:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5577df86c8c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5577df86c8a8 <col:3> 'void ()' Function 0x5577df80a350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5577df86cbc8 <line:829:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5577df86c900 <col:3> 'int' lvalue Var 0x5577df863d70 'b' 'int'
    | `-ConditionalOperator 0x5577df86cb98 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5577df86c9c0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5577df86c978 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5577df86c960 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5577df86c920 <col:7> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5577df86c9a8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5577df86c990 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5577df86c940 <col:25> '_Bool' lvalue Var 0x5577df863f70 'b$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5577df86cb80 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5577df86c9e0 <col:42> 'int' lvalue Var 0x5577df864430 'b$w_buff0' 'int'
    |   `-ParenExpr 0x5577df86cb60 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5577df86cb30 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5577df86caa0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5577df86ca58 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5577df86ca40 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5577df86ca00 <col:55> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5577df86ca88 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5577df86ca70 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5577df86ca20 <col:73> '_Bool' lvalue Var 0x5577df864150 'b$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5577df86cb00 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5577df86cac0 <col:90> 'int' lvalue Var 0x5577df864528 'b$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5577df86cb18 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5577df86cae0 <col:102> 'int' lvalue Var 0x5577df863d70 'b' 'int'
    |-BinaryOperator 0x5577df86cdd0 <line:830:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5577df86cbe8 <col:3> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5577df86cdb8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5577df86cd88 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5577df86cca8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5577df86cc60 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5577df86cc48 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5577df86cc08 <col:20> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5577df86cc90 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5577df86cc78 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5577df86cc28 <col:38> '_Bool' lvalue Var 0x5577df863f70 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5577df86cd40 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5577df86ccf8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5577df86ccc8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5577df86cd70 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5577df86cd58 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5577df86cd20 <col:66> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5577df86d0d8 <line:831:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5577df86cdf0 <col:3> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5577df86d0c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5577df86d090 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5577df86cf90 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5577df86ceb0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5577df86ce68 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5577df86ce50 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5577df86ce10 <col:20> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5577df86ce98 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5577df86ce80 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5577df86ce30 <col:38> '_Bool' lvalue Var 0x5577df863f70 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5577df86cf70 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5577df86cf28 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5577df86cf10 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5577df86ced0 <col:56> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5577df86cf58 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5577df86cf40 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5577df86cef0 <col:74> '_Bool' lvalue Var 0x5577df864150 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5577df86d048 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5577df86d000 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5577df86cfb0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5577df86d078 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5577df86d060 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5577df86d028 <col:102> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5577df86d2e0 <line:832:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5577df86d0f8 <col:3> '_Bool' lvalue Var 0x5577df863f70 'b$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5577df86d2c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5577df86d298 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5577df86d1b8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5577df86d170 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5577df86d158 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5577df86d118 <col:20> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5577df86d1a0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5577df86d188 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5577df86d138 <col:38> '_Bool' lvalue Var 0x5577df863f70 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5577df86d250 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5577df86d208 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5577df86d1d8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5577df86d280 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5577df86d268 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5577df86d230 <col:66> '_Bool' lvalue Var 0x5577df863f70 'b$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5577df86d5c8 <line:833:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5577df86d300 <col:3> '_Bool' lvalue Var 0x5577df864150 'b$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5577df86d5b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5577df86d580 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5577df86d4a0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5577df86d3c0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5577df86d378 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5577df86d360 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5577df86d320 <col:20> '_Bool' lvalue Var 0x5577df8644a8 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5577df86d3a8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5577df86d390 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5577df86d340 <col:38> '_Bool' lvalue Var 0x5577df863f70 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5577df86d480 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5577df86d438 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5577df86d420 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5577df86d3e0 <col:56> '_Bool' lvalue Var 0x5577df8645a0 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5577df86d468 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5577df86d450 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5577df86d400 <col:74> '_Bool' lvalue Var 0x5577df864150 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5577df86d538 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5577df86d4f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5577df86d4c0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5577df86d568 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5577df86d550 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5577df86d518 <col:102> '_Bool' lvalue Var 0x5577df864150 'b$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5577df86d620 <line:834:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5577df86d608 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5577df86d5e8 <col:3> 'void ()' Function 0x5577df80a410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5577df86d678 <line:835:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5577df86d660 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5577df86d640 <col:3> 'void ()' Function 0x5577df80a350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5577df86d9e0 <line:836:3, col:159> '_Bool' '='
    | |-DeclRefExpr 0x5577df86d698 <col:3> '_Bool' lvalue Var 0x5577df864690 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5577df86d9c8 <col:21, col:159> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5577df86d9b0 <col:21, col:159> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5577df86d990 <col:22, col:159> 'int'
    |       `-BinaryOperator 0x5577df86d970 <col:23, col:158> 'int' '&&'
    |         |-BinaryOperator 0x5577df86d8d8 <col:23, col:130> 'int' '&&'
    |         | |-BinaryOperator 0x5577df86d840 <col:23, col:102> 'int' '&&'
    |         | | |-BinaryOperator 0x5577df86d7a8 <col:23, col:74> 'int' '&&'
    |         | | | |-BinaryOperator 0x5577df86d710 <col:23, col:46> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x5577df86d6f8 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x5577df86d6b8 <col:23> 'int' lvalue Var 0x5577df8636b0 '__unbuffered_p0_EAX' 'int'
    |         | | | | `-IntegerLiteral 0x5577df86d6d8 <col:46> 'int' 0
    |         | | | `-BinaryOperator 0x5577df86d788 <col:51, col:74> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x5577df86d770 <col:51> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x5577df86d730 <col:51> 'int' lvalue Var 0x5577df8637d0 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x5577df86d750 <col:74> 'int' 1
    |         | | `-BinaryOperator 0x5577df86d820 <col:79, col:102> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5577df86d808 <col:79> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5577df86d7c8 <col:79> 'int' lvalue Var 0x5577df8638f0 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x5577df86d7e8 <col:102> 'int' 0
    |         | `-BinaryOperator 0x5577df86d8b8 <col:107, col:130> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5577df86d8a0 <col:107> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5577df86d860 <col:107> 'int' lvalue Var 0x5577df863a10 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x5577df86d880 <col:130> 'int' 1
    |         `-BinaryOperator 0x5577df86d950 <col:135, col:158> 'int' '=='
    |           |-ImplicitCastExpr 0x5577df86d938 <col:135> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5577df86d8f8 <col:135> 'int' lvalue Var 0x5577df863b30 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x5577df86d918 <col:158> 'int' 0
    |-CallExpr 0x5577df86da38 <line:837:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5577df86da20 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5577df86da00 <col:3> 'void ()' Function 0x5577df80a410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5577df86dab0 <line:838:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5577df86da98 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5577df86da58 <col:3> 'void (int)' Function 0x5577df80a0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5577df86daf0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5577df86dad8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5577df86da78 <col:21> '_Bool' lvalue Var 0x5577df864690 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5577df86db28 <line:839:3, col:10>
      `-IntegerLiteral 0x5577df86db08 <col:10> 'int' 0
