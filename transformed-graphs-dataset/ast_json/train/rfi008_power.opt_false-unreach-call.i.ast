TranslationUnitDecl 0x56341c41cf88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56341c41d848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56341c41d520 '__int128'
|-TypedefDecl 0x56341c41d8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56341c41d540 'unsigned __int128'
|-TypedefDecl 0x56341c41dbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56341c41d990 'struct __NSConstantString_tag'
|   `-Record 0x56341c41d910 '__NSConstantString_tag'
|-TypedefDecl 0x56341c41dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56341c41dc20 'char *'
|   `-BuiltinType 0x56341c41d020 'char'
|-TypedefDecl 0x56341c45cb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56341c41df00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56341c41dd40 'struct __va_list_tag'
|     `-Record 0x56341c41dcc0 '__va_list_tag'
|-FunctionDecl 0x56341c45cc80 <pthread-wmm/rfi008_power.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x56341c45ce50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x56341c45cd80 <col:31> col:34 'int'
|-FunctionDecl 0x56341c45cfc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x56341c45d0f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x56341c45d238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x56341c45d1a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x56341c45d468 <col:40, col:99>
|   |-IfStmt 0x56341c45d438 <col:42, col:88>
|   | |-UnaryOperator 0x56341c45d318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x56341c45d300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x56341c45d2e0 <col:47> 'int' lvalue ParmVar 0x56341c45d1a8 'expression' 'int'
|   | `-CompoundStmt 0x56341c45d420 <col:59, col:88>
|   |   `-LabelStmt 0x56341c45d408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x56341c45d398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x56341c45d380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x56341c45d330 <col:68> 'void () __attribute__((noreturn))' Function 0x56341c45d0f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x56341c45d450 <col:89>
|   `-ReturnStmt 0x56341c45d458 <col:91>
|-FunctionDecl 0x56341c45d4b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x56341c45d570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x56341c45d8f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56341c45d628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x56341c45d6a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x56341c45d728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56341c45d7a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56341c45d9b0 <line:11:22>
|-FunctionDecl 0x56341c482f10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56341c45da20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x56341c45daa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x56341c482d40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56341c482dc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56341c482fd0 <line:14:22>
|-FunctionDecl 0x56341c483280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56341c483040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x56341c4830c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x56341c483140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x56341c483338 <line:16:22>
|-TypedefDecl 0x56341c4833a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x56341c41d0e0 'unsigned char'
|-TypedefDecl 0x56341c483418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x56341c41d100 'unsigned short'
|-TypedefDecl 0x56341c483488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x56341c41d120 'unsigned int'
|-TypedefDecl 0x56341c4834f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x56341c41d140 'unsigned long'
|-TypedefDecl 0x56341c483568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x56341c41d040 'signed char'
|-TypedefDecl 0x56341c4835d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x56341c41d0e0 'unsigned char'
|-TypedefDecl 0x56341c483648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x56341c41d060 'short'
|-TypedefDecl 0x56341c4836b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x56341c41d100 'unsigned short'
|-TypedefDecl 0x56341c483728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x56341c41d080 'int'
|-TypedefDecl 0x56341c483798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x56341c41d120 'unsigned int'
|-TypedefDecl 0x56341c483808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x56341c41d0a0 'long'
|-TypedefDecl 0x56341c483878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x56341c41d140 'unsigned long'
|-TypedefDecl 0x56341c4838e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x56341c41d0a0 'long'
|-TypedefDecl 0x56341c483958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x56341c41d140 'unsigned long'
|-TypedefDecl 0x56341c4839c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x56341c41d140 'unsigned long'
|-TypedefDecl 0x56341c483a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x56341c41d120 'unsigned int'
|-TypedefDecl 0x56341c483aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x56341c41d120 'unsigned int'
|-TypedefDecl 0x56341c483b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x56341c41d140 'unsigned long'
|-TypedefDecl 0x56341c483b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x56341c41d140 'unsigned long'
|-TypedefDecl 0x56341c483bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x56341c41d120 'unsigned int'
|-TypedefDecl 0x56341c483c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x56341c41d140 'unsigned long'
|-TypedefDecl 0x56341c483cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x56341c41d0a0 'long'
|-TypedefDecl 0x56341c483d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x56341c41d0a0 'long'
|-TypedefDecl 0x56341c483dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x56341c41d080 'int'
|-RecordDecl 0x56341c483e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x56341c483f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x56341c484030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x56341c483fd0 'struct __fsid_t' sugar
|   `-RecordType 0x56341c483eb0 '__fsid_t'
|     `-Record 0x56341c483e30 ''
|-TypedefDecl 0x56341c4840b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x56341c41d0a0 'long'
|-TypedefDecl 0x56341c484128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x56341c41d140 'unsigned long'
|-TypedefDecl 0x56341c484198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x56341c41d140 'unsigned long'
|-TypedefDecl 0x56341c484208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x56341c41d120 'unsigned int'
|-TypedefDecl 0x56341c484278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x56341c41d0a0 'long'
|-TypedefDecl 0x56341c4842e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x56341c41d120 'unsigned int'
|-TypedefDecl 0x56341c484358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x56341c41d0a0 'long'
|-TypedefDecl 0x56341c4843c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x56341c41d080 'int'
|-TypedefDecl 0x56341c484438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x56341c41d080 'int'
|-TypedefDecl 0x56341c4844a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x56341c41d080 'int'
|-TypedefDecl 0x56341c484518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x56341c41d7a0 'void *'
|   `-BuiltinType 0x56341c41cfe0 'void'
|-TypedefDecl 0x56341c484588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x56341c41d0a0 'long'
|-TypedefDecl 0x56341c4845f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x56341c41d0a0 'long'
|-TypedefDecl 0x56341c484668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x56341c41d0a0 'long'
|-TypedefDecl 0x56341c4846d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x56341c41d140 'unsigned long'
|-TypedefDecl 0x56341c484748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x56341c41d140 'unsigned long'
|-TypedefDecl 0x56341c4847b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x56341c41d140 'unsigned long'
|-TypedefDecl 0x56341c484828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x56341c41d140 'unsigned long'
|-TypedefDecl 0x56341c484898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x56341c41d0a0 'long'
|-TypedefDecl 0x56341c484908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x56341c41d0a0 'long'
|-TypedefDecl 0x56341c484978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x56341c41d0a0 'long'
|-TypedefDecl 0x56341c4849e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x56341c41d140 'unsigned long'
|-TypedefDecl 0x56341c484a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x56341c484a40 '__off64_t' sugar
|   |-Typedef 0x56341c483d68 '__off64_t'
|   `-BuiltinType 0x56341c41d0a0 'long'
|-TypedefDecl 0x56341c484b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x56341c484b30 '__quad_t *'
|   `-TypedefType 0x56341c484ad0 '__quad_t' sugar
|     |-Typedef 0x56341c4838e8 '__quad_t'
|     `-BuiltinType 0x56341c41d0a0 'long'
|-TypedefDecl 0x56341c484be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x56341c41dc20 'char *'
|   `-BuiltinType 0x56341c41d020 'char'
|-TypedefDecl 0x56341c484c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x56341c41d0a0 'long'
|-TypedefDecl 0x56341c484cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x56341c41d120 'unsigned int'
|-FunctionDecl 0x56341c484e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x56341c484d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x56341c485148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x56341c485138 <line:73:3, col:34>
|     `-CallExpr 0x56341c4850f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x56341c4850e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56341c485070 <col:10> '<builtin fn type>' Function 0x56341c484ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x56341c485120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56341c485090 <col:29> 'unsigned int' lvalue ParmVar 0x56341c484d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x56341c484ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x56341c484f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x56341c484ff0 <col:10> Implicit
| `-ConstAttr 0x56341c485048 <col:10> Implicit
|-FunctionDecl 0x56341c4852a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x56341c485198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x56341c4855b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x56341c4855a8 <line:78:3, col:34>
|     `-CallExpr 0x56341c485568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x56341c485550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56341c4854d8 <col:10> '<builtin fn type>' Function 0x56341c485348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x56341c485590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x56341c4854f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x56341c485198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x56341c485348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x56341c4853e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x56341c485458 <col:10> Implicit
| `-ConstAttr 0x56341c4854b0 <col:10> Implicit
|-TypedefDecl 0x56341c4855e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x56341c41d140 'unsigned long'
|-TypedefDecl 0x56341c485678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x56341c485640 '__time_t' sugar
|   |-Typedef 0x56341c484278 '__time_t'
|   `-BuiltinType 0x56341c41d0a0 'long'
|-RecordDecl 0x56341c4856d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x56341c485788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x56341c485818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x56341c4858a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x56341c485870 '__pid_t' sugar
|   |-Typedef 0x56341c483dd8 '__pid_t'
|   `-BuiltinType 0x56341c41d080 'int'
|-RecordDecl 0x56341c485900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x56341c4859c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x56341c485a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x56341c485ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x56341c485b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x56341c41d140 'unsigned long'
|-RecordDecl 0x56341c485b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x56341c487e70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x56341c487f20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x56341c487ec0 'struct cpu_set_t' sugar
|   `-RecordType 0x56341c485c10 'cpu_set_t'
|     `-Record 0x56341c485b90 ''
|-FunctionDecl 0x56341c4881f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x56341c487fc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56341c4880d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x56341c4882a8 <line:108:19>
|-FunctionDecl 0x56341c488480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x56341c488310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x56341c488528 <col:69>
|-FunctionDecl 0x56341c4886a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x56341c488590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x56341c488748 <col:64>
|-FunctionDecl 0x56341c488a08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x56341c4887b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56341c4888e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56341c488ab8 <line:114:22>
|-FunctionDecl 0x56341c488e60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x56341c488b20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56341c488c18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x56341c488f10 <col:88>
|-FunctionDecl 0x56341c4891c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56341c488f78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56341c488ff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x56341c489088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56341c489280 <col:62>
|-FunctionDecl 0x56341c4893f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x56341c4892e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x56341c4894a0 <col:63>
|-FunctionDecl 0x56341c4895c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x56341c489668 <col:47>
|-FunctionDecl 0x56341c489770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x56341c4896d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56341c489818 <col:69>
|-FunctionDecl 0x56341c489920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x56341c489888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56341c4899c8 <col:69>
|-FunctionDecl 0x56341c489c88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56341c489a30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56341c489b68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x56341c489d38 <col:88>
|-TypedefDecl 0x56341c489dc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x56341c489d90 '__clock_t' sugar
|   |-Typedef 0x56341c4840b8 '__clock_t'
|   `-BuiltinType 0x56341c41d0a0 'long'
|-TypedefDecl 0x56341c48a7e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x56341c489e20 '__clockid_t' sugar
|   |-Typedef 0x56341c4844a8 '__clockid_t'
|   `-BuiltinType 0x56341c41d080 'int'
|-TypedefDecl 0x56341c48a878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x56341c48a840 '__timer_t' sugar
|   |-Typedef 0x56341c484518 '__timer_t'
|   `-PointerType 0x56341c41d7a0 'void *'
|     `-BuiltinType 0x56341c41cfe0 'void'
|-RecordDecl 0x56341c48a8d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x56341c48a990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x56341c48a9f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x56341c48aa60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x56341c48aac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x56341c48ab30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x56341c48ab98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x56341c48ac00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x56341c48ac68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x56341c48acd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x56341c48ad38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x56341c48ada0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x56341c48adf0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x56341c48aeb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x56341c48af28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x56341c48afd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x56341c48b1a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x56341c48b240 <col:45>
|-FunctionDecl 0x56341c48b420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x56341c48b310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x56341c48b4c8 <col:54>
|-FunctionDecl 0x56341c48b6c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x56341c48b530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x56341c48b5a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x56341c48b778 <line:158:22>
| `-ConstAttr 0x56341c48c410 <col:63>
|-FunctionDecl 0x56341c48c610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56341c48c508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56341c48c6b8 <col:56>
|-FunctionDecl 0x56341c48ca60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x56341c48c728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x56341c48c7a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56341c48c820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x56341c48c918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x56341c48cb20 <col:54>
|-RecordDecl 0x56341c48cb78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x56341c48cc28 parent 0x56341c41cf88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x56341c48ce88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x56341c48cf28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x56341c48cf90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x56341c48cff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x56341c48d0e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x56341c48d208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x56341c48d1b0 'struct __locale_struct *'
|   `-ElaboratedType 0x56341c48d140 'struct __locale_struct' sugar
|     `-RecordType 0x56341c48cc00 'struct __locale_struct'
|       `-Record 0x56341c48cb78 '__locale_struct'
|-TypedefDecl 0x56341c48d2b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x56341c48d280 '__locale_t' sugar
|   |-Typedef 0x56341c48d208 '__locale_t'
|   `-PointerType 0x56341c48d1b0 'struct __locale_struct *'
|     `-ElaboratedType 0x56341c48d140 'struct __locale_struct' sugar
|       `-RecordType 0x56341c48cc00 'struct __locale_struct'
|         `-Record 0x56341c48cb78 '__locale_struct'
|-FunctionDecl 0x56341c48d6b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x56341c48d328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x56341c48d3a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56341c48d438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x56341c48d4c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56341c48d540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x56341c48d778 <col:40>
|-FunctionDecl 0x56341c48d968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56341c48d840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x56341c48da10 <col:66>
|-FunctionDecl 0x56341c48db20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56341c48da78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x56341c48dbc8 <col:69>
|-FunctionDecl 0x56341c48ddf8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56341c48dc30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56341c48dcc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56341c48dea8 <col:52>
|-FunctionDecl 0x56341c48e050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56341c48df10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56341c48dfa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56341c48e100 <col:55>
|-FunctionDecl 0x56341c48e298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x56341c48e180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x56341c48e340 <col:62>
|-FunctionDecl 0x56341c48e578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x56341c48e3a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x56341c48e620 <col:60>
|-FunctionDecl 0x56341c48e848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56341c48e6a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56341c48e720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x56341c48e8f8 <col:44>
|-FunctionDecl 0x56341c48eb08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56341c48e960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56341c48e9e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x56341c48ebb8 <col:49>
|-VarDecl 0x56341c48ecb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x56341c48ed38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x56341c48edb8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x56341c48ee80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x56341c48efb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x56341c48f050 <col:42>
|-VarDecl 0x56341c48f0c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x56341c48f140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x56341c48f2c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x56341c48f1b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x56341c48f370 <col:57>
|-FunctionDecl 0x56341c4904f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56341c48f3f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56341c490598 <col:56>
|-FunctionDecl 0x56341c4906a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56341c490618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x56341c490750 <col:59>
|-FunctionDecl 0x56341c490858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x56341c4907c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x56341c490900 <col:48>
| `-ConstAttr 0x56341c490958 <col:89>
|-FunctionDecl 0x56341c490bb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56341c490a08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x56341c490a98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x56341c490e18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56341c490ca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56341c490d38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x56341c490ec8 <col:88>
|-FunctionDecl 0x56341c491060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56341c490f30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56341c490fc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x56341c491110 <col:88>
|-FunctionDecl 0x56341c491328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x56341c491178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56341c491208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x56341c4913d8 <line:209:22>
|-FunctionDecl 0x56341c491778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56341c491440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56341c491500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x56341c491590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x56341c491620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x56341c491a78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x56341c491878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x56341c491950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x56341c491b28 <col:85>
|-FunctionDecl 0x56341c491f18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x56341c491b90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56341c491cc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x56341c491dd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x56341c491fd0 <col:52>
|-FunctionDecl 0x56341c492148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x56341c492038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56341c4921f0 <col:61>
|-FunctionDecl 0x56341c492668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x56341c492258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56341c4922d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x56341c492408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x56341c492510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x56341c492728 <col:62>
|-FunctionDecl 0x56341c492948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x56341c492790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56341c492820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x56341c4929f8 <line:222:22>
|-FunctionDecl 0x56341c492af8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x56341c492a60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56341c492ba0 <col:65>
|-TypedefDecl 0x56341c492c10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x56341c41d140 'unsigned long'
|-RecordDecl 0x56341c492c68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x56341c492db0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56341c492e18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56341c492ec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x56341c492e70 'union pthread_attr_t' sugar
|   `-RecordType 0x56341c492cf0 'union pthread_attr_t'
|     `-Record 0x56341c492c68 'pthread_attr_t'
|-RecordDecl 0x56341c492f20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x56341c493098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x56341c493110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x56341c4931c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x56341c493160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x56341c492fa0 'struct __pthread_internal_list'
|     `-Record 0x56341c492f20 '__pthread_internal_list'
|-RecordDecl 0x56341c493230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x56341c4932d8 parent 0x56341c41cf88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x56341c4933b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56341c493418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x56341c493480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x56341c497530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x56341c497598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x56341c497600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x56341c497688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x56341c497740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x56341c497830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x56341c497898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56341c497a20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x56341c4979c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x56341c4932b0 'pthread_mutex_t'
|     `-Record 0x56341c493230 ''
|-RecordDecl 0x56341c497a90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x56341c497bd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56341c497c38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56341c497cf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x56341c497c90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x56341c497b10 'pthread_mutexattr_t'
|     `-Record 0x56341c497a90 ''
|-RecordDecl 0x56341c497d60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x56341c497e08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x56341c497ed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56341c497f38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x56341c497fa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x56341c498008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x56341c498070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x56341c4980d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x56341c498140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x56341c4981a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x56341c498260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi008_power.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/rfi008_power.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x56341c498350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x56341c4983b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x56341c498540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x56341c498490 'union pthread_cond_t' sugar
|   `-RecordType 0x56341c497de0 'pthread_cond_t'
|     `-Record 0x56341c497d60 ''
|-RecordDecl 0x56341c4985b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x56341c4986b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56341c498718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56341c4987d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x56341c498770 'union pthread_condattr_t' sugar
|   `-RecordType 0x56341c498630 'pthread_condattr_t'
|     `-Record 0x56341c4985b0 ''
|-TypedefDecl 0x56341c498858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x56341c41d120 'unsigned int'
|-TypedefDecl 0x56341c4988c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x56341c41d080 'int'
|-RecordDecl 0x56341c498920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x56341c4989c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x56341c498a90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56341c498af8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x56341c498b60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x56341c498bc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x56341c498c30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x56341c498c98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x56341c498d00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x56341c498d68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x56341c498dd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x56341c498e38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x56341c498ea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x56341c498f50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi008_power.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/rfi008_power.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x56341c498ff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56341c499060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56341c4991b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x56341c499150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x56341c4989a0 'pthread_rwlock_t'
|     `-Record 0x56341c498920 ''
|-RecordDecl 0x56341c499220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x56341c499360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x56341c4993c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56341c499480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x56341c499420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x56341c4992a0 'pthread_rwlockattr_t'
|     `-Record 0x56341c499220 ''
|-TypedefDecl 0x56341c49b560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x56341c41d084 'volatile int' volatile
|   `-BuiltinType 0x56341c41d080 'int'
|-RecordDecl 0x56341c49b5b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x56341c49b700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x56341c49b768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56341c49b820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x56341c49b7c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x56341c49b640 'pthread_barrier_t'
|     `-Record 0x56341c49b5b8 ''
|-RecordDecl 0x56341c49b890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x56341c49b990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56341c49b9f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56341c49bab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x56341c49ba50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x56341c49b910 'pthread_barrierattr_t'
|     `-Record 0x56341c49b890 ''
|-TypedefDecl 0x56341c49bbc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x56341c49bb60 'long [8]' 8 
|   `-BuiltinType 0x56341c41d0a0 'long'
|-EnumDecl 0x56341c49bc20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x56341c49bce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x56341c49bd38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x56341c49bd88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x56341c49be58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x56341c49bea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x56341c49bef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x56341c49bf48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x56341c49bfd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x56341c49bfb8 <col:26> 'int'
| |   `-DeclRefExpr 0x56341c49bf98 <col:26> 'int' EnumConstant 0x56341c49be58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x56341c49c058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x56341c49c040 <col:29> 'int'
| |   `-DeclRefExpr 0x56341c49c020 <col:29> 'int' EnumConstant 0x56341c49bea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x56341c49c0e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x56341c49c0c8 <col:30> 'int'
| |   `-DeclRefExpr 0x56341c49c0a8 <col:30> 'int' EnumConstant 0x56341c49bef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x56341c49c168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x56341c49c150 <col:27> 'int'
|     `-DeclRefExpr 0x56341c49c130 <col:27> 'int' EnumConstant 0x56341c49bfd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x56341c49c1b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x56341c49c288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x56341c49c310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x56341c49c2f8 <col:30> 'int'
| |   `-DeclRefExpr 0x56341c49c2d8 <col:30> 'int' EnumConstant 0x56341c49c288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x56341c49c360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x56341c49c3e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x56341c49c3d0 <col:29> 'int'
|     `-DeclRefExpr 0x56341c49c3b0 <col:29> 'int' EnumConstant 0x56341c49c360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x56341c49c438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x56341c49c508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x56341c49c570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x56341c49c5c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x56341c49c610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x56341c49c6d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x56341c49c728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x56341c49c778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x56341c49c800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x56341c49c7e8 <col:31> 'int'
|     `-DeclRefExpr 0x56341c49c7c8 <col:31> 'int' EnumConstant 0x56341c49c6d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x56341c49c850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x56341c49c918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x56341c49c968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x56341c49c9b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x56341c49ca88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x56341c49cad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x56341c49cb28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x56341c49cbf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x56341c49cc48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x56341c49cc98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x56341c49ced8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x56341c49cf40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x56341c49cfa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x56341c49d0c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x56341c49d118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x56341c49d1e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x56341c49d238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x56341c49d288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x56341c49d358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x56341c49d3a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x56341c49d9d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x56341c49d4a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x56341c49d5c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56341c49d7c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x56341c49d840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x56341c49da98 <col:47>
| |-NonNullAttr 0x56341c49daf0 <col:77, col:94> 1 3
| `-CallbackAttr 0x56341c49db28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x56341c49dc50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x56341c49db80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x56341c49dea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x56341c49dd08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x56341c49dd88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x56341c49e078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x56341c49df68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x56341c49e120 <col:60>
|-FunctionDecl 0x56341c49e270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x56341c49e310 <col:54>
| `-ConstAttr 0x56341c49e368 <col:95>
|-FunctionDecl 0x56341c49eda0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x56341c49e3a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56341c49e418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x56341c49ee50 <line:395:19>
| `-ConstAttr 0x56341c49eea8 <col:60>
|-FunctionDecl 0x56341c49f078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56341c49ef40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56341c49f120 <col:71>
| `-NonNullAttr 0x56341c49f178 <col:112, col:126> 1
|-FunctionDecl 0x56341c49f280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56341c49f1c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56341c49f328 <line:398:22>
| `-NonNullAttr 0x56341c49f380 <col:63, col:77> 1
|-FunctionDecl 0x56341c49f5a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x56341c49f3c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56341c49f448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x56341c49f658 <line:401:22>
| `-NonNullAttr 0x56341c49f6b0 <col:63, col:80> 1 2
|-FunctionDecl 0x56341c49f8b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56341c49f6f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56341c49f778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x56341c49f968 <line:404:22>
| `-NonNullAttr 0x56341c49f9c0 <col:63, col:77> 1
|-FunctionDecl 0x56341c49fc18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x56341c49fa08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56341c49fab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x56341c49fcc8 <line:407:22>
| `-NonNullAttr 0x56341c49fd20 <col:63, col:80> 1 2
|-FunctionDecl 0x56341c4a0f78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56341c4a0dc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56341c4a0e38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56341c4a1028 <line:410:22>
| `-NonNullAttr 0x56341c4a1080 <col:63, col:77> 1
|-FunctionDecl 0x56341c4a12b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56341c4a10c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56341c4a1158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56341c4a1368 <line:413:22>
| `-NonNullAttr 0x56341c4a13c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56341c4a15f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56341c4a1408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x56341c4a1498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x56341c4a16a8 <col:37>
| `-NonNullAttr 0x56341c4a1700 <col:78, col:95> 1 2
|-FunctionDecl 0x56341c4a18e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56341c4a1748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56341c4a17c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x56341c4a1998 <line:419:22>
| `-NonNullAttr 0x56341c4a19f0 <col:63, col:80> 1 2
|-FunctionDecl 0x56341c4a1b78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56341c4a1a38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56341c4a1ab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x56341c4a1c28 <line:421:22>
| `-NonNullAttr 0x56341c4a1c80 <col:63, col:77> 1
|-FunctionDecl 0x56341c4a2e58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56341c4a1cc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56341c4a1d48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x56341c4a2f08 <line:424:22>
| `-NonNullAttr 0x56341c4a2f60 <col:63, col:80> 1 2
|-FunctionDecl 0x56341c4a30e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56341c4a2fa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56341c4a3028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x56341c4a3198 <line:427:22>
| `-NonNullAttr 0x56341c4a31f0 <col:63, col:77> 1
|-FunctionDecl 0x56341c4a3398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56341c4a3238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56341c4a32b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56341c4a3448 <line:430:22>
| `-NonNullAttr 0x56341c4a34a0 <col:63, col:80> 1 2
|-FunctionDecl 0x56341c4a3628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56341c4a34e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56341c4a3568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x56341c4a36d8 <line:432:22>
| `-NonNullAttr 0x56341c4a3730 <col:63, col:77> 1
|-FunctionDecl 0x56341c4a3958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x56341c4a3778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56341c4a37f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x56341c4a3a08 <line:435:22>
| |-NonNullAttr 0x56341c4a3a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x56341c4a3a98 <col:100> "" ""
|-FunctionDecl 0x56341c4a3ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x56341c4a3ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56341c4a3b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x56341c4a3d58 <line:438:22>
| |-NonNullAttr 0x56341c4a3db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x56341c4a3df8 <col:97> "" ""
|-FunctionDecl 0x56341c4a3fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56341c4a3e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56341c4a3ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56341c4a4098 <line:441:22>
| `-NonNullAttr 0x56341c4a40f0 <col:63, col:80> 1 2
|-FunctionDecl 0x56341c4a4270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56341c4a4138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56341c4a41b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56341c4a4320 <line:444:22>
| `-NonNullAttr 0x56341c4a4378 <col:63, col:77> 1
|-FunctionDecl 0x56341c4a4668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56341c4a43c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56341c4a4448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x56341c4a44c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56341c4a4720 <line:448:22>
| `-NonNullAttr 0x56341c4a4778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x56341c4a4a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x56341c4a47d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56341c4a4850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x56341c4a48c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56341c4a4ae0 <col:43>
| `-NonNullAttr 0x56341c4a4b38 <col:84, col:98> 1
|-FunctionDecl 0x56341c4a4e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56341c4a4b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56341c4a4c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x56341c4a4c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x56341c4a4ef8 <line:453:22>
| `-NonNullAttr 0x56341c4a4f50 <col:63, col:77> 3
|-FunctionDecl 0x56341c4a5228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56341c4a4f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56341c4a5018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x56341c4a50a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56341c4a52e0 <line:457:22>
| `-NonNullAttr 0x56341c4a5338 <col:63, col:80> 2 3
|-FunctionDecl 0x56341c4a5528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x56341c4a5388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56341c4a5408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x56341c4a55d8 <line:459:22>
|-FunctionDecl 0x56341c4a59a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x56341c4a56a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x56341c4a5840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x56341c4a5a58 <col:52, col:69> 1 2
|-FunctionDecl 0x56341c4a5c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x56341c4a5ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x56341c4a5b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x56341c4a5e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x56341c4a5cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x56341c4a5d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x56341c4a5f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x56341c4a5ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x56341c4a60a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x56341c4a6148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x56341c4a61f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x56341c4a62e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x56341c4a6350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x56341c4a6520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/rfi008_power.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x56341c4a6618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x56341c4a66d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x56341c4a6670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x56341c4a61d0 '__pthread_unwind_buf_t'
| |   `-Record 0x56341c4a6148 ''
| `-AlignedAttr 0x56341c4a6728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x56341c4a67a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x56341c4a6900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x56341c4a6968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x56341c4a69d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x56341c4a6a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x56341c4a6c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56341c4a6b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56341c4a6e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56341c4a6cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56341c4a6fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56341c4a6ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x56341c4a7088 <line:488:22>
|-RecordDecl 0x56341c4a70e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x56341c4a73f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x56341c4a7258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x56341c4a72d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x56341c4a74a8 <col:86>
| `-ReturnsTwiceAttr 0x56341c4a7500 <col:12> Implicit
|-FunctionDecl 0x56341c4a7828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56341c4a75d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x56341c4a76e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x56341c4a78d8 <line:494:22>
| `-NonNullAttr 0x56341c4a7930 <col:63, col:77> 1
|-FunctionDecl 0x56341c4a7aa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56341c4a7978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56341c4a7b50 <line:496:22>
| `-NonNullAttr 0x56341c4a7ba8 <col:63, col:77> 1
|-FunctionDecl 0x56341c4a7cb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56341c4a7bf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56341c4a7d58 <line:498:22>
| `-NonNullAttr 0x56341c4a7db0 <col:52, col:66> 1
|-FunctionDecl 0x56341c4a7ee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56341c4a7e30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56341c4a7f90 <line:500:22>
| `-NonNullAttr 0x56341c4a7fe8 <col:52, col:66> 1
|-FunctionDecl 0x56341c4a8228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56341c4a8038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56341c4a80c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56341c4a82d8 <col:36>
| `-NonNullAttr 0x56341c4a8330 <col:66, col:83> 1 2
|-FunctionDecl 0x56341c4a8430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56341c4a8378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56341c4a84d8 <line:505:22>
| `-NonNullAttr 0x56341c4a8530 <col:52, col:66> 1
|-FunctionDecl 0x56341c4a87c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56341c4a85e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56341c4a8660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56341c4a8878 <line:509:22>
| `-NonNullAttr 0x56341c4a88d0 <col:63, col:80> 1 2
|-FunctionDecl 0x56341c4a8b98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x56341c4a8918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56341c4a8998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x56341c4a8a18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x56341c4a8c50 <line:513:22>
| `-NonNullAttr 0x56341c4a8ca8 <col:63, col:80> 1 3
|-FunctionDecl 0x56341c4a8e40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56341c4a8cf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56341c4a8ee8 <line:515:22>
| `-NonNullAttr 0x56341c4a8f40 <col:63, col:77> 1
|-FunctionDecl 0x56341c4a9128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56341c4a8ff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56341c4a91d0 <line:517:22>
| `-NonNullAttr 0x56341c4a9228 <col:63, col:77> 1
|-FunctionDecl 0x56341c4a9330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56341c4a9278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56341c4a93d8 <line:519:22>
| `-NonNullAttr 0x56341c4a9430 <col:63, col:77> 1
|-FunctionDecl 0x56341c4a9658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56341c4a9478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56341c4a94f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x56341c4a9708 <line:523:22>
| `-NonNullAttr 0x56341c4a9760 <col:63, col:80> 1 2
|-FunctionDecl 0x56341c4a9968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56341c4a97a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56341c4a9828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x56341c4a9a18 <line:526:22>
| `-NonNullAttr 0x56341c4a9a70 <col:63, col:77> 1
|-FunctionDecl 0x56341c4a9c18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56341c4a9ab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56341c4a9b38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x56341c4a9cc8 <line:529:22>
| `-NonNullAttr 0x56341c4a9d20 <col:63, col:80> 1 2
|-FunctionDecl 0x56341c4aaf20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56341c4a9d68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56341c4aae60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x56341c4aafd0 <line:531:22>
| `-NonNullAttr 0x56341c4ab028 <col:63, col:77> 1
|-FunctionDecl 0x56341c4ab1d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56341c4ab078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56341c4ab0f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x56341c4ab288 <line:535:22>
| `-NonNullAttr 0x56341c4ab2e0 <col:63, col:80> 1 2
|-FunctionDecl 0x56341c4ab468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56341c4ab328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56341c4ab3a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x56341c4ab518 <line:538:22>
| `-NonNullAttr 0x56341c4ab570 <col:63, col:77> 1
|-FunctionDecl 0x56341c4ab718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56341c4ab5b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56341c4ab638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56341c4ab7c8 <line:542:22>
| `-NonNullAttr 0x56341c4ab820 <col:63, col:80> 1 2
|-FunctionDecl 0x56341c4ab9a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56341c4ab868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56341c4ab8e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x56341c4aba58 <line:545:22>
| `-NonNullAttr 0x56341c4abab0 <col:63, col:77> 1
|-FunctionDecl 0x56341c4abc98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x56341c4abaf8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x56341c4abb78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x56341c4abd48 <line:548:22>
| `-NonNullAttr 0x56341c4abda0 <col:63, col:80> 1 2
|-FunctionDecl 0x56341c4acf58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56341c4abde8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56341c4ace98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x56341c4ad008 <line:551:22>
| `-NonNullAttr 0x56341c4ad060 <col:63, col:77> 1
|-FunctionDecl 0x56341c4ad398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x56341c4ad140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56341c4ad250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x56341c4ad448 <col:29>
| `-NonNullAttr 0x56341c4ad4a0 <col:70, col:84> 1
|-FunctionDecl 0x56341c4ad618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56341c4ad4e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56341c4ad6c0 <line:556:22>
| `-NonNullAttr 0x56341c4ad718 <col:63, col:77> 1
|-FunctionDecl 0x56341c4ad820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56341c4ad768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56341c4ad8c8 <line:558:22>
| `-NonNullAttr 0x56341c4ad920 <col:52, col:66> 1
|-FunctionDecl 0x56341c4ada20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56341c4ad968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56341c4adac8 <line:560:19>
| `-NonNullAttr 0x56341c4adb20 <col:49, col:63> 1
|-FunctionDecl 0x56341c4add58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56341c4adb68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56341c4adbf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56341c4ade08 <col:39>
| `-NonNullAttr 0x56341c4ade90 <col:69, col:86> 1 2
|-FunctionDecl 0x56341c4adf90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56341c4aded8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56341c4ae038 <line:565:22>
| `-NonNullAttr 0x56341c4ae090 <col:52, col:66> 1
|-FunctionDecl 0x56341c4ae190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56341c4ae0d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56341c4ae238 <line:567:22>
| `-NonNullAttr 0x56341c4ae290 <col:52, col:66> 1
|-FunctionDecl 0x56341c4ae448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56341c4ae2d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56341c4ae368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56341c4ae4f8 <col:39>
| `-NonNullAttr 0x56341c4ae550 <col:69, col:86> 1 2
|-FunctionDecl 0x56341c4ae650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56341c4ae598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56341c4ae6f8 <line:572:22>
| `-NonNullAttr 0x56341c4ae750 <col:52, col:66> 1
|-FunctionDecl 0x56341c4ae938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56341c4ae800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56341c4ae9e0 <line:574:22>
| `-NonNullAttr 0x56341c4aea38 <col:63, col:77> 1
|-FunctionDecl 0x56341c4aeb40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56341c4aea88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56341c4aebe8 <line:576:22>
| `-NonNullAttr 0x56341c4aec40 <col:63, col:77> 1
|-FunctionDecl 0x56341c4aeea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56341c4aec88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56341c4aed08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x56341c4aef50 <line:580:22>
| `-NonNullAttr 0x56341c4aefa8 <col:63, col:80> 1 2
|-FunctionDecl 0x56341c4af1b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56341c4aeff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56341c4af078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x56341c4af268 <line:583:22>
| `-NonNullAttr 0x56341c4af2c0 <col:63, col:77> 1
|-FunctionDecl 0x56341c4af468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56341c4af308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56341c4af388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x56341c4af518 <line:587:22>
| `-NonNullAttr 0x56341c4af570 <col:63, col:80> 1 2
|-FunctionDecl 0x56341c4af6f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56341c4af5b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56341c4af638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x56341c4af7a8 <col:36>
| `-NonNullAttr 0x56341c4af800 <col:77, col:91> 1
|-FunctionDecl 0x56341c4afb38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x56341c4af8e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56341c4af9f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x56341c4afbe8 <line:592:22>
| `-NonNullAttr 0x56341c4afc40 <col:63, col:77> 1
|-FunctionDecl 0x56341c4afdb8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56341c4afc88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56341c4afe60 <line:594:22>
| `-NonNullAttr 0x56341c4afee0 <col:63, col:77> 1
|-FunctionDecl 0x56341c4affe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56341c4aff28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56341c4b0088 <line:596:22>
| `-NonNullAttr 0x56341c4b00e0 <col:52, col:66> 1
|-FunctionDecl 0x56341c4b01e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56341c4b0128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56341c4b0288 <line:598:22>
| `-NonNullAttr 0x56341c4b02e0 <col:52, col:66> 1
|-FunctionDecl 0x56341c4b0508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x56341c4b0328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56341c4b03a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x56341c4b05b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x56341c4b08e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56341c4b0638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56341c4b06b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56341c4b0740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x56341c4b09a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x56341c4b0bb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56341c4b0a80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56341c4b0c60 <line:607:22>
| `-NonNullAttr 0x56341c4b0cb8 <col:63, col:77> 1
|-FunctionDecl 0x56341c4b0dc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56341c4b0d08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56341c4b0e68 <line:609:22>
| `-NonNullAttr 0x56341c4b0ef0 <col:63, col:77> 1
|-FunctionDecl 0x56341c4b1118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56341c4b0f38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56341c4b0fb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x56341c4b11c8 <line:613:22>
| `-NonNullAttr 0x56341c4b1220 <col:63, col:80> 1 2
|-FunctionDecl 0x56341c4b1428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x56341c4b1268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56341c4b12e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x56341c4b14d8 <col:37>
| `-NonNullAttr 0x56341c4b1530 <col:78, col:92> 1
|-FunctionDecl 0x56341c4b1748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x56341c4b1578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56341c4b1620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x56341c4b17f8 <line:619:22>
| `-NonNullAttr 0x56341c4b1850 <col:63, col:80> 1 2
|-FunctionDecl 0x56341c4b1a18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x56341c4b1898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56341c4b1910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x56341c4b1ac8 <line:622:22>
| `-NonNullAttr 0x56341c4b1b20 <col:63, col:77> 1
|-FunctionDecl 0x56341c4b1dc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x56341c4b1c00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x56341c4b1c80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x56341c4b1e78 <line:624:22>
| `-NonNullAttr 0x56341c4b1f00 <col:63, col:77> 1
|-FunctionDecl 0x56341c4b2078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56341c4b1f48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56341c4b2120 <line:626:22>
| `-NonNullAttr 0x56341c4b2178 <col:63, col:77> 1
|-FunctionDecl 0x56341c4b2280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56341c4b21c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56341c4b2328 <line:628:22>
| `-NonNullAttr 0x56341c4b2380 <col:52, col:66> 1
|-FunctionDecl 0x56341c4b2480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56341c4b23c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56341c4b2528 <line:630:22>
| `-NonNullAttr 0x56341c4b2580 <col:52, col:66> 1
|-FunctionDecl 0x56341c4b2680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56341c4b25c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56341c4b2728 <line:632:22>
| `-NonNullAttr 0x56341c4b2780 <col:52, col:66> 1
|-FunctionDecl 0x56341c4b2b58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x56341c4b2860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x56341c4b2970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56341c4b29f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x56341c4b2c10 <line:636:22>
| `-NonNullAttr 0x56341c4b2c68 <col:63, col:77> 1
|-FunctionDecl 0x56341c4b2de8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56341c4b2cb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56341c4b2e90 <line:638:22>
| `-NonNullAttr 0x56341c4b2f10 <col:63, col:77> 1
|-FunctionDecl 0x56341c4b3010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56341c4b2f58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56341c4b30b8 <line:640:22>
| `-NonNullAttr 0x56341c4b3110 <col:52, col:66> 1
|-FunctionDecl 0x56341c4b32f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56341c4b31c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56341c4b33a0 <line:642:22>
| `-NonNullAttr 0x56341c4b33f8 <col:63, col:77> 1
|-FunctionDecl 0x56341c4b3500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56341c4b3448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56341c4b35a8 <line:644:22>
| `-NonNullAttr 0x56341c4b3600 <col:63, col:77> 1
|-FunctionDecl 0x56341c4b3828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56341c4b3648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56341c4b36c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x56341c4b38d8 <line:648:22>
| `-NonNullAttr 0x56341c4b3930 <col:63, col:80> 1 2
|-FunctionDecl 0x56341c4b3b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x56341c4b3978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x56341c4b39f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x56341c4b3be8 <line:651:22>
| `-NonNullAttr 0x56341c4b3c40 <col:63, col:77> 1
|-FunctionDecl 0x56341c4b3fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x56341c4b3d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x56341c4b3e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x56341c4b4058 <line:654:22>
| `-NonNullAttr 0x56341c4b40b0 <col:63, col:77> 1
|-FunctionDecl 0x56341c4b4208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x56341c4b40f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56341c4b42b0 <col:69>
|-FunctionDecl 0x56341c4b4428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x56341c4b4318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56341c4b44d0 <col:72>
|-FunctionDecl 0x56341c4b4708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x56341c4b4538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x56341c4b45e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x56341c4b47b8 <col:44>
|-FunctionDecl 0x56341c4b49d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x56341c4b4820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56341c4b4898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x56341c4b4a88 <line:661:22>
| `-NonNullAttr 0x56341c4b4ae0 <col:63, col:77> 2
|-FunctionDecl 0x56341c4b5f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x56341c4b4bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x56341c4b4cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x56341c4b4de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x56341c4b6008 <col:47>
|-FunctionDecl 0x56341c4b6110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x56341c4b6078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56341c4b6268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x56341c4b61d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56341c4b6330 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x56341c4b63f0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x56341c4b64b0 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x56341c4b6568 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x56341c4b65e8 prev 0x56341c4b6568 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x56341c4b6650 <col:24> 'int' 0
|-VarDecl 0x56341c4b6688 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x56341c4b6708 prev 0x56341c4b6688 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x56341c4b6770 <col:27> 'int' 0
|-VarDecl 0x56341c4b67a8 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x56341c4b6828 prev 0x56341c4b67a8 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x56341c4b6890 <col:27> 'int' 0
|-VarDecl 0x56341c4b68c8 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x56341c4b6948 prev 0x56341c4b68c8 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x56341c4b69b0 <col:27> 'int' 0
|-VarDecl 0x56341c4b69e8 <line:679:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x56341c4b6a68 prev 0x56341c4b69e8 <line:680:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x56341c4b6ad0 <col:27> 'int' 0
|-VarDecl 0x56341c4b6b00 <line:681:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x56341c4b6b78 <line:682:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x56341c4b6bf8 <line:683:1, col:5> col:5 used x 'int'
|-VarDecl 0x56341c4b6c78 prev 0x56341c4b6bf8 <line:684:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x56341c4b6ce0 <col:9> 'int' 0
|-VarDecl 0x56341c4b6d18 <line:685:1, col:5> col:5 used y 'int'
|-VarDecl 0x56341c4b6d98 prev 0x56341c4b6d18 <line:686:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x56341c4b6e00 <col:9> 'int' 0
|-VarDecl 0x56341c4b6e30 <line:687:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x56341c4b6f20 <line:688:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x56341c4b6f98 <line:689:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x56341c4b7010 <line:690:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x56341c4b7088 <line:691:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x56341c4b7100 <line:692:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x56341c4b7178 <line:693:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x56341c4b71f0 <line:694:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x56341c4b7268 <line:695:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x56341c4b72e8 <line:696:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x56341c4b7368 <line:697:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x56341c4b73e0 <line:698:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x56341c4b7460 <line:699:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x56341c4b74d8 <line:700:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x56341c4b7550 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x56341c4b75c8 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x56341c4b76e0 prev 0x56341c4b6110 <line:703:1, line:733:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x56341c4b7648 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56341c4ba778 <line:704:1, line:733:1>
|   |-CallExpr 0x56341c4b77f8 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56341c4b77e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56341c4b7788 <col:3> 'void ()' Function 0x56341c45d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56341c4b7858 <line:706:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56341c4b7818 <col:3> 'int' lvalue Var 0x56341c4b6c78 'x' 'int'
|   | `-IntegerLiteral 0x56341c4b7838 <col:7> 'int' 1
|   |-CallExpr 0x56341c4b78b0 <line:707:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56341c4b7898 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56341c4b7878 <col:3> 'void ()' Function 0x56341c45d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56341c4b7908 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56341c4b78f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56341c4b78d0 <col:3> 'void ()' Function 0x56341c45d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56341c4b7980 <line:709:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56341c4b7928 <col:3> 'int' lvalue Var 0x56341c4b6708 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x56341c4b7968 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56341c4b7948 <col:25> 'int' lvalue Var 0x56341c4b6c78 'x' 'int'
|   |-CallExpr 0x56341c4b79d8 <line:710:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56341c4b79c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56341c4b79a0 <col:3> 'void ()' Function 0x56341c45d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56341c4b7a30 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56341c4b7a18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56341c4b79f8 <col:3> 'void ()' Function 0x56341c45d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56341c4b7af8 <line:712:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x56341c4b7a50 <col:3> '_Bool' lvalue Var 0x56341c4b7550 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x56341c4b7ad8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x56341c4b7ac0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x56341c4b7a70 <col:19> '_Bool (void)' Function 0x56341c45cc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x56341c4b7b90 <line:713:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x56341c4b7b18 <col:3> '_Bool' lvalue Var 0x56341c4b75c8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x56341c4b7b70 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x56341c4b7b58 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x56341c4b7b38 <col:19> '_Bool (void)' Function 0x56341c45cc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x56341c4b7c08 <line:714:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56341c4b7bb0 <col:3> '_Bool' lvalue Var 0x56341c4b6e30 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56341c4b7bf0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56341c4b7bd0 <col:21> '_Bool' lvalue Var 0x56341c4b75c8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56341c4b7c80 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56341c4b7c28 <col:3> 'int' lvalue Var 0x56341c4b6f20 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56341c4b7c68 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56341c4b7c48 <col:15> 'int' lvalue Var 0x56341c4b6d98 'y' 'int'
|   |-BinaryOperator 0x56341c4b80d8 <line:716:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x56341c4b7ca0 <col:3> 'int' lvalue Var 0x56341c4b6d98 'y' 'int'
|   | `-ConditionalOperator 0x56341c4b80a8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x56341c4b7eb0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x56341c4b7dd0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x56341c4b7cf8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x56341c4b7ce0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x56341c4b7cc0 <col:8> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x56341c4b7db0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x56341c4b7d48 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x56341c4b7d30 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56341c4b7d10 <col:27> '_Bool' lvalue Var 0x56341c4b7010 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x56341c4b7d98 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x56341c4b7d80 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x56341c4b7d60 <col:46> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x56341c4b7e90 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x56341c4b7e28 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x56341c4b7e10 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x56341c4b7df0 <col:65> '_Bool' lvalue Var 0x56341c4b7010 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x56341c4b7e78 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x56341c4b7e60 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x56341c4b7e40 <col:84> '_Bool' lvalue Var 0x56341c4b7178 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x56341c4b8090 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56341c4b7ed0 <col:101> 'int' lvalue Var 0x56341c4b6d98 'y' 'int'
|   |   `-ParenExpr 0x56341c4b8070 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x56341c4b8040 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x56341c4b7fb0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56341c4b7f68 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56341c4b7f50 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56341c4b7ef0 <col:106> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56341c4b7f98 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56341c4b7f80 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56341c4b7f30 <col:124> '_Bool' lvalue Var 0x56341c4b7010 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x56341c4b8010 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56341c4b7fd0 <col:141> 'int' lvalue Var 0x56341c4b7368 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x56341c4b8028 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56341c4b7ff0 <col:153> 'int' lvalue Var 0x56341c4b7460 'y$w_buff1' 'int'
|   |-BinaryOperator 0x56341c4b85e8 <line:717:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56341c4b80f8 <col:3> 'int' lvalue Var 0x56341c4b7368 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x56341c4b85b8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56341c4b8588 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56341c4b8570 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56341c4b8118 <col:15> '_Bool' lvalue Var 0x56341c4b75c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56341c4b85a0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56341c4b8138 <col:31> 'int' lvalue Var 0x56341c4b7368 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x56341c4b8550 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56341c4b8520 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56341c4b8348 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56341c4b8268 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56341c4b8190 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56341c4b8178 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56341c4b8158 <col:45> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56341c4b8248 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56341c4b81e0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56341c4b81c8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56341c4b81a8 <col:64> '_Bool' lvalue Var 0x56341c4b7010 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x56341c4b8230 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56341c4b8218 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56341c4b81f8 <col:83> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56341c4b8328 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56341c4b82c0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56341c4b82a8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56341c4b8288 <col:102> '_Bool' lvalue Var 0x56341c4b7010 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x56341c4b8310 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56341c4b82f8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56341c4b82d8 <col:121> '_Bool' lvalue Var 0x56341c4b7178 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x56341c4b8508 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56341c4b8368 <col:138> 'int' lvalue Var 0x56341c4b7368 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x56341c4b84e8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56341c4b84b8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56341c4b8428 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56341c4b83e0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56341c4b83c8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56341c4b8388 <col:151> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56341c4b8410 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56341c4b83f8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56341c4b83a8 <col:169> '_Bool' lvalue Var 0x56341c4b7010 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x56341c4b8488 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56341c4b8448 <col:186> 'int' lvalue Var 0x56341c4b7368 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x56341c4b84a0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56341c4b8468 <col:198> 'int' lvalue Var 0x56341c4b7368 'y$w_buff0' 'int'
|   |-BinaryOperator 0x56341c4b8af8 <line:718:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56341c4b8608 <col:3> 'int' lvalue Var 0x56341c4b7460 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x56341c4b8ac8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56341c4b8a98 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56341c4b8a80 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56341c4b8628 <col:15> '_Bool' lvalue Var 0x56341c4b75c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56341c4b8ab0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56341c4b8648 <col:31> 'int' lvalue Var 0x56341c4b7460 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x56341c4b8a60 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56341c4b8a30 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56341c4b8858 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56341c4b8778 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56341c4b86a0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56341c4b8688 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56341c4b8668 <col:45> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56341c4b8758 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56341c4b86f0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56341c4b86d8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56341c4b86b8 <col:64> '_Bool' lvalue Var 0x56341c4b7010 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x56341c4b8740 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56341c4b8728 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56341c4b8708 <col:83> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56341c4b8838 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56341c4b87d0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56341c4b87b8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56341c4b8798 <col:102> '_Bool' lvalue Var 0x56341c4b7010 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x56341c4b8820 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56341c4b8808 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56341c4b87e8 <col:121> '_Bool' lvalue Var 0x56341c4b7178 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x56341c4b8a18 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56341c4b8878 <col:138> 'int' lvalue Var 0x56341c4b7460 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x56341c4b89f8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56341c4b89c8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56341c4b8938 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56341c4b88f0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56341c4b88d8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56341c4b8898 <col:151> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56341c4b8920 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56341c4b8908 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56341c4b88b8 <col:169> '_Bool' lvalue Var 0x56341c4b7010 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x56341c4b8998 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56341c4b8958 <col:186> 'int' lvalue Var 0x56341c4b7460 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x56341c4b89b0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56341c4b8978 <col:198> 'int' lvalue Var 0x56341c4b7460 'y$w_buff1' 'int'
|   |-BinaryOperator 0x56341c4b90b8 <line:719:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56341c4b8b18 <col:3> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56341c4b90a0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56341c4b9070 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56341c4b9028 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56341c4b9010 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56341c4b8b38 <col:20> '_Bool' lvalue Var 0x56341c4b75c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56341c4b9058 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56341c4b9040 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56341c4b8b58 <col:36> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56341c4b8ff0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56341c4b8fc0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56341c4b8d68 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56341c4b8c88 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56341c4b8bb0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56341c4b8b98 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56341c4b8b78 <col:55> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56341c4b8c68 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56341c4b8c00 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56341c4b8be8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56341c4b8bc8 <col:74> '_Bool' lvalue Var 0x56341c4b7010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x56341c4b8c50 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56341c4b8c38 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56341c4b8c18 <col:93> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56341c4b8d48 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56341c4b8ce0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56341c4b8cc8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56341c4b8ca8 <col:112> '_Bool' lvalue Var 0x56341c4b7010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x56341c4b8d30 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56341c4b8d18 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56341c4b8cf8 <col:131> '_Bool' lvalue Var 0x56341c4b7178 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x56341c4b8fa8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56341c4b8f90 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56341c4b8d88 <col:148> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56341c4b8f70 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56341c4b8f40 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56341c4b8e48 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56341c4b8e00 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56341c4b8de8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56341c4b8da8 <col:166> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56341c4b8e30 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56341c4b8e18 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56341c4b8dc8 <col:184> '_Bool' lvalue Var 0x56341c4b7010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x56341c4b8ee0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56341c4b8e98 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56341c4b8e68 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56341c4b8f10 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56341c4b8ef8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56341c4b8ec0 <col:212> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56341c4b9680 <line:720:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56341c4b90d8 <col:3> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56341c4b9668 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56341c4b9638 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56341c4b95f0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56341c4b95d8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56341c4b90f8 <col:20> '_Bool' lvalue Var 0x56341c4b75c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56341c4b9620 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56341c4b9608 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56341c4b9118 <col:36> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56341c4b95b8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56341c4b9588 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56341c4b9328 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56341c4b9248 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56341c4b9170 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56341c4b9158 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56341c4b9138 <col:55> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56341c4b9228 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56341c4b91c0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56341c4b91a8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56341c4b9188 <col:74> '_Bool' lvalue Var 0x56341c4b7010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x56341c4b9210 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56341c4b91f8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56341c4b91d8 <col:93> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56341c4b9308 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56341c4b92a0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56341c4b9288 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56341c4b9268 <col:112> '_Bool' lvalue Var 0x56341c4b7010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x56341c4b92f0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56341c4b92d8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56341c4b92b8 <col:131> '_Bool' lvalue Var 0x56341c4b7178 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x56341c4b9570 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56341c4b9558 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56341c4b9348 <col:148> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56341c4b9538 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56341c4b9508 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56341c4b9408 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56341c4b93c0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56341c4b93a8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56341c4b9368 <col:166> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56341c4b93f0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56341c4b93d8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56341c4b9388 <col:184> '_Bool' lvalue Var 0x56341c4b7010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x56341c4b94d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56341c4b9458 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56341c4b9428 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56341c4b94f0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56341c4b94b0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56341c4b9480 <col:219> 'int' 0
|   |-BinaryOperator 0x56341c4b9c28 <line:721:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56341c4b96a0 <col:3> '_Bool' lvalue Var 0x56341c4b7010 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56341c4b9c10 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56341c4b9be0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56341c4b9b98 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56341c4b9b80 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56341c4b96c0 <col:20> '_Bool' lvalue Var 0x56341c4b75c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56341c4b9bc8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56341c4b9bb0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56341c4b96e0 <col:36> '_Bool' lvalue Var 0x56341c4b7010 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x56341c4b9b60 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56341c4b9b30 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56341c4b98f0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56341c4b9810 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56341c4b9738 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56341c4b9720 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56341c4b9700 <col:55> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56341c4b97f0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56341c4b9788 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56341c4b9770 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56341c4b9750 <col:74> '_Bool' lvalue Var 0x56341c4b7010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x56341c4b97d8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56341c4b97c0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56341c4b97a0 <col:93> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56341c4b98d0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56341c4b9868 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56341c4b9850 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56341c4b9830 <col:112> '_Bool' lvalue Var 0x56341c4b7010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x56341c4b98b8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56341c4b98a0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56341c4b9880 <col:131> '_Bool' lvalue Var 0x56341c4b7178 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x56341c4b9b18 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56341c4b9b00 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56341c4b9910 <col:148> '_Bool' lvalue Var 0x56341c4b7010 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x56341c4b9ae0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56341c4b9ab0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56341c4b99d0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56341c4b9988 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56341c4b9970 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56341c4b9930 <col:166> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56341c4b99b8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56341c4b99a0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56341c4b9950 <col:184> '_Bool' lvalue Var 0x56341c4b7010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x56341c4b9a68 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56341c4b9a20 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56341c4b99f0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56341c4b9a98 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56341c4b9a80 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56341c4b9a48 <col:212> '_Bool' lvalue Var 0x56341c4b7010 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56341c4ba210 <line:722:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56341c4b9c48 <col:3> '_Bool' lvalue Var 0x56341c4b7178 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56341c4ba1f8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56341c4ba1c8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56341c4ba180 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56341c4ba168 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56341c4b9c68 <col:20> '_Bool' lvalue Var 0x56341c4b75c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56341c4ba1b0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56341c4ba198 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56341c4b9c88 <col:36> '_Bool' lvalue Var 0x56341c4b7178 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x56341c4ba148 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56341c4ba118 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56341c4b9e98 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56341c4b9db8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56341c4b9ce0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56341c4b9cc8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56341c4b9ca8 <col:55> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56341c4b9d98 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56341c4b9d30 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56341c4b9d18 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56341c4b9cf8 <col:74> '_Bool' lvalue Var 0x56341c4b7010 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x56341c4b9d80 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56341c4b9d68 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56341c4b9d48 <col:93> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56341c4b9e78 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56341c4b9e10 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56341c4b9df8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56341c4b9dd8 <col:112> '_Bool' lvalue Var 0x56341c4b7010 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x56341c4b9e60 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56341c4b9e48 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56341c4b9e28 <col:131> '_Bool' lvalue Var 0x56341c4b7178 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x56341c4ba100 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56341c4ba0e8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56341c4b9eb8 <col:148> '_Bool' lvalue Var 0x56341c4b7178 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x56341c4ba0c8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56341c4ba098 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56341c4b9f98 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56341c4b9f50 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56341c4b9f18 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56341c4b9ed8 <col:166> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56341c4b9f80 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56341c4b9f68 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56341c4b9ef8 <col:184> '_Bool' lvalue Var 0x56341c4b7010 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x56341c4ba068 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56341c4b9fe8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56341c4b9fb8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56341c4ba080 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56341c4ba040 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56341c4ba010 <col:219> 'int' 0
|   |-BinaryOperator 0x56341c4ba288 <line:723:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56341c4ba230 <col:3> 'int' lvalue Var 0x56341c4b6828 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x56341c4ba270 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56341c4ba250 <col:25> 'int' lvalue Var 0x56341c4b6d98 'y' 'int'
|   |-BinaryOperator 0x56341c4ba3b8 <line:724:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x56341c4ba2a8 <col:3> 'int' lvalue Var 0x56341c4b6d98 'y' 'int'
|   | `-ConditionalOperator 0x56341c4ba388 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x56341c4ba340 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56341c4ba328 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56341c4ba2c8 <col:7> '_Bool' lvalue Var 0x56341c4b6e30 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x56341c4ba358 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56341c4ba2e8 <col:25> 'int' lvalue Var 0x56341c4b6f20 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x56341c4ba370 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x56341c4ba308 <col:37> 'int' lvalue Var 0x56341c4b6d98 'y' 'int'
|   |-BinaryOperator 0x56341c4ba450 <line:725:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x56341c4ba3d8 <col:3> '_Bool' lvalue Var 0x56341c4b6e30 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56341c4ba428 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56341c4ba3f8 <col:28> 'int' 0
|   |-CallExpr 0x56341c4ba4a8 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56341c4ba490 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56341c4ba470 <col:3> 'void ()' Function 0x56341c45d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56341c4ba500 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56341c4ba4e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56341c4ba4c8 <col:3> 'void ()' Function 0x56341c45d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x56341c4ba558 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56341c4ba540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56341c4ba520 <col:3> 'void ()' Function 0x56341c45d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56341c4ba5b0 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56341c4ba598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56341c4ba578 <col:3> 'void ()' Function 0x56341c45d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56341c4ba668 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56341c4ba5d0 <col:3> 'int' lvalue Var 0x56341c4b65e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56341c4ba648 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56341c4ba630 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56341c4ba5f0 <col:22> 'int' lvalue Var 0x56341c4b65e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56341c4ba610 <col:41> 'int' 1
|   |-CallExpr 0x56341c4ba6c0 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56341c4ba6a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56341c4ba688 <col:3> 'void ()' Function 0x56341c45d570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56341c4ba768 <line:732:3, col:36>
|     `-CallExpr 0x56341c4ba748 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56341c4ba730 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56341c4ba6e0 <col:10> 'void *(void)' Function 0x56341c45cfc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56341c4ba918 prev 0x56341c4b6268 <line:734:1, line:777:1> line:734:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x56341c4ba880 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56341c4beb08 <line:735:1, line:777:1>
|   |-CallExpr 0x56341c4ba9f8 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56341c4ba9e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56341c4ba9c0 <col:3> 'void ()' Function 0x56341c45d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56341c4baa70 <line:737:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56341c4baa18 <col:3> 'int' lvalue Var 0x56341c4b7460 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x56341c4baa58 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56341c4baa38 <col:15> 'int' lvalue Var 0x56341c4b7368 'y$w_buff0' 'int'
|   |-BinaryOperator 0x56341c4baad0 <line:738:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56341c4baa90 <col:3> 'int' lvalue Var 0x56341c4b7368 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x56341c4baab0 <col:15> 'int' 1
|   |-BinaryOperator 0x56341c4bab48 <line:739:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56341c4baaf0 <col:3> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56341c4bab30 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56341c4bab10 <col:20> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56341c4babe0 <line:740:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56341c4bab68 <col:3> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x56341c4babb8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56341c4bab88 <col:27> 'int' 1
|   |-CallExpr 0x56341c4bad68 <line:741:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x56341c4bad50 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x56341c4bac00 <col:3> 'void (int)' Function 0x56341c45d238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x56341c4bad00 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x56341c4bace0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x56341c4bacc0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x56341c4bac78 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x56341c4bac60 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x56341c4bac20 <col:23> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x56341c4baca8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x56341c4bac90 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x56341c4bac40 <col:41> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56341c4bade8 <line:742:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56341c4bad90 <col:3> '_Bool' lvalue Var 0x56341c4b7100 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x56341c4badd0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56341c4badb0 <col:20> '_Bool' lvalue Var 0x56341c4b6f98 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x56341c4bae60 <line:743:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56341c4bae08 <col:3> '_Bool' lvalue Var 0x56341c4b7178 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56341c4bae48 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56341c4bae28 <col:20> '_Bool' lvalue Var 0x56341c4b7010 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56341c4baed8 <line:744:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56341c4bae80 <col:3> '_Bool' lvalue Var 0x56341c4b71f0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56341c4baec0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56341c4baea0 <col:20> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56341c4baf88 <line:745:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56341c4baef8 <col:3> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x56341c4baf60 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56341c4baf18 <col:27> 'int' 1
|   |-CallExpr 0x56341c4bafe0 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56341c4bafc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56341c4bafa8 <col:3> 'void ()' Function 0x56341c45d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56341c4bb038 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56341c4bb020 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56341c4bb000 <col:3> 'void ()' Function 0x56341c45d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56341c4bb0d0 <line:748:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x56341c4bb058 <col:3> '_Bool' lvalue Var 0x56341c4b7550 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x56341c4bb0b0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x56341c4bb098 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x56341c4bb078 <col:19> '_Bool (void)' Function 0x56341c45cc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x56341c4bb168 <line:749:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x56341c4bb0f0 <col:3> '_Bool' lvalue Var 0x56341c4b75c8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x56341c4bb148 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x56341c4bb130 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x56341c4bb110 <col:19> '_Bool (void)' Function 0x56341c45cc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x56341c4bb1e0 <line:750:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56341c4bb188 <col:3> '_Bool' lvalue Var 0x56341c4b6e30 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56341c4bb1c8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56341c4bb1a8 <col:21> '_Bool' lvalue Var 0x56341c4b75c8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56341c4bb258 <line:751:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56341c4bb200 <col:3> 'int' lvalue Var 0x56341c4b6f20 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56341c4bb240 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56341c4bb220 <col:15> 'int' lvalue Var 0x56341c4b6d98 'y' 'int'
|   |-BinaryOperator 0x56341c4bb690 <line:752:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x56341c4bb278 <col:3> 'int' lvalue Var 0x56341c4b6d98 'y' 'int'
|   | `-ConditionalOperator 0x56341c4bb660 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x56341c4bb488 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x56341c4bb3a8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x56341c4bb2d0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x56341c4bb2b8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x56341c4bb298 <col:8> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x56341c4bb388 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x56341c4bb320 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x56341c4bb308 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56341c4bb2e8 <col:27> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x56341c4bb370 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x56341c4bb358 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x56341c4bb338 <col:46> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x56341c4bb468 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x56341c4bb400 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x56341c4bb3e8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x56341c4bb3c8 <col:65> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x56341c4bb450 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x56341c4bb438 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x56341c4bb418 <col:84> '_Bool' lvalue Var 0x56341c4b71f0 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x56341c4bb648 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56341c4bb4a8 <col:101> 'int' lvalue Var 0x56341c4b6d98 'y' 'int'
|   |   `-ParenExpr 0x56341c4bb628 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x56341c4bb5f8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x56341c4bb568 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56341c4bb520 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56341c4bb508 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56341c4bb4c8 <col:106> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56341c4bb550 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56341c4bb538 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56341c4bb4e8 <col:124> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56341c4bb5c8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56341c4bb588 <col:141> 'int' lvalue Var 0x56341c4b7368 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x56341c4bb5e0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56341c4bb5a8 <col:153> 'int' lvalue Var 0x56341c4b7460 'y$w_buff1' 'int'
|   |-BinaryOperator 0x56341c4bbba0 <line:753:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56341c4bb6b0 <col:3> 'int' lvalue Var 0x56341c4b7368 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x56341c4bbb70 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56341c4bbb40 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56341c4bbb28 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56341c4bb6d0 <col:15> '_Bool' lvalue Var 0x56341c4b75c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56341c4bbb58 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56341c4bb6f0 <col:31> 'int' lvalue Var 0x56341c4b7368 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x56341c4bbb08 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56341c4bbad8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56341c4bb900 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56341c4bb820 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56341c4bb748 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56341c4bb730 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56341c4bb710 <col:45> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56341c4bb800 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56341c4bb798 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56341c4bb780 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56341c4bb760 <col:64> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x56341c4bb7e8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56341c4bb7d0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56341c4bb7b0 <col:83> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56341c4bb8e0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56341c4bb878 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56341c4bb860 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56341c4bb840 <col:102> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x56341c4bb8c8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56341c4bb8b0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56341c4bb890 <col:121> '_Bool' lvalue Var 0x56341c4b71f0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56341c4bbac0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56341c4bb920 <col:138> 'int' lvalue Var 0x56341c4b7368 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x56341c4bbaa0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56341c4bba70 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56341c4bb9e0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56341c4bb998 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56341c4bb980 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56341c4bb940 <col:151> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56341c4bb9c8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56341c4bb9b0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56341c4bb960 <col:169> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x56341c4bba40 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56341c4bba00 <col:186> 'int' lvalue Var 0x56341c4b7368 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x56341c4bba58 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56341c4bba20 <col:198> 'int' lvalue Var 0x56341c4b7368 'y$w_buff0' 'int'
|   |-BinaryOperator 0x56341c4bc0d0 <line:754:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56341c4bbbc0 <col:3> 'int' lvalue Var 0x56341c4b7460 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x56341c4bc0a0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56341c4bc070 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56341c4bc058 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56341c4bbbe0 <col:15> '_Bool' lvalue Var 0x56341c4b75c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56341c4bc088 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56341c4bbc00 <col:31> 'int' lvalue Var 0x56341c4b7460 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x56341c4bc038 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56341c4bc008 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56341c4bbe10 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56341c4bbd30 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56341c4bbc58 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56341c4bbc40 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56341c4bbc20 <col:45> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56341c4bbd10 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56341c4bbca8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56341c4bbc90 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56341c4bbc70 <col:64> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x56341c4bbcf8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56341c4bbce0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56341c4bbcc0 <col:83> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56341c4bbdf0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56341c4bbd88 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56341c4bbd70 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56341c4bbd50 <col:102> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x56341c4bbdd8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56341c4bbdc0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56341c4bbda0 <col:121> '_Bool' lvalue Var 0x56341c4b71f0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56341c4bbff0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56341c4bbe30 <col:138> 'int' lvalue Var 0x56341c4b7460 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x56341c4bbfd0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56341c4bbfa0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56341c4bbef0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56341c4bbea8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56341c4bbe90 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56341c4bbe50 <col:151> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56341c4bbed8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56341c4bbec0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56341c4bbe70 <col:169> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x56341c4bbf70 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56341c4bbf10 <col:186> 'int' lvalue Var 0x56341c4b7460 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x56341c4bbf88 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56341c4bbf30 <col:198> 'int' lvalue Var 0x56341c4b7460 'y$w_buff1' 'int'
|   |-BinaryOperator 0x56341c4bc678 <line:755:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56341c4bc0f0 <col:3> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56341c4bc660 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56341c4bc630 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56341c4bc5e8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56341c4bc5d0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56341c4bc110 <col:20> '_Bool' lvalue Var 0x56341c4b75c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56341c4bc618 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56341c4bc600 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56341c4bc130 <col:36> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56341c4bc5b0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56341c4bc580 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56341c4bc340 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56341c4bc260 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56341c4bc188 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56341c4bc170 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56341c4bc150 <col:55> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56341c4bc240 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56341c4bc1d8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56341c4bc1c0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56341c4bc1a0 <col:74> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x56341c4bc228 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56341c4bc210 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56341c4bc1f0 <col:93> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56341c4bc320 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56341c4bc2b8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56341c4bc2a0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56341c4bc280 <col:112> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x56341c4bc308 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56341c4bc2f0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56341c4bc2d0 <col:131> '_Bool' lvalue Var 0x56341c4b71f0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x56341c4bc568 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56341c4bc550 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56341c4bc360 <col:148> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56341c4bc530 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56341c4bc500 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56341c4bc420 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56341c4bc3d8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56341c4bc3c0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56341c4bc380 <col:166> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56341c4bc408 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56341c4bc3f0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56341c4bc3a0 <col:184> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x56341c4bc4b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56341c4bc470 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56341c4bc440 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56341c4bc4e8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56341c4bc4d0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56341c4bc498 <col:212> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56341c4bcc40 <line:756:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56341c4bc698 <col:3> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56341c4bcc28 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56341c4bcbf8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56341c4bcbb0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56341c4bcb98 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56341c4bc6b8 <col:20> '_Bool' lvalue Var 0x56341c4b75c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56341c4bcbe0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56341c4bcbc8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56341c4bc6d8 <col:36> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56341c4bcb78 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56341c4bcb48 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56341c4bc8e8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56341c4bc808 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56341c4bc730 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56341c4bc718 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56341c4bc6f8 <col:55> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56341c4bc7e8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56341c4bc780 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56341c4bc768 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56341c4bc748 <col:74> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x56341c4bc7d0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56341c4bc7b8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56341c4bc798 <col:93> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56341c4bc8c8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56341c4bc860 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56341c4bc848 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56341c4bc828 <col:112> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x56341c4bc8b0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56341c4bc898 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56341c4bc878 <col:131> '_Bool' lvalue Var 0x56341c4b71f0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x56341c4bcb30 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56341c4bcb18 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56341c4bc908 <col:148> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56341c4bcaf8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56341c4bcac8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56341c4bc9c8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56341c4bc980 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56341c4bc968 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56341c4bc928 <col:166> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56341c4bc9b0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56341c4bc998 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56341c4bc948 <col:184> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x56341c4bca98 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56341c4bca18 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56341c4bc9e8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56341c4bcab0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56341c4bca70 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56341c4bca40 <col:219> 'int' 0
|   |-BinaryOperator 0x56341c4bd208 <line:757:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56341c4bcc60 <col:3> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56341c4bd1f0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56341c4bd1c0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56341c4bd178 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56341c4bd160 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56341c4bcc80 <col:20> '_Bool' lvalue Var 0x56341c4b75c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56341c4bd1a8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56341c4bd190 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56341c4bcca0 <col:36> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x56341c4bd140 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56341c4bd110 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56341c4bceb0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56341c4bcdd0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56341c4bccf8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56341c4bcce0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56341c4bccc0 <col:55> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56341c4bcdb0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56341c4bcd48 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56341c4bcd30 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56341c4bcd10 <col:74> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x56341c4bcd98 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56341c4bcd80 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56341c4bcd60 <col:93> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56341c4bce90 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56341c4bce28 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56341c4bce10 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56341c4bcdf0 <col:112> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x56341c4bce78 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56341c4bce60 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56341c4bce40 <col:131> '_Bool' lvalue Var 0x56341c4b71f0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x56341c4bd0f8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56341c4bd0e0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56341c4bced0 <col:148> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x56341c4bd0c0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56341c4bd090 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56341c4bcfb0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56341c4bcf48 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56341c4bcf30 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56341c4bcef0 <col:166> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56341c4bcf98 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56341c4bcf80 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56341c4bcf10 <col:184> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x56341c4bd048 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56341c4bd000 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56341c4bcfd0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56341c4bd078 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56341c4bd060 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56341c4bd028 <col:212> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56341c4bd7d0 <line:758:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56341c4bd228 <col:3> '_Bool' lvalue Var 0x56341c4b71f0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56341c4bd7b8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56341c4bd788 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56341c4bd740 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56341c4bd728 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56341c4bd248 <col:20> '_Bool' lvalue Var 0x56341c4b75c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56341c4bd770 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56341c4bd758 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56341c4bd268 <col:36> '_Bool' lvalue Var 0x56341c4b71f0 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x56341c4bd708 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56341c4bd6d8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56341c4bd478 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56341c4bd398 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56341c4bd2c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56341c4bd2a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56341c4bd288 <col:55> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56341c4bd378 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56341c4bd310 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56341c4bd2f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56341c4bd2d8 <col:74> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x56341c4bd360 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56341c4bd348 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56341c4bd328 <col:93> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56341c4bd458 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56341c4bd3f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56341c4bd3d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56341c4bd3b8 <col:112> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x56341c4bd440 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56341c4bd428 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56341c4bd408 <col:131> '_Bool' lvalue Var 0x56341c4b71f0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x56341c4bd6c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56341c4bd6a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56341c4bd498 <col:148> '_Bool' lvalue Var 0x56341c4b71f0 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x56341c4bd688 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56341c4bd658 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56341c4bd558 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56341c4bd510 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56341c4bd4f8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56341c4bd4b8 <col:166> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56341c4bd540 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56341c4bd528 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56341c4bd4d8 <col:184> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x56341c4bd628 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56341c4bd5a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56341c4bd578 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56341c4bd640 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56341c4bd600 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56341c4bd5d0 <col:219> 'int' 0
|   |-BinaryOperator 0x56341c4bd848 <line:759:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56341c4bd7f0 <col:3> 'int' lvalue Var 0x56341c4b6948 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x56341c4bd830 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56341c4bd810 <col:25> 'int' lvalue Var 0x56341c4b6d98 'y' 'int'
|   |-BinaryOperator 0x56341c4bd978 <line:760:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x56341c4bd868 <col:3> 'int' lvalue Var 0x56341c4b6d98 'y' 'int'
|   | `-ConditionalOperator 0x56341c4bd948 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x56341c4bd900 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56341c4bd8e8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56341c4bd888 <col:7> '_Bool' lvalue Var 0x56341c4b6e30 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x56341c4bd918 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56341c4bd8a8 <col:25> 'int' lvalue Var 0x56341c4b6f20 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x56341c4bd930 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x56341c4bd8c8 <col:37> 'int' lvalue Var 0x56341c4b6d98 'y' 'int'
|   |-BinaryOperator 0x56341c4bda10 <line:761:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x56341c4bd998 <col:3> '_Bool' lvalue Var 0x56341c4b6e30 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56341c4bd9e8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56341c4bd9b8 <col:28> 'int' 0
|   |-CallExpr 0x56341c4bda68 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56341c4bda50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56341c4bda30 <col:3> 'void ()' Function 0x56341c45d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56341c4bdac0 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56341c4bdaa8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56341c4bda88 <col:3> 'void ()' Function 0x56341c45d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56341c4bdb38 <line:764:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56341c4bdae0 <col:3> 'int' lvalue Var 0x56341c4b6a68 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x56341c4bdb20 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56341c4bdb00 <col:25> 'int' lvalue Var 0x56341c4b6c78 'x' 'int'
|   |-CallExpr 0x56341c4bdb90 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56341c4bdb78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56341c4bdb58 <col:3> 'void ()' Function 0x56341c45d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56341c4bdbe8 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56341c4bdbd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56341c4bdbb0 <col:3> 'void ()' Function 0x56341c45d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56341c4bded0 <line:767:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56341c4bdc08 <col:3> 'int' lvalue Var 0x56341c4b6d98 'y' 'int'
|   | `-ConditionalOperator 0x56341c4bdea0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56341c4bdcc8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56341c4bdc80 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56341c4bdc68 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56341c4bdc28 <col:7> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56341c4bdcb0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56341c4bdc98 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56341c4bdc48 <col:25> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x56341c4bde88 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56341c4bdce8 <col:42> 'int' lvalue Var 0x56341c4b7368 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x56341c4bde68 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56341c4bde38 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56341c4bdda8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56341c4bdd60 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56341c4bdd48 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56341c4bdd08 <col:55> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56341c4bdd90 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56341c4bdd78 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56341c4bdd28 <col:73> '_Bool' lvalue Var 0x56341c4b71f0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56341c4bde08 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56341c4bddc8 <col:90> 'int' lvalue Var 0x56341c4b7460 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56341c4bde20 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56341c4bdde8 <col:102> 'int' lvalue Var 0x56341c4b6d98 'y' 'int'
|   |-BinaryOperator 0x56341c4be0e8 <line:768:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56341c4bdef0 <col:3> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56341c4be0d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56341c4be0a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56341c4bdfc0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56341c4bdf68 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56341c4bdf50 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56341c4bdf10 <col:20> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56341c4bdfa8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56341c4bdf90 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56341c4bdf30 <col:38> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56341c4be058 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56341c4be010 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56341c4bdfe0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56341c4be088 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56341c4be070 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56341c4be038 <col:66> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56341c4be3d0 <line:769:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56341c4be108 <col:3> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56341c4be3b8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56341c4be388 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56341c4be2a8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56341c4be1c8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56341c4be180 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56341c4be168 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56341c4be128 <col:20> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56341c4be1b0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56341c4be198 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56341c4be148 <col:38> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56341c4be288 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56341c4be240 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56341c4be228 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56341c4be1e8 <col:56> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56341c4be270 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56341c4be258 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56341c4be208 <col:74> '_Bool' lvalue Var 0x56341c4b71f0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56341c4be340 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56341c4be2f8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56341c4be2c8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56341c4be370 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56341c4be358 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56341c4be320 <col:102> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56341c4be5d8 <line:770:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56341c4be3f0 <col:3> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56341c4be5c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56341c4be590 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56341c4be4b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56341c4be468 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56341c4be450 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56341c4be410 <col:20> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56341c4be498 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56341c4be480 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56341c4be430 <col:38> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56341c4be548 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56341c4be500 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56341c4be4d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56341c4be578 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56341c4be560 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56341c4be528 <col:66> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56341c4be8c0 <line:771:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56341c4be5f8 <col:3> '_Bool' lvalue Var 0x56341c4b71f0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56341c4be8a8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56341c4be878 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56341c4be798 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56341c4be6b8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56341c4be670 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56341c4be658 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56341c4be618 <col:20> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56341c4be6a0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56341c4be688 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56341c4be638 <col:38> '_Bool' lvalue Var 0x56341c4b7088 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56341c4be778 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56341c4be730 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56341c4be718 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56341c4be6d8 <col:56> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56341c4be760 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56341c4be748 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56341c4be6f8 <col:74> '_Bool' lvalue Var 0x56341c4b71f0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56341c4be830 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56341c4be7e8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56341c4be7b8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56341c4be860 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56341c4be848 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56341c4be810 <col:102> '_Bool' lvalue Var 0x56341c4b71f0 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x56341c4be918 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56341c4be900 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56341c4be8e0 <col:3> 'void ()' Function 0x56341c45d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56341c4be970 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56341c4be958 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56341c4be938 <col:3> 'void ()' Function 0x56341c45d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56341c4bea28 <line:774:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56341c4be990 <col:3> 'int' lvalue Var 0x56341c4b65e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56341c4bea08 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56341c4be9f0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56341c4be9b0 <col:22> 'int' lvalue Var 0x56341c4b65e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56341c4be9d0 <col:41> 'int' 1
|   |-CallExpr 0x56341c4bea80 <line:775:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56341c4bea68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56341c4bea48 <col:3> 'void ()' Function 0x56341c45d570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56341c4beaf8 <line:776:3, col:36>
|     `-CallExpr 0x56341c4bead8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56341c4beac0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56341c4beaa0 <col:10> 'void *(void)' Function 0x56341c45cfc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56341c4bec80 prev 0x56341c4b6330 <line:778:1, line:780:1> line:778:6 fence 'void ()'
| `-CompoundStmt 0x56341c4bed20 <line:779:1, line:780:1>
|-FunctionDecl 0x56341c4bed50 prev 0x56341c4b63f0 <line:781:1, line:783:1> line:781:6 isync 'void ()'
| `-CompoundStmt 0x56341c4bedf0 <line:782:1, line:783:1>
|-FunctionDecl 0x56341c4bee20 prev 0x56341c4b64b0 <line:784:1, line:786:1> line:784:6 lwfence 'void ()'
| `-CompoundStmt 0x56341c4beec0 <line:785:1, line:786:1>
`-FunctionDecl 0x56341c4befa0 <line:787:1, line:809:1> line:787:5 main 'int ()'
  `-CompoundStmt 0x56341c4c09f0 <line:788:1, line:809:1>
    |-DeclStmt 0x56341c4bf0b8 <line:789:3, col:18>
    | `-VarDecl 0x56341c4bf050 <col:3, col:13> col:13 used t1725 'pthread_t':'unsigned long'
    |-CallExpr 0x56341c4bf2c8 <line:790:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56341c4bf2b0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56341c4bf0d0 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56341c49d9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56341c4bf110 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56341c4bf0f0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56341c4bf050 't1725' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56341c4bf308 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56341c4bf188 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56341c4bf160 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56341c4bf128 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56341c4bf320 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56341c4bf1a8 <col:39> 'void *(void *)' Function 0x56341c4b76e0 'P0' 'void *(void *)'
    | `-ParenExpr 0x56341c4bf228 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56341c4bf200 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56341c4bf1c8 <col:52> 'int' 0
    |-DeclStmt 0x56341c4bf3b0 <line:791:3, col:18>
    | `-VarDecl 0x56341c4bf348 <col:3, col:13> col:13 used t1726 'pthread_t':'unsigned long'
    |-CallExpr 0x56341c4bf558 <line:792:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56341c4bf540 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56341c4bf3c8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56341c49d9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56341c4bf408 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56341c4bf3e8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56341c4bf348 't1726' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56341c4bf598 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56341c4bf480 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56341c4bf458 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56341c4bf420 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56341c4bf5b0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56341c4bf4a0 <col:39> 'void *(void *)' Function 0x56341c4ba918 'P1' 'void *(void *)'
    | `-ParenExpr 0x56341c4bf520 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56341c4bf4f8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56341c4bf4c0 <col:52> 'int' 0
    |-CallExpr 0x56341c4bf600 <line:793:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56341c4bf5e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56341c4bf5c8 <col:3> 'void ()' Function 0x56341c45d4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56341c4bf6d0 <line:794:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x56341c4bf620 <col:3> '_Bool' lvalue Var 0x56341c4b6b00 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x56341c4bf6b8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x56341c4bf698 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x56341c4bf680 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x56341c4bf640 <col:21> 'int' lvalue Var 0x56341c4b65e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x56341c4bf660 <col:41> 'int' 2
    |-CallExpr 0x56341c4bf728 <line:795:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56341c4bf710 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56341c4bf6f0 <col:3> 'void ()' Function 0x56341c45d570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56341c4bf7a0 <line:796:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56341c4bf788 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56341c4bf748 <col:3> 'void (int)' Function 0x56341c45ce50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x56341c4bf7e0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56341c4bf7c8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56341c4bf768 <col:21> '_Bool' lvalue Var 0x56341c4b6b00 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x56341c4bf830 <line:797:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56341c4bf818 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56341c4bf7f8 <col:3> 'void ()' Function 0x56341c45d4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56341c4bfb18 <line:798:3, col:103> 'int' '='
    | |-DeclRefExpr 0x56341c4bf850 <col:3> 'int' lvalue Var 0x56341c4b6d98 'y' 'int'
    | `-ConditionalOperator 0x56341c4bfae8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x56341c4bf910 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x56341c4bf8c8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x56341c4bf8b0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x56341c4bf870 <col:7> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x56341c4bf8f8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x56341c4bf8e0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x56341c4bf890 <col:25> '_Bool' lvalue Var 0x56341c4b6f98 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56341c4bfad0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56341c4bf930 <col:42> 'int' lvalue Var 0x56341c4b7368 'y$w_buff0' 'int'
    |   `-ParenExpr 0x56341c4bfab0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x56341c4bfa80 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x56341c4bf9f0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56341c4bf9a8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56341c4bf990 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56341c4bf950 <col:55> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56341c4bf9d8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56341c4bf9c0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56341c4bf970 <col:73> '_Bool' lvalue Var 0x56341c4b7100 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56341c4bfa50 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56341c4bfa10 <col:90> 'int' lvalue Var 0x56341c4b7460 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x56341c4bfa68 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56341c4bfa30 <col:102> 'int' lvalue Var 0x56341c4b6d98 'y' 'int'
    |-BinaryOperator 0x56341c4bfd20 <line:799:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56341c4bfb38 <col:3> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56341c4bfd08 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56341c4bfcd8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56341c4bfbf8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56341c4bfbb0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56341c4bfb98 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56341c4bfb58 <col:20> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56341c4bfbe0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56341c4bfbc8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56341c4bfb78 <col:38> '_Bool' lvalue Var 0x56341c4b6f98 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56341c4bfc90 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56341c4bfc48 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56341c4bfc18 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56341c4bfcc0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56341c4bfca8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56341c4bfc70 <col:66> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56341c4c0028 <line:800:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56341c4bfd40 <col:3> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56341c4c0010 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56341c4bffe0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56341c4bfee0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56341c4bfe00 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56341c4bfdb8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56341c4bfda0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56341c4bfd60 <col:20> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56341c4bfde8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56341c4bfdd0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56341c4bfd80 <col:38> '_Bool' lvalue Var 0x56341c4b6f98 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56341c4bfec0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56341c4bfe78 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56341c4bfe60 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56341c4bfe20 <col:56> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56341c4bfea8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56341c4bfe90 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56341c4bfe40 <col:74> '_Bool' lvalue Var 0x56341c4b7100 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56341c4bff78 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56341c4bff30 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56341c4bff00 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56341c4bffc8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56341c4bffb0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56341c4bff58 <col:102> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x56341c4c0230 <line:801:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56341c4c0048 <col:3> '_Bool' lvalue Var 0x56341c4b6f98 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56341c4c0218 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56341c4c01e8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56341c4c0108 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56341c4c00c0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56341c4c00a8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56341c4c0068 <col:20> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56341c4c00f0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56341c4c00d8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56341c4c0088 <col:38> '_Bool' lvalue Var 0x56341c4b6f98 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56341c4c01a0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56341c4c0158 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56341c4c0128 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56341c4c01d0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56341c4c01b8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56341c4c0180 <col:66> '_Bool' lvalue Var 0x56341c4b6f98 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56341c4c0518 <line:802:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56341c4c0250 <col:3> '_Bool' lvalue Var 0x56341c4b7100 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56341c4c0500 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56341c4c04d0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56341c4c03f0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56341c4c0310 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56341c4c02c8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56341c4c02b0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56341c4c0270 <col:20> '_Bool' lvalue Var 0x56341c4b73e0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56341c4c02f8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56341c4c02e0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56341c4c0290 <col:38> '_Bool' lvalue Var 0x56341c4b6f98 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56341c4c03d0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56341c4c0388 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56341c4c0370 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56341c4c0330 <col:56> '_Bool' lvalue Var 0x56341c4b74d8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56341c4c03b8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56341c4c03a0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56341c4c0350 <col:74> '_Bool' lvalue Var 0x56341c4b7100 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56341c4c0488 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56341c4c0440 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56341c4c0410 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56341c4c04b8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56341c4c04a0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56341c4c0468 <col:102> '_Bool' lvalue Var 0x56341c4b7100 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x56341c4c0570 <line:803:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56341c4c0558 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56341c4c0538 <col:3> 'void ()' Function 0x56341c45d570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56341c4c05c8 <line:804:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56341c4c05b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56341c4c0590 <col:3> 'void ()' Function 0x56341c45d4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56341c4c0898 <line:805:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x56341c4c05e8 <col:3> '_Bool' lvalue Var 0x56341c4b6b78 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x56341c4c0880 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x56341c4c0868 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x56341c4c0848 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x56341c4c0828 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x56341c4c0790 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x56341c4c06f8 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x56341c4c0660 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x56341c4c0648 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x56341c4c0608 <col:23> 'int' lvalue Var 0x56341c4b6708 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x56341c4c0628 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x56341c4c06d8 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x56341c4c06c0 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x56341c4c0680 <col:51> 'int' lvalue Var 0x56341c4b6828 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x56341c4c06a0 <col:74> 'int' 0
    |         | `-BinaryOperator 0x56341c4c0770 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x56341c4c0758 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x56341c4c0718 <col:79> 'int' lvalue Var 0x56341c4b6948 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x56341c4c0738 <col:102> 'int' 1
    |         `-BinaryOperator 0x56341c4c0808 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x56341c4c07f0 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56341c4c07b0 <col:107> 'int' lvalue Var 0x56341c4b6a68 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x56341c4c07d0 <col:130> 'int' 0
    |-CallExpr 0x56341c4c08f0 <line:806:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56341c4c08d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56341c4c08b8 <col:3> 'void ()' Function 0x56341c45d570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56341c4c0968 <line:807:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56341c4c0950 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56341c4c0910 <col:3> 'void (int)' Function 0x56341c45d238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x56341c4c09a8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56341c4c0990 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56341c4c0930 <col:21> '_Bool' lvalue Var 0x56341c4b6b78 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x56341c4c09e0 <line:808:3, col:10>
      `-IntegerLiteral 0x56341c4c09c0 <col:10> 'int' 0
