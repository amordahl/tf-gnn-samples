TranslationUnitDecl 0x55782959df88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55782959e848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55782959e520 '__int128'
|-TypedefDecl 0x55782959e8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55782959e540 'unsigned __int128'
|-TypedefDecl 0x55782959ebc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55782959e990 'struct __NSConstantString_tag'
|   `-Record 0x55782959e910 '__NSConstantString_tag'
|-TypedefDecl 0x55782959ec68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55782959ec20 'char *'
|   `-BuiltinType 0x55782959e020 'char'
|-TypedefDecl 0x5578295e1a80 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55782959ef00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55782959ed40 'struct __va_list_tag'
|     `-Record 0x55782959ecc0 '__va_list_tag'
|-TypedefDecl 0x5578295e1af0 <termination-libowfat/strtoull_true-termination.c.i:1:1, col:18> col:18 ptrdiff_t 'long'
| `-BuiltinType 0x55782959e0a0 'long'
|-TypedefDecl 0x5578295e1b60 <line:2:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55782959e140 'unsigned long'
|-TypedefDecl 0x5578295e1bd0 <line:3:1, col:28> col:28 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x55782959e100 'unsigned short'
|-TypedefDecl 0x5578295e1c40 <line:4:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55782959e040 'signed char'
|-TypedefDecl 0x5578295e1cb0 <line:5:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55782959e0e0 'unsigned char'
|-TypedefDecl 0x5578295e1d20 <line:6:1, col:19> col:19 __int16_t 'short'
| `-BuiltinType 0x55782959e060 'short'
|-TypedefDecl 0x5578295e1d90 <line:7:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55782959e100 'unsigned short'
|-TypedefDecl 0x5578295e1e00 <line:8:1, col:13> col:13 __int32_t 'int'
| `-BuiltinType 0x55782959e080 'int'
|-TypedefDecl 0x5578295e1e70 <line:9:1, col:22> col:22 referenced __uint32_t 'unsigned int'
| `-BuiltinType 0x55782959e120 'unsigned int'
|-TypedefDecl 0x5578295e1ee0 <line:10:1, col:18> col:18 __int64_t 'long'
| `-BuiltinType 0x55782959e0a0 'long'
|-TypedefDecl 0x5578295e1f50 <line:11:1, col:27> col:27 __uint64_t 'unsigned long'
| `-BuiltinType 0x55782959e140 'unsigned long'
|-TypedefDecl 0x5578295e1fc0 <line:12:1, col:21> col:21 __int_least8_t 'signed char'
| `-BuiltinType 0x55782959e040 'signed char'
|-TypedefDecl 0x5578295e2030 <line:13:1, col:23> col:23 __uint_least8_t 'unsigned char'
| `-BuiltinType 0x55782959e0e0 'unsigned char'
|-TypedefDecl 0x5578295e20a0 <line:14:1, col:19> col:19 __int_least16_t 'short'
| `-BuiltinType 0x55782959e060 'short'
|-TypedefDecl 0x5578295e2110 <line:15:1, col:28> col:28 __uint_least16_t 'unsigned short'
| `-BuiltinType 0x55782959e100 'unsigned short'
|-TypedefDecl 0x5578295e2180 <line:16:1, col:13> col:13 __int_least32_t 'int'
| `-BuiltinType 0x55782959e080 'int'
|-TypedefDecl 0x5578295e21f0 <line:17:1, col:22> col:22 __uint_least32_t 'unsigned int'
| `-BuiltinType 0x55782959e120 'unsigned int'
|-TypedefDecl 0x5578295e2260 <line:18:1, col:18> col:18 __int_least64_t 'long'
| `-BuiltinType 0x55782959e0a0 'long'
|-TypedefDecl 0x5578295e22d0 <line:19:1, col:27> col:27 __uint_least64_t 'unsigned long'
| `-BuiltinType 0x55782959e140 'unsigned long'
|-TypedefDecl 0x5578295e2340 <line:20:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55782959e0a0 'long'
|-TypedefDecl 0x5578295e23b0 <line:21:1, col:27> col:27 __uintptr_t 'unsigned long'
| `-BuiltinType 0x55782959e140 'unsigned long'
|-TypedefDecl 0x5578295e2420 <line:22:1, col:15> col:15 referenced _LOCK_T 'void *'
| `-PointerType 0x55782959e7a0 'void *'
|   `-BuiltinType 0x55782959dfe0 'void'
|-FunctionDecl 0x5578295e2630 <line:23:1, col:34> col:6 __cygwin_lock_init 'void (_LOCK_T *)'
| `-ParmVarDecl 0x5578295e2520 <col:25, col:33> col:34 '_LOCK_T *'
|-FunctionDecl 0x5578295e27c0 <line:24:1, col:44> col:6 __cygwin_lock_init_recursive 'void (_LOCK_T *)'
| `-ParmVarDecl 0x5578295e2730 <col:35, col:43> col:44 '_LOCK_T *'
|-FunctionDecl 0x5578295e2908 <line:25:1, col:34> col:6 __cygwin_lock_fini 'void (_LOCK_T *)'
| `-ParmVarDecl 0x5578295e2878 <col:25, col:33> col:34 '_LOCK_T *'
|-FunctionDecl 0x557829605740 <line:26:1, col:34> col:6 __cygwin_lock_lock 'void (_LOCK_T *)'
| `-ParmVarDecl 0x5578295e29c0 <col:25, col:33> col:34 '_LOCK_T *'
|-FunctionDecl 0x557829605908 <line:27:1, col:36> col:5 __cygwin_lock_trylock 'int (_LOCK_T *)'
| `-ParmVarDecl 0x5578296057f8 <col:27, col:35> col:36 '_LOCK_T *'
|-FunctionDecl 0x557829605a50 <line:28:1, col:36> col:6 __cygwin_lock_unlock 'void (_LOCK_T *)'
| `-ParmVarDecl 0x5578296059c0 <col:27, col:35> col:36 '_LOCK_T *'
|-TypedefDecl 0x557829605b10 <line:29:1, col:14> col:14 referenced _off_t 'long'
| `-BuiltinType 0x55782959e0a0 'long'
|-TypedefDecl 0x557829605b80 <line:30:1, col:15> col:15 __dev_t 'short'
| `-BuiltinType 0x55782959e060 'short'
|-TypedefDecl 0x557829605bf0 <line:31:1, col:24> col:24 __uid_t 'unsigned short'
| `-BuiltinType 0x55782959e100 'unsigned short'
|-TypedefDecl 0x557829605c60 <line:32:1, col:24> col:24 __gid_t 'unsigned short'
| `-BuiltinType 0x55782959e100 'unsigned short'
|-TypedefDecl 0x557829605cd0 <line:33:15, col:33> col:33 referenced _off64_t 'long long'
| `-BuiltinType 0x55782959e0c0 'long long'
|-TypedefDecl 0x557829605d40 <line:34:1, col:14> col:14 referenced _fpos_t 'long'
| `-BuiltinType 0x55782959e0a0 'long'
|-TypedefDecl 0x557829605dd8 <line:35:1, col:18> col:18 referenced _fpos64_t '_off64_t':'long long'
| `-TypedefType 0x557829605da0 '_off64_t' sugar
|   |-Typedef 0x557829605cd0 '_off64_t'
|   `-BuiltinType 0x55782959e0c0 'long long'
|-TypedefDecl 0x557829605e48 <line:36:1, col:25> col:25 referenced _ssize_t 'long'
| `-BuiltinType 0x55782959e0a0 'long'
|-TypedefDecl 0x557829605eb8 <line:37:1, col:22> col:22 referenced wint_t 'unsigned int'
| `-BuiltinType 0x55782959e120 'unsigned int'
|-RecordDecl 0x557829605f10 <line:38:9, line:46:1> line:38:9 struct definition
| |-FieldDecl 0x557829605fd0 <line:40:3, col:7> col:7 __count 'int'
| |-RecordDecl 0x557829606020 <line:41:3, line:45:3> line:41:3 union definition
| | |-FieldDecl 0x557829606108 <line:43:5, col:12> col:12 __wch 'wint_t':'unsigned int'
| | `-FieldDecl 0x5578296061f8 <line:44:5, col:27> col:19 __wchb 'unsigned char [4]'
| `-FieldDecl 0x5578296062b0 <line:41:3, line:45:5> col:5 __value 'union (anonymous union at termination-libowfat/strtoull_true-termination.c.i:41:3)':'union _mbstate_t::(anonymous at termination-libowfat/strtoull_true-termination.c.i:41:3)'
|-TypedefDecl 0x557829606360 <line:38:1, line:46:3> col:3 referenced _mbstate_t 'struct _mbstate_t':'_mbstate_t'
| `-ElaboratedType 0x557829606300 'struct _mbstate_t' sugar
|   `-RecordType 0x557829605f90 '_mbstate_t'
|     `-Record 0x557829605f10 ''
|-TypedefDecl 0x5578296063e0 <line:47:1, col:17> col:17 referenced _flock_t '_LOCK_T':'void *'
| `-TypedefType 0x5578295e2480 '_LOCK_T' sugar
|   |-Typedef 0x5578295e2420 '_LOCK_T'
|   `-PointerType 0x55782959e7a0 'void *'
|     `-BuiltinType 0x55782959dfe0 'void'
|-TypedefDecl 0x557829606450 <line:48:1, col:15> col:15 _iconv_t 'void *'
| `-PointerType 0x55782959e7a0 'void *'
|   `-BuiltinType 0x55782959dfe0 'void'
|-TypedefDecl 0x5578296064c0 <line:49:1, col:22> col:22 referenced __ULong 'unsigned int'
| `-BuiltinType 0x55782959e120 'unsigned int'
|-RecordDecl 0x557829606518 <line:50:1, col:8> col:8 struct _reent
|-RecordDecl 0x5578296065c8 <line:51:1, line:56:1> line:51:8 struct _Bigint definition
| |-FieldDecl 0x557829606778 <line:53:3, col:19> col:19 _next 'struct _Bigint *'
| |-FieldDecl 0x5578296067e0 <line:54:3, col:7> col:7 _k 'int'
| |-FieldDecl 0x557829606848 <col:3, col:11> col:11 _maxwds 'int'
| |-FieldDecl 0x5578296068b0 <col:3, col:20> col:20 _sign 'int'
| |-FieldDecl 0x557829606918 <col:3, col:27> col:27 _wds 'int'
| `-FieldDecl 0x557829606a70 <line:55:3, col:15> col:11 _x '__ULong [1]'
|-RecordDecl 0x557829606ac0 <line:57:1, line:68:1> line:57:8 struct __tm definition
| |-FieldDecl 0x557829606b80 <line:59:3, col:7> col:7 __tm_sec 'int'
| |-FieldDecl 0x557829606be8 <line:60:3, col:7> col:7 __tm_min 'int'
| |-FieldDecl 0x557829606c50 <line:61:3, col:7> col:7 __tm_hour 'int'
| |-FieldDecl 0x557829606cb8 <line:62:3, col:7> col:7 __tm_mday 'int'
| |-FieldDecl 0x557829606d20 <line:63:3, col:7> col:7 __tm_mon 'int'
| |-FieldDecl 0x557829606d88 <line:64:3, col:7> col:7 __tm_year 'int'
| |-FieldDecl 0x557829606df0 <line:65:3, col:7> col:7 __tm_wday 'int'
| |-FieldDecl 0x557829606e58 <line:66:3, col:7> col:7 __tm_yday 'int'
| `-FieldDecl 0x557829606ec0 <line:67:3, col:7> col:7 __tm_isdst 'int'
|-RecordDecl 0x557829606f10 <line:69:1, line:74:1> line:69:8 struct _on_exit_args definition
| |-FieldDecl 0x557829607058 <line:70:2, col:19> col:9 _fnargs 'void *[32]'
| |-FieldDecl 0x557829607108 <line:71:2, col:23> col:9 _dso_handle 'void *[32]'
| |-FieldDecl 0x557829607168 <line:72:2, col:10> col:10 _fntypes '__ULong':'unsigned int'
| `-FieldDecl 0x5578296071c8 <line:73:2, col:10> col:10 _is_cxa '__ULong':'unsigned int'
|-RecordDecl 0x557829607218 <line:75:1, line:80:1> line:75:8 struct _atexit definition
| |-FieldDecl 0x557829607398 <line:76:2, col:18> col:18 _next 'struct _atexit *'
| |-FieldDecl 0x557829607400 <line:77:2, col:6> col:6 _ind 'int'
| |-FieldDecl 0x557829607690 <line:78:2, col:23> col:9 _fns 'void (*[32])(void)'
| `-FieldDecl 0x557829607760 <line:79:9, col:30> col:30 _on_exit_args 'struct _on_exit_args':'struct _on_exit_args'
|-RecordDecl 0x5578296077b0 <line:81:1, line:84:1> line:81:8 struct __sbuf definition
| |-FieldDecl 0x5578296078a8 <line:82:2, col:17> col:17 _base 'unsigned char *'
| `-FieldDecl 0x557829607910 <line:83:2, col:6> col:6 _size 'int'
|-RecordDecl 0x557829607960 <line:85:1, line:110:1> line:85:8 struct __sFILE definition
| |-FieldDecl 0x557829607a20 <line:86:3, col:18> col:18 _p 'unsigned char *'
| |-FieldDecl 0x557829607a88 <line:87:3, col:7> col:7 _r 'int'
| |-FieldDecl 0x557829607af0 <line:88:3, col:7> col:7 _w 'int'
| |-FieldDecl 0x557829607b58 <line:89:3, col:9> col:9 _flags 'short'
| |-FieldDecl 0x557829607bc0 <line:90:3, col:9> col:9 _file 'short'
| |-FieldDecl 0x557829607c68 <line:91:3, col:17> col:17 _bf 'struct __sbuf':'struct __sbuf'
| |-FieldDecl 0x557829607cd0 <line:92:3, col:7> col:7 _lbfsize 'int'
| |-FieldDecl 0x557829607d38 <line:93:3, col:10> col:10 _cookie 'void *'
| |-FieldDecl 0x557829608288 <line:94:3, col:42> col:42 _read '_ssize_t (*)(struct _reent *, void *, char *, size_t) __attribute__((cdecl))'
| |-FieldDecl 0x5578296086d8 <line:95:3, col:42> col:42 _write '_ssize_t (*)(struct _reent *, void *, const char *, size_t) __attribute__((cdecl))'
| |-FieldDecl 0x55782960f3a8 <line:96:3, col:41> col:41 _seek '_fpos_t (*)(struct _reent *, void *, _fpos_t, int) __attribute__((cdecl))'
| |-FieldDecl 0x55782960f6e0 <line:97:3, col:37> col:37 _close 'int (*)(struct _reent *, void *) __attribute__((cdecl))'
| |-FieldDecl 0x55782960f750 <line:98:3, col:17> col:17 _ub 'struct __sbuf':'struct __sbuf'
| |-FieldDecl 0x55782960f7b8 <line:99:3, col:18> col:18 _up 'unsigned char *'
| |-FieldDecl 0x55782960f820 <line:100:3, col:7> col:7 _ur 'int'
| |-FieldDecl 0x55782960f918 <line:101:3, col:24> col:17 _ubuf 'unsigned char [3]'
| |-FieldDecl 0x55782960fa08 <line:102:3, col:24> col:17 _nbuf 'unsigned char [1]'
| |-FieldDecl 0x55782960fa78 <line:103:3, col:17> col:17 _lb 'struct __sbuf':'struct __sbuf'
| |-FieldDecl 0x55782960fae0 <line:104:3, col:7> col:7 _blksize 'int'
| |-FieldDecl 0x55782960fb68 <line:105:3, col:10> col:10 _offset '_off_t':'long'
| |-FieldDecl 0x55782960fbe0 <line:106:3, col:18> col:18 _data 'struct _reent *'
| |-FieldDecl 0x55782960fc68 <line:107:3, col:12> col:12 _lock '_flock_t':'void *'
| |-FieldDecl 0x55782960fcf8 <line:108:3, col:14> col:14 _mbstate '_mbstate_t':'_mbstate_t'
| `-FieldDecl 0x55782960fd60 <line:109:3, col:7> col:7 _flags2 'int'
|-RecordDecl 0x55782960fdb0 <line:111:1, line:137:1> line:111:8 struct __sFILE64 definition
| |-FieldDecl 0x55782960fe70 <line:112:3, col:18> col:18 _p 'unsigned char *'
| |-FieldDecl 0x55782960fed8 <line:113:3, col:7> col:7 _r 'int'
| |-FieldDecl 0x55782960ff40 <line:114:3, col:7> col:7 _w 'int'
| |-FieldDecl 0x55782960ffc8 <line:115:3, col:9> col:9 _flags 'short'
| |-FieldDecl 0x557829610030 <line:116:3, col:9> col:9 _file 'short'
| |-FieldDecl 0x5578296100a0 <line:117:3, col:17> col:17 _bf 'struct __sbuf':'struct __sbuf'
| |-FieldDecl 0x557829610108 <line:118:3, col:7> col:7 _lbfsize 'int'
| |-FieldDecl 0x557829610180 <line:119:3, col:18> col:18 _data 'struct _reent *'
| |-FieldDecl 0x5578296101e8 <line:120:3, col:10> col:10 _cookie 'void *'
| |-FieldDecl 0x5578296104c0 <line:121:3, col:42> col:42 _read '_ssize_t (*)(struct _reent *, void *, char *, size_t) __attribute__((cdecl))'
| |-FieldDecl 0x557829610798 <line:122:3, col:42> col:42 _write '_ssize_t (*)(struct _reent *, void *, const char *, size_t) __attribute__((cdecl))'
| |-FieldDecl 0x557829610a70 <line:123:3, col:41> col:41 _seek '_fpos_t (*)(struct _reent *, void *, _fpos_t, int) __attribute__((cdecl))'
| |-FieldDecl 0x557829610c48 <line:124:3, col:37> col:37 _close 'int (*)(struct _reent *, void *) __attribute__((cdecl))'
| |-FieldDecl 0x557829610cb8 <line:125:3, col:17> col:17 _ub 'struct __sbuf':'struct __sbuf'
| |-FieldDecl 0x557829610d20 <line:126:3, col:18> col:18 _up 'unsigned char *'
| |-FieldDecl 0x557829610d88 <line:127:3, col:7> col:7 _ur 'int'
| |-FieldDecl 0x557829610e38 <line:128:3, col:24> col:17 _ubuf 'unsigned char [3]'
| |-FieldDecl 0x557829610ee8 <line:129:3, col:24> col:17 _nbuf 'unsigned char [1]'
| |-FieldDecl 0x557829610f58 <line:130:3, col:17> col:17 _lb 'struct __sbuf':'struct __sbuf'
| |-FieldDecl 0x557829610fd8 <line:131:3, col:7> col:7 _blksize 'int'
| |-FieldDecl 0x557829611040 <line:132:3, col:7> col:7 _flags2 'int'
| |-FieldDecl 0x5578296110a0 <line:133:3, col:12> col:12 _offset '_off64_t':'long long'
| |-FieldDecl 0x557829611518 <line:134:3, col:43> col:43 _seek64 '_fpos64_t (*)(struct _reent *, void *, _fpos64_t, int) __attribute__((cdecl))'
| |-FieldDecl 0x557829611578 <line:135:3, col:12> col:12 _lock '_flock_t':'void *'
| `-FieldDecl 0x5578296115d8 <line:136:3, col:14> col:14 _mbstate '_mbstate_t':'_mbstate_t'
|-TypedefDecl 0x557829611688 <line:138:1, col:26> col:26 referenced __FILE 'struct __sFILE64':'struct __sFILE64'
| `-ElaboratedType 0x557829611630 'struct __sFILE64' sugar
|   `-RecordType 0x55782960fe30 'struct __sFILE64'
|     `-Record 0x55782960fdb0 '__sFILE64'
|-RecordDecl 0x5578296116e0 <line:139:1, line:144:1> line:139:8 struct _glue definition
| |-FieldDecl 0x557829611858 <line:141:3, col:17> col:17 _next 'struct _glue *'
| |-FieldDecl 0x5578296118c0 <line:142:3, col:7> col:7 _niobs 'int'
| `-FieldDecl 0x5578296119b0 <line:143:3, col:11> col:11 _iobs '__FILE *'
|-RecordDecl 0x557829611a00 <line:145:1, line:149:1> line:145:8 struct _rand48 definition
| |-FieldDecl 0x557829611b48 <line:146:3, col:25> col:18 _seed 'unsigned short [3]'
| |-FieldDecl 0x557829611bf8 <line:147:3, col:25> col:18 _mult 'unsigned short [3]'
| `-FieldDecl 0x557829611c60 <line:148:3, col:18> col:18 _add 'unsigned short'
|-RecordDecl 0x557829611cb0 prev 0x557829606518 <line:150:1, line:201:1> line:150:8 struct _reent definition
| |-FieldDecl 0x557829611d48 <line:152:3, col:7> col:7 _errno 'int'
| |-FieldDecl 0x557829611da8 <line:153:3, col:11> col:11 _stdin '__FILE *'
| |-FieldDecl 0x557829611e08 <col:3, col:20> col:20 _stdout '__FILE *'
| |-FieldDecl 0x557829611e68 <col:3, col:30> col:30 _stderr '__FILE *'
| |-FieldDecl 0x557829611ed0 <line:154:3, col:7> col:7 _inc 'int'
| |-FieldDecl 0x557829611fd0 <line:155:3, col:21> col:8 _emergency 'char [25]'
| |-FieldDecl 0x557829612038 <line:156:3, col:7> col:7 _current_category 'int'
| |-FieldDecl 0x5578296120a0 <line:157:3, col:15> col:15 _current_locale 'const char *'
| |-FieldDecl 0x557829612108 <line:158:3, col:7> col:7 __sdidinit 'int'
| |-FieldDecl 0x5578296123b0 <line:159:3, col:38> col:38 __cleanup 'void (*)(struct _reent *) __attribute__((cdecl))'
| |-FieldDecl 0x557829612428 <line:160:3, col:19> col:19 _result 'struct _Bigint *'
| |-FieldDecl 0x557829612490 <line:161:3, col:7> col:7 _result_k 'int'
| |-FieldDecl 0x557829612508 <line:162:3, col:19> col:19 _p5s 'struct _Bigint *'
| |-FieldDecl 0x5578296125e8 <line:163:3, col:20> col:20 _freelist 'struct _Bigint **'
| |-FieldDecl 0x557829612650 <line:164:3, col:7> col:7 _cvtlen 'int'
| |-FieldDecl 0x5578296126b8 <line:165:3, col:9> col:9 _cvtbuf 'char *'
| |-RecordDecl 0x557829612708 <line:166:3, line:195:5> line:166:3 union definition
| | |-RecordDecl 0x5578296127b8 <line:168:7, line:189:9> line:168:7 struct definition
| | | |-FieldDecl 0x557829612880 <line:170:11, col:24> col:24 _unused_rand 'unsigned int'
| | | |-FieldDecl 0x5578296128e8 <line:171:11, col:18> col:18 _strtok_last 'char *'
| | | |-FieldDecl 0x5578296129d0 <line:172:11, col:31> col:16 _asctime_buf 'char [26]'
| | | |-FieldDecl 0x557829612a78 <line:173:11, col:23> col:23 _localtime_buf 'struct __tm':'struct __tm'
| | | |-FieldDecl 0x557829612ae0 <line:174:11, col:15> col:15 _gamma_signgam 'int'
| | | |-FieldDecl 0x557829612b48 <line:175:25, col:44> col:44 _rand_next 'unsigned long long'
| | | |-FieldDecl 0x557829612bf8 <line:176:11, col:26> col:26 _r48 'struct _rand48':'struct _rand48'
| | | |-FieldDecl 0x557829612c58 <line:177:11, col:22> col:22 _mblen_state '_mbstate_t':'_mbstate_t'
| | | |-FieldDecl 0x557829612cb8 <line:178:11, col:22> col:22 _mbtowc_state '_mbstate_t':'_mbstate_t'
| | | |-FieldDecl 0x557829612d18 <line:179:11, col:22> col:22 _wctomb_state '_mbstate_t':'_mbstate_t'
| | | |-FieldDecl 0x557829612e00 <line:180:11, col:27> col:16 _l64a_buf 'char [8]'
| | | |-FieldDecl 0x557829612ef0 <line:181:11, col:30> col:16 _signal_buf 'char [24]'
| | | |-FieldDecl 0x557829612f58 <line:182:11, col:15> col:15 _getdate_err 'int'
| | | |-FieldDecl 0x557829612fe0 <line:183:11, col:22> col:22 _mbrlen_state '_mbstate_t':'_mbstate_t'
| | | |-FieldDecl 0x557829613040 <line:184:11, col:22> col:22 _mbrtowc_state '_mbstate_t':'_mbstate_t'
| | | |-FieldDecl 0x5578296130a0 <line:185:11, col:22> col:22 _mbsrtowcs_state '_mbstate_t':'_mbstate_t'
| | | |-FieldDecl 0x557829613100 <line:186:11, col:22> col:22 _wcrtomb_state '_mbstate_t':'_mbstate_t'
| | | |-FieldDecl 0x557829613160 <line:187:11, col:22> col:22 _wcsrtombs_state '_mbstate_t':'_mbstate_t'
| | | `-FieldDecl 0x5578296131c8 <line:188:4, col:8> col:8 _h_errno 'int'
| | |-FieldDecl 0x557829613280 <line:168:7, line:189:11> col:11 _reent 'struct (anonymous struct at termination-libowfat/strtoull_true-termination.c.i:168:7)':'struct _reent::(anonymous at termination-libowfat/strtoull_true-termination.c.i:168:7)'
| | |-RecordDecl 0x5578296132d0 <line:190:7, line:194:9> line:190:7 struct definition
| | | |-FieldDecl 0x557829613418 <line:192:11, col:36> col:27 _nextf 'unsigned char *[30]'
| | | `-FieldDecl 0x557829613508 <line:193:11, col:35> col:24 _nmalloc 'unsigned int [30]'
| | `-FieldDecl 0x5578296135c0 <line:190:7, line:194:11> col:11 _unused 'struct (anonymous struct at termination-libowfat/strtoull_true-termination.c.i:190:7)':'struct _reent::(anonymous at termination-libowfat/strtoull_true-termination.c.i:190:7)'
| |-FieldDecl 0x5578296138f0 <line:166:3, line:195:7> col:7 _new 'union (anonymous union at termination-libowfat/strtoull_true-termination.c.i:166:3)':'union _reent::(anonymous at termination-libowfat/strtoull_true-termination.c.i:166:3)'
| |-FieldDecl 0x557829613968 <line:196:3, col:19> col:19 _atexit 'struct _atexit *'
| |-FieldDecl 0x5578296139d8 <line:197:3, col:18> col:18 _atexit0 'struct _atexit':'struct _atexit'
| |-FieldDecl 0x557829613c50 <line:198:3, col:27> col:12 _sig_func 'void (**)(int)':'void (**)(int)'
| |-FieldDecl 0x557829613cc0 <line:199:3, col:16> col:16 __sglue 'struct _glue':'struct _glue'
| `-FieldDecl 0x557829613f50 <line:200:3, col:16> col:10 __sf '__FILE [3]'
|-VarDecl 0x557829614400 <line:202:1, col:23> col:23 _impure_ptr 'struct _reent *' extern
|-VarDecl 0x557829614490 <line:203:1, col:29> col:29 _global_impure_ptr 'struct _reent *const' extern
|-FunctionDecl 0x5578296145b0 <line:204:1, col:37> col:6 _reclaim_reent 'void (struct _reent *)'
| `-ParmVarDecl 0x557829614520 <col:22, col:36> col:37 'struct _reent *'
|-FunctionDecl 0x5578296147d8 <line:205:3, col:62> col:46 __getreent 'struct _reent *(void) __attribute__((cdecl))':'struct _reent *(void)'
|-FunctionDecl 0x557829614968 <line:206:1, col:22> col:7 mkdtemp 'char *(char *)'
| `-ParmVarDecl 0x557829614890 <col:16, col:21> col:22 'char *'
|-FunctionDecl 0x557829614b30 <line:207:1, col:27> col:12 arc4random '__uint32_t (void)'
|-FunctionDecl 0x557829614d40 <line:208:1, col:47> col:6 arc4random_addrandom 'void (unsigned char *, int)'
| |-ParmVarDecl 0x557829614be8 <col:27, col:41> col:42 'unsigned char *'
| `-ParmVarDecl 0x557829614c68 <col:44> col:47 'int'
|-FunctionDecl 0x557829614fa0 <line:209:1, col:35> col:6 arc4random_buf 'void (void *, size_t)'
| |-ParmVarDecl 0x557829614e08 <col:21, col:26> col:27 'void *'
| `-ParmVarDecl 0x557829614e80 <col:29> col:35 'size_t':'unsigned long'
|-FunctionDecl 0x5578296150e8 <line:210:1, col:26> col:6 arc4random_stir 'void (void)'
|-FunctionDecl 0x5578296152a0 <line:211:1, col:41> col:12 arc4random_uniform '__uint32_t (__uint32_t)'
| `-ParmVarDecl 0x557829615198 <col:31> col:41 '__uint32_t':'unsigned int'
|-FunctionDecl 0x557829616448 <line:212:1, col:30> col:13 getprogname 'const char *(void)'
|-FunctionDecl 0x5578296165d0 <line:213:1, col:31> col:6 setprogname 'void (const char *)'
| `-ParmVarDecl 0x557829616500 <col:19, col:30> col:31 'const char *'
|-FunctionDecl 0x557829616768 <line:214:1, col:43> col:7 canonicalize_file_name 'char *(const char *)'
| `-ParmVarDecl 0x557829616690 <col:31, col:42> col:43 'const char *'
|-FunctionDecl 0x5578296168f8 <line:215:1, col:27> col:5 unsetenv 'int (const char *)'
| `-ParmVarDecl 0x557829616828 <col:15, col:26> col:27 'const char *'
|-FunctionDecl 0x557829616bf8 <line:216:1, col:57> col:7 initstate 'char *(unsigned int, char *, size_t)'
| |-ParmVarDecl 0x5578296169b8 <col:18, col:27> col:27 seed 'unsigned int'
| |-ParmVarDecl 0x557829616a38 <col:33, col:39> col:39 state 'char *'
| `-ParmVarDecl 0x557829616ab0 <col:46, col:53> col:53 size 'size_t':'unsigned long'
|-FunctionDecl 0x557829616d88 <line:217:1, col:18> col:6 random 'long (void)'
|-FunctionDecl 0x557829616ed8 <line:218:1, col:34> col:7 setstate 'char *(const char *)'
| `-ParmVarDecl 0x557829616e40 <col:17, col:29> col:29 state 'const char *'
|-FunctionDecl 0x557829617060 <line:219:1, col:23> col:6 srandom 'void (unsigned int)'
| `-ParmVarDecl 0x557829616f98 <col:15> col:23 'unsigned int'
|-FunctionDecl 0x5578296171f8 <line:220:1, col:19> col:7 ptsname 'char *(int)'
| `-ParmVarDecl 0x557829617120 <col:16> col:19 'int'
|-FunctionDecl 0x557829617508 <line:221:1, col:34> col:5 ptsname_r 'int (int, char *, size_t)'
| |-ParmVarDecl 0x5578296172b8 <col:15> col:18 'int'
| |-ParmVarDecl 0x557829617338 <col:20, col:25> col:26 'char *'
| `-ParmVarDecl 0x5578296173b0 <col:28> col:34 'size_t':'unsigned long'
|-FunctionDecl 0x557829617698 <line:222:1, col:16> col:5 getpt 'int (void)'
|-FunctionDecl 0x557829617828 <line:223:1, col:17> col:5 grantpt 'int (int)'
| `-ParmVarDecl 0x557829617750 <col:14> col:17 'int'
|-FunctionDecl 0x557829617980 <line:224:1, col:18> col:5 unlockpt 'int (int)'
| `-ParmVarDecl 0x5578296178e8 <col:15> col:18 'int'
|-FunctionDecl 0x557829617ad8 <line:225:1, col:22> col:5 posix_openpt 'int (int)'
| `-ParmVarDecl 0x557829617a40 <col:19> col:22 'int'
|-FunctionDecl 0x557829617dc8 <line:226:1, col:44> col:5 posix_memalign 'int (void **, size_t, size_t)'
| |-ParmVarDecl 0x557829617b98 <col:21, col:27> col:28 'void **'
| |-ParmVarDecl 0x557829617c10 <col:30> col:36 'size_t':'unsigned long'
| `-ParmVarDecl 0x557829617c88 <col:38> col:44 'size_t':'unsigned long'
|-FunctionDecl 0x557829618028 <line:227:1, col:39> col:15 memalign 'void *(size_t, size_t)' extern
| |-ParmVarDecl 0x557829617e90 <col:25> col:31 'size_t':'unsigned long'
| `-ParmVarDecl 0x557829617f08 <col:33> col:39 'size_t':'unsigned long'
|-FunctionDecl 0x5578296181f8 <line:228:1, col:29> col:15 valloc 'void *(size_t)' extern
| `-ParmVarDecl 0x5578296180e8 <col:23> col:29 'size_t':'unsigned long'
|-RecordDecl 0x5578296182a0 <line:230:9, line:234:1> line:230:9 struct definition
| |-FieldDecl 0x557829618360 <line:232:3, col:7> col:7 quot 'int'
| `-FieldDecl 0x5578296183c8 <line:233:3, col:7> col:7 rem 'int'
|-TypedefDecl 0x5578296184a0 <line:230:1, line:234:3> col:3 referenced div_t 'struct div_t':'div_t'
| `-ElaboratedType 0x557829618440 'struct div_t' sugar
|   `-RecordType 0x557829618320 'div_t'
|     `-Record 0x5578296182a0 ''
|-RecordDecl 0x557829618510 <line:235:9, line:239:1> line:235:9 struct definition
| |-FieldDecl 0x5578296185d0 <line:237:3, col:8> col:8 quot 'long'
| `-FieldDecl 0x557829618638 <line:238:3, col:8> col:8 rem 'long'
|-TypedefDecl 0x5578296186f0 <line:235:1, line:239:3> col:3 referenced ldiv_t 'struct ldiv_t':'ldiv_t'
| `-ElaboratedType 0x557829618690 'struct ldiv_t' sugar
|   `-RecordType 0x557829618590 'ldiv_t'
|     `-Record 0x557829618510 ''
|-RecordDecl 0x557829618760 <line:240:9, line:244:1> line:240:9 struct definition
| |-FieldDecl 0x557829618820 <line:242:3, col:17> col:17 quot 'long long'
| `-FieldDecl 0x557829618888 <line:243:3, col:17> col:17 rem 'long long'
|-TypedefDecl 0x557829618940 <line:240:1, line:244:3> col:3 referenced lldiv_t 'struct lldiv_t':'lldiv_t'
| `-ElaboratedType 0x5578296188e0 'struct lldiv_t' sugar
|   `-RecordType 0x5578296187e0 'lldiv_t'
|     `-Record 0x557829618760 ''
|-TypedefDecl 0x557829618bf8 <line:245:1, col:57> col:15 referenced __compar_fn_t 'int (*)(const void *, const void *)'
| `-PointerType 0x557829618b80 'int (*)(const void *, const void *)'
|   `-ParenType 0x557829618b20 'int (const void *, const void *)' sugar
|     `-FunctionProtoType 0x557829618ae0 'int (const void *, const void *)' cdecl
|       |-BuiltinType 0x55782959e080 'int'
|       |-PointerType 0x5578296189b0 'const void *'
|       | `-QualType 0x55782959dfe1 'const void' const
|       |   `-BuiltinType 0x55782959dfe0 'void'
|       `-PointerType 0x5578296189b0 'const void *'
|         `-QualType 0x55782959dfe1 'const void' const
|           `-BuiltinType 0x55782959dfe0 'void'
|-FunctionDecl 0x557829618d58 <line:246:1, col:57> col:32 __locale_mb_cur_max 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x557829618f30 <line:247:33> col:33 implicit abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x557829618fd0 prev 0x557829618f30 <col:1, col:75> col:33 abort 'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x557829619190 <line:248:32> col:32 implicit abs 'int (int)' extern
| |-ParmVarDecl 0x557829619230 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x5578296192a0 <col:32> Implicit
| `-ConstAttr 0x5578296192f8 <col:32> Implicit
|-FunctionDecl 0x557829619320 prev 0x557829619190 <col:1, col:40> col:32 abs 'int (int)'
| |-ParmVarDecl 0x557829619088 <col:37> col:40 'int'
| |-NoThrowAttr 0x5578296193f8 <col:32> Inherited Implicit
| `-ConstAttr 0x557829619450 <col:32> Inherited Implicit
|-FunctionDecl 0x5578296196a0 <line:249:1, col:60> col:32 atexit 'int (void (*)(void)) __attribute__((cdecl))':'int (void (*)(void))'
| `-ParmVarDecl 0x557829619520 <col:40, col:59> col:47 __func 'void (*)(void)'
|-FunctionDecl 0x5578296198a0 <line:250:1, col:59> col:35 atof 'double (const char *) __attribute__((cdecl))':'double (const char *)'
| `-ParmVarDecl 0x557829619760 <col:41, col:53> col:53 __nptr 'const char *'
|-FunctionDecl 0x557829619aa0 <line:251:1, col:59> col:34 atoff 'float (const char *) __attribute__((cdecl))':'float (const char *)'
| `-ParmVarDecl 0x557829619960 <col:41, col:53> col:53 __nptr 'const char *'
|-FunctionDecl 0x557829619c60 <line:252:1, col:56> col:32 atoi 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x557829619b60 <col:38, col:50> col:50 __nptr 'const char *'
|-FunctionDecl 0x557829619f48 <line:253:1, col:76> col:32 _atoi_r 'int (struct _reent *, const char *) __attribute__((cdecl))':'int (struct _reent *, const char *)'
| |-ParmVarDecl 0x557829619d30 <col:41, col:55> col:56 'struct _reent *'
| `-ParmVarDecl 0x557829619db0 <col:58, col:70> col:70 __nptr 'const char *'
|-FunctionDecl 0x55782961a150 <line:254:1, col:57> col:33 atol 'long (const char *) __attribute__((cdecl))':'long (const char *)'
| `-ParmVarDecl 0x55782961a010 <col:39, col:51> col:51 __nptr 'const char *'
|-FunctionDecl 0x55782961bc70 <line:255:1, col:77> col:33 _atol_r 'long (struct _reent *, const char *) __attribute__((cdecl))':'long (struct _reent *, const char *)'
| |-ParmVarDecl 0x55782961a220 <col:42, col:56> col:57 'struct _reent *'
| `-ParmVarDecl 0x55782961a2a0 <col:59, col:71> col:71 __nptr 'const char *'
|-FunctionDecl 0x55782961c120 <line:256:1, col:137> col:35 bsearch 'void *(const void *, const void *, size_t, size_t, __compar_fn_t) __attribute__((cdecl))':'void *(const void *, const void *, size_t, size_t, __compar_fn_t)'
| |-ParmVarDecl 0x55782961bd38 <col:44, col:57> col:57 __key 'const void *'
| |-ParmVarDecl 0x55782961bdb8 <col:64, col:77> col:77 __base 'const void *'
| |-ParmVarDecl 0x55782961be30 <col:85, col:92> col:92 __nmemb 'size_t':'unsigned long'
| |-ParmVarDecl 0x55782961bea8 <col:101, col:108> col:108 __size 'size_t':'unsigned long'
| `-ParmVarDecl 0x55782961bf48 <col:116, col:130> col:130 _compar '__compar_fn_t':'int (*)(const void *, const void *)'
|-FunctionDecl 0x55782961c378 <line:257:35> col:35 implicit calloc 'void *(unsigned long, unsigned long)' extern
| |-ParmVarDecl 0x55782961c418 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-ParmVarDecl 0x55782961c480 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x55782961c4f8 prev 0x55782961c378 <col:1, col:72> col:35 calloc 'void *(unsigned long, unsigned long)'
| |-ParmVarDecl 0x55782961c1f8 <col:43, col:50> col:50 __nmemb 'size_t':'unsigned long'
| `-ParmVarDecl 0x55782961c270 <col:59, col:66> col:66 __size 'size_t':'unsigned long'
|-FunctionDecl 0x55782961c800 <line:258:1, col:63> col:34 div 'div_t (int, int) __attribute__((cdecl))':'div_t (int, int)'
| |-ParmVarDecl 0x55782961c5f0 <col:39, col:43> col:43 __numer 'int'
| `-ParmVarDecl 0x55782961c670 <col:52, col:56> col:56 __denom 'int'
|-FunctionDecl 0x55782961ca00 <line:259:33> col:33 implicit exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55782961caa0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x55782961cb10 prev 0x55782961ca00 <col:1, col:82> col:33 exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x55782961c8c8 <col:39, col:43> col:43 __status 'int'
|-FunctionDecl 0x55782961cd48 <line:260:1, col:45> col:33 free 'void (void *) __attribute__((cdecl))':'void (void *)'
| `-ParmVarDecl 0x55782961cbd0 <col:39, col:44> col:45 'void *'
|-FunctionDecl 0x55782961cf10 <line:261:1, col:63> col:35 getenv 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x55782961ce08 <col:43, col:55> col:55 __string 'const char *'
|-FunctionDecl 0x55782961d1f8 <line:262:1, col:83> col:35 _getenv_r 'char *(struct _reent *, const char *) __attribute__((cdecl))':'char *(struct _reent *, const char *)'
| |-ParmVarDecl 0x55782961cfe0 <col:46, col:60> col:61 'struct _reent *'
| `-ParmVarDecl 0x55782961d060 <col:63, col:75> col:75 __string 'const char *'
|-FunctionDecl 0x55782961d4c8 <line:263:1, col:64> col:35 _findenv 'char *(const char *, int *) __attribute__((cdecl))':'char *(const char *, int *)'
| |-ParmVarDecl 0x55782961d2c0 <col:45, col:56> col:57 'const char *'
| `-ParmVarDecl 0x55782961d378 <col:59, col:63> col:64 'int *'
|-FunctionDecl 0x55782961d850 <line:264:1, col:83> col:35 _findenv_r 'char *(struct _reent *, const char *, int *) __attribute__((cdecl))':'char *(struct _reent *, const char *, int *)'
| |-ParmVarDecl 0x55782961d5a0 <col:47, col:61> col:62 'struct _reent *'
| |-ParmVarDecl 0x55782961d620 <col:64, col:75> col:76 'const char *'
| `-ParmVarDecl 0x55782961d6a0 <col:78, col:82> col:83 'int *'
|-VarDecl 0x55782961d920 <line:265:1, col:14> col:14 suboptarg 'char *' extern
|-FunctionDecl 0x55782961dc90 <line:266:1, col:75> col:32 getsubopt 'int (char **, char *const *, char **) __attribute__((cdecl))':'int (char **, char *const *, char **)'
| |-ParmVarDecl 0x55782961d9d8 <col:43, col:49> col:50 'char **'
| |-ParmVarDecl 0x55782961da88 <col:52, col:65> col:66 'char *const *'
| `-ParmVarDecl 0x55782961db08 <col:68, col:74> col:75 'char **'
|-FunctionDecl 0x55782961dea0 <line:267:33> col:33 implicit labs 'long (long)' extern
| |-ParmVarDecl 0x55782961df40 <<invalid sloc>> <invalid sloc> 'long'
| |-NoThrowAttr 0x55782961dfb0 <col:33> Implicit
| `-ConstAttr 0x55782961e008 <col:33> Implicit
|-FunctionDecl 0x55782961e030 prev 0x55782961dea0 <col:1, col:43> col:33 labs 'long (long)'
| |-ParmVarDecl 0x55782961dd60 <col:39> col:43 'long'
| |-NoThrowAttr 0x55782961e108 <col:33> Inherited Implicit
| `-ConstAttr 0x55782961e130 <col:33> Inherited Implicit
|-FunctionDecl 0x55782961e3b0 <line:268:1, col:67> col:35 ldiv 'ldiv_t (long, long) __attribute__((cdecl))':'ldiv_t (long, long)'
| |-ParmVarDecl 0x55782961e1a0 <col:41, col:46> col:46 __numer 'long'
| `-ParmVarDecl 0x55782961e220 <col:55, col:60> col:60 __denom 'long'
|-FunctionDecl 0x55782961e570 <line:269:35> col:35 implicit malloc 'void *(unsigned long)' extern
| `-ParmVarDecl 0x55782961e610 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x55782961e680 prev 0x55782961e570 <col:1, col:56> col:35 malloc 'void *(unsigned long)'
| `-ParmVarDecl 0x55782961e470 <col:43, col:50> col:50 __size 'size_t':'unsigned long'
|-FunctionDecl 0x55782961e948 <line:270:1, col:59> col:32 mblen 'int (const char *, size_t) __attribute__((cdecl))':'int (const char *, size_t)'
| |-ParmVarDecl 0x55782961e740 <col:39, col:50> col:51 'const char *'
| `-ParmVarDecl 0x55782961e7b8 <col:53> col:59 'size_t':'unsigned long'
|-FunctionDecl 0x55782961edf8 <line:271:1, col:93> col:32 _mblen_r 'int (struct _reent *, const char *, size_t, _mbstate_t *) __attribute__((cdecl))':'int (struct _reent *, const char *, size_t, _mbstate_t *)'
| |-ParmVarDecl 0x55782961ea20 <col:42, col:56> col:57 'struct _reent *'
| |-ParmVarDecl 0x55782961eaa0 <col:59, col:70> col:71 'const char *'
| |-ParmVarDecl 0x55782961eb18 <col:73> col:79 'size_t':'unsigned long'
| `-ParmVarDecl 0x55782961ebf0 <col:81, col:92> col:93 '_mbstate_t *'
|-FunctionDecl 0x55782961f200 <line:272:1, col:71> col:32 mbtowc 'int (wchar_t *, const char *, size_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x55782961ef60 <col:40, col:48> col:49 'wchar_t *'
| |-ParmVarDecl 0x55782961efe0 <col:51, col:62> col:63 'const char *'
| `-ParmVarDecl 0x55782961f058 <col:65> col:71 'size_t':'unsigned long'
|-FunctionDecl 0x55782961f6a0 <line:273:1, col:105> col:32 _mbtowc_r 'int (struct _reent *, wchar_t *, const char *, size_t, _mbstate_t *) __attribute__((cdecl))':'int (struct _reent *, wchar_t *, const char *, size_t, _mbstate_t *)'
| |-ParmVarDecl 0x55782961f2e0 <col:43, col:57> col:58 'struct _reent *'
| |-ParmVarDecl 0x55782961f358 <col:60, col:68> col:69 'wchar_t *'
| |-ParmVarDecl 0x55782961f3d8 <col:71, col:82> col:83 'const char *'
| |-ParmVarDecl 0x55782961f450 <col:85> col:91 'size_t':'unsigned long'
| `-ParmVarDecl 0x55782961f4c8 <col:93, col:104> col:105 '_mbstate_t *'
|-FunctionDecl 0x55782961f988 <line:274:1, col:55> col:32 wctomb 'int (char *, wchar_t) __attribute__((cdecl))':'int (char *, wchar_t)'
| |-ParmVarDecl 0x55782961f780 <col:40, col:45> col:46 'char *'
| `-ParmVarDecl 0x55782961f7f8 <col:48> col:55 'wchar_t':'unsigned short'
|-FunctionDecl 0x55782961fdb8 <line:275:1, col:89> col:32 _wctomb_r 'int (struct _reent *, char *, wchar_t, _mbstate_t *) __attribute__((cdecl))':'int (struct _reent *, char *, wchar_t, _mbstate_t *)'
| |-ParmVarDecl 0x55782961fa60 <col:43, col:57> col:58 'struct _reent *'
| |-ParmVarDecl 0x55782961fae0 <col:60, col:65> col:66 'char *'
| |-ParmVarDecl 0x55782961fb58 <col:68> col:75 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x55782961fbd0 <col:77, col:88> col:89 '_mbstate_t *'
|-FunctionDecl 0x557829620128 <line:276:1, col:76> col:35 mbstowcs 'size_t (wchar_t *, const char *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x55782961fe88 <col:45, col:53> col:54 'wchar_t *'
| |-ParmVarDecl 0x55782961ff08 <col:56, col:67> col:68 'const char *'
| `-ParmVarDecl 0x55782961ff80 <col:70> col:76 'size_t':'unsigned long'
|-FunctionDecl 0x5578296205c8 <line:277:1, col:110> col:35 _mbstowcs_r 'size_t (struct _reent *, wchar_t *, const char *, size_t, _mbstate_t *) __attribute__((cdecl))':'size_t (struct _reent *, wchar_t *, const char *, size_t, _mbstate_t *)'
| |-ParmVarDecl 0x557829620208 <col:48, col:62> col:63 'struct _reent *'
| |-ParmVarDecl 0x557829620280 <col:65, col:73> col:74 'wchar_t *'
| |-ParmVarDecl 0x557829620300 <col:76, col:87> col:88 'const char *'
| |-ParmVarDecl 0x557829620378 <col:90> col:96 'size_t':'unsigned long'
| `-ParmVarDecl 0x5578296203f0 <col:98, col:109> col:110 '_mbstate_t *'
|-FunctionDecl 0x557829620998 <line:278:1, col:76> col:35 wcstombs 'size_t (char *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x5578296206a8 <col:45, col:50> col:51 'char *'
| |-ParmVarDecl 0x557829620780 <col:53, col:67> col:68 'const wchar_t *'
| `-ParmVarDecl 0x5578296207f8 <col:70> col:76 'size_t':'unsigned long'
|-FunctionDecl 0x557829620e98 <line:279:1, col:110> col:35 _wcstombs_r 'size_t (struct _reent *, char *, const wchar_t *, size_t, _mbstate_t *) __attribute__((cdecl))':'size_t (struct _reent *, char *, const wchar_t *, size_t, _mbstate_t *)'
| |-ParmVarDecl 0x557829620a78 <col:48, col:62> col:63 'struct _reent *'
| |-ParmVarDecl 0x557829620af8 <col:65, col:70> col:71 'char *'
| |-ParmVarDecl 0x557829620b70 <col:73, col:87> col:88 'const wchar_t *'
| |-ParmVarDecl 0x557829620be8 <col:90> col:96 'size_t':'unsigned long'
| `-ParmVarDecl 0x557829620cc0 <col:98, col:109> col:110 '_mbstate_t *'
|-FunctionDecl 0x557829621080 prev 0x557829614968 <line:280:1, col:50> col:35 mkdtemp 'char *(char *)'
| `-ParmVarDecl 0x557829620f78 <col:44, col:49> col:50 'char *'
|-FunctionDecl 0x557829621318 <line:281:1, col:53> col:32 mkostemp 'int (char *, int) __attribute__((cdecl))':'int (char *, int)'
| |-ParmVarDecl 0x557829621140 <col:42, col:47> col:48 'char *'
| `-ParmVarDecl 0x5578296211c0 <col:50> col:53 'int'
|-FunctionDecl 0x557829621640 <line:282:1, col:59> col:32 mkostemps 'int (char *, int, int) __attribute__((cdecl))':'int (char *, int, int)'
| |-ParmVarDecl 0x5578296213e0 <col:43, col:48> col:49 'char *'
| |-ParmVarDecl 0x557829621460 <col:51> col:54 'int'
| `-ParmVarDecl 0x5578296214e0 <col:56> col:59 'int'
|-FunctionDecl 0x557829621850 <line:283:1, col:47> col:32 mkstemp 'int (char *) __attribute__((cdecl))':'int (char *)'
| `-ParmVarDecl 0x557829621710 <col:41, col:46> col:47 'char *'
|-FunctionDecl 0x557829621a60 <line:284:1, col:53> col:32 mkstemps 'int (char *, int) __attribute__((cdecl))':'int (char *, int)'
| |-ParmVarDecl 0x557829621910 <col:42, col:47> col:48 'char *'
| `-ParmVarDecl 0x557829621990 <col:50> col:53 'int'
|-FunctionDecl 0x557829621cd0 <line:285:1, col:139> col:35 mktemp 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x557829621b28 <col:43, col:48> col:49 'char *'
|-FunctionDecl 0x557829621fb8 <line:286:1, col:70> col:35 _mkdtemp_r 'char *(struct _reent *, char *) __attribute__((cdecl))':'char *(struct _reent *, char *)'
| |-ParmVarDecl 0x557829621da0 <col:47, col:61> col:62 'struct _reent *'
| `-ParmVarDecl 0x557829621e20 <col:64, col:69> col:70 'char *'
|-FunctionDecl 0x557829622340 <line:287:1, col:73> col:32 _mkostemp_r 'int (struct _reent *, char *, int) __attribute__((cdecl))':'int (struct _reent *, char *, int)'
| |-ParmVarDecl 0x557829622090 <col:45, col:59> col:60 'struct _reent *'
| |-ParmVarDecl 0x557829622110 <col:62, col:67> col:68 'char *'
| `-ParmVarDecl 0x557829622190 <col:70> col:73 'int'
|-FunctionDecl 0x557829622768 <line:288:1, col:79> col:32 _mkostemps_r 'int (struct _reent *, char *, int, int) __attribute__((cdecl))':'int (struct _reent *, char *, int, int)'
| |-ParmVarDecl 0x557829622420 <col:46, col:60> col:61 'struct _reent *'
| |-ParmVarDecl 0x5578296224a0 <col:63, col:68> col:69 'char *'
| |-ParmVarDecl 0x557829622520 <col:71> col:74 'int'
| `-ParmVarDecl 0x5578296225a0 <col:76> col:79 'int'
|-FunctionDecl 0x557829622a68 <line:289:1, col:67> col:32 _mkstemp_r 'int (struct _reent *, char *) __attribute__((cdecl))':'int (struct _reent *, char *)'
| |-ParmVarDecl 0x557829622850 <col:44, col:58> col:59 'struct _reent *'
| `-ParmVarDecl 0x5578296228d0 <col:61, col:66> col:67 'char *'
|-FunctionDecl 0x557829622d28 <line:290:1, col:73> col:32 _mkstemps_r 'int (struct _reent *, char *, int) __attribute__((cdecl))':'int (struct _reent *, char *, int)'
| |-ParmVarDecl 0x557829622b40 <col:45, col:59> col:60 'struct _reent *'
| |-ParmVarDecl 0x557829622bc0 <col:62, col:67> col:68 'char *'
| `-ParmVarDecl 0x557829622c40 <col:70> col:73 'int'
|-FunctionDecl 0x557829622fa8 <line:291:1, col:159> col:35 _mktemp_r 'char *(struct _reent *, char *) __attribute__((cdecl))':'char *(struct _reent *, char *)'
| |-ParmVarDecl 0x557829622e08 <col:46, col:60> col:61 'struct _reent *'
| `-ParmVarDecl 0x557829622e88 <col:63, col:68> col:69 'char *'
|-FunctionDecl 0x557829623390 <line:292:1, col:107> col:33 qsort 'void (void *, size_t, size_t, __compar_fn_t) __attribute__((cdecl))':'void (void *, size_t, size_t, __compar_fn_t)'
| |-ParmVarDecl 0x557829623070 <col:40, col:47> col:47 __base 'void *'
| |-ParmVarDecl 0x5578296230e8 <col:55, col:62> col:62 __nmemb 'size_t':'unsigned long'
| |-ParmVarDecl 0x557829623160 <col:71, col:78> col:78 __size 'size_t':'unsigned long'
| `-ParmVarDecl 0x5578296231d8 <col:86, col:100> col:100 _compar '__compar_fn_t':'int (*)(const void *, const void *)'
|-FunctionDecl 0x557829623520 <line:293:1, col:42> col:32 rand 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x5578296237e8 <line:294:35> col:35 implicit realloc 'void *(void *, unsigned long)' extern
| |-ParmVarDecl 0x557829623888 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0x5578296238f0 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x557829623968 prev 0x5578296237e8 <col:1, col:69> col:35 realloc 'void *(void *, unsigned long)'
| |-ParmVarDecl 0x5578296235d8 <col:44, col:51> col:51 __r 'void *'
| `-ParmVarDecl 0x557829623650 <col:56, col:63> col:63 __size 'size_t':'unsigned long'
|-FunctionDecl 0x557829623b78 <line:295:1, col:70> col:35 reallocf 'void *(void *, size_t) __attribute__((cdecl))':'void *(void *, size_t)'
| |-ParmVarDecl 0x557829623a30 <col:45, col:52> col:52 __r 'void *'
| `-ParmVarDecl 0x557829623aa8 <col:57, col:64> col:64 __size 'size_t':'unsigned long'
|-FunctionDecl 0x557829624e58 <line:296:1, col:84> col:35 realpath 'char *(const char *, char *) __attribute__((cdecl))':'char *(const char *, char *)'
| |-ParmVarDecl 0x557829623c40 <col:45, col:58> col:58 path 'const char *'
| `-ParmVarDecl 0x557829624d00 <col:64, col:71> col:71 resolved_path 'char *'
|-FunctionDecl 0x557829625018 <line:297:1, col:55> col:33 srand 'void (unsigned int) __attribute__((cdecl))':'void (unsigned int)'
| `-ParmVarDecl 0x557829624f20 <col:40, col:49> col:49 __seed 'unsigned int'
|-FunctionDecl 0x5578296252a8 <line:298:35> col:35 implicit strtod 'double (const char *, char **)' extern
| |-ParmVarDecl 0x557829625348 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x5578296253b0 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x557829625428 prev 0x5578296252a8 <col:1, col:78> col:35 strtod 'double (const char *, char **)'
| |-ParmVarDecl 0x5578296250d8 <col:43, col:56> col:56 __n 'const char *'
| `-ParmVarDecl 0x557829625158 <col:61, col:69> col:69 __end_PTR 'char **'
|-FunctionDecl 0x5578296257b0 <line:299:1, col:97> col:35 _strtod_r 'double (struct _reent *, const char *, char **) __attribute__((cdecl))':'double (struct _reent *, const char *, char **)'
| |-ParmVarDecl 0x557829625500 <col:46, col:60> col:61 'struct _reent *'
| |-ParmVarDecl 0x557829625580 <col:62, col:75> col:75 __n 'const char *'
| `-ParmVarDecl 0x557829625600 <col:80, col:88> col:88 __end_PTR 'char **'
|-FunctionDecl 0x557829625a58 <line:300:34> col:34 implicit strtof 'float (const char *, char **)' extern
| |-ParmVarDecl 0x557829625af8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x557829625b60 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x557829625bd8 prev 0x557829625a58 <col:1, col:77> col:34 strtof 'float (const char *, char **)'
| |-ParmVarDecl 0x557829625880 <col:42, col:55> col:55 __n 'const char *'
| `-ParmVarDecl 0x557829625900 <col:60, col:68> col:68 __end_PTR 'char **'
|-FunctionDecl 0x557829625f70 <line:301:33> col:33 implicit strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x557829626010 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x557829626078 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x5578296260e0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x557829626160 prev 0x557829625f70 <col:1, col:88> col:33 strtol 'long (const char *, char **, int)'
| |-ParmVarDecl 0x557829625d10 <col:41, col:54> col:54 __n 'const char *'
| |-ParmVarDecl 0x557829625d90 <col:59, col:67> col:67 __end_PTR 'char **'
| `-ParmVarDecl 0x557829625e10 <col:78, col:82> col:82 __base 'int'
|-FunctionDecl 0x557829626588 <line:302:1, col:107> col:33 _strtol_r 'long (struct _reent *, const char *, char **, int) __attribute__((cdecl))':'long (struct _reent *, const char *, char **, int)'
| |-ParmVarDecl 0x557829626240 <col:44, col:58> col:59 'struct _reent *'
| |-ParmVarDecl 0x5578296262c0 <col:60, col:73> col:73 __n 'const char *'
| |-ParmVarDecl 0x557829626340 <col:78, col:86> col:86 __end_PTR 'char **'
| `-ParmVarDecl 0x5578296263c0 <col:97, col:101> col:101 __base 'int'
|-FunctionDecl 0x5578296268c0 <line:303:42> col:42 implicit strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0x557829626960 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x5578296269c8 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x557829626a30 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x557829626ab0 prev 0x5578296268c0 <col:1, col:98> col:42 strtoul 'unsigned long (const char *, char **, int)'
| |-ParmVarDecl 0x557829626660 <col:51, col:64> col:64 __n 'const char *'
| |-ParmVarDecl 0x5578296266e0 <col:69, col:77> col:77 __end_PTR 'char **'
| `-ParmVarDecl 0x557829626760 <col:88, col:92> col:92 __base 'int'
|-FunctionDecl 0x557829626ee8 <line:304:1, col:117> col:42 _strtoul_r 'unsigned long (struct _reent *, const char *, char **, int) __attribute__((cdecl))':'unsigned long (struct _reent *, const char *, char **, int)'
| |-ParmVarDecl 0x557829626b90 <col:54, col:68> col:69 'struct _reent *'
| |-ParmVarDecl 0x557829626c10 <col:70, col:83> col:83 __n 'const char *'
| |-ParmVarDecl 0x557829626c90 <col:88, col:96> col:96 __end_PTR 'char **'
| `-ParmVarDecl 0x557829626d20 <col:107, col:111> col:111 __base 'int'
|-FunctionDecl 0x557829627088 <line:305:1, col:60> col:32 system 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x557829626fc0 <col:40, col:52> col:52 __string 'const char *'
|-FunctionDecl 0x557829627210 <line:306:1, col:58> col:33 a64l 'long (const char *) __attribute__((cdecl))':'long (const char *)'
| `-ParmVarDecl 0x557829627148 <col:39, col:51> col:51 __input 'const char *'
|-FunctionDecl 0x557829627410 <line:307:1, col:53> col:35 l64a 'char *(long) __attribute__((cdecl))':'char *(long)'
| `-ParmVarDecl 0x5578296272d0 <col:41, col:46> col:46 __input 'long'
|-FunctionDecl 0x5578296276f8 <line:308:1, col:72> col:35 _l64a_r 'char *(struct _reent *, long) __attribute__((cdecl))':'char *(struct _reent *, long)'
| |-ParmVarDecl 0x5578296274e0 <col:44, col:58> col:59 'struct _reent *'
| `-ParmVarDecl 0x557829627560 <col:60, col:65> col:65 __input 'long'
|-FunctionDecl 0x557829627bd8 <line:309:1, col:81> col:32 on_exit 'int (void (*)(int, void *), void *) __attribute__((cdecl))':'int (void (*)(int, void *), void *)'
| |-ParmVarDecl 0x5578296279c0 <col:41, col:67> col:48 __func 'void (*)(int, void *)'
| `-ParmVarDecl 0x557829627a40 <col:69, col:76> col:76 __arg 'void *'
|-FunctionDecl 0x557829627d80 <line:310:33> col:33 implicit _Exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x557829627e20 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x557829627e90 prev 0x557829627d80 <col:1, col:83> col:33 _Exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x557829627ca0 <col:40, col:44> col:44 __status 'int'
|-FunctionDecl 0x557829628018 <line:311:1, col:54> col:32 putenv 'int (char *) __attribute__((cdecl))':'int (char *)'
| `-ParmVarDecl 0x557829627f50 <col:40, col:46> col:46 __string 'char *'
|-FunctionDecl 0x557829628238 <line:312:1, col:74> col:32 _putenv_r 'int (struct _reent *, char *) __attribute__((cdecl))':'int (struct _reent *, char *)'
| |-ParmVarDecl 0x5578296280e8 <col:43, col:57> col:58 'struct _reent *'
| `-ParmVarDecl 0x557829628168 <col:60, col:66> col:66 __string 'char *'
|-FunctionDecl 0x5578296285b0 <line:313:1, col:79> col:35 _reallocf_r 'void *(struct _reent *, void *, size_t) __attribute__((cdecl))':'void *(struct _reent *, void *, size_t)'
| |-ParmVarDecl 0x557829628310 <col:48, col:62> col:63 'struct _reent *'
| |-ParmVarDecl 0x557829628390 <col:65, col:70> col:71 'void *'
| `-ParmVarDecl 0x557829628408 <col:73> col:79 'size_t':'unsigned long'
|-FunctionDecl 0x5578296288e0 <line:314:1, col:98> col:32 setenv 'int (const char *, const char *, int) __attribute__((cdecl))':'int (const char *, const char *, int)'
| |-ParmVarDecl 0x557829628680 <col:40, col:52> col:52 __string 'const char *'
| |-ParmVarDecl 0x557829628700 <col:62, col:74> col:74 __value 'const char *'
| `-ParmVarDecl 0x557829628780 <col:83, col:87> col:87 __overwrite 'int'
|-FunctionDecl 0x557829629150 <line:315:1, col:118> col:32 _setenv_r 'int (struct _reent *, const char *, const char *, int) __attribute__((cdecl))':'int (struct _reent *, const char *, const char *, int)'
| |-ParmVarDecl 0x5578296289c0 <col:43, col:57> col:58 'struct _reent *'
| |-ParmVarDecl 0x557829628a40 <col:60, col:72> col:72 __string 'const char *'
| |-ParmVarDecl 0x557829628ac0 <col:82, col:94> col:94 __value 'const char *'
| `-ParmVarDecl 0x557829628b40 <col:103, col:107> col:107 __overwrite 'int'
|-FunctionDecl 0x557829629480 <line:316:1, col:58> col:35 gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x557829629228 <col:41> col:47 'double'
| |-ParmVarDecl 0x5578296292a8 <col:48> col:51 'int'
| `-ParmVarDecl 0x557829629328 <col:52, col:57> col:58 'char *'
|-FunctionDecl 0x5578296297b0 <line:317:1, col:58> col:35 gcvtf 'char *(float, int, char *) __attribute__((cdecl))':'char *(float, int, char *)'
| |-ParmVarDecl 0x557829629550 <col:42> col:47 'float'
| |-ParmVarDecl 0x5578296295d0 <col:48> col:51 'int'
| `-ParmVarDecl 0x557829629650 <col:52, col:57> col:58 'char *'
|-FunctionDecl 0x557829629b78 <line:318:1, col:63> col:35 fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x557829629880 <col:41> col:47 'double'
| |-ParmVarDecl 0x557829629900 <col:48> col:51 'int'
| |-ParmVarDecl 0x557829629980 <col:52, col:56> col:57 'int *'
| `-ParmVarDecl 0x557829629a00 <col:58, col:62> col:63 'int *'
|-FunctionDecl 0x557829629f48 <line:319:1, col:63> col:35 fcvtf 'char *(float, int, int *, int *) __attribute__((cdecl))':'char *(float, int, int *, int *)'
| |-ParmVarDecl 0x557829629c50 <col:42> col:47 'float'
| |-ParmVarDecl 0x557829629cd0 <col:48> col:51 'int'
| |-ParmVarDecl 0x557829629d50 <col:52, col:56> col:57 'int *'
| `-ParmVarDecl 0x557829629dd0 <col:58, col:62> col:63 'int *'
|-FunctionDecl 0x55782962a2c0 <line:320:1, col:63> col:35 ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x55782962a020 <col:41> col:47 'double'
| |-ParmVarDecl 0x55782962a0a0 <col:48> col:51 'int'
| |-ParmVarDecl 0x55782962a160 <col:52, col:56> col:57 'int *'
| `-ParmVarDecl 0x55782962a1e0 <col:58, col:62> col:63 'int *'
|-FunctionDecl 0x55782962a710 <line:321:1, col:75> col:35 ecvtbuf 'char *(double, int, int *, int *, char *) __attribute__((cdecl))':'char *(double, int, int *, int *, char *)'
| |-ParmVarDecl 0x55782962a398 <col:44> col:50 'double'
| |-ParmVarDecl 0x55782962a418 <col:52> col:55 'int'
| |-ParmVarDecl 0x55782962a498 <col:57, col:60> col:61 'int *'
| |-ParmVarDecl 0x55782962a518 <col:63, col:66> col:67 'int *'
| `-ParmVarDecl 0x55782962a598 <col:69, col:74> col:75 'char *'
|-FunctionDecl 0x55782962aad8 <line:322:1, col:75> col:35 fcvtbuf 'char *(double, int, int *, int *, char *) __attribute__((cdecl))':'char *(double, int, int *, int *, char *)'
| |-ParmVarDecl 0x55782962a7f0 <col:44> col:50 'double'
| |-ParmVarDecl 0x55782962a870 <col:52> col:55 'int'
| |-ParmVarDecl 0x55782962a8f0 <col:57, col:60> col:61 'int *'
| |-ParmVarDecl 0x55782962a970 <col:63, col:66> col:67 'int *'
| `-ParmVarDecl 0x55782962a9f0 <col:69, col:74> col:75 'char *'
|-FunctionDecl 0x55782962ae18 <line:323:1, col:63> col:35 ecvtf 'char *(float, int, int *, int *) __attribute__((cdecl))':'char *(float, int, int *, int *)'
| |-ParmVarDecl 0x55782962abb8 <col:42> col:47 'float'
| |-ParmVarDecl 0x55782962ac38 <col:48> col:51 'int'
| |-ParmVarDecl 0x55782962acb8 <col:52, col:56> col:57 'int *'
| `-ParmVarDecl 0x55782962ad38 <col:58, col:62> col:63 'int *'
|-FunctionDecl 0x55782962b318 <line:324:1, col:78> col:35 dtoa 'char *(double, int, int, int *, int *, char **) __attribute__((cdecl))':'char *(double, int, int, int *, int *, char **)'
| |-ParmVarDecl 0x55782962aef0 <col:41> col:47 'double'
| |-ParmVarDecl 0x55782962af70 <col:49> col:52 'int'
| |-ParmVarDecl 0x55782962aff0 <col:54> col:57 'int'
| |-ParmVarDecl 0x55782962b070 <col:59, col:63> col:64 'int *'
| |-ParmVarDecl 0x55782962b0f0 <col:66, col:69> col:70 'int *'
| `-ParmVarDecl 0x55782962b188 <col:72, col:77> col:78 'char **'
|-FunctionDecl 0x55782962b660 <line:325:1, col:59> col:35 __itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x55782962b400 <col:43> col:46 'int'
| |-ParmVarDecl 0x55782962b480 <col:48, col:53> col:54 'char *'
| `-ParmVarDecl 0x55782962b500 <col:56> col:59 'int'
|-FunctionDecl 0x55782962b990 <line:326:1, col:64> col:35 __utoa 'char *(unsigned int, char *, int) __attribute__((cdecl))':'char *(unsigned int, char *, int)'
| |-ParmVarDecl 0x55782962b730 <col:43> col:51 'unsigned int'
| |-ParmVarDecl 0x55782962b7b0 <col:53, col:58> col:59 'char *'
| `-ParmVarDecl 0x55782962b830 <col:61> col:64 'int'
|-FunctionDecl 0x55782962bc38 <line:327:1, col:57> col:35 itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x55782962ba60 <col:41> col:44 'int'
| |-ParmVarDecl 0x55782962bae0 <col:46, col:51> col:52 'char *'
| `-ParmVarDecl 0x55782962bb60 <col:54> col:57 'int'
|-FunctionDecl 0x55782962bee0 <line:328:1, col:62> col:35 utoa 'char *(unsigned int, char *, int) __attribute__((cdecl))':'char *(unsigned int, char *, int)'
| |-ParmVarDecl 0x55782962bd08 <col:41> col:49 'unsigned int'
| |-ParmVarDecl 0x55782962bd88 <col:51, col:56> col:57 'char *'
| `-ParmVarDecl 0x55782962be08 <col:59> col:62 'int'
|-FunctionDecl 0x55782962c180 <line:329:1, col:56> col:32 rand_r 'int (unsigned int *) __attribute__((cdecl))':'int (unsigned int *)'
| `-ParmVarDecl 0x55782962bfe8 <col:40, col:50> col:50 __seed 'unsigned int *'
|-FunctionDecl 0x55782962c368 <line:330:1, col:48> col:35 drand48 'double (void) __attribute__((cdecl))':'double (void)'
|-FunctionDecl 0x55782962c5b0 <line:331:1, col:62> col:35 _drand48_r 'double (struct _reent *) __attribute__((cdecl))':'double (struct _reent *)'
| `-ParmVarDecl 0x55782962c430 <col:47, col:61> col:62 'struct _reent *'
|-FunctionDecl 0x55782962c870 <line:332:1, col:62> col:35 erand48 'double (unsigned short *) __attribute__((cdecl))':'double (unsigned short *)'
| `-ParmVarDecl 0x55782962c6f8 <col:44, col:61> col:59 'unsigned short *':'unsigned short *'
|-FunctionDecl 0x55782962cb98 <line:333:1, col:82> col:35 _erand48_r 'double (struct _reent *, unsigned short *) __attribute__((cdecl))':'double (struct _reent *, unsigned short *)'
| |-ParmVarDecl 0x55782962c940 <col:47, col:61> col:62 'struct _reent *'
| `-ParmVarDecl 0x55782962ca08 <col:64, col:81> col:79 'unsigned short *':'unsigned short *'
|-FunctionDecl 0x55782962ce20 <line:334:1, col:60> col:33 jrand48 'long (unsigned short *) __attribute__((cdecl))':'long (unsigned short *)'
| `-ParmVarDecl 0x55782962cca8 <col:42, col:59> col:57 'unsigned short *':'unsigned short *'
|-FunctionDecl 0x55782962d190 <line:335:1, col:80> col:33 _jrand48_r 'long (struct _reent *, unsigned short *) __attribute__((cdecl))':'long (struct _reent *, unsigned short *)'
| |-ParmVarDecl 0x55782962cef0 <col:45, col:59> col:60 'struct _reent *'
| `-ParmVarDecl 0x55782962cfb8 <col:62, col:79> col:77 'unsigned short *':'unsigned short *'
|-FunctionDecl 0x55782962d498 <line:336:1, col:60> col:33 lcong48 'void (unsigned short *) __attribute__((cdecl))':'void (unsigned short *)'
| `-ParmVarDecl 0x55782962d328 <col:42, col:59> col:57 'unsigned short *':'unsigned short *'
|-FunctionDecl 0x55782962d7c0 <line:337:1, col:80> col:33 _lcong48_r 'void (struct _reent *, unsigned short *) __attribute__((cdecl))':'void (struct _reent *, unsigned short *)'
| |-ParmVarDecl 0x55782962d568 <col:45, col:59> col:60 'struct _reent *'
| `-ParmVarDecl 0x55782962d630 <col:62, col:79> col:77 'unsigned short *':'unsigned short *'
|-FunctionDecl 0x55782962d978 <line:338:1, col:46> col:33 lrand48 'long (void) __attribute__((cdecl))':'long (void)'
|-FunctionDecl 0x55782962dbc0 <line:339:1, col:60> col:33 _lrand48_r 'long (struct _reent *) __attribute__((cdecl))':'long (struct _reent *)'
| `-ParmVarDecl 0x55782962da40 <col:45, col:59> col:60 'struct _reent *'
|-FunctionDecl 0x55782962dd38 <line:340:1, col:46> col:33 mrand48 'long (void) __attribute__((cdecl))':'long (void)'
|-FunctionDecl 0x55782962dec8 <line:341:1, col:60> col:33 _mrand48_r 'long (struct _reent *) __attribute__((cdecl))':'long (struct _reent *)'
| `-ParmVarDecl 0x55782962de00 <col:45, col:59> col:60 'struct _reent *'
|-FunctionDecl 0x55782962e098 <line:342:1, col:60> col:33 nrand48 'long (unsigned short *) __attribute__((cdecl))':'long (unsigned short *)'
| `-ParmVarDecl 0x55782962dfd0 <col:42, col:59> col:57 'unsigned short *':'unsigned short *'
|-FunctionDecl 0x55782962e338 <line:343:1, col:80> col:33 _nrand48_r 'long (struct _reent *, unsigned short *) __attribute__((cdecl))':'long (struct _reent *, unsigned short *)'
| |-ParmVarDecl 0x55782962e1a0 <col:45, col:59> col:60 'struct _reent *'
| `-ParmVarDecl 0x55782962e268 <col:62, col:79> col:77 'unsigned short *':'unsigned short *'
|-FunctionDecl 0x55782962e5c0 <line:344:1, line:345:61> col:35 seed48 'unsigned short *(unsigned short *) __attribute__((cdecl))':'unsigned short *(unsigned short *)'
| `-ParmVarDecl 0x55782962e448 <col:43, col:60> col:58 'unsigned short *':'unsigned short *'
|-FunctionDecl 0x55782962e8e8 <line:346:1, line:347:81> col:35 _seed48_r 'unsigned short *(struct _reent *, unsigned short *) __attribute__((cdecl))':'unsigned short *(struct _reent *, unsigned short *)'
| |-ParmVarDecl 0x55782962e690 <col:46, col:60> col:61 'struct _reent *'
| `-ParmVarDecl 0x55782962e758 <col:63, col:80> col:78 'unsigned short *':'unsigned short *'
|-FunctionDecl 0x55782962eae8 <line:348:1, col:46> col:33 srand48 'void (long) __attribute__((cdecl))':'void (long)'
| `-ParmVarDecl 0x55782962e9b0 <col:42> col:46 'long'
|-FunctionDecl 0x55782962edc0 <line:349:1, col:66> col:33 _srand48_r 'void (struct _reent *, long) __attribute__((cdecl))':'void (struct _reent *, long)'
| |-ParmVarDecl 0x55782962ebb8 <col:45, col:59> col:60 'struct _reent *'
| `-ParmVarDecl 0x55782962ec38 <col:62> col:66 'long'
|-FunctionDecl 0x55782962efc0 <line:350:1, col:63> col:38 atoll 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x55782962ee88 <col:45, col:57> col:57 __nptr 'const char *'
|-FunctionDecl 0x55782962f2d8 <line:351:1, col:83> col:38 _atoll_r 'long long (struct _reent *, const char *) __attribute__((cdecl))':'long long (struct _reent *, const char *)'
| |-ParmVarDecl 0x55782962f090 <col:48, col:62> col:63 'struct _reent *'
| `-ParmVarDecl 0x55782962f110 <col:65, col:77> col:77 __nptr 'const char *'
|-FunctionDecl 0x55782962f4e0 <line:352:38> col:38 implicit llabs 'long long (long long)' extern
| |-ParmVarDecl 0x55782962f580 <<invalid sloc>> <invalid sloc> 'long long'
| |-NoThrowAttr 0x55782962f5f0 <col:38> Implicit
| `-ConstAttr 0x55782962f648 <col:38> Implicit
|-FunctionDecl 0x55782962f670 prev 0x55782962f4e0 <col:1, col:54> col:38 llabs 'long long (long long)'
| |-ParmVarDecl 0x55782962f3a0 <col:45, col:50> col:54 'long long'
| |-NoThrowAttr 0x55782962f748 <col:38> Inherited Implicit
| `-ConstAttr 0x55782962f770 <col:38> Inherited Implicit
|-FunctionDecl 0x55782962f9f0 <line:353:1, col:79> col:36 lldiv 'lldiv_t (long long, long long) __attribute__((cdecl))':'lldiv_t (long long, long long)'
| |-ParmVarDecl 0x55782962f7e0 <col:43, col:53> col:53 __numer 'long long'
| `-ParmVarDecl 0x55782962f860 <col:62, col:72> col:72 __denom 'long long'
|-FunctionDecl 0x55782962fd10 <line:354:38> col:38 implicit strtoll 'long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x55782962fdb0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x55782962fe18 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x55782962fe80 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x55782962ff00 prev 0x55782962fd10 <col:1, col:94> col:38 strtoll 'long long (const char *, char **, int)'
| |-ParmVarDecl 0x55782962fab8 <col:47, col:60> col:60 __n 'const char *'
| |-ParmVarDecl 0x55782962fb38 <col:65, col:73> col:73 __end_PTR 'char **'
| `-ParmVarDecl 0x55782962fbb8 <col:84, col:88> col:88 __base 'int'
|-FunctionDecl 0x557829631398 <line:355:1, col:114> col:38 _strtoll_r 'long long (struct _reent *, const char *, char **, int) __attribute__((cdecl))':'long long (struct _reent *, const char *, char **, int)'
| |-ParmVarDecl 0x55782962ffe0 <col:50, col:64> col:65 'struct _reent *'
| |-ParmVarDecl 0x557829630060 <col:67, col:80> col:80 __n 'const char *'
| |-ParmVarDecl 0x5578296300e0 <col:85, col:93> col:93 __end_PTR 'char **'
| `-ParmVarDecl 0x5578296311d0 <col:104, col:108> col:108 __base 'int'
|-FunctionDecl 0x5578296316d0 <line:356:47> col:47 implicit used strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x557829631770 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x5578296317d8 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x557829631840 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x5578296318c0 prev 0x5578296316d0 <col:1, col:104> col:47 used strtoull 'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x557829631470 <col:57, col:70> col:70 __n 'const char *'
| |-ParmVarDecl 0x5578296314f0 <col:75, col:83> col:83 __end_PTR 'char **'
| `-ParmVarDecl 0x557829631570 <col:94, col:98> col:98 __base 'int'
|-FunctionDecl 0x557829631ce8 <line:357:1, col:124> col:47 _strtoull_r 'unsigned long long (struct _reent *, const char *, char **, int) __attribute__((cdecl))':'unsigned long long (struct _reent *, const char *, char **, int)'
| |-ParmVarDecl 0x5578296319a0 <col:60, col:74> col:75 'struct _reent *'
| |-ParmVarDecl 0x557829631a20 <col:77, col:90> col:90 __n 'const char *'
| |-ParmVarDecl 0x557829631aa0 <col:95, col:103> col:103 __end_PTR 'char **'
| `-ParmVarDecl 0x557829631b20 <col:114, col:118> col:118 __base 'int'
|-FunctionDecl 0x557829632310 <line:358:1, col:98> col:35 _dtoa_r 'char *(struct _reent *, double, int, int, int *, int *, char **) __attribute__((cdecl))':'char *(struct _reent *, double, int, int, int *, int *, char **)'
| |-ParmVarDecl 0x557829631dd0 <col:44, col:58> col:59 'struct _reent *'
| |-ParmVarDecl 0x557829631e50 <col:61> col:67 'double'
| |-ParmVarDecl 0x557829631ed0 <col:69> col:72 'int'
| |-ParmVarDecl 0x557829631f50 <col:74> col:77 'int'
| |-ParmVarDecl 0x557829631fd0 <col:79, col:83> col:84 'int *'
| |-ParmVarDecl 0x557829632050 <col:86, col:89> col:90 'int *'
| `-ParmVarDecl 0x5578296320d0 <col:92, col:97> col:98 'char **'
|-FunctionDecl 0x557829632560 <line:359:1, col:72> col:32 _system_r 'int (struct _reent *, const char *) __attribute__((cdecl))':'int (struct _reent *, const char *)'
| |-ParmVarDecl 0x557829632410 <col:43, col:57> col:58 'struct _reent *'
| `-ParmVarDecl 0x557829632490 <col:60, col:71> col:72 'const char *'
|-FunctionDecl 0x557829632910 <line:360:1, col:98> col:33 __eprintf 'void (const char *, const char *, unsigned int, const char *) __attribute__((cdecl))':'void (const char *, const char *, unsigned int, const char *)'
| |-ParmVarDecl 0x557829632628 <col:44, col:55> col:56 'const char *'
| |-ParmVarDecl 0x5578296326a8 <col:58, col:69> col:70 'const char *'
| |-ParmVarDecl 0x557829632728 <col:72, col:81> col:84 'unsigned int'
| `-ParmVarDecl 0x5578296327a8 <col:86, col:97> col:98 'const char *'
|-FunctionDecl 0x557829632b48 <line:361:20> col:20 implicit strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0x557829632be8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x557829632c50 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x557829632cc8 prev 0x557829632b48 <col:1, col:50> col:20 strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0x5578296329e8 <col:29, col:40> col:41 'const char *'
| `-ParmVarDecl 0x557829632a68 <col:43, col:49> col:50 'char **'
|-FunctionDecl 0x557829632dd8 <line:363:1, col:23> col:12 used nondet_int 'int ()' extern
|-FunctionDecl 0x557829633038 prev 0x5578296318c0 <line:364:1, line:406:1> line:364:24 used strtoull 'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x557829632e90 <col:33, col:45> col:45 used ptr 'const char *'
| |-ParmVarDecl 0x557829632f10 <col:50, col:57> col:57 used endptr 'char **'
| |-ParmVarDecl 0x557829632f90 <col:65, col:69> col:69 used base 'int'
| `-CompoundStmt 0x5578296367d0 <line:365:1, line:406:1>
|   |-DeclStmt 0x557829633190 <line:366:3, col:14>
|   | `-VarDecl 0x557829633108 <col:3, col:13> col:7 used neg 'int' cinit
|   |   `-IntegerLiteral 0x557829633170 <col:13> 'int' 0
|   |-DeclStmt 0x557829633290 <line:367:3, col:20>
|   | `-VarDecl 0x5578296331f0 <col:3, col:19> col:17 used v 'long long' cinit
|   |   `-ImplicitCastExpr 0x557829633278 <col:19> 'long long' <IntegralCast>
|   |     `-IntegerLiteral 0x557829633258 <col:19> 'int' 0
|   |-DeclStmt 0x557829633328 <line:368:3, col:19>
|   | `-VarDecl 0x5578296332c0 <col:3, col:15> col:15 used orig 'const char *'
|   |-DeclStmt 0x5578296333f8 <line:369:3, col:23>
|   | `-VarDecl 0x557829633358 <col:3, col:20> col:15 used nptr 'const char *' cinit
|   |   `-ImplicitCastExpr 0x5578296333e0 <col:20> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x5578296333c0 <col:20> 'const char *' lvalue ParmVar 0x557829632e90 'ptr' 'const char *'
|   |-WhileStmt 0x557829633500 <line:370:3, col:25>
|   | |-BinaryOperator 0x5578296334a8 <col:9, col:18> 'int' '=='
|   | | |-ImplicitCastExpr 0x557829633490 <col:9, col:10> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x557829633478 <col:9, col:10> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x557829633448 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x557829633430 <col:10> 'const char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x557829633410 <col:10> 'const char *' lvalue Var 0x557829633358 'nptr' 'const char *'
|   | | `-CharacterLiteral 0x557829633460 <col:18> 'int' 32
|   | `-UnaryOperator 0x5578296334e8 <col:23, col:25> 'const char *' prefix '++'
|   |   `-DeclRefExpr 0x5578296334c8 <col:25> 'const char *' lvalue Var 0x557829633358 'nptr' 'const char *'
|   |-IfStmt 0x557829633790 <line:371:3, line:372:28> has_else
|   | |-BinaryOperator 0x5578296335b0 <line:371:7, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x557829633598 <col:7, col:8> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x557829633580 <col:7, col:8> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x557829633550 <col:7, col:8> 'const char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x557829633538 <col:8> 'const char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x557829633518 <col:8> 'const char *' lvalue Var 0x557829633358 'nptr' 'const char *'
|   | | `-CharacterLiteral 0x557829633568 <col:16> 'int' 45
|   | |-CompoundStmt 0x557829633668 <col:21, col:38>
|   | | |-BinaryOperator 0x557829633610 <col:23, col:27> 'int' '='
|   | | | |-DeclRefExpr 0x5578296335d0 <col:23> 'int' lvalue Var 0x557829633108 'neg' 'int'
|   | | | `-IntegerLiteral 0x5578296335f0 <col:27> 'int' 1
|   | | `-UnaryOperator 0x557829633650 <col:30, col:34> 'const char *' postfix '++'
|   | |   `-DeclRefExpr 0x557829633630 <col:30> 'const char *' lvalue Var 0x557829633358 'nptr' 'const char *'
|   | `-IfStmt 0x557829633778 <line:372:8, col:28>
|   |   |-BinaryOperator 0x557829633720 <col:12, col:21> 'int' '=='
|   |   | |-ImplicitCastExpr 0x557829633708 <col:12, col:13> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5578296336f0 <col:12, col:13> 'char' <LValueToRValue>
|   |   | |   `-UnaryOperator 0x5578296336c0 <col:12, col:13> 'const char' lvalue prefix '*' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5578296336a8 <col:13> 'const char *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x557829633688 <col:13> 'const char *' lvalue Var 0x557829633358 'nptr' 'const char *'
|   |   | `-CharacterLiteral 0x5578296336d8 <col:21> 'int' 43
|   |   `-UnaryOperator 0x557829633760 <col:26, col:28> 'const char *' prefix '++'
|   |     `-DeclRefExpr 0x557829633740 <col:28> 'const char *' lvalue Var 0x557829633358 'nptr' 'const char *'
|   |-BinaryOperator 0x557829633810 <line:373:3, col:8> 'const char *' '='
|   | |-DeclRefExpr 0x5578296337b8 <col:3> 'const char *' lvalue Var 0x5578296332c0 'orig' 'const char *'
|   | `-ImplicitCastExpr 0x5578296337f8 <col:8> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5578296337d8 <col:8> 'const char *' lvalue Var 0x557829633358 'nptr' 'const char *'
|   |-IfStmt 0x557829633a10 <line:374:3, col:38>
|   | |-BinaryOperator 0x557829633988 <col:7, col:28> 'int' '&&'
|   | | |-BinaryOperator 0x557829633888 <col:7, col:13> 'int' '=='
|   | | | |-ImplicitCastExpr 0x557829633870 <col:7> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x557829633830 <col:7> 'int' lvalue ParmVar 0x557829632f90 'base' 'int'
|   | | | `-IntegerLiteral 0x557829633850 <col:13> 'int' 16
|   | | `-BinaryOperator 0x557829633968 <col:19, col:28> 'int' '=='
|   | |   |-ImplicitCastExpr 0x557829633950 <col:19, col:25> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x557829633938 <col:19, col:25> 'char' <LValueToRValue>
|   | |   |   `-ArraySubscriptExpr 0x557829633900 <col:19, col:25> 'const char' lvalue
|   | |   |     |-ImplicitCastExpr 0x5578296338e8 <col:19> 'const char *' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x5578296338a8 <col:19> 'const char *' lvalue Var 0x557829633358 'nptr' 'const char *'
|   | |   |     `-IntegerLiteral 0x5578296338c8 <col:24> 'int' 0
|   | |   `-CharacterLiteral 0x557829633920 <col:28> 'int' 48
|   | `-GotoStmt 0x5578296339f8 <col:33, col:38> 'skip0x' 0x5578296339a8
|   |-IfStmt 0x557829634480 <line:375:3, line:388:3> has_else
|   | |-ImplicitCastExpr 0x557829633a48 <line:375:7> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x557829633a28 <col:7> 'int' lvalue ParmVar 0x557829632f90 'base' 'int'
|   | |-CompoundStmt 0x557829633cb0 <col:13, line:378:3>
|   | | |-DeclStmt 0x557829633b70 <line:376:5, col:35>
|   | | | `-VarDecl 0x557829633a78 <col:5, col:34> col:27 used b 'unsigned int' register cinit
|   | | |   `-ImplicitCastExpr 0x557829633b58 <col:29, col:34> 'unsigned int' <IntegralCast>
|   | | |     `-BinaryOperator 0x557829633b38 <col:29, col:34> 'int' '-'
|   | | |       |-ImplicitCastExpr 0x557829633b20 <col:29> 'int' <LValueToRValue>
|   | | |       | `-DeclRefExpr 0x557829633ae0 <col:29> 'int' lvalue ParmVar 0x557829632f90 'base' 'int'
|   | | |       `-IntegerLiteral 0x557829633b00 <col:34> 'int' 2
|   | | `-IfStmt 0x557829633c98 <line:377:5, col:29>
|   | |   |-ParenExpr 0x557829633c18 <col:9, col:14> 'int'
|   | |   | `-BinaryOperator 0x557829633bf8 <col:10, col:12> 'int' '>'
|   | |   |   |-ImplicitCastExpr 0x557829633bc8 <col:10> 'unsigned int' <LValueToRValue>
|   | |   |   | `-DeclRefExpr 0x557829633b88 <col:10> 'unsigned int' lvalue Var 0x557829633a78 'b' 'unsigned int'
|   | |   |   `-ImplicitCastExpr 0x557829633be0 <col:12> 'unsigned int' <IntegralCast>
|   | |   |     `-IntegerLiteral 0x557829633ba8 <col:12> 'int' 34
|   | |   `-CompoundStmt 0x557829633c80 <col:17, col:29>
|   | |     `-ReturnStmt 0x557829633c70 <col:19, col:26>
|   | |       `-ImplicitCastExpr 0x557829633c58 <col:26> 'unsigned long long' <IntegralCast>
|   | |         `-IntegerLiteral 0x557829633c38 <col:26> 'int' 0
|   | `-CompoundStmt 0x557829634468 <line:378:10, line:388:3>
|   |   `-IfStmt 0x557829634440 <line:379:5, line:387:12> has_else
|   |     |-BinaryOperator 0x557829633d68 <line:379:9, col:16> 'int' '=='
|   |     | |-ImplicitCastExpr 0x557829633d50 <col:9, col:10> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x557829633d38 <col:9, col:10> 'char' <LValueToRValue>
|   |     | |   `-UnaryOperator 0x557829633d08 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow
|   |     | |     `-ImplicitCastExpr 0x557829633cf0 <col:10> 'const char *' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x557829633cd0 <col:10> 'const char *' lvalue Var 0x557829633358 'nptr' 'const char *'
|   |     | `-CharacterLiteral 0x557829633d20 <col:16> 'int' 48
|   |     |-CompoundStmt 0x5578296343c0 <col:21, line:386:5>
|   |     | |-BinaryOperator 0x557829633dc8 <line:380:7, col:12> 'int' '='
|   |     | | |-DeclRefExpr 0x557829633d88 <col:7> 'int' lvalue ParmVar 0x557829632f90 'base' 'int'
|   |     | | `-IntegerLiteral 0x557829633da8 <col:12> 'int' 8
|   |     | `-LabelStmt 0x5578296341d0 <line:381:1, line:385:7> 'skip0x'
|   |     |   `-IfStmt 0x5578296341b8 <line:382:7, line:385:7>
|   |     |     |-ParenExpr 0x5578296340a8 <line:382:11, col:46> 'int'
|   |     |     | `-BinaryOperator 0x557829634088 <col:12, col:45> 'int' '||'
|   |     |     |   |-ParenExpr 0x557829633f00 <col:12, col:27> 'int'
|   |     |     |   | `-BinaryOperator 0x557829633ee0 <col:13, col:24> 'int' '=='
|   |     |     |   |   |-ImplicitCastExpr 0x557829633ec8 <col:13, col:21> 'int' <IntegralCast>
|   |     |     |   |   | `-ImplicitCastExpr 0x557829633eb0 <col:13, col:21> 'char' <LValueToRValue>
|   |     |     |   |   |   `-UnaryOperator 0x557829633e80 <col:13, col:21> 'const char' lvalue prefix '*' cannot overflow
|   |     |     |   |   |     `-ParenExpr 0x557829633e60 <col:14, col:21> 'const char *'
|   |     |     |   |   |       `-BinaryOperator 0x557829633e40 <col:15, col:20> 'const char *' '+'
|   |     |     |   |   |         |-ImplicitCastExpr 0x557829633e28 <col:15> 'const char *' <LValueToRValue>
|   |     |     |   |   |         | `-DeclRefExpr 0x557829633de8 <col:15> 'const char *' lvalue Var 0x557829633358 'nptr' 'const char *'
|   |     |     |   |   |         `-IntegerLiteral 0x557829633e08 <col:20> 'int' 1
|   |     |     |   |   `-CharacterLiteral 0x557829633e98 <col:24> 'int' 120
|   |     |     |   `-ParenExpr 0x557829634068 <col:30, col:45> 'int'
|   |     |     |     `-BinaryOperator 0x557829634048 <col:31, col:42> 'int' '=='
|   |     |     |       |-ImplicitCastExpr 0x557829634030 <col:31, col:39> 'int' <IntegralCast>
|   |     |     |       | `-ImplicitCastExpr 0x557829634018 <col:31, col:39> 'char' <LValueToRValue>
|   |     |     |       |   `-UnaryOperator 0x557829633fe8 <col:31, col:39> 'const char' lvalue prefix '*' cannot overflow
|   |     |     |       |     `-ParenExpr 0x557829633fc8 <col:32, col:39> 'const char *'
|   |     |     |       |       `-BinaryOperator 0x557829633fa8 <col:33, col:38> 'const char *' '+'
|   |     |     |       |         |-ImplicitCastExpr 0x557829633f90 <col:33> 'const char *' <LValueToRValue>
|   |     |     |       |         | `-DeclRefExpr 0x557829633f50 <col:33> 'const char *' lvalue Var 0x557829633358 'nptr' 'const char *'
|   |     |     |       |         `-IntegerLiteral 0x557829633f70 <col:38> 'int' 1
|   |     |     |       `-CharacterLiteral 0x557829634000 <col:42> 'int' 88
|   |     |     `-CompoundStmt 0x557829634198 <col:49, line:385:7>
|   |     |       |-CompoundAssignOperator 0x557829634108 <line:383:2, col:8> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |     |       | |-DeclRefExpr 0x5578296340c8 <col:2> 'const char *' lvalue Var 0x557829633358 'nptr' 'const char *'
|   |     |       | `-IntegerLiteral 0x5578296340e8 <col:8> 'int' 2
|   |     |       `-BinaryOperator 0x557829634178 <line:384:2, col:7> 'int' '='
|   |     |         |-DeclRefExpr 0x557829634138 <col:2> 'int' lvalue ParmVar 0x557829632f90 'base' 'int'
|   |     |         `-IntegerLiteral 0x557829634158 <col:7> 'int' 16
|   |     `-BinaryOperator 0x557829634420 <line:387:7, col:12> 'int' '='
|   |       |-DeclRefExpr 0x5578296343e0 <col:7> 'int' lvalue ParmVar 0x557829632f90 'base' 'int'
|   |       `-IntegerLiteral 0x557829634400 <col:12> 'int' 10
|   |-WhileStmt 0x557829635340 <line:389:3, line:399:3>
|   | |-ImplicitCastExpr 0x557829634518 <line:389:9, col:15> 'char' <LValueToRValue>
|   | | `-ParenExpr 0x5578296344f8 <col:9, col:15> 'const char' lvalue
|   | |   `-UnaryOperator 0x5578296344e0 <col:10, col:11> 'const char' lvalue prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x5578296344c8 <col:11> 'const char *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x5578296344a8 <col:11> 'const char *' lvalue Var 0x557829633358 'nptr' 'const char *'
|   | `-CompoundStmt 0x557829635308 <col:18, line:399:3>
|   |   |-DeclStmt 0x557829634630 <line:390:5, col:35>
|   |   | `-VarDecl 0x557829634548 <col:5, col:31> col:28 used c 'unsigned char' register cinit
|   |   |   `-ImplicitCastExpr 0x557829634618 <col:30, col:31> 'unsigned char' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x557829634600 <col:30, col:31> 'char' <LValueToRValue>
|   |   |       `-UnaryOperator 0x5578296345e8 <col:30, col:31> 'const char' lvalue prefix '*' cannot overflow
|   |   |         `-ImplicitCastExpr 0x5578296345d0 <col:31> 'const char *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x5578296345b0 <col:31> 'const char *' lvalue Var 0x557829633358 'nptr' 'const char *'
|   |   |-BinaryOperator 0x557829634b00 <line:391:5, col:57> 'unsigned char' '='
|   |   | |-DeclRefExpr 0x557829634648 <col:5> 'unsigned char' lvalue Var 0x557829634548 'c' 'unsigned char'
|   |   | `-ImplicitCastExpr 0x557829634ae8 <col:7, col:57> 'unsigned char' <IntegralCast>
|   |   |   `-ParenExpr 0x557829634ac8 <col:7, col:57> 'int'
|   |   |     `-ConditionalOperator 0x557829634a98 <col:8, col:53> 'int'
|   |   |       |-BinaryOperator 0x5578296346d0 <col:8, col:11> 'int' '>='
|   |   |       | |-ImplicitCastExpr 0x5578296346b8 <col:8> 'int' <IntegralCast>
|   |   |       | | `-ImplicitCastExpr 0x5578296346a0 <col:8> 'unsigned char' <LValueToRValue>
|   |   |       | |   `-DeclRefExpr 0x557829634668 <col:8> 'unsigned char' lvalue Var 0x557829634548 'c' 'unsigned char'
|   |   |       | `-CharacterLiteral 0x557829634688 <col:11> 'int' 97
|   |   |       |-BinaryOperator 0x557829634798 <col:15, col:21> 'int' '+'
|   |   |       | |-BinaryOperator 0x557829634758 <col:15, col:17> 'int' '-'
|   |   |       | | |-ImplicitCastExpr 0x557829634740 <col:15> 'int' <IntegralCast>
|   |   |       | | | `-ImplicitCastExpr 0x557829634728 <col:15> 'unsigned char' <LValueToRValue>
|   |   |       | | |   `-DeclRefExpr 0x5578296346f0 <col:15> 'unsigned char' lvalue Var 0x557829634548 'c' 'unsigned char'
|   |   |       | | `-CharacterLiteral 0x557829634710 <col:17> 'int' 97
|   |   |       | `-IntegerLiteral 0x557829634778 <col:21> 'int' 10
|   |   |       `-ConditionalOperator 0x557829634a68 <col:24, col:53> 'int'
|   |   |         |-BinaryOperator 0x557829634820 <col:24, col:27> 'int' '>='
|   |   |         | |-ImplicitCastExpr 0x557829634808 <col:24> 'int' <IntegralCast>
|   |   |         | | `-ImplicitCastExpr 0x5578296347f0 <col:24> 'unsigned char' <LValueToRValue>
|   |   |         | |   `-DeclRefExpr 0x5578296347b8 <col:24> 'unsigned char' lvalue Var 0x557829634548 'c' 'unsigned char'
|   |   |         | `-CharacterLiteral 0x5578296347d8 <col:27> 'int' 65
|   |   |         |-BinaryOperator 0x5578296348e8 <col:31, col:37> 'int' '+'
|   |   |         | |-BinaryOperator 0x5578296348a8 <col:31, col:33> 'int' '-'
|   |   |         | | |-ImplicitCastExpr 0x557829634890 <col:31> 'int' <IntegralCast>
|   |   |         | | | `-ImplicitCastExpr 0x557829634878 <col:31> 'unsigned char' <LValueToRValue>
|   |   |         | | |   `-DeclRefExpr 0x557829634840 <col:31> 'unsigned char' lvalue Var 0x557829634548 'c' 'unsigned char'
|   |   |         | | `-CharacterLiteral 0x557829634860 <col:33> 'int' 65
|   |   |         | `-IntegerLiteral 0x5578296348c8 <col:37> 'int' 10
|   |   |         `-ConditionalOperator 0x557829634a38 <col:40, col:53> 'int'
|   |   |           |-BinaryOperator 0x557829634970 <col:40, col:43> 'int' '<='
|   |   |           | |-ImplicitCastExpr 0x557829634958 <col:40> 'int' <IntegralCast>
|   |   |           | | `-ImplicitCastExpr 0x557829634940 <col:40> 'unsigned char' <LValueToRValue>
|   |   |           | |   `-DeclRefExpr 0x557829634908 <col:40> 'unsigned char' lvalue Var 0x557829634548 'c' 'unsigned char'
|   |   |           | `-CharacterLiteral 0x557829634928 <col:43> 'int' 57
|   |   |           |-BinaryOperator 0x5578296349f8 <col:47, col:49> 'int' '-'
|   |   |           | |-ImplicitCastExpr 0x5578296349e0 <col:47> 'int' <IntegralCast>
|   |   |           | | `-ImplicitCastExpr 0x5578296349c8 <col:47> 'unsigned char' <LValueToRValue>
|   |   |           | |   `-DeclRefExpr 0x557829634990 <col:47> 'unsigned char' lvalue Var 0x557829634548 'c' 'unsigned char'
|   |   |           | `-CharacterLiteral 0x5578296349b0 <col:49> 'int' 48
|   |   |           `-IntegerLiteral 0x557829634a18 <col:53> 'int' 255
|   |   |-IfStmt 0x557829634bf0 <line:392:5, col:20>
|   |   | |-ParenExpr 0x557829634bc8 <col:9, col:17> 'int'
|   |   | | `-BinaryOperator 0x557829634ba8 <col:10, col:13> 'int' '>='
|   |   | |   |-ImplicitCastExpr 0x557829634b90 <col:10> 'int' <IntegralCast>
|   |   | |   | `-ImplicitCastExpr 0x557829634b60 <col:10> 'unsigned char' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x557829634b20 <col:10> 'unsigned char' lvalue Var 0x557829634548 'c' 'unsigned char'
|   |   | |   `-ImplicitCastExpr 0x557829634b78 <col:13> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x557829634b40 <col:13> 'int' lvalue ParmVar 0x557829632f90 'base' 'int'
|   |   | `-BreakStmt 0x557829634be8 <col:20>
|   |   |-CompoundStmt 0x5578296352a8 <line:393:5, line:397:5>
|   |   | |-DeclStmt 0x557829634e30 <line:394:7, col:47>
|   |   | | `-VarDecl 0x557829634c20 <col:7, col:46> col:30 used x 'unsigned long' register cinit
|   |   | |   `-ImplicitCastExpr 0x557829634e18 <col:32, col:46> 'unsigned long' <IntegralCast>
|   |   | |     `-BinaryOperator 0x557829634df8 <col:32, col:46> 'long long' '+'
|   |   | |       |-BinaryOperator 0x557829634d88 <col:32, col:41> 'long long' '*'
|   |   | |       | |-ParenExpr 0x557829634d18 <col:32, col:39> 'long long'
|   |   | |       | | `-BinaryOperator 0x557829634cf8 <col:33, col:35> 'long long' '&'
|   |   | |       | |   |-ImplicitCastExpr 0x557829634cc8 <col:33> 'long long' <LValueToRValue>
|   |   | |       | |   | `-DeclRefExpr 0x557829634c88 <col:33> 'long long' lvalue Var 0x5578296331f0 'v' 'long long'
|   |   | |       | |   `-ImplicitCastExpr 0x557829634ce0 <col:35> 'long long' <IntegralCast>
|   |   | |       | |     `-IntegerLiteral 0x557829634ca8 <col:35> 'int' 255
|   |   | |       | `-ImplicitCastExpr 0x557829634d70 <col:41> 'long long' <IntegralCast>
|   |   | |       |   `-ImplicitCastExpr 0x557829634d58 <col:41> 'int' <LValueToRValue>
|   |   | |       |     `-DeclRefExpr 0x557829634d38 <col:41> 'int' lvalue ParmVar 0x557829632f90 'base' 'int'
|   |   | |       `-ImplicitCastExpr 0x557829634de0 <col:46> 'long long' <IntegralCast>
|   |   | |         `-ImplicitCastExpr 0x557829634dc8 <col:46> 'unsigned char' <LValueToRValue>
|   |   | |           `-DeclRefExpr 0x557829634da8 <col:46> 'unsigned char' lvalue Var 0x557829634548 'c' 'unsigned char'
|   |   | |-DeclStmt 0x5578296350b8 <line:395:7, col:55>
|   |   | | `-VarDecl 0x557829634e60 <col:7, col:54> col:35 used w 'unsigned long long' register cinit
|   |   | |   `-BinaryOperator 0x557829635098 <col:37, col:54> 'unsigned long long' '+'
|   |   | |     |-ImplicitCastExpr 0x557829635080 <col:37, col:44> 'unsigned long long' <IntegralCast>
|   |   | |     | `-BinaryOperator 0x557829634fb0 <col:37, col:44> 'long long' '*'
|   |   | |     |   |-ParenExpr 0x557829634f40 <col:37, col:42> 'long long'
|   |   | |     |   | `-BinaryOperator 0x557829634f20 <col:38, col:41> 'long long' '>>'
|   |   | |     |   |   |-ImplicitCastExpr 0x557829634f08 <col:38> 'long long' <LValueToRValue>
|   |   | |     |   |   | `-DeclRefExpr 0x557829634ec8 <col:38> 'long long' lvalue Var 0x5578296331f0 'v' 'long long'
|   |   | |     |   |   `-IntegerLiteral 0x557829634ee8 <col:41> 'int' 8
|   |   | |     |   `-ImplicitCastExpr 0x557829634f98 <col:44> 'long long' <IntegralCast>
|   |   | |     |     `-ImplicitCastExpr 0x557829634f80 <col:44> 'int' <LValueToRValue>
|   |   | |     |       `-DeclRefExpr 0x557829634f60 <col:44> 'int' lvalue ParmVar 0x557829632f90 'base' 'int'
|   |   | |     `-ImplicitCastExpr 0x557829635068 <col:49, col:54> 'unsigned long long' <IntegralCast>
|   |   | |       `-ParenExpr 0x557829635048 <col:49, col:54> 'unsigned long'
|   |   | |         `-BinaryOperator 0x557829635028 <col:50, col:53> 'unsigned long' '>>'
|   |   | |           |-ImplicitCastExpr 0x557829635010 <col:50> 'unsigned long' <LValueToRValue>
|   |   | |           | `-DeclRefExpr 0x557829634fd0 <col:50> 'unsigned long' lvalue Var 0x557829634c20 'x' 'unsigned long'
|   |   | |           `-IntegerLiteral 0x557829634ff0 <col:53> 'int' 8
|   |   | `-BinaryOperator 0x557829635288 <line:396:7, col:23> 'long long' '='
|   |   |   |-DeclRefExpr 0x5578296350d0 <col:7> 'long long' lvalue Var 0x5578296331f0 'v' 'long long'
|   |   |   `-ImplicitCastExpr 0x557829635270 <col:9, col:23> 'long long' <IntegralCast>
|   |   |     `-BinaryOperator 0x557829635250 <col:9, col:23> 'unsigned long long' '+'
|   |   |       |-ParenExpr 0x557829635168 <col:9, col:14> 'unsigned long long'
|   |   |       | `-BinaryOperator 0x557829635148 <col:10, col:13> 'unsigned long long' '<<'
|   |   |       |   |-ImplicitCastExpr 0x557829635130 <col:10> 'unsigned long long' <LValueToRValue>
|   |   |       |   | `-DeclRefExpr 0x5578296350f0 <col:10> 'unsigned long long' lvalue Var 0x557829634e60 'w' 'unsigned long long'
|   |   |       |   `-IntegerLiteral 0x557829635110 <col:13> 'int' 8
|   |   |       `-ImplicitCastExpr 0x557829635238 <col:16, col:23> 'unsigned long long' <IntegralCast>
|   |   |         `-ParenExpr 0x557829635218 <col:16, col:23> 'unsigned long'
|   |   |           `-BinaryOperator 0x5578296351f8 <col:17, col:19> 'unsigned long' '&'
|   |   |             |-ImplicitCastExpr 0x5578296351c8 <col:17> 'unsigned long' <LValueToRValue>
|   |   |             | `-DeclRefExpr 0x557829635188 <col:17> 'unsigned long' lvalue Var 0x557829634c20 'x' 'unsigned long'
|   |   |             `-ImplicitCastExpr 0x5578296351e0 <col:19> 'unsigned long' <IntegralCast>
|   |   |               `-IntegerLiteral 0x5578296351a8 <col:19> 'int' 255
|   |   `-UnaryOperator 0x5578296352f0 <line:398:5, col:7> 'const char *' prefix '++'
|   |     `-DeclRefExpr 0x5578296352d0 <col:7> 'const char *' lvalue Var 0x557829633358 'nptr' 'const char *'
|   |-IfStmt 0x557829636548 <line:400:3, line:403:3>
|   | |-ParenExpr 0x557829636418 <line:400:7, col:18> 'int'
|   | | `-BinaryOperator 0x5578296363f8 <col:8, col:14> 'int' '=='
|   | |   |-ImplicitCastExpr 0x557829635398 <col:8> 'const char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x557829635358 <col:8> 'const char *' lvalue Var 0x557829633358 'nptr' 'const char *'
|   | |   `-ImplicitCastExpr 0x5578296363e0 <col:14> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x557829635378 <col:14> 'const char *' lvalue Var 0x5578296332c0 'orig' 'const char *'
|   | `-CompoundStmt 0x557829636528 <col:21, line:403:3>
|   |   |-BinaryOperator 0x557829636490 <line:401:5, col:10> 'const char *' '='
|   |   | |-DeclRefExpr 0x557829636438 <col:5> 'const char *' lvalue Var 0x557829633358 'nptr' 'const char *'
|   |   | `-ImplicitCastExpr 0x557829636478 <col:10> 'const char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557829636458 <col:10> 'const char *' lvalue ParmVar 0x557829632e90 'ptr' 'const char *'
|   |   `-BinaryOperator 0x557829636508 <line:402:5, col:7> 'long long' '='
|   |     |-DeclRefExpr 0x5578296364b0 <col:5> 'long long' lvalue Var 0x5578296331f0 'v' 'long long'
|   |     `-ImplicitCastExpr 0x5578296364f0 <col:7> 'long long' <IntegralCast>
|   |       `-IntegerLiteral 0x5578296364d0 <col:7> 'int' 0
|   |-IfStmt 0x557829636680 <line:404:3, col:31>
|   | |-ImplicitCastExpr 0x557829636580 <col:7> 'char **' <LValueToRValue>
|   | | `-DeclRefExpr 0x557829636560 <col:7> 'char **' lvalue ParmVar 0x557829632f10 'endptr' 'char **'
|   | `-BinaryOperator 0x557829636660 <col:15, col:31> 'char *' '='
|   |   |-UnaryOperator 0x5578296365d0 <col:15, col:16> 'char *' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x5578296365b8 <col:16> 'char **' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557829636598 <col:16> 'char **' lvalue ParmVar 0x557829632f10 'endptr' 'char **'
|   |   `-CStyleCastExpr 0x557829636638 <col:23, col:31> 'char *' <NoOp>
|   |     `-ImplicitCastExpr 0x557829636620 <col:31> 'const char *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x5578296365e8 <col:31> 'const char *' lvalue Var 0x557829633358 'nptr' 'const char *'
|   `-ReturnStmt 0x5578296367c0 <line:405:3, col:19>
|     `-ImplicitCastExpr 0x5578296367a8 <col:10, col:19> 'unsigned long long' <IntegralCast>
|       `-ParenExpr 0x557829636788 <col:10, col:19> 'long long'
|         `-ConditionalOperator 0x557829636758 <col:11, col:18> 'long long'
|           |-ImplicitCastExpr 0x557829636728 <col:11> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x557829636698 <col:11> 'int' lvalue Var 0x557829633108 'neg' 'int'
|           |-UnaryOperator 0x5578296366f0 <col:15, col:16> 'long long' prefix '-'
|           | `-ImplicitCastExpr 0x5578296366d8 <col:16> 'long long' <LValueToRValue>
|           |   `-DeclRefExpr 0x5578296366b8 <col:16> 'long long' lvalue Var 0x5578296331f0 'v' 'long long'
|           `-ImplicitCastExpr 0x557829636740 <col:18> 'long long' <LValueToRValue>
|             `-DeclRefExpr 0x557829636708 <col:18> 'long long' lvalue Var 0x5578296331f0 'v' 'long long'
|-FunctionDecl 0x557829636870 <line:407:1, line:415:1> line:407:5 main 'int ()'
| `-CompoundStmt 0x5578296372c0 <col:11, line:415:1>
|   |-DeclStmt 0x557829636a18 <line:408:3, col:28>
|   | `-VarDecl 0x557829636928 <col:3, col:27> col:7 used in_len 'int' cinit
|   |   `-CallExpr 0x5578296369f8 <col:16, col:27> 'int'
|   |     `-ImplicitCastExpr 0x5578296369e0 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x557829636990 <col:16> 'int ()' Function 0x557829632dd8 'nondet_int' 'int ()'
|   |-IfStmt 0x557829636af0 <line:409:3, col:27>
|   | |-BinaryOperator 0x557829636a88 <col:6, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x557829636a70 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x557829636a30 <col:6> 'int' lvalue Var 0x557829636928 'in_len' 'int'
|   | | `-IntegerLiteral 0x557829636a50 <col:15> 'int' 1
|   | `-CompoundStmt 0x557829636ad8 <col:17, col:27>
|   |   `-ReturnStmt 0x557829636ac8 <col:18, col:25>
|   |     `-IntegerLiteral 0x557829636aa8 <col:25> 'int' 1
|   |-DeclStmt 0x557829636e08 <line:410:3, col:38>
|   | `-VarDecl 0x557829636b20 <col:3, col:37> col:9 used in 'char *' cinit
|   |   `-ImplicitCastExpr 0x557829636df0 <col:14, col:37> 'char *' <BitCast>
|   |     `-CallExpr 0x557829636d98 <col:14, col:37> 'void *'
|   |       |-ImplicitCastExpr 0x557829636d80 <col:14> 'void *(*)(unsigned long)' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x557829636cf0 <col:14> '<builtin fn type>' Function 0x557829636b88 '__builtin_alloca' 'void *(unsigned long)'
|   |       `-ImplicitCastExpr 0x557829636dd8 <col:31> 'unsigned long' <IntegralCast>
|   |         `-ImplicitCastExpr 0x557829636dc0 <col:31> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x557829636d10 <col:31> 'int' lvalue Var 0x557829636928 'in_len' 'int'
|   |-BinaryOperator 0x557829636f28 <line:411:3, col:16> 'char' '='
|   | |-ArraySubscriptExpr 0x557829636ed0 <col:3, col:14> 'char' lvalue
|   | | |-ImplicitCastExpr 0x557829636eb8 <col:3> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x557829636e20 <col:3> 'char *' lvalue Var 0x557829636b20 'in' 'char *'
|   | | `-BinaryOperator 0x557829636e98 <col:6, col:13> 'int' '-'
|   | |   |-ImplicitCastExpr 0x557829636e80 <col:6> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x557829636e40 <col:6> 'int' lvalue Var 0x557829636928 'in_len' 'int'
|   | |   `-IntegerLiteral 0x557829636e60 <col:13> 'int' 1
|   | `-ImplicitCastExpr 0x557829636f10 <col:16> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x557829636ef0 <col:16> 'int' 0
|   |-DeclStmt 0x557829637020 <line:412:3, col:26>
|   | `-VarDecl 0x557829636f60 <col:3, col:25> col:7 used base 'int' cinit
|   |   `-CallExpr 0x557829637000 <col:14, col:25> 'int'
|   |     `-ImplicitCastExpr 0x557829636fe8 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x557829636fc8 <col:14> 'int ()' Function 0x557829632dd8 'nondet_int' 'int ()'
|   |-DeclStmt 0x5578296370f0 <line:413:3, col:16>
|   | `-VarDecl 0x557829637050 <col:3, col:15> col:9 used end 'char *' cinit
|   |   `-ImplicitCastExpr 0x5578296370d8 <col:15> 'char *' <NullToPointer>
|   |     `-IntegerLiteral 0x5578296370b8 <col:15> 'int' 0
|   `-ReturnStmt 0x5578296372b0 <line:414:3, col:33>
|     `-ImplicitCastExpr 0x557829637298 <col:10, col:33> 'int' <IntegralCast>
|       `-CallExpr 0x557829637218 <col:10, col:33> 'unsigned long long'
|         |-ImplicitCastExpr 0x557829637200 <col:10> 'unsigned long long (*)(const char *, char **, int)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x557829637108 <col:10> 'unsigned long long (const char *, char **, int)' Function 0x557829633038 'strtoull' 'unsigned long long (const char *, char **, int)'
|         |-ImplicitCastExpr 0x557829637268 <col:19> 'const char *' <NoOp>
|         | `-ImplicitCastExpr 0x557829637250 <col:19> 'char *' <LValueToRValue>
|         |   `-DeclRefExpr 0x557829637128 <col:19> 'char *' lvalue Var 0x557829636b20 'in' 'char *'
|         |-UnaryOperator 0x557829637168 <col:23, col:24> 'char **' prefix '&' cannot overflow
|         | `-DeclRefExpr 0x557829637148 <col:24> 'char *' lvalue Var 0x557829637050 'end' 'char *'
|         `-ImplicitCastExpr 0x557829637280 <col:29> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x557829637180 <col:29> 'int' lvalue Var 0x557829636f60 'base' 'int'
`-FunctionDecl 0x557829636b88 <line:410:14> col:14 implicit used __builtin_alloca 'void *(unsigned long)' extern
  |-ParmVarDecl 0x557829636c28 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-NoThrowAttr 0x557829636c98 <col:14> Implicit
