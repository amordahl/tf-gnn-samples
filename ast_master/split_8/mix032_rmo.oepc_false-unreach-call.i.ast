TranslationUnitDecl 0x55a86a576e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55a86a5776d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55a86a5773b0 '__int128'
|-TypedefDecl 0x55a86a577748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55a86a5773d0 'unsigned __int128'
|-TypedefDecl 0x55a86a577a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55a86a577820 'struct __NSConstantString_tag'
|   `-Record 0x55a86a5777a0 '__NSConstantString_tag'
|-TypedefDecl 0x55a86a577af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55a86a577ab0 'char *'
|   `-BuiltinType 0x55a86a576eb0 'char'
|-TypedefDecl 0x55a86a5b6650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55a86a577d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55a86a577bd0 'struct __va_list_tag'
|     `-Record 0x55a86a577b50 '__va_list_tag'
|-FunctionDecl 0x55a86a5b6790 <./split_8/mix032_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55a86a5b66c0 <col:31> col:34 'int'
|-FunctionDecl 0x55a86a5b6958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55a86a5b6a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55a86a5b6bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55a86a5b6b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55a86a5b6df8 <col:40, col:99>
|   |-IfStmt 0x55a86a5b6dc8 <col:42, col:88>
|   | |-UnaryOperator 0x55a86a5b6ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55a86a5b6c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55a86a5b6c70 <col:47> 'int' lvalue ParmVar 0x55a86a5b6b38 'expression' 'int'
|   | `-CompoundStmt 0x55a86a5b6db0 <col:59, col:88>
|   |   `-LabelStmt 0x55a86a5b6d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55a86a5b6d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55a86a5b6d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55a86a5b6cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x55a86a5b6a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55a86a5b6de0 <col:89>
|   `-ReturnStmt 0x55a86a5b6de8 <col:91>
|-FunctionDecl 0x55a86a5b6e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55a86a5b6f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55a86a5b7280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55a86a5b6fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55a86a5b7038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55a86a5b70b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55a86a5b7138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55a86a5b7340 <line:10:22>
|-FunctionDecl 0x55a86a5dd390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55a86a5b73b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55a86a5b7430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55a86a5b74b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55a86a5b7530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55a86a5dd450 <line:13:22>
|-FunctionDecl 0x55a86a5dd700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55a86a5dd4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55a86a5dd540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55a86a5dd5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55a86a5dd7b8 <line:15:22>
|-TypedefDecl 0x55a86a5dd828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55a86a576f70 'unsigned char'
|-TypedefDecl 0x55a86a5dd898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55a86a576f90 'unsigned short'
|-TypedefDecl 0x55a86a5dd908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55a86a576fb0 'unsigned int'
|-TypedefDecl 0x55a86a5dd978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55a86a576fd0 'unsigned long'
|-TypedefDecl 0x55a86a5dd9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55a86a576ed0 'signed char'
|-TypedefDecl 0x55a86a5dda58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55a86a576f70 'unsigned char'
|-TypedefDecl 0x55a86a5ddac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55a86a576ef0 'short'
|-TypedefDecl 0x55a86a5ddb38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55a86a576f90 'unsigned short'
|-TypedefDecl 0x55a86a5ddba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55a86a576f10 'int'
|-TypedefDecl 0x55a86a5ddc18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55a86a576fb0 'unsigned int'
|-TypedefDecl 0x55a86a5ddc88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55a86a576f30 'long'
|-TypedefDecl 0x55a86a5ddcf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55a86a576fd0 'unsigned long'
|-TypedefDecl 0x55a86a5ddd68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55a86a576f30 'long'
|-TypedefDecl 0x55a86a5dddd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55a86a576fd0 'unsigned long'
|-TypedefDecl 0x55a86a5dde48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55a86a576fd0 'unsigned long'
|-TypedefDecl 0x55a86a5ddeb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55a86a576fb0 'unsigned int'
|-TypedefDecl 0x55a86a5ddf28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55a86a576fb0 'unsigned int'
|-TypedefDecl 0x55a86a5ddf98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55a86a576fd0 'unsigned long'
|-TypedefDecl 0x55a86a5de008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55a86a576fd0 'unsigned long'
|-TypedefDecl 0x55a86a5de078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55a86a576fb0 'unsigned int'
|-TypedefDecl 0x55a86a5de0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55a86a576fd0 'unsigned long'
|-TypedefDecl 0x55a86a5de158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55a86a576f30 'long'
|-TypedefDecl 0x55a86a5de1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55a86a576f30 'long'
|-TypedefDecl 0x55a86a5de238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55a86a576f10 'int'
|-RecordDecl 0x55a86a5de290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55a86a5de408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55a86a5de4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55a86a5de460 'struct __fsid_t' sugar
|   `-RecordType 0x55a86a5de310 '__fsid_t'
|     `-Record 0x55a86a5de290 ''
|-TypedefDecl 0x55a86a5de548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55a86a576f30 'long'
|-TypedefDecl 0x55a86a5de5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55a86a576fd0 'unsigned long'
|-TypedefDecl 0x55a86a5de628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55a86a576fd0 'unsigned long'
|-TypedefDecl 0x55a86a5de698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55a86a576fb0 'unsigned int'
|-TypedefDecl 0x55a86a5de708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55a86a576f30 'long'
|-TypedefDecl 0x55a86a5de778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55a86a576fb0 'unsigned int'
|-TypedefDecl 0x55a86a5de7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55a86a576f30 'long'
|-TypedefDecl 0x55a86a5de858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55a86a576f10 'int'
|-TypedefDecl 0x55a86a5de8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55a86a576f10 'int'
|-TypedefDecl 0x55a86a5de938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55a86a576f10 'int'
|-TypedefDecl 0x55a86a5de9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55a86a577630 'void *'
|   `-BuiltinType 0x55a86a576e70 'void'
|-TypedefDecl 0x55a86a5dea18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55a86a576f30 'long'
|-TypedefDecl 0x55a86a5dea88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55a86a576f30 'long'
|-TypedefDecl 0x55a86a5deaf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55a86a576f30 'long'
|-TypedefDecl 0x55a86a5deb68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55a86a576fd0 'unsigned long'
|-TypedefDecl 0x55a86a5debd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55a86a576fd0 'unsigned long'
|-TypedefDecl 0x55a86a5dec48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55a86a576fd0 'unsigned long'
|-TypedefDecl 0x55a86a5decb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55a86a576fd0 'unsigned long'
|-TypedefDecl 0x55a86a5ded28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55a86a576f30 'long'
|-TypedefDecl 0x55a86a5ded98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55a86a576f30 'long'
|-TypedefDecl 0x55a86a5dee08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55a86a576f30 'long'
|-TypedefDecl 0x55a86a5dee78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55a86a576fd0 'unsigned long'
|-TypedefDecl 0x55a86a5def08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55a86a5deed0 '__off64_t' sugar
|   |-Typedef 0x55a86a5de1c8 '__off64_t'
|   `-BuiltinType 0x55a86a576f30 'long'
|-TypedefDecl 0x55a86a5df000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55a86a5defc0 '__quad_t *'
|   `-TypedefType 0x55a86a5def60 '__quad_t' sugar
|     |-Typedef 0x55a86a5ddd68 '__quad_t'
|     `-BuiltinType 0x55a86a576f30 'long'
|-TypedefDecl 0x55a86a5df070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55a86a577ab0 'char *'
|   `-BuiltinType 0x55a86a576eb0 'char'
|-TypedefDecl 0x55a86a5df0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55a86a576f30 'long'
|-TypedefDecl 0x55a86a5df150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55a86a576fb0 'unsigned int'
|-FunctionDecl 0x55a86a5df298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55a86a5df1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55a86a5e05e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55a86a5e05d8 <line:72:3, col:34>
|     `-CallExpr 0x55a86a5e0598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55a86a5e0580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55a86a5e0510 <col:10> '<builtin fn type>' Function 0x55a86a5e0380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55a86a5e05c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55a86a5e0530 <col:29> 'unsigned int' lvalue ParmVar 0x55a86a5df1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55a86a5e0380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55a86a5e0420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55a86a5e0490 <col:10> Implicit
| `-ConstAttr 0x55a86a5e04e8 <col:10> Implicit
|-FunctionDecl 0x55a86a5e0740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55a86a5e0638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55a86a5e0a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55a86a5e0a48 <line:77:3, col:34>
|     `-CallExpr 0x55a86a5e0a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55a86a5e09f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55a86a5e0978 <col:10> '<builtin fn type>' Function 0x55a86a5e07e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55a86a5e0a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55a86a5e0998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55a86a5e0638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55a86a5e07e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55a86a5e0888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55a86a5e08f8 <col:10> Implicit
| `-ConstAttr 0x55a86a5e0950 <col:10> Implicit
|-TypedefDecl 0x55a86a5e0a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55a86a576fd0 'unsigned long'
|-TypedefDecl 0x55a86a5e0b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55a86a5e0ae0 '__time_t' sugar
|   |-Typedef 0x55a86a5de708 '__time_t'
|   `-BuiltinType 0x55a86a576f30 'long'
|-RecordDecl 0x55a86a5e0b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55a86a5e0c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55a86a5e0cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55a86a5e0d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55a86a5e0d10 '__pid_t' sugar
|   |-Typedef 0x55a86a5de238 '__pid_t'
|   `-BuiltinType 0x55a86a576f10 'int'
|-RecordDecl 0x55a86a5e0da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55a86a5e0e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55a86a5e0eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55a86a5e0f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55a86a5e0fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55a86a576fd0 'unsigned long'
|-RecordDecl 0x55a86a5e1030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55a86a5e12c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55a86a5e23a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55a86a5e1310 'struct cpu_set_t' sugar
|   `-RecordType 0x55a86a5e10b0 'cpu_set_t'
|     `-Record 0x55a86a5e1030 ''
|-FunctionDecl 0x55a86a5e2678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55a86a5e2448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55a86a5e2550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55a86a5e2728 <line:107:19>
|-FunctionDecl 0x55a86a5e2900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55a86a5e2790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55a86a5e29a8 <col:69>
|-FunctionDecl 0x55a86a5e2b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55a86a5e2a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55a86a5e2bc8 <col:64>
|-FunctionDecl 0x55a86a5e2e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55a86a5e2c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55a86a5e2d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55a86a5e2f38 <line:113:22>
|-FunctionDecl 0x55a86a5e31b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55a86a5e2fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55a86a5e3098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55a86a5e3268 <col:88>
|-FunctionDecl 0x55a86a5e3588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55a86a5e32d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55a86a5e33b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55a86a5e3440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55a86a5e3640 <col:62>
|-FunctionDecl 0x55a86a5e37b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55a86a5e36a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55a86a5e3860 <col:63>
|-FunctionDecl 0x55a86a5e3988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55a86a5e3a28 <col:47>
|-FunctionDecl 0x55a86a5e3b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55a86a5e3a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55a86a5e3bd8 <col:69>
|-FunctionDecl 0x55a86a5e3ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55a86a5e3c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55a86a5e3d88 <col:69>
|-FunctionDecl 0x55a86a5e4048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55a86a5e3df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55a86a5e3f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55a86a5e40f8 <col:88>
|-TypedefDecl 0x55a86a5e4188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55a86a5e4150 '__clock_t' sugar
|   |-Typedef 0x55a86a5de548 '__clock_t'
|   `-BuiltinType 0x55a86a576f30 'long'
|-TypedefDecl 0x55a86a5e4218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55a86a5e41e0 '__clockid_t' sugar
|   |-Typedef 0x55a86a5de938 '__clockid_t'
|   `-BuiltinType 0x55a86a576f10 'int'
|-TypedefDecl 0x55a86a5e42a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55a86a5e4270 '__timer_t' sugar
|   |-Typedef 0x55a86a5de9a8 '__timer_t'
|   `-PointerType 0x55a86a577630 'void *'
|     `-BuiltinType 0x55a86a576e70 'void'
|-RecordDecl 0x55a86a5e4300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55a86a5e43d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55a86a5e4440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55a86a5e44a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55a86a5e4510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55a86a5e4578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55a86a5e45e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55a86a5e4648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55a86a5e46b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55a86a5e4718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55a86a5e4780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55a86a5e47e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55a86a5e4838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55a86a5e4908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55a86a5e4978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55a86a5e4a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55a86a5e4bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55a86a5e4c90 <col:45>
|-FunctionDecl 0x55a86a5e4e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55a86a5e4d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55a86a5e4f18 <col:54>
|-FunctionDecl 0x55a86a5e5118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55a86a5e4f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55a86a5e4ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55a86a5e51c8 <line:157:22>
| `-ConstAttr 0x55a86a5e5220 <col:63>
|-FunctionDecl 0x55a86a5e6050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55a86a5e5318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55a86a5e60f8 <col:56>
|-FunctionDecl 0x55a86a5e64a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55a86a5e6168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55a86a5e61e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55a86a5e6260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55a86a5e6358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55a86a5e6560 <col:54>
|-RecordDecl 0x55a86a5e65b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55a86a5e6668 parent 0x55a86a576e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55a86a5e68c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55a86a5e6968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55a86a5e69d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55a86a5e6a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55a86a5e6b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55a86a5e6c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55a86a5e6bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x55a86a5e6b80 'struct __locale_struct' sugar
|     `-RecordType 0x55a86a5e6640 'struct __locale_struct'
|       `-Record 0x55a86a5e65b8 '__locale_struct'
|-TypedefDecl 0x55a86a5e6cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55a86a5e6cc0 '__locale_t' sugar
|   |-Typedef 0x55a86a5e6c48 '__locale_t'
|   `-PointerType 0x55a86a5e6bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x55a86a5e6b80 'struct __locale_struct' sugar
|       `-RecordType 0x55a86a5e6640 'struct __locale_struct'
|         `-Record 0x55a86a5e65b8 '__locale_struct'
|-FunctionDecl 0x55a86a5e8110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55a86a5e6d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55a86a5e6de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55a86a5e6e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55a86a5e6ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55a86a5e6f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55a86a5e81d8 <col:40>
|-FunctionDecl 0x55a86a5e83c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55a86a5e82a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55a86a5e8470 <col:66>
|-FunctionDecl 0x55a86a5e8580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55a86a5e84d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55a86a5e8628 <col:69>
|-FunctionDecl 0x55a86a5e8858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55a86a5e8690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55a86a5e8720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55a86a5e8908 <col:52>
|-FunctionDecl 0x55a86a5e8ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55a86a5e8970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55a86a5e8a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55a86a5e8b60 <col:55>
|-FunctionDecl 0x55a86a5e8cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55a86a5e8be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55a86a5e8da0 <col:62>
|-FunctionDecl 0x55a86a5e8f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55a86a5e8e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55a86a5e8fc0 <col:60>
|-FunctionDecl 0x55a86a5e92b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55a86a5e9118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55a86a5e9198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55a86a5e9368 <col:44>
|-FunctionDecl 0x55a86a5e9578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55a86a5e93d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55a86a5e9450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55a86a5e9628 <col:49>
|-VarDecl 0x55a86a5e9728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55a86a5e97a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55a86a5e9828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55a86a5e98f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55a86a5e9a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55a86a5e9ac0 <col:42>
|-VarDecl 0x55a86a5e9b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55a86a5e9bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55a86a5e9d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55a86a5e9c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55a86a5e9de0 <col:57>
|-FunctionDecl 0x55a86a5e9ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55a86a5e9e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55a86a5e9f98 <col:56>
|-FunctionDecl 0x55a86a5ea0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55a86a5ea018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55a86a5ea178 <col:59>
|-FunctionDecl 0x55a86a5ea280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55a86a5ea1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55a86a5ea328 <col:48>
| `-ConstAttr 0x55a86a5ea380 <col:89>
|-FunctionDecl 0x55a86a5ea5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55a86a5ea438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55a86a5ea4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55a86a5ea848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55a86a5ea6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a86a5ea768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55a86a5ea8f8 <col:88>
|-FunctionDecl 0x55a86a5eaa90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55a86a5ea960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a86a5ea9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55a86a5eab40 <col:88>
|-FunctionDecl 0x55a86a5ead58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55a86a5eaba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a86a5eac38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55a86a5eae08 <line:208:22>
|-FunctionDecl 0x55a86a5eb178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55a86a5eae70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a86a5eaef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55a86a5eaf80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55a86a5eb010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55a86a5eb478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55a86a5eb278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55a86a5eb350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55a86a5eb528 <col:85>
|-FunctionDecl 0x55a86a5eb918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55a86a5eb590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a86a5eb6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55a86a5eb7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55a86a5eb9d0 <col:52>
|-FunctionDecl 0x55a86a5ebb48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55a86a5eba38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55a86a5ebbf0 <col:61>
|-FunctionDecl 0x55a86a5ec0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55a86a5ebc58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55a86a5ebcd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55a86a5ebe08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55a86a5ebef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55a86a5ec1b0 <col:62>
|-FunctionDecl 0x55a86a5ec3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55a86a5ec218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55a86a5ec2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55a86a5ec478 <line:221:22>
|-FunctionDecl 0x55a86a5ec578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55a86a5ec4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55a86a5ec620 <col:65>
|-TypedefDecl 0x55a86a5ec690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55a86a576fd0 'unsigned long'
|-RecordDecl 0x55a86a5ec6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55a86a5ec830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55a86a5ec898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a86a5ec948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55a86a5ec8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x55a86a5ec770 'union pthread_attr_t'
|     `-Record 0x55a86a5ec6e8 'pthread_attr_t'
|-RecordDecl 0x55a86a5ec9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55a86a5ecb18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55a86a5ecb90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55a86a5ecc40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55a86a5ecbe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55a86a5eca20 'struct __pthread_internal_list'
|     `-Record 0x55a86a5ec9a0 '__pthread_internal_list'
|-RecordDecl 0x55a86a5eccb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55a86a5ecd58 parent 0x55a86a576e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55a86a5ece30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55a86a5ece98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55a86a5ecf00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55a86a5ecf68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55a86a5ecfd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55a86a5ed038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55a86a5f1110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55a86a5f11c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55a86a5f12b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55a86a5f1318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a86a5f14a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55a86a5f1440 'union pthread_mutex_t' sugar
|   `-RecordType 0x55a86a5ecd30 'pthread_mutex_t'
|     `-Record 0x55a86a5eccb0 ''
|-RecordDecl 0x55a86a5f1510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55a86a5f1650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55a86a5f16b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55a86a5f1770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55a86a5f1710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55a86a5f1590 'pthread_mutexattr_t'
|     `-Record 0x55a86a5f1510 ''
|-RecordDecl 0x55a86a5f17e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55a86a5f1888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55a86a5f1950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55a86a5f19b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55a86a5f1a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55a86a5f1a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55a86a5f1af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55a86a5f1b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55a86a5f1bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55a86a5f1c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55a86a5f1ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_8/mix032_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_8/mix032_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55a86a5f1dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55a86a5f1e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55a86a5f1f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55a86a5f1f10 'union pthread_cond_t' sugar
|   `-RecordType 0x55a86a5f1860 'pthread_cond_t'
|     `-Record 0x55a86a5f17e0 ''
|-RecordDecl 0x55a86a5f1fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55a86a5f3130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55a86a5f3198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55a86a5f3250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55a86a5f31f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x55a86a5f2060 'pthread_condattr_t'
|     `-Record 0x55a86a5f1fe0 ''
|-TypedefDecl 0x55a86a5f32d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55a86a576fb0 'unsigned int'
|-TypedefDecl 0x55a86a5f3348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55a86a576f10 'int'
|-RecordDecl 0x55a86a5f33a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55a86a5f3448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55a86a5f3510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55a86a5f3578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55a86a5f35e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55a86a5f3648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55a86a5f36b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55a86a5f3718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55a86a5f3780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55a86a5f37e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55a86a5f3850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55a86a5f38b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55a86a5f3920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55a86a5f39d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_8/mix032_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_8/mix032_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55a86a5f3a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55a86a5f3ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a86a5f3c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55a86a5f3bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55a86a5f3420 'pthread_rwlock_t'
|     `-Record 0x55a86a5f33a0 ''
|-RecordDecl 0x55a86a5f3ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55a86a5f3de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55a86a5f3e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a86a5f3f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55a86a5f3ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55a86a5f3d20 'pthread_rwlockattr_t'
|     `-Record 0x55a86a5f3ca0 ''
|-TypedefDecl 0x55a86a5f3f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55a86a576f14 'volatile int' volatile
|   `-BuiltinType 0x55a86a576f10 'int'
|-RecordDecl 0x55a86a5f3fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55a86a5f5140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55a86a5f51a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a86a5f5260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55a86a5f5200 'union pthread_barrier_t' sugar
|   `-RecordType 0x55a86a5f4060 'pthread_barrier_t'
|     `-Record 0x55a86a5f3fe0 ''
|-RecordDecl 0x55a86a5f52d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55a86a5f53d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55a86a5f5438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55a86a5f54f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55a86a5f5490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55a86a5f5350 'pthread_barrierattr_t'
|     `-Record 0x55a86a5f52d0 ''
|-TypedefDecl 0x55a86a5f5608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55a86a5f55a0 'long [8]' 8 
|   `-BuiltinType 0x55a86a576f30 'long'
|-EnumDecl 0x55a86a5f5660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55a86a5f5728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55a86a5f5778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55a86a5f57c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55a86a5f5898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55a86a5f58e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55a86a5f5938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55a86a5f5988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55a86a5f5a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55a86a5f59f8 <col:26> 'int'
| |   `-DeclRefExpr 0x55a86a5f59d8 <col:26> 'int' EnumConstant 0x55a86a5f5898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55a86a5f5a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55a86a5f5a80 <col:29> 'int'
| |   `-DeclRefExpr 0x55a86a5f5a60 <col:29> 'int' EnumConstant 0x55a86a5f58e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55a86a5f5b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55a86a5f5b08 <col:30> 'int'
| |   `-DeclRefExpr 0x55a86a5f5ae8 <col:30> 'int' EnumConstant 0x55a86a5f5938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55a86a5f5ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55a86a5f5b90 <col:27> 'int'
|     `-DeclRefExpr 0x55a86a5f5b70 <col:27> 'int' EnumConstant 0x55a86a5f5a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55a86a5f5bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55a86a5f5cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55a86a5f5d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55a86a5f5d38 <col:30> 'int'
| |   `-DeclRefExpr 0x55a86a5f5d18 <col:30> 'int' EnumConstant 0x55a86a5f5cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55a86a5f5da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55a86a5f5e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55a86a5f5e10 <col:29> 'int'
|     `-DeclRefExpr 0x55a86a5f5df0 <col:29> 'int' EnumConstant 0x55a86a5f5da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55a86a5f5e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55a86a5f5f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55a86a5f5f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55a86a5f5fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55a86a5f6038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55a86a5f6150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55a86a5f61a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55a86a5f61f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55a86a5f6278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55a86a5f6260 <col:31> 'int'
|     `-DeclRefExpr 0x55a86a5f6240 <col:31> 'int' EnumConstant 0x55a86a5f6150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55a86a5f62c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55a86a5f6398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55a86a5f63e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55a86a5f6438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55a86a5f6508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55a86a5f6558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55a86a5f65a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55a86a5f6678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55a86a5f66c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55a86a5f6718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55a86a5f6958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55a86a5f69c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55a86a5f6a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55a86a5f6b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55a86a5f6b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55a86a5f6c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55a86a5f6cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55a86a5f6d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55a86a5f6dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55a86a5f6e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55a86a5f7488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55a86a5f6f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55a86a5f7030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a86a5f7270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55a86a5f72f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55a86a5f7548 <col:47>
| |-NonNullAttr 0x55a86a5f75a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55a86a5f75d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55a86a5f7700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55a86a5f7630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55a86a5f7958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55a86a5f77b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55a86a5f7838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55a86a5f7b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55a86a5f7a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55a86a5f7bd0 <col:60>
|-FunctionDecl 0x55a86a5f7d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55a86a5f7dc0 <col:54>
| `-ConstAttr 0x55a86a5f7e18 <col:95>
|-FunctionDecl 0x55a86a5f7fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55a86a5f7e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a86a5f7ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55a86a5f8098 <line:394:19>
| `-ConstAttr 0x55a86a5f80f0 <col:60>
|-FunctionDecl 0x55a86a5f9b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55a86a5f99d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55a86a5f9bb0 <col:71>
| `-NonNullAttr 0x55a86a5f9c08 <col:112, col:126> 1
|-FunctionDecl 0x55a86a5f9d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55a86a5f9c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55a86a5f9db8 <line:397:22>
| `-NonNullAttr 0x55a86a5f9e10 <col:63, col:77> 1
|-FunctionDecl 0x55a86a5fa038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55a86a5f9e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55a86a5f9ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55a86a5fa0e8 <line:400:22>
| `-NonNullAttr 0x55a86a5fa140 <col:63, col:80> 1 2
|-FunctionDecl 0x55a86a5fa348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55a86a5fa188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a86a5fa208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55a86a5fa3f8 <line:403:22>
| `-NonNullAttr 0x55a86a5fa450 <col:63, col:77> 1
|-FunctionDecl 0x55a86a5fa6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55a86a5fa498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55a86a5fa540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55a86a5fa758 <line:406:22>
| `-NonNullAttr 0x55a86a5fa7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a86a5fb9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55a86a5fa7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a86a5fa870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55a86a5fba98 <line:409:22>
| `-NonNullAttr 0x55a86a5fbaf0 <col:63, col:77> 1
|-FunctionDecl 0x55a86a5fbd28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55a86a5fbb38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a86a5fbbc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55a86a5fbdd8 <line:412:22>
| `-NonNullAttr 0x55a86a5fbe30 <col:63, col:80> 1 2
|-FunctionDecl 0x55a86a5fc068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55a86a5fbe78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a86a5fbf08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55a86a5fc118 <col:37>
| `-NonNullAttr 0x55a86a5fc170 <col:78, col:95> 1 2
|-FunctionDecl 0x55a86a5fc358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a86a5fc1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a86a5fc238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55a86a5fc408 <line:418:22>
| `-NonNullAttr 0x55a86a5fc460 <col:63, col:80> 1 2
|-FunctionDecl 0x55a86a5fc5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55a86a5fc4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a86a5fc528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55a86a5fc698 <line:420:22>
| `-NonNullAttr 0x55a86a5fc6f0 <col:63, col:77> 1
|-FunctionDecl 0x55a86a5fc898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a86a5fc738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a86a5fc7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55a86a5fc948 <line:423:22>
| `-NonNullAttr 0x55a86a5fc9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a86a5fcb48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55a86a5fca08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a86a5fca88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55a86a5fcbf8 <line:426:22>
| `-NonNullAttr 0x55a86a5fcc50 <col:63, col:77> 1
|-FunctionDecl 0x55a86a5fcdf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a86a5fcc98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a86a5fcd18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55a86a5fcea8 <line:429:22>
| `-NonNullAttr 0x55a86a5fcf00 <col:63, col:80> 1 2
|-FunctionDecl 0x55a86a5fd088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55a86a5fcf48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a86a5fcfc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55a86a5fd138 <line:431:22>
| `-NonNullAttr 0x55a86a5fd190 <col:63, col:77> 1
|-FunctionDecl 0x55a86a5fd3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55a86a5fd1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a86a5fd258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55a86a5fd468 <line:434:22>
| |-NonNullAttr 0x55a86a5fd4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55a86a5fd4f8 <col:100> "" ""
|-FunctionDecl 0x55a86a5fd708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55a86a5fd548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a86a5fd5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55a86a5fd7b8 <line:437:22>
| |-NonNullAttr 0x55a86a5fd810 <col:63, col:77> 1
| `-DeprecatedAttr 0x55a86a5fd848 <col:97> "" ""
|-FunctionDecl 0x55a86a5fda48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55a86a5fd898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a86a5fd910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55a86a5fdaf8 <line:440:22>
| `-NonNullAttr 0x55a86a5fdb50 <col:63, col:80> 1 2
|-FunctionDecl 0x55a86a5fdcd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55a86a5fdb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a86a5fdc10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55a86a5fdd80 <line:443:22>
| `-NonNullAttr 0x55a86a5fddd8 <col:63, col:77> 1
|-FunctionDecl 0x55a86a5fe0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55a86a5fde28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a86a5fdea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55a86a5fdf20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55a86a5fe180 <line:447:22>
| `-NonNullAttr 0x55a86a5fe1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55a86a5fe488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55a86a5fe230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a86a5fe2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55a86a5fe328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55a86a5fe540 <col:43>
| `-NonNullAttr 0x55a86a5fe598 <col:84, col:98> 1
|-FunctionDecl 0x55a86a5fe858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55a86a5fe5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a86a5fe668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55a86a5fe6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55a86a5fe910 <line:452:22>
| `-NonNullAttr 0x55a86a5fe968 <col:63, col:77> 3
|-FunctionDecl 0x55a86a5fec78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55a86a5fe9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a86a5fea60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55a86a5feaf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55a86a5fed30 <line:456:22>
| `-NonNullAttr 0x55a86a5fed88 <col:63, col:80> 2 3
|-FunctionDecl 0x55a86a5fef78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55a86a5fedd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a86a5fee58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55a86a5ff028 <line:458:22>
|-FunctionDecl 0x55a86a5ff3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55a86a5ff0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55a86a5ff290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55a86a5ff4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x55a86a5ff650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55a86a5ff530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55a86a5ff5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55a86a5ff838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55a86a5ff718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55a86a5ff798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55a86a5ff9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55a86a5ff8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55a86a5ffb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55a86a5ffbd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55a86a5ffc78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55a86a5ffd68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55a86a5ffdd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55a86a5fffa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_8/mix032_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55a86a600098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55a86a600150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55a86a6000f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55a86a5ffc50 '__pthread_unwind_buf_t'
| |   `-Record 0x55a86a5ffbd0 ''
| `-AlignedAttr 0x55a86a6001a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55a86a600220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55a86a600380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55a86a6003e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55a86a600450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55a86a6004b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55a86a6006c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55a86a6005b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55a86a600808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55a86a600778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55a86a600a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55a86a6008c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55a86a600aa8 <line:487:22>
|-RecordDecl 0x55a86a600b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55a86a600e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55a86a600c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55a86a600cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55a86a600ec8 <col:86>
| `-ReturnsTwiceAttr 0x55a86a600f20 <col:12> Implicit
|-FunctionDecl 0x55a86a601248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55a86a600ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55a86a601100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55a86a6012f8 <line:493:22>
| `-NonNullAttr 0x55a86a601350 <col:63, col:77> 1
|-FunctionDecl 0x55a86a6014c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a86a601398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a86a601570 <line:495:22>
| `-NonNullAttr 0x55a86a6015c8 <col:63, col:77> 1
|-FunctionDecl 0x55a86a6016d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a86a601618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a86a601778 <line:497:22>
| `-NonNullAttr 0x55a86a6017d0 <col:52, col:66> 1
|-FunctionDecl 0x55a86a6018d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a86a601818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a86a601978 <line:499:22>
| `-NonNullAttr 0x55a86a6019d0 <col:52, col:66> 1
|-FunctionDecl 0x55a86a602c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55a86a602a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55a86a602ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55a86a602cd8 <col:36>
| `-NonNullAttr 0x55a86a602d30 <col:66, col:83> 1 2
|-FunctionDecl 0x55a86a602e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a86a602d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a86a602ed8 <line:504:22>
| `-NonNullAttr 0x55a86a602f30 <col:52, col:66> 1
|-FunctionDecl 0x55a86a6031c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a86a602fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55a86a603060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55a86a603278 <line:508:22>
| `-NonNullAttr 0x55a86a6032d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a86a603598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55a86a603318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55a86a603398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55a86a603418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55a86a603650 <line:512:22>
| `-NonNullAttr 0x55a86a6036a8 <col:63, col:80> 1 3
|-FunctionDecl 0x55a86a6037b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a86a6036f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a86a603858 <line:514:22>
| `-NonNullAttr 0x55a86a6038b0 <col:63, col:77> 1
|-FunctionDecl 0x55a86a603ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55a86a603960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55a86a603b80 <line:516:22>
| `-NonNullAttr 0x55a86a603bd8 <col:63, col:77> 1
|-FunctionDecl 0x55a86a603ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55a86a603c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55a86a603d88 <line:518:22>
| `-NonNullAttr 0x55a86a603de0 <col:63, col:77> 1
|-FunctionDecl 0x55a86a604008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a86a603e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55a86a603ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55a86a6040b8 <line:522:22>
| `-NonNullAttr 0x55a86a604110 <col:63, col:80> 1 2
|-FunctionDecl 0x55a86a604318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a86a604158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a86a6041d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55a86a6043c8 <line:525:22>
| `-NonNullAttr 0x55a86a604420 <col:63, col:77> 1
|-FunctionDecl 0x55a86a6045c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a86a604468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55a86a6044e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55a86a604678 <line:528:22>
| `-NonNullAttr 0x55a86a6046d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a86a604858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a86a604718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a86a604798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55a86a604908 <line:530:22>
| `-NonNullAttr 0x55a86a604960 <col:63, col:77> 1
|-FunctionDecl 0x55a86a604b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a86a6049a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55a86a604a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55a86a604bd0 <line:534:22>
| `-NonNullAttr 0x55a86a604c28 <col:63, col:80> 1 2
|-FunctionDecl 0x55a86a604db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a86a604c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a86a604cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55a86a604e68 <line:537:22>
| `-NonNullAttr 0x55a86a604ec0 <col:63, col:77> 1
|-FunctionDecl 0x55a86a605068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a86a604f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55a86a604f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55a86a605118 <line:541:22>
| `-NonNullAttr 0x55a86a605170 <col:63, col:80> 1 2
|-FunctionDecl 0x55a86a6052f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a86a6051b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a86a605238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55a86a6053a8 <line:544:22>
| `-NonNullAttr 0x55a86a605400 <col:63, col:77> 1
|-FunctionDecl 0x55a86a6055e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55a86a605448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a86a6054c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55a86a605698 <line:547:22>
| `-NonNullAttr 0x55a86a6056f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a86a605878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a86a605738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a86a6057b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55a86a605928 <line:550:22>
| `-NonNullAttr 0x55a86a605980 <col:63, col:77> 1
|-FunctionDecl 0x55a86a606cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55a86a606aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55a86a606bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55a86a606da8 <col:29>
| `-NonNullAttr 0x55a86a606e00 <col:70, col:84> 1
|-FunctionDecl 0x55a86a606f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a86a606e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a86a607020 <line:555:22>
| `-NonNullAttr 0x55a86a607078 <col:63, col:77> 1
|-FunctionDecl 0x55a86a607180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a86a6070c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a86a607228 <line:557:22>
| `-NonNullAttr 0x55a86a607280 <col:52, col:66> 1
|-FunctionDecl 0x55a86a607380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a86a6072c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a86a607428 <line:559:19>
| `-NonNullAttr 0x55a86a607480 <col:49, col:63> 1
|-FunctionDecl 0x55a86a6076b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55a86a6074c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55a86a607558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55a86a607768 <col:39>
| `-NonNullAttr 0x55a86a6077c0 <col:69, col:86> 1 2
|-FunctionDecl 0x55a86a6078c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a86a607808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a86a607968 <line:564:22>
| `-NonNullAttr 0x55a86a6079c0 <col:52, col:66> 1
|-FunctionDecl 0x55a86a607b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a86a607a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a86a607bd0 <line:566:22>
| `-NonNullAttr 0x55a86a607c28 <col:52, col:66> 1
|-FunctionDecl 0x55a86a607de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55a86a607c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55a86a607d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55a86a607e98 <col:39>
| `-NonNullAttr 0x55a86a607ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x55a86a607ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a86a607f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a86a608098 <line:571:22>
| `-NonNullAttr 0x55a86a6080f0 <col:52, col:66> 1
|-FunctionDecl 0x55a86a6082d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55a86a6081a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55a86a608380 <line:573:22>
| `-NonNullAttr 0x55a86a6083d8 <col:63, col:77> 1
|-FunctionDecl 0x55a86a6084e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55a86a608428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55a86a608588 <line:575:22>
| `-NonNullAttr 0x55a86a6085e0 <col:63, col:77> 1
|-FunctionDecl 0x55a86a608808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a86a608628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55a86a6086a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55a86a6088b8 <line:579:22>
| `-NonNullAttr 0x55a86a608910 <col:63, col:80> 1 2
|-FunctionDecl 0x55a86a608b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55a86a608958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55a86a6089d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55a86a608be8 <line:582:22>
| `-NonNullAttr 0x55a86a608c40 <col:63, col:77> 1
|-FunctionDecl 0x55a86a608de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a86a608c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55a86a608d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55a86a608e98 <line:586:22>
| `-NonNullAttr 0x55a86a608ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a86a609078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55a86a608f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55a86a608fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55a86a609128 <col:36>
| `-NonNullAttr 0x55a86a609180 <col:77, col:91> 1
|-FunctionDecl 0x55a86a6094b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55a86a609260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55a86a609370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55a86a609568 <line:591:22>
| `-NonNullAttr 0x55a86a6095c0 <col:63, col:77> 1
|-FunctionDecl 0x55a86a609738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55a86a609608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55a86a6097e0 <line:593:22>
| `-NonNullAttr 0x55a86a609838 <col:63, col:77> 1
|-FunctionDecl 0x55a86a609940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55a86a609888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55a86a6099e8 <line:595:22>
| `-NonNullAttr 0x55a86a609a40 <col:52, col:66> 1
|-FunctionDecl 0x55a86a609b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55a86a609aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55a86a609c00 <line:597:22>
| `-NonNullAttr 0x55a86a609c58 <col:52, col:66> 1
|-FunctionDecl 0x55a86a609e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55a86a609ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55a86a609d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55a86a609f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55a86a60a268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55a86a609fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55a86a60a030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55a86a60a0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55a86a60a320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55a86a60a538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55a86a60a400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55a86a60a5e0 <line:606:22>
| `-NonNullAttr 0x55a86a60a638 <col:63, col:77> 1
|-FunctionDecl 0x55a86a60a740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55a86a60a688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55a86a60a7e8 <line:608:22>
| `-NonNullAttr 0x55a86a60a840 <col:63, col:77> 1
|-FunctionDecl 0x55a86a60aaa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a86a60a888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55a86a60a908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55a86a60ab50 <line:612:22>
| `-NonNullAttr 0x55a86a60aba8 <col:63, col:80> 1 2
|-FunctionDecl 0x55a86a60adb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55a86a60abf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55a86a60ac78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55a86a60ae68 <col:37>
| `-NonNullAttr 0x55a86a60aec0 <col:78, col:92> 1
|-FunctionDecl 0x55a86a60b0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55a86a60af08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55a86a60afb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55a86a60b188 <line:618:22>
| `-NonNullAttr 0x55a86a60b1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a86a60b3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55a86a60b228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55a86a60b2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55a86a60b458 <line:621:22>
| `-NonNullAttr 0x55a86a60b4b0 <col:63, col:77> 1
|-FunctionDecl 0x55a86a60b758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55a86a60b590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55a86a60b610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55a86a60b808 <line:623:22>
| `-NonNullAttr 0x55a86a60b860 <col:63, col:77> 1
|-FunctionDecl 0x55a86a60b9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55a86a60b8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55a86a60bab0 <line:625:22>
| `-NonNullAttr 0x55a86a60bb08 <col:63, col:77> 1
|-FunctionDecl 0x55a86a60bc10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55a86a60bb58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55a86a60bcb8 <line:627:22>
| `-NonNullAttr 0x55a86a60bd10 <col:52, col:66> 1
|-FunctionDecl 0x55a86a60be10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55a86a60bd58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55a86a60beb8 <line:629:22>
| `-NonNullAttr 0x55a86a60bf10 <col:52, col:66> 1
|-FunctionDecl 0x55a86a60c010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55a86a60bf58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55a86a60c0b8 <line:631:22>
| `-NonNullAttr 0x55a86a60c110 <col:52, col:66> 1
|-FunctionDecl 0x55a86a60c4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55a86a60c1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55a86a60c300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55a86a60c380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55a86a60c5a0 <line:635:22>
| `-NonNullAttr 0x55a86a60c5f8 <col:63, col:77> 1
|-FunctionDecl 0x55a86a60c778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55a86a60c648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55a86a60c820 <line:637:22>
| `-NonNullAttr 0x55a86a60c878 <col:63, col:77> 1
|-FunctionDecl 0x55a86a60c980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55a86a60c8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55a86a60ca28 <line:639:22>
| `-NonNullAttr 0x55a86a60ca80 <col:52, col:66> 1
|-FunctionDecl 0x55a86a60dc88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55a86a60db50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55a86a60dd30 <line:641:22>
| `-NonNullAttr 0x55a86a60dd88 <col:63, col:77> 1
|-FunctionDecl 0x55a86a60de90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55a86a60ddd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55a86a60df38 <line:643:22>
| `-NonNullAttr 0x55a86a60df90 <col:63, col:77> 1
|-FunctionDecl 0x55a86a60e1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a86a60dfd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55a86a60e058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55a86a60e268 <line:647:22>
| `-NonNullAttr 0x55a86a60e2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a86a60e4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55a86a60e308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55a86a60e388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55a86a60e578 <line:650:22>
| `-NonNullAttr 0x55a86a60e5d0 <col:63, col:77> 1
|-FunctionDecl 0x55a86a60e918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55a86a60e6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55a86a60e7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55a86a60e9c8 <line:653:22>
| `-NonNullAttr 0x55a86a60ea20 <col:63, col:77> 1
|-FunctionDecl 0x55a86a60eb88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55a86a60ea68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55a86a60ec30 <col:69>
|-FunctionDecl 0x55a86a60eda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55a86a60ec98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55a86a60ee50 <col:72>
|-FunctionDecl 0x55a86a60f088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55a86a60eeb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55a86a60ef68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55a86a60f138 <col:44>
|-FunctionDecl 0x55a86a60f358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55a86a60f1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a86a60f218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55a86a60f408 <line:660:22>
| `-NonNullAttr 0x55a86a60f460 <col:63, col:77> 2
|-FunctionDecl 0x55a86a60f8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55a86a60f540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55a86a60f650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55a86a60f760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55a86a60f960 <col:47>
|-FunctionDecl 0x55a86a60faf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55a86a60f9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55a86a60fc48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55a86a60fbb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55a86a60fda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55a86a60fd08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55a86a60fe68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55a86a60ff28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55a86a60ffe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55a86a6100a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55a86a610120 prev 0x55a86a6100a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55a86a610188 <col:24> 'int' 0
|-VarDecl 0x55a86a6101c0 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55a86a610240 prev 0x55a86a6101c0 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55a86a6102a8 <col:27> 'int' 0
|-VarDecl 0x55a86a6102e0 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55a86a610360 prev 0x55a86a6102e0 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55a86a6103c8 <col:27> 'int' 0
|-VarDecl 0x55a86a610400 <line:677:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x55a86a610480 prev 0x55a86a610400 <line:678:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x55a86a6104e8 <col:27> 'int' 0
|-VarDecl 0x55a86a610520 <line:679:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55a86a6105a0 prev 0x55a86a610520 <line:680:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55a86a610608 <col:27> 'int' 0
|-VarDecl 0x55a86a610640 <line:681:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x55a86a6106c0 prev 0x55a86a610640 <line:682:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x55a86a610728 <col:27> 'int' 0
|-VarDecl 0x55a86a610760 <line:683:1, col:5> col:5 used a 'int'
|-VarDecl 0x55a86a6107e0 prev 0x55a86a610760 <line:684:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x55a86a610848 <col:9> 'int' 0
|-VarDecl 0x55a86a610880 <line:685:1, col:5> col:5 used b 'int'
|-VarDecl 0x55a86a610900 prev 0x55a86a610880 <line:686:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x55a86a610968 <col:9> 'int' 0
|-VarDecl 0x55a86a610998 <line:687:1, col:7> col:7 used b$flush_delayed '_Bool'
|-VarDecl 0x55a86a610a18 <line:688:1, col:5> col:5 used b$mem_tmp 'int'
|-VarDecl 0x55a86a610b00 <line:689:1, col:7> col:7 used b$r_buff0_thd0 '_Bool'
|-VarDecl 0x55a86a610b78 <line:690:1, col:7> col:7 used b$r_buff0_thd1 '_Bool'
|-VarDecl 0x55a86a610bf0 <line:691:1, col:7> col:7 used b$r_buff0_thd2 '_Bool'
|-VarDecl 0x55a86a610c68 <line:692:1, col:7> col:7 used b$r_buff0_thd3 '_Bool'
|-VarDecl 0x55a86a610ce0 <line:693:1, col:7> col:7 used b$r_buff1_thd0 '_Bool'
|-VarDecl 0x55a86a610d58 <line:694:1, col:7> col:7 used b$r_buff1_thd1 '_Bool'
|-VarDecl 0x55a86a610dd0 <line:695:1, col:7> col:7 used b$r_buff1_thd2 '_Bool'
|-VarDecl 0x55a86a610e48 <line:696:1, col:7> col:7 used b$r_buff1_thd3 '_Bool'
|-VarDecl 0x55a86a610ec0 <line:697:1, col:7> col:7 b$read_delayed '_Bool'
|-VarDecl 0x55a86a610f40 <line:698:1, col:6> col:6 b$read_delayed_var 'int *'
|-VarDecl 0x55a86a610fc0 <line:699:1, col:5> col:5 used b$w_buff0 'int'
|-VarDecl 0x55a86a611038 <line:700:1, col:7> col:7 used b$w_buff0_used '_Bool'
|-VarDecl 0x55a86a6110b8 <line:701:1, col:5> col:5 used b$w_buff1 'int'
|-VarDecl 0x55a86a611130 <line:702:1, col:7> col:7 used b$w_buff1_used '_Bool'
|-VarDecl 0x55a86a6111a8 <line:703:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55a86a611220 <line:704:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55a86a6112a0 <line:705:1, col:5> col:5 used x 'int'
|-VarDecl 0x55a86a611320 prev 0x55a86a6112a0 <line:706:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55a86a611388 <col:9> 'int' 0
|-VarDecl 0x55a86a6113c0 <line:707:1, col:5> col:5 used y 'int'
|-VarDecl 0x55a86a611440 prev 0x55a86a6113c0 <line:708:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55a86a6114a8 <col:9> 'int' 0
|-VarDecl 0x55a86a6114e0 <line:709:1, col:5> col:5 used z 'int'
|-VarDecl 0x55a86a611560 prev 0x55a86a6114e0 <line:710:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55a86a6115c8 <col:9> 'int' 0
|-VarDecl 0x55a86a6115f8 <line:711:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55a86a611670 <line:712:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55a86a611788 prev 0x55a86a60faf0 <line:713:1, line:741:1> line:713:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55a86a6116f0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55a86a612fd8 <line:714:1, line:741:1>
|   |-CallExpr 0x55a86a611898 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a86a611880 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a611830 <col:3> 'void ()' Function 0x55a86a5b6e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a86a611910 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55a86a6118b8 <col:3> 'int' lvalue Var 0x55a86a6110b8 'b$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55a86a6118f8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a86a6118d8 <col:15> 'int' lvalue Var 0x55a86a610fc0 'b$w_buff0' 'int'
|   |-BinaryOperator 0x55a86a611970 <line:717:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55a86a611930 <col:3> 'int' lvalue Var 0x55a86a610fc0 'b$w_buff0' 'int'
|   | `-IntegerLiteral 0x55a86a611950 <col:15> 'int' 1
|   |-BinaryOperator 0x55a86a6119e8 <line:718:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a611990 <col:3> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a86a6119d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a86a6119b0 <col:20> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a86a611a80 <line:719:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a611a08 <col:3> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55a86a611a58 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55a86a611a28 <col:27> 'int' 1
|   |-CallExpr 0x55a86a611c18 <line:720:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55a86a611c00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55a86a611aa0 <col:3> 'void (int)' Function 0x55a86a5b6bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55a86a611bb0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55a86a611b90 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55a86a611b70 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55a86a611b28 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55a86a611b10 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55a86a611ac0 <col:23> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55a86a611b58 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55a86a611b40 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55a86a611ae0 <col:41> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a86a611c98 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a611c40 <col:3> '_Bool' lvalue Var 0x55a86a610ce0 'b$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55a86a611c80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a86a611c60 <col:20> '_Bool' lvalue Var 0x55a86a610b00 'b$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55a86a611d10 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a611cb8 <col:3> '_Bool' lvalue Var 0x55a86a610d58 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55a86a611cf8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a86a611cd8 <col:20> '_Bool' lvalue Var 0x55a86a610b78 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55a86a611d88 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a611d30 <col:3> '_Bool' lvalue Var 0x55a86a610dd0 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55a86a611d70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a86a611d50 <col:20> '_Bool' lvalue Var 0x55a86a610bf0 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55a86a611e00 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a611da8 <col:3> '_Bool' lvalue Var 0x55a86a610e48 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55a86a611de8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a86a611dc8 <col:20> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55a86a611e98 <line:725:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a611e20 <col:3> '_Bool' lvalue Var 0x55a86a610b78 'b$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x55a86a611e70 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55a86a611e40 <col:27> 'int' 1
|   |-CallExpr 0x55a86a611ef0 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a86a611ed8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a611eb8 <col:3> 'void ()' Function 0x55a86a5b6f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a86a611f48 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a86a611f30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a611f10 <col:3> 'void ()' Function 0x55a86a5b6e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a86a611fc0 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55a86a611f68 <col:3> 'int' lvalue Var 0x55a86a610240 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55a86a611fa8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a86a611f88 <col:25> 'int' lvalue Var 0x55a86a611320 'x' 'int'
|   |-CallExpr 0x55a86a612018 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a86a612000 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a611fe0 <col:3> 'void ()' Function 0x55a86a5b6f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a86a612070 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a86a612058 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a612038 <col:3> 'void ()' Function 0x55a86a5b6e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a86a612358 <line:731:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55a86a612090 <col:3> 'int' lvalue Var 0x55a86a610900 'b' 'int'
|   | `-ConditionalOperator 0x55a86a612328 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55a86a612150 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55a86a612108 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55a86a6120f0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55a86a6120b0 <col:7> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55a86a612138 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55a86a612120 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55a86a6120d0 <col:25> '_Bool' lvalue Var 0x55a86a610b78 'b$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55a86a612310 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a86a612170 <col:42> 'int' lvalue Var 0x55a86a610fc0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55a86a6122f0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55a86a6122c0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55a86a612230 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55a86a6121e8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55a86a6121d0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55a86a612190 <col:55> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55a86a612218 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55a86a612200 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55a86a6121b0 <col:73> '_Bool' lvalue Var 0x55a86a610d58 'b$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55a86a612290 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a86a612250 <col:90> 'int' lvalue Var 0x55a86a6110b8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55a86a6122a8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a86a612270 <col:102> 'int' lvalue Var 0x55a86a610900 'b' 'int'
|   |-BinaryOperator 0x55a86a612560 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a612378 <col:3> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a86a612548 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a86a612518 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a86a612438 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a86a6123f0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a86a6123d8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a86a612398 <col:20> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a86a612420 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a86a612408 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a86a6123b8 <col:38> '_Bool' lvalue Var 0x55a86a610b78 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55a86a6124d0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a86a612488 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a86a612458 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a86a612500 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a86a6124e8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a86a6124b0 <col:66> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a86a612848 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a612580 <col:3> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a86a612830 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a86a612800 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a86a612720 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a86a612640 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a86a6125f8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a86a6125e0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a86a6125a0 <col:20> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a86a612628 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a86a612610 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a86a6125c0 <col:38> '_Bool' lvalue Var 0x55a86a610b78 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55a86a612700 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a86a6126b8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a86a6126a0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a86a612660 <col:56> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a86a6126e8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a86a6126d0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a86a612680 <col:74> '_Bool' lvalue Var 0x55a86a610d58 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55a86a6127b8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a86a612770 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a86a612740 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a86a6127e8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a86a6127d0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a86a612798 <col:102> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55a86a612a50 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a612868 <col:3> '_Bool' lvalue Var 0x55a86a610b78 'b$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55a86a612a38 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a86a612a08 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a86a612928 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a86a6128e0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a86a6128c8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a86a612888 <col:20> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a86a612910 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a86a6128f8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a86a6128a8 <col:38> '_Bool' lvalue Var 0x55a86a610b78 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55a86a6129c0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a86a612978 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a86a612948 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a86a6129f0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a86a6129d8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a86a6129a0 <col:66> '_Bool' lvalue Var 0x55a86a610b78 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55a86a612d58 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a612a70 <col:3> '_Bool' lvalue Var 0x55a86a610d58 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55a86a612d40 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a86a612d10 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a86a612c30 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a86a612b50 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a86a612ae8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a86a612ad0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a86a612a90 <col:20> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a86a612b38 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a86a612b20 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a86a612ab0 <col:38> '_Bool' lvalue Var 0x55a86a610b78 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55a86a612c10 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a86a612bc8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a86a612bb0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a86a612b70 <col:56> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a86a612bf8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a86a612be0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a86a612b90 <col:74> '_Bool' lvalue Var 0x55a86a610d58 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55a86a612cc8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a86a612c80 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a86a612c50 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a86a612cf8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a86a612ce0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a86a612ca8 <col:102> '_Bool' lvalue Var 0x55a86a610d58 'b$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55a86a612db0 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a86a612d98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a612d78 <col:3> 'void ()' Function 0x55a86a5b6f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a86a612e08 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a86a612df0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a612dd0 <col:3> 'void ()' Function 0x55a86a5b6e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a86a612ec0 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55a86a612e28 <col:3> 'int' lvalue Var 0x55a86a610120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55a86a612ea0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55a86a612e88 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a86a612e48 <col:22> 'int' lvalue Var 0x55a86a610120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55a86a612e68 <col:41> 'int' 1
|   |-CallExpr 0x55a86a612f18 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a86a612f00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a612ee0 <col:3> 'void ()' Function 0x55a86a5b6f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55a86a612fc8 <line:740:3, col:36>
|     `-CallExpr 0x55a86a612fa8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55a86a612f90 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55a86a612f38 <col:10> 'void *(void)' Function 0x55a86a5b6958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55a86a613168 prev 0x55a86a60fc48 <line:742:1, line:767:1> line:742:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55a86a6130d0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55a86a6145e0 <line:743:1, line:767:1>
|   |-CallExpr 0x55a86a613248 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a86a613230 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a613210 <col:3> 'void ()' Function 0x55a86a5b6e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a86a6132a8 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a86a613268 <col:3> 'int' lvalue Var 0x55a86a611320 'x' 'int'
|   | `-IntegerLiteral 0x55a86a613288 <col:7> 'int' 1
|   |-CallExpr 0x55a86a613300 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a86a6132e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a6132c8 <col:3> 'void ()' Function 0x55a86a5b6f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a86a613358 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a86a613340 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a613320 <col:3> 'void ()' Function 0x55a86a5b6e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a86a6133b8 <line:748:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a86a613378 <col:3> 'int' lvalue Var 0x55a86a611440 'y' 'int'
|   | `-IntegerLiteral 0x55a86a613398 <col:7> 'int' 1
|   |-CallExpr 0x55a86a613410 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a86a6133f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a6133d8 <col:3> 'void ()' Function 0x55a86a5b6f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a86a613468 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a86a613450 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a613430 <col:3> 'void ()' Function 0x55a86a5b6e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a86a6134e0 <line:751:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55a86a613488 <col:3> 'int' lvalue Var 0x55a86a610360 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55a86a6134c8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a86a6134a8 <col:25> 'int' lvalue Var 0x55a86a611440 'y' 'int'
|   |-CallExpr 0x55a86a613538 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a86a613520 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a613500 <col:3> 'void ()' Function 0x55a86a5b6f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a86a613590 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a86a613578 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a613558 <col:3> 'void ()' Function 0x55a86a5b6e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a86a613608 <line:754:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55a86a6135b0 <col:3> 'int' lvalue Var 0x55a86a610480 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x55a86a6135f0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a86a6135d0 <col:25> 'int' lvalue Var 0x55a86a611560 'z' 'int'
|   |-CallExpr 0x55a86a613660 <line:755:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a86a613648 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a613628 <col:3> 'void ()' Function 0x55a86a5b6f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a86a6136b8 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a86a6136a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a613680 <col:3> 'void ()' Function 0x55a86a5b6e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a86a6139a0 <line:757:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55a86a6136d8 <col:3> 'int' lvalue Var 0x55a86a610900 'b' 'int'
|   | `-ConditionalOperator 0x55a86a613970 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55a86a613798 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55a86a613750 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55a86a613738 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55a86a6136f8 <col:7> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55a86a613780 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55a86a613768 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55a86a613718 <col:25> '_Bool' lvalue Var 0x55a86a610bf0 'b$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55a86a613958 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a86a6137b8 <col:42> 'int' lvalue Var 0x55a86a610fc0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55a86a613938 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55a86a613908 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55a86a613878 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55a86a613830 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55a86a613818 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55a86a6137d8 <col:55> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55a86a613860 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55a86a613848 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55a86a6137f8 <col:73> '_Bool' lvalue Var 0x55a86a610dd0 'b$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55a86a6138d8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a86a613898 <col:90> 'int' lvalue Var 0x55a86a6110b8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55a86a6138f0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a86a6138b8 <col:102> 'int' lvalue Var 0x55a86a610900 'b' 'int'
|   |-BinaryOperator 0x55a86a613bc0 <line:758:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a6139c0 <col:3> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a86a613ba8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a86a613b78 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a86a613a80 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a86a613a38 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a86a613a20 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a86a6139e0 <col:20> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a86a613a68 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a86a613a50 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a86a613a00 <col:38> '_Bool' lvalue Var 0x55a86a610bf0 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a86a613b30 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a86a613ad0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a86a613aa0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a86a613b60 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a86a613b48 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a86a613af8 <col:66> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a86a613ea8 <line:759:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a613be0 <col:3> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a86a613e90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a86a613e60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a86a613d80 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a86a613ca0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a86a613c58 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a86a613c40 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a86a613c00 <col:20> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a86a613c88 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a86a613c70 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a86a613c20 <col:38> '_Bool' lvalue Var 0x55a86a610bf0 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55a86a613d60 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a86a613d18 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a86a613d00 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a86a613cc0 <col:56> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a86a613d48 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a86a613d30 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a86a613ce0 <col:74> '_Bool' lvalue Var 0x55a86a610dd0 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a86a613e18 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a86a613dd0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a86a613da0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a86a613e48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a86a613e30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a86a613df8 <col:102> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55a86a6140b0 <line:760:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a613ec8 <col:3> '_Bool' lvalue Var 0x55a86a610bf0 'b$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55a86a614098 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a86a614068 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a86a613f88 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a86a613f40 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a86a613f28 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a86a613ee8 <col:20> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a86a613f70 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a86a613f58 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a86a613f08 <col:38> '_Bool' lvalue Var 0x55a86a610bf0 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a86a614020 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a86a613fd8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a86a613fa8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a86a614050 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a86a614038 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a86a614000 <col:66> '_Bool' lvalue Var 0x55a86a610bf0 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55a86a614398 <line:761:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a6140d0 <col:3> '_Bool' lvalue Var 0x55a86a610dd0 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55a86a614380 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a86a614350 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a86a614270 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a86a614190 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a86a614148 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a86a614130 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a86a6140f0 <col:20> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a86a614178 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a86a614160 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a86a614110 <col:38> '_Bool' lvalue Var 0x55a86a610bf0 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55a86a614250 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a86a614208 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a86a6141f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a86a6141b0 <col:56> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a86a614238 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a86a614220 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a86a6141d0 <col:74> '_Bool' lvalue Var 0x55a86a610dd0 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a86a614308 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a86a6142c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a86a614290 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a86a614338 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a86a614320 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a86a6142e8 <col:102> '_Bool' lvalue Var 0x55a86a610dd0 'b$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55a86a6143f0 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a86a6143d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a6143b8 <col:3> 'void ()' Function 0x55a86a5b6f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a86a614448 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a86a614430 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a614410 <col:3> 'void ()' Function 0x55a86a5b6e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a86a614500 <line:764:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55a86a614468 <col:3> 'int' lvalue Var 0x55a86a610120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55a86a6144e0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55a86a6144c8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a86a614488 <col:22> 'int' lvalue Var 0x55a86a610120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55a86a6144a8 <col:41> 'int' 1
|   |-CallExpr 0x55a86a614558 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a86a614540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a614520 <col:3> 'void ()' Function 0x55a86a5b6f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55a86a6145d0 <line:766:3, col:36>
|     `-CallExpr 0x55a86a6145b0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55a86a614598 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55a86a614578 <col:10> 'void *(void)' Function 0x55a86a5b6958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55a86a614758 prev 0x55a86a60fda0 <line:768:1, line:806:1> line:768:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55a86a6146c0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55a86a618550 <line:769:1, line:806:1>
|   |-CallExpr 0x55a86a614838 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a86a614820 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a614800 <col:3> 'void ()' Function 0x55a86a5b6e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a86a614898 <line:771:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a86a614858 <col:3> 'int' lvalue Var 0x55a86a611560 'z' 'int'
|   | `-IntegerLiteral 0x55a86a614878 <col:7> 'int' 1
|   |-CallExpr 0x55a86a6148f0 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a86a6148d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a6148b8 <col:3> 'void ()' Function 0x55a86a5b6f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a86a614948 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a86a614930 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a614910 <col:3> 'void ()' Function 0x55a86a5b6e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a86a6149a8 <line:774:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a86a614968 <col:3> 'int' lvalue Var 0x55a86a6107e0 'a' 'int'
|   | `-IntegerLiteral 0x55a86a614988 <col:7> 'int' 1
|   |-CallExpr 0x55a86a614a00 <line:775:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a86a6149e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a6149c8 <col:3> 'void ()' Function 0x55a86a5b6f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a86a614a58 <line:776:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a86a614a40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a614a20 <col:3> 'void ()' Function 0x55a86a5b6e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a86a614ad0 <line:777:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55a86a614a78 <col:3> 'int' lvalue Var 0x55a86a6105a0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55a86a614ab8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a86a614a98 <col:25> 'int' lvalue Var 0x55a86a6107e0 'a' 'int'
|   |-CallExpr 0x55a86a614b40 <line:778:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a86a614b10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a614af0 <col:3> 'void ()' Function 0x55a86a5b6f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a86a614b98 <line:779:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a86a614b80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a614b60 <col:3> 'void ()' Function 0x55a86a5b6e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a86a614c48 <line:780:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a614bb8 <col:3> '_Bool' lvalue Var 0x55a86a6115f8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55a86a614c30 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55a86a614c10 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55a86a614bf8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55a86a614bd8 <col:19> 'void *(void)' Function 0x55a86a5b6958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55a86a614cf8 <line:781:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a614c68 <col:3> '_Bool' lvalue Var 0x55a86a611670 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55a86a614ce0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55a86a614cc0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55a86a614ca8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55a86a614c88 <col:19> 'void *(void)' Function 0x55a86a5b6958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55a86a614d70 <line:782:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a614d18 <col:3> '_Bool' lvalue Var 0x55a86a610998 'b$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55a86a614d58 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a86a614d38 <col:21> '_Bool' lvalue Var 0x55a86a611670 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55a86a614de8 <line:783:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55a86a614d90 <col:3> 'int' lvalue Var 0x55a86a610a18 'b$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55a86a614dd0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a86a614db0 <col:15> 'int' lvalue Var 0x55a86a610900 'b' 'int'
|   |-BinaryOperator 0x55a86a615220 <line:784:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55a86a614e08 <col:3> 'int' lvalue Var 0x55a86a610900 'b' 'int'
|   | `-ConditionalOperator 0x55a86a6151f0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55a86a615018 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55a86a614f38 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55a86a614e60 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55a86a614e48 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55a86a614e28 <col:8> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55a86a614f18 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55a86a614eb0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55a86a614e98 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55a86a614e78 <col:27> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x55a86a614f00 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55a86a614ee8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55a86a614ec8 <col:46> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55a86a614ff8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55a86a614f90 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55a86a614f78 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55a86a614f58 <col:65> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x55a86a614fe0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55a86a614fc8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55a86a614fa8 <col:84> '_Bool' lvalue Var 0x55a86a610e48 'b$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55a86a6151d8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a86a615038 <col:101> 'int' lvalue Var 0x55a86a610900 'b' 'int'
|   |   `-ParenExpr 0x55a86a6151b8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55a86a615188 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55a86a6150f8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55a86a6150b0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55a86a615098 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55a86a615058 <col:106> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55a86a6150e0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55a86a6150c8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55a86a615078 <col:124> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55a86a615158 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a86a615118 <col:141> 'int' lvalue Var 0x55a86a610fc0 'b$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55a86a615170 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a86a615138 <col:153> 'int' lvalue Var 0x55a86a6110b8 'b$w_buff1' 'int'
|   |-BinaryOperator 0x55a86a615730 <line:785:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55a86a615240 <col:3> 'int' lvalue Var 0x55a86a610fc0 'b$w_buff0' 'int'
|   | `-ConditionalOperator 0x55a86a615700 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55a86a6156d0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55a86a6156b8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55a86a615260 <col:15> '_Bool' lvalue Var 0x55a86a611670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55a86a6156e8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a86a615280 <col:31> 'int' lvalue Var 0x55a86a610fc0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55a86a615698 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55a86a615668 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55a86a615490 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55a86a6153b0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55a86a6152d8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55a86a6152c0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55a86a6152a0 <col:45> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55a86a615390 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55a86a615328 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55a86a615310 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55a86a6152f0 <col:64> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55a86a615378 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55a86a615360 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55a86a615340 <col:83> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55a86a615470 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55a86a615408 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55a86a6153f0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55a86a6153d0 <col:102> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55a86a615458 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55a86a615440 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55a86a615420 <col:121> '_Bool' lvalue Var 0x55a86a610e48 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55a86a615650 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a86a6154b0 <col:138> 'int' lvalue Var 0x55a86a610fc0 'b$w_buff0' 'int'
|   |       `-ParenExpr 0x55a86a615630 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55a86a615600 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55a86a615570 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55a86a615528 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55a86a615510 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55a86a6154d0 <col:151> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55a86a615558 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55a86a615540 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55a86a6154f0 <col:169> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55a86a6155d0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55a86a615590 <col:186> 'int' lvalue Var 0x55a86a610fc0 'b$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55a86a6155e8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55a86a6155b0 <col:198> 'int' lvalue Var 0x55a86a610fc0 'b$w_buff0' 'int'
|   |-BinaryOperator 0x55a86a615c50 <line:786:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55a86a615750 <col:3> 'int' lvalue Var 0x55a86a6110b8 'b$w_buff1' 'int'
|   | `-ConditionalOperator 0x55a86a615c20 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55a86a615bf0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55a86a615bd8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55a86a615770 <col:15> '_Bool' lvalue Var 0x55a86a611670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55a86a615c08 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a86a615790 <col:31> 'int' lvalue Var 0x55a86a6110b8 'b$w_buff1' 'int'
|   |   `-ParenExpr 0x55a86a615bb8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55a86a615b88 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55a86a6159a0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55a86a6158c0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55a86a6157e8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55a86a6157d0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55a86a6157b0 <col:45> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55a86a6158a0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55a86a615838 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55a86a615820 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55a86a615800 <col:64> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55a86a615888 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55a86a615870 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55a86a615850 <col:83> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55a86a615980 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55a86a615918 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55a86a615900 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55a86a6158e0 <col:102> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55a86a615968 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55a86a615950 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55a86a615930 <col:121> '_Bool' lvalue Var 0x55a86a610e48 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55a86a615b70 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a86a6159c0 <col:138> 'int' lvalue Var 0x55a86a6110b8 'b$w_buff1' 'int'
|   |       `-ParenExpr 0x55a86a615b50 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55a86a615b10 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55a86a615a80 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55a86a615a38 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55a86a615a20 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55a86a6159e0 <col:151> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55a86a615a68 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55a86a615a50 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55a86a615a00 <col:169> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55a86a615ae0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55a86a615aa0 <col:186> 'int' lvalue Var 0x55a86a6110b8 'b$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55a86a615af8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55a86a615ac0 <col:198> 'int' lvalue Var 0x55a86a6110b8 'b$w_buff1' 'int'
|   |-BinaryOperator 0x55a86a6161f8 <line:787:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a615c70 <col:3> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a86a6161e0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a86a6161b0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55a86a616168 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a86a616150 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a86a615c90 <col:20> '_Bool' lvalue Var 0x55a86a611670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a86a616198 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a86a616180 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a86a615cb0 <col:36> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55a86a616130 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55a86a616100 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55a86a615ec0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55a86a615de0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55a86a615d08 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55a86a615cf0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55a86a615cd0 <col:55> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55a86a615dc0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55a86a615d58 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55a86a615d40 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55a86a615d20 <col:74> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55a86a615da8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55a86a615d90 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55a86a615d70 <col:93> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55a86a615ea0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55a86a615e38 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55a86a615e20 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55a86a615e00 <col:112> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55a86a615e88 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55a86a615e70 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55a86a615e50 <col:131> '_Bool' lvalue Var 0x55a86a610e48 'b$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55a86a6160e8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a86a6160d0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a86a615ee0 <col:148> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55a86a6160b0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55a86a616080 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55a86a615fa0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a86a615f58 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a86a615f40 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a86a615f00 <col:166> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a86a615f88 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a86a615f70 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a86a615f20 <col:184> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55a86a616038 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a86a615ff0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a86a615fc0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55a86a616068 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55a86a616050 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55a86a616018 <col:212> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a86a6167c0 <line:788:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a616218 <col:3> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a86a6167a8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a86a616778 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55a86a616730 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a86a616718 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a86a616238 <col:20> '_Bool' lvalue Var 0x55a86a611670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a86a616760 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a86a616748 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a86a616258 <col:36> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55a86a6166f8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55a86a6166c8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55a86a616468 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55a86a616388 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55a86a6162b0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55a86a616298 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55a86a616278 <col:55> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55a86a616368 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55a86a616300 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55a86a6162e8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55a86a6162c8 <col:74> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55a86a616350 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55a86a616338 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55a86a616318 <col:93> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55a86a616448 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55a86a6163e0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55a86a6163c8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55a86a6163a8 <col:112> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55a86a616430 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55a86a616418 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55a86a6163f8 <col:131> '_Bool' lvalue Var 0x55a86a610e48 'b$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55a86a6166b0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a86a616698 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a86a616488 <col:148> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55a86a616678 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55a86a616648 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55a86a616548 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a86a616500 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a86a6164e8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a86a6164a8 <col:166> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a86a616530 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a86a616518 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a86a6164c8 <col:184> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55a86a616618 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a86a616598 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a86a616568 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55a86a616630 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55a86a6165f0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55a86a6165c0 <col:219> 'int' 0
|   |-BinaryOperator 0x55a86a616d78 <line:789:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a6167e0 <col:3> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55a86a616d60 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a86a616d30 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55a86a616ce8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a86a616cd0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a86a616800 <col:20> '_Bool' lvalue Var 0x55a86a611670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a86a616d18 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a86a616d00 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a86a616820 <col:36> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x55a86a616cb0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55a86a616c80 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55a86a616a30 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55a86a616950 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55a86a616878 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55a86a616860 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55a86a616840 <col:55> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55a86a616930 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55a86a6168c8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55a86a6168b0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55a86a616890 <col:74> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55a86a616918 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55a86a616900 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55a86a6168e0 <col:93> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55a86a616a10 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55a86a6169a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55a86a616990 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55a86a616970 <col:112> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55a86a6169f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55a86a6169e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55a86a6169c0 <col:131> '_Bool' lvalue Var 0x55a86a610e48 'b$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55a86a616c68 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a86a616c50 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a86a616a50 <col:148> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x55a86a616c30 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55a86a616c00 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55a86a616b10 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a86a616ac8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a86a616ab0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a86a616a70 <col:166> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a86a616af8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a86a616ae0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a86a616a90 <col:184> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55a86a616bb8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a86a616b70 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a86a616b30 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55a86a616be8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55a86a616bd0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55a86a616b98 <col:212> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55a86a617340 <line:790:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a616d98 <col:3> '_Bool' lvalue Var 0x55a86a610e48 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55a86a617328 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a86a6172f8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55a86a6172b0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a86a617298 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a86a616db8 <col:20> '_Bool' lvalue Var 0x55a86a611670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a86a6172e0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a86a6172c8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a86a616dd8 <col:36> '_Bool' lvalue Var 0x55a86a610e48 'b$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x55a86a617278 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55a86a617248 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55a86a616fe8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55a86a616f08 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55a86a616e30 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55a86a616e18 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55a86a616df8 <col:55> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55a86a616ee8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55a86a616e80 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55a86a616e68 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55a86a616e48 <col:74> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55a86a616ed0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55a86a616eb8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55a86a616e98 <col:93> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55a86a616fc8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55a86a616f60 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55a86a616f48 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55a86a616f28 <col:112> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55a86a616fb0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55a86a616f98 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55a86a616f78 <col:131> '_Bool' lvalue Var 0x55a86a610e48 'b$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55a86a617230 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a86a617218 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a86a617008 <col:148> '_Bool' lvalue Var 0x55a86a610e48 'b$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x55a86a6171f8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55a86a6171c8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55a86a6170c8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a86a617080 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a86a617068 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a86a617028 <col:166> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a86a6170b0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a86a617098 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a86a617048 <col:184> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55a86a617198 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a86a617118 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a86a6170e8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55a86a6171b0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55a86a617170 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55a86a617140 <col:219> 'int' 0
|   |-BinaryOperator 0x55a86a6173b8 <line:791:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55a86a617360 <col:3> 'int' lvalue Var 0x55a86a6106c0 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x55a86a6173a0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a86a617380 <col:25> 'int' lvalue Var 0x55a86a610900 'b' 'int'
|   |-BinaryOperator 0x55a86a6174e8 <line:792:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55a86a6173d8 <col:3> 'int' lvalue Var 0x55a86a610900 'b' 'int'
|   | `-ConditionalOperator 0x55a86a6174b8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55a86a617470 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55a86a617458 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55a86a6173f8 <col:7> '_Bool' lvalue Var 0x55a86a610998 'b$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55a86a617488 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a86a617418 <col:25> 'int' lvalue Var 0x55a86a610a18 'b$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55a86a6174a0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55a86a617438 <col:37> 'int' lvalue Var 0x55a86a610900 'b' 'int'
|   |-BinaryOperator 0x55a86a617580 <line:793:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a617508 <col:3> '_Bool' lvalue Var 0x55a86a610998 'b$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55a86a617558 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55a86a617528 <col:28> 'int' 0
|   |-CallExpr 0x55a86a6175d8 <line:794:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a86a6175c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a6175a0 <col:3> 'void ()' Function 0x55a86a5b6f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a86a617630 <line:795:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a86a617618 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a6175f8 <col:3> 'void ()' Function 0x55a86a5b6e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a86a617918 <line:796:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55a86a617650 <col:3> 'int' lvalue Var 0x55a86a610900 'b' 'int'
|   | `-ConditionalOperator 0x55a86a6178e8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55a86a617710 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55a86a6176c8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55a86a6176b0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55a86a617670 <col:7> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55a86a6176f8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55a86a6176e0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55a86a617690 <col:25> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55a86a6178d0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a86a617730 <col:42> 'int' lvalue Var 0x55a86a610fc0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55a86a6178b0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55a86a617880 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55a86a6177f0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55a86a6177a8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55a86a617790 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55a86a617750 <col:55> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55a86a6177d8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55a86a6177c0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55a86a617770 <col:73> '_Bool' lvalue Var 0x55a86a610e48 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55a86a617850 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a86a617810 <col:90> 'int' lvalue Var 0x55a86a6110b8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55a86a617868 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a86a617830 <col:102> 'int' lvalue Var 0x55a86a610900 'b' 'int'
|   |-BinaryOperator 0x55a86a617b20 <line:797:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a617938 <col:3> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a86a617b08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a86a617ad8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a86a6179f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a86a6179b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a86a617998 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a86a617958 <col:20> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a86a6179e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a86a6179c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a86a617978 <col:38> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55a86a617a90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a86a617a48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a86a617a18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a86a617ac0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a86a617aa8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a86a617a70 <col:66> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a86a617e18 <line:798:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a617b40 <col:3> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a86a617e00 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a86a617dd0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a86a617cf0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a86a617c10 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a86a617bc8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a86a617bb0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a86a617b70 <col:20> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a86a617bf8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a86a617be0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a86a617b90 <col:38> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55a86a617cd0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a86a617c88 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a86a617c70 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a86a617c30 <col:56> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a86a617cb8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a86a617ca0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a86a617c50 <col:74> '_Bool' lvalue Var 0x55a86a610e48 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55a86a617d88 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a86a617d40 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a86a617d10 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a86a617db8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a86a617da0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a86a617d68 <col:102> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55a86a618020 <line:799:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a617e38 <col:3> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55a86a618008 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a86a617fd8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a86a617ef8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a86a617eb0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a86a617e98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a86a617e58 <col:20> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a86a617ee0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a86a617ec8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a86a617e78 <col:38> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55a86a617f90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a86a617f48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a86a617f18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a86a617fc0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a86a617fa8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a86a617f70 <col:66> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55a86a618308 <line:800:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a86a618040 <col:3> '_Bool' lvalue Var 0x55a86a610e48 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55a86a6182f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a86a6182c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a86a6181e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a86a618100 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a86a6180b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a86a6180a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a86a618060 <col:20> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a86a6180e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a86a6180d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a86a618080 <col:38> '_Bool' lvalue Var 0x55a86a610c68 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55a86a6181c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a86a618178 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a86a618160 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a86a618120 <col:56> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a86a6181a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a86a618190 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a86a618140 <col:74> '_Bool' lvalue Var 0x55a86a610e48 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55a86a618278 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a86a618230 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a86a618200 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a86a6182a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a86a618290 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a86a618258 <col:102> '_Bool' lvalue Var 0x55a86a610e48 'b$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55a86a618360 <line:801:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a86a618348 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a618328 <col:3> 'void ()' Function 0x55a86a5b6f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a86a6183b8 <line:802:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a86a6183a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a618380 <col:3> 'void ()' Function 0x55a86a5b6e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a86a618470 <line:803:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55a86a6183d8 <col:3> 'int' lvalue Var 0x55a86a610120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55a86a618450 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55a86a618438 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a86a6183f8 <col:22> 'int' lvalue Var 0x55a86a610120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55a86a618418 <col:41> 'int' 1
|   |-CallExpr 0x55a86a6184c8 <line:804:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a86a6184b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a86a618490 <col:3> 'void ()' Function 0x55a86a5b6f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55a86a618540 <line:805:3, col:36>
|     `-CallExpr 0x55a86a618520 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55a86a618508 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55a86a6184e8 <col:10> 'void *(void)' Function 0x55a86a5b6958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55a86a6186a0 prev 0x55a86a60fe68 <line:807:1, line:809:1> line:807:6 fence 'void ()'
| `-CompoundStmt 0x55a86a618740 <line:808:1, line:809:1>
|-FunctionDecl 0x55a86a618770 prev 0x55a86a60ff28 <line:810:1, line:812:1> line:810:6 isync 'void ()'
| `-CompoundStmt 0x55a86a618810 <line:811:1, line:812:1>
|-FunctionDecl 0x55a86a618840 prev 0x55a86a60ffe8 <line:813:1, line:815:1> line:813:6 lwfence 'void ()'
| `-CompoundStmt 0x55a86a6188e0 <line:814:1, line:815:1>
`-FunctionDecl 0x55a86a618948 <line:816:1, line:840:1> line:816:5 main 'int ()'
  `-CompoundStmt 0x55a86a61a6c8 <line:817:1, line:840:1>
    |-DeclStmt 0x55a86a618a60 <line:818:3, col:17>
    | `-VarDecl 0x55a86a6189f8 <col:3, col:13> col:13 used t863 'pthread_t':'unsigned long'
    |-CallExpr 0x55a86a618c78 <line:819:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55a86a618c60 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a86a618a78 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55a86a5f7488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55a86a618ab8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55a86a618a98 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55a86a6189f8 't863' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55a86a618cb8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55a86a618b30 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55a86a618b08 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55a86a618ad0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55a86a618cd0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a86a618b50 <col:38> 'void *(void *)' Function 0x55a86a611788 'P0' 'void *(void *)'
    | `-ParenExpr 0x55a86a618be0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55a86a618bb8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55a86a618b80 <col:51> 'int' 0
    |-DeclStmt 0x55a86a618d60 <line:820:3, col:17>
    | `-VarDecl 0x55a86a618cf8 <col:3, col:13> col:13 used t864 'pthread_t':'unsigned long'
    |-CallExpr 0x55a86a618f08 <line:821:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55a86a618ef0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a86a618d78 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55a86a5f7488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55a86a618db8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55a86a618d98 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55a86a618cf8 't864' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55a86a618f48 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55a86a618e30 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55a86a618e08 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55a86a618dd0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55a86a618f60 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a86a618e50 <col:38> 'void *(void *)' Function 0x55a86a613168 'P1' 'void *(void *)'
    | `-ParenExpr 0x55a86a618ed0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55a86a618ea8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55a86a618e70 <col:51> 'int' 0
    |-DeclStmt 0x55a86a618ff0 <line:822:3, col:17>
    | `-VarDecl 0x55a86a618f88 <col:3, col:13> col:13 used t865 'pthread_t':'unsigned long'
    |-CallExpr 0x55a86a619198 <line:823:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55a86a619180 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a86a619008 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55a86a5f7488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55a86a619048 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55a86a619028 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55a86a618f88 't865' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55a86a6191d8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55a86a6190c0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55a86a619098 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55a86a619060 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55a86a6191f0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a86a6190e0 <col:38> 'void *(void *)' Function 0x55a86a614758 'P2' 'void *(void *)'
    | `-ParenExpr 0x55a86a619160 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55a86a619138 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55a86a619100 <col:51> 'int' 0
    |-CallExpr 0x55a86a619240 <line:824:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55a86a619228 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a86a619208 <col:3> 'void ()' Function 0x55a86a5b6e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55a86a619310 <line:825:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55a86a619260 <col:3> '_Bool' lvalue Var 0x55a86a6111a8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55a86a6192f8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55a86a6192d8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55a86a6192c0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55a86a619280 <col:21> 'int' lvalue Var 0x55a86a610120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55a86a6192a0 <col:41> 'int' 3
    |-CallExpr 0x55a86a619368 <line:826:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55a86a619350 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a86a619330 <col:3> 'void ()' Function 0x55a86a5b6f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55a86a6193e0 <line:827:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55a86a6193c8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a86a619388 <col:3> 'void (int)' Function 0x55a86a5b6790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55a86a619420 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55a86a619408 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55a86a6193a8 <col:21> '_Bool' lvalue Var 0x55a86a6111a8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55a86a619470 <line:828:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55a86a619458 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a86a619438 <col:3> 'void ()' Function 0x55a86a5b6e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55a86a619758 <line:829:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55a86a619490 <col:3> 'int' lvalue Var 0x55a86a610900 'b' 'int'
    | `-ConditionalOperator 0x55a86a619728 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55a86a619550 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55a86a619508 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55a86a6194f0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55a86a6194b0 <col:7> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55a86a619538 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55a86a619520 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55a86a6194d0 <col:25> '_Bool' lvalue Var 0x55a86a610b00 'b$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55a86a619710 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55a86a619570 <col:42> 'int' lvalue Var 0x55a86a610fc0 'b$w_buff0' 'int'
    |   `-ParenExpr 0x55a86a6196f0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55a86a6196c0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55a86a619630 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55a86a6195e8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55a86a6195d0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55a86a619590 <col:55> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55a86a619618 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55a86a619600 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55a86a6195b0 <col:73> '_Bool' lvalue Var 0x55a86a610ce0 'b$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55a86a619690 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55a86a619650 <col:90> 'int' lvalue Var 0x55a86a6110b8 'b$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55a86a6196a8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55a86a619670 <col:102> 'int' lvalue Var 0x55a86a610900 'b' 'int'
    |-BinaryOperator 0x55a86a619960 <line:830:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55a86a619778 <col:3> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55a86a619948 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a86a619918 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55a86a619838 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55a86a6197f0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55a86a6197d8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55a86a619798 <col:20> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55a86a619820 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55a86a619808 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55a86a6197b8 <col:38> '_Bool' lvalue Var 0x55a86a610b00 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55a86a6198d0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55a86a619888 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55a86a619858 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55a86a619900 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55a86a6198e8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55a86a6198b0 <col:66> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55a86a619c68 <line:831:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55a86a619980 <col:3> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55a86a619c50 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a86a619c20 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55a86a619b20 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55a86a619a40 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55a86a6199f8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55a86a6199e0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55a86a6199a0 <col:20> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55a86a619a28 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55a86a619a10 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55a86a6199c0 <col:38> '_Bool' lvalue Var 0x55a86a610b00 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55a86a619b00 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55a86a619ab8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55a86a619aa0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55a86a619a60 <col:56> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55a86a619ae8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55a86a619ad0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55a86a619a80 <col:74> '_Bool' lvalue Var 0x55a86a610ce0 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55a86a619bd8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55a86a619b90 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55a86a619b40 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55a86a619c08 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55a86a619bf0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55a86a619bb8 <col:102> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55a86a619e70 <line:832:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55a86a619c88 <col:3> '_Bool' lvalue Var 0x55a86a610b00 'b$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55a86a619e58 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a86a619e28 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55a86a619d48 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55a86a619d00 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55a86a619ce8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55a86a619ca8 <col:20> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55a86a619d30 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55a86a619d18 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55a86a619cc8 <col:38> '_Bool' lvalue Var 0x55a86a610b00 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55a86a619de0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55a86a619d98 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55a86a619d68 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55a86a619e10 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55a86a619df8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55a86a619dc0 <col:66> '_Bool' lvalue Var 0x55a86a610b00 'b$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55a86a61a158 <line:833:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55a86a619e90 <col:3> '_Bool' lvalue Var 0x55a86a610ce0 'b$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55a86a61a140 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a86a61a110 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55a86a61a030 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55a86a619f50 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55a86a619f08 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55a86a619ef0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55a86a619eb0 <col:20> '_Bool' lvalue Var 0x55a86a611038 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55a86a619f38 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55a86a619f20 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55a86a619ed0 <col:38> '_Bool' lvalue Var 0x55a86a610b00 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55a86a61a010 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55a86a619fc8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55a86a619fb0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55a86a619f70 <col:56> '_Bool' lvalue Var 0x55a86a611130 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55a86a619ff8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55a86a619fe0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55a86a619f90 <col:74> '_Bool' lvalue Var 0x55a86a610ce0 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55a86a61a0c8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55a86a61a080 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55a86a61a050 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55a86a61a0f8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55a86a61a0e0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55a86a61a0a8 <col:102> '_Bool' lvalue Var 0x55a86a610ce0 'b$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55a86a61a1b0 <line:834:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55a86a61a198 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a86a61a178 <col:3> 'void ()' Function 0x55a86a5b6f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55a86a61a208 <line:835:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55a86a61a1f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a86a61a1d0 <col:3> 'void ()' Function 0x55a86a5b6e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55a86a61a570 <line:836:3, col:159> '_Bool' '='
    | |-DeclRefExpr 0x55a86a61a228 <col:3> '_Bool' lvalue Var 0x55a86a611220 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55a86a61a558 <col:21, col:159> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55a86a61a540 <col:21, col:159> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55a86a61a520 <col:22, col:159> 'int'
    |       `-BinaryOperator 0x55a86a61a500 <col:23, col:158> 'int' '&&'
    |         |-BinaryOperator 0x55a86a61a468 <col:23, col:130> 'int' '&&'
    |         | |-BinaryOperator 0x55a86a61a3d0 <col:23, col:102> 'int' '&&'
    |         | | |-BinaryOperator 0x55a86a61a338 <col:23, col:74> 'int' '&&'
    |         | | | |-BinaryOperator 0x55a86a61a2a0 <col:23, col:46> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x55a86a61a288 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x55a86a61a248 <col:23> 'int' lvalue Var 0x55a86a610240 '__unbuffered_p0_EAX' 'int'
    |         | | | | `-IntegerLiteral 0x55a86a61a268 <col:46> 'int' 0
    |         | | | `-BinaryOperator 0x55a86a61a318 <col:51, col:74> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x55a86a61a300 <col:51> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x55a86a61a2c0 <col:51> 'int' lvalue Var 0x55a86a610360 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x55a86a61a2e0 <col:74> 'int' 1
    |         | | `-BinaryOperator 0x55a86a61a3b0 <col:79, col:102> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55a86a61a398 <col:79> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55a86a61a358 <col:79> 'int' lvalue Var 0x55a86a610480 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x55a86a61a378 <col:102> 'int' 0
    |         | `-BinaryOperator 0x55a86a61a448 <col:107, col:130> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55a86a61a430 <col:107> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55a86a61a3f0 <col:107> 'int' lvalue Var 0x55a86a6105a0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x55a86a61a410 <col:130> 'int' 1
    |         `-BinaryOperator 0x55a86a61a4e0 <col:135, col:158> 'int' '=='
    |           |-ImplicitCastExpr 0x55a86a61a4c8 <col:135> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55a86a61a488 <col:135> 'int' lvalue Var 0x55a86a6106c0 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x55a86a61a4a8 <col:158> 'int' 0
    |-CallExpr 0x55a86a61a5c8 <line:837:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55a86a61a5b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a86a61a590 <col:3> 'void ()' Function 0x55a86a5b6f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55a86a61a640 <line:838:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55a86a61a628 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a86a61a5e8 <col:3> 'void (int)' Function 0x55a86a5b6bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55a86a61a680 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55a86a61a668 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55a86a61a608 <col:21> '_Bool' lvalue Var 0x55a86a611220 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55a86a61a6b8 <line:839:3, col:10>
      `-IntegerLiteral 0x55a86a61a698 <col:10> 'int' 0
