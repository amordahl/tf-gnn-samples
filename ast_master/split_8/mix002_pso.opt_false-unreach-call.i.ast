TranslationUnitDecl 0x5653609a0e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5653609a16d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5653609a13b0 '__int128'
|-TypedefDecl 0x5653609a1748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5653609a13d0 'unsigned __int128'
|-TypedefDecl 0x5653609a1a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5653609a1820 'struct __NSConstantString_tag'
|   `-Record 0x5653609a17a0 '__NSConstantString_tag'
|-TypedefDecl 0x5653609a1af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5653609a1ab0 'char *'
|   `-BuiltinType 0x5653609a0eb0 'char'
|-TypedefDecl 0x5653609e0650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5653609a1d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5653609a1bd0 'struct __va_list_tag'
|     `-Record 0x5653609a1b50 '__va_list_tag'
|-FunctionDecl 0x5653609e0790 <./split_8/mix002_pso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5653609e06c0 <col:31> col:34 'int'
|-FunctionDecl 0x5653609e0958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5653609e0a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5653609e0bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5653609e0b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5653609e0df8 <col:40, col:99>
|   |-IfStmt 0x5653609e0dc8 <col:42, col:88>
|   | |-UnaryOperator 0x5653609e0ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5653609e0c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5653609e0c70 <col:47> 'int' lvalue ParmVar 0x5653609e0b38 'expression' 'int'
|   | `-CompoundStmt 0x5653609e0db0 <col:59, col:88>
|   |   `-LabelStmt 0x5653609e0d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5653609e0d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5653609e0d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5653609e0cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x5653609e0a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5653609e0de0 <col:89>
|   `-ReturnStmt 0x5653609e0de8 <col:91>
|-FunctionDecl 0x5653609e0e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5653609e0f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5653609e1280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5653609e0fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5653609e1038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5653609e10b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5653609e1138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5653609e1340 <line:10:22>
|-FunctionDecl 0x565360a07390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5653609e13b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5653609e1430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5653609e14b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5653609e1530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x565360a07450 <line:13:22>
|-FunctionDecl 0x565360a07700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x565360a074c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x565360a07540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x565360a075c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x565360a077b8 <line:15:22>
|-TypedefDecl 0x565360a07828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5653609a0f70 'unsigned char'
|-TypedefDecl 0x565360a07898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5653609a0f90 'unsigned short'
|-TypedefDecl 0x565360a07908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5653609a0fb0 'unsigned int'
|-TypedefDecl 0x565360a07978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5653609a0fd0 'unsigned long'
|-TypedefDecl 0x565360a079e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5653609a0ed0 'signed char'
|-TypedefDecl 0x565360a07a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5653609a0f70 'unsigned char'
|-TypedefDecl 0x565360a07ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5653609a0ef0 'short'
|-TypedefDecl 0x565360a07b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5653609a0f90 'unsigned short'
|-TypedefDecl 0x565360a07ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5653609a0f10 'int'
|-TypedefDecl 0x565360a07c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5653609a0fb0 'unsigned int'
|-TypedefDecl 0x565360a07c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5653609a0f30 'long'
|-TypedefDecl 0x565360a07cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5653609a0fd0 'unsigned long'
|-TypedefDecl 0x565360a07d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5653609a0f30 'long'
|-TypedefDecl 0x565360a07dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5653609a0fd0 'unsigned long'
|-TypedefDecl 0x565360a07e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5653609a0fd0 'unsigned long'
|-TypedefDecl 0x565360a07eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5653609a0fb0 'unsigned int'
|-TypedefDecl 0x565360a07f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5653609a0fb0 'unsigned int'
|-TypedefDecl 0x565360a07f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5653609a0fd0 'unsigned long'
|-TypedefDecl 0x565360a08008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5653609a0fd0 'unsigned long'
|-TypedefDecl 0x565360a08078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5653609a0fb0 'unsigned int'
|-TypedefDecl 0x565360a080e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5653609a0fd0 'unsigned long'
|-TypedefDecl 0x565360a08158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5653609a0f30 'long'
|-TypedefDecl 0x565360a081c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5653609a0f30 'long'
|-TypedefDecl 0x565360a08238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5653609a0f10 'int'
|-RecordDecl 0x565360a08290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x565360a08408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x565360a084c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x565360a08460 'struct __fsid_t' sugar
|   `-RecordType 0x565360a08310 '__fsid_t'
|     `-Record 0x565360a08290 ''
|-TypedefDecl 0x565360a08548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5653609a0f30 'long'
|-TypedefDecl 0x565360a085b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5653609a0fd0 'unsigned long'
|-TypedefDecl 0x565360a08628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5653609a0fd0 'unsigned long'
|-TypedefDecl 0x565360a08698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5653609a0fb0 'unsigned int'
|-TypedefDecl 0x565360a08708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5653609a0f30 'long'
|-TypedefDecl 0x565360a08778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5653609a0fb0 'unsigned int'
|-TypedefDecl 0x565360a087e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5653609a0f30 'long'
|-TypedefDecl 0x565360a08858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5653609a0f10 'int'
|-TypedefDecl 0x565360a088c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5653609a0f10 'int'
|-TypedefDecl 0x565360a08938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5653609a0f10 'int'
|-TypedefDecl 0x565360a089a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5653609a1630 'void *'
|   `-BuiltinType 0x5653609a0e70 'void'
|-TypedefDecl 0x565360a08a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5653609a0f30 'long'
|-TypedefDecl 0x565360a08a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5653609a0f30 'long'
|-TypedefDecl 0x565360a08af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5653609a0f30 'long'
|-TypedefDecl 0x565360a08b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5653609a0fd0 'unsigned long'
|-TypedefDecl 0x565360a08bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5653609a0fd0 'unsigned long'
|-TypedefDecl 0x565360a08c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5653609a0fd0 'unsigned long'
|-TypedefDecl 0x565360a08cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5653609a0fd0 'unsigned long'
|-TypedefDecl 0x565360a08d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5653609a0f30 'long'
|-TypedefDecl 0x565360a08d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5653609a0f30 'long'
|-TypedefDecl 0x565360a08e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5653609a0f30 'long'
|-TypedefDecl 0x565360a08e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5653609a0fd0 'unsigned long'
|-TypedefDecl 0x565360a08f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x565360a08ed0 '__off64_t' sugar
|   |-Typedef 0x565360a081c8 '__off64_t'
|   `-BuiltinType 0x5653609a0f30 'long'
|-TypedefDecl 0x565360a09000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x565360a08fc0 '__quad_t *'
|   `-TypedefType 0x565360a08f60 '__quad_t' sugar
|     |-Typedef 0x565360a07d68 '__quad_t'
|     `-BuiltinType 0x5653609a0f30 'long'
|-TypedefDecl 0x565360a09070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5653609a1ab0 'char *'
|   `-BuiltinType 0x5653609a0eb0 'char'
|-TypedefDecl 0x565360a090e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5653609a0f30 'long'
|-TypedefDecl 0x565360a09150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5653609a0fb0 'unsigned int'
|-FunctionDecl 0x565360a09298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x565360a091c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x565360a0a5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x565360a0a5d8 <line:72:3, col:34>
|     `-CallExpr 0x565360a0a598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x565360a0a580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x565360a0a510 <col:10> '<builtin fn type>' Function 0x565360a0a380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x565360a0a5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x565360a0a530 <col:29> 'unsigned int' lvalue ParmVar 0x565360a091c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x565360a0a380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x565360a0a420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x565360a0a490 <col:10> Implicit
| `-ConstAttr 0x565360a0a4e8 <col:10> Implicit
|-FunctionDecl 0x565360a0a740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x565360a0a638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x565360a0aa58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x565360a0aa48 <line:77:3, col:34>
|     `-CallExpr 0x565360a0aa08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x565360a0a9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x565360a0a978 <col:10> '<builtin fn type>' Function 0x565360a0a7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x565360a0aa30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x565360a0a998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x565360a0a638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x565360a0a7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x565360a0a888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x565360a0a8f8 <col:10> Implicit
| `-ConstAttr 0x565360a0a950 <col:10> Implicit
|-TypedefDecl 0x565360a0aa88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5653609a0fd0 'unsigned long'
|-TypedefDecl 0x565360a0ab18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x565360a0aae0 '__time_t' sugar
|   |-Typedef 0x565360a08708 '__time_t'
|   `-BuiltinType 0x5653609a0f30 'long'
|-RecordDecl 0x565360a0ab70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x565360a0ac28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x565360a0acb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x565360a0ad48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x565360a0ad10 '__pid_t' sugar
|   |-Typedef 0x565360a08238 '__pid_t'
|   `-BuiltinType 0x5653609a0f10 'int'
|-RecordDecl 0x565360a0ada0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x565360a0ae60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x565360a0aeb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x565360a0af70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x565360a0afd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5653609a0fd0 'unsigned long'
|-RecordDecl 0x565360a0b030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x565360a0b2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x565360a0c3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x565360a0b310 'struct cpu_set_t' sugar
|   `-RecordType 0x565360a0b0b0 'cpu_set_t'
|     `-Record 0x565360a0b030 ''
|-FunctionDecl 0x565360a0c678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x565360a0c448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x565360a0c550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x565360a0c728 <line:107:19>
|-FunctionDecl 0x565360a0c900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x565360a0c790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x565360a0c9a8 <col:69>
|-FunctionDecl 0x565360a0cb20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x565360a0ca10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x565360a0cbc8 <col:64>
|-FunctionDecl 0x565360a0ce88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x565360a0cc30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x565360a0cd68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x565360a0cf38 <line:113:22>
|-FunctionDecl 0x565360a0d1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x565360a0cfa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x565360a0d098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x565360a0d268 <col:88>
|-FunctionDecl 0x565360a0d588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x565360a0d2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x565360a0d3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x565360a0d440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x565360a0d640 <col:62>
|-FunctionDecl 0x565360a0d7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x565360a0d6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x565360a0d860 <col:63>
|-FunctionDecl 0x565360a0d988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x565360a0da28 <col:47>
|-FunctionDecl 0x565360a0db30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x565360a0da98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x565360a0dbd8 <col:69>
|-FunctionDecl 0x565360a0dce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x565360a0dc48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x565360a0dd88 <col:69>
|-FunctionDecl 0x565360a0e048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x565360a0ddf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x565360a0df28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x565360a0e0f8 <col:88>
|-TypedefDecl 0x565360a0e188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x565360a0e150 '__clock_t' sugar
|   |-Typedef 0x565360a08548 '__clock_t'
|   `-BuiltinType 0x5653609a0f30 'long'
|-TypedefDecl 0x565360a0e218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x565360a0e1e0 '__clockid_t' sugar
|   |-Typedef 0x565360a08938 '__clockid_t'
|   `-BuiltinType 0x5653609a0f10 'int'
|-TypedefDecl 0x565360a0e2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x565360a0e270 '__timer_t' sugar
|   |-Typedef 0x565360a089a8 '__timer_t'
|   `-PointerType 0x5653609a1630 'void *'
|     `-BuiltinType 0x5653609a0e70 'void'
|-RecordDecl 0x565360a0e300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x565360a0e3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x565360a0e440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x565360a0e4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x565360a0e510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x565360a0e578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x565360a0e5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x565360a0e648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x565360a0e6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x565360a0e718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x565360a0e780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x565360a0e7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x565360a0e838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x565360a0e908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x565360a0e978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x565360a0ea20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x565360a0ebf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x565360a0ec90 <col:45>
|-FunctionDecl 0x565360a0ee70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x565360a0ed60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x565360a0ef18 <col:54>
|-FunctionDecl 0x565360a0f118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x565360a0ef80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x565360a0eff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x565360a0f1c8 <line:157:22>
| `-ConstAttr 0x565360a0f220 <col:63>
|-FunctionDecl 0x565360a10050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x565360a0f318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x565360a100f8 <col:56>
|-FunctionDecl 0x565360a104a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x565360a10168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x565360a101e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x565360a10260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x565360a10358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x565360a10560 <col:54>
|-RecordDecl 0x565360a105b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x565360a10668 parent 0x5653609a0e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x565360a108c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x565360a10968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x565360a109d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x565360a10a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x565360a10b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x565360a10c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x565360a10bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x565360a10b80 'struct __locale_struct' sugar
|     `-RecordType 0x565360a10640 'struct __locale_struct'
|       `-Record 0x565360a105b8 '__locale_struct'
|-TypedefDecl 0x565360a10cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x565360a10cc0 '__locale_t' sugar
|   |-Typedef 0x565360a10c48 '__locale_t'
|   `-PointerType 0x565360a10bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x565360a10b80 'struct __locale_struct' sugar
|       `-RecordType 0x565360a10640 'struct __locale_struct'
|         `-Record 0x565360a105b8 '__locale_struct'
|-FunctionDecl 0x565360a12110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x565360a10d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x565360a10de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x565360a10e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x565360a10ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x565360a10f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x565360a121d8 <col:40>
|-FunctionDecl 0x565360a123c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x565360a122a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x565360a12470 <col:66>
|-FunctionDecl 0x565360a12580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x565360a124d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x565360a12628 <col:69>
|-FunctionDecl 0x565360a12858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x565360a12690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x565360a12720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x565360a12908 <col:52>
|-FunctionDecl 0x565360a12ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x565360a12970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x565360a12a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x565360a12b60 <col:55>
|-FunctionDecl 0x565360a12cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x565360a12be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x565360a12da0 <col:62>
|-FunctionDecl 0x565360a12f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x565360a12e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x565360a12fc0 <col:60>
|-FunctionDecl 0x565360a132b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x565360a13118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x565360a13198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x565360a13368 <col:44>
|-FunctionDecl 0x565360a13578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x565360a133d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x565360a13450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x565360a13628 <col:49>
|-VarDecl 0x565360a13728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x565360a137a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x565360a13828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x565360a138f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x565360a13a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x565360a13ac0 <col:42>
|-VarDecl 0x565360a13b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x565360a13bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x565360a13d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x565360a13c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x565360a13de0 <col:57>
|-FunctionDecl 0x565360a13ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x565360a13e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x565360a13f98 <col:56>
|-FunctionDecl 0x565360a140d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x565360a14018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x565360a14178 <col:59>
|-FunctionDecl 0x565360a14280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x565360a141e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x565360a14328 <col:48>
| `-ConstAttr 0x565360a14380 <col:89>
|-FunctionDecl 0x565360a145e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x565360a14438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x565360a144c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x565360a14848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x565360a146d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x565360a14768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x565360a148f8 <col:88>
|-FunctionDecl 0x565360a14a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x565360a14960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x565360a149f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x565360a14b40 <col:88>
|-FunctionDecl 0x565360a14d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x565360a14ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x565360a14c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x565360a14e08 <line:208:22>
|-FunctionDecl 0x565360a15178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x565360a14e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x565360a14ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x565360a14f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x565360a15010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x565360a15478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x565360a15278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x565360a15350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x565360a15528 <col:85>
|-FunctionDecl 0x565360a15918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x565360a15590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x565360a156c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x565360a157d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x565360a159d0 <col:52>
|-FunctionDecl 0x565360a15b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x565360a15a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x565360a15bf0 <col:61>
|-FunctionDecl 0x565360a160f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x565360a15c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x565360a15cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x565360a15e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x565360a15ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x565360a161b0 <col:62>
|-FunctionDecl 0x565360a163c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x565360a16218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x565360a162a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x565360a16478 <line:221:22>
|-FunctionDecl 0x565360a16578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x565360a164e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x565360a16620 <col:65>
|-TypedefDecl 0x565360a16690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5653609a0fd0 'unsigned long'
|-RecordDecl 0x565360a166e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x565360a16830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x565360a16898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x565360a16948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x565360a168f0 'union pthread_attr_t' sugar
|   `-RecordType 0x565360a16770 'union pthread_attr_t'
|     `-Record 0x565360a166e8 'pthread_attr_t'
|-RecordDecl 0x565360a169a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x565360a16b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x565360a16b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x565360a16c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x565360a16be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x565360a16a20 'struct __pthread_internal_list'
|     `-Record 0x565360a169a0 '__pthread_internal_list'
|-RecordDecl 0x565360a16cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x565360a16d58 parent 0x5653609a0e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x565360a16e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x565360a16e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x565360a16f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x565360a16f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x565360a16fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x565360a17038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x565360a1b110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x565360a1b1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x565360a1b2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x565360a1b318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x565360a1b4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x565360a1b440 'union pthread_mutex_t' sugar
|   `-RecordType 0x565360a16d30 'pthread_mutex_t'
|     `-Record 0x565360a16cb0 ''
|-RecordDecl 0x565360a1b510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x565360a1b650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x565360a1b6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x565360a1b770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x565360a1b710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x565360a1b590 'pthread_mutexattr_t'
|     `-Record 0x565360a1b510 ''
|-RecordDecl 0x565360a1b7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x565360a1b888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x565360a1b950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x565360a1b9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x565360a1ba20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x565360a1ba88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x565360a1baf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x565360a1bb58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x565360a1bbc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x565360a1bc28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x565360a1bce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_8/mix002_pso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_8/mix002_pso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x565360a1bdd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x565360a1be38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x565360a1bf70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x565360a1bf10 'union pthread_cond_t' sugar
|   `-RecordType 0x565360a1b860 'pthread_cond_t'
|     `-Record 0x565360a1b7e0 ''
|-RecordDecl 0x565360a1bfe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x565360a1d130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x565360a1d198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x565360a1d250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x565360a1d1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x565360a1c060 'pthread_condattr_t'
|     `-Record 0x565360a1bfe0 ''
|-TypedefDecl 0x565360a1d2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5653609a0fb0 'unsigned int'
|-TypedefDecl 0x565360a1d348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5653609a0f10 'int'
|-RecordDecl 0x565360a1d3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x565360a1d448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x565360a1d510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x565360a1d578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x565360a1d5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x565360a1d648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x565360a1d6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x565360a1d718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x565360a1d780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x565360a1d7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x565360a1d850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x565360a1d8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x565360a1d920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x565360a1d9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_8/mix002_pso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_8/mix002_pso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x565360a1da78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x565360a1dae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x565360a1dc30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x565360a1dbd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x565360a1d420 'pthread_rwlock_t'
|     `-Record 0x565360a1d3a0 ''
|-RecordDecl 0x565360a1dca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x565360a1dde0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x565360a1de48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x565360a1df00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x565360a1dea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x565360a1dd20 'pthread_rwlockattr_t'
|     `-Record 0x565360a1dca0 ''
|-TypedefDecl 0x565360a1df88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5653609a0f14 'volatile int' volatile
|   `-BuiltinType 0x5653609a0f10 'int'
|-RecordDecl 0x565360a1dfe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x565360a1f140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x565360a1f1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x565360a1f260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x565360a1f200 'union pthread_barrier_t' sugar
|   `-RecordType 0x565360a1e060 'pthread_barrier_t'
|     `-Record 0x565360a1dfe0 ''
|-RecordDecl 0x565360a1f2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x565360a1f3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x565360a1f438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x565360a1f4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x565360a1f490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x565360a1f350 'pthread_barrierattr_t'
|     `-Record 0x565360a1f2d0 ''
|-TypedefDecl 0x565360a1f608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x565360a1f5a0 'long [8]' 8 
|   `-BuiltinType 0x5653609a0f30 'long'
|-EnumDecl 0x565360a1f660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x565360a1f728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x565360a1f778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x565360a1f7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x565360a1f898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x565360a1f8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x565360a1f938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x565360a1f988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x565360a1fa10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x565360a1f9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x565360a1f9d8 <col:26> 'int' EnumConstant 0x565360a1f898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x565360a1fa98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x565360a1fa80 <col:29> 'int'
| |   `-DeclRefExpr 0x565360a1fa60 <col:29> 'int' EnumConstant 0x565360a1f8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x565360a1fb20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x565360a1fb08 <col:30> 'int'
| |   `-DeclRefExpr 0x565360a1fae8 <col:30> 'int' EnumConstant 0x565360a1f938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x565360a1fba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x565360a1fb90 <col:27> 'int'
|     `-DeclRefExpr 0x565360a1fb70 <col:27> 'int' EnumConstant 0x565360a1fa10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x565360a1fbf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x565360a1fcc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x565360a1fd50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x565360a1fd38 <col:30> 'int'
| |   `-DeclRefExpr 0x565360a1fd18 <col:30> 'int' EnumConstant 0x565360a1fcc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x565360a1fda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x565360a1fe28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x565360a1fe10 <col:29> 'int'
|     `-DeclRefExpr 0x565360a1fdf0 <col:29> 'int' EnumConstant 0x565360a1fda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x565360a1fe78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x565360a1ff48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x565360a1ff98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x565360a1ffe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x565360a20038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x565360a20150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x565360a201a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x565360a201f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x565360a20278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x565360a20260 <col:31> 'int'
|     `-DeclRefExpr 0x565360a20240 <col:31> 'int' EnumConstant 0x565360a20150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x565360a202c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x565360a20398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x565360a203e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x565360a20438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x565360a20508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x565360a20558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x565360a205a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x565360a20678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x565360a206c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x565360a20718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x565360a20958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x565360a209c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x565360a20a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x565360a20b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x565360a20b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x565360a20c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x565360a20cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x565360a20d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x565360a20dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x565360a20e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x565360a21488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x565360a20f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x565360a21030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x565360a21270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x565360a212f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x565360a21548 <col:47>
| |-NonNullAttr 0x565360a215a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x565360a215d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x565360a21700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x565360a21630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x565360a21958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x565360a217b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x565360a21838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x565360a21b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x565360a21a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x565360a21bd0 <col:60>
|-FunctionDecl 0x565360a21d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x565360a21dc0 <col:54>
| `-ConstAttr 0x565360a21e18 <col:95>
|-FunctionDecl 0x565360a21fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x565360a21e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x565360a21ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x565360a22098 <line:394:19>
| `-ConstAttr 0x565360a220f0 <col:60>
|-FunctionDecl 0x565360a23b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x565360a239d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x565360a23bb0 <col:71>
| `-NonNullAttr 0x565360a23c08 <col:112, col:126> 1
|-FunctionDecl 0x565360a23d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x565360a23c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x565360a23db8 <line:397:22>
| `-NonNullAttr 0x565360a23e10 <col:63, col:77> 1
|-FunctionDecl 0x565360a24038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x565360a23e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x565360a23ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x565360a240e8 <line:400:22>
| `-NonNullAttr 0x565360a24140 <col:63, col:80> 1 2
|-FunctionDecl 0x565360a24348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x565360a24188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x565360a24208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x565360a243f8 <line:403:22>
| `-NonNullAttr 0x565360a24450 <col:63, col:77> 1
|-FunctionDecl 0x565360a246a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x565360a24498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x565360a24540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x565360a24758 <line:406:22>
| `-NonNullAttr 0x565360a247b0 <col:63, col:80> 1 2
|-FunctionDecl 0x565360a259e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x565360a247f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x565360a24870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x565360a25a98 <line:409:22>
| `-NonNullAttr 0x565360a25af0 <col:63, col:77> 1
|-FunctionDecl 0x565360a25d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x565360a25b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x565360a25bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x565360a25dd8 <line:412:22>
| `-NonNullAttr 0x565360a25e30 <col:63, col:80> 1 2
|-FunctionDecl 0x565360a26068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x565360a25e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x565360a25f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x565360a26118 <col:37>
| `-NonNullAttr 0x565360a26170 <col:78, col:95> 1 2
|-FunctionDecl 0x565360a26358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x565360a261b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x565360a26238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x565360a26408 <line:418:22>
| `-NonNullAttr 0x565360a26460 <col:63, col:80> 1 2
|-FunctionDecl 0x565360a265e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x565360a264a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x565360a26528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x565360a26698 <line:420:22>
| `-NonNullAttr 0x565360a266f0 <col:63, col:77> 1
|-FunctionDecl 0x565360a26898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x565360a26738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x565360a267b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x565360a26948 <line:423:22>
| `-NonNullAttr 0x565360a269c0 <col:63, col:80> 1 2
|-FunctionDecl 0x565360a26b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x565360a26a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x565360a26a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x565360a26bf8 <line:426:22>
| `-NonNullAttr 0x565360a26c50 <col:63, col:77> 1
|-FunctionDecl 0x565360a26df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x565360a26c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x565360a26d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x565360a26ea8 <line:429:22>
| `-NonNullAttr 0x565360a26f00 <col:63, col:80> 1 2
|-FunctionDecl 0x565360a27088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x565360a26f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x565360a26fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x565360a27138 <line:431:22>
| `-NonNullAttr 0x565360a27190 <col:63, col:77> 1
|-FunctionDecl 0x565360a273b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x565360a271d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x565360a27258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x565360a27468 <line:434:22>
| |-NonNullAttr 0x565360a274c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x565360a274f8 <col:100> "" ""
|-FunctionDecl 0x565360a27708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x565360a27548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x565360a275c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x565360a277b8 <line:437:22>
| |-NonNullAttr 0x565360a27810 <col:63, col:77> 1
| `-DeprecatedAttr 0x565360a27848 <col:97> "" ""
|-FunctionDecl 0x565360a27a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x565360a27898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x565360a27910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x565360a27af8 <line:440:22>
| `-NonNullAttr 0x565360a27b50 <col:63, col:80> 1 2
|-FunctionDecl 0x565360a27cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x565360a27b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x565360a27c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x565360a27d80 <line:443:22>
| `-NonNullAttr 0x565360a27dd8 <col:63, col:77> 1
|-FunctionDecl 0x565360a280c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x565360a27e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x565360a27ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x565360a27f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x565360a28180 <line:447:22>
| `-NonNullAttr 0x565360a281d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x565360a28488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x565360a28230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x565360a282b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x565360a28328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x565360a28540 <col:43>
| `-NonNullAttr 0x565360a28598 <col:84, col:98> 1
|-FunctionDecl 0x565360a28858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x565360a285e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x565360a28668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x565360a286f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x565360a28910 <line:452:22>
| `-NonNullAttr 0x565360a28968 <col:63, col:77> 3
|-FunctionDecl 0x565360a28c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x565360a289e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x565360a28a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x565360a28af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x565360a28d30 <line:456:22>
| `-NonNullAttr 0x565360a28d88 <col:63, col:80> 2 3
|-FunctionDecl 0x565360a28f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x565360a28dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x565360a28e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x565360a29028 <line:458:22>
|-FunctionDecl 0x565360a293f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x565360a290f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x565360a29290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x565360a294a8 <col:52, col:69> 1 2
|-FunctionDecl 0x565360a29650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x565360a29530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x565360a295b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x565360a29838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x565360a29718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x565360a29798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x565360a299f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x565360a298f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x565360a29b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x565360a29bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x565360a29c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x565360a29d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x565360a29dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x565360a29fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_8/mix002_pso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x565360a2a098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x565360a2a150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x565360a2a0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x565360a29c50 '__pthread_unwind_buf_t'
| |   `-Record 0x565360a29bd0 ''
| `-AlignedAttr 0x565360a2a1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x565360a2a220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x565360a2a380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x565360a2a3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x565360a2a450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x565360a2a4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x565360a2a6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x565360a2a5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x565360a2a808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x565360a2a778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x565360a2aa00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x565360a2a8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x565360a2aaa8 <line:487:22>
|-RecordDecl 0x565360a2ab00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x565360a2ae18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x565360a2ac78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x565360a2acf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x565360a2aec8 <col:86>
| `-ReturnsTwiceAttr 0x565360a2af20 <col:12> Implicit
|-FunctionDecl 0x565360a2b248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x565360a2aff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x565360a2b100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x565360a2b2f8 <line:493:22>
| `-NonNullAttr 0x565360a2b350 <col:63, col:77> 1
|-FunctionDecl 0x565360a2b4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x565360a2b398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x565360a2b570 <line:495:22>
| `-NonNullAttr 0x565360a2b5c8 <col:63, col:77> 1
|-FunctionDecl 0x565360a2b6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x565360a2b618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x565360a2b778 <line:497:22>
| `-NonNullAttr 0x565360a2b7d0 <col:52, col:66> 1
|-FunctionDecl 0x565360a2b8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x565360a2b818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x565360a2b978 <line:499:22>
| `-NonNullAttr 0x565360a2b9d0 <col:52, col:66> 1
|-FunctionDecl 0x565360a2cc28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x565360a2ca38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x565360a2cac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x565360a2ccd8 <col:36>
| `-NonNullAttr 0x565360a2cd30 <col:66, col:83> 1 2
|-FunctionDecl 0x565360a2ce30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x565360a2cd78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x565360a2ced8 <line:504:22>
| `-NonNullAttr 0x565360a2cf30 <col:52, col:66> 1
|-FunctionDecl 0x565360a2d1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x565360a2cfe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x565360a2d060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x565360a2d278 <line:508:22>
| `-NonNullAttr 0x565360a2d2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x565360a2d598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x565360a2d318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x565360a2d398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x565360a2d418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x565360a2d650 <line:512:22>
| `-NonNullAttr 0x565360a2d6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x565360a2d7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x565360a2d6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x565360a2d858 <line:514:22>
| `-NonNullAttr 0x565360a2d8b0 <col:63, col:77> 1
|-FunctionDecl 0x565360a2dad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x565360a2d960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x565360a2db80 <line:516:22>
| `-NonNullAttr 0x565360a2dbd8 <col:63, col:77> 1
|-FunctionDecl 0x565360a2dce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x565360a2dc28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x565360a2dd88 <line:518:22>
| `-NonNullAttr 0x565360a2dde0 <col:63, col:77> 1
|-FunctionDecl 0x565360a2e008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x565360a2de28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x565360a2dea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x565360a2e0b8 <line:522:22>
| `-NonNullAttr 0x565360a2e110 <col:63, col:80> 1 2
|-FunctionDecl 0x565360a2e318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x565360a2e158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x565360a2e1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x565360a2e3c8 <line:525:22>
| `-NonNullAttr 0x565360a2e420 <col:63, col:77> 1
|-FunctionDecl 0x565360a2e5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x565360a2e468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x565360a2e4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x565360a2e678 <line:528:22>
| `-NonNullAttr 0x565360a2e6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x565360a2e858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x565360a2e718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x565360a2e798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x565360a2e908 <line:530:22>
| `-NonNullAttr 0x565360a2e960 <col:63, col:77> 1
|-FunctionDecl 0x565360a2eb20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x565360a2e9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x565360a2ea40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x565360a2ebd0 <line:534:22>
| `-NonNullAttr 0x565360a2ec28 <col:63, col:80> 1 2
|-FunctionDecl 0x565360a2edb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x565360a2ec78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x565360a2ecf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x565360a2ee68 <line:537:22>
| `-NonNullAttr 0x565360a2eec0 <col:63, col:77> 1
|-FunctionDecl 0x565360a2f068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x565360a2ef08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x565360a2ef88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x565360a2f118 <line:541:22>
| `-NonNullAttr 0x565360a2f170 <col:63, col:80> 1 2
|-FunctionDecl 0x565360a2f2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x565360a2f1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x565360a2f238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x565360a2f3a8 <line:544:22>
| `-NonNullAttr 0x565360a2f400 <col:63, col:77> 1
|-FunctionDecl 0x565360a2f5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x565360a2f448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x565360a2f4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x565360a2f698 <line:547:22>
| `-NonNullAttr 0x565360a2f6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x565360a2f878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x565360a2f738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x565360a2f7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x565360a2f928 <line:550:22>
| `-NonNullAttr 0x565360a2f980 <col:63, col:77> 1
|-FunctionDecl 0x565360a30cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x565360a30aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x565360a30bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x565360a30da8 <col:29>
| `-NonNullAttr 0x565360a30e00 <col:70, col:84> 1
|-FunctionDecl 0x565360a30f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x565360a30e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x565360a31020 <line:555:22>
| `-NonNullAttr 0x565360a31078 <col:63, col:77> 1
|-FunctionDecl 0x565360a31180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x565360a310c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x565360a31228 <line:557:22>
| `-NonNullAttr 0x565360a31280 <col:52, col:66> 1
|-FunctionDecl 0x565360a31380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x565360a312c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x565360a31428 <line:559:19>
| `-NonNullAttr 0x565360a31480 <col:49, col:63> 1
|-FunctionDecl 0x565360a316b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x565360a314c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x565360a31558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x565360a31768 <col:39>
| `-NonNullAttr 0x565360a317c0 <col:69, col:86> 1 2
|-FunctionDecl 0x565360a318c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x565360a31808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x565360a31968 <line:564:22>
| `-NonNullAttr 0x565360a319c0 <col:52, col:66> 1
|-FunctionDecl 0x565360a31b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x565360a31a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x565360a31bd0 <line:566:22>
| `-NonNullAttr 0x565360a31c28 <col:52, col:66> 1
|-FunctionDecl 0x565360a31de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x565360a31c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x565360a31d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x565360a31e98 <col:39>
| `-NonNullAttr 0x565360a31ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x565360a31ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x565360a31f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x565360a32098 <line:571:22>
| `-NonNullAttr 0x565360a320f0 <col:52, col:66> 1
|-FunctionDecl 0x565360a322d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x565360a321a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x565360a32380 <line:573:22>
| `-NonNullAttr 0x565360a323d8 <col:63, col:77> 1
|-FunctionDecl 0x565360a324e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x565360a32428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x565360a32588 <line:575:22>
| `-NonNullAttr 0x565360a325e0 <col:63, col:77> 1
|-FunctionDecl 0x565360a32808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x565360a32628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x565360a326a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x565360a328b8 <line:579:22>
| `-NonNullAttr 0x565360a32910 <col:63, col:80> 1 2
|-FunctionDecl 0x565360a32b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x565360a32958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x565360a329d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x565360a32be8 <line:582:22>
| `-NonNullAttr 0x565360a32c40 <col:63, col:77> 1
|-FunctionDecl 0x565360a32de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x565360a32c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x565360a32d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x565360a32e98 <line:586:22>
| `-NonNullAttr 0x565360a32ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x565360a33078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x565360a32f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x565360a32fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x565360a33128 <col:36>
| `-NonNullAttr 0x565360a33180 <col:77, col:91> 1
|-FunctionDecl 0x565360a334b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x565360a33260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x565360a33370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x565360a33568 <line:591:22>
| `-NonNullAttr 0x565360a335c0 <col:63, col:77> 1
|-FunctionDecl 0x565360a33738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x565360a33608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x565360a337e0 <line:593:22>
| `-NonNullAttr 0x565360a33838 <col:63, col:77> 1
|-FunctionDecl 0x565360a33940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x565360a33888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x565360a339e8 <line:595:22>
| `-NonNullAttr 0x565360a33a40 <col:52, col:66> 1
|-FunctionDecl 0x565360a33b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x565360a33aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x565360a33c00 <line:597:22>
| `-NonNullAttr 0x565360a33c58 <col:52, col:66> 1
|-FunctionDecl 0x565360a33e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x565360a33ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x565360a33d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x565360a33f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x565360a34268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x565360a33fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x565360a34030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x565360a340c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x565360a34320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x565360a34538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x565360a34400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x565360a345e0 <line:606:22>
| `-NonNullAttr 0x565360a34638 <col:63, col:77> 1
|-FunctionDecl 0x565360a34740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x565360a34688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x565360a347e8 <line:608:22>
| `-NonNullAttr 0x565360a34840 <col:63, col:77> 1
|-FunctionDecl 0x565360a34aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x565360a34888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x565360a34908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x565360a34b50 <line:612:22>
| `-NonNullAttr 0x565360a34ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x565360a34db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x565360a34bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x565360a34c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x565360a34e68 <col:37>
| `-NonNullAttr 0x565360a34ec0 <col:78, col:92> 1
|-FunctionDecl 0x565360a350d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x565360a34f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x565360a34fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x565360a35188 <line:618:22>
| `-NonNullAttr 0x565360a351e0 <col:63, col:80> 1 2
|-FunctionDecl 0x565360a353a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x565360a35228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x565360a352a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x565360a35458 <line:621:22>
| `-NonNullAttr 0x565360a354b0 <col:63, col:77> 1
|-FunctionDecl 0x565360a35758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x565360a35590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x565360a35610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x565360a35808 <line:623:22>
| `-NonNullAttr 0x565360a35860 <col:63, col:77> 1
|-FunctionDecl 0x565360a359d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x565360a358a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x565360a35ab0 <line:625:22>
| `-NonNullAttr 0x565360a35b08 <col:63, col:77> 1
|-FunctionDecl 0x565360a35c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x565360a35b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x565360a35cb8 <line:627:22>
| `-NonNullAttr 0x565360a35d10 <col:52, col:66> 1
|-FunctionDecl 0x565360a35e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x565360a35d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x565360a35eb8 <line:629:22>
| `-NonNullAttr 0x565360a35f10 <col:52, col:66> 1
|-FunctionDecl 0x565360a36010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x565360a35f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x565360a360b8 <line:631:22>
| `-NonNullAttr 0x565360a36110 <col:52, col:66> 1
|-FunctionDecl 0x565360a364e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x565360a361f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x565360a36300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x565360a36380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x565360a365a0 <line:635:22>
| `-NonNullAttr 0x565360a365f8 <col:63, col:77> 1
|-FunctionDecl 0x565360a36778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x565360a36648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x565360a36820 <line:637:22>
| `-NonNullAttr 0x565360a36878 <col:63, col:77> 1
|-FunctionDecl 0x565360a36980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x565360a368c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x565360a36a28 <line:639:22>
| `-NonNullAttr 0x565360a36a80 <col:52, col:66> 1
|-FunctionDecl 0x565360a37c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x565360a37b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x565360a37d30 <line:641:22>
| `-NonNullAttr 0x565360a37d88 <col:63, col:77> 1
|-FunctionDecl 0x565360a37e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x565360a37dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x565360a37f38 <line:643:22>
| `-NonNullAttr 0x565360a37f90 <col:63, col:77> 1
|-FunctionDecl 0x565360a381b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x565360a37fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x565360a38058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x565360a38268 <line:647:22>
| `-NonNullAttr 0x565360a382c0 <col:63, col:80> 1 2
|-FunctionDecl 0x565360a384c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x565360a38308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x565360a38388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x565360a38578 <line:650:22>
| `-NonNullAttr 0x565360a385d0 <col:63, col:77> 1
|-FunctionDecl 0x565360a38918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x565360a386b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x565360a387d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x565360a389c8 <line:653:22>
| `-NonNullAttr 0x565360a38a20 <col:63, col:77> 1
|-FunctionDecl 0x565360a38b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x565360a38a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x565360a38c30 <col:69>
|-FunctionDecl 0x565360a38da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x565360a38c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x565360a38e50 <col:72>
|-FunctionDecl 0x565360a39088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x565360a38eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x565360a38f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x565360a39138 <col:44>
|-FunctionDecl 0x565360a39358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x565360a391a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x565360a39218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x565360a39408 <line:660:22>
| `-NonNullAttr 0x565360a39460 <col:63, col:77> 2
|-FunctionDecl 0x565360a398a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x565360a39540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x565360a39650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x565360a39760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x565360a39960 <col:47>
|-FunctionDecl 0x565360a39af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x565360a399d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x565360a39c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x565360a39bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x565360a39da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x565360a39d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x565360a39e68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x565360a39f28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x565360a39fe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x565360a3a0a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x565360a3a120 prev 0x565360a3a0a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x565360a3a188 <col:24> 'int' 0
|-VarDecl 0x565360a3a1c0 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x565360a3a240 prev 0x565360a3a1c0 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x565360a3a2a8 <col:27> 'int' 0
|-VarDecl 0x565360a3a2e0 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x565360a3a360 prev 0x565360a3a2e0 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x565360a3a3c8 <col:27> 'int' 0
|-VarDecl 0x565360a3a400 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x565360a3a480 prev 0x565360a3a400 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x565360a3a4e8 <col:27> 'int' 0
|-VarDecl 0x565360a3a520 <line:679:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x565360a3a5a0 prev 0x565360a3a520 <line:680:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x565360a3a608 <col:27> 'int' 0
|-VarDecl 0x565360a3a640 <line:681:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x565360a3a6c0 prev 0x565360a3a640 <line:682:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x565360a3a728 <col:27> 'int' 0
|-VarDecl 0x565360a3a760 <line:683:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x565360a3a7e0 prev 0x565360a3a760 <line:684:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x565360a3a848 <col:27> 'int' 0
|-VarDecl 0x565360a3a880 <line:685:1, col:5> col:5 used a 'int'
|-VarDecl 0x565360a3a900 prev 0x565360a3a880 <line:686:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x565360a3a968 <col:9> 'int' 0
|-VarDecl 0x565360a3a998 <line:687:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x565360a3aa10 <line:688:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x565360a3ab00 <line:689:1, col:5> col:5 used x 'int'
|-VarDecl 0x565360a3ab80 prev 0x565360a3ab00 <line:690:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x565360a3abe8 <col:9> 'int' 0
|-VarDecl 0x565360a3ac20 <line:691:1, col:5> col:5 used y 'int'
|-VarDecl 0x565360a3aca0 prev 0x565360a3ac20 <line:692:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x565360a3ad08 <col:9> 'int' 0
|-VarDecl 0x565360a3ad40 <line:693:1, col:5> col:5 used z 'int'
|-VarDecl 0x565360a3adc0 prev 0x565360a3ad40 <line:694:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x565360a3ae28 <col:9> 'int' 0
|-VarDecl 0x565360a3ae58 <line:695:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x565360a3aed8 <line:696:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x565360a3af50 <line:697:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x565360a3afc8 <line:698:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x565360a3b040 <line:699:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x565360a3b0b8 <line:700:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x565360a3b130 <line:701:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x565360a3b1a8 <line:702:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x565360a3b220 <line:703:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x565360a3b298 <line:704:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x565360a3b310 <line:705:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x565360a3b390 <line:706:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x565360a3b410 <line:707:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x565360a3b488 <line:708:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x565360a3b508 <line:709:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x565360a3b580 <line:710:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x565360a3b5f8 <line:711:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x565360a3b670 <line:712:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x565360a3b788 prev 0x565360a39af0 <line:713:1, line:733:1> line:713:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x565360a3b6f0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x565360a3bf98 <line:714:1, line:733:1>
|   |-CallExpr 0x565360a3b898 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565360a3b880 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a3b830 <col:3> 'void ()' Function 0x5653609e0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x565360a3b8f8 <line:716:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x565360a3b8b8 <col:3> 'int' lvalue Var 0x565360a3a900 'a' 'int'
|   | `-IntegerLiteral 0x565360a3b8d8 <col:7> 'int' 1
|   |-CallExpr 0x565360a3b950 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565360a3b938 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a3b918 <col:3> 'void ()' Function 0x5653609e0f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x565360a3b9a8 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565360a3b990 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a3b970 <col:3> 'void ()' Function 0x5653609e0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x565360a3ba08 <line:719:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x565360a3b9c8 <col:3> 'int' lvalue Var 0x565360a3ab80 'x' 'int'
|   | `-IntegerLiteral 0x565360a3b9e8 <col:7> 'int' 1
|   |-CallExpr 0x565360a3ba60 <line:720:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565360a3ba48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a3ba28 <col:3> 'void ()' Function 0x5653609e0f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x565360a3bab8 <line:721:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565360a3baa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a3ba80 <col:3> 'void ()' Function 0x5653609e0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x565360a3bb48 <line:722:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x565360a3bad8 <col:3> 'int' lvalue Var 0x565360a3a240 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x565360a3bb30 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x565360a3bb10 <col:25> 'int' lvalue Var 0x565360a3ab80 'x' 'int'
|   |-CallExpr 0x565360a3bba0 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565360a3bb88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a3bb68 <col:3> 'void ()' Function 0x5653609e0f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x565360a3bbf8 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565360a3bbe0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a3bbc0 <col:3> 'void ()' Function 0x5653609e0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x565360a3bc70 <line:725:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x565360a3bc18 <col:3> 'int' lvalue Var 0x565360a3a360 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x565360a3bc58 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x565360a3bc38 <col:25> 'int' lvalue Var 0x565360a3aca0 'y' 'int'
|   |-CallExpr 0x565360a3bcc8 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565360a3bcb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a3bc90 <col:3> 'void ()' Function 0x5653609e0f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x565360a3bd20 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565360a3bd08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a3bce8 <col:3> 'void ()' Function 0x5653609e0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x565360a3bd78 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565360a3bd60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a3bd40 <col:3> 'void ()' Function 0x5653609e0f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x565360a3bdd0 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565360a3bdb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a3bd98 <col:3> 'void ()' Function 0x5653609e0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x565360a3be88 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x565360a3bdf0 <col:3> 'int' lvalue Var 0x565360a3a120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x565360a3be68 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x565360a3be50 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x565360a3be10 <col:22> 'int' lvalue Var 0x565360a3a120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x565360a3be30 <col:41> 'int' 1
|   |-CallExpr 0x565360a3bee0 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565360a3bec8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a3bea8 <col:3> 'void ()' Function 0x5653609e0f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x565360a3bf88 <line:732:3, col:36>
|     `-CallExpr 0x565360a3bf68 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x565360a3bf50 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x565360a3bf00 <col:10> 'void *(void)' Function 0x5653609e0958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x565360a3c0e8 prev 0x565360a39c48 <line:734:1, line:764:1> line:734:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x565360a3c050 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x565360a3f108 <line:735:1, line:764:1>
|   |-CallExpr 0x565360a3c1c8 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565360a3c1b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a3c190 <col:3> 'void ()' Function 0x5653609e0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x565360a3c228 <line:737:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x565360a3c1e8 <col:3> 'int' lvalue Var 0x565360a3aca0 'y' 'int'
|   | `-IntegerLiteral 0x565360a3c208 <col:7> 'int' 1
|   |-CallExpr 0x565360a3c280 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565360a3c268 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a3c248 <col:3> 'void ()' Function 0x5653609e0f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x565360a3c2d8 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565360a3c2c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a3c2a0 <col:3> 'void ()' Function 0x5653609e0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x565360a3c350 <line:740:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x565360a3c2f8 <col:3> 'int' lvalue Var 0x565360a3a480 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x565360a3c338 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x565360a3c318 <col:25> 'int' lvalue Var 0x565360a3aca0 'y' 'int'
|   |-CallExpr 0x565360a3c3a8 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565360a3c390 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a3c370 <col:3> 'void ()' Function 0x5653609e0f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x565360a3c400 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565360a3c3e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a3c3c8 <col:3> 'void ()' Function 0x5653609e0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x565360a3c4b0 <line:743:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x565360a3c420 <col:3> '_Bool' lvalue Var 0x565360a3b5f8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x565360a3c498 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x565360a3c478 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x565360a3c460 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x565360a3c440 <col:19> 'void *(void)' Function 0x5653609e0958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x565360a3c560 <line:744:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x565360a3c4d0 <col:3> '_Bool' lvalue Var 0x565360a3b670 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x565360a3c548 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x565360a3c528 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x565360a3c510 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x565360a3c4f0 <col:19> 'void *(void)' Function 0x5653609e0958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x565360a3c5d8 <line:745:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x565360a3c580 <col:3> '_Bool' lvalue Var 0x565360a3ae58 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x565360a3c5c0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x565360a3c5a0 <col:21> '_Bool' lvalue Var 0x565360a3b670 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x565360a3c650 <line:746:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x565360a3c5f8 <col:3> 'int' lvalue Var 0x565360a3aed8 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x565360a3c638 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x565360a3c618 <col:15> 'int' lvalue Var 0x565360a3adc0 'z' 'int'
|   |-BinaryOperator 0x565360a3ca88 <line:747:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x565360a3c670 <col:3> 'int' lvalue Var 0x565360a3adc0 'z' 'int'
|   | `-ConditionalOperator 0x565360a3ca58 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x565360a3c880 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x565360a3c7a0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x565360a3c6c8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x565360a3c6b0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x565360a3c690 <col:8> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x565360a3c780 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x565360a3c718 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x565360a3c700 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x565360a3c6e0 <col:27> '_Bool' lvalue Var 0x565360a3b040 'z$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x565360a3c768 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x565360a3c750 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x565360a3c730 <col:46> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x565360a3c860 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x565360a3c7f8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x565360a3c7e0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x565360a3c7c0 <col:65> '_Bool' lvalue Var 0x565360a3b040 'z$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x565360a3c848 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x565360a3c830 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x565360a3c810 <col:84> '_Bool' lvalue Var 0x565360a3b220 'z$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x565360a3ca40 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x565360a3c8a0 <col:101> 'int' lvalue Var 0x565360a3adc0 'z' 'int'
|   |   `-ParenExpr 0x565360a3ca20 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x565360a3c9f0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x565360a3c960 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x565360a3c918 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x565360a3c900 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x565360a3c8c0 <col:106> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x565360a3c948 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x565360a3c930 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x565360a3c8e0 <col:124> '_Bool' lvalue Var 0x565360a3b040 'z$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x565360a3c9c0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x565360a3c980 <col:141> 'int' lvalue Var 0x565360a3b410 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x565360a3c9d8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x565360a3c9a0 <col:153> 'int' lvalue Var 0x565360a3b508 'z$w_buff1' 'int'
|   |-BinaryOperator 0x565360a3cfb0 <line:748:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x565360a3caa8 <col:3> 'int' lvalue Var 0x565360a3b410 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x565360a3cf80 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x565360a3cf50 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x565360a3cf38 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x565360a3cac8 <col:15> '_Bool' lvalue Var 0x565360a3b670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x565360a3cf68 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x565360a3cae8 <col:31> 'int' lvalue Var 0x565360a3b410 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x565360a3cf18 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x565360a3cee8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x565360a3cd10 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x565360a3cc30 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x565360a3cb58 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x565360a3cb40 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x565360a3cb20 <col:45> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x565360a3cc10 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x565360a3cba8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x565360a3cb90 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x565360a3cb70 <col:64> '_Bool' lvalue Var 0x565360a3b040 'z$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x565360a3cbf8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x565360a3cbe0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x565360a3cbc0 <col:83> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x565360a3ccf0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x565360a3cc88 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x565360a3cc70 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x565360a3cc50 <col:102> '_Bool' lvalue Var 0x565360a3b040 'z$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x565360a3ccd8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x565360a3ccc0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x565360a3cca0 <col:121> '_Bool' lvalue Var 0x565360a3b220 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x565360a3ced0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x565360a3cd30 <col:138> 'int' lvalue Var 0x565360a3b410 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x565360a3ceb0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x565360a3ce80 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x565360a3cdf0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x565360a3cda8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x565360a3cd90 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x565360a3cd50 <col:151> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x565360a3cdd8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x565360a3cdc0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x565360a3cd70 <col:169> '_Bool' lvalue Var 0x565360a3b040 'z$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x565360a3ce50 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x565360a3ce10 <col:186> 'int' lvalue Var 0x565360a3b410 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x565360a3ce68 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x565360a3ce30 <col:198> 'int' lvalue Var 0x565360a3b410 'z$w_buff0' 'int'
|   |-BinaryOperator 0x565360a3d4c0 <line:749:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x565360a3cfd0 <col:3> 'int' lvalue Var 0x565360a3b508 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x565360a3d490 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x565360a3d460 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x565360a3d448 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x565360a3cff0 <col:15> '_Bool' lvalue Var 0x565360a3b670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x565360a3d478 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x565360a3d010 <col:31> 'int' lvalue Var 0x565360a3b508 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x565360a3d428 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x565360a3d3f8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x565360a3d220 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x565360a3d140 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x565360a3d068 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x565360a3d050 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x565360a3d030 <col:45> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x565360a3d120 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x565360a3d0b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x565360a3d0a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x565360a3d080 <col:64> '_Bool' lvalue Var 0x565360a3b040 'z$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x565360a3d108 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x565360a3d0f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x565360a3d0d0 <col:83> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x565360a3d200 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x565360a3d198 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x565360a3d180 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x565360a3d160 <col:102> '_Bool' lvalue Var 0x565360a3b040 'z$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x565360a3d1e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x565360a3d1d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x565360a3d1b0 <col:121> '_Bool' lvalue Var 0x565360a3b220 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x565360a3d3e0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x565360a3d240 <col:138> 'int' lvalue Var 0x565360a3b508 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x565360a3d3c0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x565360a3d390 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x565360a3d300 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x565360a3d2b8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x565360a3d2a0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x565360a3d260 <col:151> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x565360a3d2e8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x565360a3d2d0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x565360a3d280 <col:169> '_Bool' lvalue Var 0x565360a3b040 'z$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x565360a3d360 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x565360a3d320 <col:186> 'int' lvalue Var 0x565360a3b508 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x565360a3d378 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x565360a3d340 <col:198> 'int' lvalue Var 0x565360a3b508 'z$w_buff1' 'int'
|   |-BinaryOperator 0x565360a3da68 <line:750:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x565360a3d4e0 <col:3> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x565360a3da50 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x565360a3da20 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x565360a3d9d8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565360a3d9c0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565360a3d500 <col:20> '_Bool' lvalue Var 0x565360a3b670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x565360a3da08 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565360a3d9f0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565360a3d520 <col:36> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x565360a3d9a0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x565360a3d970 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x565360a3d730 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x565360a3d650 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x565360a3d578 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x565360a3d560 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x565360a3d540 <col:55> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x565360a3d630 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x565360a3d5c8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x565360a3d5b0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x565360a3d590 <col:74> '_Bool' lvalue Var 0x565360a3b040 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x565360a3d618 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x565360a3d600 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x565360a3d5e0 <col:93> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x565360a3d710 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x565360a3d6a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x565360a3d690 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x565360a3d670 <col:112> '_Bool' lvalue Var 0x565360a3b040 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x565360a3d6f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x565360a3d6e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x565360a3d6c0 <col:131> '_Bool' lvalue Var 0x565360a3b220 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x565360a3d958 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x565360a3d940 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x565360a3d750 <col:148> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x565360a3d920 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x565360a3d8f0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x565360a3d810 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x565360a3d7c8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x565360a3d7b0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x565360a3d770 <col:166> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x565360a3d7f8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x565360a3d7e0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x565360a3d790 <col:184> '_Bool' lvalue Var 0x565360a3b040 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x565360a3d8a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x565360a3d860 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x565360a3d830 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x565360a3d8d8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x565360a3d8c0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x565360a3d888 <col:212> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x565360a3e040 <line:751:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x565360a3da88 <col:3> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x565360a3e028 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x565360a3dff8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x565360a3dfb0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565360a3df98 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565360a3daa8 <col:20> '_Bool' lvalue Var 0x565360a3b670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x565360a3dfe0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565360a3dfc8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565360a3dac8 <col:36> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x565360a3df78 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x565360a3df48 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x565360a3dce8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x565360a3dc08 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x565360a3db30 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x565360a3db08 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x565360a3dae8 <col:55> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x565360a3dbe8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x565360a3db80 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x565360a3db68 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x565360a3db48 <col:74> '_Bool' lvalue Var 0x565360a3b040 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x565360a3dbd0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x565360a3dbb8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x565360a3db98 <col:93> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x565360a3dcc8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x565360a3dc60 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x565360a3dc48 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x565360a3dc28 <col:112> '_Bool' lvalue Var 0x565360a3b040 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x565360a3dcb0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x565360a3dc98 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x565360a3dc78 <col:131> '_Bool' lvalue Var 0x565360a3b220 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x565360a3df30 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x565360a3df18 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x565360a3dd08 <col:148> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x565360a3def8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x565360a3dec8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x565360a3ddc8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x565360a3dd80 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x565360a3dd68 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x565360a3dd28 <col:166> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x565360a3ddb0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x565360a3dd98 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x565360a3dd48 <col:184> '_Bool' lvalue Var 0x565360a3b040 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x565360a3de98 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x565360a3de18 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x565360a3dde8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x565360a3deb0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x565360a3de70 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x565360a3de40 <col:219> 'int' 0
|   |-BinaryOperator 0x565360a3e5e8 <line:752:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x565360a3e060 <col:3> '_Bool' lvalue Var 0x565360a3b040 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x565360a3e5d0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x565360a3e5a0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x565360a3e558 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565360a3e540 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565360a3e080 <col:20> '_Bool' lvalue Var 0x565360a3b670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x565360a3e588 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565360a3e570 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565360a3e0a0 <col:36> '_Bool' lvalue Var 0x565360a3b040 'z$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x565360a3e520 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x565360a3e4f0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x565360a3e2b0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x565360a3e1d0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x565360a3e0f8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x565360a3e0e0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x565360a3e0c0 <col:55> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x565360a3e1b0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x565360a3e148 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x565360a3e130 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x565360a3e110 <col:74> '_Bool' lvalue Var 0x565360a3b040 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x565360a3e198 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x565360a3e180 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x565360a3e160 <col:93> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x565360a3e290 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x565360a3e228 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x565360a3e210 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x565360a3e1f0 <col:112> '_Bool' lvalue Var 0x565360a3b040 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x565360a3e278 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x565360a3e260 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x565360a3e240 <col:131> '_Bool' lvalue Var 0x565360a3b220 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x565360a3e4d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x565360a3e4c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x565360a3e2d0 <col:148> '_Bool' lvalue Var 0x565360a3b040 'z$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x565360a3e4a0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x565360a3e470 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x565360a3e390 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x565360a3e348 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x565360a3e330 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x565360a3e2f0 <col:166> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x565360a3e378 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x565360a3e360 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x565360a3e310 <col:184> '_Bool' lvalue Var 0x565360a3b040 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x565360a3e428 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x565360a3e3e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x565360a3e3b0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x565360a3e458 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x565360a3e440 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x565360a3e408 <col:212> '_Bool' lvalue Var 0x565360a3b040 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x565360a3ebd0 <line:753:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x565360a3e608 <col:3> '_Bool' lvalue Var 0x565360a3b220 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x565360a3ebb8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x565360a3eb88 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x565360a3eb40 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565360a3eb08 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565360a3e628 <col:20> '_Bool' lvalue Var 0x565360a3b670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x565360a3eb70 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565360a3eb58 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565360a3e648 <col:36> '_Bool' lvalue Var 0x565360a3b220 'z$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x565360a3eae8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x565360a3eab8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x565360a3e858 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x565360a3e778 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x565360a3e6a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x565360a3e688 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x565360a3e668 <col:55> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x565360a3e758 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x565360a3e6f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x565360a3e6d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x565360a3e6b8 <col:74> '_Bool' lvalue Var 0x565360a3b040 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x565360a3e740 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x565360a3e728 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x565360a3e708 <col:93> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x565360a3e838 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x565360a3e7d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x565360a3e7b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x565360a3e798 <col:112> '_Bool' lvalue Var 0x565360a3b040 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x565360a3e820 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x565360a3e808 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x565360a3e7e8 <col:131> '_Bool' lvalue Var 0x565360a3b220 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x565360a3eaa0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x565360a3ea88 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x565360a3e878 <col:148> '_Bool' lvalue Var 0x565360a3b220 'z$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x565360a3ea68 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x565360a3ea38 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x565360a3e938 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x565360a3e8f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x565360a3e8d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x565360a3e898 <col:166> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x565360a3e920 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x565360a3e908 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x565360a3e8b8 <col:184> '_Bool' lvalue Var 0x565360a3b040 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x565360a3ea08 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x565360a3e988 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x565360a3e958 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x565360a3ea20 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x565360a3e9e0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x565360a3e9b0 <col:219> 'int' 0
|   |-BinaryOperator 0x565360a3ec48 <line:754:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x565360a3ebf0 <col:3> 'int' lvalue Var 0x565360a3a5a0 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x565360a3ec30 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x565360a3ec10 <col:25> 'int' lvalue Var 0x565360a3adc0 'z' 'int'
|   |-BinaryOperator 0x565360a3ed78 <line:755:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x565360a3ec68 <col:3> 'int' lvalue Var 0x565360a3adc0 'z' 'int'
|   | `-ConditionalOperator 0x565360a3ed48 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x565360a3ed00 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x565360a3ece8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x565360a3ec88 <col:7> '_Bool' lvalue Var 0x565360a3ae58 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x565360a3ed18 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x565360a3eca8 <col:25> 'int' lvalue Var 0x565360a3aed8 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x565360a3ed30 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x565360a3ecc8 <col:37> 'int' lvalue Var 0x565360a3adc0 'z' 'int'
|   |-BinaryOperator 0x565360a3ee10 <line:756:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x565360a3ed98 <col:3> '_Bool' lvalue Var 0x565360a3ae58 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x565360a3ede8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x565360a3edb8 <col:28> 'int' 0
|   |-CallExpr 0x565360a3ee68 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565360a3ee50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a3ee30 <col:3> 'void ()' Function 0x5653609e0f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x565360a3eec0 <line:758:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565360a3eea8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a3ee88 <col:3> 'void ()' Function 0x5653609e0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x565360a3ef18 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565360a3ef00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a3eee0 <col:3> 'void ()' Function 0x5653609e0f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x565360a3ef70 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565360a3ef58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a3ef38 <col:3> 'void ()' Function 0x5653609e0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x565360a3f028 <line:761:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x565360a3ef90 <col:3> 'int' lvalue Var 0x565360a3a120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x565360a3f008 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x565360a3eff0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x565360a3efb0 <col:22> 'int' lvalue Var 0x565360a3a120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x565360a3efd0 <col:41> 'int' 1
|   |-CallExpr 0x565360a3f080 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565360a3f068 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a3f048 <col:3> 'void ()' Function 0x5653609e0f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x565360a3f0f8 <line:763:3, col:36>
|     `-CallExpr 0x565360a3f0d8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x565360a3f0c0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x565360a3f0a0 <col:10> 'void *(void)' Function 0x5653609e0958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x565360a3f2a8 prev 0x565360a39da0 <line:765:1, line:809:1> line:765:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x565360a3f210 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x565360a43540 <line:766:1, line:809:1>
|   |-CallExpr 0x565360a3f388 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565360a3f370 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a3f350 <col:3> 'void ()' Function 0x5653609e0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x565360a3f400 <line:768:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x565360a3f3a8 <col:3> 'int' lvalue Var 0x565360a3b508 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x565360a3f3e8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x565360a3f3c8 <col:15> 'int' lvalue Var 0x565360a3b410 'z$w_buff0' 'int'
|   |-BinaryOperator 0x565360a3f460 <line:769:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x565360a3f420 <col:3> 'int' lvalue Var 0x565360a3b410 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x565360a3f440 <col:15> 'int' 1
|   |-BinaryOperator 0x565360a3f4d8 <line:770:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x565360a3f480 <col:3> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x565360a3f4c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x565360a3f4a0 <col:20> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x565360a3f570 <line:771:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x565360a3f4f8 <col:3> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x565360a3f548 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x565360a3f518 <col:27> 'int' 1
|   |-CallExpr 0x565360a3f6f8 <line:772:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x565360a3f6e0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x565360a3f590 <col:3> 'void (int)' Function 0x5653609e0bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x565360a3f690 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x565360a3f670 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x565360a3f650 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x565360a3f608 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x565360a3f5f0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x565360a3f5b0 <col:23> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x565360a3f638 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x565360a3f620 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x565360a3f5d0 <col:41> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x565360a3f778 <line:773:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x565360a3f720 <col:3> '_Bool' lvalue Var 0x565360a3b130 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x565360a3f760 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x565360a3f740 <col:20> '_Bool' lvalue Var 0x565360a3af50 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x565360a3f7f0 <line:774:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x565360a3f798 <col:3> '_Bool' lvalue Var 0x565360a3b1a8 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x565360a3f7d8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x565360a3f7b8 <col:20> '_Bool' lvalue Var 0x565360a3afc8 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x565360a3f868 <line:775:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x565360a3f810 <col:3> '_Bool' lvalue Var 0x565360a3b220 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x565360a3f850 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x565360a3f830 <col:20> '_Bool' lvalue Var 0x565360a3b040 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x565360a3f8e0 <line:776:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x565360a3f888 <col:3> '_Bool' lvalue Var 0x565360a3b298 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x565360a3f8c8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x565360a3f8a8 <col:20> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x565360a3f978 <line:777:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x565360a3f900 <col:3> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x565360a3f950 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x565360a3f920 <col:27> 'int' 1
|   |-CallExpr 0x565360a3f9d0 <line:778:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565360a3f9b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a3f998 <col:3> 'void ()' Function 0x5653609e0f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x565360a3fa28 <line:779:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565360a3fa10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a3f9f0 <col:3> 'void ()' Function 0x5653609e0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x565360a3fad8 <line:780:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x565360a3fa48 <col:3> '_Bool' lvalue Var 0x565360a3b5f8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x565360a3fac0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x565360a3faa0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x565360a3fa88 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x565360a3fa68 <col:19> 'void *(void)' Function 0x5653609e0958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x565360a3fba0 <line:781:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x565360a3faf8 <col:3> '_Bool' lvalue Var 0x565360a3b670 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x565360a3fb88 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x565360a3fb68 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x565360a3fb50 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x565360a3fb18 <col:19> 'void *(void)' Function 0x5653609e0958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x565360a3fc18 <line:782:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x565360a3fbc0 <col:3> '_Bool' lvalue Var 0x565360a3ae58 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x565360a3fc00 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x565360a3fbe0 <col:21> '_Bool' lvalue Var 0x565360a3b670 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x565360a3fc90 <line:783:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x565360a3fc38 <col:3> 'int' lvalue Var 0x565360a3aed8 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x565360a3fc78 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x565360a3fc58 <col:15> 'int' lvalue Var 0x565360a3adc0 'z' 'int'
|   |-BinaryOperator 0x565360a400c8 <line:784:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x565360a3fcb0 <col:3> 'int' lvalue Var 0x565360a3adc0 'z' 'int'
|   | `-ConditionalOperator 0x565360a40098 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x565360a3fec0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x565360a3fde0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x565360a3fd08 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x565360a3fcf0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x565360a3fcd0 <col:8> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x565360a3fdc0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x565360a3fd58 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x565360a3fd40 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x565360a3fd20 <col:27> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x565360a3fda8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x565360a3fd90 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x565360a3fd70 <col:46> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x565360a3fea0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x565360a3fe38 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x565360a3fe20 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x565360a3fe00 <col:65> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x565360a3fe88 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x565360a3fe70 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x565360a3fe50 <col:84> '_Bool' lvalue Var 0x565360a3b298 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x565360a40080 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x565360a3fee0 <col:101> 'int' lvalue Var 0x565360a3adc0 'z' 'int'
|   |   `-ParenExpr 0x565360a40060 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x565360a40030 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x565360a3ffa0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x565360a3ff58 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x565360a3ff40 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x565360a3ff00 <col:106> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x565360a3ff88 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x565360a3ff70 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x565360a3ff20 <col:124> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x565360a40000 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x565360a3ffc0 <col:141> 'int' lvalue Var 0x565360a3b410 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x565360a40018 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x565360a3ffe0 <col:153> 'int' lvalue Var 0x565360a3b508 'z$w_buff1' 'int'
|   |-BinaryOperator 0x565360a405d8 <line:785:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x565360a400e8 <col:3> 'int' lvalue Var 0x565360a3b410 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x565360a405a8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x565360a40578 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x565360a40560 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x565360a40108 <col:15> '_Bool' lvalue Var 0x565360a3b670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x565360a40590 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x565360a40128 <col:31> 'int' lvalue Var 0x565360a3b410 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x565360a40540 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x565360a40510 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x565360a40338 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x565360a40258 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x565360a40180 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x565360a40168 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x565360a40148 <col:45> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x565360a40238 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x565360a401d0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x565360a401b8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x565360a40198 <col:64> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x565360a40220 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x565360a40208 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x565360a401e8 <col:83> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x565360a40318 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x565360a402b0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x565360a40298 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x565360a40278 <col:102> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x565360a40300 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x565360a402e8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x565360a402c8 <col:121> '_Bool' lvalue Var 0x565360a3b298 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x565360a404f8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x565360a40358 <col:138> 'int' lvalue Var 0x565360a3b410 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x565360a404d8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x565360a404a8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x565360a40418 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x565360a403d0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x565360a403b8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x565360a40378 <col:151> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x565360a40400 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x565360a403e8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x565360a40398 <col:169> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x565360a40478 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x565360a40438 <col:186> 'int' lvalue Var 0x565360a3b410 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x565360a40490 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x565360a40458 <col:198> 'int' lvalue Var 0x565360a3b410 'z$w_buff0' 'int'
|   |-BinaryOperator 0x565360a40ae8 <line:786:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x565360a405f8 <col:3> 'int' lvalue Var 0x565360a3b508 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x565360a40ab8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x565360a40a88 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x565360a40a70 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x565360a40618 <col:15> '_Bool' lvalue Var 0x565360a3b670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x565360a40aa0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x565360a40638 <col:31> 'int' lvalue Var 0x565360a3b508 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x565360a40a50 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x565360a40a20 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x565360a40848 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x565360a40768 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x565360a40690 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x565360a40678 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x565360a40658 <col:45> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x565360a40748 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x565360a406e0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x565360a406c8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x565360a406a8 <col:64> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x565360a40730 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x565360a40718 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x565360a406f8 <col:83> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x565360a40828 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x565360a407c0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x565360a407a8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x565360a40788 <col:102> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x565360a40810 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x565360a407f8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x565360a407d8 <col:121> '_Bool' lvalue Var 0x565360a3b298 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x565360a40a08 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x565360a40868 <col:138> 'int' lvalue Var 0x565360a3b508 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x565360a409e8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x565360a409b8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x565360a40928 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x565360a408e0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x565360a408c8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x565360a40888 <col:151> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x565360a40910 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x565360a408f8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x565360a408a8 <col:169> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x565360a40988 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x565360a40948 <col:186> 'int' lvalue Var 0x565360a3b508 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x565360a409a0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x565360a40968 <col:198> 'int' lvalue Var 0x565360a3b508 'z$w_buff1' 'int'
|   |-BinaryOperator 0x565360a410a8 <line:787:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x565360a40b08 <col:3> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x565360a41090 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x565360a41060 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x565360a41018 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565360a41000 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565360a40b28 <col:20> '_Bool' lvalue Var 0x565360a3b670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x565360a41048 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565360a41030 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565360a40b60 <col:36> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x565360a40fe0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x565360a40fb0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x565360a40d70 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x565360a40c90 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x565360a40bb8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x565360a40ba0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x565360a40b80 <col:55> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x565360a40c70 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x565360a40c08 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x565360a40bf0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x565360a40bd0 <col:74> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x565360a40c58 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x565360a40c40 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x565360a40c20 <col:93> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x565360a40d50 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x565360a40ce8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x565360a40cd0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x565360a40cb0 <col:112> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x565360a40d38 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x565360a40d20 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x565360a40d00 <col:131> '_Bool' lvalue Var 0x565360a3b298 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x565360a40f98 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x565360a40f80 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x565360a40d90 <col:148> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x565360a40f60 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x565360a40f30 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x565360a40e50 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x565360a40e08 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x565360a40df0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x565360a40db0 <col:166> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x565360a40e38 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x565360a40e20 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x565360a40dd0 <col:184> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x565360a40ee8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x565360a40ea0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x565360a40e70 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x565360a40f18 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x565360a40f00 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x565360a40ec8 <col:212> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x565360a41670 <line:788:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x565360a410c8 <col:3> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x565360a41658 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x565360a41628 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x565360a415e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565360a415c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565360a410e8 <col:20> '_Bool' lvalue Var 0x565360a3b670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x565360a41610 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565360a415f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565360a41108 <col:36> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x565360a415a8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x565360a41578 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x565360a41318 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x565360a41238 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x565360a41160 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x565360a41148 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x565360a41128 <col:55> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x565360a41218 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x565360a411b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x565360a41198 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x565360a41178 <col:74> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x565360a41200 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x565360a411e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x565360a411c8 <col:93> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x565360a412f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x565360a41290 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x565360a41278 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x565360a41258 <col:112> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x565360a412e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x565360a412c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x565360a412a8 <col:131> '_Bool' lvalue Var 0x565360a3b298 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x565360a41560 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x565360a41548 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x565360a41338 <col:148> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x565360a41528 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x565360a414f8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x565360a413f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x565360a413b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x565360a41398 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x565360a41358 <col:166> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x565360a413e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x565360a413c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x565360a41378 <col:184> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x565360a414c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x565360a41448 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x565360a41418 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x565360a414e0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x565360a414a0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x565360a41470 <col:219> 'int' 0
|   |-BinaryOperator 0x565360a41c38 <line:789:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x565360a41690 <col:3> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x565360a41c20 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x565360a41bf0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x565360a41ba8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565360a41b90 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565360a416b0 <col:20> '_Bool' lvalue Var 0x565360a3b670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x565360a41bd8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565360a41bc0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565360a416d0 <col:36> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x565360a41b70 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x565360a41b20 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x565360a418e0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x565360a41800 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x565360a41728 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x565360a41710 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x565360a416f0 <col:55> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x565360a417e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x565360a41778 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x565360a41760 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x565360a41740 <col:74> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x565360a417c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x565360a417b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x565360a41790 <col:93> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x565360a418c0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x565360a41858 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x565360a41840 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x565360a41820 <col:112> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x565360a418a8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x565360a41890 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x565360a41870 <col:131> '_Bool' lvalue Var 0x565360a3b298 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x565360a41b08 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x565360a41af0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x565360a41900 <col:148> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x565360a41ad0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x565360a41aa0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x565360a419c0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x565360a41978 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x565360a41960 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x565360a41920 <col:166> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x565360a419a8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x565360a41990 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x565360a41940 <col:184> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x565360a41a58 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x565360a41a10 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x565360a419e0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x565360a41a88 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x565360a41a70 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x565360a41a38 <col:212> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x565360a42200 <line:790:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x565360a41c58 <col:3> '_Bool' lvalue Var 0x565360a3b298 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x565360a421e8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x565360a421b8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x565360a42170 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565360a42158 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565360a41c78 <col:20> '_Bool' lvalue Var 0x565360a3b670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x565360a421a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x565360a42188 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x565360a41c98 <col:36> '_Bool' lvalue Var 0x565360a3b298 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x565360a42138 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x565360a42108 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x565360a41ea8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x565360a41dc8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x565360a41cf0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x565360a41cd8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x565360a41cb8 <col:55> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x565360a41da8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x565360a41d40 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x565360a41d28 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x565360a41d08 <col:74> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x565360a41d90 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x565360a41d78 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x565360a41d58 <col:93> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x565360a41e88 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x565360a41e20 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x565360a41e08 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x565360a41de8 <col:112> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x565360a41e70 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x565360a41e58 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x565360a41e38 <col:131> '_Bool' lvalue Var 0x565360a3b298 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x565360a420f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x565360a420d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x565360a41ec8 <col:148> '_Bool' lvalue Var 0x565360a3b298 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x565360a420b8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x565360a42088 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x565360a41f88 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x565360a41f40 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x565360a41f28 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x565360a41ee8 <col:166> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x565360a41f70 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x565360a41f58 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x565360a41f08 <col:184> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x565360a42058 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x565360a41fd8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x565360a41fa8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x565360a42070 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x565360a42030 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x565360a42000 <col:219> 'int' 0
|   |-BinaryOperator 0x565360a42278 <line:791:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x565360a42220 <col:3> 'int' lvalue Var 0x565360a3a6c0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x565360a42260 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x565360a42240 <col:25> 'int' lvalue Var 0x565360a3adc0 'z' 'int'
|   |-BinaryOperator 0x565360a423a8 <line:792:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x565360a42298 <col:3> 'int' lvalue Var 0x565360a3adc0 'z' 'int'
|   | `-ConditionalOperator 0x565360a42378 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x565360a42330 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x565360a42318 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x565360a422b8 <col:7> '_Bool' lvalue Var 0x565360a3ae58 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x565360a42348 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x565360a422d8 <col:25> 'int' lvalue Var 0x565360a3aed8 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x565360a42360 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x565360a422f8 <col:37> 'int' lvalue Var 0x565360a3adc0 'z' 'int'
|   |-BinaryOperator 0x565360a42440 <line:793:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x565360a423c8 <col:3> '_Bool' lvalue Var 0x565360a3ae58 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x565360a42418 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x565360a423e8 <col:28> 'int' 0
|   |-CallExpr 0x565360a42498 <line:794:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565360a42480 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a42460 <col:3> 'void ()' Function 0x5653609e0f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x565360a424f0 <line:795:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565360a424d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a424b8 <col:3> 'void ()' Function 0x5653609e0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x565360a42568 <line:796:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x565360a42510 <col:3> 'int' lvalue Var 0x565360a3a7e0 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x565360a42550 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x565360a42530 <col:25> 'int' lvalue Var 0x565360a3a900 'a' 'int'
|   |-CallExpr 0x565360a425c0 <line:797:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565360a425a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a42588 <col:3> 'void ()' Function 0x5653609e0f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x565360a42618 <line:798:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565360a42600 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a425e0 <col:3> 'void ()' Function 0x5653609e0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x565360a42900 <line:799:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x565360a42638 <col:3> 'int' lvalue Var 0x565360a3adc0 'z' 'int'
|   | `-ConditionalOperator 0x565360a428d0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x565360a426f8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x565360a426b0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x565360a42698 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x565360a42658 <col:7> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x565360a426e0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x565360a426c8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x565360a42678 <col:25> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x565360a428b8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x565360a42718 <col:42> 'int' lvalue Var 0x565360a3b410 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x565360a42898 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x565360a42868 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x565360a427d8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x565360a42790 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x565360a42778 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x565360a42738 <col:55> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x565360a427c0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x565360a427a8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x565360a42758 <col:73> '_Bool' lvalue Var 0x565360a3b298 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x565360a42838 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x565360a427f8 <col:90> 'int' lvalue Var 0x565360a3b508 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x565360a42850 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x565360a42818 <col:102> 'int' lvalue Var 0x565360a3adc0 'z' 'int'
|   |-BinaryOperator 0x565360a42b08 <line:800:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x565360a42920 <col:3> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x565360a42af0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x565360a42ac0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x565360a429e0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x565360a42998 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x565360a42980 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x565360a42940 <col:20> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x565360a429c8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x565360a429b0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x565360a42960 <col:38> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x565360a42a78 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x565360a42a30 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x565360a42a00 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x565360a42aa8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x565360a42a90 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x565360a42a58 <col:66> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x565360a42e08 <line:801:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x565360a42b28 <col:3> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x565360a42df0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x565360a42dc0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x565360a42ce0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x565360a42c00 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x565360a42bb8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x565360a42ba0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x565360a42b48 <col:20> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x565360a42be8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x565360a42bd0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x565360a42b80 <col:38> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x565360a42cc0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x565360a42c78 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x565360a42c60 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x565360a42c20 <col:56> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x565360a42ca8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x565360a42c90 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x565360a42c40 <col:74> '_Bool' lvalue Var 0x565360a3b298 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x565360a42d78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x565360a42d30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x565360a42d00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x565360a42da8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x565360a42d90 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x565360a42d58 <col:102> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x565360a43010 <line:802:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x565360a42e28 <col:3> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x565360a42ff8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x565360a42fc8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x565360a42ee8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x565360a42ea0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x565360a42e88 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x565360a42e48 <col:20> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x565360a42ed0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x565360a42eb8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x565360a42e68 <col:38> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x565360a42f80 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x565360a42f38 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x565360a42f08 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x565360a42fb0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x565360a42f98 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x565360a42f60 <col:66> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x565360a432f8 <line:803:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x565360a43030 <col:3> '_Bool' lvalue Var 0x565360a3b298 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x565360a432e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x565360a432b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x565360a431d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x565360a430f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x565360a430a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x565360a43090 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x565360a43050 <col:20> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x565360a430d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x565360a430c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x565360a43070 <col:38> '_Bool' lvalue Var 0x565360a3b0b8 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x565360a431b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x565360a43168 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x565360a43150 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x565360a43110 <col:56> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x565360a43198 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x565360a43180 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x565360a43130 <col:74> '_Bool' lvalue Var 0x565360a3b298 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x565360a43268 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x565360a43220 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x565360a431f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x565360a43298 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x565360a43280 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x565360a43248 <col:102> '_Bool' lvalue Var 0x565360a3b298 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x565360a43350 <line:804:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565360a43338 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a43318 <col:3> 'void ()' Function 0x5653609e0f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x565360a433a8 <line:805:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x565360a43390 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a43370 <col:3> 'void ()' Function 0x5653609e0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x565360a43460 <line:806:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x565360a433c8 <col:3> 'int' lvalue Var 0x565360a3a120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x565360a43440 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x565360a43428 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x565360a433e8 <col:22> 'int' lvalue Var 0x565360a3a120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x565360a43408 <col:41> 'int' 1
|   |-CallExpr 0x565360a434b8 <line:807:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x565360a434a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x565360a43480 <col:3> 'void ()' Function 0x5653609e0f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x565360a43530 <line:808:3, col:36>
|     `-CallExpr 0x565360a43510 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x565360a434f8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x565360a434d8 <col:10> 'void *(void)' Function 0x5653609e0958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x565360a436c0 prev 0x565360a39e68 <line:810:1, line:812:1> line:810:6 fence 'void ()'
| `-CompoundStmt 0x565360a43760 <line:811:1, line:812:1>
|-FunctionDecl 0x565360a43790 prev 0x565360a39f28 <line:813:1, line:815:1> line:813:6 isync 'void ()'
| `-CompoundStmt 0x565360a43830 <line:814:1, line:815:1>
|-FunctionDecl 0x565360a43860 prev 0x565360a39fe8 <line:816:1, line:818:1> line:816:6 lwfence 'void ()'
| `-CompoundStmt 0x565360a43900 <line:817:1, line:818:1>
`-FunctionDecl 0x565360a43968 <line:819:1, line:843:1> line:819:5 main 'int ()'
  `-CompoundStmt 0x565360a45780 <line:820:1, line:843:1>
    |-DeclStmt 0x565360a43a80 <line:821:3, col:16>
    | `-VarDecl 0x565360a43a18 <col:3, col:13> col:13 used t49 'pthread_t':'unsigned long'
    |-CallExpr 0x565360a43ca8 <line:822:3, col:52> 'int'
    | |-ImplicitCastExpr 0x565360a43c90 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x565360a43a98 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x565360a21488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x565360a43ad8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x565360a43ab8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x565360a43a18 't49' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x565360a43ce8 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x565360a43b50 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x565360a43b28 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x565360a43af0 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x565360a43d00 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x565360a43b90 <col:37> 'void *(void *)' Function 0x565360a3b788 'P0' 'void *(void *)'
    | `-ParenExpr 0x565360a43c10 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x565360a43be8 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x565360a43bb0 <col:50> 'int' 0
    |-DeclStmt 0x565360a43d90 <line:823:3, col:16>
    | `-VarDecl 0x565360a43d28 <col:3, col:13> col:13 used t50 'pthread_t':'unsigned long'
    |-CallExpr 0x565360a43f38 <line:824:3, col:52> 'int'
    | |-ImplicitCastExpr 0x565360a43f20 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x565360a43da8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x565360a21488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x565360a43de8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x565360a43dc8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x565360a43d28 't50' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x565360a43f78 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x565360a43e60 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x565360a43e38 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x565360a43e00 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x565360a43f90 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x565360a43e80 <col:37> 'void *(void *)' Function 0x565360a3c0e8 'P1' 'void *(void *)'
    | `-ParenExpr 0x565360a43f00 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x565360a43ed8 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x565360a43ea0 <col:50> 'int' 0
    |-DeclStmt 0x565360a44020 <line:825:3, col:16>
    | `-VarDecl 0x565360a43fb8 <col:3, col:13> col:13 used t51 'pthread_t':'unsigned long'
    |-CallExpr 0x565360a441c8 <line:826:3, col:52> 'int'
    | |-ImplicitCastExpr 0x565360a441b0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x565360a44038 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x565360a21488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x565360a44078 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x565360a44058 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x565360a43fb8 't51' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x565360a44208 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x565360a440f0 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x565360a440c8 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x565360a44090 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x565360a44220 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x565360a44110 <col:37> 'void *(void *)' Function 0x565360a3f2a8 'P2' 'void *(void *)'
    | `-ParenExpr 0x565360a44190 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x565360a44168 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x565360a44130 <col:50> 'int' 0
    |-CallExpr 0x565360a44270 <line:827:3, col:27> 'void'
    | `-ImplicitCastExpr 0x565360a44258 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x565360a44238 <col:3> 'void ()' Function 0x5653609e0e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x565360a44340 <line:828:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x565360a44290 <col:3> '_Bool' lvalue Var 0x565360a3a998 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x565360a44328 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x565360a44308 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x565360a442f0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x565360a442b0 <col:21> 'int' lvalue Var 0x565360a3a120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x565360a442d0 <col:41> 'int' 3
    |-CallExpr 0x565360a44398 <line:829:3, col:25> 'void'
    | `-ImplicitCastExpr 0x565360a44380 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x565360a44360 <col:3> 'void ()' Function 0x5653609e0f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x565360a44410 <line:830:3, col:36> 'void'
    | |-ImplicitCastExpr 0x565360a443f8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x565360a443b8 <col:3> 'void (int)' Function 0x5653609e0790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x565360a44450 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x565360a44438 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x565360a443d8 <col:21> '_Bool' lvalue Var 0x565360a3a998 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x565360a444a0 <line:831:3, col:27> 'void'
    | `-ImplicitCastExpr 0x565360a44488 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x565360a44468 <col:3> 'void ()' Function 0x5653609e0e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x565360a44788 <line:832:3, col:103> 'int' '='
    | |-DeclRefExpr 0x565360a444c0 <col:3> 'int' lvalue Var 0x565360a3adc0 'z' 'int'
    | `-ConditionalOperator 0x565360a44758 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x565360a44580 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x565360a44538 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x565360a44520 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x565360a444e0 <col:7> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x565360a44568 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x565360a44550 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x565360a44500 <col:25> '_Bool' lvalue Var 0x565360a3af50 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x565360a44740 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x565360a445a0 <col:42> 'int' lvalue Var 0x565360a3b410 'z$w_buff0' 'int'
    |   `-ParenExpr 0x565360a44720 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x565360a446f0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x565360a44660 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x565360a44618 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x565360a44600 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x565360a445c0 <col:55> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x565360a44648 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x565360a44630 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x565360a445e0 <col:73> '_Bool' lvalue Var 0x565360a3b130 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x565360a446c0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x565360a44680 <col:90> 'int' lvalue Var 0x565360a3b508 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x565360a446d8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x565360a446a0 <col:102> 'int' lvalue Var 0x565360a3adc0 'z' 'int'
    |-BinaryOperator 0x565360a44990 <line:833:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x565360a447a8 <col:3> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x565360a44978 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x565360a44948 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x565360a44868 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x565360a44820 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x565360a44808 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x565360a447c8 <col:20> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x565360a44850 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x565360a44838 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x565360a447e8 <col:38> '_Bool' lvalue Var 0x565360a3af50 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x565360a44900 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x565360a448b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x565360a44888 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x565360a44930 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x565360a44918 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x565360a448e0 <col:66> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x565360a44c88 <line:834:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x565360a449b0 <col:3> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x565360a44c70 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x565360a44c40 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x565360a44b50 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x565360a44a70 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x565360a44a28 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x565360a44a10 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x565360a449d0 <col:20> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x565360a44a58 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x565360a44a40 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x565360a449f0 <col:38> '_Bool' lvalue Var 0x565360a3af50 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x565360a44b30 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x565360a44ae8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x565360a44ad0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x565360a44a90 <col:56> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x565360a44b18 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x565360a44b00 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x565360a44ab0 <col:74> '_Bool' lvalue Var 0x565360a3b130 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x565360a44bf8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x565360a44bb0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x565360a44b70 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x565360a44c28 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x565360a44c10 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x565360a44bd8 <col:102> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x565360a44e90 <line:835:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x565360a44ca8 <col:3> '_Bool' lvalue Var 0x565360a3af50 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x565360a44e78 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x565360a44e48 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x565360a44d68 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x565360a44d20 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x565360a44d08 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x565360a44cc8 <col:20> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x565360a44d50 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x565360a44d38 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x565360a44ce8 <col:38> '_Bool' lvalue Var 0x565360a3af50 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x565360a44e00 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x565360a44db8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x565360a44d88 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x565360a44e30 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x565360a44e18 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x565360a44de0 <col:66> '_Bool' lvalue Var 0x565360a3af50 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x565360a45178 <line:836:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x565360a44eb0 <col:3> '_Bool' lvalue Var 0x565360a3b130 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x565360a45160 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x565360a45130 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x565360a45050 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x565360a44f70 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x565360a44f28 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x565360a44f10 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x565360a44ed0 <col:20> '_Bool' lvalue Var 0x565360a3b488 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x565360a44f58 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x565360a44f40 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x565360a44ef0 <col:38> '_Bool' lvalue Var 0x565360a3af50 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x565360a45030 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x565360a44fe8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x565360a44fd0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x565360a44f90 <col:56> '_Bool' lvalue Var 0x565360a3b580 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x565360a45018 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x565360a45000 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x565360a44fb0 <col:74> '_Bool' lvalue Var 0x565360a3b130 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x565360a450e8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x565360a450a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x565360a45070 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x565360a45118 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x565360a45100 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x565360a450c8 <col:102> '_Bool' lvalue Var 0x565360a3b130 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x565360a451d0 <line:837:3, col:25> 'void'
    | `-ImplicitCastExpr 0x565360a451b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x565360a45198 <col:3> 'void ()' Function 0x5653609e0f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x565360a45228 <line:838:3, col:27> 'void'
    | `-ImplicitCastExpr 0x565360a45210 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x565360a451f0 <col:3> 'void ()' Function 0x5653609e0e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x565360a45628 <line:839:3, col:187> '_Bool' '='
    | |-DeclRefExpr 0x565360a45248 <col:3> '_Bool' lvalue Var 0x565360a3aa10 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x565360a45610 <col:21, col:187> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x565360a455f8 <col:21, col:187> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x565360a455d8 <col:22, col:187> 'int'
    |       `-BinaryOperator 0x565360a455b8 <col:23, col:186> 'int' '&&'
    |         |-BinaryOperator 0x565360a45520 <col:23, col:158> 'int' '&&'
    |         | |-BinaryOperator 0x565360a45488 <col:23, col:130> 'int' '&&'
    |         | | |-BinaryOperator 0x565360a453f0 <col:23, col:102> 'int' '&&'
    |         | | | |-BinaryOperator 0x565360a45358 <col:23, col:74> 'int' '&&'
    |         | | | | |-BinaryOperator 0x565360a452c0 <col:23, col:46> 'int' '=='
    |         | | | | | |-ImplicitCastExpr 0x565360a452a8 <col:23> 'int' <LValueToRValue>
    |         | | | | | | `-DeclRefExpr 0x565360a45268 <col:23> 'int' lvalue Var 0x565360a3a240 '__unbuffered_p0_EAX' 'int'
    |         | | | | | `-IntegerLiteral 0x565360a45288 <col:46> 'int' 1
    |         | | | | `-BinaryOperator 0x565360a45338 <col:51, col:74> 'int' '=='
    |         | | | |   |-ImplicitCastExpr 0x565360a45320 <col:51> 'int' <LValueToRValue>
    |         | | | |   | `-DeclRefExpr 0x565360a452e0 <col:51> 'int' lvalue Var 0x565360a3a360 '__unbuffered_p0_EBX' 'int'
    |         | | | |   `-IntegerLiteral 0x565360a45300 <col:74> 'int' 0
    |         | | | `-BinaryOperator 0x565360a453d0 <col:79, col:102> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x565360a453b8 <col:79> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x565360a45378 <col:79> 'int' lvalue Var 0x565360a3a480 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x565360a45398 <col:102> 'int' 1
    |         | | `-BinaryOperator 0x565360a45468 <col:107, col:130> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x565360a45450 <col:107> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x565360a45410 <col:107> 'int' lvalue Var 0x565360a3a5a0 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x565360a45430 <col:130> 'int' 0
    |         | `-BinaryOperator 0x565360a45500 <col:135, col:158> 'int' '=='
    |         |   |-ImplicitCastExpr 0x565360a454e8 <col:135> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x565360a454a8 <col:135> 'int' lvalue Var 0x565360a3a6c0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x565360a454c8 <col:158> 'int' 1
    |         `-BinaryOperator 0x565360a45598 <col:163, col:186> 'int' '=='
    |           |-ImplicitCastExpr 0x565360a45580 <col:163> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x565360a45540 <col:163> 'int' lvalue Var 0x565360a3a7e0 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x565360a45560 <col:186> 'int' 0
    |-CallExpr 0x565360a45680 <line:840:3, col:25> 'void'
    | `-ImplicitCastExpr 0x565360a45668 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x565360a45648 <col:3> 'void ()' Function 0x5653609e0f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x565360a456f8 <line:841:3, col:36> 'void'
    | |-ImplicitCastExpr 0x565360a456e0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x565360a456a0 <col:3> 'void (int)' Function 0x5653609e0bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x565360a45738 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x565360a45720 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x565360a456c0 <col:21> '_Bool' lvalue Var 0x565360a3aa10 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x565360a45770 <line:842:3, col:10>
      `-IntegerLiteral 0x565360a45750 <col:10> 'int' 0
