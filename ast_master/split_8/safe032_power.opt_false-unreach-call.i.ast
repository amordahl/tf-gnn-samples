TranslationUnitDecl 0x55fcfcd86e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55fcfcd876d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55fcfcd873b0 '__int128'
|-TypedefDecl 0x55fcfcd87748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55fcfcd873d0 'unsigned __int128'
|-TypedefDecl 0x55fcfcd87a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55fcfcd87820 'struct __NSConstantString_tag'
|   `-Record 0x55fcfcd877a0 '__NSConstantString_tag'
|-TypedefDecl 0x55fcfcd87af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55fcfcd87ab0 'char *'
|   `-BuiltinType 0x55fcfcd86eb0 'char'
|-TypedefDecl 0x55fcfcdc6650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55fcfcd87d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55fcfcd87bd0 'struct __va_list_tag'
|     `-Record 0x55fcfcd87b50 '__va_list_tag'
|-FunctionDecl 0x55fcfcdc6770 <./split_8/safe032_power.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55fcfcdc6940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55fcfcdc6870 <col:31> col:34 'int'
|-FunctionDecl 0x55fcfcdc6ab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55fcfcdc6be0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55fcfcdc6d28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55fcfcdc6c98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55fcfcdc6f58 <col:40, col:99>
|   |-IfStmt 0x55fcfcdc6f28 <col:42, col:88>
|   | |-UnaryOperator 0x55fcfcdc6e08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55fcfcdc6df0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55fcfcdc6dd0 <col:47> 'int' lvalue ParmVar 0x55fcfcdc6c98 'expression' 'int'
|   | `-CompoundStmt 0x55fcfcdc6f10 <col:59, col:88>
|   |   `-LabelStmt 0x55fcfcdc6ef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55fcfcdc6e88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55fcfcdc6e70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55fcfcdc6e20 <col:68> 'void () __attribute__((noreturn))' Function 0x55fcfcdc6be0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55fcfcdc6f40 <col:89>
|   `-ReturnStmt 0x55fcfcdc6f48 <col:91>
|-FunctionDecl 0x55fcfcdc6fa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55fcfcdc7060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55fcfcdc73e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55fcfcdc7118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55fcfcdc7198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55fcfcdc7218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55fcfcdc7298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55fcfcdc74a0 <line:11:22>
|-FunctionDecl 0x55fcfcded520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55fcfcdc7510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55fcfcdc7590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55fcfcded350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55fcfcded3d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55fcfcded5e0 <line:14:22>
|-FunctionDecl 0x55fcfcded890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55fcfcded650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55fcfcded6d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55fcfcded750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55fcfcded948 <line:16:22>
|-TypedefDecl 0x55fcfcded9b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55fcfcd86f70 'unsigned char'
|-TypedefDecl 0x55fcfcdeda28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55fcfcd86f90 'unsigned short'
|-TypedefDecl 0x55fcfcdeda98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55fcfcd86fb0 'unsigned int'
|-TypedefDecl 0x55fcfcdedb08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55fcfcd86fd0 'unsigned long'
|-TypedefDecl 0x55fcfcdedb78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55fcfcd86ed0 'signed char'
|-TypedefDecl 0x55fcfcdedbe8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55fcfcd86f70 'unsigned char'
|-TypedefDecl 0x55fcfcdedc58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55fcfcd86ef0 'short'
|-TypedefDecl 0x55fcfcdedcc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55fcfcd86f90 'unsigned short'
|-TypedefDecl 0x55fcfcdedd38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55fcfcd86f10 'int'
|-TypedefDecl 0x55fcfcdedda8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55fcfcd86fb0 'unsigned int'
|-TypedefDecl 0x55fcfcdede18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55fcfcd86f30 'long'
|-TypedefDecl 0x55fcfcdede88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55fcfcd86fd0 'unsigned long'
|-TypedefDecl 0x55fcfcdedef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55fcfcd86f30 'long'
|-TypedefDecl 0x55fcfcdedf68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55fcfcd86fd0 'unsigned long'
|-TypedefDecl 0x55fcfcdedfd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55fcfcd86fd0 'unsigned long'
|-TypedefDecl 0x55fcfcdee048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55fcfcd86fb0 'unsigned int'
|-TypedefDecl 0x55fcfcdee0b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55fcfcd86fb0 'unsigned int'
|-TypedefDecl 0x55fcfcdee128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55fcfcd86fd0 'unsigned long'
|-TypedefDecl 0x55fcfcdee198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55fcfcd86fd0 'unsigned long'
|-TypedefDecl 0x55fcfcdee208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55fcfcd86fb0 'unsigned int'
|-TypedefDecl 0x55fcfcdee278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55fcfcd86fd0 'unsigned long'
|-TypedefDecl 0x55fcfcdee2e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55fcfcd86f30 'long'
|-TypedefDecl 0x55fcfcdee378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55fcfcd86f30 'long'
|-TypedefDecl 0x55fcfcdee3e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55fcfcd86f10 'int'
|-RecordDecl 0x55fcfcdee440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55fcfcdee588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55fcfcdee640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55fcfcdee5e0 'struct __fsid_t' sugar
|   `-RecordType 0x55fcfcdee4c0 '__fsid_t'
|     `-Record 0x55fcfcdee440 ''
|-TypedefDecl 0x55fcfcdee6c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55fcfcd86f30 'long'
|-TypedefDecl 0x55fcfcdee738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55fcfcd86fd0 'unsigned long'
|-TypedefDecl 0x55fcfcdee7a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55fcfcd86fd0 'unsigned long'
|-TypedefDecl 0x55fcfcdee818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55fcfcd86fb0 'unsigned int'
|-TypedefDecl 0x55fcfcdee888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55fcfcd86f30 'long'
|-TypedefDecl 0x55fcfcdee8f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55fcfcd86fb0 'unsigned int'
|-TypedefDecl 0x55fcfcdee968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55fcfcd86f30 'long'
|-TypedefDecl 0x55fcfcdee9d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55fcfcd86f10 'int'
|-TypedefDecl 0x55fcfcdeea48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55fcfcd86f10 'int'
|-TypedefDecl 0x55fcfcdeeab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55fcfcd86f10 'int'
|-TypedefDecl 0x55fcfcdeeb28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55fcfcd87630 'void *'
|   `-BuiltinType 0x55fcfcd86e70 'void'
|-TypedefDecl 0x55fcfcdeeb98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55fcfcd86f30 'long'
|-TypedefDecl 0x55fcfcdeec08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55fcfcd86f30 'long'
|-TypedefDecl 0x55fcfcdeec78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55fcfcd86f30 'long'
|-TypedefDecl 0x55fcfcdeece8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55fcfcd86fd0 'unsigned long'
|-TypedefDecl 0x55fcfcdeed58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55fcfcd86fd0 'unsigned long'
|-TypedefDecl 0x55fcfcdeedc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55fcfcd86fd0 'unsigned long'
|-TypedefDecl 0x55fcfcdeee38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55fcfcd86fd0 'unsigned long'
|-TypedefDecl 0x55fcfcdeeea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55fcfcd86f30 'long'
|-TypedefDecl 0x55fcfcdeef18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55fcfcd86f30 'long'
|-TypedefDecl 0x55fcfcdeef88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55fcfcd86f30 'long'
|-TypedefDecl 0x55fcfcdeeff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55fcfcd86fd0 'unsigned long'
|-TypedefDecl 0x55fcfcdef088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55fcfcdef050 '__off64_t' sugar
|   |-Typedef 0x55fcfcdee378 '__off64_t'
|   `-BuiltinType 0x55fcfcd86f30 'long'
|-TypedefDecl 0x55fcfcdef180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55fcfcdef140 '__quad_t *'
|   `-TypedefType 0x55fcfcdef0e0 '__quad_t' sugar
|     |-Typedef 0x55fcfcdedef8 '__quad_t'
|     `-BuiltinType 0x55fcfcd86f30 'long'
|-TypedefDecl 0x55fcfcdef1f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55fcfcd87ab0 'char *'
|   `-BuiltinType 0x55fcfcd86eb0 'char'
|-TypedefDecl 0x55fcfcdef260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55fcfcd86f30 'long'
|-TypedefDecl 0x55fcfcdef2d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55fcfcd86fb0 'unsigned int'
|-FunctionDecl 0x55fcfcdf0458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55fcfcdf0380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55fcfcdf0768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55fcfcdf0758 <line:73:3, col:34>
|     `-CallExpr 0x55fcfcdf0718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55fcfcdf0700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55fcfcdf0690 <col:10> '<builtin fn type>' Function 0x55fcfcdf0500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55fcfcdf0740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55fcfcdf06b0 <col:29> 'unsigned int' lvalue ParmVar 0x55fcfcdf0380 '__bsx' 'unsigned int'
|-FunctionDecl 0x55fcfcdf0500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55fcfcdf05a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55fcfcdf0610 <col:10> Implicit
| `-ConstAttr 0x55fcfcdf0668 <col:10> Implicit
|-FunctionDecl 0x55fcfcdf08c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55fcfcdf07b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55fcfcdf0bd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55fcfcdf0bc8 <line:78:3, col:34>
|     `-CallExpr 0x55fcfcdf0b88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55fcfcdf0b70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55fcfcdf0af8 <col:10> '<builtin fn type>' Function 0x55fcfcdf0968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55fcfcdf0bb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55fcfcdf0b18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55fcfcdf07b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55fcfcdf0968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55fcfcdf0a08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55fcfcdf0a78 <col:10> Implicit
| `-ConstAttr 0x55fcfcdf0ad0 <col:10> Implicit
|-TypedefDecl 0x55fcfcdf0c08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55fcfcd86fd0 'unsigned long'
|-TypedefDecl 0x55fcfcdf0c98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55fcfcdf0c60 '__time_t' sugar
|   |-Typedef 0x55fcfcdee888 '__time_t'
|   `-BuiltinType 0x55fcfcd86f30 'long'
|-RecordDecl 0x55fcfcdf0cf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55fcfcdf0da8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55fcfcdf0e38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55fcfcdf0ec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55fcfcdf0e90 '__pid_t' sugar
|   |-Typedef 0x55fcfcdee3e8 '__pid_t'
|   `-BuiltinType 0x55fcfcd86f10 'int'
|-RecordDecl 0x55fcfcdf0f20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55fcfcdf0fe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55fcfcdf1030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55fcfcdf10f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55fcfcdf1158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55fcfcd86fd0 'unsigned long'
|-RecordDecl 0x55fcfcdf11b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55fcfcdf2480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55fcfcdf2530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55fcfcdf24d0 'struct cpu_set_t' sugar
|   `-RecordType 0x55fcfcdf1230 'cpu_set_t'
|     `-Record 0x55fcfcdf11b0 ''
|-FunctionDecl 0x55fcfcdf2808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55fcfcdf25d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55fcfcdf26e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55fcfcdf28b8 <line:108:19>
|-FunctionDecl 0x55fcfcdf2a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55fcfcdf2920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55fcfcdf2b38 <col:69>
|-FunctionDecl 0x55fcfcdf2cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55fcfcdf2ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55fcfcdf2d58 <col:64>
|-FunctionDecl 0x55fcfcdf3018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55fcfcdf2dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55fcfcdf2ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55fcfcdf30c8 <line:114:22>
|-FunctionDecl 0x55fcfcdf33b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55fcfcdf3130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55fcfcdf3228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55fcfcdf3460 <col:88>
|-FunctionDecl 0x55fcfcdf3718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55fcfcdf34c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55fcfcdf3548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55fcfcdf35d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55fcfcdf37d0 <col:62>
|-FunctionDecl 0x55fcfcdf3948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55fcfcdf3838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55fcfcdf39f0 <col:63>
|-FunctionDecl 0x55fcfcdf3b18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55fcfcdf3bb8 <col:47>
|-FunctionDecl 0x55fcfcdf3cc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55fcfcdf3c28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55fcfcdf3d68 <col:69>
|-FunctionDecl 0x55fcfcdf3e70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55fcfcdf3dd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55fcfcdf3f18 <col:69>
|-FunctionDecl 0x55fcfcdf41d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55fcfcdf3f80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55fcfcdf40b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55fcfcdf4288 <col:88>
|-TypedefDecl 0x55fcfcdf4318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55fcfcdf42e0 '__clock_t' sugar
|   |-Typedef 0x55fcfcdee6c8 '__clock_t'
|   `-BuiltinType 0x55fcfcd86f30 'long'
|-TypedefDecl 0x55fcfcdf43c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55fcfcdf4370 '__clockid_t' sugar
|   |-Typedef 0x55fcfcdeeab8 '__clockid_t'
|   `-BuiltinType 0x55fcfcd86f10 'int'
|-TypedefDecl 0x55fcfcdf4458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55fcfcdf4420 '__timer_t' sugar
|   |-Typedef 0x55fcfcdeeb28 '__timer_t'
|   `-PointerType 0x55fcfcd87630 'void *'
|     `-BuiltinType 0x55fcfcd86e70 'void'
|-RecordDecl 0x55fcfcdf44b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55fcfcdf4570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55fcfcdf45d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55fcfcdf4640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55fcfcdf46a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55fcfcdf4710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55fcfcdf4778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55fcfcdf47e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55fcfcdf4848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55fcfcdf48b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55fcfcdf4918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55fcfcdf4980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55fcfcdf49d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55fcfcdf4a98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55fcfcdf4b08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55fcfcdf4bb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55fcfcdf4d80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55fcfcdf4e20 <col:45>
|-FunctionDecl 0x55fcfcdf5000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55fcfcdf4ef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55fcfcdf50a8 <col:54>
|-FunctionDecl 0x55fcfcdf52a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55fcfcdf5110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55fcfcdf5188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55fcfcdf5358 <line:158:22>
| `-ConstAttr 0x55fcfcdf5ff0 <col:63>
|-FunctionDecl 0x55fcfcdf61f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55fcfcdf60e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55fcfcdf6298 <col:56>
|-FunctionDecl 0x55fcfcdf6640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55fcfcdf6308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55fcfcdf6380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55fcfcdf6400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55fcfcdf64f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55fcfcdf6700 <col:54>
|-RecordDecl 0x55fcfcdf6758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55fcfcdf6808 parent 0x55fcfcd86e18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55fcfcdf6a68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55fcfcdf6b08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55fcfcdf6b70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55fcfcdf6bd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55fcfcdf6cc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55fcfcdf6de8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55fcfcdf6d90 'struct __locale_struct *'
|   `-ElaboratedType 0x55fcfcdf6d20 'struct __locale_struct' sugar
|     `-RecordType 0x55fcfcdf67e0 'struct __locale_struct'
|       `-Record 0x55fcfcdf6758 '__locale_struct'
|-TypedefDecl 0x55fcfcdf6e98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55fcfcdf6e60 '__locale_t' sugar
|   |-Typedef 0x55fcfcdf6de8 '__locale_t'
|   `-PointerType 0x55fcfcdf6d90 'struct __locale_struct *'
|     `-ElaboratedType 0x55fcfcdf6d20 'struct __locale_struct' sugar
|       `-RecordType 0x55fcfcdf67e0 'struct __locale_struct'
|         `-Record 0x55fcfcdf6758 '__locale_struct'
|-FunctionDecl 0x55fcfcdf82a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55fcfcdf6f08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55fcfcdf6f80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55fcfcdf8028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55fcfcdf80b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55fcfcdf8130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55fcfcdf8368 <col:40>
|-FunctionDecl 0x55fcfcdf8558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55fcfcdf8430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55fcfcdf8600 <col:66>
|-FunctionDecl 0x55fcfcdf8710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55fcfcdf8668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55fcfcdf87b8 <col:69>
|-FunctionDecl 0x55fcfcdf89e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55fcfcdf8820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55fcfcdf88b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55fcfcdf8a98 <col:52>
|-FunctionDecl 0x55fcfcdf8c40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55fcfcdf8b00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55fcfcdf8b90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55fcfcdf8cf0 <col:55>
|-FunctionDecl 0x55fcfcdf8e88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55fcfcdf8d70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55fcfcdf8f30 <col:62>
|-FunctionDecl 0x55fcfcdf9168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55fcfcdf8f98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55fcfcdf9210 <col:60>
|-FunctionDecl 0x55fcfcdf9438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55fcfcdf9290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55fcfcdf9310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55fcfcdf94e8 <col:44>
|-FunctionDecl 0x55fcfcdf96f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55fcfcdf9550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55fcfcdf95d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55fcfcdf97a8 <col:49>
|-VarDecl 0x55fcfcdf98a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55fcfcdf9928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55fcfcdf99a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55fcfcdf9a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55fcfcdf9ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55fcfcdf9c40 <col:42>
|-VarDecl 0x55fcfcdf9cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55fcfcdf9d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55fcfcdf9eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55fcfcdf9da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55fcfcdf9f60 <col:57>
|-FunctionDecl 0x55fcfcdfa0d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55fcfcdf9fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55fcfcdfa178 <col:56>
|-FunctionDecl 0x55fcfcdfa288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55fcfcdfa1f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55fcfcdfa330 <col:59>
|-FunctionDecl 0x55fcfcdfa438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55fcfcdfa3a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55fcfcdfa4e0 <col:48>
| `-ConstAttr 0x55fcfcdfa538 <col:89>
|-FunctionDecl 0x55fcfcdfa798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55fcfcdfa5e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55fcfcdfa678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55fcfcdfa9f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55fcfcdfa888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55fcfcdfa918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55fcfcdfaaa8 <col:88>
|-FunctionDecl 0x55fcfcdfac40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55fcfcdfab10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55fcfcdfaba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55fcfcdfacf0 <col:88>
|-FunctionDecl 0x55fcfcdfaf08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55fcfcdfad58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55fcfcdfade8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55fcfcdfafb8 <line:209:22>
|-FunctionDecl 0x55fcfcdfb358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55fcfcdfb020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55fcfcdfb0e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55fcfcdfb170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55fcfcdfb200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55fcfcdfb658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55fcfcdfb458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55fcfcdfb530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55fcfcdfb708 <col:85>
|-FunctionDecl 0x55fcfcdfbaf8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55fcfcdfb770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55fcfcdfb8a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55fcfcdfb9b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55fcfcdfbbb0 <col:52>
|-FunctionDecl 0x55fcfcdfbd28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55fcfcdfbc18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55fcfcdfbdd0 <col:61>
|-FunctionDecl 0x55fcfcdfc248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55fcfcdfbe38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55fcfcdfbeb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55fcfcdfbfe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55fcfcdfc0f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55fcfcdfc308 <col:62>
|-FunctionDecl 0x55fcfcdfc528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55fcfcdfc370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55fcfcdfc400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55fcfcdfc5d8 <line:222:22>
|-FunctionDecl 0x55fcfcdfc6d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55fcfcdfc640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55fcfcdfc780 <col:65>
|-TypedefDecl 0x55fcfcdfc7f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55fcfcd86fd0 'unsigned long'
|-RecordDecl 0x55fcfcdfc848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55fcfcdfc990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55fcfcdfc9f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55fcfcdfcaa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55fcfcdfca50 'union pthread_attr_t' sugar
|   `-RecordType 0x55fcfcdfc8d0 'union pthread_attr_t'
|     `-Record 0x55fcfcdfc848 'pthread_attr_t'
|-RecordDecl 0x55fcfcdfcb00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55fcfcdfcc78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55fcfcdfccf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55fcfcdfcda0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55fcfcdfcd40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55fcfcdfcb80 'struct __pthread_internal_list'
|     `-Record 0x55fcfcdfcb00 '__pthread_internal_list'
|-RecordDecl 0x55fcfcdfce10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55fcfcdfceb8 parent 0x55fcfcd86e18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55fcfcdfcf90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55fcfcdfcff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55fcfcdfd060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55fcfce01110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55fcfce01178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55fcfce011e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55fcfce01268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55fcfce01320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55fcfce01410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55fcfce01478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55fcfce01600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55fcfce015a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55fcfcdfce90 'pthread_mutex_t'
|     `-Record 0x55fcfcdfce10 ''
|-RecordDecl 0x55fcfce01670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55fcfce017b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55fcfce01818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55fcfce018d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55fcfce01870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55fcfce016f0 'pthread_mutexattr_t'
|     `-Record 0x55fcfce01670 ''
|-RecordDecl 0x55fcfce01940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55fcfce019e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55fcfce01ab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55fcfce01b18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55fcfce01b80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55fcfce01be8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55fcfce01c50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55fcfce01cb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55fcfce01d20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55fcfce01d88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55fcfce01e40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_8/safe032_power.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_8/safe032_power.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55fcfce01f30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55fcfce01f98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55fcfce03130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55fcfce02070 'union pthread_cond_t' sugar
|   `-RecordType 0x55fcfce019c0 'pthread_cond_t'
|     `-Record 0x55fcfce01940 ''
|-RecordDecl 0x55fcfce031a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55fcfce032a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55fcfce03308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55fcfce033c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55fcfce03360 'union pthread_condattr_t' sugar
|   `-RecordType 0x55fcfce03220 'pthread_condattr_t'
|     `-Record 0x55fcfce031a0 ''
|-TypedefDecl 0x55fcfce03448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55fcfcd86fb0 'unsigned int'
|-TypedefDecl 0x55fcfce034b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55fcfcd86f10 'int'
|-RecordDecl 0x55fcfce03510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55fcfce035b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55fcfce03680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55fcfce036e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55fcfce03750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55fcfce037b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55fcfce03820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55fcfce03888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55fcfce038f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55fcfce03958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55fcfce039c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55fcfce03a28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55fcfce03a90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55fcfce03b40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_8/safe032_power.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_8/safe032_power.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55fcfce03be8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55fcfce03c50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55fcfce03da0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55fcfce03d40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55fcfce03590 'pthread_rwlock_t'
|     `-Record 0x55fcfce03510 ''
|-RecordDecl 0x55fcfce03e10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55fcfce03f50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55fcfce03fb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55fcfce04070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55fcfce04010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55fcfce03e90 'pthread_rwlockattr_t'
|     `-Record 0x55fcfce03e10 ''
|-TypedefDecl 0x55fcfce05140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55fcfcd86f14 'volatile int' volatile
|   `-BuiltinType 0x55fcfcd86f10 'int'
|-RecordDecl 0x55fcfce05198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55fcfce052e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55fcfce05348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55fcfce05400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55fcfce053a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55fcfce05220 'pthread_barrier_t'
|     `-Record 0x55fcfce05198 ''
|-RecordDecl 0x55fcfce05470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55fcfce05570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55fcfce055d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55fcfce05690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55fcfce05630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55fcfce054f0 'pthread_barrierattr_t'
|     `-Record 0x55fcfce05470 ''
|-TypedefDecl 0x55fcfce057a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55fcfce05740 'long [8]' 8 
|   `-BuiltinType 0x55fcfcd86f30 'long'
|-EnumDecl 0x55fcfce05800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55fcfce058c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55fcfce05918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55fcfce05968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55fcfce05a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55fcfce05a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55fcfce05ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55fcfce05b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55fcfce05bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55fcfce05b98 <col:26> 'int'
| |   `-DeclRefExpr 0x55fcfce05b78 <col:26> 'int' EnumConstant 0x55fcfce05a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55fcfce05c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55fcfce05c20 <col:29> 'int'
| |   `-DeclRefExpr 0x55fcfce05c00 <col:29> 'int' EnumConstant 0x55fcfce05a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55fcfce05cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55fcfce05ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x55fcfce05c88 <col:30> 'int' EnumConstant 0x55fcfce05ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55fcfce05d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55fcfce05d30 <col:27> 'int'
|     `-DeclRefExpr 0x55fcfce05d10 <col:27> 'int' EnumConstant 0x55fcfce05bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55fcfce05d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55fcfce05e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55fcfce05ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55fcfce05ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x55fcfce05eb8 <col:30> 'int' EnumConstant 0x55fcfce05e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55fcfce05f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55fcfce05fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55fcfce05fb0 <col:29> 'int'
|     `-DeclRefExpr 0x55fcfce05f90 <col:29> 'int' EnumConstant 0x55fcfce05f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55fcfce06018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55fcfce060e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55fcfce06150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55fcfce061a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55fcfce061f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55fcfce062b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55fcfce06308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55fcfce06358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55fcfce063e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55fcfce063c8 <col:31> 'int'
|     `-DeclRefExpr 0x55fcfce063a8 <col:31> 'int' EnumConstant 0x55fcfce062b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55fcfce06430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55fcfce064f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55fcfce06548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55fcfce06598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55fcfce06668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55fcfce066b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55fcfce06708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55fcfce067d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55fcfce06828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55fcfce06878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55fcfce06ab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55fcfce06b20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55fcfce06b88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55fcfce06ca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55fcfce06cf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55fcfce06dc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55fcfce06e18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55fcfce06e68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55fcfce06f38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55fcfce06f88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55fcfce075b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55fcfce07080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55fcfce071a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fcfce073a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55fcfce07420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55fcfce07678 <col:47>
| |-NonNullAttr 0x55fcfce076d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55fcfce07708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55fcfce07830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55fcfce07760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55fcfce07a88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55fcfce078e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55fcfce07968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55fcfce07c58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55fcfce07b48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55fcfce07d00 <col:60>
|-FunctionDecl 0x55fcfce07e50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55fcfce07ef0 <col:54>
| `-ConstAttr 0x55fcfce07f48 <col:95>
|-FunctionDecl 0x55fcfce09990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55fcfce07f80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55fcfce07ff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55fcfce09a40 <line:395:19>
| `-ConstAttr 0x55fcfce09a98 <col:60>
|-FunctionDecl 0x55fcfce09c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55fcfce09b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55fcfce09d10 <col:71>
| `-NonNullAttr 0x55fcfce09d68 <col:112, col:126> 1
|-FunctionDecl 0x55fcfce09e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55fcfce09db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55fcfce09f18 <line:398:22>
| `-NonNullAttr 0x55fcfce09f70 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce0a198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55fcfce09fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55fcfce0a038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55fcfce0a248 <line:401:22>
| `-NonNullAttr 0x55fcfce0a2a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55fcfce0a4a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55fcfce0a2e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fcfce0a368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55fcfce0a558 <line:404:22>
| `-NonNullAttr 0x55fcfce0a5b0 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce0a808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55fcfce0a5f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55fcfce0a6a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55fcfce0a8b8 <line:407:22>
| `-NonNullAttr 0x55fcfce0a910 <col:63, col:80> 1 2
|-FunctionDecl 0x55fcfce0bb68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55fcfce0b9b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fcfce0ba28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55fcfce0bc18 <line:410:22>
| `-NonNullAttr 0x55fcfce0bc70 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce0bea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55fcfce0bcb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fcfce0bd48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55fcfce0bf58 <line:413:22>
| `-NonNullAttr 0x55fcfce0bfb0 <col:63, col:80> 1 2
|-FunctionDecl 0x55fcfce0c1e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55fcfce0bff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fcfce0c088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55fcfce0c298 <col:37>
| `-NonNullAttr 0x55fcfce0c2f0 <col:78, col:95> 1 2
|-FunctionDecl 0x55fcfce0c4d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fcfce0c338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fcfce0c3b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55fcfce0c588 <line:419:22>
| `-NonNullAttr 0x55fcfce0c5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55fcfce0c768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55fcfce0c628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fcfce0c6a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55fcfce0c818 <line:421:22>
| `-NonNullAttr 0x55fcfce0c870 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce0ca38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fcfce0c8b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fcfce0c938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55fcfce0cae8 <line:424:22>
| `-NonNullAttr 0x55fcfce0cb40 <col:63, col:80> 1 2
|-FunctionDecl 0x55fcfce0ccc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55fcfce0cb88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fcfce0cc08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55fcfce0cd78 <line:427:22>
| `-NonNullAttr 0x55fcfce0cdd0 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce0cf78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fcfce0ce18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fcfce0ce98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55fcfce0d028 <line:430:22>
| `-NonNullAttr 0x55fcfce0d080 <col:63, col:80> 1 2
|-FunctionDecl 0x55fcfce0d208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55fcfce0d0c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fcfce0d148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55fcfce0d2b8 <line:432:22>
| `-NonNullAttr 0x55fcfce0d310 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce0d538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55fcfce0d358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fcfce0d3d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55fcfce0d5e8 <line:435:22>
| |-NonNullAttr 0x55fcfce0d640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55fcfce0d678 <col:100> "" ""
|-FunctionDecl 0x55fcfce0d888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55fcfce0d6c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fcfce0d748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55fcfce0d938 <line:438:22>
| |-NonNullAttr 0x55fcfce0d990 <col:63, col:77> 1
| `-DeprecatedAttr 0x55fcfce0d9d8 <col:97> "" ""
|-FunctionDecl 0x55fcfce0dbc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55fcfce0da28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fcfce0daa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55fcfce0dc78 <line:441:22>
| `-NonNullAttr 0x55fcfce0dcd0 <col:63, col:80> 1 2
|-FunctionDecl 0x55fcfce0de50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55fcfce0dd18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fcfce0dd90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55fcfce0df00 <line:444:22>
| `-NonNullAttr 0x55fcfce0df58 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce0e248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55fcfce0dfa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55fcfce0e028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55fcfce0e0a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55fcfce0e300 <line:448:22>
| `-NonNullAttr 0x55fcfce0e358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55fcfce0e608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55fcfce0e3b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55fcfce0e430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55fcfce0e4a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55fcfce0e6c0 <col:43>
| `-NonNullAttr 0x55fcfce0e718 <col:84, col:98> 1
|-FunctionDecl 0x55fcfce0ea20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55fcfce0e768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55fcfce0e7e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55fcfce0e878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55fcfce0ead8 <line:453:22>
| `-NonNullAttr 0x55fcfce0eb30 <col:63, col:77> 3
|-FunctionDecl 0x55fcfce0ee08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55fcfce0eb78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55fcfce0ebf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55fcfce0ec88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55fcfce0eec0 <line:457:22>
| `-NonNullAttr 0x55fcfce0ef18 <col:63, col:80> 2 3
|-FunctionDecl 0x55fcfce0f108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55fcfce0ef68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55fcfce0efe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55fcfce0f1b8 <line:459:22>
|-FunctionDecl 0x55fcfce0f588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55fcfce0f280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55fcfce0f420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55fcfce0f638 <col:52, col:69> 1 2
|-FunctionDecl 0x55fcfce0f7e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55fcfce0f6c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55fcfce0f740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55fcfce0f9f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55fcfce0f8a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55fcfce0f928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55fcfce0fb48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55fcfce0fab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55fcfce0fc88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55fcfce0fd28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55fcfce0fdd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55fcfce0fec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55fcfce0ff30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55fcfce10100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_8/safe032_power.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55fcfce101f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55fcfce102b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55fcfce10250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55fcfce0fdb0 '__pthread_unwind_buf_t'
| |   `-Record 0x55fcfce0fd28 ''
| `-AlignedAttr 0x55fcfce10308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55fcfce10380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55fcfce104e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55fcfce10548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55fcfce105b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55fcfce10618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55fcfce10820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55fcfce10710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55fcfce10a00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55fcfce108d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55fcfce10bc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55fcfce10ab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55fcfce10c68 <line:488:22>
|-RecordDecl 0x55fcfce10cc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55fcfce10fd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55fcfce10e38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55fcfce10eb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55fcfce11088 <col:86>
| `-ReturnsTwiceAttr 0x55fcfce110e0 <col:12> Implicit
|-FunctionDecl 0x55fcfce11408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55fcfce111b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55fcfce112c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55fcfce114b8 <line:494:22>
| `-NonNullAttr 0x55fcfce11510 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce11688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55fcfce11558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55fcfce11730 <line:496:22>
| `-NonNullAttr 0x55fcfce11788 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce11890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55fcfce117d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55fcfce11938 <line:498:22>
| `-NonNullAttr 0x55fcfce11990 <col:52, col:66> 1
|-FunctionDecl 0x55fcfce12ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55fcfce12a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55fcfce12b80 <line:500:22>
| `-NonNullAttr 0x55fcfce12bd8 <col:52, col:66> 1
|-FunctionDecl 0x55fcfce12e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55fcfce12c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55fcfce12cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55fcfce12ec8 <col:36>
| `-NonNullAttr 0x55fcfce12f20 <col:66, col:83> 1 2
|-FunctionDecl 0x55fcfce13020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55fcfce12f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55fcfce130c8 <line:505:22>
| `-NonNullAttr 0x55fcfce13120 <col:52, col:66> 1
|-FunctionDecl 0x55fcfce133b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fcfce131d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55fcfce13250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55fcfce13468 <line:509:22>
| `-NonNullAttr 0x55fcfce134c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55fcfce13788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55fcfce13508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55fcfce13588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55fcfce13608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55fcfce13840 <line:513:22>
| `-NonNullAttr 0x55fcfce13898 <col:63, col:80> 1 3
|-FunctionDecl 0x55fcfce13a30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55fcfce138e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55fcfce13ad8 <line:515:22>
| `-NonNullAttr 0x55fcfce13b30 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce13d18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55fcfce13be0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55fcfce13dc0 <line:517:22>
| `-NonNullAttr 0x55fcfce13e18 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce13f20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55fcfce13e68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55fcfce13fc8 <line:519:22>
| `-NonNullAttr 0x55fcfce14020 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce14248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fcfce14068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55fcfce140e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55fcfce142f8 <line:523:22>
| `-NonNullAttr 0x55fcfce14350 <col:63, col:80> 1 2
|-FunctionDecl 0x55fcfce14558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55fcfce14398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55fcfce14418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55fcfce14608 <line:526:22>
| `-NonNullAttr 0x55fcfce14660 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce14808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fcfce146a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55fcfce14728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55fcfce148b8 <line:529:22>
| `-NonNullAttr 0x55fcfce14910 <col:63, col:80> 1 2
|-FunctionDecl 0x55fcfce14b00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55fcfce14958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55fcfce14a40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55fcfce14bb0 <line:531:22>
| `-NonNullAttr 0x55fcfce14c08 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce14db8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fcfce14c58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55fcfce14cd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55fcfce14e68 <line:535:22>
| `-NonNullAttr 0x55fcfce14ec0 <col:63, col:80> 1 2
|-FunctionDecl 0x55fcfce15048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55fcfce14f08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55fcfce14f88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55fcfce150f8 <line:538:22>
| `-NonNullAttr 0x55fcfce15150 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce152f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fcfce15198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55fcfce15218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55fcfce153a8 <line:542:22>
| `-NonNullAttr 0x55fcfce15400 <col:63, col:80> 1 2
|-FunctionDecl 0x55fcfce15588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55fcfce15448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55fcfce154c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55fcfce15638 <line:545:22>
| `-NonNullAttr 0x55fcfce15690 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce15878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55fcfce156d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55fcfce15758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55fcfce15928 <line:548:22>
| `-NonNullAttr 0x55fcfce15980 <col:63, col:80> 1 2
|-FunctionDecl 0x55fcfce16b38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55fcfce159c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55fcfce16a78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55fcfce16be8 <line:551:22>
| `-NonNullAttr 0x55fcfce16c40 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce16f78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55fcfce16d20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55fcfce16e30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55fcfce17028 <col:29>
| `-NonNullAttr 0x55fcfce17080 <col:70, col:84> 1
|-FunctionDecl 0x55fcfce171f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55fcfce170c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55fcfce172a0 <line:556:22>
| `-NonNullAttr 0x55fcfce172f8 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce17400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55fcfce17348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55fcfce174a8 <line:558:22>
| `-NonNullAttr 0x55fcfce17500 <col:52, col:66> 1
|-FunctionDecl 0x55fcfce17600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55fcfce17548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55fcfce176a8 <line:560:19>
| `-NonNullAttr 0x55fcfce17700 <col:49, col:63> 1
|-FunctionDecl 0x55fcfce17938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55fcfce17748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55fcfce177d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55fcfce179e8 <col:39>
| `-NonNullAttr 0x55fcfce17a70 <col:69, col:86> 1 2
|-FunctionDecl 0x55fcfce17b70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55fcfce17ab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55fcfce17c18 <line:565:22>
| `-NonNullAttr 0x55fcfce17c70 <col:52, col:66> 1
|-FunctionDecl 0x55fcfce17d70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55fcfce17cb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55fcfce17e18 <line:567:22>
| `-NonNullAttr 0x55fcfce17e70 <col:52, col:66> 1
|-FunctionDecl 0x55fcfce18028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55fcfce17eb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55fcfce17f48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55fcfce180d8 <col:39>
| `-NonNullAttr 0x55fcfce18130 <col:69, col:86> 1 2
|-FunctionDecl 0x55fcfce18230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55fcfce18178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55fcfce182d8 <line:572:22>
| `-NonNullAttr 0x55fcfce18330 <col:52, col:66> 1
|-FunctionDecl 0x55fcfce18518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55fcfce183e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55fcfce185c0 <line:574:22>
| `-NonNullAttr 0x55fcfce18618 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce18720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55fcfce18668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55fcfce187c8 <line:576:22>
| `-NonNullAttr 0x55fcfce18820 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce18a80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fcfce18868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55fcfce188e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55fcfce18b30 <line:580:22>
| `-NonNullAttr 0x55fcfce18b88 <col:63, col:80> 1 2
|-FunctionDecl 0x55fcfce18d98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55fcfce18bd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55fcfce18c58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55fcfce18e48 <line:583:22>
| `-NonNullAttr 0x55fcfce18ea0 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce19048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fcfce18ee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55fcfce18f68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55fcfce190f8 <line:587:22>
| `-NonNullAttr 0x55fcfce19150 <col:63, col:80> 1 2
|-FunctionDecl 0x55fcfce192d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55fcfce19198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55fcfce19218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55fcfce19388 <col:36>
| `-NonNullAttr 0x55fcfce193e0 <col:77, col:91> 1
|-FunctionDecl 0x55fcfce19718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55fcfce194c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55fcfce195d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55fcfce197c8 <line:592:22>
| `-NonNullAttr 0x55fcfce19820 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce19998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55fcfce19868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55fcfce19a40 <line:594:22>
| `-NonNullAttr 0x55fcfce19ac0 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce19bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55fcfce19b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55fcfce19c68 <line:596:22>
| `-NonNullAttr 0x55fcfce19cc0 <col:52, col:66> 1
|-FunctionDecl 0x55fcfce19dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55fcfce19d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55fcfce19e68 <line:598:22>
| `-NonNullAttr 0x55fcfce19ec0 <col:52, col:66> 1
|-FunctionDecl 0x55fcfce1a0e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55fcfce19f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55fcfce19f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55fcfce1a198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55fcfce1a4c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55fcfce1a218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55fcfce1a290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55fcfce1a320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55fcfce1a580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55fcfce1a798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55fcfce1a660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55fcfce1a840 <line:607:22>
| `-NonNullAttr 0x55fcfce1a898 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce1a9a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55fcfce1a8e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55fcfce1aa48 <line:609:22>
| `-NonNullAttr 0x55fcfce1aad0 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce1acf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fcfce1ab18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55fcfce1ab98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55fcfce1ada8 <line:613:22>
| `-NonNullAttr 0x55fcfce1ae00 <col:63, col:80> 1 2
|-FunctionDecl 0x55fcfce1b008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55fcfce1ae48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55fcfce1aec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55fcfce1b0b8 <col:37>
| `-NonNullAttr 0x55fcfce1b110 <col:78, col:92> 1
|-FunctionDecl 0x55fcfce1b328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55fcfce1b158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55fcfce1b200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55fcfce1b3d8 <line:619:22>
| `-NonNullAttr 0x55fcfce1b430 <col:63, col:80> 1 2
|-FunctionDecl 0x55fcfce1b5f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55fcfce1b478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55fcfce1b4f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55fcfce1b6a8 <line:622:22>
| `-NonNullAttr 0x55fcfce1b700 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce1b9a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55fcfce1b7e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55fcfce1b860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55fcfce1ba58 <line:624:22>
| `-NonNullAttr 0x55fcfce1bae0 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce1bc58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55fcfce1bb28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55fcfce1bd00 <line:626:22>
| `-NonNullAttr 0x55fcfce1bd58 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce1be60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55fcfce1bda8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55fcfce1bf08 <line:628:22>
| `-NonNullAttr 0x55fcfce1bf60 <col:52, col:66> 1
|-FunctionDecl 0x55fcfce1c060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55fcfce1bfa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55fcfce1c108 <line:630:22>
| `-NonNullAttr 0x55fcfce1c160 <col:52, col:66> 1
|-FunctionDecl 0x55fcfce1c260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55fcfce1c1a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55fcfce1c308 <line:632:22>
| `-NonNullAttr 0x55fcfce1c360 <col:52, col:66> 1
|-FunctionDecl 0x55fcfce1c738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55fcfce1c440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55fcfce1c550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55fcfce1c5d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55fcfce1c7f0 <line:636:22>
| `-NonNullAttr 0x55fcfce1c848 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce1c9c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55fcfce1c898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55fcfce1ca70 <line:638:22>
| `-NonNullAttr 0x55fcfce1db00 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce1dc00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55fcfce1db48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55fcfce1dca8 <line:640:22>
| `-NonNullAttr 0x55fcfce1dd00 <col:52, col:66> 1
|-FunctionDecl 0x55fcfce1dee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55fcfce1ddb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55fcfce1df90 <line:642:22>
| `-NonNullAttr 0x55fcfce1dfe8 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce1e0f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55fcfce1e038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55fcfce1e198 <line:644:22>
| `-NonNullAttr 0x55fcfce1e1f0 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce1e418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55fcfce1e238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55fcfce1e2b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55fcfce1e4c8 <line:648:22>
| `-NonNullAttr 0x55fcfce1e520 <col:63, col:80> 1 2
|-FunctionDecl 0x55fcfce1e728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55fcfce1e568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55fcfce1e5e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55fcfce1e7d8 <line:651:22>
| `-NonNullAttr 0x55fcfce1e830 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce1eb98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55fcfce1e910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55fcfce1ea30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55fcfce1ec48 <line:654:22>
| `-NonNullAttr 0x55fcfce1eca0 <col:63, col:77> 1
|-FunctionDecl 0x55fcfce1edf8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55fcfce1ece8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55fcfce1eea0 <col:69>
|-FunctionDecl 0x55fcfce1f018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55fcfce1ef08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55fcfce1f0c0 <col:72>
|-FunctionDecl 0x55fcfce1f2f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55fcfce1f128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55fcfce1f1d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55fcfce1f3a8 <col:44>
|-FunctionDecl 0x55fcfce1f5c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55fcfce1f410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55fcfce1f488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55fcfce1f678 <line:661:22>
| `-NonNullAttr 0x55fcfce1f6d0 <col:63, col:77> 2
|-FunctionDecl 0x55fcfce1fb30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55fcfce1f7b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55fcfce1f8c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55fcfce1f9d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55fcfce1fbe8 <col:47>
|-FunctionDecl 0x55fcfce1fcf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55fcfce1fc58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55fcfce1fe48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55fcfce1fdb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55fcfce1ffa0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55fcfce1ff08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55fcfce20068 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55fcfce20128 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55fcfce201e8 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55fcfce202a0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55fcfce20320 prev 0x55fcfce202a0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55fcfce20388 <col:24> 'int' 0
|-VarDecl 0x55fcfce203c0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55fcfce20440 prev 0x55fcfce203c0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55fcfce204a8 <col:27> 'int' 0
|-VarDecl 0x55fcfce204e0 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55fcfce20560 prev 0x55fcfce204e0 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55fcfce205c8 <col:27> 'int' 0
|-VarDecl 0x55fcfce205f8 <line:678:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55fcfce20670 <line:679:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55fcfce206f0 <line:680:1, col:5> col:5 used x 'int'
|-VarDecl 0x55fcfce20770 prev 0x55fcfce206f0 <line:681:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55fcfce207d8 <col:9> 'int' 0
|-VarDecl 0x55fcfce20808 <line:682:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x55fcfce20888 <line:683:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x55fcfce20900 <line:684:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x55fcfce20978 <line:685:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x55fcfce209f0 <line:686:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x55fcfce20a68 <line:687:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x55fcfce20b00 <line:688:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x55fcfce20b78 <line:689:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x55fcfce20bf0 <line:690:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x55fcfce20c68 <line:691:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x55fcfce20ce0 <line:692:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x55fcfce20d60 <line:693:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x55fcfce20de0 <line:694:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x55fcfce20e58 <line:695:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x55fcfce20ed8 <line:696:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x55fcfce20f50 <line:697:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x55fcfce20fd0 <line:698:1, col:5> col:5 used y 'int'
|-VarDecl 0x55fcfce21050 prev 0x55fcfce20fd0 <line:699:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55fcfce210b8 <col:9> 'int' 0
|-VarDecl 0x55fcfce210e8 <line:700:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55fcfce21160 <line:701:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55fcfce21278 prev 0x55fcfce1fcf0 <line:702:1, line:731:1> line:702:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55fcfce211e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55fcfce24298 <line:703:1, line:731:1>
|   |-CallExpr 0x55fcfce21388 <line:704:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fcfce21370 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce21320 <col:3> 'void ()' Function 0x55fcfcdc6fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fcfce213e8 <line:705:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55fcfce213a8 <col:3> 'int' lvalue Var 0x55fcfce21050 'y' 'int'
|   | `-IntegerLiteral 0x55fcfce213c8 <col:7> 'int' 2
|   |-CallExpr 0x55fcfce21440 <line:706:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fcfce21428 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce21408 <col:3> 'void ()' Function 0x55fcfcdc7060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fcfce21498 <line:707:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fcfce21480 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce21460 <col:3> 'void ()' Function 0x55fcfcdc6fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55fcfce214f0 <line:708:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fcfce214d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce214b8 <col:3> 'void ()' Function 0x55fcfcdc7060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fcfce21548 <line:709:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fcfce21530 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce21510 <col:3> 'void ()' Function 0x55fcfcdc6fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fcfce21618 <line:710:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce21568 <col:3> '_Bool' lvalue Var 0x55fcfce210e8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55fcfce215f8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55fcfce215e0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55fcfce21588 <col:19> '_Bool (void)' Function 0x55fcfcdc6770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55fcfce216b0 <line:711:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce21638 <col:3> '_Bool' lvalue Var 0x55fcfce21160 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55fcfce21690 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55fcfce21678 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55fcfce21658 <col:19> '_Bool (void)' Function 0x55fcfcdc6770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55fcfce21728 <line:712:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce216d0 <col:3> '_Bool' lvalue Var 0x55fcfce20808 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce21710 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fcfce216f0 <col:21> '_Bool' lvalue Var 0x55fcfce21160 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55fcfce217a0 <line:713:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55fcfce21748 <col:3> 'int' lvalue Var 0x55fcfce20888 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55fcfce21788 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fcfce21768 <col:15> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
|   |-BinaryOperator 0x55fcfce21bf8 <line:714:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55fcfce217c0 <col:3> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
|   | `-ConditionalOperator 0x55fcfce21bc8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55fcfce219d0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55fcfce218f0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55fcfce21818 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55fcfce21800 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55fcfce217e0 <col:8> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55fcfce218d0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55fcfce21868 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55fcfce21850 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55fcfce21830 <col:27> '_Bool' lvalue Var 0x55fcfce20978 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x55fcfce218b8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55fcfce218a0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55fcfce21880 <col:46> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55fcfce219b0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55fcfce21948 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55fcfce21930 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55fcfce21910 <col:65> '_Bool' lvalue Var 0x55fcfce20978 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x55fcfce21998 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55fcfce21980 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55fcfce21960 <col:84> '_Bool' lvalue Var 0x55fcfce20b78 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55fcfce21bb0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fcfce219f0 <col:101> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
|   |   `-ParenExpr 0x55fcfce21b90 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55fcfce21b60 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55fcfce21ab0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55fcfce21a68 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55fcfce21a50 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55fcfce21a10 <col:106> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55fcfce21a98 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55fcfce21a80 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55fcfce21a30 <col:124> '_Bool' lvalue Var 0x55fcfce20978 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55fcfce21b30 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fcfce21ad0 <col:141> 'int' lvalue Var 0x55fcfce20de0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55fcfce21b48 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fcfce21b10 <col:153> 'int' lvalue Var 0x55fcfce20ed8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55fcfce22108 <line:715:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55fcfce21c18 <col:3> 'int' lvalue Var 0x55fcfce20de0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55fcfce220d8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55fcfce220a8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55fcfce22090 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55fcfce21c38 <col:15> '_Bool' lvalue Var 0x55fcfce21160 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55fcfce220c0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fcfce21c58 <col:31> 'int' lvalue Var 0x55fcfce20de0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55fcfce22070 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55fcfce22040 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55fcfce21e68 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55fcfce21d88 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55fcfce21cb0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55fcfce21c98 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55fcfce21c78 <col:45> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55fcfce21d68 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55fcfce21d00 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55fcfce21ce8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55fcfce21cc8 <col:64> '_Bool' lvalue Var 0x55fcfce20978 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55fcfce21d50 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55fcfce21d38 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55fcfce21d18 <col:83> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55fcfce21e48 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55fcfce21de0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55fcfce21dc8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55fcfce21da8 <col:102> '_Bool' lvalue Var 0x55fcfce20978 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55fcfce21e30 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55fcfce21e18 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55fcfce21df8 <col:121> '_Bool' lvalue Var 0x55fcfce20b78 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55fcfce22028 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fcfce21e88 <col:138> 'int' lvalue Var 0x55fcfce20de0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55fcfce22008 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55fcfce21fd8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55fcfce21f48 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55fcfce21f00 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55fcfce21ee8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55fcfce21ea8 <col:151> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55fcfce21f30 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55fcfce21f18 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55fcfce21ec8 <col:169> '_Bool' lvalue Var 0x55fcfce20978 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55fcfce21fa8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55fcfce21f68 <col:186> 'int' lvalue Var 0x55fcfce20de0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55fcfce21fc0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55fcfce21f88 <col:198> 'int' lvalue Var 0x55fcfce20de0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55fcfce22618 <line:716:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55fcfce22128 <col:3> 'int' lvalue Var 0x55fcfce20ed8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55fcfce225e8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55fcfce225b8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55fcfce225a0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55fcfce22148 <col:15> '_Bool' lvalue Var 0x55fcfce21160 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55fcfce225d0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fcfce22168 <col:31> 'int' lvalue Var 0x55fcfce20ed8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55fcfce22580 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55fcfce22550 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55fcfce22378 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55fcfce22298 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55fcfce221c0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55fcfce221a8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55fcfce22188 <col:45> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55fcfce22278 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55fcfce22210 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55fcfce221f8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55fcfce221d8 <col:64> '_Bool' lvalue Var 0x55fcfce20978 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55fcfce22260 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55fcfce22248 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55fcfce22228 <col:83> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55fcfce22358 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55fcfce222f0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55fcfce222d8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55fcfce222b8 <col:102> '_Bool' lvalue Var 0x55fcfce20978 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55fcfce22340 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55fcfce22328 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55fcfce22308 <col:121> '_Bool' lvalue Var 0x55fcfce20b78 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55fcfce22538 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fcfce22398 <col:138> 'int' lvalue Var 0x55fcfce20ed8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55fcfce22518 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55fcfce224e8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55fcfce22458 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55fcfce22410 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55fcfce223f8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55fcfce223b8 <col:151> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55fcfce22440 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55fcfce22428 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55fcfce223d8 <col:169> '_Bool' lvalue Var 0x55fcfce20978 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55fcfce224b8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55fcfce22478 <col:186> 'int' lvalue Var 0x55fcfce20ed8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55fcfce224d0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55fcfce22498 <col:198> 'int' lvalue Var 0x55fcfce20ed8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55fcfce22be8 <line:717:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce22638 <col:3> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce22bd0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fcfce22ba0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55fcfce22b58 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fcfce22b40 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fcfce22658 <col:20> '_Bool' lvalue Var 0x55fcfce21160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fcfce22b88 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fcfce22b70 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fcfce22678 <col:36> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55fcfce22b20 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55fcfce22ac8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55fcfce22888 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55fcfce227a8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55fcfce226d0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55fcfce226b8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55fcfce22698 <col:55> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55fcfce22788 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55fcfce22720 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55fcfce22708 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55fcfce226e8 <col:74> '_Bool' lvalue Var 0x55fcfce20978 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55fcfce22770 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55fcfce22758 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55fcfce22738 <col:93> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55fcfce22868 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55fcfce22800 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55fcfce227e8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55fcfce227c8 <col:112> '_Bool' lvalue Var 0x55fcfce20978 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55fcfce22850 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55fcfce22838 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55fcfce22818 <col:131> '_Bool' lvalue Var 0x55fcfce20b78 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55fcfce22ab0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55fcfce22a98 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fcfce228a8 <col:148> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55fcfce22a78 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55fcfce22a48 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55fcfce22968 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55fcfce22920 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55fcfce22908 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55fcfce228c8 <col:166> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55fcfce22950 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55fcfce22938 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55fcfce228e8 <col:184> '_Bool' lvalue Var 0x55fcfce20978 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55fcfce22a00 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55fcfce229b8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55fcfce22988 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55fcfce22a30 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55fcfce22a18 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55fcfce229e0 <col:212> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55fcfce231b0 <line:718:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce22c08 <col:3> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce23198 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fcfce23168 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55fcfce23120 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fcfce23108 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fcfce22c28 <col:20> '_Bool' lvalue Var 0x55fcfce21160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fcfce23150 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fcfce23138 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fcfce22c48 <col:36> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55fcfce230e8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55fcfce230b8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55fcfce22e58 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55fcfce22d78 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55fcfce22ca0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55fcfce22c88 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55fcfce22c68 <col:55> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55fcfce22d58 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55fcfce22cf0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55fcfce22cd8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55fcfce22cb8 <col:74> '_Bool' lvalue Var 0x55fcfce20978 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55fcfce22d40 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55fcfce22d28 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55fcfce22d08 <col:93> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55fcfce22e38 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55fcfce22dd0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55fcfce22db8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55fcfce22d98 <col:112> '_Bool' lvalue Var 0x55fcfce20978 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55fcfce22e20 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55fcfce22e08 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55fcfce22de8 <col:131> '_Bool' lvalue Var 0x55fcfce20b78 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55fcfce230a0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55fcfce23088 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fcfce22e78 <col:148> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55fcfce23068 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55fcfce23038 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55fcfce22f38 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55fcfce22ef0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55fcfce22ed8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55fcfce22e98 <col:166> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55fcfce22f20 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55fcfce22f08 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55fcfce22eb8 <col:184> '_Bool' lvalue Var 0x55fcfce20978 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55fcfce23008 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55fcfce22f88 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55fcfce22f58 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55fcfce23020 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55fcfce22fe0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55fcfce22fb0 <col:219> 'int' 0
|   |-BinaryOperator 0x55fcfce23758 <line:719:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce231d0 <col:3> '_Bool' lvalue Var 0x55fcfce20978 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce23740 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fcfce23710 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55fcfce236c8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fcfce236b0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fcfce231f0 <col:20> '_Bool' lvalue Var 0x55fcfce21160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fcfce236f8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fcfce236e0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fcfce23210 <col:36> '_Bool' lvalue Var 0x55fcfce20978 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55fcfce23690 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55fcfce23660 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55fcfce23420 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55fcfce23340 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55fcfce23268 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55fcfce23250 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55fcfce23230 <col:55> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55fcfce23320 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55fcfce232b8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55fcfce232a0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55fcfce23280 <col:74> '_Bool' lvalue Var 0x55fcfce20978 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55fcfce23308 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55fcfce232f0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55fcfce232d0 <col:93> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55fcfce23400 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55fcfce23398 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55fcfce23380 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55fcfce23360 <col:112> '_Bool' lvalue Var 0x55fcfce20978 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55fcfce233e8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55fcfce233d0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55fcfce233b0 <col:131> '_Bool' lvalue Var 0x55fcfce20b78 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55fcfce23648 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55fcfce23630 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fcfce23440 <col:148> '_Bool' lvalue Var 0x55fcfce20978 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55fcfce23610 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55fcfce235e0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55fcfce23500 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55fcfce234b8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55fcfce234a0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55fcfce23460 <col:166> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55fcfce234e8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55fcfce234d0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55fcfce23480 <col:184> '_Bool' lvalue Var 0x55fcfce20978 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55fcfce23598 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55fcfce23550 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55fcfce23520 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55fcfce235c8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55fcfce235b0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55fcfce23578 <col:212> '_Bool' lvalue Var 0x55fcfce20978 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55fcfce23d30 <line:720:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce23778 <col:3> '_Bool' lvalue Var 0x55fcfce20b78 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce23d18 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fcfce23ce8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55fcfce23ca0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fcfce23c88 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fcfce23798 <col:20> '_Bool' lvalue Var 0x55fcfce21160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fcfce23cd0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fcfce23cb8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fcfce237b8 <col:36> '_Bool' lvalue Var 0x55fcfce20b78 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55fcfce23c68 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55fcfce23c38 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55fcfce239c8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55fcfce238e8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55fcfce23810 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55fcfce237f8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55fcfce237d8 <col:55> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55fcfce238c8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55fcfce23860 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55fcfce23848 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55fcfce23828 <col:74> '_Bool' lvalue Var 0x55fcfce20978 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55fcfce238b0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55fcfce23898 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55fcfce23878 <col:93> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55fcfce239a8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55fcfce23940 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55fcfce23928 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55fcfce23908 <col:112> '_Bool' lvalue Var 0x55fcfce20978 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55fcfce23990 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55fcfce23978 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55fcfce23958 <col:131> '_Bool' lvalue Var 0x55fcfce20b78 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55fcfce23c20 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55fcfce23c08 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fcfce239e8 <col:148> '_Bool' lvalue Var 0x55fcfce20b78 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55fcfce23be8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55fcfce23bb8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55fcfce23aa8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55fcfce23a60 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55fcfce23a48 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55fcfce23a08 <col:166> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55fcfce23a90 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55fcfce23a78 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55fcfce23a28 <col:184> '_Bool' lvalue Var 0x55fcfce20978 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55fcfce23b88 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55fcfce23af8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55fcfce23ac8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55fcfce23ba0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55fcfce23b60 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55fcfce23b30 <col:219> 'int' 0
|   |-BinaryOperator 0x55fcfce23da8 <line:721:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55fcfce23d50 <col:3> 'int' lvalue Var 0x55fcfce20440 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55fcfce23d90 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fcfce23d70 <col:25> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
|   |-BinaryOperator 0x55fcfce23ed8 <line:722:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55fcfce23dc8 <col:3> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
|   | `-ConditionalOperator 0x55fcfce23ea8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55fcfce23e60 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55fcfce23e48 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55fcfce23de8 <col:7> '_Bool' lvalue Var 0x55fcfce20808 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55fcfce23e78 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fcfce23e08 <col:25> 'int' lvalue Var 0x55fcfce20888 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55fcfce23e90 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55fcfce23e28 <col:37> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
|   |-BinaryOperator 0x55fcfce23f70 <line:723:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce23ef8 <col:3> '_Bool' lvalue Var 0x55fcfce20808 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55fcfce23f48 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55fcfce23f18 <col:28> 'int' 0
|   |-CallExpr 0x55fcfce23fc8 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fcfce23fb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce23f90 <col:3> 'void ()' Function 0x55fcfcdc7060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fcfce24020 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fcfce24008 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce23fe8 <col:3> 'void ()' Function 0x55fcfcdc6fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55fcfce24078 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fcfce24060 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce24040 <col:3> 'void ()' Function 0x55fcfcdc7060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fcfce240d0 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fcfce240b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce24098 <col:3> 'void ()' Function 0x55fcfcdc6fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fcfce24188 <line:728:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55fcfce240f0 <col:3> 'int' lvalue Var 0x55fcfce20320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55fcfce24168 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55fcfce24150 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fcfce24110 <col:22> 'int' lvalue Var 0x55fcfce20320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55fcfce24130 <col:41> 'int' 1
|   |-CallExpr 0x55fcfce241e0 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fcfce241c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce241a8 <col:3> 'void ()' Function 0x55fcfcdc7060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55fcfce24288 <line:730:3, col:36>
|     `-CallExpr 0x55fcfce24268 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55fcfce24250 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55fcfce24200 <col:10> 'void *(void)' Function 0x55fcfcdc6ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55fcfce24430 prev 0x55fcfce1fe48 <line:732:1, line:771:1> line:732:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55fcfce24398 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55fcfce28d70 <line:733:1, line:771:1>
|   |-CallExpr 0x55fcfce24510 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fcfce244f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce244d8 <col:3> 'void ()' Function 0x55fcfcdc6fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fcfce24570 <line:735:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55fcfce24530 <col:3> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
|   | `-IntegerLiteral 0x55fcfce24550 <col:7> 'int' 1
|   |-CallExpr 0x55fcfce245c8 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fcfce245b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce24590 <col:3> 'void ()' Function 0x55fcfcdc7060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fcfce24620 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fcfce24608 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce245e8 <col:3> 'void ()' Function 0x55fcfcdc6fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fcfce24908 <line:738:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55fcfce24640 <col:3> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
|   | `-ConditionalOperator 0x55fcfce248d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55fcfce24700 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55fcfce246b8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55fcfce246a0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55fcfce24660 <col:7> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55fcfce246e8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55fcfce246d0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55fcfce24680 <col:25> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55fcfce248c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fcfce24720 <col:42> 'int' lvalue Var 0x55fcfce20de0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55fcfce248a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55fcfce24870 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55fcfce247e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55fcfce24798 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55fcfce24780 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55fcfce24740 <col:55> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55fcfce247c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55fcfce247b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55fcfce24760 <col:73> '_Bool' lvalue Var 0x55fcfce20bf0 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55fcfce24840 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fcfce24800 <col:90> 'int' lvalue Var 0x55fcfce20ed8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55fcfce24858 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fcfce24820 <col:102> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
|   |-BinaryOperator 0x55fcfce24b10 <line:739:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce24928 <col:3> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce24af8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fcfce24ac8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55fcfce249e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55fcfce249a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55fcfce24988 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55fcfce24948 <col:20> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55fcfce249d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55fcfce249b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55fcfce24968 <col:38> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fcfce24a80 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fcfce24a38 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fcfce24a08 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55fcfce24ab0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fcfce24a98 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fcfce24a60 <col:66> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55fcfce24e08 <line:740:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce24b40 <col:3> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce24df0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fcfce24dc0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55fcfce24ce0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55fcfce24c00 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55fcfce24bb8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55fcfce24ba0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55fcfce24b60 <col:20> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55fcfce24be8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55fcfce24bd0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55fcfce24b80 <col:38> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55fcfce24cc0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55fcfce24c78 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55fcfce24c60 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55fcfce24c20 <col:56> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55fcfce24ca8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55fcfce24c90 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55fcfce24c40 <col:74> '_Bool' lvalue Var 0x55fcfce20bf0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fcfce24d78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fcfce24d30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fcfce24d00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55fcfce24da8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fcfce24d90 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fcfce24d58 <col:102> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55fcfce25010 <line:741:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce24e28 <col:3> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce24ff8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fcfce24fc8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55fcfce24ee8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55fcfce24ea0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55fcfce24e88 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55fcfce24e48 <col:20> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55fcfce24ed0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55fcfce24eb8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55fcfce24e68 <col:38> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fcfce24f80 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fcfce24f38 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fcfce24f08 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55fcfce24fb0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fcfce24f98 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fcfce24f60 <col:66> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55fcfce252f8 <line:742:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce25030 <col:3> '_Bool' lvalue Var 0x55fcfce20bf0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce252e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fcfce252b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55fcfce251d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55fcfce250f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55fcfce250a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55fcfce25090 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55fcfce25050 <col:20> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55fcfce250d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55fcfce250c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55fcfce25070 <col:38> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55fcfce251b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55fcfce25168 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55fcfce25150 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55fcfce25110 <col:56> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55fcfce25198 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55fcfce25180 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55fcfce25130 <col:74> '_Bool' lvalue Var 0x55fcfce20bf0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fcfce25268 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fcfce25220 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fcfce251f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55fcfce25298 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fcfce25280 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fcfce25248 <col:102> '_Bool' lvalue Var 0x55fcfce20bf0 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55fcfce25350 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fcfce25338 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce25318 <col:3> 'void ()' Function 0x55fcfcdc7060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fcfce253a8 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fcfce25390 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce25370 <col:3> 'void ()' Function 0x55fcfcdc6fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fcfce25440 <line:745:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce253c8 <col:3> '_Bool' lvalue Var 0x55fcfce210e8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55fcfce25420 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55fcfce25408 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55fcfce253e8 <col:19> '_Bool (void)' Function 0x55fcfcdc6770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55fcfce254d8 <line:746:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce25460 <col:3> '_Bool' lvalue Var 0x55fcfce21160 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55fcfce254b8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55fcfce254a0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55fcfce25480 <col:19> '_Bool (void)' Function 0x55fcfcdc6770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55fcfce25550 <line:747:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce254f8 <col:3> '_Bool' lvalue Var 0x55fcfce20808 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce25538 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fcfce25518 <col:21> '_Bool' lvalue Var 0x55fcfce21160 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55fcfce255c8 <line:748:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55fcfce25570 <col:3> 'int' lvalue Var 0x55fcfce20888 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55fcfce255b0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fcfce25590 <col:15> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
|   |-BinaryOperator 0x55fcfce25a00 <line:749:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55fcfce255e8 <col:3> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
|   | `-ConditionalOperator 0x55fcfce259d0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55fcfce257f8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55fcfce25718 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55fcfce25640 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55fcfce25628 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55fcfce25608 <col:8> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55fcfce256f8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55fcfce25690 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55fcfce25678 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55fcfce25658 <col:27> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55fcfce256e0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55fcfce256c8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55fcfce256a8 <col:46> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55fcfce257d8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55fcfce25770 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55fcfce25758 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55fcfce25738 <col:65> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55fcfce257c0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55fcfce257a8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55fcfce25788 <col:84> '_Bool' lvalue Var 0x55fcfce20bf0 'x$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55fcfce259b8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fcfce25818 <col:101> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
|   |   `-ParenExpr 0x55fcfce25998 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55fcfce25968 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55fcfce258d8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55fcfce25890 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55fcfce25878 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55fcfce25838 <col:106> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55fcfce258c0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55fcfce258a8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55fcfce25858 <col:124> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55fcfce25938 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fcfce258f8 <col:141> 'int' lvalue Var 0x55fcfce20de0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55fcfce25950 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fcfce25918 <col:153> 'int' lvalue Var 0x55fcfce20ed8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55fcfce25f20 <line:750:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55fcfce25a20 <col:3> 'int' lvalue Var 0x55fcfce20de0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55fcfce25ef0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55fcfce25ec0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55fcfce25ea8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55fcfce25a40 <col:15> '_Bool' lvalue Var 0x55fcfce21160 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55fcfce25ed8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fcfce25a60 <col:31> 'int' lvalue Var 0x55fcfce20de0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55fcfce25e88 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55fcfce25e58 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55fcfce25c80 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55fcfce25ba0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55fcfce25ab8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55fcfce25aa0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55fcfce25a80 <col:45> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55fcfce25b80 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55fcfce25b08 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55fcfce25af0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55fcfce25ad0 <col:64> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55fcfce25b68 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55fcfce25b50 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55fcfce25b20 <col:83> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55fcfce25c60 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55fcfce25bf8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55fcfce25be0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55fcfce25bc0 <col:102> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55fcfce25c48 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55fcfce25c30 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55fcfce25c10 <col:121> '_Bool' lvalue Var 0x55fcfce20bf0 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55fcfce25e40 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fcfce25ca0 <col:138> 'int' lvalue Var 0x55fcfce20de0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55fcfce25e20 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55fcfce25df0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55fcfce25d60 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55fcfce25d18 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55fcfce25d00 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55fcfce25cc0 <col:151> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55fcfce25d48 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55fcfce25d30 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55fcfce25ce0 <col:169> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55fcfce25dc0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55fcfce25d80 <col:186> 'int' lvalue Var 0x55fcfce20de0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55fcfce25dd8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55fcfce25da0 <col:198> 'int' lvalue Var 0x55fcfce20de0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55fcfce26430 <line:751:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55fcfce25f40 <col:3> 'int' lvalue Var 0x55fcfce20ed8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55fcfce26400 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55fcfce263d0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55fcfce263b8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55fcfce25f60 <col:15> '_Bool' lvalue Var 0x55fcfce21160 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55fcfce263e8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fcfce25f80 <col:31> 'int' lvalue Var 0x55fcfce20ed8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55fcfce26398 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55fcfce26368 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55fcfce26190 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55fcfce260b0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55fcfce25fd8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55fcfce25fc0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55fcfce25fa0 <col:45> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55fcfce26090 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55fcfce26028 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55fcfce26010 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55fcfce25ff0 <col:64> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55fcfce26078 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55fcfce26060 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55fcfce26040 <col:83> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55fcfce26170 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55fcfce26108 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55fcfce260f0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55fcfce260d0 <col:102> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55fcfce26158 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55fcfce26140 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55fcfce26120 <col:121> '_Bool' lvalue Var 0x55fcfce20bf0 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55fcfce26350 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fcfce261b0 <col:138> 'int' lvalue Var 0x55fcfce20ed8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55fcfce26330 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55fcfce26300 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55fcfce26270 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55fcfce26228 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55fcfce26210 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55fcfce261d0 <col:151> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55fcfce26258 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55fcfce26240 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55fcfce261f0 <col:169> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55fcfce262d0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55fcfce26290 <col:186> 'int' lvalue Var 0x55fcfce20ed8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55fcfce262e8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55fcfce262b0 <col:198> 'int' lvalue Var 0x55fcfce20ed8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55fcfce269d8 <line:752:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce26450 <col:3> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce269c0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fcfce26990 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55fcfce26948 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fcfce26930 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fcfce26470 <col:20> '_Bool' lvalue Var 0x55fcfce21160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fcfce26978 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fcfce26960 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fcfce26490 <col:36> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55fcfce26910 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55fcfce268e0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55fcfce266a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55fcfce265c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55fcfce264e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55fcfce264d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55fcfce264b0 <col:55> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55fcfce265a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55fcfce26538 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55fcfce26520 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55fcfce26500 <col:74> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55fcfce26588 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55fcfce26570 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55fcfce26550 <col:93> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55fcfce26680 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55fcfce26618 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55fcfce26600 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55fcfce265e0 <col:112> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55fcfce26668 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55fcfce26650 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55fcfce26630 <col:131> '_Bool' lvalue Var 0x55fcfce20bf0 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55fcfce268c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55fcfce268b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fcfce266c0 <col:148> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55fcfce26890 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55fcfce26860 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55fcfce26780 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55fcfce26738 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55fcfce26720 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55fcfce266e0 <col:166> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55fcfce26768 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55fcfce26750 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55fcfce26700 <col:184> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55fcfce26818 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55fcfce267d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55fcfce267a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55fcfce26848 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55fcfce26830 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55fcfce267f8 <col:212> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55fcfce26fb8 <line:753:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce269f8 <col:3> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce26fa0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fcfce26f70 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55fcfce26f28 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fcfce26f10 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fcfce26a18 <col:20> '_Bool' lvalue Var 0x55fcfce21160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fcfce26f58 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fcfce26f40 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fcfce26a38 <col:36> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55fcfce26ef0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55fcfce26ec0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55fcfce26c60 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55fcfce26b80 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55fcfce26a90 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55fcfce26a78 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55fcfce26a58 <col:55> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55fcfce26b60 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55fcfce26ae0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55fcfce26ac8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55fcfce26aa8 <col:74> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55fcfce26b30 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55fcfce26b18 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55fcfce26af8 <col:93> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55fcfce26c40 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55fcfce26bd8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55fcfce26bc0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55fcfce26ba0 <col:112> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55fcfce26c28 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55fcfce26c10 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55fcfce26bf0 <col:131> '_Bool' lvalue Var 0x55fcfce20bf0 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55fcfce26ea8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55fcfce26e90 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fcfce26c80 <col:148> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55fcfce26e70 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55fcfce26e40 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55fcfce26d40 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55fcfce26cf8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55fcfce26ce0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55fcfce26ca0 <col:166> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55fcfce26d28 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55fcfce26d10 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55fcfce26cc0 <col:184> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55fcfce26e10 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55fcfce26d90 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55fcfce26d60 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55fcfce26e28 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55fcfce26de8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55fcfce26db8 <col:219> 'int' 0
|   |-BinaryOperator 0x55fcfce27560 <line:754:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce26fd8 <col:3> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce27548 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fcfce27518 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55fcfce274d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fcfce274b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fcfce26ff8 <col:20> '_Bool' lvalue Var 0x55fcfce21160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fcfce27500 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fcfce274e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fcfce27018 <col:36> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55fcfce27498 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55fcfce27468 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55fcfce27228 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55fcfce27148 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55fcfce27070 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55fcfce27058 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55fcfce27038 <col:55> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55fcfce27128 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55fcfce270c0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55fcfce270a8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55fcfce27088 <col:74> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55fcfce27110 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55fcfce270f8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55fcfce270d8 <col:93> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55fcfce27208 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55fcfce271a0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55fcfce27188 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55fcfce27168 <col:112> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55fcfce271f0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55fcfce271d8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55fcfce271b8 <col:131> '_Bool' lvalue Var 0x55fcfce20bf0 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55fcfce27450 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55fcfce27438 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fcfce27248 <col:148> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55fcfce27418 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55fcfce273e8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55fcfce27308 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55fcfce272c0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55fcfce272a8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55fcfce27268 <col:166> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55fcfce272f0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55fcfce272d8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55fcfce27288 <col:184> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55fcfce273a0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55fcfce27358 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55fcfce27328 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55fcfce273d0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55fcfce273b8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55fcfce27380 <col:212> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55fcfce27b28 <line:755:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce27580 <col:3> '_Bool' lvalue Var 0x55fcfce20bf0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce27b10 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fcfce27ae0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55fcfce27a98 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fcfce27a80 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fcfce275a0 <col:20> '_Bool' lvalue Var 0x55fcfce21160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fcfce27ac8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55fcfce27ab0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55fcfce275c0 <col:36> '_Bool' lvalue Var 0x55fcfce20bf0 'x$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55fcfce27a60 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55fcfce27a30 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55fcfce277d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55fcfce276f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55fcfce27618 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55fcfce27600 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55fcfce275e0 <col:55> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55fcfce276d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55fcfce27668 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55fcfce27650 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55fcfce27630 <col:74> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55fcfce276b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55fcfce276a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55fcfce27680 <col:93> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55fcfce277b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55fcfce27748 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55fcfce27730 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55fcfce27710 <col:112> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55fcfce27798 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55fcfce27780 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55fcfce27760 <col:131> '_Bool' lvalue Var 0x55fcfce20bf0 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55fcfce27a18 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55fcfce27a00 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55fcfce277f0 <col:148> '_Bool' lvalue Var 0x55fcfce20bf0 'x$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55fcfce279e0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55fcfce279b0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55fcfce278b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55fcfce27868 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55fcfce27850 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55fcfce27810 <col:166> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55fcfce27898 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55fcfce27880 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55fcfce27830 <col:184> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55fcfce27980 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55fcfce27900 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55fcfce278d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55fcfce27998 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55fcfce27958 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55fcfce27928 <col:219> 'int' 0
|   |-BinaryOperator 0x55fcfce27bc8 <line:756:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55fcfce27b70 <col:3> 'int' lvalue Var 0x55fcfce20560 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55fcfce27bb0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fcfce27b90 <col:25> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
|   |-BinaryOperator 0x55fcfce27cf8 <line:757:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55fcfce27be8 <col:3> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
|   | `-ConditionalOperator 0x55fcfce27cc8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55fcfce27c80 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55fcfce27c68 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55fcfce27c08 <col:7> '_Bool' lvalue Var 0x55fcfce20808 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55fcfce27c98 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fcfce27c28 <col:25> 'int' lvalue Var 0x55fcfce20888 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55fcfce27cb0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55fcfce27c48 <col:37> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
|   |-BinaryOperator 0x55fcfce27d90 <line:758:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce27d18 <col:3> '_Bool' lvalue Var 0x55fcfce20808 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55fcfce27d68 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55fcfce27d38 <col:28> 'int' 0
|   |-CallExpr 0x55fcfce27de8 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fcfce27dd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce27db0 <col:3> 'void ()' Function 0x55fcfcdc7060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fcfce27e40 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fcfce27e28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce27e08 <col:3> 'void ()' Function 0x55fcfcdc6fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fcfce28128 <line:761:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55fcfce27e60 <col:3> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
|   | `-ConditionalOperator 0x55fcfce280f8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55fcfce27f20 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55fcfce27ed8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55fcfce27ec0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55fcfce27e80 <col:7> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55fcfce27f08 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55fcfce27ef0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55fcfce27ea0 <col:25> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55fcfce280e0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fcfce27f40 <col:42> 'int' lvalue Var 0x55fcfce20de0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55fcfce280c0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55fcfce28090 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55fcfce28000 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55fcfce27fb8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55fcfce27fa0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55fcfce27f60 <col:55> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55fcfce27fe8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55fcfce27fd0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55fcfce27f80 <col:73> '_Bool' lvalue Var 0x55fcfce20bf0 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55fcfce28060 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fcfce28020 <col:90> 'int' lvalue Var 0x55fcfce20ed8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55fcfce28078 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fcfce28040 <col:102> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
|   |-BinaryOperator 0x55fcfce28330 <line:762:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce28148 <col:3> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce28318 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fcfce282e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55fcfce28208 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55fcfce281c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55fcfce281a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55fcfce28168 <col:20> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55fcfce281f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55fcfce281d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55fcfce28188 <col:38> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fcfce282a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fcfce28258 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fcfce28228 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55fcfce282d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fcfce282b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fcfce28280 <col:66> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55fcfce28618 <line:763:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce28350 <col:3> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce28600 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fcfce285d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55fcfce284f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55fcfce28410 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55fcfce283c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55fcfce283b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55fcfce28370 <col:20> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55fcfce283f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55fcfce283e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55fcfce28390 <col:38> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55fcfce284d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55fcfce28488 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55fcfce28470 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55fcfce28430 <col:56> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55fcfce284b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55fcfce284a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55fcfce28450 <col:74> '_Bool' lvalue Var 0x55fcfce20bf0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fcfce28588 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fcfce28540 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fcfce28510 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55fcfce285b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fcfce285a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fcfce28568 <col:102> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55fcfce28820 <line:764:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce28638 <col:3> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce28808 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fcfce287d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55fcfce286f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55fcfce286b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55fcfce28698 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55fcfce28658 <col:20> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55fcfce286e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55fcfce286c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55fcfce28678 <col:38> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fcfce28790 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fcfce28748 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fcfce28718 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55fcfce287c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fcfce287a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fcfce28770 <col:66> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55fcfce28b08 <line:765:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce28840 <col:3> '_Bool' lvalue Var 0x55fcfce20bf0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce28af0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fcfce28ac0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55fcfce289e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55fcfce28900 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55fcfce288b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55fcfce288a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55fcfce28860 <col:20> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55fcfce288e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55fcfce288d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55fcfce28880 <col:38> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55fcfce289c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55fcfce28978 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55fcfce28960 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55fcfce28920 <col:56> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55fcfce289a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55fcfce28990 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55fcfce28940 <col:74> '_Bool' lvalue Var 0x55fcfce20bf0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55fcfce28a78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fcfce28a30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fcfce28a00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55fcfce28aa8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fcfce28a90 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fcfce28a58 <col:102> '_Bool' lvalue Var 0x55fcfce20bf0 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55fcfce28b80 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fcfce28b48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce28b28 <col:3> 'void ()' Function 0x55fcfcdc7060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fcfce28bd8 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fcfce28bc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce28ba0 <col:3> 'void ()' Function 0x55fcfcdc6fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fcfce28c90 <line:768:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55fcfce28bf8 <col:3> 'int' lvalue Var 0x55fcfce20320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55fcfce28c70 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55fcfce28c58 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fcfce28c18 <col:22> 'int' lvalue Var 0x55fcfce20320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55fcfce28c38 <col:41> 'int' 1
|   |-CallExpr 0x55fcfce28ce8 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fcfce28cd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce28cb0 <col:3> 'void ()' Function 0x55fcfcdc7060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55fcfce28d60 <line:770:3, col:36>
|     `-CallExpr 0x55fcfce28d40 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55fcfce28d28 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55fcfce28d08 <col:10> 'void *(void)' Function 0x55fcfcdc6ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55fcfce28f58 prev 0x55fcfce1ffa0 <line:772:1, line:800:1> line:772:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55fcfce28ec0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55fcfce2a708 <line:773:1, line:800:1>
|   |-CallExpr 0x55fcfce29038 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fcfce29020 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce29000 <col:3> 'void ()' Function 0x55fcfcdc6fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fcfce290b0 <line:775:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55fcfce29058 <col:3> 'int' lvalue Var 0x55fcfce20ed8 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55fcfce29098 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fcfce29078 <col:15> 'int' lvalue Var 0x55fcfce20de0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55fcfce29110 <line:776:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55fcfce290d0 <col:3> 'int' lvalue Var 0x55fcfce20de0 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x55fcfce290f0 <col:15> 'int' 2
|   |-BinaryOperator 0x55fcfce29188 <line:777:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce29130 <col:3> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce29170 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fcfce29150 <col:20> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55fcfce29220 <line:778:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce291a8 <col:3> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55fcfce291f8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55fcfce291c8 <col:27> 'int' 1
|   |-CallExpr 0x55fcfce293a8 <line:779:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55fcfce29390 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55fcfce29240 <col:3> 'void (int)' Function 0x55fcfcdc6d28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55fcfce29340 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55fcfce29320 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55fcfce29300 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55fcfce292b8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55fcfce292a0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55fcfce29260 <col:23> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55fcfce292e8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55fcfce292d0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55fcfce29280 <col:41> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55fcfce29428 <line:780:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce293d0 <col:3> '_Bool' lvalue Var 0x55fcfce20b00 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce29410 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fcfce293f0 <col:20> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55fcfce294a0 <line:781:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce29448 <col:3> '_Bool' lvalue Var 0x55fcfce20b78 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce29488 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fcfce29468 <col:20> '_Bool' lvalue Var 0x55fcfce20978 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55fcfce29518 <line:782:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce294c0 <col:3> '_Bool' lvalue Var 0x55fcfce20bf0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce29500 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fcfce294e0 <col:20> '_Bool' lvalue Var 0x55fcfce209f0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55fcfce29590 <line:783:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce29538 <col:3> '_Bool' lvalue Var 0x55fcfce20c68 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce29578 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55fcfce29558 <col:20> '_Bool' lvalue Var 0x55fcfce20a68 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55fcfce29628 <line:784:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce295b0 <col:3> '_Bool' lvalue Var 0x55fcfce20a68 'x$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x55fcfce29600 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55fcfce295d0 <col:27> 'int' 1
|   |-CallExpr 0x55fcfce29680 <line:785:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fcfce29668 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce29648 <col:3> 'void ()' Function 0x55fcfcdc7060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fcfce296d8 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fcfce296c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce296a0 <col:3> 'void ()' Function 0x55fcfcdc6fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fcfce29738 <line:787:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55fcfce296f8 <col:3> 'int' lvalue Var 0x55fcfce21050 'y' 'int'
|   | `-IntegerLiteral 0x55fcfce29718 <col:7> 'int' 1
|   |-CallExpr 0x55fcfce29790 <line:788:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fcfce29778 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce29758 <col:3> 'void ()' Function 0x55fcfcdc7060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fcfce297e8 <line:789:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fcfce297d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce297b0 <col:3> 'void ()' Function 0x55fcfcdc6fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fcfce29ad0 <line:790:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55fcfce29808 <col:3> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
|   | `-ConditionalOperator 0x55fcfce29aa0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55fcfce298c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55fcfce29880 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55fcfce29868 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55fcfce29828 <col:7> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55fcfce298b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55fcfce29898 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55fcfce29848 <col:25> '_Bool' lvalue Var 0x55fcfce20a68 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55fcfce29a88 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fcfce298e8 <col:42> 'int' lvalue Var 0x55fcfce20de0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55fcfce29a68 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55fcfce29a38 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55fcfce299a8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55fcfce29960 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55fcfce29948 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55fcfce29908 <col:55> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55fcfce29990 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55fcfce29978 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55fcfce29928 <col:73> '_Bool' lvalue Var 0x55fcfce20c68 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55fcfce29a08 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55fcfce299c8 <col:90> 'int' lvalue Var 0x55fcfce20ed8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55fcfce29a20 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fcfce299e8 <col:102> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
|   |-BinaryOperator 0x55fcfce29ce8 <line:791:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce29af0 <col:3> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce29cd0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fcfce29ca0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55fcfce29bc0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55fcfce29b68 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55fcfce29b50 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55fcfce29b10 <col:20> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55fcfce29ba8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55fcfce29b90 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55fcfce29b30 <col:38> '_Bool' lvalue Var 0x55fcfce20a68 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55fcfce29c58 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fcfce29c10 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fcfce29be0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55fcfce29c88 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fcfce29c70 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fcfce29c38 <col:66> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55fcfce29fd0 <line:792:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce29d08 <col:3> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce29fb8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fcfce29f88 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55fcfce29ea8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55fcfce29dc8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55fcfce29d80 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55fcfce29d68 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55fcfce29d28 <col:20> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55fcfce29db0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55fcfce29d98 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55fcfce29d48 <col:38> '_Bool' lvalue Var 0x55fcfce20a68 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55fcfce29e88 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55fcfce29e40 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55fcfce29e28 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55fcfce29de8 <col:56> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55fcfce29e70 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55fcfce29e58 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55fcfce29e08 <col:74> '_Bool' lvalue Var 0x55fcfce20c68 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55fcfce29f40 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fcfce29ef8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fcfce29ec8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55fcfce29f70 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fcfce29f58 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fcfce29f20 <col:102> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55fcfce2a1d8 <line:793:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce29ff0 <col:3> '_Bool' lvalue Var 0x55fcfce20a68 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce2a1c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fcfce2a190 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55fcfce2a0b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55fcfce2a068 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55fcfce2a050 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55fcfce2a010 <col:20> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55fcfce2a098 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55fcfce2a080 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55fcfce2a030 <col:38> '_Bool' lvalue Var 0x55fcfce20a68 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55fcfce2a148 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fcfce2a100 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fcfce2a0d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55fcfce2a178 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fcfce2a160 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fcfce2a128 <col:66> '_Bool' lvalue Var 0x55fcfce20a68 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55fcfce2a4c0 <line:794:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55fcfce2a1f8 <col:3> '_Bool' lvalue Var 0x55fcfce20c68 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55fcfce2a4a8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55fcfce2a478 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55fcfce2a398 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55fcfce2a2b8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55fcfce2a270 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55fcfce2a258 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55fcfce2a218 <col:20> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55fcfce2a2a0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55fcfce2a288 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55fcfce2a238 <col:38> '_Bool' lvalue Var 0x55fcfce20a68 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55fcfce2a378 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55fcfce2a330 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55fcfce2a318 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55fcfce2a2d8 <col:56> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55fcfce2a360 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55fcfce2a348 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55fcfce2a2f8 <col:74> '_Bool' lvalue Var 0x55fcfce20c68 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55fcfce2a430 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55fcfce2a3e8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55fcfce2a3b8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55fcfce2a460 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55fcfce2a448 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55fcfce2a410 <col:102> '_Bool' lvalue Var 0x55fcfce20c68 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55fcfce2a518 <line:795:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fcfce2a500 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce2a4e0 <col:3> 'void ()' Function 0x55fcfcdc7060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55fcfce2a570 <line:796:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55fcfce2a558 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce2a538 <col:3> 'void ()' Function 0x55fcfcdc6fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55fcfce2a628 <line:797:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55fcfce2a590 <col:3> 'int' lvalue Var 0x55fcfce20320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55fcfce2a608 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55fcfce2a5f0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55fcfce2a5b0 <col:22> 'int' lvalue Var 0x55fcfce20320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55fcfce2a5d0 <col:41> 'int' 1
|   |-CallExpr 0x55fcfce2a680 <line:798:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55fcfce2a668 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55fcfce2a648 <col:3> 'void ()' Function 0x55fcfcdc7060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55fcfce2a6f8 <line:799:3, col:36>
|     `-CallExpr 0x55fcfce2a6d8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55fcfce2a6c0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55fcfce2a6a0 <col:10> 'void *(void)' Function 0x55fcfcdc6ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55fcfce2a808 prev 0x55fcfce20068 <line:801:1, line:803:1> line:801:6 fence 'void ()'
| `-CompoundStmt 0x55fcfce2a8a8 <line:802:1, line:803:1>
|-FunctionDecl 0x55fcfce2a8d8 prev 0x55fcfce20128 <line:804:1, line:806:1> line:804:6 isync 'void ()'
| `-CompoundStmt 0x55fcfce2a978 <line:805:1, line:806:1>
|-FunctionDecl 0x55fcfce2a9a8 prev 0x55fcfce201e8 <line:807:1, line:809:1> line:807:6 lwfence 'void ()'
| `-CompoundStmt 0x55fcfce2aa48 <line:808:1, line:809:1>
`-FunctionDecl 0x55fcfce2aab8 <line:810:1, line:847:1> line:810:5 main 'int ()'
  `-CompoundStmt 0x55fcfce2f138 <line:811:1, line:847:1>
    |-DeclStmt 0x55fcfce2ac08 <line:812:3, col:18>
    | `-VarDecl 0x55fcfce2aba0 <col:3, col:13> col:13 used t2542 'pthread_t':'unsigned long'
    |-CallExpr 0x55fcfce2ae18 <line:813:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55fcfce2ae00 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fcfce2ac20 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55fcfce075b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55fcfce2ac60 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55fcfce2ac40 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55fcfce2aba0 't2542' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55fcfce2ae58 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55fcfce2acd8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55fcfce2acb0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55fcfce2ac78 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55fcfce2ae70 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fcfce2acf8 <col:39> 'void *(void *)' Function 0x55fcfce21278 'P0' 'void *(void *)'
    | `-ParenExpr 0x55fcfce2ad78 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55fcfce2ad50 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55fcfce2ad18 <col:52> 'int' 0
    |-DeclStmt 0x55fcfce2af00 <line:814:3, col:18>
    | `-VarDecl 0x55fcfce2ae98 <col:3, col:13> col:13 used t2543 'pthread_t':'unsigned long'
    |-CallExpr 0x55fcfce2b0a8 <line:815:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55fcfce2b090 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fcfce2af18 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55fcfce075b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55fcfce2af58 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55fcfce2af38 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55fcfce2ae98 't2543' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55fcfce2b0e8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55fcfce2afd0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55fcfce2afa8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55fcfce2af70 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55fcfce2b100 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fcfce2aff0 <col:39> 'void *(void *)' Function 0x55fcfce24430 'P1' 'void *(void *)'
    | `-ParenExpr 0x55fcfce2b070 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55fcfce2b048 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55fcfce2b010 <col:52> 'int' 0
    |-DeclStmt 0x55fcfce2b190 <line:816:3, col:18>
    | `-VarDecl 0x55fcfce2b128 <col:3, col:13> col:13 used t2544 'pthread_t':'unsigned long'
    |-CallExpr 0x55fcfce2b338 <line:817:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55fcfce2b320 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fcfce2b1a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55fcfce075b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55fcfce2b1e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55fcfce2b1c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55fcfce2b128 't2544' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55fcfce2b378 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55fcfce2b260 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55fcfce2b238 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55fcfce2b200 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55fcfce2b390 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fcfce2b280 <col:39> 'void *(void *)' Function 0x55fcfce28f58 'P2' 'void *(void *)'
    | `-ParenExpr 0x55fcfce2b300 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55fcfce2b2d8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55fcfce2b2a0 <col:52> 'int' 0
    |-CallExpr 0x55fcfce2b3e0 <line:818:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55fcfce2b3c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55fcfce2b3a8 <col:3> 'void ()' Function 0x55fcfcdc6fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55fcfce2b4b0 <line:819:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55fcfce2b400 <col:3> '_Bool' lvalue Var 0x55fcfce205f8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55fcfce2b498 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55fcfce2b478 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55fcfce2b460 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55fcfce2b420 <col:21> 'int' lvalue Var 0x55fcfce20320 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55fcfce2b440 <col:41> 'int' 3
    |-CallExpr 0x55fcfce2b508 <line:820:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55fcfce2b4f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55fcfce2b4d0 <col:3> 'void ()' Function 0x55fcfcdc7060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55fcfce2b580 <line:821:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55fcfce2b568 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fcfce2b528 <col:3> 'void (int)' Function 0x55fcfcdc6940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55fcfce2b5c0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55fcfce2b5a8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55fcfce2b548 <col:21> '_Bool' lvalue Var 0x55fcfce205f8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55fcfce2b610 <line:822:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55fcfce2b5f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55fcfce2b5d8 <col:3> 'void ()' Function 0x55fcfcdc6fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55fcfce2b8f8 <line:823:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55fcfce2b630 <col:3> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
    | `-ConditionalOperator 0x55fcfce2b8c8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55fcfce2b6f0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55fcfce2b6a8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55fcfce2b690 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55fcfce2b650 <col:7> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55fcfce2b6d8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55fcfce2b6c0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55fcfce2b670 <col:25> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55fcfce2b8b0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55fcfce2b710 <col:42> 'int' lvalue Var 0x55fcfce20de0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55fcfce2b890 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55fcfce2b860 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55fcfce2b7d0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55fcfce2b788 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55fcfce2b770 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55fcfce2b730 <col:55> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55fcfce2b7b8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55fcfce2b7a0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55fcfce2b750 <col:73> '_Bool' lvalue Var 0x55fcfce20b00 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55fcfce2b830 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55fcfce2b7f0 <col:90> 'int' lvalue Var 0x55fcfce20ed8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55fcfce2b848 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55fcfce2b810 <col:102> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
    |-BinaryOperator 0x55fcfce2bb00 <line:824:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55fcfce2b918 <col:3> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55fcfce2bae8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55fcfce2bab8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55fcfce2b9d8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55fcfce2b990 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55fcfce2b978 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55fcfce2b938 <col:20> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55fcfce2b9c0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55fcfce2b9a8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55fcfce2b958 <col:38> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55fcfce2ba70 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55fcfce2ba28 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55fcfce2b9f8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55fcfce2baa0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55fcfce2ba88 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55fcfce2ba50 <col:66> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55fcfce2be00 <line:825:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55fcfce2bb20 <col:3> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55fcfce2bde8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55fcfce2bdb8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55fcfce2bcd8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55fcfce2bbf8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55fcfce2bbb0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55fcfce2bb80 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55fcfce2bb40 <col:20> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55fcfce2bbe0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55fcfce2bbc8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55fcfce2bb60 <col:38> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55fcfce2bcb8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55fcfce2bc70 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55fcfce2bc58 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55fcfce2bc18 <col:56> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55fcfce2bca0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55fcfce2bc88 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55fcfce2bc38 <col:74> '_Bool' lvalue Var 0x55fcfce20b00 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55fcfce2bd70 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55fcfce2bd28 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55fcfce2bcf8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55fcfce2bda0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55fcfce2bd88 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55fcfce2bd50 <col:102> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55fcfce2c008 <line:826:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55fcfce2be20 <col:3> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55fcfce2bff0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55fcfce2bfc0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55fcfce2bee0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55fcfce2be98 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55fcfce2be80 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55fcfce2be40 <col:20> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55fcfce2bec8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55fcfce2beb0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55fcfce2be60 <col:38> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55fcfce2bf78 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55fcfce2bf30 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55fcfce2bf00 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55fcfce2bfa8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55fcfce2bf90 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55fcfce2bf58 <col:66> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55fcfce2c2f0 <line:827:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55fcfce2c028 <col:3> '_Bool' lvalue Var 0x55fcfce20b00 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55fcfce2c2d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55fcfce2c2a8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55fcfce2c1c8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55fcfce2c0e8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55fcfce2c0a0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55fcfce2c088 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55fcfce2c048 <col:20> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55fcfce2c0d0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55fcfce2c0b8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55fcfce2c068 <col:38> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55fcfce2c1a8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55fcfce2c160 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55fcfce2c148 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55fcfce2c108 <col:56> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55fcfce2c190 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55fcfce2c178 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55fcfce2c128 <col:74> '_Bool' lvalue Var 0x55fcfce20b00 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55fcfce2c260 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55fcfce2c218 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55fcfce2c1e8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55fcfce2c290 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55fcfce2c278 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55fcfce2c240 <col:102> '_Bool' lvalue Var 0x55fcfce20b00 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55fcfce2c348 <line:828:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55fcfce2c330 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55fcfce2c310 <col:3> 'void ()' Function 0x55fcfcdc7060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55fcfce2c3a0 <line:829:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55fcfce2c388 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55fcfce2c368 <col:3> 'void ()' Function 0x55fcfcdc6fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55fcfce2c438 <line:830:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55fcfce2c3c0 <col:3> '_Bool' lvalue Var 0x55fcfce210e8 'weak$$choice0' '_Bool'
    | `-CallExpr 0x55fcfce2c418 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55fcfce2c400 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55fcfce2c3e0 <col:19> '_Bool (void)' Function 0x55fcfcdc6770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55fcfce2c4d0 <line:831:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55fcfce2c458 <col:3> '_Bool' lvalue Var 0x55fcfce21160 'weak$$choice2' '_Bool'
    | `-CallExpr 0x55fcfce2c4b0 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55fcfce2c498 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55fcfce2c478 <col:19> '_Bool (void)' Function 0x55fcfcdc6770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55fcfce2c548 <line:832:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x55fcfce2c4f0 <col:3> '_Bool' lvalue Var 0x55fcfce20808 'x$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x55fcfce2c530 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x55fcfce2c510 <col:21> '_Bool' lvalue Var 0x55fcfce21160 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x55fcfce2c5c0 <line:833:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55fcfce2c568 <col:3> 'int' lvalue Var 0x55fcfce20888 'x$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x55fcfce2c5a8 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55fcfce2c588 <col:15> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
    |-BinaryOperator 0x55fcfce2c9f8 <line:834:3, col:162> 'int' '='
    | |-DeclRefExpr 0x55fcfce2c5e0 <col:3> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
    | `-ConditionalOperator 0x55fcfce2c9c8 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x55fcfce2c7f0 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x55fcfce2c710 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x55fcfce2c638 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x55fcfce2c620 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x55fcfce2c600 <col:8> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x55fcfce2c6f0 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x55fcfce2c688 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x55fcfce2c670 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x55fcfce2c650 <col:27> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x55fcfce2c6d8 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x55fcfce2c6c0 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x55fcfce2c6a0 <col:46> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x55fcfce2c7d0 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x55fcfce2c768 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x55fcfce2c750 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55fcfce2c730 <col:65> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x55fcfce2c7b8 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x55fcfce2c7a0 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x55fcfce2c780 <col:84> '_Bool' lvalue Var 0x55fcfce20b00 'x$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55fcfce2c9b0 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55fcfce2c810 <col:101> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
    |   `-ParenExpr 0x55fcfce2c990 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x55fcfce2c960 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x55fcfce2c8d0 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55fcfce2c888 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55fcfce2c870 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55fcfce2c830 <col:106> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55fcfce2c8b8 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55fcfce2c8a0 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55fcfce2c850 <col:124> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55fcfce2c930 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55fcfce2c8f0 <col:141> 'int' lvalue Var 0x55fcfce20de0 'x$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x55fcfce2c948 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55fcfce2c910 <col:153> 'int' lvalue Var 0x55fcfce20ed8 'x$w_buff1' 'int'
    |-BinaryOperator 0x55fcfce2cf20 <line:835:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55fcfce2ca18 <col:3> 'int' lvalue Var 0x55fcfce20de0 'x$w_buff0' 'int'
    | `-ConditionalOperator 0x55fcfce2cef0 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55fcfce2cec0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55fcfce2cea8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55fcfce2ca38 <col:15> '_Bool' lvalue Var 0x55fcfce21160 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55fcfce2ced8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55fcfce2ca58 <col:31> 'int' lvalue Var 0x55fcfce20de0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55fcfce2ce88 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55fcfce2ce58 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55fcfce2cc80 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55fcfce2cb88 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55fcfce2cab0 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55fcfce2ca98 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55fcfce2ca78 <col:45> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55fcfce2cb68 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55fcfce2cb00 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55fcfce2cae8 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55fcfce2cac8 <col:64> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55fcfce2cb50 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55fcfce2cb38 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55fcfce2cb18 <col:83> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55fcfce2cc60 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55fcfce2cbf8 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55fcfce2cbe0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55fcfce2cbc0 <col:102> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55fcfce2cc48 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55fcfce2cc30 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55fcfce2cc10 <col:121> '_Bool' lvalue Var 0x55fcfce20b00 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55fcfce2ce40 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55fcfce2cca0 <col:138> 'int' lvalue Var 0x55fcfce20de0 'x$w_buff0' 'int'
    |       `-ParenExpr 0x55fcfce2ce20 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55fcfce2cdf0 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55fcfce2cd60 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55fcfce2cd18 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55fcfce2cd00 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55fcfce2ccc0 <col:151> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55fcfce2cd48 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55fcfce2cd30 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55fcfce2cce0 <col:169> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55fcfce2cdc0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55fcfce2cd80 <col:186> 'int' lvalue Var 0x55fcfce20de0 'x$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x55fcfce2cdd8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55fcfce2cda0 <col:198> 'int' lvalue Var 0x55fcfce20de0 'x$w_buff0' 'int'
    |-BinaryOperator 0x55fcfce2d430 <line:836:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55fcfce2cf40 <col:3> 'int' lvalue Var 0x55fcfce20ed8 'x$w_buff1' 'int'
    | `-ConditionalOperator 0x55fcfce2d400 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55fcfce2d3d0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55fcfce2d3b8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55fcfce2cf60 <col:15> '_Bool' lvalue Var 0x55fcfce21160 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55fcfce2d3e8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55fcfce2cf80 <col:31> 'int' lvalue Var 0x55fcfce20ed8 'x$w_buff1' 'int'
    |   `-ParenExpr 0x55fcfce2d398 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55fcfce2d368 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55fcfce2d190 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55fcfce2d0b0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55fcfce2cfd8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55fcfce2cfc0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55fcfce2cfa0 <col:45> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55fcfce2d090 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55fcfce2d028 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55fcfce2d010 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55fcfce2cff0 <col:64> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55fcfce2d078 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55fcfce2d060 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55fcfce2d040 <col:83> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55fcfce2d170 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55fcfce2d108 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55fcfce2d0f0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55fcfce2d0d0 <col:102> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55fcfce2d158 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55fcfce2d140 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55fcfce2d120 <col:121> '_Bool' lvalue Var 0x55fcfce20b00 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55fcfce2d350 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55fcfce2d1b0 <col:138> 'int' lvalue Var 0x55fcfce20ed8 'x$w_buff1' 'int'
    |       `-ParenExpr 0x55fcfce2d330 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55fcfce2d300 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55fcfce2d270 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55fcfce2d228 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55fcfce2d210 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55fcfce2d1d0 <col:151> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55fcfce2d258 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55fcfce2d240 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55fcfce2d1f0 <col:169> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55fcfce2d2d0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55fcfce2d290 <col:186> 'int' lvalue Var 0x55fcfce20ed8 'x$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x55fcfce2d2e8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55fcfce2d2b0 <col:198> 'int' lvalue Var 0x55fcfce20ed8 'x$w_buff1' 'int'
    |-BinaryOperator 0x55fcfce2d9d8 <line:837:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55fcfce2d450 <col:3> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55fcfce2d9c0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55fcfce2d990 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55fcfce2d948 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55fcfce2d930 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55fcfce2d470 <col:20> '_Bool' lvalue Var 0x55fcfce21160 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55fcfce2d978 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55fcfce2d960 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55fcfce2d490 <col:36> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x55fcfce2d910 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55fcfce2d8e0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55fcfce2d6a0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55fcfce2d5c0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55fcfce2d4e8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55fcfce2d4d0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55fcfce2d4b0 <col:55> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55fcfce2d5a0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55fcfce2d538 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55fcfce2d520 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55fcfce2d500 <col:74> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55fcfce2d588 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55fcfce2d570 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55fcfce2d550 <col:93> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55fcfce2d680 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55fcfce2d618 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55fcfce2d600 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55fcfce2d5e0 <col:112> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55fcfce2d668 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55fcfce2d650 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55fcfce2d630 <col:131> '_Bool' lvalue Var 0x55fcfce20b00 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55fcfce2d8c8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55fcfce2d8b0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55fcfce2d6c0 <col:148> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x55fcfce2d890 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55fcfce2d860 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55fcfce2d780 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55fcfce2d738 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55fcfce2d720 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55fcfce2d6e0 <col:166> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55fcfce2d768 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55fcfce2d750 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55fcfce2d700 <col:184> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55fcfce2d818 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55fcfce2d7d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55fcfce2d7a0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55fcfce2d848 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55fcfce2d830 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55fcfce2d7f8 <col:212> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55fcfce2dfb0 <line:838:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55fcfce2d9f8 <col:3> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55fcfce2df98 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55fcfce2df68 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55fcfce2df20 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55fcfce2df08 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55fcfce2da18 <col:20> '_Bool' lvalue Var 0x55fcfce21160 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55fcfce2df50 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55fcfce2df38 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55fcfce2da38 <col:36> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x55fcfce2dee8 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55fcfce2deb8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55fcfce2dc58 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55fcfce2db68 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55fcfce2da90 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55fcfce2da78 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55fcfce2da58 <col:55> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55fcfce2db48 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55fcfce2dae0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55fcfce2dac8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55fcfce2daa8 <col:74> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55fcfce2db30 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55fcfce2db18 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55fcfce2daf8 <col:93> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55fcfce2dc38 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55fcfce2dbd0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55fcfce2dba8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55fcfce2db88 <col:112> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55fcfce2dc20 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55fcfce2dc08 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55fcfce2dbe8 <col:131> '_Bool' lvalue Var 0x55fcfce20b00 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55fcfce2dea0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55fcfce2de88 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55fcfce2dc78 <col:148> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x55fcfce2de68 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55fcfce2de38 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55fcfce2dd38 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55fcfce2dcf0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55fcfce2dcd8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55fcfce2dc98 <col:166> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55fcfce2dd20 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55fcfce2dd08 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55fcfce2dcb8 <col:184> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55fcfce2de08 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55fcfce2dd88 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55fcfce2dd58 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55fcfce2de20 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55fcfce2dde0 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55fcfce2ddb0 <col:219> 'int' 0
    |-BinaryOperator 0x55fcfce2e558 <line:839:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55fcfce2dfd0 <col:3> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55fcfce2e540 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55fcfce2e510 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55fcfce2e4c8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55fcfce2e4b0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55fcfce2dff0 <col:20> '_Bool' lvalue Var 0x55fcfce21160 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55fcfce2e4f8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55fcfce2e4e0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55fcfce2e010 <col:36> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x55fcfce2e490 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55fcfce2e460 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55fcfce2e220 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55fcfce2e140 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55fcfce2e068 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55fcfce2e050 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55fcfce2e030 <col:55> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55fcfce2e120 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55fcfce2e0b8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55fcfce2e0a0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55fcfce2e080 <col:74> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55fcfce2e108 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55fcfce2e0f0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55fcfce2e0d0 <col:93> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55fcfce2e200 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55fcfce2e198 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55fcfce2e180 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55fcfce2e160 <col:112> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55fcfce2e1e8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55fcfce2e1d0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55fcfce2e1b0 <col:131> '_Bool' lvalue Var 0x55fcfce20b00 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55fcfce2e448 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55fcfce2e430 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55fcfce2e240 <col:148> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x55fcfce2e410 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55fcfce2e3e0 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55fcfce2e300 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55fcfce2e2b8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55fcfce2e2a0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55fcfce2e260 <col:166> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55fcfce2e2e8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55fcfce2e2d0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55fcfce2e280 <col:184> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55fcfce2e398 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55fcfce2e350 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55fcfce2e320 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55fcfce2e3c8 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55fcfce2e3b0 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55fcfce2e378 <col:212> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55fcfce2eb20 <line:840:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55fcfce2e578 <col:3> '_Bool' lvalue Var 0x55fcfce20b00 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55fcfce2eb08 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55fcfce2ead8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55fcfce2ea90 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55fcfce2ea78 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55fcfce2e598 <col:20> '_Bool' lvalue Var 0x55fcfce21160 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55fcfce2eac0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55fcfce2eaa8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55fcfce2e5b8 <col:36> '_Bool' lvalue Var 0x55fcfce20b00 'x$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x55fcfce2ea58 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55fcfce2ea28 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55fcfce2e7c8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55fcfce2e6e8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55fcfce2e610 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55fcfce2e5f8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55fcfce2e5d8 <col:55> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55fcfce2e6c8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55fcfce2e660 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55fcfce2e648 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55fcfce2e628 <col:74> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55fcfce2e6b0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55fcfce2e698 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55fcfce2e678 <col:93> '_Bool' lvalue Var 0x55fcfce20f50 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55fcfce2e7a8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55fcfce2e740 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55fcfce2e728 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55fcfce2e708 <col:112> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55fcfce2e790 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55fcfce2e778 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55fcfce2e758 <col:131> '_Bool' lvalue Var 0x55fcfce20b00 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55fcfce2ea10 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55fcfce2e9f8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55fcfce2e7e8 <col:148> '_Bool' lvalue Var 0x55fcfce20b00 'x$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x55fcfce2e9d8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55fcfce2e9a8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55fcfce2e8a8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55fcfce2e860 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55fcfce2e848 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55fcfce2e808 <col:166> '_Bool' lvalue Var 0x55fcfce20e58 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55fcfce2e890 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55fcfce2e878 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55fcfce2e828 <col:184> '_Bool' lvalue Var 0x55fcfce20900 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55fcfce2e978 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55fcfce2e8f8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55fcfce2e8c8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55fcfce2e990 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55fcfce2e950 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55fcfce2e920 <col:219> 'int' 0
    |-BinaryOperator 0x55fcfce2ee18 <line:841:3, col:95> '_Bool' '='
    | |-DeclRefExpr 0x55fcfce2eb40 <col:3> '_Bool' lvalue Var 0x55fcfce20670 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55fcfce2ee00 <col:21, col:95> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55fcfce2ede8 <col:21, col:95> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55fcfce2edc8 <col:22, col:95> 'int'
    |       `-BinaryOperator 0x55fcfce2eda8 <col:23, col:94> 'int' '&&'
    |         |-BinaryOperator 0x55fcfce2ed10 <col:23, col:66> 'int' '&&'
    |         | |-BinaryOperator 0x55fcfce2ec78 <col:23, col:38> 'int' '&&'
    |         | | |-BinaryOperator 0x55fcfce2ebe0 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55fcfce2eba0 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55fcfce2eb60 <col:23> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
    |         | | | `-IntegerLiteral 0x55fcfce2eb80 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x55fcfce2ec58 <col:33, col:38> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55fcfce2ec40 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55fcfce2ec00 <col:33> 'int' lvalue Var 0x55fcfce21050 'y' 'int'
    |         | |   `-IntegerLiteral 0x55fcfce2ec20 <col:38> 'int' 2
    |         | `-BinaryOperator 0x55fcfce2ecf0 <col:43, col:66> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55fcfce2ecd8 <col:43> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55fcfce2ec98 <col:43> 'int' lvalue Var 0x55fcfce20440 '__unbuffered_p0_EAX' 'int'
    |         |   `-IntegerLiteral 0x55fcfce2ecb8 <col:66> 'int' 0
    |         `-BinaryOperator 0x55fcfce2ed88 <col:71, col:94> 'int' '=='
    |           |-ImplicitCastExpr 0x55fcfce2ed70 <col:71> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55fcfce2ed30 <col:71> 'int' lvalue Var 0x55fcfce20560 '__unbuffered_p1_EAX' 'int'
    |           `-IntegerLiteral 0x55fcfce2ed50 <col:94> 'int' 1
    |-BinaryOperator 0x55fcfce2ef48 <line:842:3, col:37> 'int' '='
    | |-DeclRefExpr 0x55fcfce2ee38 <col:3> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
    | `-ConditionalOperator 0x55fcfce2ef18 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x55fcfce2eed0 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55fcfce2eeb8 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55fcfce2ee58 <col:7> '_Bool' lvalue Var 0x55fcfce20808 'x$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x55fcfce2eee8 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55fcfce2ee78 <col:25> 'int' lvalue Var 0x55fcfce20888 'x$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x55fcfce2ef00 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55fcfce2ee98 <col:37> 'int' lvalue Var 0x55fcfce20770 'x' 'int'
    |-BinaryOperator 0x55fcfce2efe0 <line:843:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x55fcfce2ef68 <col:3> '_Bool' lvalue Var 0x55fcfce20808 'x$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x55fcfce2efb8 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x55fcfce2ef88 <col:28> 'int' 0
    |-CallExpr 0x55fcfce2f038 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55fcfce2f020 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55fcfce2f000 <col:3> 'void ()' Function 0x55fcfcdc7060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55fcfce2f0b0 <line:845:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55fcfce2f098 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55fcfce2f058 <col:3> 'void (int)' Function 0x55fcfcdc6d28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55fcfce2f0f0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55fcfce2f0d8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55fcfce2f078 <col:21> '_Bool' lvalue Var 0x55fcfce20670 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55fcfce2f128 <line:846:3, col:10>
      `-IntegerLiteral 0x55fcfce2f108 <col:10> 'int' 0
