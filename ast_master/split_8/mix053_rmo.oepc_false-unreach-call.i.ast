TranslationUnitDecl 0x55827fa41e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55827fa426d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55827fa423b0 '__int128'
|-TypedefDecl 0x55827fa42748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55827fa423d0 'unsigned __int128'
|-TypedefDecl 0x55827fa42a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55827fa42820 'struct __NSConstantString_tag'
|   `-Record 0x55827fa427a0 '__NSConstantString_tag'
|-TypedefDecl 0x55827fa42af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55827fa42ab0 'char *'
|   `-BuiltinType 0x55827fa41eb0 'char'
|-TypedefDecl 0x55827fa81650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55827fa42d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55827fa42bd0 'struct __va_list_tag'
|     `-Record 0x55827fa42b50 '__va_list_tag'
|-FunctionDecl 0x55827fa81790 <./split_8/mix053_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55827fa816c0 <col:31> col:34 'int'
|-FunctionDecl 0x55827fa81958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55827fa81a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55827fa81bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55827fa81b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55827fa81df8 <col:40, col:99>
|   |-IfStmt 0x55827fa81dc8 <col:42, col:88>
|   | |-UnaryOperator 0x55827fa81ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55827fa81c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55827fa81c70 <col:47> 'int' lvalue ParmVar 0x55827fa81b38 'expression' 'int'
|   | `-CompoundStmt 0x55827fa81db0 <col:59, col:88>
|   |   `-LabelStmt 0x55827fa81d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55827fa81d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55827fa81d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55827fa81cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x55827fa81a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55827fa81de0 <col:89>
|   `-ReturnStmt 0x55827fa81de8 <col:91>
|-FunctionDecl 0x55827fa81e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55827fa81f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55827fa82280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55827fa81fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55827fa82038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55827fa820b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55827fa82138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55827fa82340 <line:10:22>
|-FunctionDecl 0x55827faa8390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55827fa823b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55827fa82430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55827fa824b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55827fa82530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55827faa8450 <line:13:22>
|-FunctionDecl 0x55827faa8700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55827faa84c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55827faa8540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55827faa85c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55827faa87b8 <line:15:22>
|-TypedefDecl 0x55827faa8828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55827fa41f70 'unsigned char'
|-TypedefDecl 0x55827faa8898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55827fa41f90 'unsigned short'
|-TypedefDecl 0x55827faa8908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55827fa41fb0 'unsigned int'
|-TypedefDecl 0x55827faa8978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55827fa41fd0 'unsigned long'
|-TypedefDecl 0x55827faa89e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55827fa41ed0 'signed char'
|-TypedefDecl 0x55827faa8a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55827fa41f70 'unsigned char'
|-TypedefDecl 0x55827faa8ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55827fa41ef0 'short'
|-TypedefDecl 0x55827faa8b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55827fa41f90 'unsigned short'
|-TypedefDecl 0x55827faa8ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55827fa41f10 'int'
|-TypedefDecl 0x55827faa8c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55827fa41fb0 'unsigned int'
|-TypedefDecl 0x55827faa8c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55827fa41f30 'long'
|-TypedefDecl 0x55827faa8cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55827fa41fd0 'unsigned long'
|-TypedefDecl 0x55827faa8d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55827fa41f30 'long'
|-TypedefDecl 0x55827faa8dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55827fa41fd0 'unsigned long'
|-TypedefDecl 0x55827faa8e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55827fa41fd0 'unsigned long'
|-TypedefDecl 0x55827faa8eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55827fa41fb0 'unsigned int'
|-TypedefDecl 0x55827faa8f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55827fa41fb0 'unsigned int'
|-TypedefDecl 0x55827faa8f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55827fa41fd0 'unsigned long'
|-TypedefDecl 0x55827faa9008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55827fa41fd0 'unsigned long'
|-TypedefDecl 0x55827faa9078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55827fa41fb0 'unsigned int'
|-TypedefDecl 0x55827faa90e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55827fa41fd0 'unsigned long'
|-TypedefDecl 0x55827faa9158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55827fa41f30 'long'
|-TypedefDecl 0x55827faa91c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55827fa41f30 'long'
|-TypedefDecl 0x55827faa9238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55827fa41f10 'int'
|-RecordDecl 0x55827faa9290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55827faa9408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55827faa94c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55827faa9460 'struct __fsid_t' sugar
|   `-RecordType 0x55827faa9310 '__fsid_t'
|     `-Record 0x55827faa9290 ''
|-TypedefDecl 0x55827faa9548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55827fa41f30 'long'
|-TypedefDecl 0x55827faa95b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55827fa41fd0 'unsigned long'
|-TypedefDecl 0x55827faa9628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55827fa41fd0 'unsigned long'
|-TypedefDecl 0x55827faa9698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55827fa41fb0 'unsigned int'
|-TypedefDecl 0x55827faa9708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55827fa41f30 'long'
|-TypedefDecl 0x55827faa9778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55827fa41fb0 'unsigned int'
|-TypedefDecl 0x55827faa97e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55827fa41f30 'long'
|-TypedefDecl 0x55827faa9858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55827fa41f10 'int'
|-TypedefDecl 0x55827faa98c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55827fa41f10 'int'
|-TypedefDecl 0x55827faa9938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55827fa41f10 'int'
|-TypedefDecl 0x55827faa99a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55827fa42630 'void *'
|   `-BuiltinType 0x55827fa41e70 'void'
|-TypedefDecl 0x55827faa9a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55827fa41f30 'long'
|-TypedefDecl 0x55827faa9a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55827fa41f30 'long'
|-TypedefDecl 0x55827faa9af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55827fa41f30 'long'
|-TypedefDecl 0x55827faa9b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55827fa41fd0 'unsigned long'
|-TypedefDecl 0x55827faa9bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55827fa41fd0 'unsigned long'
|-TypedefDecl 0x55827faa9c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55827fa41fd0 'unsigned long'
|-TypedefDecl 0x55827faa9cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55827fa41fd0 'unsigned long'
|-TypedefDecl 0x55827faa9d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55827fa41f30 'long'
|-TypedefDecl 0x55827faa9d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55827fa41f30 'long'
|-TypedefDecl 0x55827faa9e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55827fa41f30 'long'
|-TypedefDecl 0x55827faa9e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55827fa41fd0 'unsigned long'
|-TypedefDecl 0x55827faa9f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55827faa9ed0 '__off64_t' sugar
|   |-Typedef 0x55827faa91c8 '__off64_t'
|   `-BuiltinType 0x55827fa41f30 'long'
|-TypedefDecl 0x55827faaa000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55827faa9fc0 '__quad_t *'
|   `-TypedefType 0x55827faa9f60 '__quad_t' sugar
|     |-Typedef 0x55827faa8d68 '__quad_t'
|     `-BuiltinType 0x55827fa41f30 'long'
|-TypedefDecl 0x55827faaa070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55827fa42ab0 'char *'
|   `-BuiltinType 0x55827fa41eb0 'char'
|-TypedefDecl 0x55827faaa0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55827fa41f30 'long'
|-TypedefDecl 0x55827faaa150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55827fa41fb0 'unsigned int'
|-FunctionDecl 0x55827faaa298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55827faaa1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55827faab5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55827faab5d8 <line:72:3, col:34>
|     `-CallExpr 0x55827faab598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55827faab580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55827faab510 <col:10> '<builtin fn type>' Function 0x55827faab380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55827faab5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55827faab530 <col:29> 'unsigned int' lvalue ParmVar 0x55827faaa1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55827faab380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55827faab420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55827faab490 <col:10> Implicit
| `-ConstAttr 0x55827faab4e8 <col:10> Implicit
|-FunctionDecl 0x55827faab740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55827faab638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55827faaba58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55827faaba48 <line:77:3, col:34>
|     `-CallExpr 0x55827faaba08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55827faab9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55827faab978 <col:10> '<builtin fn type>' Function 0x55827faab7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55827faaba30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55827faab998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55827faab638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55827faab7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55827faab888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55827faab8f8 <col:10> Implicit
| `-ConstAttr 0x55827faab950 <col:10> Implicit
|-TypedefDecl 0x55827faaba88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55827fa41fd0 'unsigned long'
|-TypedefDecl 0x55827faabb18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55827faabae0 '__time_t' sugar
|   |-Typedef 0x55827faa9708 '__time_t'
|   `-BuiltinType 0x55827fa41f30 'long'
|-RecordDecl 0x55827faabb70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55827faabc28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55827faabcb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55827faabd48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55827faabd10 '__pid_t' sugar
|   |-Typedef 0x55827faa9238 '__pid_t'
|   `-BuiltinType 0x55827fa41f10 'int'
|-RecordDecl 0x55827faabda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55827faabe60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55827faabeb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55827faabf70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55827faabfd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55827fa41fd0 'unsigned long'
|-RecordDecl 0x55827faac030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55827faac2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55827faad3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55827faac310 'struct cpu_set_t' sugar
|   `-RecordType 0x55827faac0b0 'cpu_set_t'
|     `-Record 0x55827faac030 ''
|-FunctionDecl 0x55827faad678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55827faad448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55827faad550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55827faad728 <line:107:19>
|-FunctionDecl 0x55827faad900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55827faad790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55827faad9a8 <col:69>
|-FunctionDecl 0x55827faadb20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55827faada10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55827faadbc8 <col:64>
|-FunctionDecl 0x55827faade88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55827faadc30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55827faadd68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55827faadf38 <line:113:22>
|-FunctionDecl 0x55827faae1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55827faadfa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55827faae098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55827faae268 <col:88>
|-FunctionDecl 0x55827faae588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55827faae2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55827faae3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55827faae440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55827faae640 <col:62>
|-FunctionDecl 0x55827faae7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55827faae6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55827faae860 <col:63>
|-FunctionDecl 0x55827faae988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55827faaea28 <col:47>
|-FunctionDecl 0x55827faaeb30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55827faaea98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55827faaebd8 <col:69>
|-FunctionDecl 0x55827faaece0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55827faaec48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55827faaed88 <col:69>
|-FunctionDecl 0x55827faaf048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55827faaedf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55827faaef28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55827faaf0f8 <col:88>
|-TypedefDecl 0x55827faaf188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55827faaf150 '__clock_t' sugar
|   |-Typedef 0x55827faa9548 '__clock_t'
|   `-BuiltinType 0x55827fa41f30 'long'
|-TypedefDecl 0x55827faaf218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55827faaf1e0 '__clockid_t' sugar
|   |-Typedef 0x55827faa9938 '__clockid_t'
|   `-BuiltinType 0x55827fa41f10 'int'
|-TypedefDecl 0x55827faaf2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55827faaf270 '__timer_t' sugar
|   |-Typedef 0x55827faa99a8 '__timer_t'
|   `-PointerType 0x55827fa42630 'void *'
|     `-BuiltinType 0x55827fa41e70 'void'
|-RecordDecl 0x55827faaf300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55827faaf3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55827faaf440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55827faaf4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55827faaf510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55827faaf578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55827faaf5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55827faaf648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55827faaf6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55827faaf718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55827faaf780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55827faaf7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55827faaf838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55827faaf908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55827faaf978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55827faafa20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55827faafbf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55827faafc90 <col:45>
|-FunctionDecl 0x55827faafe70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55827faafd60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55827faaff18 <col:54>
|-FunctionDecl 0x55827fab0118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55827faaff80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55827faafff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55827fab01c8 <line:157:22>
| `-ConstAttr 0x55827fab0220 <col:63>
|-FunctionDecl 0x55827fab1050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55827fab0318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55827fab10f8 <col:56>
|-FunctionDecl 0x55827fab14a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55827fab1168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55827fab11e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55827fab1260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55827fab1358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55827fab1560 <col:54>
|-RecordDecl 0x55827fab15b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55827fab1668 parent 0x55827fa41e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55827fab18c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55827fab1968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55827fab19d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55827fab1a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55827fab1b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55827fab1c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55827fab1bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x55827fab1b80 'struct __locale_struct' sugar
|     `-RecordType 0x55827fab1640 'struct __locale_struct'
|       `-Record 0x55827fab15b8 '__locale_struct'
|-TypedefDecl 0x55827fab1cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55827fab1cc0 '__locale_t' sugar
|   |-Typedef 0x55827fab1c48 '__locale_t'
|   `-PointerType 0x55827fab1bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x55827fab1b80 'struct __locale_struct' sugar
|       `-RecordType 0x55827fab1640 'struct __locale_struct'
|         `-Record 0x55827fab15b8 '__locale_struct'
|-FunctionDecl 0x55827fab3110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55827fab1d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55827fab1de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55827fab1e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55827fab1ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55827fab1f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55827fab31d8 <col:40>
|-FunctionDecl 0x55827fab33c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55827fab32a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55827fab3470 <col:66>
|-FunctionDecl 0x55827fab3580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55827fab34d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55827fab3628 <col:69>
|-FunctionDecl 0x55827fab3858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55827fab3690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55827fab3720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55827fab3908 <col:52>
|-FunctionDecl 0x55827fab3ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55827fab3970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55827fab3a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55827fab3b60 <col:55>
|-FunctionDecl 0x55827fab3cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55827fab3be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55827fab3da0 <col:62>
|-FunctionDecl 0x55827fab3f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55827fab3e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55827fab3fc0 <col:60>
|-FunctionDecl 0x55827fab42b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55827fab4118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55827fab4198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55827fab4368 <col:44>
|-FunctionDecl 0x55827fab4578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55827fab43d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55827fab4450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55827fab4628 <col:49>
|-VarDecl 0x55827fab4728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55827fab47a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55827fab4828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55827fab48f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55827fab4a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55827fab4ac0 <col:42>
|-VarDecl 0x55827fab4b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55827fab4bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55827fab4d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55827fab4c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55827fab4de0 <col:57>
|-FunctionDecl 0x55827fab4ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55827fab4e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55827fab4f98 <col:56>
|-FunctionDecl 0x55827fab50d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55827fab5018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55827fab5178 <col:59>
|-FunctionDecl 0x55827fab5280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55827fab51e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55827fab5328 <col:48>
| `-ConstAttr 0x55827fab5380 <col:89>
|-FunctionDecl 0x55827fab55e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55827fab5438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55827fab54c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55827fab5848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55827fab56d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55827fab5768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55827fab58f8 <col:88>
|-FunctionDecl 0x55827fab5a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55827fab5960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55827fab59f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55827fab5b40 <col:88>
|-FunctionDecl 0x55827fab5d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55827fab5ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55827fab5c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55827fab5e08 <line:208:22>
|-FunctionDecl 0x55827fab6178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55827fab5e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55827fab5ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55827fab5f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55827fab6010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55827fab6478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55827fab6278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55827fab6350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55827fab6528 <col:85>
|-FunctionDecl 0x55827fab6918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55827fab6590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55827fab66c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55827fab67d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55827fab69d0 <col:52>
|-FunctionDecl 0x55827fab6b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55827fab6a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55827fab6bf0 <col:61>
|-FunctionDecl 0x55827fab70f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55827fab6c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55827fab6cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55827fab6e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55827fab6ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55827fab71b0 <col:62>
|-FunctionDecl 0x55827fab73c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55827fab7218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55827fab72a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55827fab7478 <line:221:22>
|-FunctionDecl 0x55827fab7578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55827fab74e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55827fab7620 <col:65>
|-TypedefDecl 0x55827fab7690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55827fa41fd0 'unsigned long'
|-RecordDecl 0x55827fab76e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55827fab7830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55827fab7898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55827fab7948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55827fab78f0 'union pthread_attr_t' sugar
|   `-RecordType 0x55827fab7770 'union pthread_attr_t'
|     `-Record 0x55827fab76e8 'pthread_attr_t'
|-RecordDecl 0x55827fab79a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55827fab7b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55827fab7b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55827fab7c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55827fab7be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55827fab7a20 'struct __pthread_internal_list'
|     `-Record 0x55827fab79a0 '__pthread_internal_list'
|-RecordDecl 0x55827fab7cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55827fab7d58 parent 0x55827fa41e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55827fab7e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55827fab7e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55827fab7f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55827fab7f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55827fab7fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55827fab8038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55827fabc110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55827fabc1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55827fabc2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55827fabc318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55827fabc4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55827fabc440 'union pthread_mutex_t' sugar
|   `-RecordType 0x55827fab7d30 'pthread_mutex_t'
|     `-Record 0x55827fab7cb0 ''
|-RecordDecl 0x55827fabc510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55827fabc650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55827fabc6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55827fabc770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55827fabc710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55827fabc590 'pthread_mutexattr_t'
|     `-Record 0x55827fabc510 ''
|-RecordDecl 0x55827fabc7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55827fabc888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55827fabc950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55827fabc9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55827fabca20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55827fabca88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55827fabcaf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55827fabcb58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55827fabcbc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55827fabcc28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55827fabcce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_8/mix053_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_8/mix053_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55827fabcdd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55827fabce38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55827fabcf70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55827fabcf10 'union pthread_cond_t' sugar
|   `-RecordType 0x55827fabc860 'pthread_cond_t'
|     `-Record 0x55827fabc7e0 ''
|-RecordDecl 0x55827fabcfe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55827fabe130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55827fabe198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55827fabe250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55827fabe1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x55827fabd060 'pthread_condattr_t'
|     `-Record 0x55827fabcfe0 ''
|-TypedefDecl 0x55827fabe2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55827fa41fb0 'unsigned int'
|-TypedefDecl 0x55827fabe348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55827fa41f10 'int'
|-RecordDecl 0x55827fabe3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55827fabe448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55827fabe510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55827fabe578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55827fabe5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55827fabe648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55827fabe6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55827fabe718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55827fabe780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55827fabe7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55827fabe850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55827fabe8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55827fabe920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55827fabe9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_8/mix053_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_8/mix053_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55827fabea78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55827fabeae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55827fabec30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55827fabebd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55827fabe420 'pthread_rwlock_t'
|     `-Record 0x55827fabe3a0 ''
|-RecordDecl 0x55827fabeca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55827fabede0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55827fabee48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55827fabef00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55827fabeea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55827fabed20 'pthread_rwlockattr_t'
|     `-Record 0x55827fabeca0 ''
|-TypedefDecl 0x55827fabef88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55827fa41f14 'volatile int' volatile
|   `-BuiltinType 0x55827fa41f10 'int'
|-RecordDecl 0x55827fabefe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55827fac0140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55827fac01a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55827fac0260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55827fac0200 'union pthread_barrier_t' sugar
|   `-RecordType 0x55827fabf060 'pthread_barrier_t'
|     `-Record 0x55827fabefe0 ''
|-RecordDecl 0x55827fac02d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55827fac03d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55827fac0438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55827fac04f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55827fac0490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55827fac0350 'pthread_barrierattr_t'
|     `-Record 0x55827fac02d0 ''
|-TypedefDecl 0x55827fac0608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55827fac05a0 'long [8]' 8 
|   `-BuiltinType 0x55827fa41f30 'long'
|-EnumDecl 0x55827fac0660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55827fac0728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55827fac0778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55827fac07c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55827fac0898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55827fac08e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55827fac0938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55827fac0988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55827fac0a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55827fac09f8 <col:26> 'int'
| |   `-DeclRefExpr 0x55827fac09d8 <col:26> 'int' EnumConstant 0x55827fac0898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55827fac0a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55827fac0a80 <col:29> 'int'
| |   `-DeclRefExpr 0x55827fac0a60 <col:29> 'int' EnumConstant 0x55827fac08e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55827fac0b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55827fac0b08 <col:30> 'int'
| |   `-DeclRefExpr 0x55827fac0ae8 <col:30> 'int' EnumConstant 0x55827fac0938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55827fac0ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55827fac0b90 <col:27> 'int'
|     `-DeclRefExpr 0x55827fac0b70 <col:27> 'int' EnumConstant 0x55827fac0a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55827fac0bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55827fac0cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55827fac0d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55827fac0d38 <col:30> 'int'
| |   `-DeclRefExpr 0x55827fac0d18 <col:30> 'int' EnumConstant 0x55827fac0cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55827fac0da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55827fac0e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55827fac0e10 <col:29> 'int'
|     `-DeclRefExpr 0x55827fac0df0 <col:29> 'int' EnumConstant 0x55827fac0da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55827fac0e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55827fac0f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55827fac0f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55827fac0fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55827fac1038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55827fac1150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55827fac11a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55827fac11f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55827fac1278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55827fac1260 <col:31> 'int'
|     `-DeclRefExpr 0x55827fac1240 <col:31> 'int' EnumConstant 0x55827fac1150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55827fac12c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55827fac1398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55827fac13e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55827fac1438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55827fac1508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55827fac1558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55827fac15a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55827fac1678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55827fac16c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55827fac1718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55827fac1958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55827fac19c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55827fac1a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55827fac1b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55827fac1b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55827fac1c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55827fac1cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55827fac1d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55827fac1dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55827fac1e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55827fac2488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55827fac1f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55827fac2030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55827fac2270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55827fac22f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55827fac2548 <col:47>
| |-NonNullAttr 0x55827fac25a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55827fac25d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55827fac2700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55827fac2630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55827fac2958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55827fac27b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55827fac2838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55827fac2b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55827fac2a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55827fac2bd0 <col:60>
|-FunctionDecl 0x55827fac2d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55827fac2dc0 <col:54>
| `-ConstAttr 0x55827fac2e18 <col:95>
|-FunctionDecl 0x55827fac2fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55827fac2e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55827fac2ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55827fac3098 <line:394:19>
| `-ConstAttr 0x55827fac30f0 <col:60>
|-FunctionDecl 0x55827fac4b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55827fac49d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55827fac4bb0 <col:71>
| `-NonNullAttr 0x55827fac4c08 <col:112, col:126> 1
|-FunctionDecl 0x55827fac4d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55827fac4c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55827fac4db8 <line:397:22>
| `-NonNullAttr 0x55827fac4e10 <col:63, col:77> 1
|-FunctionDecl 0x55827fac5038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55827fac4e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55827fac4ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55827fac50e8 <line:400:22>
| `-NonNullAttr 0x55827fac5140 <col:63, col:80> 1 2
|-FunctionDecl 0x55827fac5348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55827fac5188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55827fac5208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55827fac53f8 <line:403:22>
| `-NonNullAttr 0x55827fac5450 <col:63, col:77> 1
|-FunctionDecl 0x55827fac56a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55827fac5498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55827fac5540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55827fac5758 <line:406:22>
| `-NonNullAttr 0x55827fac57b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55827fac69e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55827fac57f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55827fac5870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55827fac6a98 <line:409:22>
| `-NonNullAttr 0x55827fac6af0 <col:63, col:77> 1
|-FunctionDecl 0x55827fac6d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55827fac6b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55827fac6bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55827fac6dd8 <line:412:22>
| `-NonNullAttr 0x55827fac6e30 <col:63, col:80> 1 2
|-FunctionDecl 0x55827fac7068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55827fac6e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55827fac6f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55827fac7118 <col:37>
| `-NonNullAttr 0x55827fac7170 <col:78, col:95> 1 2
|-FunctionDecl 0x55827fac7358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55827fac71b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55827fac7238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55827fac7408 <line:418:22>
| `-NonNullAttr 0x55827fac7460 <col:63, col:80> 1 2
|-FunctionDecl 0x55827fac75e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55827fac74a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55827fac7528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55827fac7698 <line:420:22>
| `-NonNullAttr 0x55827fac76f0 <col:63, col:77> 1
|-FunctionDecl 0x55827fac7898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55827fac7738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55827fac77b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55827fac7948 <line:423:22>
| `-NonNullAttr 0x55827fac79c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55827fac7b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55827fac7a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55827fac7a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55827fac7bf8 <line:426:22>
| `-NonNullAttr 0x55827fac7c50 <col:63, col:77> 1
|-FunctionDecl 0x55827fac7df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55827fac7c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55827fac7d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55827fac7ea8 <line:429:22>
| `-NonNullAttr 0x55827fac7f00 <col:63, col:80> 1 2
|-FunctionDecl 0x55827fac8088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55827fac7f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55827fac7fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55827fac8138 <line:431:22>
| `-NonNullAttr 0x55827fac8190 <col:63, col:77> 1
|-FunctionDecl 0x55827fac83b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55827fac81d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55827fac8258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55827fac8468 <line:434:22>
| |-NonNullAttr 0x55827fac84c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55827fac84f8 <col:100> "" ""
|-FunctionDecl 0x55827fac8708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55827fac8548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55827fac85c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55827fac87b8 <line:437:22>
| |-NonNullAttr 0x55827fac8810 <col:63, col:77> 1
| `-DeprecatedAttr 0x55827fac8848 <col:97> "" ""
|-FunctionDecl 0x55827fac8a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55827fac8898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55827fac8910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55827fac8af8 <line:440:22>
| `-NonNullAttr 0x55827fac8b50 <col:63, col:80> 1 2
|-FunctionDecl 0x55827fac8cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55827fac8b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55827fac8c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55827fac8d80 <line:443:22>
| `-NonNullAttr 0x55827fac8dd8 <col:63, col:77> 1
|-FunctionDecl 0x55827fac90c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55827fac8e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55827fac8ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55827fac8f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55827fac9180 <line:447:22>
| `-NonNullAttr 0x55827fac91d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55827fac9488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55827fac9230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55827fac92b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55827fac9328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55827fac9540 <col:43>
| `-NonNullAttr 0x55827fac9598 <col:84, col:98> 1
|-FunctionDecl 0x55827fac9858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55827fac95e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55827fac9668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55827fac96f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55827fac9910 <line:452:22>
| `-NonNullAttr 0x55827fac9968 <col:63, col:77> 3
|-FunctionDecl 0x55827fac9c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55827fac99e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55827fac9a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55827fac9af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55827fac9d30 <line:456:22>
| `-NonNullAttr 0x55827fac9d88 <col:63, col:80> 2 3
|-FunctionDecl 0x55827fac9f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55827fac9dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55827fac9e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55827faca028 <line:458:22>
|-FunctionDecl 0x55827faca3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55827faca0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55827faca290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55827faca4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x55827faca650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55827faca530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55827faca5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55827faca838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55827faca718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55827faca798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55827faca9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55827faca8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55827facab30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55827facabd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55827facac78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55827facad68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55827facadd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55827facafa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_8/mix053_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55827facb098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55827facb150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55827facb0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55827facac50 '__pthread_unwind_buf_t'
| |   `-Record 0x55827facabd0 ''
| `-AlignedAttr 0x55827facb1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55827facb220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55827facb380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55827facb3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55827facb450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55827facb4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55827facb6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55827facb5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55827facb808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55827facb778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55827facba00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55827facb8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55827facbaa8 <line:487:22>
|-RecordDecl 0x55827facbb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55827facbe18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55827facbc78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55827facbcf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55827facbec8 <col:86>
| `-ReturnsTwiceAttr 0x55827facbf20 <col:12> Implicit
|-FunctionDecl 0x55827facc248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55827facbff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55827facc100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55827facc2f8 <line:493:22>
| `-NonNullAttr 0x55827facc350 <col:63, col:77> 1
|-FunctionDecl 0x55827facc4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55827facc398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55827facc570 <line:495:22>
| `-NonNullAttr 0x55827facc5c8 <col:63, col:77> 1
|-FunctionDecl 0x55827facc6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55827facc618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55827facc778 <line:497:22>
| `-NonNullAttr 0x55827facc7d0 <col:52, col:66> 1
|-FunctionDecl 0x55827facc8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55827facc818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55827facc978 <line:499:22>
| `-NonNullAttr 0x55827facc9d0 <col:52, col:66> 1
|-FunctionDecl 0x55827facdc28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55827facda38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55827facdac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55827facdcd8 <col:36>
| `-NonNullAttr 0x55827facdd30 <col:66, col:83> 1 2
|-FunctionDecl 0x55827facde30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55827facdd78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55827facded8 <line:504:22>
| `-NonNullAttr 0x55827facdf30 <col:52, col:66> 1
|-FunctionDecl 0x55827face1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55827facdfe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55827face060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55827face278 <line:508:22>
| `-NonNullAttr 0x55827face2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55827face598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55827face318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55827face398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55827face418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55827face650 <line:512:22>
| `-NonNullAttr 0x55827face6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x55827face7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55827face6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55827face858 <line:514:22>
| `-NonNullAttr 0x55827face8b0 <col:63, col:77> 1
|-FunctionDecl 0x55827facead8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55827face960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55827faceb80 <line:516:22>
| `-NonNullAttr 0x55827facebd8 <col:63, col:77> 1
|-FunctionDecl 0x55827facece0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55827facec28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55827faced88 <line:518:22>
| `-NonNullAttr 0x55827facede0 <col:63, col:77> 1
|-FunctionDecl 0x55827facf008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55827facee28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55827faceea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55827facf0b8 <line:522:22>
| `-NonNullAttr 0x55827facf110 <col:63, col:80> 1 2
|-FunctionDecl 0x55827facf318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55827facf158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55827facf1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55827facf3c8 <line:525:22>
| `-NonNullAttr 0x55827facf420 <col:63, col:77> 1
|-FunctionDecl 0x55827facf5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55827facf468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55827facf4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55827facf678 <line:528:22>
| `-NonNullAttr 0x55827facf6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55827facf858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55827facf718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55827facf798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55827facf908 <line:530:22>
| `-NonNullAttr 0x55827facf960 <col:63, col:77> 1
|-FunctionDecl 0x55827facfb20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55827facf9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55827facfa40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55827facfbd0 <line:534:22>
| `-NonNullAttr 0x55827facfc28 <col:63, col:80> 1 2
|-FunctionDecl 0x55827facfdb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55827facfc78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55827facfcf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55827facfe68 <line:537:22>
| `-NonNullAttr 0x55827facfec0 <col:63, col:77> 1
|-FunctionDecl 0x55827fad0068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55827facff08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55827facff88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55827fad0118 <line:541:22>
| `-NonNullAttr 0x55827fad0170 <col:63, col:80> 1 2
|-FunctionDecl 0x55827fad02f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55827fad01b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55827fad0238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55827fad03a8 <line:544:22>
| `-NonNullAttr 0x55827fad0400 <col:63, col:77> 1
|-FunctionDecl 0x55827fad05e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55827fad0448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55827fad04c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55827fad0698 <line:547:22>
| `-NonNullAttr 0x55827fad06f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55827fad0878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55827fad0738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55827fad07b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55827fad0928 <line:550:22>
| `-NonNullAttr 0x55827fad0980 <col:63, col:77> 1
|-FunctionDecl 0x55827fad1cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55827fad1aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55827fad1bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55827fad1da8 <col:29>
| `-NonNullAttr 0x55827fad1e00 <col:70, col:84> 1
|-FunctionDecl 0x55827fad1f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55827fad1e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55827fad2020 <line:555:22>
| `-NonNullAttr 0x55827fad2078 <col:63, col:77> 1
|-FunctionDecl 0x55827fad2180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55827fad20c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55827fad2228 <line:557:22>
| `-NonNullAttr 0x55827fad2280 <col:52, col:66> 1
|-FunctionDecl 0x55827fad2380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55827fad22c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55827fad2428 <line:559:19>
| `-NonNullAttr 0x55827fad2480 <col:49, col:63> 1
|-FunctionDecl 0x55827fad26b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55827fad24c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55827fad2558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55827fad2768 <col:39>
| `-NonNullAttr 0x55827fad27c0 <col:69, col:86> 1 2
|-FunctionDecl 0x55827fad28c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55827fad2808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55827fad2968 <line:564:22>
| `-NonNullAttr 0x55827fad29c0 <col:52, col:66> 1
|-FunctionDecl 0x55827fad2b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55827fad2a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55827fad2bd0 <line:566:22>
| `-NonNullAttr 0x55827fad2c28 <col:52, col:66> 1
|-FunctionDecl 0x55827fad2de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55827fad2c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55827fad2d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55827fad2e98 <col:39>
| `-NonNullAttr 0x55827fad2ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x55827fad2ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55827fad2f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55827fad3098 <line:571:22>
| `-NonNullAttr 0x55827fad30f0 <col:52, col:66> 1
|-FunctionDecl 0x55827fad32d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55827fad31a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55827fad3380 <line:573:22>
| `-NonNullAttr 0x55827fad33d8 <col:63, col:77> 1
|-FunctionDecl 0x55827fad34e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55827fad3428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55827fad3588 <line:575:22>
| `-NonNullAttr 0x55827fad35e0 <col:63, col:77> 1
|-FunctionDecl 0x55827fad3808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55827fad3628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55827fad36a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55827fad38b8 <line:579:22>
| `-NonNullAttr 0x55827fad3910 <col:63, col:80> 1 2
|-FunctionDecl 0x55827fad3b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55827fad3958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55827fad39d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55827fad3be8 <line:582:22>
| `-NonNullAttr 0x55827fad3c40 <col:63, col:77> 1
|-FunctionDecl 0x55827fad3de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55827fad3c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55827fad3d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55827fad3e98 <line:586:22>
| `-NonNullAttr 0x55827fad3ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x55827fad4078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55827fad3f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55827fad3fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55827fad4128 <col:36>
| `-NonNullAttr 0x55827fad4180 <col:77, col:91> 1
|-FunctionDecl 0x55827fad44b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55827fad4260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55827fad4370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55827fad4568 <line:591:22>
| `-NonNullAttr 0x55827fad45c0 <col:63, col:77> 1
|-FunctionDecl 0x55827fad4738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55827fad4608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55827fad47e0 <line:593:22>
| `-NonNullAttr 0x55827fad4838 <col:63, col:77> 1
|-FunctionDecl 0x55827fad4940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55827fad4888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55827fad49e8 <line:595:22>
| `-NonNullAttr 0x55827fad4a40 <col:52, col:66> 1
|-FunctionDecl 0x55827fad4b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55827fad4aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55827fad4c00 <line:597:22>
| `-NonNullAttr 0x55827fad4c58 <col:52, col:66> 1
|-FunctionDecl 0x55827fad4e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55827fad4ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55827fad4d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55827fad4f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55827fad5268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55827fad4fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55827fad5030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55827fad50c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55827fad5320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55827fad5538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55827fad5400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55827fad55e0 <line:606:22>
| `-NonNullAttr 0x55827fad5638 <col:63, col:77> 1
|-FunctionDecl 0x55827fad5740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55827fad5688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55827fad57e8 <line:608:22>
| `-NonNullAttr 0x55827fad5840 <col:63, col:77> 1
|-FunctionDecl 0x55827fad5aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55827fad5888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55827fad5908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55827fad5b50 <line:612:22>
| `-NonNullAttr 0x55827fad5ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x55827fad5db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55827fad5bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55827fad5c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55827fad5e68 <col:37>
| `-NonNullAttr 0x55827fad5ec0 <col:78, col:92> 1
|-FunctionDecl 0x55827fad60d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55827fad5f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55827fad5fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55827fad6188 <line:618:22>
| `-NonNullAttr 0x55827fad61e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55827fad63a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55827fad6228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55827fad62a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55827fad6458 <line:621:22>
| `-NonNullAttr 0x55827fad64b0 <col:63, col:77> 1
|-FunctionDecl 0x55827fad6758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55827fad6590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55827fad6610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55827fad6808 <line:623:22>
| `-NonNullAttr 0x55827fad6860 <col:63, col:77> 1
|-FunctionDecl 0x55827fad69d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55827fad68a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55827fad6ab0 <line:625:22>
| `-NonNullAttr 0x55827fad6b08 <col:63, col:77> 1
|-FunctionDecl 0x55827fad6c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55827fad6b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55827fad6cb8 <line:627:22>
| `-NonNullAttr 0x55827fad6d10 <col:52, col:66> 1
|-FunctionDecl 0x55827fad6e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55827fad6d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55827fad6eb8 <line:629:22>
| `-NonNullAttr 0x55827fad6f10 <col:52, col:66> 1
|-FunctionDecl 0x55827fad7010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55827fad6f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55827fad70b8 <line:631:22>
| `-NonNullAttr 0x55827fad7110 <col:52, col:66> 1
|-FunctionDecl 0x55827fad74e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55827fad71f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55827fad7300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55827fad7380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55827fad75a0 <line:635:22>
| `-NonNullAttr 0x55827fad75f8 <col:63, col:77> 1
|-FunctionDecl 0x55827fad7778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55827fad7648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55827fad7820 <line:637:22>
| `-NonNullAttr 0x55827fad7878 <col:63, col:77> 1
|-FunctionDecl 0x55827fad7980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55827fad78c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55827fad7a28 <line:639:22>
| `-NonNullAttr 0x55827fad7a80 <col:52, col:66> 1
|-FunctionDecl 0x55827fad8c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55827fad8b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55827fad8d30 <line:641:22>
| `-NonNullAttr 0x55827fad8d88 <col:63, col:77> 1
|-FunctionDecl 0x55827fad8e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55827fad8dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55827fad8f38 <line:643:22>
| `-NonNullAttr 0x55827fad8f90 <col:63, col:77> 1
|-FunctionDecl 0x55827fad91b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55827fad8fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55827fad9058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55827fad9268 <line:647:22>
| `-NonNullAttr 0x55827fad92c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55827fad94c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55827fad9308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55827fad9388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55827fad9578 <line:650:22>
| `-NonNullAttr 0x55827fad95d0 <col:63, col:77> 1
|-FunctionDecl 0x55827fad9918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55827fad96b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55827fad97d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55827fad99c8 <line:653:22>
| `-NonNullAttr 0x55827fad9a20 <col:63, col:77> 1
|-FunctionDecl 0x55827fad9b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55827fad9a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55827fad9c30 <col:69>
|-FunctionDecl 0x55827fad9da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55827fad9c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55827fad9e50 <col:72>
|-FunctionDecl 0x55827fada088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55827fad9eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55827fad9f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55827fada138 <col:44>
|-FunctionDecl 0x55827fada358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55827fada1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55827fada218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55827fada408 <line:660:22>
| `-NonNullAttr 0x55827fada460 <col:63, col:77> 2
|-FunctionDecl 0x55827fada8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55827fada540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55827fada650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55827fada760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55827fada960 <col:47>
|-FunctionDecl 0x55827fadaaf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55827fada9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55827fadac48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55827fadabb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55827fadada0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55827fadad08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55827fadaef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x55827fadae60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55827fadafc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55827fadb080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55827fadb140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55827fadb1f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55827fadb278 prev 0x55827fadb1f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55827fadb2e0 <col:24> 'int' 0
|-VarDecl 0x55827fadb318 <line:674:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55827fadb398 prev 0x55827fadb318 <line:675:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55827fadb400 <col:27> 'int' 0
|-VarDecl 0x55827fadb438 <line:676:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x55827fadb4b8 prev 0x55827fadb438 <line:677:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x55827fadb520 <col:27> 'int' 0
|-VarDecl 0x55827fadb558 <line:678:1, col:5> col:5 used a 'int'
|-VarDecl 0x55827fadb5d8 prev 0x55827fadb558 <line:679:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x55827fadb640 <col:9> 'int' 0
|-VarDecl 0x55827fadb670 <line:680:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x55827fadb6f0 <line:681:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x55827fadb768 <line:682:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x55827fadb7e0 <line:683:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x55827fadb858 <line:684:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x55827fadb8d0 <line:685:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x55827fadb948 <line:686:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x55827fadb9c0 <line:687:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x55827fadba38 <line:688:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x55827fadbb00 <line:689:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x55827fadbb78 <line:690:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x55827fadbbf0 <line:691:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x55827fadbc68 <line:692:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x55827fadbce8 <line:693:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x55827fadbd68 <line:694:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x55827fadbde0 <line:695:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x55827fadbe60 <line:696:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x55827fadbed8 <line:697:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x55827fadbf50 <line:698:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55827fadbfc8 <line:699:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55827fadc048 <line:700:1, col:5> col:5 used x 'int'
|-VarDecl 0x55827fadc0c8 prev 0x55827fadc048 <line:701:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55827fadc130 <col:9> 'int' 0
|-VarDecl 0x55827fadc168 <line:702:1, col:5> col:5 used y 'int'
|-VarDecl 0x55827fadc1e8 prev 0x55827fadc168 <line:703:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55827fadc250 <col:9> 'int' 0
|-VarDecl 0x55827fadc288 <line:704:1, col:5> col:5 used z 'int'
|-VarDecl 0x55827fadc308 prev 0x55827fadc288 <line:705:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55827fadc370 <col:9> 'int' 0
|-VarDecl 0x55827fadc3a0 <line:706:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55827fadc418 <line:707:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55827fadc530 prev 0x55827fadaaf0 <line:708:1, line:737:1> line:708:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55827fadc498 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55827faddde8 <line:709:1, line:737:1>
|   |-CallExpr 0x55827fadc648 <line:710:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827fadc630 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fadc5d8 <col:3> 'void ()' Function 0x55827fa81e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827fadc6c0 <line:711:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55827fadc668 <col:3> 'int' lvalue Var 0x55827fadbe60 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55827fadc6a8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55827fadc688 <col:15> 'int' lvalue Var 0x55827fadbd68 'a$w_buff0' 'int'
|   |-BinaryOperator 0x55827fadc720 <line:712:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55827fadc6e0 <col:3> 'int' lvalue Var 0x55827fadbd68 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x55827fadc700 <col:15> 'int' 1
|   |-BinaryOperator 0x55827fadc798 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55827fadc740 <col:3> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55827fadc780 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55827fadc760 <col:20> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55827fadc830 <line:714:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55827fadc7b8 <col:3> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55827fadc808 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55827fadc7d8 <col:27> 'int' 1
|   |-CallExpr 0x55827fadc9b8 <line:715:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55827fadc9a0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55827fadc850 <col:3> 'void (int)' Function 0x55827fa81bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55827fadc950 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55827fadc930 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55827fadc910 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55827fadc8c8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55827fadc8b0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55827fadc870 <col:23> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55827fadc8f8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55827fadc8e0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55827fadc890 <col:41> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55827fadca38 <line:716:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55827fadc9e0 <col:3> '_Bool' lvalue Var 0x55827fadb9c0 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55827fadca20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55827fadca00 <col:20> '_Bool' lvalue Var 0x55827fadb768 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55827fadcab0 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55827fadca58 <col:3> '_Bool' lvalue Var 0x55827fadba38 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55827fadca98 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55827fadca78 <col:20> '_Bool' lvalue Var 0x55827fadb7e0 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55827fadcb48 <line:718:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55827fadcad0 <col:3> '_Bool' lvalue Var 0x55827fadbb00 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55827fadcb30 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55827fadcb10 <col:20> '_Bool' lvalue Var 0x55827fadb858 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55827fadcbc0 <line:719:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55827fadcb68 <col:3> '_Bool' lvalue Var 0x55827fadbb78 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55827fadcba8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55827fadcb88 <col:20> '_Bool' lvalue Var 0x55827fadb8d0 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55827fadcc38 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55827fadcbe0 <col:3> '_Bool' lvalue Var 0x55827fadbbf0 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55827fadcc20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55827fadcc00 <col:20> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55827fadccd0 <line:721:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55827fadcc58 <col:3> '_Bool' lvalue Var 0x55827fadb7e0 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x55827fadcca8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55827fadcc78 <col:27> 'int' 1
|   |-CallExpr 0x55827fadcd28 <line:722:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827fadcd10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fadccf0 <col:3> 'void ()' Function 0x55827fa81f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55827fadcd80 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827fadcd68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fadcd48 <col:3> 'void ()' Function 0x55827fa81e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827fadcde0 <line:724:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55827fadcda0 <col:3> 'int' lvalue Var 0x55827fadc0c8 'x' 'int'
|   | `-IntegerLiteral 0x55827fadcdc0 <col:7> 'int' 1
|   |-CallExpr 0x55827fadce38 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827fadce20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fadce00 <col:3> 'void ()' Function 0x55827fa81f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55827fadce90 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827fadce78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fadce58 <col:3> 'void ()' Function 0x55827fa81e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827fadd178 <line:727:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55827fadceb0 <col:3> 'int' lvalue Var 0x55827fadb5d8 'a' 'int'
|   | `-ConditionalOperator 0x55827fadd148 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55827fadcf70 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55827fadcf28 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55827fadcf10 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55827fadced0 <col:7> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55827fadcf58 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55827fadcf40 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55827fadcef0 <col:25> '_Bool' lvalue Var 0x55827fadb7e0 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55827fadd130 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55827fadcf90 <col:42> 'int' lvalue Var 0x55827fadbd68 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x55827fadd110 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55827fadd0e0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55827fadd050 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55827fadd008 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55827fadcff0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55827fadcfb0 <col:55> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55827fadd038 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55827fadd020 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55827fadcfd0 <col:73> '_Bool' lvalue Var 0x55827fadba38 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55827fadd0b0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55827fadd070 <col:90> 'int' lvalue Var 0x55827fadbe60 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55827fadd0c8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827fadd090 <col:102> 'int' lvalue Var 0x55827fadb5d8 'a' 'int'
|   |-BinaryOperator 0x55827fadd380 <line:728:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55827fadd198 <col:3> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55827fadd368 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827fadd338 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55827fadd258 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55827fadd210 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55827fadd1f8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55827fadd1b8 <col:20> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55827fadd240 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55827fadd228 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55827fadd1d8 <col:38> '_Bool' lvalue Var 0x55827fadb7e0 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55827fadd2f0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827fadd2a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827fadd278 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55827fadd320 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827fadd308 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827fadd2d0 <col:66> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55827fadd668 <line:729:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55827fadd3a0 <col:3> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55827fadd650 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827fadd620 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55827fadd540 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55827fadd460 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55827fadd418 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55827fadd400 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55827fadd3c0 <col:20> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55827fadd448 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55827fadd430 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55827fadd3e0 <col:38> '_Bool' lvalue Var 0x55827fadb7e0 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55827fadd520 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55827fadd4d8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55827fadd4c0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55827fadd480 <col:56> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55827fadd508 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55827fadd4f0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55827fadd4a0 <col:74> '_Bool' lvalue Var 0x55827fadba38 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55827fadd5d8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827fadd590 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827fadd560 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55827fadd608 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827fadd5f0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827fadd5b8 <col:102> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55827fadd870 <line:730:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55827fadd688 <col:3> '_Bool' lvalue Var 0x55827fadb7e0 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55827fadd858 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827fadd828 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55827fadd748 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55827fadd700 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55827fadd6e8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55827fadd6a8 <col:20> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55827fadd730 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55827fadd718 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55827fadd6c8 <col:38> '_Bool' lvalue Var 0x55827fadb7e0 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55827fadd7e0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827fadd798 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827fadd768 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55827fadd810 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827fadd7f8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827fadd7c0 <col:66> '_Bool' lvalue Var 0x55827fadb7e0 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55827faddb68 <line:731:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55827fadd890 <col:3> '_Bool' lvalue Var 0x55827fadba38 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55827faddb50 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827faddb20 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55827fadda30 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55827fadd950 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55827fadd908 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55827fadd8f0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55827fadd8b0 <col:20> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55827fadd938 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55827fadd920 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55827fadd8d0 <col:38> '_Bool' lvalue Var 0x55827fadb7e0 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55827fadda10 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55827fadd9c8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55827fadd9b0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55827fadd970 <col:56> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55827fadd9f8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55827fadd9e0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55827fadd990 <col:74> '_Bool' lvalue Var 0x55827fadba38 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55827faddac8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827fadda80 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827fadda50 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55827faddaf8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827faddae0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827faddaa8 <col:102> '_Bool' lvalue Var 0x55827fadba38 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55827faddbc0 <line:732:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827faddba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827faddb88 <col:3> 'void ()' Function 0x55827fa81f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55827faddc18 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827faddc00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827faddbe0 <col:3> 'void ()' Function 0x55827fa81e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827faddcd0 <line:734:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55827faddc38 <col:3> 'int' lvalue Var 0x55827fadb278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55827faddcb0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55827faddc98 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55827faddc58 <col:22> 'int' lvalue Var 0x55827fadb278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55827faddc78 <col:41> 'int' 1
|   |-CallExpr 0x55827faddd28 <line:735:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827faddd10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827faddcf0 <col:3> 'void ()' Function 0x55827fa81f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55827fadddd8 <line:736:3, col:36>
|     `-CallExpr 0x55827fadddb8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55827faddda0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55827faddd48 <col:10> 'void *(void)' Function 0x55827fa81958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55827faddf80 prev 0x55827fadac48 <line:738:1, line:757:1> line:738:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55827faddee8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55827fadf1a0 <line:739:1, line:757:1>
|   |-CallExpr 0x55827fade060 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827fade048 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fade028 <col:3> 'void ()' Function 0x55827fa81e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827fade0c0 <line:741:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55827fade080 <col:3> 'int' lvalue Var 0x55827fadc0c8 'x' 'int'
|   | `-IntegerLiteral 0x55827fade0a0 <col:7> 'int' 2
|   |-CallExpr 0x55827fade118 <line:742:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827fade100 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fade0e0 <col:3> 'void ()' Function 0x55827fa81f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55827fade170 <line:743:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827fade158 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fade138 <col:3> 'void ()' Function 0x55827fa81e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827fade1d0 <line:744:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55827fade190 <col:3> 'int' lvalue Var 0x55827fadc1e8 'y' 'int'
|   | `-IntegerLiteral 0x55827fade1b0 <col:7> 'int' 1
|   |-CallExpr 0x55827fade228 <line:745:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827fade210 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fade1f0 <col:3> 'void ()' Function 0x55827fa81f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55827fade280 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827fade268 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fade248 <col:3> 'void ()' Function 0x55827fa81e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827fade568 <line:747:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55827fade2a0 <col:3> 'int' lvalue Var 0x55827fadb5d8 'a' 'int'
|   | `-ConditionalOperator 0x55827fade538 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55827fade360 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55827fade318 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55827fade300 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55827fade2c0 <col:7> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55827fade348 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55827fade330 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55827fade2e0 <col:25> '_Bool' lvalue Var 0x55827fadb858 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55827fade520 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55827fade380 <col:42> 'int' lvalue Var 0x55827fadbd68 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x55827fade500 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55827fade4d0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55827fade440 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55827fade3f8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55827fade3e0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55827fade3a0 <col:55> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55827fade428 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55827fade410 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55827fade3c0 <col:73> '_Bool' lvalue Var 0x55827fadbb00 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55827fade4a0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55827fade460 <col:90> 'int' lvalue Var 0x55827fadbe60 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55827fade4b8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827fade480 <col:102> 'int' lvalue Var 0x55827fadb5d8 'a' 'int'
|   |-BinaryOperator 0x55827fade770 <line:748:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55827fade588 <col:3> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55827fade758 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827fade728 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55827fade648 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55827fade600 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55827fade5e8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55827fade5a8 <col:20> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55827fade630 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55827fade618 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55827fade5c8 <col:38> '_Bool' lvalue Var 0x55827fadb858 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55827fade6e0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827fade698 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827fade668 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55827fade710 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827fade6f8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827fade6c0 <col:66> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55827fadea58 <line:749:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55827fade790 <col:3> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55827fadea40 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827fadea10 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55827fade930 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55827fade850 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55827fade808 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55827fade7f0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55827fade7b0 <col:20> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55827fade838 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55827fade820 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55827fade7d0 <col:38> '_Bool' lvalue Var 0x55827fadb858 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55827fade910 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55827fade8c8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55827fade8b0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55827fade870 <col:56> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55827fade8f8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55827fade8e0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55827fade890 <col:74> '_Bool' lvalue Var 0x55827fadbb00 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55827fade9c8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827fade980 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827fade950 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55827fade9f8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827fade9e0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827fade9a8 <col:102> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55827fadec70 <line:750:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55827fadea78 <col:3> '_Bool' lvalue Var 0x55827fadb858 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55827fadec58 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827fadec28 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55827fadeb48 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55827fadeaf0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55827fadead8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55827fadea98 <col:20> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55827fadeb30 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55827fadeb08 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55827fadeab8 <col:38> '_Bool' lvalue Var 0x55827fadb858 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55827fadebe0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827fadeb98 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827fadeb68 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55827fadec10 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827fadebf8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827fadebc0 <col:66> '_Bool' lvalue Var 0x55827fadb858 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55827fadef58 <line:751:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55827fadec90 <col:3> '_Bool' lvalue Var 0x55827fadbb00 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55827fadef40 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827fadef10 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55827fadee30 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55827faded50 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55827faded08 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55827fadecf0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55827fadecb0 <col:20> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55827faded38 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55827faded20 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55827fadecd0 <col:38> '_Bool' lvalue Var 0x55827fadb858 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55827fadee10 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55827fadedc8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55827fadedb0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55827faded70 <col:56> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55827fadedf8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55827fadede0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55827faded90 <col:74> '_Bool' lvalue Var 0x55827fadbb00 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55827fadeec8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827fadee80 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827fadee50 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55827fadeef8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827fadeee0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827fadeea8 <col:102> '_Bool' lvalue Var 0x55827fadbb00 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55827fadefb0 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827fadef98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fadef78 <col:3> 'void ()' Function 0x55827fa81f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55827fadf008 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827fadeff0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fadefd0 <col:3> 'void ()' Function 0x55827fa81e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827fadf0c0 <line:754:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55827fadf028 <col:3> 'int' lvalue Var 0x55827fadb278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55827fadf0a0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55827fadf088 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55827fadf048 <col:22> 'int' lvalue Var 0x55827fadb278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55827fadf068 <col:41> 'int' 1
|   |-CallExpr 0x55827fadf118 <line:755:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827fadf100 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fadf0e0 <col:3> 'void ()' Function 0x55827fa81f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55827fadf190 <line:756:3, col:36>
|     `-CallExpr 0x55827fadf170 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55827fadf158 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55827fadf138 <col:10> 'void *(void)' Function 0x55827fa81958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55827fadf2e8 prev 0x55827fadada0 <line:758:1, line:777:1> line:758:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55827fadf250 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55827fae0520 <line:759:1, line:777:1>
|   |-CallExpr 0x55827fadf3c8 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827fadf3b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fadf390 <col:3> 'void ()' Function 0x55827fa81e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827fadf428 <line:761:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55827fadf3e8 <col:3> 'int' lvalue Var 0x55827fadc1e8 'y' 'int'
|   | `-IntegerLiteral 0x55827fadf408 <col:7> 'int' 2
|   |-CallExpr 0x55827fadf480 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827fadf468 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fadf448 <col:3> 'void ()' Function 0x55827fa81f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55827fadf4d8 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827fadf4c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fadf4a0 <col:3> 'void ()' Function 0x55827fa81e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827fadf550 <line:764:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55827fadf4f8 <col:3> 'int' lvalue Var 0x55827fadb398 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55827fadf538 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55827fadf518 <col:25> 'int' lvalue Var 0x55827fadc308 'z' 'int'
|   |-CallExpr 0x55827fadf5a8 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827fadf590 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fadf570 <col:3> 'void ()' Function 0x55827fa81f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55827fadf600 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827fadf5e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fadf5c8 <col:3> 'void ()' Function 0x55827fa81e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827fadf8e8 <line:767:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55827fadf620 <col:3> 'int' lvalue Var 0x55827fadb5d8 'a' 'int'
|   | `-ConditionalOperator 0x55827fadf8b8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55827fadf6e0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55827fadf698 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55827fadf680 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55827fadf640 <col:7> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55827fadf6c8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55827fadf6b0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55827fadf660 <col:25> '_Bool' lvalue Var 0x55827fadb8d0 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55827fadf8a0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55827fadf700 <col:42> 'int' lvalue Var 0x55827fadbd68 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x55827fadf880 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55827fadf850 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55827fadf7c0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55827fadf778 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55827fadf760 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55827fadf720 <col:55> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55827fadf7a8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55827fadf790 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55827fadf740 <col:73> '_Bool' lvalue Var 0x55827fadbb78 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55827fadf820 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55827fadf7e0 <col:90> 'int' lvalue Var 0x55827fadbe60 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55827fadf838 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827fadf800 <col:102> 'int' lvalue Var 0x55827fadb5d8 'a' 'int'
|   |-BinaryOperator 0x55827fadfaf0 <line:768:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55827fadf908 <col:3> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55827fadfad8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827fadfaa8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55827fadf9c8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55827fadf980 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55827fadf968 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55827fadf928 <col:20> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55827fadf9b0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55827fadf998 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55827fadf948 <col:38> '_Bool' lvalue Var 0x55827fadb8d0 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55827fadfa60 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827fadfa18 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827fadf9e8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55827fadfa90 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827fadfa78 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827fadfa40 <col:66> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55827fadfde8 <line:769:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55827fadfb10 <col:3> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55827fadfdd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827fadfda0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55827fadfcc0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55827fadfbe0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55827fadfb98 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55827fadfb80 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55827fadfb40 <col:20> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55827fadfbc8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55827fadfbb0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55827fadfb60 <col:38> '_Bool' lvalue Var 0x55827fadb8d0 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55827fadfca0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55827fadfc58 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55827fadfc40 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55827fadfc00 <col:56> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55827fadfc88 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55827fadfc70 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55827fadfc20 <col:74> '_Bool' lvalue Var 0x55827fadbb78 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55827fadfd58 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827fadfd10 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827fadfce0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55827fadfd88 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827fadfd70 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827fadfd38 <col:102> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55827fadfff0 <line:770:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55827fadfe08 <col:3> '_Bool' lvalue Var 0x55827fadb8d0 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55827fadffd8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827fadffa8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55827fadfec8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55827fadfe80 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55827fadfe68 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55827fadfe28 <col:20> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55827fadfeb0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55827fadfe98 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55827fadfe48 <col:38> '_Bool' lvalue Var 0x55827fadb8d0 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55827fadff60 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827fadff18 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827fadfee8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55827fadff90 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827fadff78 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827fadff40 <col:66> '_Bool' lvalue Var 0x55827fadb8d0 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55827fae02d8 <line:771:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55827fae0010 <col:3> '_Bool' lvalue Var 0x55827fadbb78 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55827fae02c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827fae0290 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55827fae01b0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55827fae00d0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55827fae0088 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55827fae0070 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55827fae0030 <col:20> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55827fae00b8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55827fae00a0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55827fae0050 <col:38> '_Bool' lvalue Var 0x55827fadb8d0 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55827fae0190 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55827fae0148 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55827fae0130 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55827fae00f0 <col:56> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55827fae0178 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55827fae0160 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55827fae0110 <col:74> '_Bool' lvalue Var 0x55827fadbb78 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55827fae0248 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827fae0200 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827fae01d0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55827fae0278 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827fae0260 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827fae0228 <col:102> '_Bool' lvalue Var 0x55827fadbb78 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55827fae0330 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827fae0318 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fae02f8 <col:3> 'void ()' Function 0x55827fa81f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55827fae0388 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827fae0370 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fae0350 <col:3> 'void ()' Function 0x55827fa81e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827fae0440 <line:774:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55827fae03a8 <col:3> 'int' lvalue Var 0x55827fadb278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55827fae0420 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55827fae0408 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55827fae03c8 <col:22> 'int' lvalue Var 0x55827fadb278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55827fae03e8 <col:41> 'int' 1
|   |-CallExpr 0x55827fae0498 <line:775:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827fae0480 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fae0460 <col:3> 'void ()' Function 0x55827fa81f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55827fae0510 <line:776:3, col:36>
|     `-CallExpr 0x55827fae04f0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55827fae04d8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55827fae04b8 <col:10> 'void *(void)' Function 0x55827fa81958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55827fae0668 prev 0x55827fadaef8 <line:778:1, line:810:1> line:778:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x55827fae05d0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55827fae4238 <line:779:1, line:810:1>
|   |-CallExpr 0x55827fae0748 <line:780:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827fae0730 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fae0710 <col:3> 'void ()' Function 0x55827fa81e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827fae07a8 <line:781:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55827fae0768 <col:3> 'int' lvalue Var 0x55827fadc308 'z' 'int'
|   | `-IntegerLiteral 0x55827fae0788 <col:7> 'int' 1
|   |-CallExpr 0x55827fae0800 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827fae07e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fae07c8 <col:3> 'void ()' Function 0x55827fa81f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55827fae0858 <line:783:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827fae0840 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fae0820 <col:3> 'void ()' Function 0x55827fa81e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827fae0908 <line:784:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55827fae0878 <col:3> '_Bool' lvalue Var 0x55827fadc3a0 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55827fae08f0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55827fae08d0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55827fae08b8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55827fae0898 <col:19> 'void *(void)' Function 0x55827fa81958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55827fae09b8 <line:785:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55827fae0928 <col:3> '_Bool' lvalue Var 0x55827fadc418 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55827fae09a0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55827fae0980 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55827fae0968 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55827fae0948 <col:19> 'void *(void)' Function 0x55827fa81958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55827fae0a30 <line:786:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55827fae09d8 <col:3> '_Bool' lvalue Var 0x55827fadb670 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55827fae0a18 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55827fae09f8 <col:21> '_Bool' lvalue Var 0x55827fadc418 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55827fae0aa8 <line:787:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55827fae0a50 <col:3> 'int' lvalue Var 0x55827fadb6f0 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55827fae0a90 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55827fae0a70 <col:15> 'int' lvalue Var 0x55827fadb5d8 'a' 'int'
|   |-BinaryOperator 0x55827fae0ef8 <line:788:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55827fae0ac8 <col:3> 'int' lvalue Var 0x55827fadb5d8 'a' 'int'
|   | `-ConditionalOperator 0x55827fae0ec8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55827fae0cf0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55827fae0c10 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55827fae0b20 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55827fae0b08 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55827fae0ae8 <col:8> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55827fae0bf0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55827fae0b88 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55827fae0b70 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55827fae0b50 <col:27> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x55827fae0bd8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55827fae0bc0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55827fae0ba0 <col:46> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55827fae0cd0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55827fae0c68 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55827fae0c50 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55827fae0c30 <col:65> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x55827fae0cb8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55827fae0ca0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55827fae0c80 <col:84> '_Bool' lvalue Var 0x55827fadbbf0 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55827fae0eb0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55827fae0d10 <col:101> 'int' lvalue Var 0x55827fadb5d8 'a' 'int'
|   |   `-ParenExpr 0x55827fae0e90 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55827fae0e60 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55827fae0dd0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55827fae0d88 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55827fae0d70 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55827fae0d30 <col:106> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55827fae0db8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55827fae0da0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55827fae0d50 <col:124> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55827fae0e30 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55827fae0df0 <col:141> 'int' lvalue Var 0x55827fadbd68 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55827fae0e48 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827fae0e10 <col:153> 'int' lvalue Var 0x55827fadbe60 'a$w_buff1' 'int'
|   |-BinaryOperator 0x55827fae1408 <line:789:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55827fae0f18 <col:3> 'int' lvalue Var 0x55827fadbd68 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x55827fae13d8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55827fae13a8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55827fae1390 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55827fae0f38 <col:15> '_Bool' lvalue Var 0x55827fadc418 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55827fae13c0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55827fae0f58 <col:31> 'int' lvalue Var 0x55827fadbd68 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x55827fae1370 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55827fae1340 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55827fae1168 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55827fae1088 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55827fae0fb0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55827fae0f98 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55827fae0f78 <col:45> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55827fae1068 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55827fae1000 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55827fae0fe8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55827fae0fc8 <col:64> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55827fae1050 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55827fae1038 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55827fae1018 <col:83> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55827fae1148 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55827fae10e0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55827fae10c8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55827fae10a8 <col:102> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55827fae1130 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55827fae1118 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55827fae10f8 <col:121> '_Bool' lvalue Var 0x55827fadbbf0 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55827fae1328 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55827fae1188 <col:138> 'int' lvalue Var 0x55827fadbd68 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x55827fae1308 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55827fae12d8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55827fae1248 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55827fae1200 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55827fae11e8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55827fae11a8 <col:151> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55827fae1230 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55827fae1218 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55827fae11c8 <col:169> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55827fae12a8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55827fae1268 <col:186> 'int' lvalue Var 0x55827fadbd68 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55827fae12c0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55827fae1288 <col:198> 'int' lvalue Var 0x55827fadbd68 'a$w_buff0' 'int'
|   |-BinaryOperator 0x55827fae1918 <line:790:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55827fae1428 <col:3> 'int' lvalue Var 0x55827fadbe60 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x55827fae18e8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55827fae18b8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55827fae18a0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55827fae1448 <col:15> '_Bool' lvalue Var 0x55827fadc418 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55827fae18d0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55827fae1468 <col:31> 'int' lvalue Var 0x55827fadbe60 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x55827fae1880 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55827fae1850 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55827fae1678 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55827fae1598 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55827fae14c0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55827fae14a8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55827fae1488 <col:45> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55827fae1578 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55827fae1510 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55827fae14f8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55827fae14d8 <col:64> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55827fae1560 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55827fae1548 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55827fae1528 <col:83> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55827fae1658 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55827fae15f0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55827fae15d8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55827fae15b8 <col:102> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55827fae1640 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55827fae1628 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55827fae1608 <col:121> '_Bool' lvalue Var 0x55827fadbbf0 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55827fae1838 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55827fae1698 <col:138> 'int' lvalue Var 0x55827fadbe60 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x55827fae1818 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55827fae17e8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55827fae1758 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55827fae1710 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55827fae16f8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55827fae16b8 <col:151> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55827fae1740 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55827fae1728 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55827fae16d8 <col:169> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55827fae17b8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55827fae1778 <col:186> 'int' lvalue Var 0x55827fadbe60 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55827fae17d0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55827fae1798 <col:198> 'int' lvalue Var 0x55827fadbe60 'a$w_buff1' 'int'
|   |-BinaryOperator 0x55827fae1ed0 <line:791:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55827fae1938 <col:3> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55827fae1eb8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827fae1e88 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55827fae1e40 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55827fae1e28 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55827fae1958 <col:20> '_Bool' lvalue Var 0x55827fadc418 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55827fae1e70 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55827fae1e58 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55827fae1978 <col:36> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55827fae1e08 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55827fae1dd8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55827fae1b98 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55827fae1aa8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55827fae19d0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55827fae19b8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55827fae1998 <col:55> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55827fae1a88 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55827fae1a20 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55827fae1a08 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55827fae19e8 <col:74> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55827fae1a70 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55827fae1a58 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55827fae1a38 <col:93> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55827fae1b78 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55827fae1b00 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55827fae1ae8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55827fae1ac8 <col:112> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55827fae1b60 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55827fae1b38 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55827fae1b18 <col:131> '_Bool' lvalue Var 0x55827fadbbf0 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55827fae1dc0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55827fae1da8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55827fae1bb8 <col:148> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55827fae1d88 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55827fae1d58 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55827fae1c78 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55827fae1c30 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55827fae1c18 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55827fae1bd8 <col:166> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55827fae1c60 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55827fae1c48 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55827fae1bf8 <col:184> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55827fae1d10 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55827fae1cc8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55827fae1c98 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55827fae1d40 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55827fae1d28 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55827fae1cf0 <col:212> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55827fae2498 <line:792:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55827fae1ef0 <col:3> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55827fae2480 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827fae2450 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55827fae2408 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55827fae23f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55827fae1f10 <col:20> '_Bool' lvalue Var 0x55827fadc418 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55827fae2438 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55827fae2420 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55827fae1f30 <col:36> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55827fae23d0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55827fae23a0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55827fae2140 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55827fae2060 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55827fae1f88 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55827fae1f70 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55827fae1f50 <col:55> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55827fae2040 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55827fae1fd8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55827fae1fc0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55827fae1fa0 <col:74> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55827fae2028 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55827fae2010 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55827fae1ff0 <col:93> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55827fae2120 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55827fae20b8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55827fae20a0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55827fae2080 <col:112> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55827fae2108 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55827fae20f0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55827fae20d0 <col:131> '_Bool' lvalue Var 0x55827fadbbf0 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55827fae2388 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55827fae2370 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55827fae2160 <col:148> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55827fae2350 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55827fae2320 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55827fae2220 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55827fae21d8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55827fae21c0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55827fae2180 <col:166> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55827fae2208 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55827fae21f0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55827fae21a0 <col:184> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55827fae22f0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55827fae2270 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55827fae2240 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55827fae2308 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55827fae22c8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55827fae2298 <col:219> 'int' 0
|   |-BinaryOperator 0x55827fae2a40 <line:793:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55827fae24b8 <col:3> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55827fae2a28 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827fae29f8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55827fae29b0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55827fae2998 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55827fae24d8 <col:20> '_Bool' lvalue Var 0x55827fadc418 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55827fae29e0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55827fae29c8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55827fae24f8 <col:36> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x55827fae2978 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55827fae2948 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55827fae2708 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55827fae2628 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55827fae2550 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55827fae2538 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55827fae2518 <col:55> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55827fae2608 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55827fae25a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55827fae2588 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55827fae2568 <col:74> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55827fae25f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55827fae25d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55827fae25b8 <col:93> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55827fae26e8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55827fae2680 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55827fae2668 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55827fae2648 <col:112> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55827fae26d0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55827fae26b8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55827fae2698 <col:131> '_Bool' lvalue Var 0x55827fadbbf0 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55827fae2930 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55827fae2918 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55827fae2728 <col:148> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x55827fae28f8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55827fae28c8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55827fae27e8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55827fae27a0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55827fae2788 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55827fae2748 <col:166> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55827fae27d0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55827fae27b8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55827fae2768 <col:184> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55827fae2880 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55827fae2838 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55827fae2808 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55827fae28b0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55827fae2898 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55827fae2860 <col:212> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55827fae3018 <line:794:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55827fae2a60 <col:3> '_Bool' lvalue Var 0x55827fadbbf0 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55827fae3000 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827fae2fd0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55827fae2f88 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55827fae2f70 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55827fae2a80 <col:20> '_Bool' lvalue Var 0x55827fadc418 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55827fae2fb8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55827fae2fa0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55827fae2aa0 <col:36> '_Bool' lvalue Var 0x55827fadbbf0 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x55827fae2f50 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55827fae2f20 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55827fae2cc0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55827fae2be0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55827fae2af8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55827fae2ae0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55827fae2ac0 <col:55> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55827fae2bc0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55827fae2b48 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55827fae2b30 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55827fae2b10 <col:74> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55827fae2ba8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55827fae2b90 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55827fae2b70 <col:93> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55827fae2ca0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55827fae2c38 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55827fae2c20 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55827fae2c00 <col:112> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55827fae2c88 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55827fae2c70 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55827fae2c50 <col:131> '_Bool' lvalue Var 0x55827fadbbf0 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55827fae2f08 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55827fae2ef0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55827fae2ce0 <col:148> '_Bool' lvalue Var 0x55827fadbbf0 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x55827fae2ed0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55827fae2ea0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55827fae2da0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55827fae2d58 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55827fae2d40 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55827fae2d00 <col:166> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55827fae2d88 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55827fae2d70 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55827fae2d20 <col:184> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55827fae2e70 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55827fae2df0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55827fae2dc0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55827fae2e88 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55827fae2e48 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55827fae2e18 <col:219> 'int' 0
|   |-BinaryOperator 0x55827fae3090 <line:795:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55827fae3038 <col:3> 'int' lvalue Var 0x55827fadb4b8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x55827fae3078 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55827fae3058 <col:25> 'int' lvalue Var 0x55827fadb5d8 'a' 'int'
|   |-BinaryOperator 0x55827fae31c0 <line:796:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55827fae30b0 <col:3> 'int' lvalue Var 0x55827fadb5d8 'a' 'int'
|   | `-ConditionalOperator 0x55827fae3190 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55827fae3148 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55827fae3130 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55827fae30d0 <col:7> '_Bool' lvalue Var 0x55827fadb670 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55827fae3160 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55827fae30f0 <col:25> 'int' lvalue Var 0x55827fadb6f0 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55827fae3178 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55827fae3110 <col:37> 'int' lvalue Var 0x55827fadb5d8 'a' 'int'
|   |-BinaryOperator 0x55827fae3258 <line:797:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55827fae31e0 <col:3> '_Bool' lvalue Var 0x55827fadb670 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55827fae3230 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55827fae3200 <col:28> 'int' 0
|   |-CallExpr 0x55827fae32b0 <line:798:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827fae3298 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fae3278 <col:3> 'void ()' Function 0x55827fa81f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55827fae3308 <line:799:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827fae32f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fae32d0 <col:3> 'void ()' Function 0x55827fa81e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827fae35f0 <line:800:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55827fae3328 <col:3> 'int' lvalue Var 0x55827fadb5d8 'a' 'int'
|   | `-ConditionalOperator 0x55827fae35c0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55827fae33e8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55827fae33a0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55827fae3388 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55827fae3348 <col:7> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55827fae33d0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55827fae33b8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55827fae3368 <col:25> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55827fae35a8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55827fae3408 <col:42> 'int' lvalue Var 0x55827fadbd68 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x55827fae3588 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55827fae3558 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55827fae34c8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55827fae3480 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55827fae3468 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55827fae3428 <col:55> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55827fae34b0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55827fae3498 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55827fae3448 <col:73> '_Bool' lvalue Var 0x55827fadbbf0 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55827fae3528 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55827fae34e8 <col:90> 'int' lvalue Var 0x55827fadbe60 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55827fae3540 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827fae3508 <col:102> 'int' lvalue Var 0x55827fadb5d8 'a' 'int'
|   |-BinaryOperator 0x55827fae37f8 <line:801:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55827fae3610 <col:3> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55827fae37e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827fae37b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55827fae36d0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55827fae3688 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55827fae3670 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55827fae3630 <col:20> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55827fae36b8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55827fae36a0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55827fae3650 <col:38> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55827fae3768 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827fae3720 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827fae36f0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55827fae3798 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827fae3780 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827fae3748 <col:66> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55827fae3ae0 <line:802:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55827fae3818 <col:3> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55827fae3ac8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827fae3a98 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55827fae39b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55827fae38d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55827fae3890 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55827fae3878 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55827fae3838 <col:20> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55827fae38c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55827fae38a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55827fae3858 <col:38> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55827fae3998 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55827fae3950 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55827fae3938 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55827fae38f8 <col:56> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55827fae3980 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55827fae3968 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55827fae3918 <col:74> '_Bool' lvalue Var 0x55827fadbbf0 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55827fae3a50 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827fae3a08 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827fae39d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55827fae3a80 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827fae3a68 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827fae3a30 <col:102> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55827fae3d08 <line:803:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55827fae3b00 <col:3> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55827fae3cf0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827fae3cc0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55827fae3be0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55827fae3b98 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55827fae3b80 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55827fae3b20 <col:20> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55827fae3bc8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55827fae3bb0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55827fae3b40 <col:38> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55827fae3c78 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827fae3c30 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827fae3c00 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55827fae3ca8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827fae3c90 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827fae3c58 <col:66> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55827fae3ff0 <line:804:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55827fae3d28 <col:3> '_Bool' lvalue Var 0x55827fadbbf0 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55827fae3fd8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55827fae3fa8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55827fae3ec8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55827fae3de8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55827fae3da0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55827fae3d88 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55827fae3d48 <col:20> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55827fae3dd0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55827fae3db8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55827fae3d68 <col:38> '_Bool' lvalue Var 0x55827fadb948 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55827fae3ea8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55827fae3e60 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55827fae3e48 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55827fae3e08 <col:56> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55827fae3e90 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55827fae3e78 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55827fae3e28 <col:74> '_Bool' lvalue Var 0x55827fadbbf0 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55827fae3f60 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55827fae3f18 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55827fae3ee8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55827fae3f90 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55827fae3f78 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55827fae3f40 <col:102> '_Bool' lvalue Var 0x55827fadbbf0 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x55827fae4048 <line:805:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827fae4030 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fae4010 <col:3> 'void ()' Function 0x55827fa81f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55827fae40a0 <line:806:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55827fae4088 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fae4068 <col:3> 'void ()' Function 0x55827fa81e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55827fae4158 <line:807:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55827fae40c0 <col:3> 'int' lvalue Var 0x55827fadb278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55827fae4138 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55827fae4120 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55827fae40e0 <col:22> 'int' lvalue Var 0x55827fadb278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55827fae4100 <col:41> 'int' 1
|   |-CallExpr 0x55827fae41b0 <line:808:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55827fae4198 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55827fae4178 <col:3> 'void ()' Function 0x55827fa81f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55827fae4228 <line:809:3, col:36>
|     `-CallExpr 0x55827fae4208 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55827fae41f0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55827fae41d0 <col:10> 'void *(void)' Function 0x55827fa81958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55827fae4358 prev 0x55827fadafc0 <line:811:1, line:813:1> line:811:6 fence 'void ()'
| `-CompoundStmt 0x55827fae43f8 <line:812:1, line:813:1>
|-FunctionDecl 0x55827fae4428 prev 0x55827fadb080 <line:814:1, line:816:1> line:814:6 isync 'void ()'
| `-CompoundStmt 0x55827fae44c8 <line:815:1, line:816:1>
|-FunctionDecl 0x55827fae44f8 prev 0x55827fadb140 <line:817:1, line:819:1> line:817:6 lwfence 'void ()'
| `-CompoundStmt 0x55827fae4598 <line:818:1, line:819:1>
`-FunctionDecl 0x55827fae4608 <line:820:1, line:846:1> line:820:5 main 'int ()'
  `-CompoundStmt 0x55827fae6580 <line:821:1, line:846:1>
    |-DeclStmt 0x55827fae4720 <line:822:3, col:18>
    | `-VarDecl 0x55827fae46b8 <col:3, col:13> col:13 used t1427 'pthread_t':'unsigned long'
    |-CallExpr 0x55827fae4928 <line:823:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55827fae4910 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55827fae4738 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55827fac2488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55827fae4778 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55827fae4758 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55827fae46b8 't1427' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55827fae4968 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55827fae47f0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55827fae47c8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55827fae4790 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55827fae4980 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55827fae4810 <col:39> 'void *(void *)' Function 0x55827fadc530 'P0' 'void *(void *)'
    | `-ParenExpr 0x55827fae4890 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55827fae4868 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55827fae4830 <col:52> 'int' 0
    |-DeclStmt 0x55827fae4a10 <line:824:3, col:18>
    | `-VarDecl 0x55827fae49a8 <col:3, col:13> col:13 used t1428 'pthread_t':'unsigned long'
    |-CallExpr 0x55827fae4bc8 <line:825:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55827fae4bb0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55827fae4a28 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55827fac2488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55827fae4a68 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55827fae4a48 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55827fae49a8 't1428' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55827fae4c08 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55827fae4ae0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55827fae4ab8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55827fae4a80 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55827fae4c20 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55827fae4b00 <col:39> 'void *(void *)' Function 0x55827faddf80 'P1' 'void *(void *)'
    | `-ParenExpr 0x55827fae4b90 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55827fae4b58 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55827fae4b20 <col:52> 'int' 0
    |-DeclStmt 0x55827fae4cb0 <line:826:3, col:18>
    | `-VarDecl 0x55827fae4c48 <col:3, col:13> col:13 used t1429 'pthread_t':'unsigned long'
    |-CallExpr 0x55827fae4e58 <line:827:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55827fae4e40 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55827fae4cc8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55827fac2488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55827fae4d08 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55827fae4ce8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55827fae4c48 't1429' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55827fae4e98 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55827fae4d80 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55827fae4d58 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55827fae4d20 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55827fae4eb0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55827fae4da0 <col:39> 'void *(void *)' Function 0x55827fadf2e8 'P2' 'void *(void *)'
    | `-ParenExpr 0x55827fae4e20 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55827fae4df8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55827fae4dc0 <col:52> 'int' 0
    |-DeclStmt 0x55827fae4f40 <line:828:3, col:18>
    | `-VarDecl 0x55827fae4ed8 <col:3, col:13> col:13 used t1430 'pthread_t':'unsigned long'
    |-CallExpr 0x55827fae50e8 <line:829:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55827fae50d0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55827fae4f58 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55827fac2488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55827fae4f98 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55827fae4f78 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55827fae4ed8 't1430' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55827fae5128 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55827fae5010 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55827fae4fe8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55827fae4fb0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55827fae5140 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55827fae5030 <col:39> 'void *(void *)' Function 0x55827fae0668 'P3' 'void *(void *)'
    | `-ParenExpr 0x55827fae50b0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55827fae5088 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55827fae5050 <col:52> 'int' 0
    |-CallExpr 0x55827fae5190 <line:830:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55827fae5178 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55827fae5158 <col:3> 'void ()' Function 0x55827fa81e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55827fae5260 <line:831:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55827fae51b0 <col:3> '_Bool' lvalue Var 0x55827fadbf50 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55827fae5248 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55827fae5228 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55827fae5210 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55827fae51d0 <col:21> 'int' lvalue Var 0x55827fadb278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55827fae51f0 <col:41> 'int' 4
    |-CallExpr 0x55827fae52b8 <line:832:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55827fae52a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55827fae5280 <col:3> 'void ()' Function 0x55827fa81f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55827fae5330 <line:833:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55827fae5318 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55827fae52d8 <col:3> 'void (int)' Function 0x55827fa81790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55827fae5370 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55827fae5358 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55827fae52f8 <col:21> '_Bool' lvalue Var 0x55827fadbf50 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55827fae53c0 <line:834:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55827fae53a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55827fae5388 <col:3> 'void ()' Function 0x55827fa81e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55827fae56a8 <line:835:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55827fae53e0 <col:3> 'int' lvalue Var 0x55827fadb5d8 'a' 'int'
    | `-ConditionalOperator 0x55827fae5678 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55827fae54a0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55827fae5458 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55827fae5440 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55827fae5400 <col:7> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55827fae5488 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55827fae5470 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55827fae5420 <col:25> '_Bool' lvalue Var 0x55827fadb768 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55827fae5660 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55827fae54c0 <col:42> 'int' lvalue Var 0x55827fadbd68 'a$w_buff0' 'int'
    |   `-ParenExpr 0x55827fae5640 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55827fae5610 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55827fae5580 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55827fae5538 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55827fae5520 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55827fae54e0 <col:55> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55827fae5568 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55827fae5550 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55827fae5500 <col:73> '_Bool' lvalue Var 0x55827fadb9c0 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55827fae55e0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55827fae55a0 <col:90> 'int' lvalue Var 0x55827fadbe60 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55827fae55f8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55827fae55c0 <col:102> 'int' lvalue Var 0x55827fadb5d8 'a' 'int'
    |-BinaryOperator 0x55827fae58b0 <line:836:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55827fae56c8 <col:3> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55827fae5898 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55827fae5868 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55827fae5788 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55827fae5740 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55827fae5728 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55827fae56e8 <col:20> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55827fae5770 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55827fae5758 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55827fae5708 <col:38> '_Bool' lvalue Var 0x55827fadb768 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55827fae5820 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55827fae57d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55827fae57a8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55827fae5850 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55827fae5838 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55827fae5800 <col:66> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55827fae5bb8 <line:837:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55827fae58d0 <col:3> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55827fae5ba0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55827fae5b50 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55827fae5a70 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55827fae5990 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55827fae5948 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55827fae5930 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55827fae58f0 <col:20> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55827fae5978 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55827fae5960 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55827fae5910 <col:38> '_Bool' lvalue Var 0x55827fadb768 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55827fae5a50 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55827fae5a08 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55827fae59f0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55827fae59b0 <col:56> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55827fae5a38 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55827fae5a20 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55827fae59d0 <col:74> '_Bool' lvalue Var 0x55827fadb9c0 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55827fae5b08 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55827fae5ac0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55827fae5a90 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55827fae5b38 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55827fae5b20 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55827fae5ae8 <col:102> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55827fae5dc0 <line:838:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55827fae5bd8 <col:3> '_Bool' lvalue Var 0x55827fadb768 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55827fae5da8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55827fae5d78 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55827fae5c98 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55827fae5c50 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55827fae5c38 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55827fae5bf8 <col:20> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55827fae5c80 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55827fae5c68 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55827fae5c18 <col:38> '_Bool' lvalue Var 0x55827fadb768 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55827fae5d30 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55827fae5ce8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55827fae5cb8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55827fae5d60 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55827fae5d48 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55827fae5d10 <col:66> '_Bool' lvalue Var 0x55827fadb768 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55827fae60a8 <line:839:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55827fae5de0 <col:3> '_Bool' lvalue Var 0x55827fadb9c0 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55827fae6090 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55827fae6060 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55827fae5f80 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55827fae5ea0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55827fae5e58 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55827fae5e40 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55827fae5e00 <col:20> '_Bool' lvalue Var 0x55827fadbde0 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55827fae5e88 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55827fae5e70 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55827fae5e20 <col:38> '_Bool' lvalue Var 0x55827fadb768 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55827fae5f60 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55827fae5f18 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55827fae5f00 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55827fae5ec0 <col:56> '_Bool' lvalue Var 0x55827fadbed8 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55827fae5f48 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55827fae5f30 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55827fae5ee0 <col:74> '_Bool' lvalue Var 0x55827fadb9c0 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55827fae6018 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55827fae5fd0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55827fae5fa0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55827fae6048 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55827fae6030 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55827fae5ff8 <col:102> '_Bool' lvalue Var 0x55827fadb9c0 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55827fae6100 <line:840:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55827fae60e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55827fae60c8 <col:3> 'void ()' Function 0x55827fa81f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55827fae6158 <line:841:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55827fae6140 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55827fae6120 <col:3> 'void ()' Function 0x55827fa81e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55827fae6428 <line:842:3, col:95> '_Bool' '='
    | |-DeclRefExpr 0x55827fae6178 <col:3> '_Bool' lvalue Var 0x55827fadbfc8 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55827fae6410 <col:21, col:95> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55827fae63f8 <col:21, col:95> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55827fae63d8 <col:22, col:95> 'int'
    |       `-BinaryOperator 0x55827fae63b8 <col:23, col:94> 'int' '&&'
    |         |-BinaryOperator 0x55827fae6320 <col:23, col:66> 'int' '&&'
    |         | |-BinaryOperator 0x55827fae6288 <col:23, col:38> 'int' '&&'
    |         | | |-BinaryOperator 0x55827fae61f0 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55827fae61d8 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55827fae6198 <col:23> 'int' lvalue Var 0x55827fadc0c8 'x' 'int'
    |         | | | `-IntegerLiteral 0x55827fae61b8 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x55827fae6268 <col:33, col:38> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55827fae6250 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55827fae6210 <col:33> 'int' lvalue Var 0x55827fadc1e8 'y' 'int'
    |         | |   `-IntegerLiteral 0x55827fae6230 <col:38> 'int' 2
    |         | `-BinaryOperator 0x55827fae6300 <col:43, col:66> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55827fae62e8 <col:43> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55827fae62a8 <col:43> 'int' lvalue Var 0x55827fadb398 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x55827fae62c8 <col:66> 'int' 0
    |         `-BinaryOperator 0x55827fae6398 <col:71, col:94> 'int' '=='
    |           |-ImplicitCastExpr 0x55827fae6380 <col:71> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55827fae6340 <col:71> 'int' lvalue Var 0x55827fadb4b8 '__unbuffered_p3_EAX' 'int'
    |           `-IntegerLiteral 0x55827fae6360 <col:94> 'int' 0
    |-CallExpr 0x55827fae6480 <line:843:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55827fae6468 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55827fae6448 <col:3> 'void ()' Function 0x55827fa81f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55827fae64f8 <line:844:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55827fae64e0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55827fae64a0 <col:3> 'void (int)' Function 0x55827fa81bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55827fae6538 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55827fae6520 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55827fae64c0 <col:21> '_Bool' lvalue Var 0x55827fadbfc8 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55827fae6570 <line:845:3, col:10>
      `-IntegerLiteral 0x55827fae6550 <col:10> 'int' 0
