TranslationUnitDecl 0x561b2c135e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x561b2c1366d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x561b2c1363b0 '__int128'
|-TypedefDecl 0x561b2c136748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x561b2c1363d0 'unsigned __int128'
|-TypedefDecl 0x561b2c136a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x561b2c136820 'struct __NSConstantString_tag'
|   `-Record 0x561b2c1367a0 '__NSConstantString_tag'
|-TypedefDecl 0x561b2c136af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x561b2c136ab0 'char *'
|   `-BuiltinType 0x561b2c135eb0 'char'
|-TypedefDecl 0x561b2c175650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x561b2c136d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x561b2c136bd0 'struct __va_list_tag'
|     `-Record 0x561b2c136b50 '__va_list_tag'
|-FunctionDecl 0x561b2c175770 <./split_8/mix024_rmo.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x561b2c175940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x561b2c175870 <col:31> col:34 'int'
|-FunctionDecl 0x561b2c175ab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x561b2c175be0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x561b2c175d28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x561b2c175c98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x561b2c175f58 <col:40, col:99>
|   |-IfStmt 0x561b2c175f28 <col:42, col:88>
|   | |-UnaryOperator 0x561b2c175e08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x561b2c175df0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x561b2c175dd0 <col:47> 'int' lvalue ParmVar 0x561b2c175c98 'expression' 'int'
|   | `-CompoundStmt 0x561b2c175f10 <col:59, col:88>
|   |   `-LabelStmt 0x561b2c175ef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x561b2c175e88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x561b2c175e70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x561b2c175e20 <col:68> 'void () __attribute__((noreturn))' Function 0x561b2c175be0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x561b2c175f40 <col:89>
|   `-ReturnStmt 0x561b2c175f48 <col:91>
|-FunctionDecl 0x561b2c175fa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x561b2c176060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x561b2c1763e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561b2c176118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x561b2c176198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x561b2c176218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x561b2c176298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x561b2c1764a0 <line:11:22>
|-FunctionDecl 0x561b2c19c520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561b2c176510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x561b2c176590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x561b2c19c350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x561b2c19c3d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x561b2c19c5e0 <line:14:22>
|-FunctionDecl 0x561b2c19c890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561b2c19c650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x561b2c19c6d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x561b2c19c750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x561b2c19c948 <line:16:22>
|-TypedefDecl 0x561b2c19c9b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x561b2c135f70 'unsigned char'
|-TypedefDecl 0x561b2c19ca28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x561b2c135f90 'unsigned short'
|-TypedefDecl 0x561b2c19ca98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x561b2c135fb0 'unsigned int'
|-TypedefDecl 0x561b2c19cb08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x561b2c135fd0 'unsigned long'
|-TypedefDecl 0x561b2c19cb78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x561b2c135ed0 'signed char'
|-TypedefDecl 0x561b2c19cbe8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x561b2c135f70 'unsigned char'
|-TypedefDecl 0x561b2c19cc58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x561b2c135ef0 'short'
|-TypedefDecl 0x561b2c19ccc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x561b2c135f90 'unsigned short'
|-TypedefDecl 0x561b2c19cd38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x561b2c135f10 'int'
|-TypedefDecl 0x561b2c19cda8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x561b2c135fb0 'unsigned int'
|-TypedefDecl 0x561b2c19ce18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x561b2c135f30 'long'
|-TypedefDecl 0x561b2c19ce88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x561b2c135fd0 'unsigned long'
|-TypedefDecl 0x561b2c19cef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x561b2c135f30 'long'
|-TypedefDecl 0x561b2c19cf68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x561b2c135fd0 'unsigned long'
|-TypedefDecl 0x561b2c19cfd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x561b2c135fd0 'unsigned long'
|-TypedefDecl 0x561b2c19d048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x561b2c135fb0 'unsigned int'
|-TypedefDecl 0x561b2c19d0b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x561b2c135fb0 'unsigned int'
|-TypedefDecl 0x561b2c19d128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x561b2c135fd0 'unsigned long'
|-TypedefDecl 0x561b2c19d198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x561b2c135fd0 'unsigned long'
|-TypedefDecl 0x561b2c19d208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x561b2c135fb0 'unsigned int'
|-TypedefDecl 0x561b2c19d278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x561b2c135fd0 'unsigned long'
|-TypedefDecl 0x561b2c19d2e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x561b2c135f30 'long'
|-TypedefDecl 0x561b2c19d378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x561b2c135f30 'long'
|-TypedefDecl 0x561b2c19d3e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x561b2c135f10 'int'
|-RecordDecl 0x561b2c19d440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x561b2c19d588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x561b2c19d640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x561b2c19d5e0 'struct __fsid_t' sugar
|   `-RecordType 0x561b2c19d4c0 '__fsid_t'
|     `-Record 0x561b2c19d440 ''
|-TypedefDecl 0x561b2c19d6c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x561b2c135f30 'long'
|-TypedefDecl 0x561b2c19d738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x561b2c135fd0 'unsigned long'
|-TypedefDecl 0x561b2c19d7a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x561b2c135fd0 'unsigned long'
|-TypedefDecl 0x561b2c19d818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x561b2c135fb0 'unsigned int'
|-TypedefDecl 0x561b2c19d888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x561b2c135f30 'long'
|-TypedefDecl 0x561b2c19d8f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x561b2c135fb0 'unsigned int'
|-TypedefDecl 0x561b2c19d968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x561b2c135f30 'long'
|-TypedefDecl 0x561b2c19d9d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x561b2c135f10 'int'
|-TypedefDecl 0x561b2c19da48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x561b2c135f10 'int'
|-TypedefDecl 0x561b2c19dab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x561b2c135f10 'int'
|-TypedefDecl 0x561b2c19db28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x561b2c136630 'void *'
|   `-BuiltinType 0x561b2c135e70 'void'
|-TypedefDecl 0x561b2c19db98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x561b2c135f30 'long'
|-TypedefDecl 0x561b2c19dc08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x561b2c135f30 'long'
|-TypedefDecl 0x561b2c19dc78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x561b2c135f30 'long'
|-TypedefDecl 0x561b2c19dce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x561b2c135fd0 'unsigned long'
|-TypedefDecl 0x561b2c19dd58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x561b2c135fd0 'unsigned long'
|-TypedefDecl 0x561b2c19ddc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x561b2c135fd0 'unsigned long'
|-TypedefDecl 0x561b2c19de38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x561b2c135fd0 'unsigned long'
|-TypedefDecl 0x561b2c19dea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x561b2c135f30 'long'
|-TypedefDecl 0x561b2c19df18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x561b2c135f30 'long'
|-TypedefDecl 0x561b2c19df88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x561b2c135f30 'long'
|-TypedefDecl 0x561b2c19dff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x561b2c135fd0 'unsigned long'
|-TypedefDecl 0x561b2c19e088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x561b2c19e050 '__off64_t' sugar
|   |-Typedef 0x561b2c19d378 '__off64_t'
|   `-BuiltinType 0x561b2c135f30 'long'
|-TypedefDecl 0x561b2c19e180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x561b2c19e140 '__quad_t *'
|   `-TypedefType 0x561b2c19e0e0 '__quad_t' sugar
|     |-Typedef 0x561b2c19cef8 '__quad_t'
|     `-BuiltinType 0x561b2c135f30 'long'
|-TypedefDecl 0x561b2c19e1f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x561b2c136ab0 'char *'
|   `-BuiltinType 0x561b2c135eb0 'char'
|-TypedefDecl 0x561b2c19e260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x561b2c135f30 'long'
|-TypedefDecl 0x561b2c19e2d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x561b2c135fb0 'unsigned int'
|-FunctionDecl 0x561b2c19f458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x561b2c19f380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x561b2c19f768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x561b2c19f758 <line:73:3, col:34>
|     `-CallExpr 0x561b2c19f718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x561b2c19f700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x561b2c19f690 <col:10> '<builtin fn type>' Function 0x561b2c19f500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x561b2c19f740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x561b2c19f6b0 <col:29> 'unsigned int' lvalue ParmVar 0x561b2c19f380 '__bsx' 'unsigned int'
|-FunctionDecl 0x561b2c19f500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x561b2c19f5a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x561b2c19f610 <col:10> Implicit
| `-ConstAttr 0x561b2c19f668 <col:10> Implicit
|-FunctionDecl 0x561b2c19f8c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x561b2c19f7b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x561b2c19fbd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x561b2c19fbc8 <line:78:3, col:34>
|     `-CallExpr 0x561b2c19fb88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x561b2c19fb70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x561b2c19faf8 <col:10> '<builtin fn type>' Function 0x561b2c19f968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x561b2c19fbb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x561b2c19fb18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x561b2c19f7b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x561b2c19f968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x561b2c19fa08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x561b2c19fa78 <col:10> Implicit
| `-ConstAttr 0x561b2c19fad0 <col:10> Implicit
|-TypedefDecl 0x561b2c19fc08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x561b2c135fd0 'unsigned long'
|-TypedefDecl 0x561b2c19fc98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x561b2c19fc60 '__time_t' sugar
|   |-Typedef 0x561b2c19d888 '__time_t'
|   `-BuiltinType 0x561b2c135f30 'long'
|-RecordDecl 0x561b2c19fcf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x561b2c19fda8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x561b2c19fe38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x561b2c19fec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x561b2c19fe90 '__pid_t' sugar
|   |-Typedef 0x561b2c19d3e8 '__pid_t'
|   `-BuiltinType 0x561b2c135f10 'int'
|-RecordDecl 0x561b2c19ff20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x561b2c19ffe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x561b2c1a0030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x561b2c1a00f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x561b2c1a0158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x561b2c135fd0 'unsigned long'
|-RecordDecl 0x561b2c1a01b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x561b2c1a1480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x561b2c1a1530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x561b2c1a14d0 'struct cpu_set_t' sugar
|   `-RecordType 0x561b2c1a0230 'cpu_set_t'
|     `-Record 0x561b2c1a01b0 ''
|-FunctionDecl 0x561b2c1a1808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x561b2c1a15d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561b2c1a16e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x561b2c1a18b8 <line:108:19>
|-FunctionDecl 0x561b2c1a1a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x561b2c1a1920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x561b2c1a1b38 <col:69>
|-FunctionDecl 0x561b2c1a1cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x561b2c1a1ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x561b2c1a1d58 <col:64>
|-FunctionDecl 0x561b2c1a2018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x561b2c1a1dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561b2c1a1ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561b2c1a20c8 <line:114:22>
|-FunctionDecl 0x561b2c1a23b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x561b2c1a2130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561b2c1a2228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x561b2c1a2460 <col:88>
|-FunctionDecl 0x561b2c1a2718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x561b2c1a24c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561b2c1a2548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x561b2c1a25d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561b2c1a27d0 <col:62>
|-FunctionDecl 0x561b2c1a2948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x561b2c1a2838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x561b2c1a29f0 <col:63>
|-FunctionDecl 0x561b2c1a2b18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x561b2c1a2bb8 <col:47>
|-FunctionDecl 0x561b2c1a2cc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x561b2c1a2c28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x561b2c1a2d68 <col:69>
|-FunctionDecl 0x561b2c1a2e70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x561b2c1a2dd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x561b2c1a2f18 <col:69>
|-FunctionDecl 0x561b2c1a31d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561b2c1a2f80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561b2c1a30b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x561b2c1a3288 <col:88>
|-TypedefDecl 0x561b2c1a3318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x561b2c1a32e0 '__clock_t' sugar
|   |-Typedef 0x561b2c19d6c8 '__clock_t'
|   `-BuiltinType 0x561b2c135f30 'long'
|-TypedefDecl 0x561b2c1a33c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x561b2c1a3370 '__clockid_t' sugar
|   |-Typedef 0x561b2c19dab8 '__clockid_t'
|   `-BuiltinType 0x561b2c135f10 'int'
|-TypedefDecl 0x561b2c1a3458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x561b2c1a3420 '__timer_t' sugar
|   |-Typedef 0x561b2c19db28 '__timer_t'
|   `-PointerType 0x561b2c136630 'void *'
|     `-BuiltinType 0x561b2c135e70 'void'
|-RecordDecl 0x561b2c1a34b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x561b2c1a3570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x561b2c1a35d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x561b2c1a3640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x561b2c1a36a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x561b2c1a3710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x561b2c1a3778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x561b2c1a37e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x561b2c1a3848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x561b2c1a38b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x561b2c1a3918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x561b2c1a3980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x561b2c1a39d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x561b2c1a3a98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x561b2c1a3b08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x561b2c1a3bb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x561b2c1a3d80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x561b2c1a3e20 <col:45>
|-FunctionDecl 0x561b2c1a4000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x561b2c1a3ef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x561b2c1a40a8 <col:54>
|-FunctionDecl 0x561b2c1a42a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x561b2c1a4110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x561b2c1a4188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x561b2c1a4358 <line:158:22>
| `-ConstAttr 0x561b2c1a4ff0 <col:63>
|-FunctionDecl 0x561b2c1a51f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561b2c1a50e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x561b2c1a5298 <col:56>
|-FunctionDecl 0x561b2c1a5640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x561b2c1a5308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x561b2c1a5380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561b2c1a5400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x561b2c1a54f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x561b2c1a5700 <col:54>
|-RecordDecl 0x561b2c1a5758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x561b2c1a5808 parent 0x561b2c135e18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x561b2c1a5a68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x561b2c1a5b08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x561b2c1a5b70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x561b2c1a5bd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x561b2c1a5cc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x561b2c1a5de8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x561b2c1a5d90 'struct __locale_struct *'
|   `-ElaboratedType 0x561b2c1a5d20 'struct __locale_struct' sugar
|     `-RecordType 0x561b2c1a57e0 'struct __locale_struct'
|       `-Record 0x561b2c1a5758 '__locale_struct'
|-TypedefDecl 0x561b2c1a5e98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x561b2c1a5e60 '__locale_t' sugar
|   |-Typedef 0x561b2c1a5de8 '__locale_t'
|   `-PointerType 0x561b2c1a5d90 'struct __locale_struct *'
|     `-ElaboratedType 0x561b2c1a5d20 'struct __locale_struct' sugar
|       `-RecordType 0x561b2c1a57e0 'struct __locale_struct'
|         `-Record 0x561b2c1a5758 '__locale_struct'
|-FunctionDecl 0x561b2c1a72a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x561b2c1a5f08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x561b2c1a5f80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561b2c1a7028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x561b2c1a70b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x561b2c1a7130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x561b2c1a7368 <col:40>
|-FunctionDecl 0x561b2c1a7558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x561b2c1a7430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x561b2c1a7600 <col:66>
|-FunctionDecl 0x561b2c1a7710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x561b2c1a7668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x561b2c1a77b8 <col:69>
|-FunctionDecl 0x561b2c1a79e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x561b2c1a7820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561b2c1a78b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x561b2c1a7a98 <col:52>
|-FunctionDecl 0x561b2c1a7c40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x561b2c1a7b00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561b2c1a7b90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x561b2c1a7cf0 <col:55>
|-FunctionDecl 0x561b2c1a7e88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x561b2c1a7d70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x561b2c1a7f30 <col:62>
|-FunctionDecl 0x561b2c1a8168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x561b2c1a7f98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x561b2c1a8210 <col:60>
|-FunctionDecl 0x561b2c1a8438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x561b2c1a8290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x561b2c1a8310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x561b2c1a84e8 <col:44>
|-FunctionDecl 0x561b2c1a86f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x561b2c1a8550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561b2c1a85d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x561b2c1a87a8 <col:49>
|-VarDecl 0x561b2c1a88a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x561b2c1a8928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x561b2c1a89a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x561b2c1a8a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x561b2c1a8ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x561b2c1a8c40 <col:42>
|-VarDecl 0x561b2c1a8cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x561b2c1a8d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x561b2c1a8eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x561b2c1a8da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x561b2c1a8f60 <col:57>
|-FunctionDecl 0x561b2c1a90d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561b2c1a8fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x561b2c1a9178 <col:56>
|-FunctionDecl 0x561b2c1a9288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561b2c1a91f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x561b2c1a9330 <col:59>
|-FunctionDecl 0x561b2c1a9438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x561b2c1a93a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x561b2c1a94e0 <col:48>
| `-ConstAttr 0x561b2c1a9538 <col:89>
|-FunctionDecl 0x561b2c1a9798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x561b2c1a95e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x561b2c1a9678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x561b2c1a99f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561b2c1a9888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561b2c1a9918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x561b2c1a9aa8 <col:88>
|-FunctionDecl 0x561b2c1a9c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561b2c1a9b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561b2c1a9ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x561b2c1a9cf0 <col:88>
|-FunctionDecl 0x561b2c1a9f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x561b2c1a9d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561b2c1a9de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x561b2c1a9fb8 <line:209:22>
|-FunctionDecl 0x561b2c1aa358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x561b2c1aa020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561b2c1aa0e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x561b2c1aa170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x561b2c1aa200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x561b2c1aa658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x561b2c1aa458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x561b2c1aa530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x561b2c1aa708 <col:85>
|-FunctionDecl 0x561b2c1aaaf8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x561b2c1aa770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561b2c1aa8a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x561b2c1aa9b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x561b2c1aabb0 <col:52>
|-FunctionDecl 0x561b2c1aad28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x561b2c1aac18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x561b2c1aadd0 <col:61>
|-FunctionDecl 0x561b2c1ab248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x561b2c1aae38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x561b2c1aaeb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x561b2c1aafe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x561b2c1ab0f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x561b2c1ab308 <col:62>
|-FunctionDecl 0x561b2c1ab528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x561b2c1ab370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x561b2c1ab400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x561b2c1ab5d8 <line:222:22>
|-FunctionDecl 0x561b2c1ab6d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x561b2c1ab640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x561b2c1ab780 <col:65>
|-TypedefDecl 0x561b2c1ab7f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x561b2c135fd0 'unsigned long'
|-RecordDecl 0x561b2c1ab848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x561b2c1ab990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x561b2c1ab9f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561b2c1abaa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x561b2c1aba50 'union pthread_attr_t' sugar
|   `-RecordType 0x561b2c1ab8d0 'union pthread_attr_t'
|     `-Record 0x561b2c1ab848 'pthread_attr_t'
|-RecordDecl 0x561b2c1abb00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x561b2c1abc78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x561b2c1abcf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x561b2c1abda0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x561b2c1abd40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x561b2c1abb80 'struct __pthread_internal_list'
|     `-Record 0x561b2c1abb00 '__pthread_internal_list'
|-RecordDecl 0x561b2c1abe10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x561b2c1abeb8 parent 0x561b2c135e18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x561b2c1abf90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561b2c1abff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x561b2c1ac060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x561b2c1b0110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x561b2c1b0178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x561b2c1b01e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x561b2c1b0268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x561b2c1b0320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x561b2c1b0410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x561b2c1b0478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561b2c1b0600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x561b2c1b05a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x561b2c1abe90 'pthread_mutex_t'
|     `-Record 0x561b2c1abe10 ''
|-RecordDecl 0x561b2c1b0670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x561b2c1b07b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561b2c1b0818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561b2c1b08d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x561b2c1b0870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x561b2c1b06f0 'pthread_mutexattr_t'
|     `-Record 0x561b2c1b0670 ''
|-RecordDecl 0x561b2c1b0940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x561b2c1b09e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x561b2c1b0ab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561b2c1b0b18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x561b2c1b0b80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x561b2c1b0be8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x561b2c1b0c50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x561b2c1b0cb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x561b2c1b0d20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x561b2c1b0d88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x561b2c1b0e40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_8/mix024_rmo.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_8/mix024_rmo.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x561b2c1b0f30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x561b2c1b0f98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x561b2c1b2130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x561b2c1b1070 'union pthread_cond_t' sugar
|   `-RecordType 0x561b2c1b09c0 'pthread_cond_t'
|     `-Record 0x561b2c1b0940 ''
|-RecordDecl 0x561b2c1b21a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x561b2c1b22a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561b2c1b2308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561b2c1b23c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x561b2c1b2360 'union pthread_condattr_t' sugar
|   `-RecordType 0x561b2c1b2220 'pthread_condattr_t'
|     `-Record 0x561b2c1b21a0 ''
|-TypedefDecl 0x561b2c1b2448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x561b2c135fb0 'unsigned int'
|-TypedefDecl 0x561b2c1b24b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x561b2c135f10 'int'
|-RecordDecl 0x561b2c1b2510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x561b2c1b25b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x561b2c1b2680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561b2c1b26e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x561b2c1b2750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x561b2c1b27b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x561b2c1b2820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x561b2c1b2888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x561b2c1b28f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x561b2c1b2958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x561b2c1b29c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x561b2c1b2a28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x561b2c1b2a90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x561b2c1b2b40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_8/mix024_rmo.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_8/mix024_rmo.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x561b2c1b2be8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x561b2c1b2c50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561b2c1b2da0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x561b2c1b2d40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x561b2c1b2590 'pthread_rwlock_t'
|     `-Record 0x561b2c1b2510 ''
|-RecordDecl 0x561b2c1b2e10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x561b2c1b2f50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x561b2c1b2fb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561b2c1b3070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x561b2c1b3010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x561b2c1b2e90 'pthread_rwlockattr_t'
|     `-Record 0x561b2c1b2e10 ''
|-TypedefDecl 0x561b2c1b4140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x561b2c135f14 'volatile int' volatile
|   `-BuiltinType 0x561b2c135f10 'int'
|-RecordDecl 0x561b2c1b4198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x561b2c1b42e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x561b2c1b4348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561b2c1b4400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x561b2c1b43a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x561b2c1b4220 'pthread_barrier_t'
|     `-Record 0x561b2c1b4198 ''
|-RecordDecl 0x561b2c1b4470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x561b2c1b4570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561b2c1b45d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561b2c1b4690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x561b2c1b4630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x561b2c1b44f0 'pthread_barrierattr_t'
|     `-Record 0x561b2c1b4470 ''
|-TypedefDecl 0x561b2c1b47a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x561b2c1b4740 'long [8]' 8 
|   `-BuiltinType 0x561b2c135f30 'long'
|-EnumDecl 0x561b2c1b4800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x561b2c1b48c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x561b2c1b4918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x561b2c1b4968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x561b2c1b4a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x561b2c1b4a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x561b2c1b4ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x561b2c1b4b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x561b2c1b4bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x561b2c1b4b98 <col:26> 'int'
| |   `-DeclRefExpr 0x561b2c1b4b78 <col:26> 'int' EnumConstant 0x561b2c1b4a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x561b2c1b4c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x561b2c1b4c20 <col:29> 'int'
| |   `-DeclRefExpr 0x561b2c1b4c00 <col:29> 'int' EnumConstant 0x561b2c1b4a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x561b2c1b4cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x561b2c1b4ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x561b2c1b4c88 <col:30> 'int' EnumConstant 0x561b2c1b4ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x561b2c1b4d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x561b2c1b4d30 <col:27> 'int'
|     `-DeclRefExpr 0x561b2c1b4d10 <col:27> 'int' EnumConstant 0x561b2c1b4bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x561b2c1b4d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x561b2c1b4e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x561b2c1b4ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x561b2c1b4ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x561b2c1b4eb8 <col:30> 'int' EnumConstant 0x561b2c1b4e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x561b2c1b4f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x561b2c1b4fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x561b2c1b4fb0 <col:29> 'int'
|     `-DeclRefExpr 0x561b2c1b4f90 <col:29> 'int' EnumConstant 0x561b2c1b4f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x561b2c1b5018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x561b2c1b50e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x561b2c1b5150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x561b2c1b51a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x561b2c1b51f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x561b2c1b52b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x561b2c1b5308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x561b2c1b5358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x561b2c1b53e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x561b2c1b53c8 <col:31> 'int'
|     `-DeclRefExpr 0x561b2c1b53a8 <col:31> 'int' EnumConstant 0x561b2c1b52b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x561b2c1b5430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x561b2c1b54f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x561b2c1b5548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x561b2c1b5598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x561b2c1b5668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x561b2c1b56b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x561b2c1b5708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x561b2c1b57d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x561b2c1b5828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x561b2c1b5878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x561b2c1b5ab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x561b2c1b5b20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x561b2c1b5b88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x561b2c1b5ca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x561b2c1b5cf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x561b2c1b5dc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x561b2c1b5e18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x561b2c1b5e68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x561b2c1b5f38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x561b2c1b5f88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x561b2c1b65b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x561b2c1b6080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x561b2c1b61a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b2c1b63a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x561b2c1b6420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x561b2c1b6678 <col:47>
| |-NonNullAttr 0x561b2c1b66d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x561b2c1b6708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x561b2c1b6830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x561b2c1b6760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x561b2c1b6a88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x561b2c1b68e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x561b2c1b6968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x561b2c1b6c58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x561b2c1b6b48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x561b2c1b6d00 <col:60>
|-FunctionDecl 0x561b2c1b6e50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x561b2c1b6ef0 <col:54>
| `-ConstAttr 0x561b2c1b6f48 <col:95>
|-FunctionDecl 0x561b2c1b8990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x561b2c1b6f80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561b2c1b6ff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x561b2c1b8a40 <line:395:19>
| `-ConstAttr 0x561b2c1b8a98 <col:60>
|-FunctionDecl 0x561b2c1b8c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x561b2c1b8b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x561b2c1b8d10 <col:71>
| `-NonNullAttr 0x561b2c1b8d68 <col:112, col:126> 1
|-FunctionDecl 0x561b2c1b8e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x561b2c1b8db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x561b2c1b8f18 <line:398:22>
| `-NonNullAttr 0x561b2c1b8f70 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1b9198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x561b2c1b8fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x561b2c1b9038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x561b2c1b9248 <line:401:22>
| `-NonNullAttr 0x561b2c1b92a0 <col:63, col:80> 1 2
|-FunctionDecl 0x561b2c1b94a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561b2c1b92e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561b2c1b9368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x561b2c1b9558 <line:404:22>
| `-NonNullAttr 0x561b2c1b95b0 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1b9808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x561b2c1b95f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x561b2c1b96a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x561b2c1b98b8 <line:407:22>
| `-NonNullAttr 0x561b2c1b9910 <col:63, col:80> 1 2
|-FunctionDecl 0x561b2c1bab68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x561b2c1ba9b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561b2c1baa28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561b2c1bac18 <line:410:22>
| `-NonNullAttr 0x561b2c1bac70 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1baea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561b2c1bacb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b2c1bad48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x561b2c1baf58 <line:413:22>
| `-NonNullAttr 0x561b2c1bafb0 <col:63, col:80> 1 2
|-FunctionDecl 0x561b2c1bb1e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561b2c1baff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b2c1bb088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x561b2c1bb298 <col:37>
| `-NonNullAttr 0x561b2c1bb2f0 <col:78, col:95> 1 2
|-FunctionDecl 0x561b2c1bb4d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b2c1bb338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b2c1bb3b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x561b2c1bb588 <line:419:22>
| `-NonNullAttr 0x561b2c1bb5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x561b2c1bb768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561b2c1bb628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561b2c1bb6a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x561b2c1bb818 <line:421:22>
| `-NonNullAttr 0x561b2c1bb870 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1bba38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b2c1bb8b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b2c1bb938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x561b2c1bbae8 <line:424:22>
| `-NonNullAttr 0x561b2c1bbb40 <col:63, col:80> 1 2
|-FunctionDecl 0x561b2c1bbcc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561b2c1bbb88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561b2c1bbc08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x561b2c1bbd78 <line:427:22>
| `-NonNullAttr 0x561b2c1bbdd0 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1bbf78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b2c1bbe18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b2c1bbe98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x561b2c1bc028 <line:430:22>
| `-NonNullAttr 0x561b2c1bc080 <col:63, col:80> 1 2
|-FunctionDecl 0x561b2c1bc208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561b2c1bc0c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561b2c1bc148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x561b2c1bc2b8 <line:432:22>
| `-NonNullAttr 0x561b2c1bc310 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1bc538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x561b2c1bc358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b2c1bc3d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x561b2c1bc5e8 <line:435:22>
| |-NonNullAttr 0x561b2c1bc640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x561b2c1bc678 <col:100> "" ""
|-FunctionDecl 0x561b2c1bc888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x561b2c1bc6c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561b2c1bc748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x561b2c1bc938 <line:438:22>
| |-NonNullAttr 0x561b2c1bc990 <col:63, col:77> 1
| `-DeprecatedAttr 0x561b2c1bc9d8 <col:97> "" ""
|-FunctionDecl 0x561b2c1bcbc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x561b2c1bca28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b2c1bcaa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x561b2c1bcc78 <line:441:22>
| `-NonNullAttr 0x561b2c1bccd0 <col:63, col:80> 1 2
|-FunctionDecl 0x561b2c1bce50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x561b2c1bcd18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561b2c1bcd90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561b2c1bcf00 <line:444:22>
| `-NonNullAttr 0x561b2c1bcf58 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1bd248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x561b2c1bcfa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b2c1bd028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x561b2c1bd0a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x561b2c1bd300 <line:448:22>
| `-NonNullAttr 0x561b2c1bd358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x561b2c1bd608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x561b2c1bd3b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561b2c1bd430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x561b2c1bd4a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561b2c1bd6c0 <col:43>
| `-NonNullAttr 0x561b2c1bd718 <col:84, col:98> 1
|-FunctionDecl 0x561b2c1bda20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x561b2c1bd768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561b2c1bd7e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x561b2c1bd878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x561b2c1bdad8 <line:453:22>
| `-NonNullAttr 0x561b2c1bdb30 <col:63, col:77> 3
|-FunctionDecl 0x561b2c1bde08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561b2c1bdb78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561b2c1bdbf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x561b2c1bdc88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x561b2c1bdec0 <line:457:22>
| `-NonNullAttr 0x561b2c1bdf18 <col:63, col:80> 2 3
|-FunctionDecl 0x561b2c1be108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x561b2c1bdf68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561b2c1bdfe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x561b2c1be1b8 <line:459:22>
|-FunctionDecl 0x561b2c1be588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x561b2c1be280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x561b2c1be420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x561b2c1be638 <col:52, col:69> 1 2
|-FunctionDecl 0x561b2c1be7e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x561b2c1be6c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x561b2c1be740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x561b2c1be9f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x561b2c1be8a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x561b2c1be928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x561b2c1beb48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x561b2c1beab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x561b2c1bec88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x561b2c1bed28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x561b2c1bedd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x561b2c1beec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x561b2c1bef30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x561b2c1bf100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_8/mix024_rmo.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x561b2c1bf1f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x561b2c1bf2b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x561b2c1bf250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x561b2c1bedb0 '__pthread_unwind_buf_t'
| |   `-Record 0x561b2c1bed28 ''
| `-AlignedAttr 0x561b2c1bf308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x561b2c1bf380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x561b2c1bf4e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x561b2c1bf548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x561b2c1bf5b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x561b2c1bf618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x561b2c1bf820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x561b2c1bf710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x561b2c1bfa00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x561b2c1bf8d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x561b2c1bfbc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561b2c1bfab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x561b2c1bfc68 <line:488:22>
|-RecordDecl 0x561b2c1bfcc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x561b2c1bffd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x561b2c1bfe38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x561b2c1bfeb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x561b2c1c0088 <col:86>
| `-ReturnsTwiceAttr 0x561b2c1c00e0 <col:12> Implicit
|-FunctionDecl 0x561b2c1c0408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561b2c1c01b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x561b2c1c02c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x561b2c1c04b8 <line:494:22>
| `-NonNullAttr 0x561b2c1c0510 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1c0688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561b2c1c0558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561b2c1c0730 <line:496:22>
| `-NonNullAttr 0x561b2c1c0788 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1c0890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561b2c1c07d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561b2c1c0938 <line:498:22>
| `-NonNullAttr 0x561b2c1c0990 <col:52, col:66> 1
|-FunctionDecl 0x561b2c1c1ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561b2c1c1a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561b2c1c1b80 <line:500:22>
| `-NonNullAttr 0x561b2c1c1bd8 <col:52, col:66> 1
|-FunctionDecl 0x561b2c1c1e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561b2c1c1c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561b2c1c1cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561b2c1c1ec8 <col:36>
| `-NonNullAttr 0x561b2c1c1f20 <col:66, col:83> 1 2
|-FunctionDecl 0x561b2c1c2020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561b2c1c1f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561b2c1c20c8 <line:505:22>
| `-NonNullAttr 0x561b2c1c2120 <col:52, col:66> 1
|-FunctionDecl 0x561b2c1c23b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b2c1c21d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561b2c1c2250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x561b2c1c2468 <line:509:22>
| `-NonNullAttr 0x561b2c1c24c0 <col:63, col:80> 1 2
|-FunctionDecl 0x561b2c1c2788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x561b2c1c2508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561b2c1c2588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x561b2c1c2608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x561b2c1c2840 <line:513:22>
| `-NonNullAttr 0x561b2c1c2898 <col:63, col:80> 1 3
|-FunctionDecl 0x561b2c1c2a30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561b2c1c28e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561b2c1c2ad8 <line:515:22>
| `-NonNullAttr 0x561b2c1c2b30 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1c2d18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561b2c1c2be0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x561b2c1c2dc0 <line:517:22>
| `-NonNullAttr 0x561b2c1c2e18 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1c2f20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561b2c1c2e68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x561b2c1c2fc8 <line:519:22>
| `-NonNullAttr 0x561b2c1c3020 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1c3248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b2c1c3068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561b2c1c30e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x561b2c1c32f8 <line:523:22>
| `-NonNullAttr 0x561b2c1c3350 <col:63, col:80> 1 2
|-FunctionDecl 0x561b2c1c3558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561b2c1c3398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561b2c1c3418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x561b2c1c3608 <line:526:22>
| `-NonNullAttr 0x561b2c1c3660 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1c3808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b2c1c36a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561b2c1c3728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x561b2c1c38b8 <line:529:22>
| `-NonNullAttr 0x561b2c1c3910 <col:63, col:80> 1 2
|-FunctionDecl 0x561b2c1c3b00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561b2c1c3958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561b2c1c3a40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x561b2c1c3bb0 <line:531:22>
| `-NonNullAttr 0x561b2c1c3c08 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1c3db8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b2c1c3c58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561b2c1c3cd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x561b2c1c3e68 <line:535:22>
| `-NonNullAttr 0x561b2c1c3ec0 <col:63, col:80> 1 2
|-FunctionDecl 0x561b2c1c4048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561b2c1c3f08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561b2c1c3f88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x561b2c1c40f8 <line:538:22>
| `-NonNullAttr 0x561b2c1c4150 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1c42f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b2c1c4198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561b2c1c4218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x561b2c1c43a8 <line:542:22>
| `-NonNullAttr 0x561b2c1c4400 <col:63, col:80> 1 2
|-FunctionDecl 0x561b2c1c4588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561b2c1c4448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561b2c1c44c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x561b2c1c4638 <line:545:22>
| `-NonNullAttr 0x561b2c1c4690 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1c4878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x561b2c1c46d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x561b2c1c4758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x561b2c1c4928 <line:548:22>
| `-NonNullAttr 0x561b2c1c4980 <col:63, col:80> 1 2
|-FunctionDecl 0x561b2c1c5b38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561b2c1c49c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561b2c1c5a78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x561b2c1c5be8 <line:551:22>
| `-NonNullAttr 0x561b2c1c5c40 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1c5f78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x561b2c1c5d20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561b2c1c5e30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x561b2c1c6028 <col:29>
| `-NonNullAttr 0x561b2c1c6080 <col:70, col:84> 1
|-FunctionDecl 0x561b2c1c61f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561b2c1c60c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561b2c1c62a0 <line:556:22>
| `-NonNullAttr 0x561b2c1c62f8 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1c6400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561b2c1c6348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561b2c1c64a8 <line:558:22>
| `-NonNullAttr 0x561b2c1c6500 <col:52, col:66> 1
|-FunctionDecl 0x561b2c1c6600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561b2c1c6548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561b2c1c66a8 <line:560:19>
| `-NonNullAttr 0x561b2c1c6700 <col:49, col:63> 1
|-FunctionDecl 0x561b2c1c6938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561b2c1c6748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561b2c1c67d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561b2c1c69e8 <col:39>
| `-NonNullAttr 0x561b2c1c6a70 <col:69, col:86> 1 2
|-FunctionDecl 0x561b2c1c6b70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561b2c1c6ab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561b2c1c6c18 <line:565:22>
| `-NonNullAttr 0x561b2c1c6c70 <col:52, col:66> 1
|-FunctionDecl 0x561b2c1c6d70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561b2c1c6cb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561b2c1c6e18 <line:567:22>
| `-NonNullAttr 0x561b2c1c6e70 <col:52, col:66> 1
|-FunctionDecl 0x561b2c1c7028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561b2c1c6eb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561b2c1c6f48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561b2c1c70d8 <col:39>
| `-NonNullAttr 0x561b2c1c7130 <col:69, col:86> 1 2
|-FunctionDecl 0x561b2c1c7230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561b2c1c7178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561b2c1c72d8 <line:572:22>
| `-NonNullAttr 0x561b2c1c7330 <col:52, col:66> 1
|-FunctionDecl 0x561b2c1c7518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x561b2c1c73e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x561b2c1c75c0 <line:574:22>
| `-NonNullAttr 0x561b2c1c7618 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1c7720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x561b2c1c7668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x561b2c1c77c8 <line:576:22>
| `-NonNullAttr 0x561b2c1c7820 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1c7a80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b2c1c7868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x561b2c1c78e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x561b2c1c7b30 <line:580:22>
| `-NonNullAttr 0x561b2c1c7b88 <col:63, col:80> 1 2
|-FunctionDecl 0x561b2c1c7d98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x561b2c1c7bd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x561b2c1c7c58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x561b2c1c7e48 <line:583:22>
| `-NonNullAttr 0x561b2c1c7ea0 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1c8048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b2c1c7ee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x561b2c1c7f68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x561b2c1c80f8 <line:587:22>
| `-NonNullAttr 0x561b2c1c8150 <col:63, col:80> 1 2
|-FunctionDecl 0x561b2c1c82d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x561b2c1c8198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x561b2c1c8218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x561b2c1c8388 <col:36>
| `-NonNullAttr 0x561b2c1c83e0 <col:77, col:91> 1
|-FunctionDecl 0x561b2c1c8718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x561b2c1c84c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561b2c1c85d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x561b2c1c87c8 <line:592:22>
| `-NonNullAttr 0x561b2c1c8820 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1c8998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561b2c1c8868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561b2c1c8a40 <line:594:22>
| `-NonNullAttr 0x561b2c1c8ac0 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1c8bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561b2c1c8b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561b2c1c8c68 <line:596:22>
| `-NonNullAttr 0x561b2c1c8cc0 <col:52, col:66> 1
|-FunctionDecl 0x561b2c1c8dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561b2c1c8d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561b2c1c8e68 <line:598:22>
| `-NonNullAttr 0x561b2c1c8ec0 <col:52, col:66> 1
|-FunctionDecl 0x561b2c1c90e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x561b2c1c8f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561b2c1c8f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x561b2c1c9198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x561b2c1c94c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561b2c1c9218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561b2c1c9290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561b2c1c9320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x561b2c1c9580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x561b2c1c9798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x561b2c1c9660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x561b2c1c9840 <line:607:22>
| `-NonNullAttr 0x561b2c1c9898 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1c99a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x561b2c1c98e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x561b2c1c9a48 <line:609:22>
| `-NonNullAttr 0x561b2c1c9ad0 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1c9cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b2c1c9b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x561b2c1c9b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x561b2c1c9da8 <line:613:22>
| `-NonNullAttr 0x561b2c1c9e00 <col:63, col:80> 1 2
|-FunctionDecl 0x561b2c1ca008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x561b2c1c9e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x561b2c1c9ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x561b2c1ca0b8 <col:37>
| `-NonNullAttr 0x561b2c1ca110 <col:78, col:92> 1
|-FunctionDecl 0x561b2c1ca328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x561b2c1ca158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x561b2c1ca200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x561b2c1ca3d8 <line:619:22>
| `-NonNullAttr 0x561b2c1ca430 <col:63, col:80> 1 2
|-FunctionDecl 0x561b2c1ca5f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x561b2c1ca478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x561b2c1ca4f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x561b2c1ca6a8 <line:622:22>
| `-NonNullAttr 0x561b2c1ca700 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1ca9a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x561b2c1ca7e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x561b2c1ca860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x561b2c1caa58 <line:624:22>
| `-NonNullAttr 0x561b2c1caae0 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1cac58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561b2c1cab28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561b2c1cad00 <line:626:22>
| `-NonNullAttr 0x561b2c1cad58 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1cae60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561b2c1cada8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561b2c1caf08 <line:628:22>
| `-NonNullAttr 0x561b2c1caf60 <col:52, col:66> 1
|-FunctionDecl 0x561b2c1cb060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561b2c1cafa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561b2c1cb108 <line:630:22>
| `-NonNullAttr 0x561b2c1cb160 <col:52, col:66> 1
|-FunctionDecl 0x561b2c1cb260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561b2c1cb1a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561b2c1cb308 <line:632:22>
| `-NonNullAttr 0x561b2c1cb360 <col:52, col:66> 1
|-FunctionDecl 0x561b2c1cb738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x561b2c1cb440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x561b2c1cb550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x561b2c1cb5d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x561b2c1cb7f0 <line:636:22>
| `-NonNullAttr 0x561b2c1cb848 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1cb9c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x561b2c1cb898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x561b2c1cba70 <line:638:22>
| `-NonNullAttr 0x561b2c1ccb00 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1ccc00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x561b2c1ccb48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x561b2c1ccca8 <line:640:22>
| `-NonNullAttr 0x561b2c1ccd00 <col:52, col:66> 1
|-FunctionDecl 0x561b2c1ccee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x561b2c1ccdb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x561b2c1ccf90 <line:642:22>
| `-NonNullAttr 0x561b2c1ccfe8 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1cd0f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x561b2c1cd038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x561b2c1cd198 <line:644:22>
| `-NonNullAttr 0x561b2c1cd1f0 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1cd418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b2c1cd238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x561b2c1cd2b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x561b2c1cd4c8 <line:648:22>
| `-NonNullAttr 0x561b2c1cd520 <col:63, col:80> 1 2
|-FunctionDecl 0x561b2c1cd728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x561b2c1cd568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x561b2c1cd5e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x561b2c1cd7d8 <line:651:22>
| `-NonNullAttr 0x561b2c1cd830 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1cdb98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x561b2c1cd910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x561b2c1cda30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x561b2c1cdc48 <line:654:22>
| `-NonNullAttr 0x561b2c1cdca0 <col:63, col:77> 1
|-FunctionDecl 0x561b2c1cddf8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x561b2c1cdce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x561b2c1cdea0 <col:69>
|-FunctionDecl 0x561b2c1ce018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x561b2c1cdf08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x561b2c1ce0c0 <col:72>
|-FunctionDecl 0x561b2c1ce2f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x561b2c1ce128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x561b2c1ce1d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x561b2c1ce3a8 <col:44>
|-FunctionDecl 0x561b2c1ce5c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x561b2c1ce410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561b2c1ce488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x561b2c1ce678 <line:661:22>
| `-NonNullAttr 0x561b2c1ce6d0 <col:63, col:77> 2
|-FunctionDecl 0x561b2c1ceb30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x561b2c1ce7b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x561b2c1ce8c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x561b2c1ce9d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x561b2c1cebe8 <col:47>
|-FunctionDecl 0x561b2c1cecf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x561b2c1cec58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561b2c1cee48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x561b2c1cedb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561b2c1cefa0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x561b2c1cef08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561b2c1cf068 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x561b2c1cf128 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x561b2c1cf1e8 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x561b2c1cf2a0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x561b2c1cf320 prev 0x561b2c1cf2a0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x561b2c1cf388 <col:24> 'int' 0
|-VarDecl 0x561b2c1cf3c0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x561b2c1cf440 prev 0x561b2c1cf3c0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x561b2c1cf4a8 <col:27> 'int' 0
|-VarDecl 0x561b2c1cf4e0 <line:676:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x561b2c1cf560 prev 0x561b2c1cf4e0 <line:677:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x561b2c1cf5c8 <col:27> 'int' 0
|-VarDecl 0x561b2c1cf600 <line:678:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x561b2c1cf680 prev 0x561b2c1cf600 <line:679:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x561b2c1cf6e8 <col:27> 'int' 0
|-VarDecl 0x561b2c1cf720 <line:680:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x561b2c1cf7a0 prev 0x561b2c1cf720 <line:681:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x561b2c1cf808 <col:27> 'int' 0
|-VarDecl 0x561b2c1cf840 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x561b2c1cf8c0 prev 0x561b2c1cf840 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x561b2c1cf928 <col:9> 'int' 0
|-VarDecl 0x561b2c1cf958 <line:684:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x561b2c1cf9d0 <line:685:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x561b2c1cfa50 <line:686:1, col:5> col:5 used x 'int'
|-VarDecl 0x561b2c1cfb00 prev 0x561b2c1cfa50 <line:687:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x561b2c1cfb68 <col:9> 'int' 0
|-VarDecl 0x561b2c1cfba0 <line:688:1, col:5> col:5 used y 'int'
|-VarDecl 0x561b2c1cfc20 prev 0x561b2c1cfba0 <line:689:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x561b2c1cfc88 <col:9> 'int' 0
|-VarDecl 0x561b2c1cfcb8 <line:690:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x561b2c1cfd38 <line:691:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x561b2c1cfdb0 <line:692:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x561b2c1cfe28 <line:693:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x561b2c1cfea0 <line:694:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x561b2c1cff18 <line:695:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x561b2c1cff90 <line:696:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x561b2c1d0008 <line:697:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x561b2c1d0080 <line:698:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x561b2c1d00f8 <line:699:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x561b2c1d0170 <line:700:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x561b2c1d01f0 <line:701:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x561b2c1d0270 <line:702:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x561b2c1d02e8 <line:703:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x561b2c1d0368 <line:704:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x561b2c1d03e0 <line:705:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x561b2c1d0460 <line:706:1, col:5> col:5 used z 'int'
|-VarDecl 0x561b2c1d04e0 prev 0x561b2c1d0460 <line:707:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x561b2c1d0548 <col:9> 'int' 0
|-VarDecl 0x561b2c1d0578 <line:708:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x561b2c1d05f0 <line:709:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x561b2c1d0708 prev 0x561b2c1cecf0 <line:710:1, line:743:1> line:710:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x561b2c1d0670 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561b2c1d38b8 <line:711:1, line:743:1>
|   |-CallExpr 0x561b2c1d0818 <line:712:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d0800 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d07b0 <col:3> 'void ()' Function 0x561b2c175fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b2c1d0878 <line:713:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561b2c1d0838 <col:3> 'int' lvalue Var 0x561b2c1cf8c0 'a' 'int'
|   | `-IntegerLiteral 0x561b2c1d0858 <col:7> 'int' 1
|   |-CallExpr 0x561b2c1d08d0 <line:714:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d08b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d0898 <col:3> 'void ()' Function 0x561b2c176060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b2c1d0928 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d0910 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d08f0 <col:3> 'void ()' Function 0x561b2c175fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b2c1d0988 <line:716:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561b2c1d0948 <col:3> 'int' lvalue Var 0x561b2c1cfb00 'x' 'int'
|   | `-IntegerLiteral 0x561b2c1d0968 <col:7> 'int' 1
|   |-CallExpr 0x561b2c1d09e0 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d09c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d09a8 <col:3> 'void ()' Function 0x561b2c176060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b2c1d0a38 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d0a20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d0a00 <col:3> 'void ()' Function 0x561b2c175fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b2c1d0ab0 <line:719:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561b2c1d0a58 <col:3> 'int' lvalue Var 0x561b2c1cf440 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x561b2c1d0a98 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b2c1d0a78 <col:25> 'int' lvalue Var 0x561b2c1cfb00 'x' 'int'
|   |-CallExpr 0x561b2c1d0b28 <line:720:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d0b10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d0ad0 <col:3> 'void ()' Function 0x561b2c176060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b2c1d0b80 <line:721:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d0b68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d0b48 <col:3> 'void ()' Function 0x561b2c175fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b2c1d0c48 <line:722:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x561b2c1d0ba0 <col:3> '_Bool' lvalue Var 0x561b2c1d0578 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x561b2c1d0c28 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x561b2c1d0c10 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x561b2c1d0bc0 <col:19> '_Bool (void)' Function 0x561b2c175770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x561b2c1d0ce0 <line:723:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x561b2c1d0c68 <col:3> '_Bool' lvalue Var 0x561b2c1d05f0 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x561b2c1d0cc0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x561b2c1d0ca8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x561b2c1d0c88 <col:19> '_Bool (void)' Function 0x561b2c175770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x561b2c1d0d58 <line:724:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x561b2c1d0d00 <col:3> '_Bool' lvalue Var 0x561b2c1cfcb8 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x561b2c1d0d40 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b2c1d0d20 <col:21> '_Bool' lvalue Var 0x561b2c1d05f0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x561b2c1d0dd0 <line:725:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561b2c1d0d78 <col:3> 'int' lvalue Var 0x561b2c1cfd38 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x561b2c1d0db8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b2c1d0d98 <col:15> 'int' lvalue Var 0x561b2c1cfc20 'y' 'int'
|   |-BinaryOperator 0x561b2c1d1208 <line:726:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x561b2c1d0df0 <col:3> 'int' lvalue Var 0x561b2c1cfc20 'y' 'int'
|   | `-ConditionalOperator 0x561b2c1d11d8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x561b2c1d1000 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x561b2c1d0f20 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x561b2c1d0e48 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x561b2c1d0e30 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x561b2c1d0e10 <col:8> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x561b2c1d0f00 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x561b2c1d0e98 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x561b2c1d0e80 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x561b2c1d0e60 <col:27> '_Bool' lvalue Var 0x561b2c1cfe28 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x561b2c1d0ee8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x561b2c1d0ed0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x561b2c1d0eb0 <col:46> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x561b2c1d0fe0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x561b2c1d0f78 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x561b2c1d0f60 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x561b2c1d0f40 <col:65> '_Bool' lvalue Var 0x561b2c1cfe28 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x561b2c1d0fc8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x561b2c1d0fb0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x561b2c1d0f90 <col:84> '_Bool' lvalue Var 0x561b2c1d0008 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x561b2c1d11c0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561b2c1d1020 <col:101> 'int' lvalue Var 0x561b2c1cfc20 'y' 'int'
|   |   `-ParenExpr 0x561b2c1d11a0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x561b2c1d1170 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x561b2c1d10e0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561b2c1d1098 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561b2c1d1080 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561b2c1d1040 <col:106> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561b2c1d10c8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561b2c1d10b0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561b2c1d1060 <col:124> '_Bool' lvalue Var 0x561b2c1cfe28 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x561b2c1d1140 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561b2c1d1100 <col:141> 'int' lvalue Var 0x561b2c1d0270 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x561b2c1d1158 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b2c1d1120 <col:153> 'int' lvalue Var 0x561b2c1d0368 'y$w_buff1' 'int'
|   |-BinaryOperator 0x561b2c1d1718 <line:727:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x561b2c1d1228 <col:3> 'int' lvalue Var 0x561b2c1d0270 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x561b2c1d16e8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x561b2c1d16b8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561b2c1d16a0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561b2c1d1248 <col:15> '_Bool' lvalue Var 0x561b2c1d05f0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x561b2c1d16d0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561b2c1d1268 <col:31> 'int' lvalue Var 0x561b2c1d0270 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x561b2c1d1680 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x561b2c1d1650 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x561b2c1d1478 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x561b2c1d1398 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x561b2c1d12c0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x561b2c1d12a8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x561b2c1d1288 <col:45> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x561b2c1d1378 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x561b2c1d1310 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x561b2c1d12f8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x561b2c1d12d8 <col:64> '_Bool' lvalue Var 0x561b2c1cfe28 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x561b2c1d1360 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x561b2c1d1348 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x561b2c1d1328 <col:83> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x561b2c1d1458 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x561b2c1d13f0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x561b2c1d13d8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x561b2c1d13b8 <col:102> '_Bool' lvalue Var 0x561b2c1cfe28 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x561b2c1d1440 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x561b2c1d1428 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x561b2c1d1408 <col:121> '_Bool' lvalue Var 0x561b2c1d0008 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x561b2c1d1638 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561b2c1d1498 <col:138> 'int' lvalue Var 0x561b2c1d0270 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x561b2c1d1618 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x561b2c1d15e8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x561b2c1d1558 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x561b2c1d1510 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x561b2c1d14f8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x561b2c1d14b8 <col:151> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x561b2c1d1540 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x561b2c1d1528 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x561b2c1d14d8 <col:169> '_Bool' lvalue Var 0x561b2c1cfe28 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x561b2c1d15b8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x561b2c1d1578 <col:186> 'int' lvalue Var 0x561b2c1d0270 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x561b2c1d15d0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x561b2c1d1598 <col:198> 'int' lvalue Var 0x561b2c1d0270 'y$w_buff0' 'int'
|   |-BinaryOperator 0x561b2c1d1c50 <line:728:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x561b2c1d1738 <col:3> 'int' lvalue Var 0x561b2c1d0368 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x561b2c1d1c20 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x561b2c1d1bf0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561b2c1d1bd8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561b2c1d1758 <col:15> '_Bool' lvalue Var 0x561b2c1d05f0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x561b2c1d1c08 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561b2c1d1778 <col:31> 'int' lvalue Var 0x561b2c1d0368 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x561b2c1d1bb8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x561b2c1d1b88 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x561b2c1d1988 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x561b2c1d18a8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x561b2c1d17d0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x561b2c1d17b8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x561b2c1d1798 <col:45> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x561b2c1d1888 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x561b2c1d1820 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x561b2c1d1808 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x561b2c1d17e8 <col:64> '_Bool' lvalue Var 0x561b2c1cfe28 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x561b2c1d1870 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x561b2c1d1858 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x561b2c1d1838 <col:83> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x561b2c1d1968 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x561b2c1d1900 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x561b2c1d18e8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x561b2c1d18c8 <col:102> '_Bool' lvalue Var 0x561b2c1cfe28 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x561b2c1d1950 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x561b2c1d1938 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x561b2c1d1918 <col:121> '_Bool' lvalue Var 0x561b2c1d0008 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x561b2c1d1b70 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561b2c1d19a8 <col:138> 'int' lvalue Var 0x561b2c1d0368 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x561b2c1d1b50 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x561b2c1d1b20 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x561b2c1d1a68 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x561b2c1d1a20 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x561b2c1d1a08 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x561b2c1d19c8 <col:151> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x561b2c1d1a50 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x561b2c1d1a38 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x561b2c1d19e8 <col:169> '_Bool' lvalue Var 0x561b2c1cfe28 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x561b2c1d1ac8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x561b2c1d1a88 <col:186> 'int' lvalue Var 0x561b2c1d0368 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x561b2c1d1ae0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x561b2c1d1aa8 <col:198> 'int' lvalue Var 0x561b2c1d0368 'y$w_buff1' 'int'
|   |-BinaryOperator 0x561b2c1d21f8 <line:729:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x561b2c1d1c70 <col:3> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561b2c1d21e0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b2c1d21b0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x561b2c1d2168 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561b2c1d2150 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561b2c1d1c90 <col:20> '_Bool' lvalue Var 0x561b2c1d05f0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561b2c1d2198 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561b2c1d2180 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561b2c1d1cb0 <col:36> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x561b2c1d2130 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x561b2c1d2100 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x561b2c1d1ec0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561b2c1d1de0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561b2c1d1d08 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561b2c1d1cf0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561b2c1d1cd0 <col:55> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561b2c1d1dc0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561b2c1d1d58 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561b2c1d1d40 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561b2c1d1d20 <col:74> '_Bool' lvalue Var 0x561b2c1cfe28 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x561b2c1d1da8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561b2c1d1d90 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561b2c1d1d70 <col:93> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561b2c1d1ea0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561b2c1d1e38 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561b2c1d1e20 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561b2c1d1e00 <col:112> '_Bool' lvalue Var 0x561b2c1cfe28 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x561b2c1d1e88 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561b2c1d1e70 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561b2c1d1e50 <col:131> '_Bool' lvalue Var 0x561b2c1d0008 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x561b2c1d20e8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561b2c1d20d0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561b2c1d1ee0 <col:148> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x561b2c1d20b0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x561b2c1d2080 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x561b2c1d1fa0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561b2c1d1f58 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561b2c1d1f40 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561b2c1d1f00 <col:166> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561b2c1d1f88 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561b2c1d1f70 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561b2c1d1f20 <col:184> '_Bool' lvalue Var 0x561b2c1cfe28 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x561b2c1d2038 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561b2c1d1ff0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561b2c1d1fc0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561b2c1d2068 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x561b2c1d2050 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x561b2c1d2018 <col:212> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561b2c1d27c0 <line:730:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x561b2c1d2218 <col:3> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561b2c1d27a8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b2c1d2778 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x561b2c1d2730 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561b2c1d2718 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561b2c1d2238 <col:20> '_Bool' lvalue Var 0x561b2c1d05f0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561b2c1d2760 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561b2c1d2748 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561b2c1d2258 <col:36> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x561b2c1d26f8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x561b2c1d26c8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x561b2c1d2468 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561b2c1d2388 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561b2c1d22b0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561b2c1d2298 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561b2c1d2278 <col:55> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561b2c1d2368 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561b2c1d2300 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561b2c1d22e8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561b2c1d22c8 <col:74> '_Bool' lvalue Var 0x561b2c1cfe28 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x561b2c1d2350 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561b2c1d2338 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561b2c1d2318 <col:93> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561b2c1d2448 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561b2c1d23e0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561b2c1d23c8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561b2c1d23a8 <col:112> '_Bool' lvalue Var 0x561b2c1cfe28 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x561b2c1d2430 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561b2c1d2418 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561b2c1d23f8 <col:131> '_Bool' lvalue Var 0x561b2c1d0008 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x561b2c1d26b0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561b2c1d2698 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561b2c1d2488 <col:148> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x561b2c1d2678 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x561b2c1d2648 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x561b2c1d2548 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561b2c1d2500 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561b2c1d24e8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561b2c1d24a8 <col:166> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561b2c1d2530 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561b2c1d2518 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561b2c1d24c8 <col:184> '_Bool' lvalue Var 0x561b2c1cfe28 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x561b2c1d2618 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561b2c1d2598 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561b2c1d2568 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561b2c1d2630 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x561b2c1d25f0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x561b2c1d25c0 <col:219> 'int' 0
|   |-BinaryOperator 0x561b2c1d2d88 <line:731:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x561b2c1d27e0 <col:3> '_Bool' lvalue Var 0x561b2c1cfe28 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561b2c1d2d70 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b2c1d2d40 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x561b2c1d2cf8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561b2c1d2ce0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561b2c1d2800 <col:20> '_Bool' lvalue Var 0x561b2c1d05f0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561b2c1d2d28 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561b2c1d2d10 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561b2c1d2820 <col:36> '_Bool' lvalue Var 0x561b2c1cfe28 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x561b2c1d2cc0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x561b2c1d2c90 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x561b2c1d2a30 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561b2c1d2950 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561b2c1d2878 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561b2c1d2860 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561b2c1d2840 <col:55> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561b2c1d2930 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561b2c1d28c8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561b2c1d28b0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561b2c1d2890 <col:74> '_Bool' lvalue Var 0x561b2c1cfe28 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x561b2c1d2918 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561b2c1d2900 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561b2c1d28e0 <col:93> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561b2c1d2a10 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561b2c1d29a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561b2c1d2990 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561b2c1d2970 <col:112> '_Bool' lvalue Var 0x561b2c1cfe28 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x561b2c1d29f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561b2c1d29e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561b2c1d29c0 <col:131> '_Bool' lvalue Var 0x561b2c1d0008 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x561b2c1d2c78 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561b2c1d2c60 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561b2c1d2a50 <col:148> '_Bool' lvalue Var 0x561b2c1cfe28 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x561b2c1d2c40 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x561b2c1d2c10 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x561b2c1d2b30 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561b2c1d2ac8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561b2c1d2ab0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561b2c1d2a70 <col:166> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561b2c1d2af8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561b2c1d2ae0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561b2c1d2a90 <col:184> '_Bool' lvalue Var 0x561b2c1cfe28 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x561b2c1d2bc8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561b2c1d2b80 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561b2c1d2b50 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561b2c1d2bf8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x561b2c1d2be0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x561b2c1d2ba8 <col:212> '_Bool' lvalue Var 0x561b2c1cfe28 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x561b2c1d3350 <line:732:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x561b2c1d2da8 <col:3> '_Bool' lvalue Var 0x561b2c1d0008 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561b2c1d3338 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b2c1d3308 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x561b2c1d32c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561b2c1d32a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561b2c1d2dc8 <col:20> '_Bool' lvalue Var 0x561b2c1d05f0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561b2c1d32f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561b2c1d32d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561b2c1d2de8 <col:36> '_Bool' lvalue Var 0x561b2c1d0008 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x561b2c1d3288 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x561b2c1d3258 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x561b2c1d2ff8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561b2c1d2f18 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561b2c1d2e40 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561b2c1d2e28 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561b2c1d2e08 <col:55> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561b2c1d2ef8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561b2c1d2e90 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561b2c1d2e78 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561b2c1d2e58 <col:74> '_Bool' lvalue Var 0x561b2c1cfe28 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x561b2c1d2ee0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561b2c1d2ec8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561b2c1d2ea8 <col:93> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561b2c1d2fd8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561b2c1d2f70 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561b2c1d2f58 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561b2c1d2f38 <col:112> '_Bool' lvalue Var 0x561b2c1cfe28 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x561b2c1d2fc0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561b2c1d2fa8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561b2c1d2f88 <col:131> '_Bool' lvalue Var 0x561b2c1d0008 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x561b2c1d3240 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561b2c1d3228 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561b2c1d3018 <col:148> '_Bool' lvalue Var 0x561b2c1d0008 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x561b2c1d3208 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x561b2c1d31d8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x561b2c1d30d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561b2c1d3090 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561b2c1d3078 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561b2c1d3038 <col:166> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561b2c1d30c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561b2c1d30a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561b2c1d3058 <col:184> '_Bool' lvalue Var 0x561b2c1cfe28 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x561b2c1d31a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561b2c1d3128 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561b2c1d30f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561b2c1d31c0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x561b2c1d3180 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x561b2c1d3150 <col:219> 'int' 0
|   |-BinaryOperator 0x561b2c1d33c8 <line:733:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561b2c1d3370 <col:3> 'int' lvalue Var 0x561b2c1cf560 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x561b2c1d33b0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b2c1d3390 <col:25> 'int' lvalue Var 0x561b2c1cfc20 'y' 'int'
|   |-BinaryOperator 0x561b2c1d34f8 <line:734:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x561b2c1d33e8 <col:3> 'int' lvalue Var 0x561b2c1cfc20 'y' 'int'
|   | `-ConditionalOperator 0x561b2c1d34c8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x561b2c1d3480 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561b2c1d3468 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561b2c1d3408 <col:7> '_Bool' lvalue Var 0x561b2c1cfcb8 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x561b2c1d3498 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561b2c1d3428 <col:25> 'int' lvalue Var 0x561b2c1cfd38 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x561b2c1d34b0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x561b2c1d3448 <col:37> 'int' lvalue Var 0x561b2c1cfc20 'y' 'int'
|   |-BinaryOperator 0x561b2c1d3590 <line:735:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x561b2c1d3518 <col:3> '_Bool' lvalue Var 0x561b2c1cfcb8 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x561b2c1d3568 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561b2c1d3538 <col:28> 'int' 0
|   |-CallExpr 0x561b2c1d35e8 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d35d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d35b0 <col:3> 'void ()' Function 0x561b2c176060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b2c1d3640 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d3628 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d3608 <col:3> 'void ()' Function 0x561b2c175fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x561b2c1d3698 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d3680 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d3660 <col:3> 'void ()' Function 0x561b2c176060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b2c1d36f0 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d36d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d36b8 <col:3> 'void ()' Function 0x561b2c175fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b2c1d37a8 <line:740:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561b2c1d3710 <col:3> 'int' lvalue Var 0x561b2c1cf320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561b2c1d3788 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561b2c1d3770 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561b2c1d3730 <col:22> 'int' lvalue Var 0x561b2c1cf320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561b2c1d3750 <col:41> 'int' 1
|   |-CallExpr 0x561b2c1d3800 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d37e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d37c8 <col:3> 'void ()' Function 0x561b2c176060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561b2c1d38a8 <line:742:3, col:36>
|     `-CallExpr 0x561b2c1d3888 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561b2c1d3870 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561b2c1d3820 <col:10> 'void *(void)' Function 0x561b2c175ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561b2c1d3a70 prev 0x561b2c1cee48 <line:744:1, line:772:1> line:744:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x561b2c1d39d8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561b2c1d5248 <line:745:1, line:772:1>
|   |-CallExpr 0x561b2c1d3b78 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d3b60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d3b40 <col:3> 'void ()' Function 0x561b2c175fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b2c1d3bf0 <line:747:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561b2c1d3b98 <col:3> 'int' lvalue Var 0x561b2c1d0368 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x561b2c1d3bd8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b2c1d3bb8 <col:15> 'int' lvalue Var 0x561b2c1d0270 'y$w_buff0' 'int'
|   |-BinaryOperator 0x561b2c1d3c50 <line:748:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561b2c1d3c10 <col:3> 'int' lvalue Var 0x561b2c1d0270 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x561b2c1d3c30 <col:15> 'int' 1
|   |-BinaryOperator 0x561b2c1d3cc8 <line:749:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561b2c1d3c70 <col:3> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561b2c1d3cb0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b2c1d3c90 <col:20> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561b2c1d3d60 <line:750:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x561b2c1d3ce8 <col:3> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x561b2c1d3d38 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561b2c1d3d08 <col:27> 'int' 1
|   |-CallExpr 0x561b2c1d3ee8 <line:751:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x561b2c1d3ed0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x561b2c1d3d80 <col:3> 'void (int)' Function 0x561b2c175d28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x561b2c1d3e80 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x561b2c1d3e60 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x561b2c1d3e40 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x561b2c1d3df8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x561b2c1d3de0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x561b2c1d3da0 <col:23> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x561b2c1d3e28 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x561b2c1d3e10 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x561b2c1d3dc0 <col:41> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561b2c1d3f68 <line:752:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561b2c1d3f10 <col:3> '_Bool' lvalue Var 0x561b2c1cff90 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x561b2c1d3f50 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b2c1d3f30 <col:20> '_Bool' lvalue Var 0x561b2c1cfdb0 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x561b2c1d3fe0 <line:753:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561b2c1d3f88 <col:3> '_Bool' lvalue Var 0x561b2c1d0008 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561b2c1d3fc8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b2c1d3fa8 <col:20> '_Bool' lvalue Var 0x561b2c1cfe28 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x561b2c1d4058 <line:754:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561b2c1d4000 <col:3> '_Bool' lvalue Var 0x561b2c1d0080 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561b2c1d4040 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b2c1d4020 <col:20> '_Bool' lvalue Var 0x561b2c1cfea0 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x561b2c1d40d0 <line:755:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561b2c1d4078 <col:3> '_Bool' lvalue Var 0x561b2c1d00f8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561b2c1d40b8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b2c1d4098 <col:20> '_Bool' lvalue Var 0x561b2c1cff18 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x561b2c1d4168 <line:756:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x561b2c1d40f0 <col:3> '_Bool' lvalue Var 0x561b2c1cfea0 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x561b2c1d4140 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561b2c1d4110 <col:27> 'int' 1
|   |-CallExpr 0x561b2c1d41c0 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d41a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d4188 <col:3> 'void ()' Function 0x561b2c176060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b2c1d4218 <line:758:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d4200 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d41e0 <col:3> 'void ()' Function 0x561b2c175fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b2c1d4278 <line:759:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561b2c1d4238 <col:3> 'int' lvalue Var 0x561b2c1d04e0 'z' 'int'
|   | `-IntegerLiteral 0x561b2c1d4258 <col:7> 'int' 1
|   |-CallExpr 0x561b2c1d42d0 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d42b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d4298 <col:3> 'void ()' Function 0x561b2c176060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b2c1d4328 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d4310 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d42f0 <col:3> 'void ()' Function 0x561b2c175fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b2c1d4610 <line:762:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561b2c1d4348 <col:3> 'int' lvalue Var 0x561b2c1cfc20 'y' 'int'
|   | `-ConditionalOperator 0x561b2c1d45e0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561b2c1d4408 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561b2c1d43c0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561b2c1d43a8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561b2c1d4368 <col:7> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561b2c1d43f0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561b2c1d43d8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561b2c1d4388 <col:25> '_Bool' lvalue Var 0x561b2c1cfea0 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x561b2c1d45c8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561b2c1d4428 <col:42> 'int' lvalue Var 0x561b2c1d0270 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x561b2c1d45a8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561b2c1d4578 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561b2c1d44e8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561b2c1d44a0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561b2c1d4488 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561b2c1d4448 <col:55> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561b2c1d44d0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561b2c1d44b8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561b2c1d4468 <col:73> '_Bool' lvalue Var 0x561b2c1d0080 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x561b2c1d4548 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561b2c1d4508 <col:90> 'int' lvalue Var 0x561b2c1d0368 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561b2c1d4560 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b2c1d4528 <col:102> 'int' lvalue Var 0x561b2c1cfc20 'y' 'int'
|   |-BinaryOperator 0x561b2c1d4818 <line:763:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561b2c1d4630 <col:3> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561b2c1d4800 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b2c1d47d0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561b2c1d46f0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561b2c1d46a8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561b2c1d4690 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561b2c1d4650 <col:20> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561b2c1d46d8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561b2c1d46c0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561b2c1d4670 <col:38> '_Bool' lvalue Var 0x561b2c1cfea0 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561b2c1d4788 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b2c1d4740 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b2c1d4710 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561b2c1d47b8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b2c1d47a0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b2c1d4768 <col:66> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561b2c1d4b00 <line:764:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561b2c1d4838 <col:3> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561b2c1d4ae8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b2c1d4ab8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561b2c1d49d8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561b2c1d48f8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561b2c1d48b0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561b2c1d4898 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561b2c1d4858 <col:20> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561b2c1d48e0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561b2c1d48c8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561b2c1d4878 <col:38> '_Bool' lvalue Var 0x561b2c1cfea0 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x561b2c1d49b8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561b2c1d4970 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561b2c1d4958 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561b2c1d4918 <col:56> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561b2c1d49a0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561b2c1d4988 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561b2c1d4938 <col:74> '_Bool' lvalue Var 0x561b2c1d0080 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561b2c1d4a70 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b2c1d4a28 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b2c1d49f8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561b2c1d4aa0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b2c1d4a88 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b2c1d4a50 <col:102> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561b2c1d4d18 <line:765:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561b2c1d4b20 <col:3> '_Bool' lvalue Var 0x561b2c1cfea0 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561b2c1d4d00 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b2c1d4cd0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561b2c1d4bf0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561b2c1d4ba8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561b2c1d4b90 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561b2c1d4b50 <col:20> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561b2c1d4bd8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561b2c1d4bc0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561b2c1d4b70 <col:38> '_Bool' lvalue Var 0x561b2c1cfea0 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561b2c1d4c88 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b2c1d4c40 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b2c1d4c10 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561b2c1d4cb8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b2c1d4ca0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b2c1d4c68 <col:66> '_Bool' lvalue Var 0x561b2c1cfea0 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x561b2c1d5000 <line:766:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561b2c1d4d38 <col:3> '_Bool' lvalue Var 0x561b2c1d0080 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561b2c1d4fe8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b2c1d4fb8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561b2c1d4ed8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561b2c1d4df8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561b2c1d4db0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561b2c1d4d98 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561b2c1d4d58 <col:20> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561b2c1d4de0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561b2c1d4dc8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561b2c1d4d78 <col:38> '_Bool' lvalue Var 0x561b2c1cfea0 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x561b2c1d4eb8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561b2c1d4e70 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561b2c1d4e58 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561b2c1d4e18 <col:56> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561b2c1d4ea0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561b2c1d4e88 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561b2c1d4e38 <col:74> '_Bool' lvalue Var 0x561b2c1d0080 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561b2c1d4f70 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b2c1d4f28 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b2c1d4ef8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561b2c1d4fa0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b2c1d4f88 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b2c1d4f50 <col:102> '_Bool' lvalue Var 0x561b2c1d0080 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x561b2c1d5058 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d5040 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d5020 <col:3> 'void ()' Function 0x561b2c176060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b2c1d50b0 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d5098 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d5078 <col:3> 'void ()' Function 0x561b2c175fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b2c1d5168 <line:769:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561b2c1d50d0 <col:3> 'int' lvalue Var 0x561b2c1cf320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561b2c1d5148 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561b2c1d5130 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561b2c1d50f0 <col:22> 'int' lvalue Var 0x561b2c1cf320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561b2c1d5110 <col:41> 'int' 1
|   |-CallExpr 0x561b2c1d51c0 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d51a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d5188 <col:3> 'void ()' Function 0x561b2c176060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561b2c1d5238 <line:771:3, col:36>
|     `-CallExpr 0x561b2c1d5218 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561b2c1d5200 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561b2c1d51e0 <col:10> 'void *(void)' Function 0x561b2c175ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561b2c1d53d8 prev 0x561b2c1cefa0 <line:773:1, line:795:1> line:773:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x561b2c1d5340 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561b2c1d6748 <line:774:1, line:795:1>
|   |-CallExpr 0x561b2c1d54b8 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d54a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d5480 <col:3> 'void ()' Function 0x561b2c175fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b2c1d5518 <line:776:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561b2c1d54d8 <col:3> 'int' lvalue Var 0x561b2c1d04e0 'z' 'int'
|   | `-IntegerLiteral 0x561b2c1d54f8 <col:7> 'int' 2
|   |-CallExpr 0x561b2c1d5570 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d5558 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d5538 <col:3> 'void ()' Function 0x561b2c176060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b2c1d55c8 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d55b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d5590 <col:3> 'void ()' Function 0x561b2c175fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b2c1d5640 <line:779:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561b2c1d55e8 <col:3> 'int' lvalue Var 0x561b2c1cf680 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x561b2c1d5628 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b2c1d5608 <col:25> 'int' lvalue Var 0x561b2c1d04e0 'z' 'int'
|   |-CallExpr 0x561b2c1d5698 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d5680 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d5660 <col:3> 'void ()' Function 0x561b2c176060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b2c1d56f0 <line:781:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d56d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d56b8 <col:3> 'void ()' Function 0x561b2c175fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b2c1d5768 <line:782:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561b2c1d5710 <col:3> 'int' lvalue Var 0x561b2c1cf7a0 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x561b2c1d5750 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b2c1d5730 <col:25> 'int' lvalue Var 0x561b2c1cf8c0 'a' 'int'
|   |-CallExpr 0x561b2c1d57c0 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d57a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d5788 <col:3> 'void ()' Function 0x561b2c176060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b2c1d5818 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d5800 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d57e0 <col:3> 'void ()' Function 0x561b2c175fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b2c1d5b00 <line:785:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561b2c1d5838 <col:3> 'int' lvalue Var 0x561b2c1cfc20 'y' 'int'
|   | `-ConditionalOperator 0x561b2c1d5ad0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561b2c1d58f8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561b2c1d58b0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561b2c1d5898 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561b2c1d5858 <col:7> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561b2c1d58e0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561b2c1d58c8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561b2c1d5878 <col:25> '_Bool' lvalue Var 0x561b2c1cff18 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x561b2c1d5ab8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561b2c1d5918 <col:42> 'int' lvalue Var 0x561b2c1d0270 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x561b2c1d5a98 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561b2c1d5a68 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561b2c1d59d8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561b2c1d5990 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561b2c1d5978 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561b2c1d5938 <col:55> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561b2c1d59c0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561b2c1d59a8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561b2c1d5958 <col:73> '_Bool' lvalue Var 0x561b2c1d00f8 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x561b2c1d5a38 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561b2c1d59f8 <col:90> 'int' lvalue Var 0x561b2c1d0368 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561b2c1d5a50 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b2c1d5a18 <col:102> 'int' lvalue Var 0x561b2c1cfc20 'y' 'int'
|   |-BinaryOperator 0x561b2c1d5d28 <line:786:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561b2c1d5b20 <col:3> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561b2c1d5d10 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b2c1d5ce0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561b2c1d5c00 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561b2c1d5bb8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561b2c1d5ba0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561b2c1d5b60 <col:20> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561b2c1d5be8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561b2c1d5bd0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561b2c1d5b80 <col:38> '_Bool' lvalue Var 0x561b2c1cff18 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561b2c1d5c98 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b2c1d5c50 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b2c1d5c20 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561b2c1d5cc8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b2c1d5cb0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b2c1d5c78 <col:66> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561b2c1d6010 <line:787:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561b2c1d5d48 <col:3> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561b2c1d5ff8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b2c1d5fc8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561b2c1d5ee8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561b2c1d5e08 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561b2c1d5dc0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561b2c1d5da8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561b2c1d5d68 <col:20> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561b2c1d5df0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561b2c1d5dd8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561b2c1d5d88 <col:38> '_Bool' lvalue Var 0x561b2c1cff18 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x561b2c1d5ec8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561b2c1d5e80 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561b2c1d5e68 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561b2c1d5e28 <col:56> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561b2c1d5eb0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561b2c1d5e98 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561b2c1d5e48 <col:74> '_Bool' lvalue Var 0x561b2c1d00f8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561b2c1d5f80 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b2c1d5f38 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b2c1d5f08 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561b2c1d5fb0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b2c1d5f98 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b2c1d5f60 <col:102> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561b2c1d6218 <line:788:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561b2c1d6030 <col:3> '_Bool' lvalue Var 0x561b2c1cff18 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561b2c1d6200 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b2c1d61d0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561b2c1d60f0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561b2c1d60a8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561b2c1d6090 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561b2c1d6050 <col:20> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561b2c1d60d8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561b2c1d60c0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561b2c1d6070 <col:38> '_Bool' lvalue Var 0x561b2c1cff18 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561b2c1d6188 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b2c1d6140 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b2c1d6110 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561b2c1d61b8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b2c1d61a0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b2c1d6168 <col:66> '_Bool' lvalue Var 0x561b2c1cff18 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x561b2c1d6500 <line:789:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561b2c1d6238 <col:3> '_Bool' lvalue Var 0x561b2c1d00f8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561b2c1d64e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b2c1d64b8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561b2c1d63d8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561b2c1d62f8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561b2c1d62b0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561b2c1d6298 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561b2c1d6258 <col:20> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561b2c1d62e0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561b2c1d62c8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561b2c1d6278 <col:38> '_Bool' lvalue Var 0x561b2c1cff18 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x561b2c1d63b8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561b2c1d6370 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561b2c1d6358 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561b2c1d6318 <col:56> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561b2c1d63a0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561b2c1d6388 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561b2c1d6338 <col:74> '_Bool' lvalue Var 0x561b2c1d00f8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561b2c1d6470 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b2c1d6428 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b2c1d63f8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561b2c1d64a0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b2c1d6488 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b2c1d6450 <col:102> '_Bool' lvalue Var 0x561b2c1d00f8 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x561b2c1d6558 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d6540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d6520 <col:3> 'void ()' Function 0x561b2c176060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b2c1d65b0 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d6598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d6578 <col:3> 'void ()' Function 0x561b2c175fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b2c1d6668 <line:792:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561b2c1d65d0 <col:3> 'int' lvalue Var 0x561b2c1cf320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561b2c1d6648 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561b2c1d6630 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561b2c1d65f0 <col:22> 'int' lvalue Var 0x561b2c1cf320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561b2c1d6610 <col:41> 'int' 1
|   |-CallExpr 0x561b2c1d66c0 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b2c1d66a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b2c1d6688 <col:3> 'void ()' Function 0x561b2c176060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561b2c1d6738 <line:794:3, col:36>
|     `-CallExpr 0x561b2c1d6718 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561b2c1d6700 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561b2c1d66e0 <col:10> 'void *(void)' Function 0x561b2c175ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561b2c1d6818 prev 0x561b2c1cf068 <line:796:1, line:798:1> line:796:6 fence 'void ()'
| `-CompoundStmt 0x561b2c1d68b8 <line:797:1, line:798:1>
|-FunctionDecl 0x561b2c1d68e8 prev 0x561b2c1cf128 <line:799:1, line:801:1> line:799:6 isync 'void ()'
| `-CompoundStmt 0x561b2c1d6988 <line:800:1, line:801:1>
|-FunctionDecl 0x561b2c1d69b8 prev 0x561b2c1cf1e8 <line:802:1, line:804:1> line:802:6 lwfence 'void ()'
| `-CompoundStmt 0x561b2c1d6a58 <line:803:1, line:804:1>
`-FunctionDecl 0x561b2c1d6b70 <line:805:1, line:829:1> line:805:5 main 'int ()'
  `-CompoundStmt 0x561b2c1d88e0 <line:806:1, line:829:1>
    |-DeclStmt 0x561b2c1d6c88 <line:807:3, col:17>
    | `-VarDecl 0x561b2c1d6c20 <col:3, col:13> col:13 used t650 'pthread_t':'unsigned long'
    |-CallExpr 0x561b2c1d6e98 <line:808:3, col:53> 'int'
    | |-ImplicitCastExpr 0x561b2c1d6e80 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561b2c1d6ca0 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561b2c1b65b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561b2c1d6ce0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561b2c1d6cc0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561b2c1d6c20 't650' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561b2c1d6ed8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561b2c1d6d58 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x561b2c1d6d30 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561b2c1d6cf8 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x561b2c1d6ef0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561b2c1d6d78 <col:38> 'void *(void *)' Function 0x561b2c1d0708 'P0' 'void *(void *)'
    | `-ParenExpr 0x561b2c1d6df8 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x561b2c1d6dd0 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561b2c1d6d98 <col:51> 'int' 0
    |-DeclStmt 0x561b2c1d6f80 <line:809:3, col:17>
    | `-VarDecl 0x561b2c1d6f18 <col:3, col:13> col:13 used t651 'pthread_t':'unsigned long'
    |-CallExpr 0x561b2c1d7128 <line:810:3, col:53> 'int'
    | |-ImplicitCastExpr 0x561b2c1d7110 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561b2c1d6f98 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561b2c1b65b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561b2c1d6fd8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561b2c1d6fb8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561b2c1d6f18 't651' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561b2c1d7168 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561b2c1d7050 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x561b2c1d7028 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561b2c1d6ff0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x561b2c1d7180 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561b2c1d7070 <col:38> 'void *(void *)' Function 0x561b2c1d3a70 'P1' 'void *(void *)'
    | `-ParenExpr 0x561b2c1d70f0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x561b2c1d70c8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561b2c1d7090 <col:51> 'int' 0
    |-DeclStmt 0x561b2c1d7210 <line:811:3, col:17>
    | `-VarDecl 0x561b2c1d71a8 <col:3, col:13> col:13 used t652 'pthread_t':'unsigned long'
    |-CallExpr 0x561b2c1d73b8 <line:812:3, col:53> 'int'
    | |-ImplicitCastExpr 0x561b2c1d73a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561b2c1d7228 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561b2c1b65b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561b2c1d7268 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561b2c1d7248 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561b2c1d71a8 't652' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561b2c1d73f8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561b2c1d72e0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x561b2c1d72b8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561b2c1d7280 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x561b2c1d7410 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561b2c1d7300 <col:38> 'void *(void *)' Function 0x561b2c1d53d8 'P2' 'void *(void *)'
    | `-ParenExpr 0x561b2c1d7380 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x561b2c1d7358 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561b2c1d7320 <col:51> 'int' 0
    |-CallExpr 0x561b2c1d7460 <line:813:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561b2c1d7448 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561b2c1d7428 <col:3> 'void ()' Function 0x561b2c175fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561b2c1d7530 <line:814:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x561b2c1d7480 <col:3> '_Bool' lvalue Var 0x561b2c1cf958 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x561b2c1d7518 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x561b2c1d74f8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x561b2c1d74e0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x561b2c1d74a0 <col:21> 'int' lvalue Var 0x561b2c1cf320 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x561b2c1d74c0 <col:41> 'int' 3
    |-CallExpr 0x561b2c1d7588 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561b2c1d7570 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561b2c1d7550 <col:3> 'void ()' Function 0x561b2c176060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561b2c1d7600 <line:816:3, col:36> 'void'
    | |-ImplicitCastExpr 0x561b2c1d75e8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561b2c1d75a8 <col:3> 'void (int)' Function 0x561b2c175940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x561b2c1d7640 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x561b2c1d7628 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x561b2c1d75c8 <col:21> '_Bool' lvalue Var 0x561b2c1cf958 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x561b2c1d7690 <line:817:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561b2c1d7678 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561b2c1d7658 <col:3> 'void ()' Function 0x561b2c175fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561b2c1d7978 <line:818:3, col:103> 'int' '='
    | |-DeclRefExpr 0x561b2c1d76b0 <col:3> 'int' lvalue Var 0x561b2c1cfc20 'y' 'int'
    | `-ConditionalOperator 0x561b2c1d7948 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x561b2c1d7770 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x561b2c1d7728 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x561b2c1d7710 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x561b2c1d76d0 <col:7> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x561b2c1d7758 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x561b2c1d7740 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x561b2c1d76f0 <col:25> '_Bool' lvalue Var 0x561b2c1cfdb0 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x561b2c1d7930 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x561b2c1d7790 <col:42> 'int' lvalue Var 0x561b2c1d0270 'y$w_buff0' 'int'
    |   `-ParenExpr 0x561b2c1d7910 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x561b2c1d78e0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x561b2c1d7850 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x561b2c1d7808 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x561b2c1d77f0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x561b2c1d77b0 <col:55> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x561b2c1d7838 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x561b2c1d7820 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x561b2c1d77d0 <col:73> '_Bool' lvalue Var 0x561b2c1cff90 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x561b2c1d78b0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x561b2c1d7870 <col:90> 'int' lvalue Var 0x561b2c1d0368 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x561b2c1d78c8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x561b2c1d7890 <col:102> 'int' lvalue Var 0x561b2c1cfc20 'y' 'int'
    |-BinaryOperator 0x561b2c1d7b98 <line:819:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x561b2c1d7998 <col:3> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x561b2c1d7b80 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561b2c1d7b38 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x561b2c1d7a58 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x561b2c1d7a10 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561b2c1d79f8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x561b2c1d79b8 <col:20> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x561b2c1d7a40 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561b2c1d7a28 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561b2c1d79d8 <col:38> '_Bool' lvalue Var 0x561b2c1cfdb0 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561b2c1d7af0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561b2c1d7aa8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561b2c1d7a78 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x561b2c1d7b20 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561b2c1d7b08 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561b2c1d7ad0 <col:66> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x561b2c1d7e80 <line:820:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x561b2c1d7bb8 <col:3> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x561b2c1d7e68 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561b2c1d7e38 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x561b2c1d7d58 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x561b2c1d7c78 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x561b2c1d7c30 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x561b2c1d7c18 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x561b2c1d7bd8 <col:20> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x561b2c1d7c60 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x561b2c1d7c48 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x561b2c1d7bf8 <col:38> '_Bool' lvalue Var 0x561b2c1cfdb0 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x561b2c1d7d38 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x561b2c1d7cf0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x561b2c1d7cd8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x561b2c1d7c98 <col:56> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x561b2c1d7d20 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x561b2c1d7d08 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x561b2c1d7cb8 <col:74> '_Bool' lvalue Var 0x561b2c1cff90 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561b2c1d7df0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561b2c1d7da8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561b2c1d7d78 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x561b2c1d7e20 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561b2c1d7e08 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561b2c1d7dd0 <col:102> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x561b2c1d8088 <line:821:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x561b2c1d7ea0 <col:3> '_Bool' lvalue Var 0x561b2c1cfdb0 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561b2c1d8070 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561b2c1d8040 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x561b2c1d7f60 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x561b2c1d7f18 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561b2c1d7f00 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x561b2c1d7ec0 <col:20> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x561b2c1d7f48 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561b2c1d7f30 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561b2c1d7ee0 <col:38> '_Bool' lvalue Var 0x561b2c1cfdb0 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561b2c1d7ff8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561b2c1d7fb0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561b2c1d7f80 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x561b2c1d8028 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561b2c1d8010 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561b2c1d7fd8 <col:66> '_Bool' lvalue Var 0x561b2c1cfdb0 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x561b2c1d8370 <line:822:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x561b2c1d80a8 <col:3> '_Bool' lvalue Var 0x561b2c1cff90 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561b2c1d8358 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561b2c1d8328 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x561b2c1d8248 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x561b2c1d8168 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x561b2c1d8120 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x561b2c1d8108 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x561b2c1d80c8 <col:20> '_Bool' lvalue Var 0x561b2c1d02e8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x561b2c1d8150 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x561b2c1d8138 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x561b2c1d80e8 <col:38> '_Bool' lvalue Var 0x561b2c1cfdb0 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x561b2c1d8228 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x561b2c1d81e0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x561b2c1d81c8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x561b2c1d8188 <col:56> '_Bool' lvalue Var 0x561b2c1d03e0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x561b2c1d8210 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x561b2c1d81f8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x561b2c1d81a8 <col:74> '_Bool' lvalue Var 0x561b2c1cff90 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561b2c1d82e0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561b2c1d8298 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561b2c1d8268 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x561b2c1d8310 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561b2c1d82f8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561b2c1d82c0 <col:102> '_Bool' lvalue Var 0x561b2c1cff90 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x561b2c1d83c8 <line:823:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561b2c1d83b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561b2c1d8390 <col:3> 'void ()' Function 0x561b2c176060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561b2c1d8420 <line:824:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561b2c1d8408 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561b2c1d83e8 <col:3> 'void ()' Function 0x561b2c175fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561b2c1d8788 <line:825:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x561b2c1d8440 <col:3> '_Bool' lvalue Var 0x561b2c1cf9d0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x561b2c1d8770 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x561b2c1d8758 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x561b2c1d8738 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x561b2c1d8718 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x561b2c1d8680 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x561b2c1d85e8 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x561b2c1d8550 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x561b2c1d84b8 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x561b2c1d84a0 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x561b2c1d8460 <col:23> 'int' lvalue Var 0x561b2c1d04e0 'z' 'int'
    |         | | | | `-IntegerLiteral 0x561b2c1d8480 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x561b2c1d8530 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x561b2c1d8518 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x561b2c1d84d8 <col:33> 'int' lvalue Var 0x561b2c1cf440 '__unbuffered_p0_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x561b2c1d84f8 <col:56> 'int' 1
    |         | | `-BinaryOperator 0x561b2c1d85c8 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x561b2c1d85b0 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x561b2c1d8570 <col:61> 'int' lvalue Var 0x561b2c1cf560 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x561b2c1d8590 <col:84> 'int' 0
    |         | `-BinaryOperator 0x561b2c1d8660 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x561b2c1d8648 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x561b2c1d8608 <col:89> 'int' lvalue Var 0x561b2c1cf680 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x561b2c1d8628 <col:112> 'int' 2
    |         `-BinaryOperator 0x561b2c1d86f8 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x561b2c1d86e0 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x561b2c1d86a0 <col:117> 'int' lvalue Var 0x561b2c1cf7a0 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x561b2c1d86c0 <col:140> 'int' 0
    |-CallExpr 0x561b2c1d87e0 <line:826:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561b2c1d87c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561b2c1d87a8 <col:3> 'void ()' Function 0x561b2c176060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561b2c1d8858 <line:827:3, col:36> 'void'
    | |-ImplicitCastExpr 0x561b2c1d8840 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561b2c1d8800 <col:3> 'void (int)' Function 0x561b2c175d28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x561b2c1d8898 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x561b2c1d8880 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x561b2c1d8820 <col:21> '_Bool' lvalue Var 0x561b2c1cf9d0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x561b2c1d88d0 <line:828:3, col:10>
      `-IntegerLiteral 0x561b2c1d88b0 <col:10> 'int' 0
