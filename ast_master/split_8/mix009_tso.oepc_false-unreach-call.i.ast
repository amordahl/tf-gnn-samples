TranslationUnitDecl 0x564218089e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56421808a6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56421808a3b0 '__int128'
|-TypedefDecl 0x56421808a748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56421808a3d0 'unsigned __int128'
|-TypedefDecl 0x56421808aa50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56421808a820 'struct __NSConstantString_tag'
|   `-Record 0x56421808a7a0 '__NSConstantString_tag'
|-TypedefDecl 0x56421808aaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56421808aab0 'char *'
|   `-BuiltinType 0x564218089eb0 'char'
|-TypedefDecl 0x5642180c9650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56421808ad90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56421808abd0 'struct __va_list_tag'
|     `-Record 0x56421808ab50 '__va_list_tag'
|-FunctionDecl 0x5642180c9790 <./split_8/mix009_tso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5642180c96c0 <col:31> col:34 'int'
|-FunctionDecl 0x5642180c9958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5642180c9a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5642180c9bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5642180c9b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5642180c9df8 <col:40, col:99>
|   |-IfStmt 0x5642180c9dc8 <col:42, col:88>
|   | |-UnaryOperator 0x5642180c9ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5642180c9c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5642180c9c70 <col:47> 'int' lvalue ParmVar 0x5642180c9b38 'expression' 'int'
|   | `-CompoundStmt 0x5642180c9db0 <col:59, col:88>
|   |   `-LabelStmt 0x5642180c9d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5642180c9d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5642180c9d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5642180c9cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x5642180c9a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5642180c9de0 <col:89>
|   `-ReturnStmt 0x5642180c9de8 <col:91>
|-FunctionDecl 0x5642180c9e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5642180c9f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5642180ca280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5642180c9fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5642180ca038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5642180ca0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5642180ca138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5642180ca340 <line:10:22>
|-FunctionDecl 0x5642180f0390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5642180ca3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5642180ca430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5642180ca4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5642180ca530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5642180f0450 <line:13:22>
|-FunctionDecl 0x5642180f0700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5642180f04c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5642180f0540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5642180f05c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5642180f07b8 <line:15:22>
|-TypedefDecl 0x5642180f0828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x564218089f70 'unsigned char'
|-TypedefDecl 0x5642180f0898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x564218089f90 'unsigned short'
|-TypedefDecl 0x5642180f0908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x564218089fb0 'unsigned int'
|-TypedefDecl 0x5642180f0978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x564218089fd0 'unsigned long'
|-TypedefDecl 0x5642180f09e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x564218089ed0 'signed char'
|-TypedefDecl 0x5642180f0a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x564218089f70 'unsigned char'
|-TypedefDecl 0x5642180f0ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x564218089ef0 'short'
|-TypedefDecl 0x5642180f0b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x564218089f90 'unsigned short'
|-TypedefDecl 0x5642180f0ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x564218089f10 'int'
|-TypedefDecl 0x5642180f0c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x564218089fb0 'unsigned int'
|-TypedefDecl 0x5642180f0c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x564218089f30 'long'
|-TypedefDecl 0x5642180f0cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x564218089fd0 'unsigned long'
|-TypedefDecl 0x5642180f0d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x564218089f30 'long'
|-TypedefDecl 0x5642180f0dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x564218089fd0 'unsigned long'
|-TypedefDecl 0x5642180f0e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x564218089fd0 'unsigned long'
|-TypedefDecl 0x5642180f0eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x564218089fb0 'unsigned int'
|-TypedefDecl 0x5642180f0f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x564218089fb0 'unsigned int'
|-TypedefDecl 0x5642180f0f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x564218089fd0 'unsigned long'
|-TypedefDecl 0x5642180f1008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x564218089fd0 'unsigned long'
|-TypedefDecl 0x5642180f1078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x564218089fb0 'unsigned int'
|-TypedefDecl 0x5642180f10e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x564218089fd0 'unsigned long'
|-TypedefDecl 0x5642180f1158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x564218089f30 'long'
|-TypedefDecl 0x5642180f11c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x564218089f30 'long'
|-TypedefDecl 0x5642180f1238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x564218089f10 'int'
|-RecordDecl 0x5642180f1290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5642180f1408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5642180f14c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5642180f1460 'struct __fsid_t' sugar
|   `-RecordType 0x5642180f1310 '__fsid_t'
|     `-Record 0x5642180f1290 ''
|-TypedefDecl 0x5642180f1548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x564218089f30 'long'
|-TypedefDecl 0x5642180f15b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x564218089fd0 'unsigned long'
|-TypedefDecl 0x5642180f1628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x564218089fd0 'unsigned long'
|-TypedefDecl 0x5642180f1698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x564218089fb0 'unsigned int'
|-TypedefDecl 0x5642180f1708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x564218089f30 'long'
|-TypedefDecl 0x5642180f1778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x564218089fb0 'unsigned int'
|-TypedefDecl 0x5642180f17e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x564218089f30 'long'
|-TypedefDecl 0x5642180f1858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x564218089f10 'int'
|-TypedefDecl 0x5642180f18c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x564218089f10 'int'
|-TypedefDecl 0x5642180f1938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x564218089f10 'int'
|-TypedefDecl 0x5642180f19a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x56421808a630 'void *'
|   `-BuiltinType 0x564218089e70 'void'
|-TypedefDecl 0x5642180f1a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x564218089f30 'long'
|-TypedefDecl 0x5642180f1a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x564218089f30 'long'
|-TypedefDecl 0x5642180f1af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x564218089f30 'long'
|-TypedefDecl 0x5642180f1b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x564218089fd0 'unsigned long'
|-TypedefDecl 0x5642180f1bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x564218089fd0 'unsigned long'
|-TypedefDecl 0x5642180f1c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x564218089fd0 'unsigned long'
|-TypedefDecl 0x5642180f1cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x564218089fd0 'unsigned long'
|-TypedefDecl 0x5642180f1d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x564218089f30 'long'
|-TypedefDecl 0x5642180f1d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x564218089f30 'long'
|-TypedefDecl 0x5642180f1e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x564218089f30 'long'
|-TypedefDecl 0x5642180f1e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x564218089fd0 'unsigned long'
|-TypedefDecl 0x5642180f1f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5642180f1ed0 '__off64_t' sugar
|   |-Typedef 0x5642180f11c8 '__off64_t'
|   `-BuiltinType 0x564218089f30 'long'
|-TypedefDecl 0x5642180f2000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5642180f1fc0 '__quad_t *'
|   `-TypedefType 0x5642180f1f60 '__quad_t' sugar
|     |-Typedef 0x5642180f0d68 '__quad_t'
|     `-BuiltinType 0x564218089f30 'long'
|-TypedefDecl 0x5642180f2070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x56421808aab0 'char *'
|   `-BuiltinType 0x564218089eb0 'char'
|-TypedefDecl 0x5642180f20e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x564218089f30 'long'
|-TypedefDecl 0x5642180f2150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x564218089fb0 'unsigned int'
|-FunctionDecl 0x5642180f2298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5642180f21c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5642180f35e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5642180f35d8 <line:72:3, col:34>
|     `-CallExpr 0x5642180f3598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5642180f3580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5642180f3510 <col:10> '<builtin fn type>' Function 0x5642180f3380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5642180f35c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5642180f3530 <col:29> 'unsigned int' lvalue ParmVar 0x5642180f21c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5642180f3380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5642180f3420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5642180f3490 <col:10> Implicit
| `-ConstAttr 0x5642180f34e8 <col:10> Implicit
|-FunctionDecl 0x5642180f3740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5642180f3638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5642180f3a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5642180f3a48 <line:77:3, col:34>
|     `-CallExpr 0x5642180f3a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5642180f39f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5642180f3978 <col:10> '<builtin fn type>' Function 0x5642180f37e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5642180f3a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5642180f3998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5642180f3638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5642180f37e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5642180f3888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5642180f38f8 <col:10> Implicit
| `-ConstAttr 0x5642180f3950 <col:10> Implicit
|-TypedefDecl 0x5642180f3a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x564218089fd0 'unsigned long'
|-TypedefDecl 0x5642180f3b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5642180f3ae0 '__time_t' sugar
|   |-Typedef 0x5642180f1708 '__time_t'
|   `-BuiltinType 0x564218089f30 'long'
|-RecordDecl 0x5642180f3b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5642180f3c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5642180f3cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5642180f3d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5642180f3d10 '__pid_t' sugar
|   |-Typedef 0x5642180f1238 '__pid_t'
|   `-BuiltinType 0x564218089f10 'int'
|-RecordDecl 0x5642180f3da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5642180f3e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5642180f3eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5642180f3f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5642180f3fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x564218089fd0 'unsigned long'
|-RecordDecl 0x5642180f4030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5642180f42c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5642180f53a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5642180f4310 'struct cpu_set_t' sugar
|   `-RecordType 0x5642180f40b0 'cpu_set_t'
|     `-Record 0x5642180f4030 ''
|-FunctionDecl 0x5642180f5678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5642180f5448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5642180f5550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5642180f5728 <line:107:19>
|-FunctionDecl 0x5642180f5900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5642180f5790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5642180f59a8 <col:69>
|-FunctionDecl 0x5642180f5b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5642180f5a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5642180f5bc8 <col:64>
|-FunctionDecl 0x5642180f5e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5642180f5c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5642180f5d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5642180f5f38 <line:113:22>
|-FunctionDecl 0x5642180f61b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5642180f5fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5642180f6098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5642180f6268 <col:88>
|-FunctionDecl 0x5642180f6588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5642180f62d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5642180f63b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5642180f6440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5642180f6640 <col:62>
|-FunctionDecl 0x5642180f67b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5642180f66a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5642180f6860 <col:63>
|-FunctionDecl 0x5642180f6988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5642180f6a28 <col:47>
|-FunctionDecl 0x5642180f6b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5642180f6a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5642180f6bd8 <col:69>
|-FunctionDecl 0x5642180f6ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5642180f6c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5642180f6d88 <col:69>
|-FunctionDecl 0x5642180f7048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5642180f6df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5642180f6f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5642180f70f8 <col:88>
|-TypedefDecl 0x5642180f7188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5642180f7150 '__clock_t' sugar
|   |-Typedef 0x5642180f1548 '__clock_t'
|   `-BuiltinType 0x564218089f30 'long'
|-TypedefDecl 0x5642180f7218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5642180f71e0 '__clockid_t' sugar
|   |-Typedef 0x5642180f1938 '__clockid_t'
|   `-BuiltinType 0x564218089f10 'int'
|-TypedefDecl 0x5642180f72a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5642180f7270 '__timer_t' sugar
|   |-Typedef 0x5642180f19a8 '__timer_t'
|   `-PointerType 0x56421808a630 'void *'
|     `-BuiltinType 0x564218089e70 'void'
|-RecordDecl 0x5642180f7300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5642180f73d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5642180f7440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5642180f74a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5642180f7510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5642180f7578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5642180f75e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5642180f7648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5642180f76b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5642180f7718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5642180f7780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5642180f77e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5642180f7838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5642180f7908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5642180f7978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5642180f7a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5642180f7bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5642180f7c90 <col:45>
|-FunctionDecl 0x5642180f7e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5642180f7d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5642180f7f18 <col:54>
|-FunctionDecl 0x5642180f8118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5642180f7f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5642180f7ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5642180f81c8 <line:157:22>
| `-ConstAttr 0x5642180f8220 <col:63>
|-FunctionDecl 0x5642180f9050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5642180f8318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5642180f90f8 <col:56>
|-FunctionDecl 0x5642180f94a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5642180f9168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5642180f91e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5642180f9260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5642180f9358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5642180f9560 <col:54>
|-RecordDecl 0x5642180f95b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5642180f9668 parent 0x564218089e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5642180f98c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5642180f9968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5642180f99d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5642180f9a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5642180f9b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5642180f9c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5642180f9bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x5642180f9b80 'struct __locale_struct' sugar
|     `-RecordType 0x5642180f9640 'struct __locale_struct'
|       `-Record 0x5642180f95b8 '__locale_struct'
|-TypedefDecl 0x5642180f9cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5642180f9cc0 '__locale_t' sugar
|   |-Typedef 0x5642180f9c48 '__locale_t'
|   `-PointerType 0x5642180f9bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x5642180f9b80 'struct __locale_struct' sugar
|       `-RecordType 0x5642180f9640 'struct __locale_struct'
|         `-Record 0x5642180f95b8 '__locale_struct'
|-FunctionDecl 0x5642180fb110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5642180f9d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5642180f9de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5642180f9e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5642180f9ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5642180f9f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5642180fb1d8 <col:40>
|-FunctionDecl 0x5642180fb3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5642180fb2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5642180fb470 <col:66>
|-FunctionDecl 0x5642180fb580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5642180fb4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5642180fb628 <col:69>
|-FunctionDecl 0x5642180fb858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5642180fb690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5642180fb720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5642180fb908 <col:52>
|-FunctionDecl 0x5642180fbab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5642180fb970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5642180fba00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5642180fbb60 <col:55>
|-FunctionDecl 0x5642180fbcf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5642180fbbe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5642180fbda0 <col:62>
|-FunctionDecl 0x5642180fbf18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5642180fbe08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5642180fbfc0 <col:60>
|-FunctionDecl 0x5642180fc2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5642180fc118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5642180fc198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5642180fc368 <col:44>
|-FunctionDecl 0x5642180fc578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5642180fc3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5642180fc450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5642180fc628 <col:49>
|-VarDecl 0x5642180fc728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5642180fc7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5642180fc828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5642180fc8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5642180fca20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5642180fcac0 <col:42>
|-VarDecl 0x5642180fcb30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5642180fcbb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5642180fcd38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5642180fcc28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5642180fcde0 <col:57>
|-FunctionDecl 0x5642180fcef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5642180fce60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5642180fcf98 <col:56>
|-FunctionDecl 0x5642180fd0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5642180fd018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5642180fd178 <col:59>
|-FunctionDecl 0x5642180fd280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5642180fd1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5642180fd328 <col:48>
| `-ConstAttr 0x5642180fd380 <col:89>
|-FunctionDecl 0x5642180fd5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5642180fd438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5642180fd4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5642180fd848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5642180fd6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5642180fd768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5642180fd8f8 <col:88>
|-FunctionDecl 0x5642180fda90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5642180fd960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5642180fd9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5642180fdb40 <col:88>
|-FunctionDecl 0x5642180fdd58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5642180fdba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5642180fdc38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5642180fde08 <line:208:22>
|-FunctionDecl 0x5642180fe178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5642180fde70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5642180fdef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5642180fdf80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5642180fe010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5642180fe478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5642180fe278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5642180fe350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5642180fe528 <col:85>
|-FunctionDecl 0x5642180fe918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5642180fe590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5642180fe6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5642180fe7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5642180fe9d0 <col:52>
|-FunctionDecl 0x5642180feb48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5642180fea38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5642180febf0 <col:61>
|-FunctionDecl 0x5642180ff0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5642180fec58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5642180fecd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5642180fee08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5642180feef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5642180ff1b0 <col:62>
|-FunctionDecl 0x5642180ff3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5642180ff218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5642180ff2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5642180ff478 <line:221:22>
|-FunctionDecl 0x5642180ff578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5642180ff4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5642180ff620 <col:65>
|-TypedefDecl 0x5642180ff690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x564218089fd0 'unsigned long'
|-RecordDecl 0x5642180ff6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5642180ff830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5642180ff898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5642180ff948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5642180ff8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x5642180ff770 'union pthread_attr_t'
|     `-Record 0x5642180ff6e8 'pthread_attr_t'
|-RecordDecl 0x5642180ff9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5642180ffb18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5642180ffb90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5642180ffc40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5642180ffbe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5642180ffa20 'struct __pthread_internal_list'
|     `-Record 0x5642180ff9a0 '__pthread_internal_list'
|-RecordDecl 0x5642180ffcb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5642180ffd58 parent 0x564218089e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5642180ffe30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5642180ffe98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5642180fff00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5642180fff68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5642180fffd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x564218100038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x564218104110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5642181041c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5642181042b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x564218104318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5642181044a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x564218104440 'union pthread_mutex_t' sugar
|   `-RecordType 0x5642180ffd30 'pthread_mutex_t'
|     `-Record 0x5642180ffcb0 ''
|-RecordDecl 0x564218104510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x564218104650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5642181046b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564218104770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x564218104710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x564218104590 'pthread_mutexattr_t'
|     `-Record 0x564218104510 ''
|-RecordDecl 0x5642181047e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x564218104888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x564218104950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5642181049b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x564218104a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x564218104a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x564218104af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x564218104b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x564218104bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x564218104c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x564218104ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_8/mix009_tso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_8/mix009_tso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x564218104dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x564218104e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x564218104f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x564218104f10 'union pthread_cond_t' sugar
|   `-RecordType 0x564218104860 'pthread_cond_t'
|     `-Record 0x5642181047e0 ''
|-RecordDecl 0x564218104fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x564218106130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564218106198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564218106250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5642181061f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x564218105060 'pthread_condattr_t'
|     `-Record 0x564218104fe0 ''
|-TypedefDecl 0x5642181062d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x564218089fb0 'unsigned int'
|-TypedefDecl 0x564218106348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x564218089f10 'int'
|-RecordDecl 0x5642181063a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x564218106448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x564218106510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564218106578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5642181065e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x564218106648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5642181066b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x564218106718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x564218106780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5642181067e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x564218106850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5642181068b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x564218106920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5642181069d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_8/mix009_tso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_8/mix009_tso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x564218106a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564218106ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564218106c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x564218106bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x564218106420 'pthread_rwlock_t'
|     `-Record 0x5642181063a0 ''
|-RecordDecl 0x564218106ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x564218106de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x564218106e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564218106f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x564218106ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x564218106d20 'pthread_rwlockattr_t'
|     `-Record 0x564218106ca0 ''
|-TypedefDecl 0x564218106f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x564218089f14 'volatile int' volatile
|   `-BuiltinType 0x564218089f10 'int'
|-RecordDecl 0x564218106fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x564218108140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5642181081a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564218108260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x564218108200 'union pthread_barrier_t' sugar
|   `-RecordType 0x564218107060 'pthread_barrier_t'
|     `-Record 0x564218106fe0 ''
|-RecordDecl 0x5642181082d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5642181083d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564218108438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5642181084f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x564218108490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x564218108350 'pthread_barrierattr_t'
|     `-Record 0x5642181082d0 ''
|-TypedefDecl 0x564218108608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5642181085a0 'long [8]' 8 
|   `-BuiltinType 0x564218089f30 'long'
|-EnumDecl 0x564218108660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x564218108728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x564218108778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5642181087c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x564218108898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5642181088e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x564218108938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x564218108988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x564218108a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5642181089f8 <col:26> 'int'
| |   `-DeclRefExpr 0x5642181089d8 <col:26> 'int' EnumConstant 0x564218108898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x564218108a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x564218108a80 <col:29> 'int'
| |   `-DeclRefExpr 0x564218108a60 <col:29> 'int' EnumConstant 0x5642181088e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x564218108b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x564218108b08 <col:30> 'int'
| |   `-DeclRefExpr 0x564218108ae8 <col:30> 'int' EnumConstant 0x564218108938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x564218108ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x564218108b90 <col:27> 'int'
|     `-DeclRefExpr 0x564218108b70 <col:27> 'int' EnumConstant 0x564218108a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x564218108bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x564218108cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x564218108d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x564218108d38 <col:30> 'int'
| |   `-DeclRefExpr 0x564218108d18 <col:30> 'int' EnumConstant 0x564218108cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x564218108da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x564218108e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x564218108e10 <col:29> 'int'
|     `-DeclRefExpr 0x564218108df0 <col:29> 'int' EnumConstant 0x564218108da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x564218108e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x564218108f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x564218108f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x564218108fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x564218109038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x564218109150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5642181091a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5642181091f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x564218109278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x564218109260 <col:31> 'int'
|     `-DeclRefExpr 0x564218109240 <col:31> 'int' EnumConstant 0x564218109150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5642181092c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x564218109398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5642181093e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x564218109438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x564218109508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x564218109558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5642181095a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x564218109678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5642181096c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x564218109718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x564218109958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5642181099c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x564218109a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x564218109b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x564218109b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x564218109c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x564218109cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x564218109d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x564218109dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x564218109e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x56421810a488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x564218109f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x56421810a030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56421810a270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x56421810a2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x56421810a548 <col:47>
| |-NonNullAttr 0x56421810a5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x56421810a5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x56421810a700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x56421810a630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x56421810a958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x56421810a7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x56421810a838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x56421810ab28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x56421810aa18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x56421810abd0 <col:60>
|-FunctionDecl 0x56421810ad20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x56421810adc0 <col:54>
| `-ConstAttr 0x56421810ae18 <col:95>
|-FunctionDecl 0x56421810afe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x56421810ae50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56421810aec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x56421810b098 <line:394:19>
| `-ConstAttr 0x56421810b0f0 <col:60>
|-FunctionDecl 0x56421810cb08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56421810c9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56421810cbb0 <col:71>
| `-NonNullAttr 0x56421810cc08 <col:112, col:126> 1
|-FunctionDecl 0x56421810cd10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56421810cc58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56421810cdb8 <line:397:22>
| `-NonNullAttr 0x56421810ce10 <col:63, col:77> 1
|-FunctionDecl 0x56421810d038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x56421810ce58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56421810ced8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x56421810d0e8 <line:400:22>
| `-NonNullAttr 0x56421810d140 <col:63, col:80> 1 2
|-FunctionDecl 0x56421810d348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56421810d188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56421810d208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x56421810d3f8 <line:403:22>
| `-NonNullAttr 0x56421810d450 <col:63, col:77> 1
|-FunctionDecl 0x56421810d6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x56421810d498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56421810d540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x56421810d758 <line:406:22>
| `-NonNullAttr 0x56421810d7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x56421810e9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56421810d7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56421810d870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56421810ea98 <line:409:22>
| `-NonNullAttr 0x56421810eaf0 <col:63, col:77> 1
|-FunctionDecl 0x56421810ed28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56421810eb38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56421810ebc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56421810edd8 <line:412:22>
| `-NonNullAttr 0x56421810ee30 <col:63, col:80> 1 2
|-FunctionDecl 0x56421810f068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56421810ee78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x56421810ef08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x56421810f118 <col:37>
| `-NonNullAttr 0x56421810f170 <col:78, col:95> 1 2
|-FunctionDecl 0x56421810f358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56421810f1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56421810f238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x56421810f408 <line:418:22>
| `-NonNullAttr 0x56421810f460 <col:63, col:80> 1 2
|-FunctionDecl 0x56421810f5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56421810f4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56421810f528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x56421810f698 <line:420:22>
| `-NonNullAttr 0x56421810f6f0 <col:63, col:77> 1
|-FunctionDecl 0x56421810f898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56421810f738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56421810f7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x56421810f948 <line:423:22>
| `-NonNullAttr 0x56421810f9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56421810fb48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56421810fa08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56421810fa88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x56421810fbf8 <line:426:22>
| `-NonNullAttr 0x56421810fc50 <col:63, col:77> 1
|-FunctionDecl 0x56421810fdf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56421810fc98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56421810fd18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56421810fea8 <line:429:22>
| `-NonNullAttr 0x56421810ff00 <col:63, col:80> 1 2
|-FunctionDecl 0x564218110088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56421810ff48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56421810ffc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x564218110138 <line:431:22>
| `-NonNullAttr 0x564218110190 <col:63, col:77> 1
|-FunctionDecl 0x5642181103b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5642181101d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564218110258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x564218110468 <line:434:22>
| |-NonNullAttr 0x5642181104c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5642181104f8 <col:100> "" ""
|-FunctionDecl 0x564218110708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x564218110548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5642181105c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5642181107b8 <line:437:22>
| |-NonNullAttr 0x564218110810 <col:63, col:77> 1
| `-DeprecatedAttr 0x564218110848 <col:97> "" ""
|-FunctionDecl 0x564218110a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564218110898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564218110910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564218110af8 <line:440:22>
| `-NonNullAttr 0x564218110b50 <col:63, col:80> 1 2
|-FunctionDecl 0x564218110cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564218110b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564218110c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564218110d80 <line:443:22>
| `-NonNullAttr 0x564218110dd8 <col:63, col:77> 1
|-FunctionDecl 0x5642181110c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564218110e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564218110ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x564218110f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564218111180 <line:447:22>
| `-NonNullAttr 0x5642181111d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x564218111488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x564218111230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5642181112b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x564218111328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564218111540 <col:43>
| `-NonNullAttr 0x564218111598 <col:84, col:98> 1
|-FunctionDecl 0x564218111858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5642181115e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564218111668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5642181116f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x564218111910 <line:452:22>
| `-NonNullAttr 0x564218111968 <col:63, col:77> 3
|-FunctionDecl 0x564218111c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5642181119e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564218111a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x564218111af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564218111d30 <line:456:22>
| `-NonNullAttr 0x564218111d88 <col:63, col:80> 2 3
|-FunctionDecl 0x564218111f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x564218111dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564218111e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x564218112028 <line:458:22>
|-FunctionDecl 0x5642181123f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5642181120f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x564218112290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5642181124a8 <col:52, col:69> 1 2
|-FunctionDecl 0x564218112650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x564218112530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5642181125b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x564218112838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x564218112718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x564218112798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5642181129f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5642181128f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x564218112b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x564218112bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x564218112c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x564218112d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x564218112dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x564218112fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_8/mix009_tso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x564218113098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x564218113150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5642181130f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x564218112c50 '__pthread_unwind_buf_t'
| |   `-Record 0x564218112bd0 ''
| `-AlignedAttr 0x5642181131a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x564218113220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x564218113380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5642181133e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x564218113450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5642181134b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5642181136c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5642181135b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564218113808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564218113778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564218113a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5642181138c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x564218113aa8 <line:487:22>
|-RecordDecl 0x564218113b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x564218113e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x564218113c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x564218113cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x564218113ec8 <col:86>
| `-ReturnsTwiceAttr 0x564218113f20 <col:12> Implicit
|-FunctionDecl 0x564218114248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564218113ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x564218114100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5642181142f8 <line:493:22>
| `-NonNullAttr 0x564218114350 <col:63, col:77> 1
|-FunctionDecl 0x5642181144c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564218114398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564218114570 <line:495:22>
| `-NonNullAttr 0x5642181145c8 <col:63, col:77> 1
|-FunctionDecl 0x5642181146d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564218114618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564218114778 <line:497:22>
| `-NonNullAttr 0x5642181147d0 <col:52, col:66> 1
|-FunctionDecl 0x5642181148d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564218114818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564218114978 <line:499:22>
| `-NonNullAttr 0x5642181149d0 <col:52, col:66> 1
|-FunctionDecl 0x564218115c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564218115a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564218115ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564218115cd8 <col:36>
| `-NonNullAttr 0x564218115d30 <col:66, col:83> 1 2
|-FunctionDecl 0x564218115e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564218115d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564218115ed8 <line:504:22>
| `-NonNullAttr 0x564218115f30 <col:52, col:66> 1
|-FunctionDecl 0x5642181161c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564218115fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564218116060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564218116278 <line:508:22>
| `-NonNullAttr 0x5642181162d0 <col:63, col:80> 1 2
|-FunctionDecl 0x564218116598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x564218116318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564218116398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x564218116418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x564218116650 <line:512:22>
| `-NonNullAttr 0x5642181166a8 <col:63, col:80> 1 3
|-FunctionDecl 0x5642181167b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5642181166f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564218116858 <line:514:22>
| `-NonNullAttr 0x5642181168b0 <col:63, col:77> 1
|-FunctionDecl 0x564218116ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564218116960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564218116b80 <line:516:22>
| `-NonNullAttr 0x564218116bd8 <col:63, col:77> 1
|-FunctionDecl 0x564218116ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564218116c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564218116d88 <line:518:22>
| `-NonNullAttr 0x564218116de0 <col:63, col:77> 1
|-FunctionDecl 0x564218117008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564218116e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564218116ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5642181170b8 <line:522:22>
| `-NonNullAttr 0x564218117110 <col:63, col:80> 1 2
|-FunctionDecl 0x564218117318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564218117158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5642181171d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5642181173c8 <line:525:22>
| `-NonNullAttr 0x564218117420 <col:63, col:77> 1
|-FunctionDecl 0x5642181175c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564218117468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5642181174e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x564218117678 <line:528:22>
| `-NonNullAttr 0x5642181176d0 <col:63, col:80> 1 2
|-FunctionDecl 0x564218117858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564218117718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564218117798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x564218117908 <line:530:22>
| `-NonNullAttr 0x564218117960 <col:63, col:77> 1
|-FunctionDecl 0x564218117b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5642181179a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564218117a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x564218117bd0 <line:534:22>
| `-NonNullAttr 0x564218117c28 <col:63, col:80> 1 2
|-FunctionDecl 0x564218117db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564218117c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564218117cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x564218117e68 <line:537:22>
| `-NonNullAttr 0x564218117ec0 <col:63, col:77> 1
|-FunctionDecl 0x564218118068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564218117f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564218117f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564218118118 <line:541:22>
| `-NonNullAttr 0x564218118170 <col:63, col:80> 1 2
|-FunctionDecl 0x5642181182f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5642181181b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564218118238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5642181183a8 <line:544:22>
| `-NonNullAttr 0x564218118400 <col:63, col:77> 1
|-FunctionDecl 0x5642181185e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x564218118448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5642181184c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x564218118698 <line:547:22>
| `-NonNullAttr 0x5642181186f0 <col:63, col:80> 1 2
|-FunctionDecl 0x564218118878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564218118738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5642181187b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x564218118928 <line:550:22>
| `-NonNullAttr 0x564218118980 <col:63, col:77> 1
|-FunctionDecl 0x564218119cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x564218119aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564218119bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x564218119da8 <col:29>
| `-NonNullAttr 0x564218119e00 <col:70, col:84> 1
|-FunctionDecl 0x564218119f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564218119e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56421811a020 <line:555:22>
| `-NonNullAttr 0x56421811a078 <col:63, col:77> 1
|-FunctionDecl 0x56421811a180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56421811a0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56421811a228 <line:557:22>
| `-NonNullAttr 0x56421811a280 <col:52, col:66> 1
|-FunctionDecl 0x56421811a380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56421811a2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56421811a428 <line:559:19>
| `-NonNullAttr 0x56421811a480 <col:49, col:63> 1
|-FunctionDecl 0x56421811a6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56421811a4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56421811a558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56421811a768 <col:39>
| `-NonNullAttr 0x56421811a7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x56421811a8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56421811a808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56421811a968 <line:564:22>
| `-NonNullAttr 0x56421811a9c0 <col:52, col:66> 1
|-FunctionDecl 0x56421811ab28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56421811aa70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56421811abd0 <line:566:22>
| `-NonNullAttr 0x56421811ac28 <col:52, col:66> 1
|-FunctionDecl 0x56421811ade8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56421811ac78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56421811ad08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56421811ae98 <col:39>
| `-NonNullAttr 0x56421811aef0 <col:69, col:86> 1 2
|-FunctionDecl 0x56421811aff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56421811af38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56421811b098 <line:571:22>
| `-NonNullAttr 0x56421811b0f0 <col:52, col:66> 1
|-FunctionDecl 0x56421811b2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56421811b1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56421811b380 <line:573:22>
| `-NonNullAttr 0x56421811b3d8 <col:63, col:77> 1
|-FunctionDecl 0x56421811b4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56421811b428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56421811b588 <line:575:22>
| `-NonNullAttr 0x56421811b5e0 <col:63, col:77> 1
|-FunctionDecl 0x56421811b808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56421811b628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56421811b6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x56421811b8b8 <line:579:22>
| `-NonNullAttr 0x56421811b910 <col:63, col:80> 1 2
|-FunctionDecl 0x56421811bb38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56421811b958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56421811b9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x56421811bbe8 <line:582:22>
| `-NonNullAttr 0x56421811bc40 <col:63, col:77> 1
|-FunctionDecl 0x56421811bde8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56421811bc88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56421811bd08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x56421811be98 <line:586:22>
| `-NonNullAttr 0x56421811bef0 <col:63, col:80> 1 2
|-FunctionDecl 0x56421811c078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56421811bf38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56421811bfb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x56421811c128 <col:36>
| `-NonNullAttr 0x56421811c180 <col:77, col:91> 1
|-FunctionDecl 0x56421811c4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x56421811c260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56421811c370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x56421811c568 <line:591:22>
| `-NonNullAttr 0x56421811c5c0 <col:63, col:77> 1
|-FunctionDecl 0x56421811c738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56421811c608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56421811c7e0 <line:593:22>
| `-NonNullAttr 0x56421811c838 <col:63, col:77> 1
|-FunctionDecl 0x56421811c940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56421811c888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56421811c9e8 <line:595:22>
| `-NonNullAttr 0x56421811ca40 <col:52, col:66> 1
|-FunctionDecl 0x56421811cb58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56421811caa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56421811cc00 <line:597:22>
| `-NonNullAttr 0x56421811cc58 <col:52, col:66> 1
|-FunctionDecl 0x56421811ce88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x56421811cca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56421811cd20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x56421811cf38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x56421811d268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56421811cfb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56421811d030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56421811d0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x56421811d320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x56421811d538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56421811d400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56421811d5e0 <line:606:22>
| `-NonNullAttr 0x56421811d638 <col:63, col:77> 1
|-FunctionDecl 0x56421811d740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56421811d688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56421811d7e8 <line:608:22>
| `-NonNullAttr 0x56421811d840 <col:63, col:77> 1
|-FunctionDecl 0x56421811daa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56421811d888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56421811d908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x56421811db50 <line:612:22>
| `-NonNullAttr 0x56421811dba8 <col:63, col:80> 1 2
|-FunctionDecl 0x56421811ddb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x56421811dbf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56421811dc78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x56421811de68 <col:37>
| `-NonNullAttr 0x56421811dec0 <col:78, col:92> 1
|-FunctionDecl 0x56421811e0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x56421811df08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56421811dfb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x56421811e188 <line:618:22>
| `-NonNullAttr 0x56421811e1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x56421811e3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x56421811e228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56421811e2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x56421811e458 <line:621:22>
| `-NonNullAttr 0x56421811e4b0 <col:63, col:77> 1
|-FunctionDecl 0x56421811e758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x56421811e590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x56421811e610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x56421811e808 <line:623:22>
| `-NonNullAttr 0x56421811e860 <col:63, col:77> 1
|-FunctionDecl 0x56421811e9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56421811e8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56421811eab0 <line:625:22>
| `-NonNullAttr 0x56421811eb08 <col:63, col:77> 1
|-FunctionDecl 0x56421811ec10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56421811eb58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56421811ecb8 <line:627:22>
| `-NonNullAttr 0x56421811ed10 <col:52, col:66> 1
|-FunctionDecl 0x56421811ee10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56421811ed58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56421811eeb8 <line:629:22>
| `-NonNullAttr 0x56421811ef10 <col:52, col:66> 1
|-FunctionDecl 0x56421811f010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56421811ef58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56421811f0b8 <line:631:22>
| `-NonNullAttr 0x56421811f110 <col:52, col:66> 1
|-FunctionDecl 0x56421811f4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x56421811f1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x56421811f300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56421811f380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x56421811f5a0 <line:635:22>
| `-NonNullAttr 0x56421811f5f8 <col:63, col:77> 1
|-FunctionDecl 0x56421811f778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56421811f648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56421811f820 <line:637:22>
| `-NonNullAttr 0x56421811f878 <col:63, col:77> 1
|-FunctionDecl 0x56421811f980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56421811f8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56421811fa28 <line:639:22>
| `-NonNullAttr 0x56421811fa80 <col:52, col:66> 1
|-FunctionDecl 0x564218120c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564218120b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564218120d30 <line:641:22>
| `-NonNullAttr 0x564218120d88 <col:63, col:77> 1
|-FunctionDecl 0x564218120e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564218120dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564218120f38 <line:643:22>
| `-NonNullAttr 0x564218120f90 <col:63, col:77> 1
|-FunctionDecl 0x5642181211b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564218120fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564218121058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x564218121268 <line:647:22>
| `-NonNullAttr 0x5642181212c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5642181214c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x564218121308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x564218121388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x564218121578 <line:650:22>
| `-NonNullAttr 0x5642181215d0 <col:63, col:77> 1
|-FunctionDecl 0x564218121918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5642181216b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5642181217d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5642181219c8 <line:653:22>
| `-NonNullAttr 0x564218121a20 <col:63, col:77> 1
|-FunctionDecl 0x564218121b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x564218121a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564218121c30 <col:69>
|-FunctionDecl 0x564218121da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x564218121c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564218121e50 <col:72>
|-FunctionDecl 0x564218122088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x564218121eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x564218121f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x564218122138 <col:44>
|-FunctionDecl 0x564218122358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5642181221a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564218122218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x564218122408 <line:660:22>
| `-NonNullAttr 0x564218122460 <col:63, col:77> 2
|-FunctionDecl 0x5642181228a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x564218122540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x564218122650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x564218122760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x564218122960 <col:47>
|-FunctionDecl 0x564218122af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5642181229d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564218122c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x564218122bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564218122d10 <line:667:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x564218122dd0 <line:668:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x564218122e90 <line:669:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x564218122f48 <line:670:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x564218122fc8 prev 0x564218122f48 <line:671:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x564218123030 <col:24> 'int' 0
|-VarDecl 0x564218123068 <line:672:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5642181230e8 prev 0x564218123068 <line:673:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x564218123150 <col:27> 'int' 0
|-VarDecl 0x564218123188 <line:674:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x564218123208 prev 0x564218123188 <line:675:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x564218123270 <col:27> 'int' 0
|-VarDecl 0x5642181232a8 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x564218123328 prev 0x5642181232a8 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x564218123390 <col:27> 'int' 0
|-VarDecl 0x5642181233c8 <line:678:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x564218123448 prev 0x5642181233c8 <line:679:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x5642181234b0 <col:27> 'int' 0
|-VarDecl 0x5642181234e0 <line:680:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x564218123558 <line:681:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5642181235d8 <line:682:1, col:5> col:5 used x 'int'
|-VarDecl 0x564218123658 prev 0x5642181235d8 <line:683:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5642181236c0 <col:9> 'int' 0
|-VarDecl 0x5642181236f8 <line:684:1, col:5> col:5 used y 'int'
|-VarDecl 0x564218123778 prev 0x5642181236f8 <line:685:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5642181237e0 <col:9> 'int' 0
|-VarDecl 0x564218123818 <line:686:1, col:5> col:5 used z 'int'
|-VarDecl 0x564218123898 prev 0x564218123818 <line:687:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x564218123900 <col:9> 'int' 0
|-VarDecl 0x564218123930 <line:688:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x5642181239b0 <line:689:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x564218123a28 <line:690:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x564218123b00 <line:691:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x564218123b78 <line:692:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x564218123bf0 <line:693:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x564218123c68 <line:694:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x564218123ce0 <line:695:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x564218123d58 <line:696:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x564218123dd8 <line:697:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x564218123e58 <line:698:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x564218123ed0 <line:699:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x564218123f50 <line:700:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x564218123fc8 <line:701:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x564218124040 <line:702:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5642181240b8 <line:703:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5642181241d0 prev 0x564218122af0 <line:704:1, line:737:1> line:704:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x564218124138 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564218125bf8 <line:705:1, line:737:1>
|   |-CallExpr 0x5642181242e8 <line:706:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5642181242d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564218124278 <col:3> 'void ()' Function 0x5642180c9e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564218124360 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564218124308 <col:3> 'int' lvalue Var 0x564218123f50 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x564218124348 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564218124328 <col:15> 'int' lvalue Var 0x564218123e58 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5642181243c0 <line:708:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564218124380 <col:3> 'int' lvalue Var 0x564218123e58 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x5642181243a0 <col:15> 'int' 1
|   |-BinaryOperator 0x564218124438 <line:709:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5642181243e0 <col:3> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564218124420 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564218124400 <col:20> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5642181244d0 <line:710:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x564218124458 <col:3> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5642181244a8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564218124478 <col:27> 'int' 1
|   |-CallExpr 0x564218124658 <line:711:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x564218124640 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5642181244f0 <col:3> 'void (int)' Function 0x5642180c9bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5642181245f0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5642181245d0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5642181245b0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x564218124568 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x564218124550 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x564218124510 <col:23> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x564218124598 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x564218124580 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x564218124530 <col:41> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5642181246d8 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564218124680 <col:3> '_Bool' lvalue Var 0x564218123bf0 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5642181246c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5642181246a0 <col:20> '_Bool' lvalue Var 0x564218123a28 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x564218124750 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5642181246f8 <col:3> '_Bool' lvalue Var 0x564218123c68 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564218124738 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564218124718 <col:20> '_Bool' lvalue Var 0x564218123b00 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5642181247c8 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564218124770 <col:3> '_Bool' lvalue Var 0x564218123ce0 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5642181247b0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564218124790 <col:20> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564218124860 <line:715:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5642181247e8 <col:3> '_Bool' lvalue Var 0x564218123b00 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x564218124838 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564218124808 <col:27> 'int' 1
|   |-CallExpr 0x5642181248b8 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5642181248a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564218124880 <col:3> 'void ()' Function 0x5642180c9f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564218124910 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5642181248f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642181248d8 <col:3> 'void ()' Function 0x5642180c9e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564218124970 <line:718:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564218124930 <col:3> 'int' lvalue Var 0x564218123658 'x' 'int'
|   | `-IntegerLiteral 0x564218124950 <col:7> 'int' 1
|   |-CallExpr 0x5642181249c8 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5642181249b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564218124990 <col:3> 'void ()' Function 0x5642180c9f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564218124a20 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564218124a08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642181249e8 <col:3> 'void ()' Function 0x5642180c9e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564218124a98 <line:721:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564218124a40 <col:3> 'int' lvalue Var 0x5642181230e8 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x564218124a80 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564218124a60 <col:25> 'int' lvalue Var 0x564218123658 'x' 'int'
|   |-CallExpr 0x564218124b10 <line:722:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564218124ad8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564218124ab8 <col:3> 'void ()' Function 0x5642180c9f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564218124b68 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564218124b50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564218124b30 <col:3> 'void ()' Function 0x5642180c9e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564218124be0 <line:724:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564218124b88 <col:3> 'int' lvalue Var 0x564218123208 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x564218124bc8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564218124ba8 <col:25> 'int' lvalue Var 0x564218123778 'y' 'int'
|   |-CallExpr 0x564218124c38 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564218124c20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564218124c00 <col:3> 'void ()' Function 0x5642180c9f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564218124c90 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564218124c78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564218124c58 <col:3> 'void ()' Function 0x5642180c9e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564218124f78 <line:727:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564218124cb0 <col:3> 'int' lvalue Var 0x564218123898 'z' 'int'
|   | `-ConditionalOperator 0x564218124f48 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564218124d70 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564218124d28 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564218124d10 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564218124cd0 <col:7> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564218124d58 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564218124d40 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564218124cf0 <col:25> '_Bool' lvalue Var 0x564218123b00 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x564218124f30 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564218124d90 <col:42> 'int' lvalue Var 0x564218123e58 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x564218124f10 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564218124ee0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564218124e50 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564218124e08 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564218124df0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564218124db0 <col:55> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564218124e38 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564218124e20 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564218124dd0 <col:73> '_Bool' lvalue Var 0x564218123c68 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x564218124eb0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564218124e70 <col:90> 'int' lvalue Var 0x564218123f50 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564218124ec8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564218124e90 <col:102> 'int' lvalue Var 0x564218123898 'z' 'int'
|   |-BinaryOperator 0x564218125180 <line:728:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564218124f98 <col:3> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564218125168 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564218125138 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564218125058 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564218125010 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564218124ff8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564218124fb8 <col:20> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564218125040 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564218125028 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564218124fd8 <col:38> '_Bool' lvalue Var 0x564218123b00 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5642181250f0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5642181250a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564218125078 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564218125120 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564218125108 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5642181250d0 <col:66> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564218125468 <line:729:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5642181251a0 <col:3> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564218125450 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564218125420 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564218125340 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564218125260 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564218125218 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564218125200 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5642181251c0 <col:20> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564218125248 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564218125230 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5642181251e0 <col:38> '_Bool' lvalue Var 0x564218123b00 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x564218125320 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5642181252d8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5642181252c0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564218125280 <col:56> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564218125308 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5642181252f0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5642181252a0 <col:74> '_Bool' lvalue Var 0x564218123c68 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5642181253d8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564218125390 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564218125360 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564218125408 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5642181253f0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5642181253b8 <col:102> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564218125670 <line:730:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564218125488 <col:3> '_Bool' lvalue Var 0x564218123b00 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564218125658 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564218125628 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564218125548 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564218125500 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5642181254e8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5642181254a8 <col:20> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564218125530 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564218125518 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5642181254c8 <col:38> '_Bool' lvalue Var 0x564218123b00 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5642181255e0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564218125598 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564218125568 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564218125610 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5642181255f8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5642181255c0 <col:66> '_Bool' lvalue Var 0x564218123b00 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x564218125958 <line:731:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564218125690 <col:3> '_Bool' lvalue Var 0x564218123c68 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564218125940 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564218125910 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564218125830 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564218125750 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564218125708 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5642181256f0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5642181256b0 <col:20> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564218125738 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564218125720 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5642181256d0 <col:38> '_Bool' lvalue Var 0x564218123b00 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x564218125810 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5642181257c8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5642181257b0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564218125770 <col:56> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5642181257f8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5642181257e0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564218125790 <col:74> '_Bool' lvalue Var 0x564218123c68 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5642181258c8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564218125880 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564218125850 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5642181258f8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5642181258e0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5642181258a8 <col:102> '_Bool' lvalue Var 0x564218123c68 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5642181259b0 <line:732:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564218125998 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564218125978 <col:3> 'void ()' Function 0x5642180c9f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564218125a08 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5642181259f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642181259d0 <col:3> 'void ()' Function 0x5642180c9e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564218125ac0 <line:734:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564218125a28 <col:3> 'int' lvalue Var 0x564218122fc8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564218125aa0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564218125a88 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564218125a48 <col:22> 'int' lvalue Var 0x564218122fc8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564218125a68 <col:41> 'int' 1
|   |-CallExpr 0x564218125b38 <line:735:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564218125b20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564218125ae0 <col:3> 'void ()' Function 0x5642180c9f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564218125be8 <line:736:3, col:36>
|     `-CallExpr 0x564218125bc8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564218125bb0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564218125b58 <col:10> 'void *(void)' Function 0x5642180c9958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564218125db0 prev 0x564218122c48 <line:738:1, line:773:1> line:738:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x564218125d18 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564218129b60 <line:739:1, line:773:1>
|   |-CallExpr 0x564218125e90 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564218125e78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564218125e58 <col:3> 'void ()' Function 0x5642180c9e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564218125ef0 <line:741:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564218125eb0 <col:3> 'int' lvalue Var 0x564218123778 'y' 'int'
|   | `-IntegerLiteral 0x564218125ed0 <col:7> 'int' 1
|   |-CallExpr 0x564218125f48 <line:742:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564218125f30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564218125f10 <col:3> 'void ()' Function 0x5642180c9f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564218125fa0 <line:743:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564218125f88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564218125f68 <col:3> 'void ()' Function 0x5642180c9e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564218126018 <line:744:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564218125fc0 <col:3> 'int' lvalue Var 0x564218123328 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x564218126000 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564218125fe0 <col:25> 'int' lvalue Var 0x564218123778 'y' 'int'
|   |-CallExpr 0x564218126070 <line:745:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564218126058 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564218126038 <col:3> 'void ()' Function 0x5642180c9f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5642181260c8 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5642181260b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564218126090 <col:3> 'void ()' Function 0x5642180c9e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564218126178 <line:747:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5642181260e8 <col:3> '_Bool' lvalue Var 0x564218124040 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x564218126160 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x564218126140 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x564218126128 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x564218126108 <col:19> 'void *(void)' Function 0x5642180c9958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x564218126228 <line:748:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x564218126198 <col:3> '_Bool' lvalue Var 0x5642181240b8 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x564218126210 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5642181261f0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5642181261d8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5642181261b8 <col:19> 'void *(void)' Function 0x5642180c9958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5642181262a0 <line:749:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x564218126248 <col:3> '_Bool' lvalue Var 0x564218123930 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x564218126288 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564218126268 <col:21> '_Bool' lvalue Var 0x5642181240b8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x564218126318 <line:750:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5642181262c0 <col:3> 'int' lvalue Var 0x5642181239b0 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x564218126300 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5642181262e0 <col:15> 'int' lvalue Var 0x564218123898 'z' 'int'
|   |-BinaryOperator 0x564218126750 <line:751:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x564218126338 <col:3> 'int' lvalue Var 0x564218123898 'z' 'int'
|   | `-ConditionalOperator 0x564218126720 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x564218126548 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x564218126468 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x564218126390 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x564218126378 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x564218126358 <col:8> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x564218126448 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5642181263e0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5642181263c8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5642181263a8 <col:27> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x564218126430 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x564218126418 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5642181263f8 <col:46> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x564218126528 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5642181264c0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5642181264a8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x564218126488 <col:65> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x564218126510 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5642181264f8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5642181264d8 <col:84> '_Bool' lvalue Var 0x564218123ce0 'z$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x564218126708 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564218126568 <col:101> 'int' lvalue Var 0x564218123898 'z' 'int'
|   |   `-ParenExpr 0x5642181266e8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5642181266b8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x564218126628 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5642181265e0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5642181265c8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564218126588 <col:106> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564218126610 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5642181265f8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5642181265a8 <col:124> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564218126688 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564218126648 <col:141> 'int' lvalue Var 0x564218123e58 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5642181266a0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564218126668 <col:153> 'int' lvalue Var 0x564218123f50 'z$w_buff1' 'int'
|   |-BinaryOperator 0x564218126c78 <line:752:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564218126770 <col:3> 'int' lvalue Var 0x564218123e58 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x564218126c48 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x564218126c18 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564218126c00 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564218126790 <col:15> '_Bool' lvalue Var 0x5642181240b8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564218126c30 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5642181267b0 <col:31> 'int' lvalue Var 0x564218123e58 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x564218126be0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564218126bb0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5642181269c0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5642181268e0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564218126808 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5642181267f0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5642181267d0 <col:45> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5642181268c0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564218126858 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564218126840 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564218126820 <col:64> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5642181268a8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564218126890 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564218126870 <col:83> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5642181269a0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564218126938 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564218126920 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x564218126900 <col:102> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x564218126988 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564218126970 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564218126950 <col:121> '_Bool' lvalue Var 0x564218123ce0 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564218126b98 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5642181269e0 <col:138> 'int' lvalue Var 0x564218123e58 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x564218126b78 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564218126b48 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564218126aa0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564218126a58 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564218126a40 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564218126a00 <col:151> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564218126a88 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564218126a70 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564218126a20 <col:169> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x564218126b00 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564218126ac0 <col:186> 'int' lvalue Var 0x564218123e58 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x564218126b30 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564218126ae0 <col:198> 'int' lvalue Var 0x564218123e58 'z$w_buff0' 'int'
|   |-BinaryOperator 0x564218127188 <line:753:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564218126c98 <col:3> 'int' lvalue Var 0x564218123f50 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x564218127158 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x564218127128 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564218127110 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564218126cb8 <col:15> '_Bool' lvalue Var 0x5642181240b8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564218127140 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564218126cd8 <col:31> 'int' lvalue Var 0x564218123f50 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x5642181270f0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5642181270c0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x564218126ee8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x564218126e08 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564218126d30 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x564218126d18 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x564218126cf8 <col:45> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x564218126de8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564218126d80 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564218126d68 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564218126d48 <col:64> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x564218126dd0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564218126db8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564218126d98 <col:83> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564218126ec8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564218126e60 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564218126e48 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x564218126e28 <col:102> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x564218126eb0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564218126e98 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564218126e78 <col:121> '_Bool' lvalue Var 0x564218123ce0 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5642181270a8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564218126f08 <col:138> 'int' lvalue Var 0x564218123f50 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x564218127088 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564218127058 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564218126fc8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564218126f80 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564218126f68 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564218126f28 <col:151> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564218126fb0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564218126f98 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564218126f48 <col:169> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x564218127028 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564218126fe8 <col:186> 'int' lvalue Var 0x564218123f50 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x564218127040 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564218127008 <col:198> 'int' lvalue Var 0x564218123f50 'z$w_buff1' 'int'
|   |-BinaryOperator 0x564218127730 <line:754:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5642181271a8 <col:3> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564218127718 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5642181276e8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5642181276a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564218127688 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5642181271c8 <col:20> '_Bool' lvalue Var 0x5642181240b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5642181276d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5642181276b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5642181271e8 <col:36> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x564218127668 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x564218127638 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5642181273f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564218127318 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564218127240 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564218127228 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564218127208 <col:55> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5642181272f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564218127290 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564218127278 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564218127258 <col:74> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5642181272e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5642181272c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5642181272a8 <col:93> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5642181273d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564218127370 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564218127358 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564218127338 <col:112> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5642181273c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5642181273a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564218127388 <col:131> '_Bool' lvalue Var 0x564218123ce0 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x564218127620 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564218127608 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564218127418 <col:148> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5642181275e8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5642181275b8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5642181274d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564218127490 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564218127478 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564218127438 <col:166> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5642181274c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5642181274a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564218127458 <col:184> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x564218127570 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564218127528 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5642181274f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5642181275a0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564218127588 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x564218127550 <col:212> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564218127d10 <line:755:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x564218127750 <col:3> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564218127cf8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564218127cc8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x564218127c80 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564218127c68 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564218127770 <col:20> '_Bool' lvalue Var 0x5642181240b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564218127cb0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564218127c98 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564218127790 <col:36> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x564218127c48 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564218127c18 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5642181279a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5642181278c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5642181277e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5642181277d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5642181277b0 <col:55> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5642181278a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564218127838 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564218127820 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564218127800 <col:74> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x564218127888 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564218127870 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564218127850 <col:93> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564218127980 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564218127918 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564218127900 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5642181278e0 <col:112> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x564218127968 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564218127950 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564218127930 <col:131> '_Bool' lvalue Var 0x564218123ce0 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x564218127c00 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564218127be8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5642181279c0 <col:148> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x564218127bc8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x564218127b98 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x564218127a80 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564218127a38 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564218127a20 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5642181279e0 <col:166> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564218127a68 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564218127a50 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564218127a00 <col:184> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x564218127b68 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564218127ad0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564218127aa0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564218127b80 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564218127b40 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564218127af8 <col:219> 'int' 0
|   |-BinaryOperator 0x5642181282b8 <line:756:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x564218127d30 <col:3> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5642181282a0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564218128270 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x564218128228 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564218128210 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564218127d50 <col:20> '_Bool' lvalue Var 0x5642181240b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564218128258 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564218128240 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564218127d70 <col:36> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x5642181281f0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5642181281c0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564218127f80 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564218127ea0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564218127dc8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564218127db0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564218127d90 <col:55> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564218127e80 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564218127e18 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564218127e00 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564218127de0 <col:74> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x564218127e68 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564218127e50 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564218127e30 <col:93> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564218127f60 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564218127ef8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564218127ee0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564218127ec0 <col:112> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x564218127f48 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564218127f30 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564218127f10 <col:131> '_Bool' lvalue Var 0x564218123ce0 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5642181281a8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564218128190 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564218127fa0 <col:148> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x564218128170 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x564218128140 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x564218128060 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564218128018 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564218128000 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564218127fc0 <col:166> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564218128048 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564218128030 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564218127fe0 <col:184> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5642181280f8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5642181280b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564218128080 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564218128128 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564218128110 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5642181280d8 <col:212> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564218128880 <line:757:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5642181282d8 <col:3> '_Bool' lvalue Var 0x564218123ce0 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564218128868 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564218128838 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5642181287f0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5642181287d8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5642181282f8 <col:20> '_Bool' lvalue Var 0x5642181240b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564218128820 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564218128808 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564218128318 <col:36> '_Bool' lvalue Var 0x564218123ce0 'z$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x5642181287b8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564218128788 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x564218128528 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564218128448 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564218128370 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564218128358 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564218128338 <col:55> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564218128428 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5642181283c0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5642181283a8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564218128388 <col:74> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x564218128410 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5642181283f8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5642181283d8 <col:93> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564218128508 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5642181284a0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564218128488 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564218128468 <col:112> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5642181284f0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5642181284d8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5642181284b8 <col:131> '_Bool' lvalue Var 0x564218123ce0 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x564218128770 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564218128758 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564218128548 <col:148> '_Bool' lvalue Var 0x564218123ce0 'z$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x564218128738 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x564218128708 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x564218128608 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5642181285c0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5642181285a8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564218128568 <col:166> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5642181285f0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5642181285d8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564218128588 <col:184> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5642181286d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564218128658 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564218128628 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5642181286f0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5642181286b0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564218128680 <col:219> 'int' 0
|   |-BinaryOperator 0x5642181288f8 <line:758:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5642181288a0 <col:3> 'int' lvalue Var 0x564218123448 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x5642181288e0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5642181288c0 <col:25> 'int' lvalue Var 0x564218123898 'z' 'int'
|   |-BinaryOperator 0x564218128a28 <line:759:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x564218128918 <col:3> 'int' lvalue Var 0x564218123898 'z' 'int'
|   | `-ConditionalOperator 0x5642181289f8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5642181289b0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564218128998 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564218128938 <col:7> '_Bool' lvalue Var 0x564218123930 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5642181289c8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564218128958 <col:25> 'int' lvalue Var 0x5642181239b0 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5642181289e0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x564218128978 <col:37> 'int' lvalue Var 0x564218123898 'z' 'int'
|   |-BinaryOperator 0x564218128ac0 <line:760:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x564218128a48 <col:3> '_Bool' lvalue Var 0x564218123930 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x564218128a98 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564218128a68 <col:28> 'int' 0
|   |-CallExpr 0x564218128b18 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564218128b00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564218128ae0 <col:3> 'void ()' Function 0x5642180c9f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564218128b88 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564218128b70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564218128b50 <col:3> 'void ()' Function 0x5642180c9e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564218128e70 <line:763:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564218128ba8 <col:3> 'int' lvalue Var 0x564218123898 'z' 'int'
|   | `-ConditionalOperator 0x564218128e40 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564218128c68 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564218128c20 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564218128c08 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564218128bc8 <col:7> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564218128c50 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564218128c38 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564218128be8 <col:25> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x564218128e28 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564218128c88 <col:42> 'int' lvalue Var 0x564218123e58 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x564218128e08 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564218128dd8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564218128d48 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564218128d00 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564218128ce8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564218128ca8 <col:55> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564218128d30 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564218128d18 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564218128cc8 <col:73> '_Bool' lvalue Var 0x564218123ce0 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564218128da8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564218128d68 <col:90> 'int' lvalue Var 0x564218123f50 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564218128dc0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564218128d88 <col:102> 'int' lvalue Var 0x564218123898 'z' 'int'
|   |-BinaryOperator 0x564218129078 <line:764:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564218128e90 <col:3> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564218129060 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564218129030 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564218128f50 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564218128f08 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564218128ef0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564218128eb0 <col:20> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564218128f38 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564218128f20 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564218128ed0 <col:38> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564218128fe8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564218128fa0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564218128f70 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564218129018 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564218129000 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564218128fc8 <col:66> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564218129360 <line:765:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564218129098 <col:3> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564218129348 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564218129318 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564218129238 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564218129158 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564218129110 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5642181290f8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5642181290b8 <col:20> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564218129140 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564218129128 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5642181290d8 <col:38> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x564218129218 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5642181291d0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5642181291b8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564218129178 <col:56> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564218129200 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5642181291e8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564218129198 <col:74> '_Bool' lvalue Var 0x564218123ce0 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5642181292d0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564218129288 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564218129258 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564218129300 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5642181292e8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5642181292b0 <col:102> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564218129568 <line:766:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564218129380 <col:3> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564218129550 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564218129520 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564218129440 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5642181293f8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5642181293e0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5642181293a0 <col:20> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564218129428 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564218129410 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5642181293c0 <col:38> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5642181294d8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564218129490 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564218129460 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564218129508 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5642181294f0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5642181294b8 <col:66> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564218129850 <line:767:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564218129588 <col:3> '_Bool' lvalue Var 0x564218123ce0 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564218129838 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564218129808 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564218129728 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564218129648 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564218129600 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5642181295e8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5642181295a8 <col:20> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564218129630 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564218129618 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5642181295c8 <col:38> '_Bool' lvalue Var 0x564218123b78 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x564218129708 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5642181296c0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5642181296a8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564218129668 <col:56> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5642181296f0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5642181296d8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564218129688 <col:74> '_Bool' lvalue Var 0x564218123ce0 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5642181297c0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564218129778 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564218129748 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5642181297f0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5642181297d8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5642181297a0 <col:102> '_Bool' lvalue Var 0x564218123ce0 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5642181298a8 <line:768:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564218129890 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564218129870 <col:3> 'void ()' Function 0x5642180c9f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564218129900 <line:769:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5642181298e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642181298c8 <col:3> 'void ()' Function 0x5642180c9e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5642181299b8 <line:770:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564218129920 <col:3> 'int' lvalue Var 0x564218122fc8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564218129998 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564218129980 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564218129940 <col:22> 'int' lvalue Var 0x564218122fc8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564218129960 <col:41> 'int' 1
|   |-CallExpr 0x564218129a10 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5642181299f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5642181299d8 <col:3> 'void ()' Function 0x5642180c9f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564218129a88 <line:772:3, col:36>
|     `-CallExpr 0x564218129a68 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564218129a50 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564218129a30 <col:10> 'void *(void)' Function 0x5642180c9958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564218129c98 prev 0x564218122d10 <line:774:1, line:776:1> line:774:6 fence 'void ()'
| `-CompoundStmt 0x564218129d38 <line:775:1, line:776:1>
|-FunctionDecl 0x564218129d68 prev 0x564218122dd0 <line:777:1, line:779:1> line:777:6 isync 'void ()'
| `-CompoundStmt 0x564218129e08 <line:778:1, line:779:1>
|-FunctionDecl 0x564218129e38 prev 0x564218122e90 <line:780:1, line:782:1> line:780:6 lwfence 'void ()'
| `-CompoundStmt 0x564218129ed8 <line:781:1, line:782:1>
`-FunctionDecl 0x564218129f48 <line:783:1, line:805:1> line:783:5 main 'int ()'
  `-CompoundStmt 0x56421812b990 <line:784:1, line:805:1>
    |-DeclStmt 0x56421812a060 <line:785:3, col:17>
    | `-VarDecl 0x564218129ff8 <col:3, col:13> col:13 used t255 'pthread_t':'unsigned long'
    |-CallExpr 0x56421812a268 <line:786:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56421812a250 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56421812a078 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56421810a488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56421812a0b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56421812a098 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564218129ff8 't255' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56421812a2a8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56421812a130 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56421812a108 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56421812a0d0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56421812a2c0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56421812a150 <col:38> 'void *(void *)' Function 0x5642181241d0 'P0' 'void *(void *)'
    | `-ParenExpr 0x56421812a1d0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56421812a1a8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56421812a170 <col:51> 'int' 0
    |-DeclStmt 0x56421812a350 <line:787:3, col:17>
    | `-VarDecl 0x56421812a2e8 <col:3, col:13> col:13 used t256 'pthread_t':'unsigned long'
    |-CallExpr 0x56421812a4f8 <line:788:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56421812a4e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56421812a368 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56421810a488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56421812a3a8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56421812a388 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56421812a2e8 't256' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56421812a538 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56421812a420 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56421812a3f8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56421812a3c0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56421812a550 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56421812a440 <col:38> 'void *(void *)' Function 0x564218125db0 'P1' 'void *(void *)'
    | `-ParenExpr 0x56421812a4c0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56421812a498 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56421812a460 <col:51> 'int' 0
    |-CallExpr 0x56421812a5a0 <line:789:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56421812a588 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56421812a568 <col:3> 'void ()' Function 0x5642180c9e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56421812a670 <line:790:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x56421812a5c0 <col:3> '_Bool' lvalue Var 0x5642181234e0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x56421812a658 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x56421812a638 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x56421812a620 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x56421812a5e0 <col:21> 'int' lvalue Var 0x564218122fc8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x56421812a600 <col:41> 'int' 2
    |-CallExpr 0x56421812a6c8 <line:791:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56421812a6b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56421812a690 <col:3> 'void ()' Function 0x5642180c9f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56421812a740 <line:792:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56421812a728 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56421812a6e8 <col:3> 'void (int)' Function 0x5642180c9790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x56421812a780 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56421812a768 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56421812a708 <col:21> '_Bool' lvalue Var 0x5642181234e0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x56421812a7d0 <line:793:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56421812a7b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56421812a798 <col:3> 'void ()' Function 0x5642180c9e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56421812aab8 <line:794:3, col:103> 'int' '='
    | |-DeclRefExpr 0x56421812a7f0 <col:3> 'int' lvalue Var 0x564218123898 'z' 'int'
    | `-ConditionalOperator 0x56421812aa88 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x56421812a8b0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x56421812a868 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x56421812a850 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x56421812a810 <col:7> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x56421812a898 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x56421812a880 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x56421812a830 <col:25> '_Bool' lvalue Var 0x564218123a28 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56421812aa70 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56421812a8d0 <col:42> 'int' lvalue Var 0x564218123e58 'z$w_buff0' 'int'
    |   `-ParenExpr 0x56421812aa50 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x56421812aa20 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x56421812a990 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56421812a948 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56421812a930 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56421812a8f0 <col:55> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56421812a978 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56421812a960 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56421812a910 <col:73> '_Bool' lvalue Var 0x564218123bf0 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56421812a9f0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56421812a9b0 <col:90> 'int' lvalue Var 0x564218123f50 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x56421812aa08 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56421812a9d0 <col:102> 'int' lvalue Var 0x564218123898 'z' 'int'
    |-BinaryOperator 0x56421812ace0 <line:795:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56421812aad8 <col:3> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56421812acc8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56421812ac98 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56421812abb8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56421812ab70 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56421812ab38 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56421812aaf8 <col:20> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56421812aba0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56421812ab88 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56421812ab18 <col:38> '_Bool' lvalue Var 0x564218123a28 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56421812ac50 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56421812ac08 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56421812abd8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56421812ac80 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56421812ac68 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56421812ac30 <col:66> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56421812afc8 <line:796:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56421812ad00 <col:3> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56421812afb0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56421812af80 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56421812aea0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56421812adc0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56421812ad78 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56421812ad60 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56421812ad20 <col:20> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56421812ada8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56421812ad90 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56421812ad40 <col:38> '_Bool' lvalue Var 0x564218123a28 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56421812ae80 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56421812ae38 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56421812ae20 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56421812ade0 <col:56> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56421812ae68 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56421812ae50 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56421812ae00 <col:74> '_Bool' lvalue Var 0x564218123bf0 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56421812af38 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56421812aef0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56421812aec0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56421812af68 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56421812af50 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56421812af18 <col:102> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x56421812b1d0 <line:797:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56421812afe8 <col:3> '_Bool' lvalue Var 0x564218123a28 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56421812b1b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56421812b188 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56421812b0a8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56421812b060 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56421812b048 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56421812b008 <col:20> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56421812b090 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56421812b078 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56421812b028 <col:38> '_Bool' lvalue Var 0x564218123a28 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56421812b140 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56421812b0f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56421812b0c8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56421812b170 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56421812b158 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56421812b120 <col:66> '_Bool' lvalue Var 0x564218123a28 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56421812b4b8 <line:798:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56421812b1f0 <col:3> '_Bool' lvalue Var 0x564218123bf0 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56421812b4a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56421812b470 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56421812b390 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56421812b2b0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56421812b268 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56421812b250 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56421812b210 <col:20> '_Bool' lvalue Var 0x564218123ed0 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56421812b298 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56421812b280 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56421812b230 <col:38> '_Bool' lvalue Var 0x564218123a28 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56421812b370 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56421812b328 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56421812b310 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56421812b2d0 <col:56> '_Bool' lvalue Var 0x564218123fc8 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56421812b358 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56421812b340 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56421812b2f0 <col:74> '_Bool' lvalue Var 0x564218123bf0 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56421812b428 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56421812b3e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56421812b3b0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56421812b458 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56421812b440 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56421812b408 <col:102> '_Bool' lvalue Var 0x564218123bf0 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x56421812b510 <line:799:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56421812b4f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56421812b4d8 <col:3> 'void ()' Function 0x5642180c9f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56421812b568 <line:800:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56421812b550 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56421812b530 <col:3> 'void ()' Function 0x5642180c9e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56421812b838 <line:801:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x56421812b588 <col:3> '_Bool' lvalue Var 0x564218123558 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x56421812b820 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x56421812b808 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x56421812b7e8 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x56421812b7c8 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x56421812b730 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x56421812b698 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x56421812b600 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x56421812b5e8 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x56421812b5a8 <col:23> 'int' lvalue Var 0x5642181230e8 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x56421812b5c8 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x56421812b678 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x56421812b660 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x56421812b620 <col:51> 'int' lvalue Var 0x564218123208 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x56421812b640 <col:74> 'int' 0
    |         | `-BinaryOperator 0x56421812b710 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x56421812b6f8 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x56421812b6b8 <col:79> 'int' lvalue Var 0x564218123328 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x56421812b6d8 <col:102> 'int' 1
    |         `-BinaryOperator 0x56421812b7a8 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x56421812b790 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56421812b750 <col:107> 'int' lvalue Var 0x564218123448 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x56421812b770 <col:130> 'int' 0
    |-CallExpr 0x56421812b890 <line:802:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56421812b878 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56421812b858 <col:3> 'void ()' Function 0x5642180c9f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56421812b908 <line:803:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56421812b8f0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56421812b8b0 <col:3> 'void (int)' Function 0x5642180c9bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x56421812b948 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56421812b930 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56421812b8d0 <col:21> '_Bool' lvalue Var 0x564218123558 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x56421812b980 <line:804:3, col:10>
      `-IntegerLiteral 0x56421812b960 <col:10> 'int' 0
