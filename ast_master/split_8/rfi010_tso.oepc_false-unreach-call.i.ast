TranslationUnitDecl 0x562280693e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5622806946d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5622806943b0 '__int128'
|-TypedefDecl 0x562280694748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5622806943d0 'unsigned __int128'
|-TypedefDecl 0x562280694a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x562280694820 'struct __NSConstantString_tag'
|   `-Record 0x5622806947a0 '__NSConstantString_tag'
|-TypedefDecl 0x562280694af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x562280694ab0 'char *'
|   `-BuiltinType 0x562280693eb0 'char'
|-TypedefDecl 0x5622806d3650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x562280694d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x562280694bd0 'struct __va_list_tag'
|     `-Record 0x562280694b50 '__va_list_tag'
|-FunctionDecl 0x5622806d3770 <./split_8/rfi010_tso.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x5622806d3940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5622806d3870 <col:31> col:34 'int'
|-FunctionDecl 0x5622806d3ab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5622806d3be0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5622806d3d28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5622806d3c98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5622806d3f58 <col:40, col:99>
|   |-IfStmt 0x5622806d3f28 <col:42, col:88>
|   | |-UnaryOperator 0x5622806d3e08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5622806d3df0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5622806d3dd0 <col:47> 'int' lvalue ParmVar 0x5622806d3c98 'expression' 'int'
|   | `-CompoundStmt 0x5622806d3f10 <col:59, col:88>
|   |   `-LabelStmt 0x5622806d3ef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5622806d3e88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5622806d3e70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5622806d3e20 <col:68> 'void () __attribute__((noreturn))' Function 0x5622806d3be0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5622806d3f40 <col:89>
|   `-ReturnStmt 0x5622806d3f48 <col:91>
|-FunctionDecl 0x5622806d3fa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5622806d4060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5622806d43e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5622806d4118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5622806d4198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5622806d4218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5622806d4298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5622806d44a0 <line:11:22>
|-FunctionDecl 0x5622806fa520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5622806d4510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5622806d4590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5622806fa350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5622806fa3d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5622806fa5e0 <line:14:22>
|-FunctionDecl 0x5622806fa890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5622806fa650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5622806fa6d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5622806fa750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5622806fa948 <line:16:22>
|-TypedefDecl 0x5622806fa9b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x562280693f70 'unsigned char'
|-TypedefDecl 0x5622806faa28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x562280693f90 'unsigned short'
|-TypedefDecl 0x5622806faa98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x562280693fb0 'unsigned int'
|-TypedefDecl 0x5622806fab08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x562280693fd0 'unsigned long'
|-TypedefDecl 0x5622806fab78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x562280693ed0 'signed char'
|-TypedefDecl 0x5622806fabe8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x562280693f70 'unsigned char'
|-TypedefDecl 0x5622806fac58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x562280693ef0 'short'
|-TypedefDecl 0x5622806facc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x562280693f90 'unsigned short'
|-TypedefDecl 0x5622806fad38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x562280693f10 'int'
|-TypedefDecl 0x5622806fada8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x562280693fb0 'unsigned int'
|-TypedefDecl 0x5622806fae18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x562280693f30 'long'
|-TypedefDecl 0x5622806fae88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x562280693fd0 'unsigned long'
|-TypedefDecl 0x5622806faef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x562280693f30 'long'
|-TypedefDecl 0x5622806faf68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x562280693fd0 'unsigned long'
|-TypedefDecl 0x5622806fafd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x562280693fd0 'unsigned long'
|-TypedefDecl 0x5622806fb048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x562280693fb0 'unsigned int'
|-TypedefDecl 0x5622806fb0b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x562280693fb0 'unsigned int'
|-TypedefDecl 0x5622806fb128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x562280693fd0 'unsigned long'
|-TypedefDecl 0x5622806fb198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x562280693fd0 'unsigned long'
|-TypedefDecl 0x5622806fb208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x562280693fb0 'unsigned int'
|-TypedefDecl 0x5622806fb278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x562280693fd0 'unsigned long'
|-TypedefDecl 0x5622806fb2e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x562280693f30 'long'
|-TypedefDecl 0x5622806fb378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x562280693f30 'long'
|-TypedefDecl 0x5622806fb3e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x562280693f10 'int'
|-RecordDecl 0x5622806fb440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x5622806fb588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5622806fb640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5622806fb5e0 'struct __fsid_t' sugar
|   `-RecordType 0x5622806fb4c0 '__fsid_t'
|     `-Record 0x5622806fb440 ''
|-TypedefDecl 0x5622806fb6c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x562280693f30 'long'
|-TypedefDecl 0x5622806fb738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x562280693fd0 'unsigned long'
|-TypedefDecl 0x5622806fb7a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x562280693fd0 'unsigned long'
|-TypedefDecl 0x5622806fb818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x562280693fb0 'unsigned int'
|-TypedefDecl 0x5622806fb888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x562280693f30 'long'
|-TypedefDecl 0x5622806fb8f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x562280693fb0 'unsigned int'
|-TypedefDecl 0x5622806fb968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x562280693f30 'long'
|-TypedefDecl 0x5622806fb9d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x562280693f10 'int'
|-TypedefDecl 0x5622806fba48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x562280693f10 'int'
|-TypedefDecl 0x5622806fbab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x562280693f10 'int'
|-TypedefDecl 0x5622806fbb28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x562280694630 'void *'
|   `-BuiltinType 0x562280693e70 'void'
|-TypedefDecl 0x5622806fbb98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x562280693f30 'long'
|-TypedefDecl 0x5622806fbc08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x562280693f30 'long'
|-TypedefDecl 0x5622806fbc78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x562280693f30 'long'
|-TypedefDecl 0x5622806fbce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x562280693fd0 'unsigned long'
|-TypedefDecl 0x5622806fbd58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x562280693fd0 'unsigned long'
|-TypedefDecl 0x5622806fbdc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x562280693fd0 'unsigned long'
|-TypedefDecl 0x5622806fbe38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x562280693fd0 'unsigned long'
|-TypedefDecl 0x5622806fbea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x562280693f30 'long'
|-TypedefDecl 0x5622806fbf18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x562280693f30 'long'
|-TypedefDecl 0x5622806fbf88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x562280693f30 'long'
|-TypedefDecl 0x5622806fbff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x562280693fd0 'unsigned long'
|-TypedefDecl 0x5622806fc088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5622806fc050 '__off64_t' sugar
|   |-Typedef 0x5622806fb378 '__off64_t'
|   `-BuiltinType 0x562280693f30 'long'
|-TypedefDecl 0x5622806fc180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5622806fc140 '__quad_t *'
|   `-TypedefType 0x5622806fc0e0 '__quad_t' sugar
|     |-Typedef 0x5622806faef8 '__quad_t'
|     `-BuiltinType 0x562280693f30 'long'
|-TypedefDecl 0x5622806fc1f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x562280694ab0 'char *'
|   `-BuiltinType 0x562280693eb0 'char'
|-TypedefDecl 0x5622806fc260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x562280693f30 'long'
|-TypedefDecl 0x5622806fc2d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x562280693fb0 'unsigned int'
|-FunctionDecl 0x5622806fd458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5622806fd380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5622806fd768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x5622806fd758 <line:73:3, col:34>
|     `-CallExpr 0x5622806fd718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5622806fd700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5622806fd690 <col:10> '<builtin fn type>' Function 0x5622806fd500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5622806fd740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5622806fd6b0 <col:29> 'unsigned int' lvalue ParmVar 0x5622806fd380 '__bsx' 'unsigned int'
|-FunctionDecl 0x5622806fd500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5622806fd5a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5622806fd610 <col:10> Implicit
| `-ConstAttr 0x5622806fd668 <col:10> Implicit
|-FunctionDecl 0x5622806fd8c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5622806fd7b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5622806fdbd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x5622806fdbc8 <line:78:3, col:34>
|     `-CallExpr 0x5622806fdb88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5622806fdb70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5622806fdaf8 <col:10> '<builtin fn type>' Function 0x5622806fd968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5622806fdbb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5622806fdb18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5622806fd7b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5622806fd968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5622806fda08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5622806fda78 <col:10> Implicit
| `-ConstAttr 0x5622806fdad0 <col:10> Implicit
|-TypedefDecl 0x5622806fdc08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x562280693fd0 'unsigned long'
|-TypedefDecl 0x5622806fdc98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5622806fdc60 '__time_t' sugar
|   |-Typedef 0x5622806fb888 '__time_t'
|   `-BuiltinType 0x562280693f30 'long'
|-RecordDecl 0x5622806fdcf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x5622806fdda8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5622806fde38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5622806fdec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5622806fde90 '__pid_t' sugar
|   |-Typedef 0x5622806fb3e8 '__pid_t'
|   `-BuiltinType 0x562280693f10 'int'
|-RecordDecl 0x5622806fdf20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x5622806fdfe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5622806fe030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x5622806fe0f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5622806fe158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x562280693fd0 'unsigned long'
|-RecordDecl 0x5622806fe1b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x5622806ff480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5622806ff530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5622806ff4d0 'struct cpu_set_t' sugar
|   `-RecordType 0x5622806fe230 'cpu_set_t'
|     `-Record 0x5622806fe1b0 ''
|-FunctionDecl 0x5622806ff808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5622806ff5d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5622806ff6e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5622806ff8b8 <line:108:19>
|-FunctionDecl 0x5622806ffa90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5622806ff920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5622806ffb38 <col:69>
|-FunctionDecl 0x5622806ffcb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5622806ffba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5622806ffd58 <col:64>
|-FunctionDecl 0x562280700018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5622806ffdc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5622806ffef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5622807000c8 <line:114:22>
|-FunctionDecl 0x5622807003b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x562280700130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562280700228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x562280700460 <col:88>
|-FunctionDecl 0x562280700718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5622807004c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562280700548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5622807005d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5622807007d0 <col:62>
|-FunctionDecl 0x562280700948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x562280700838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5622807009f0 <col:63>
|-FunctionDecl 0x562280700b18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x562280700bb8 <col:47>
|-FunctionDecl 0x562280700cc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x562280700c28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x562280700d68 <col:69>
|-FunctionDecl 0x562280700e70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x562280700dd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x562280700f18 <col:69>
|-FunctionDecl 0x5622807011d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562280700f80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5622807010b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x562280701288 <col:88>
|-TypedefDecl 0x562280701318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5622807012e0 '__clock_t' sugar
|   |-Typedef 0x5622806fb6c8 '__clock_t'
|   `-BuiltinType 0x562280693f30 'long'
|-TypedefDecl 0x5622807013c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x562280701370 '__clockid_t' sugar
|   |-Typedef 0x5622806fbab8 '__clockid_t'
|   `-BuiltinType 0x562280693f10 'int'
|-TypedefDecl 0x562280701458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x562280701420 '__timer_t' sugar
|   |-Typedef 0x5622806fbb28 '__timer_t'
|   `-PointerType 0x562280694630 'void *'
|     `-BuiltinType 0x562280693e70 'void'
|-RecordDecl 0x5622807014b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x562280701570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5622807015d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x562280701640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5622807016a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x562280701710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x562280701778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5622807017e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x562280701848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5622807018b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x562280701918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x562280701980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5622807019d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x562280701a98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x562280701b08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x562280701bb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x562280701d80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x562280701e20 <col:45>
|-FunctionDecl 0x562280702000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x562280701ef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5622807020a8 <col:54>
|-FunctionDecl 0x5622807022a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x562280702110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x562280702188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x562280702358 <line:158:22>
| `-ConstAttr 0x562280702ff0 <col:63>
|-FunctionDecl 0x5622807031f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5622807030e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x562280703298 <col:56>
|-FunctionDecl 0x562280703640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x562280703308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x562280703380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562280703400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5622807034f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x562280703700 <col:54>
|-RecordDecl 0x562280703758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x562280703808 parent 0x562280693e18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x562280703a68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x562280703b08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x562280703b70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x562280703bd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x562280703cc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x562280703de8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x562280703d90 'struct __locale_struct *'
|   `-ElaboratedType 0x562280703d20 'struct __locale_struct' sugar
|     `-RecordType 0x5622807037e0 'struct __locale_struct'
|       `-Record 0x562280703758 '__locale_struct'
|-TypedefDecl 0x562280703e98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x562280703e60 '__locale_t' sugar
|   |-Typedef 0x562280703de8 '__locale_t'
|   `-PointerType 0x562280703d90 'struct __locale_struct *'
|     `-ElaboratedType 0x562280703d20 'struct __locale_struct' sugar
|       `-RecordType 0x5622807037e0 'struct __locale_struct'
|         `-Record 0x562280703758 '__locale_struct'
|-FunctionDecl 0x5622807052a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x562280703f08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x562280703f80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562280705028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5622807050b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x562280705130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x562280705368 <col:40>
|-FunctionDecl 0x562280705558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x562280705430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x562280705600 <col:66>
|-FunctionDecl 0x562280705710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x562280705668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5622807057b8 <col:69>
|-FunctionDecl 0x5622807059e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x562280705820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5622807058b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x562280705a98 <col:52>
|-FunctionDecl 0x562280705c40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x562280705b00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562280705b90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x562280705cf0 <col:55>
|-FunctionDecl 0x562280705e88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x562280705d70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x562280705f30 <col:62>
|-FunctionDecl 0x562280706168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x562280705f98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x562280706210 <col:60>
|-FunctionDecl 0x562280706438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x562280706290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x562280706310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5622807064e8 <col:44>
|-FunctionDecl 0x5622807066f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x562280706550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5622807065d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5622807067a8 <col:49>
|-VarDecl 0x5622807068a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x562280706928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5622807069a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x562280706a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x562280706ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x562280706c40 <col:42>
|-VarDecl 0x562280706cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x562280706d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x562280706eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x562280706da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x562280706f60 <col:57>
|-FunctionDecl 0x5622807070d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562280706fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x562280707178 <col:56>
|-FunctionDecl 0x562280707288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5622807071f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x562280707330 <col:59>
|-FunctionDecl 0x562280707438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5622807073a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5622807074e0 <col:48>
| `-ConstAttr 0x562280707538 <col:89>
|-FunctionDecl 0x562280707798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5622807075e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x562280707678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5622807079f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562280707888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562280707918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x562280707aa8 <col:88>
|-FunctionDecl 0x562280707c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562280707b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562280707ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x562280707cf0 <col:88>
|-FunctionDecl 0x562280707f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x562280707d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562280707de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x562280707fb8 <line:209:22>
|-FunctionDecl 0x562280708358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x562280708020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5622807080e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x562280708170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x562280708200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x562280708658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x562280708458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x562280708530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x562280708708 <col:85>
|-FunctionDecl 0x562280708af8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x562280708770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5622807088a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5622807089b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x562280708bb0 <col:52>
|-FunctionDecl 0x562280708d28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x562280708c18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x562280708dd0 <col:61>
|-FunctionDecl 0x562280709248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x562280708e38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x562280708eb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x562280708fe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5622807090f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x562280709308 <col:62>
|-FunctionDecl 0x562280709528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x562280709370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x562280709400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5622807095d8 <line:222:22>
|-FunctionDecl 0x5622807096d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x562280709640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x562280709780 <col:65>
|-TypedefDecl 0x5622807097f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x562280693fd0 'unsigned long'
|-RecordDecl 0x562280709848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x562280709990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5622807099f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562280709aa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x562280709a50 'union pthread_attr_t' sugar
|   `-RecordType 0x5622807098d0 'union pthread_attr_t'
|     `-Record 0x562280709848 'pthread_attr_t'
|-RecordDecl 0x562280709b00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x562280709c78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x562280709cf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x562280709da0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x562280709d40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x562280709b80 'struct __pthread_internal_list'
|     `-Record 0x562280709b00 '__pthread_internal_list'
|-RecordDecl 0x562280709e10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x562280709eb8 parent 0x562280693e18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x562280709f90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562280709ff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x56228070a060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x56228070e110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x56228070e178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x56228070e1e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x56228070e268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x56228070e320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x56228070e410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x56228070e478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56228070e600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x56228070e5a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x562280709e90 'pthread_mutex_t'
|     `-Record 0x562280709e10 ''
|-RecordDecl 0x56228070e670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x56228070e7b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56228070e818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56228070e8d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x56228070e870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x56228070e6f0 'pthread_mutexattr_t'
|     `-Record 0x56228070e670 ''
|-RecordDecl 0x56228070e940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x56228070e9e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x56228070eab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56228070eb18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x56228070eb80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x56228070ebe8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x56228070ec50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x56228070ecb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x56228070ed20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x56228070ed88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x56228070ee40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_8/rfi010_tso.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_8/rfi010_tso.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x56228070ef30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x56228070ef98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x562280710130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x56228070f070 'union pthread_cond_t' sugar
|   `-RecordType 0x56228070e9c0 'pthread_cond_t'
|     `-Record 0x56228070e940 ''
|-RecordDecl 0x5622807101a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x5622807102a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562280710308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5622807103c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x562280710360 'union pthread_condattr_t' sugar
|   `-RecordType 0x562280710220 'pthread_condattr_t'
|     `-Record 0x5622807101a0 ''
|-TypedefDecl 0x562280710448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x562280693fb0 'unsigned int'
|-TypedefDecl 0x5622807104b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x562280693f10 'int'
|-RecordDecl 0x562280710510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x5622807105b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x562280710680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5622807106e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x562280710750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5622807107b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x562280710820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x562280710888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5622807108f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x562280710958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5622807109c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x562280710a28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x562280710a90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x562280710b40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_8/rfi010_tso.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_8/rfi010_tso.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x562280710be8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x562280710c50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562280710da0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x562280710d40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x562280710590 'pthread_rwlock_t'
|     `-Record 0x562280710510 ''
|-RecordDecl 0x562280710e10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x562280710f50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x562280710fb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562280711070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x562280711010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x562280710e90 'pthread_rwlockattr_t'
|     `-Record 0x562280710e10 ''
|-TypedefDecl 0x562280712140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x562280693f14 'volatile int' volatile
|   `-BuiltinType 0x562280693f10 'int'
|-RecordDecl 0x562280712198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x5622807122e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x562280712348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562280712400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5622807123a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x562280712220 'pthread_barrier_t'
|     `-Record 0x562280712198 ''
|-RecordDecl 0x562280712470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x562280712570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5622807125d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562280712690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x562280712630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5622807124f0 'pthread_barrierattr_t'
|     `-Record 0x562280712470 ''
|-TypedefDecl 0x5622807127a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x562280712740 'long [8]' 8 
|   `-BuiltinType 0x562280693f30 'long'
|-EnumDecl 0x562280712800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x5622807128c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x562280712918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x562280712968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x562280712a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x562280712a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x562280712ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x562280712b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x562280712bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x562280712b98 <col:26> 'int'
| |   `-DeclRefExpr 0x562280712b78 <col:26> 'int' EnumConstant 0x562280712a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x562280712c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x562280712c20 <col:29> 'int'
| |   `-DeclRefExpr 0x562280712c00 <col:29> 'int' EnumConstant 0x562280712a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x562280712cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x562280712ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x562280712c88 <col:30> 'int' EnumConstant 0x562280712ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x562280712d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x562280712d30 <col:27> 'int'
|     `-DeclRefExpr 0x562280712d10 <col:27> 'int' EnumConstant 0x562280712bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x562280712d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x562280712e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x562280712ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x562280712ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x562280712eb8 <col:30> 'int' EnumConstant 0x562280712e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x562280712f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x562280712fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x562280712fb0 <col:29> 'int'
|     `-DeclRefExpr 0x562280712f90 <col:29> 'int' EnumConstant 0x562280712f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x562280713018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x5622807130e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x562280713150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5622807131a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5622807131f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x5622807132b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x562280713308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x562280713358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5622807133e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5622807133c8 <col:31> 'int'
|     `-DeclRefExpr 0x5622807133a8 <col:31> 'int' EnumConstant 0x5622807132b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x562280713430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x5622807134f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x562280713548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x562280713598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x562280713668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5622807136b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x562280713708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x5622807137d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x562280713828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x562280713878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x562280713ab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x562280713b20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x562280713b88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x562280713ca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x562280713cf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x562280713dc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x562280713e18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x562280713e68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x562280713f38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x562280713f88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5622807145b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x562280714080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5622807141a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5622807143a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x562280714420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x562280714678 <col:47>
| |-NonNullAttr 0x5622807146d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x562280714708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x562280714830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x562280714760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x562280714a88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5622807148e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x562280714968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x562280714c58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x562280714b48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x562280714d00 <col:60>
|-FunctionDecl 0x562280714e50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x562280714ef0 <col:54>
| `-ConstAttr 0x562280714f48 <col:95>
|-FunctionDecl 0x562280716990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x562280714f80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562280714ff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x562280716a40 <line:395:19>
| `-ConstAttr 0x562280716a98 <col:60>
|-FunctionDecl 0x562280716c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x562280716b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562280716d10 <col:71>
| `-NonNullAttr 0x562280716d68 <col:112, col:126> 1
|-FunctionDecl 0x562280716e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x562280716db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562280716f18 <line:398:22>
| `-NonNullAttr 0x562280716f70 <col:63, col:77> 1
|-FunctionDecl 0x562280717198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x562280716fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x562280717038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x562280717248 <line:401:22>
| `-NonNullAttr 0x5622807172a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5622807174a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5622807172e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562280717368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x562280717558 <line:404:22>
| `-NonNullAttr 0x5622807175b0 <col:63, col:77> 1
|-FunctionDecl 0x562280717808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5622807175f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5622807176a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5622807178b8 <line:407:22>
| `-NonNullAttr 0x562280717910 <col:63, col:80> 1 2
|-FunctionDecl 0x562280718b68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5622807189b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562280718a28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562280718c18 <line:410:22>
| `-NonNullAttr 0x562280718c70 <col:63, col:77> 1
|-FunctionDecl 0x562280718ea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562280718cb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562280718d48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x562280718f58 <line:413:22>
| `-NonNullAttr 0x562280718fb0 <col:63, col:80> 1 2
|-FunctionDecl 0x5622807191e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562280718ff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x562280719088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x562280719298 <col:37>
| `-NonNullAttr 0x5622807192f0 <col:78, col:95> 1 2
|-FunctionDecl 0x5622807194d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562280719338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5622807193b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x562280719588 <line:419:22>
| `-NonNullAttr 0x5622807195e0 <col:63, col:80> 1 2
|-FunctionDecl 0x562280719768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562280719628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5622807196a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x562280719818 <line:421:22>
| `-NonNullAttr 0x562280719870 <col:63, col:77> 1
|-FunctionDecl 0x562280719a38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5622807198b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562280719938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x562280719ae8 <line:424:22>
| `-NonNullAttr 0x562280719b40 <col:63, col:80> 1 2
|-FunctionDecl 0x562280719cc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562280719b88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562280719c08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x562280719d78 <line:427:22>
| `-NonNullAttr 0x562280719dd0 <col:63, col:77> 1
|-FunctionDecl 0x562280719f78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562280719e18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562280719e98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56228071a028 <line:430:22>
| `-NonNullAttr 0x56228071a080 <col:63, col:80> 1 2
|-FunctionDecl 0x56228071a208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56228071a0c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56228071a148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x56228071a2b8 <line:432:22>
| `-NonNullAttr 0x56228071a310 <col:63, col:77> 1
|-FunctionDecl 0x56228071a538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x56228071a358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56228071a3d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x56228071a5e8 <line:435:22>
| |-NonNullAttr 0x56228071a640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x56228071a678 <col:100> "" ""
|-FunctionDecl 0x56228071a888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x56228071a6c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56228071a748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x56228071a938 <line:438:22>
| |-NonNullAttr 0x56228071a990 <col:63, col:77> 1
| `-DeprecatedAttr 0x56228071a9d8 <col:97> "" ""
|-FunctionDecl 0x56228071abc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56228071aa28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56228071aaa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56228071ac78 <line:441:22>
| `-NonNullAttr 0x56228071acd0 <col:63, col:80> 1 2
|-FunctionDecl 0x56228071ae50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56228071ad18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56228071ad90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56228071af00 <line:444:22>
| `-NonNullAttr 0x56228071af58 <col:63, col:77> 1
|-FunctionDecl 0x56228071b248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56228071afa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56228071b028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x56228071b0a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56228071b300 <line:448:22>
| `-NonNullAttr 0x56228071b358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x56228071b608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x56228071b3b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56228071b430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x56228071b4a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56228071b6c0 <col:43>
| `-NonNullAttr 0x56228071b718 <col:84, col:98> 1
|-FunctionDecl 0x56228071ba20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56228071b768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56228071b7e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x56228071b878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x56228071bad8 <line:453:22>
| `-NonNullAttr 0x56228071bb30 <col:63, col:77> 3
|-FunctionDecl 0x56228071be08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56228071bb78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56228071bbf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x56228071bc88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56228071bec0 <line:457:22>
| `-NonNullAttr 0x56228071bf18 <col:63, col:80> 2 3
|-FunctionDecl 0x56228071c108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x56228071bf68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56228071bfe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x56228071c1b8 <line:459:22>
|-FunctionDecl 0x56228071c588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x56228071c280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x56228071c420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x56228071c638 <col:52, col:69> 1 2
|-FunctionDecl 0x56228071c7e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x56228071c6c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x56228071c740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x56228071c9f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x56228071c8a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x56228071c928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x56228071cb48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x56228071cab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x56228071cc88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x56228071cd28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x56228071cdd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x56228071cec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x56228071cf30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x56228071d100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_8/rfi010_tso.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x56228071d1f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x56228071d2b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x56228071d250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x56228071cdb0 '__pthread_unwind_buf_t'
| |   `-Record 0x56228071cd28 ''
| `-AlignedAttr 0x56228071d308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x56228071d380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x56228071d4e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x56228071d548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x56228071d5b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x56228071d618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x56228071d820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56228071d710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56228071da00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56228071d8d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56228071dbc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56228071dab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x56228071dc68 <line:488:22>
|-RecordDecl 0x56228071dcc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x56228071dfd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x56228071de38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x56228071deb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x56228071e088 <col:86>
| `-ReturnsTwiceAttr 0x56228071e0e0 <col:12> Implicit
|-FunctionDecl 0x56228071e408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56228071e1b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x56228071e2c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x56228071e4b8 <line:494:22>
| `-NonNullAttr 0x56228071e510 <col:63, col:77> 1
|-FunctionDecl 0x56228071e688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56228071e558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56228071e730 <line:496:22>
| `-NonNullAttr 0x56228071e788 <col:63, col:77> 1
|-FunctionDecl 0x56228071e890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56228071e7d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56228071e938 <line:498:22>
| `-NonNullAttr 0x56228071e990 <col:52, col:66> 1
|-FunctionDecl 0x56228071fad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56228071fa20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56228071fb80 <line:500:22>
| `-NonNullAttr 0x56228071fbd8 <col:52, col:66> 1
|-FunctionDecl 0x56228071fe18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56228071fc28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56228071fcb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56228071fec8 <col:36>
| `-NonNullAttr 0x56228071ff20 <col:66, col:83> 1 2
|-FunctionDecl 0x562280720020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56228071ff68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5622807200c8 <line:505:22>
| `-NonNullAttr 0x562280720120 <col:52, col:66> 1
|-FunctionDecl 0x5622807203b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5622807201d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562280720250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x562280720468 <line:509:22>
| `-NonNullAttr 0x5622807204c0 <col:63, col:80> 1 2
|-FunctionDecl 0x562280720788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x562280720508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562280720588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x562280720608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x562280720840 <line:513:22>
| `-NonNullAttr 0x562280720898 <col:63, col:80> 1 3
|-FunctionDecl 0x562280720a30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5622807208e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562280720ad8 <line:515:22>
| `-NonNullAttr 0x562280720b30 <col:63, col:77> 1
|-FunctionDecl 0x562280720d18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562280720be0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x562280720dc0 <line:517:22>
| `-NonNullAttr 0x562280720e18 <col:63, col:77> 1
|-FunctionDecl 0x562280720f20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562280720e68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x562280720fc8 <line:519:22>
| `-NonNullAttr 0x562280721020 <col:63, col:77> 1
|-FunctionDecl 0x562280721248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562280721068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5622807210e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5622807212f8 <line:523:22>
| `-NonNullAttr 0x562280721350 <col:63, col:80> 1 2
|-FunctionDecl 0x562280721558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562280721398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562280721418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x562280721608 <line:526:22>
| `-NonNullAttr 0x562280721660 <col:63, col:77> 1
|-FunctionDecl 0x562280721808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5622807216a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562280721728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5622807218b8 <line:529:22>
| `-NonNullAttr 0x562280721910 <col:63, col:80> 1 2
|-FunctionDecl 0x562280721b00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562280721958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562280721a40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x562280721bb0 <line:531:22>
| `-NonNullAttr 0x562280721c08 <col:63, col:77> 1
|-FunctionDecl 0x562280721db8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562280721c58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562280721cd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x562280721e68 <line:535:22>
| `-NonNullAttr 0x562280721ec0 <col:63, col:80> 1 2
|-FunctionDecl 0x562280722048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562280721f08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562280721f88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5622807220f8 <line:538:22>
| `-NonNullAttr 0x562280722150 <col:63, col:77> 1
|-FunctionDecl 0x5622807222f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562280722198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562280722218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5622807223a8 <line:542:22>
| `-NonNullAttr 0x562280722400 <col:63, col:80> 1 2
|-FunctionDecl 0x562280722588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562280722448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5622807224c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x562280722638 <line:545:22>
| `-NonNullAttr 0x562280722690 <col:63, col:77> 1
|-FunctionDecl 0x562280722878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5622807226d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x562280722758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x562280722928 <line:548:22>
| `-NonNullAttr 0x562280722980 <col:63, col:80> 1 2
|-FunctionDecl 0x562280723b38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5622807229c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562280723a78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x562280723be8 <line:551:22>
| `-NonNullAttr 0x562280723c40 <col:63, col:77> 1
|-FunctionDecl 0x562280723f78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x562280723d20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562280723e30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x562280724028 <col:29>
| `-NonNullAttr 0x562280724080 <col:70, col:84> 1
|-FunctionDecl 0x5622807241f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5622807240c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5622807242a0 <line:556:22>
| `-NonNullAttr 0x5622807242f8 <col:63, col:77> 1
|-FunctionDecl 0x562280724400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562280724348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5622807244a8 <line:558:22>
| `-NonNullAttr 0x562280724500 <col:52, col:66> 1
|-FunctionDecl 0x562280724600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562280724548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5622807246a8 <line:560:19>
| `-NonNullAttr 0x562280724700 <col:49, col:63> 1
|-FunctionDecl 0x562280724938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562280724748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5622807247d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5622807249e8 <col:39>
| `-NonNullAttr 0x562280724a70 <col:69, col:86> 1 2
|-FunctionDecl 0x562280724b70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562280724ab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562280724c18 <line:565:22>
| `-NonNullAttr 0x562280724c70 <col:52, col:66> 1
|-FunctionDecl 0x562280724d70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562280724cb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562280724e18 <line:567:22>
| `-NonNullAttr 0x562280724e70 <col:52, col:66> 1
|-FunctionDecl 0x562280725028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562280724eb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562280724f48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5622807250d8 <col:39>
| `-NonNullAttr 0x562280725130 <col:69, col:86> 1 2
|-FunctionDecl 0x562280725230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562280725178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5622807252d8 <line:572:22>
| `-NonNullAttr 0x562280725330 <col:52, col:66> 1
|-FunctionDecl 0x562280725518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5622807253e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5622807255c0 <line:574:22>
| `-NonNullAttr 0x562280725618 <col:63, col:77> 1
|-FunctionDecl 0x562280725720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x562280725668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5622807257c8 <line:576:22>
| `-NonNullAttr 0x562280725820 <col:63, col:77> 1
|-FunctionDecl 0x562280725a80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562280725868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5622807258e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x562280725b30 <line:580:22>
| `-NonNullAttr 0x562280725b88 <col:63, col:80> 1 2
|-FunctionDecl 0x562280725d98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562280725bd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562280725c58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x562280725e48 <line:583:22>
| `-NonNullAttr 0x562280725ea0 <col:63, col:77> 1
|-FunctionDecl 0x562280726048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562280725ee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x562280725f68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5622807260f8 <line:587:22>
| `-NonNullAttr 0x562280726150 <col:63, col:80> 1 2
|-FunctionDecl 0x5622807262d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562280726198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562280726218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x562280726388 <col:36>
| `-NonNullAttr 0x5622807263e0 <col:77, col:91> 1
|-FunctionDecl 0x562280726718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5622807264c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5622807265d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5622807267c8 <line:592:22>
| `-NonNullAttr 0x562280726820 <col:63, col:77> 1
|-FunctionDecl 0x562280726998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562280726868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562280726a40 <line:594:22>
| `-NonNullAttr 0x562280726ac0 <col:63, col:77> 1
|-FunctionDecl 0x562280726bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562280726b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562280726c68 <line:596:22>
| `-NonNullAttr 0x562280726cc0 <col:52, col:66> 1
|-FunctionDecl 0x562280726dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562280726d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562280726e68 <line:598:22>
| `-NonNullAttr 0x562280726ec0 <col:52, col:66> 1
|-FunctionDecl 0x5622807270e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x562280726f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562280726f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x562280727198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x5622807274c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562280727218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562280727290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562280727320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x562280727580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x562280727798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562280727660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x562280727840 <line:607:22>
| `-NonNullAttr 0x562280727898 <col:63, col:77> 1
|-FunctionDecl 0x5622807279a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5622807278e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x562280727a48 <line:609:22>
| `-NonNullAttr 0x562280727ad0 <col:63, col:77> 1
|-FunctionDecl 0x562280727cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562280727b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562280727b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x562280727da8 <line:613:22>
| `-NonNullAttr 0x562280727e00 <col:63, col:80> 1 2
|-FunctionDecl 0x562280728008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x562280727e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x562280727ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5622807280b8 <col:37>
| `-NonNullAttr 0x562280728110 <col:78, col:92> 1
|-FunctionDecl 0x562280728328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x562280728158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562280728200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5622807283d8 <line:619:22>
| `-NonNullAttr 0x562280728430 <col:63, col:80> 1 2
|-FunctionDecl 0x5622807285f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x562280728478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5622807284f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5622807286a8 <line:622:22>
| `-NonNullAttr 0x562280728700 <col:63, col:77> 1
|-FunctionDecl 0x5622807289a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5622807287e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x562280728860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x562280728a58 <line:624:22>
| `-NonNullAttr 0x562280728ae0 <col:63, col:77> 1
|-FunctionDecl 0x562280728c58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562280728b28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562280728d00 <line:626:22>
| `-NonNullAttr 0x562280728d58 <col:63, col:77> 1
|-FunctionDecl 0x562280728e60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562280728da8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562280728f08 <line:628:22>
| `-NonNullAttr 0x562280728f60 <col:52, col:66> 1
|-FunctionDecl 0x562280729060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562280728fa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562280729108 <line:630:22>
| `-NonNullAttr 0x562280729160 <col:52, col:66> 1
|-FunctionDecl 0x562280729260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5622807291a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562280729308 <line:632:22>
| `-NonNullAttr 0x562280729360 <col:52, col:66> 1
|-FunctionDecl 0x562280729738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x562280729440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x562280729550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5622807295d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5622807297f0 <line:636:22>
| `-NonNullAttr 0x562280729848 <col:63, col:77> 1
|-FunctionDecl 0x5622807299c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x562280729898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562280729a70 <line:638:22>
| `-NonNullAttr 0x56228072ab00 <col:63, col:77> 1
|-FunctionDecl 0x56228072ac00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56228072ab48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56228072aca8 <line:640:22>
| `-NonNullAttr 0x56228072ad00 <col:52, col:66> 1
|-FunctionDecl 0x56228072aee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56228072adb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56228072af90 <line:642:22>
| `-NonNullAttr 0x56228072afe8 <col:63, col:77> 1
|-FunctionDecl 0x56228072b0f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56228072b038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56228072b198 <line:644:22>
| `-NonNullAttr 0x56228072b1f0 <col:63, col:77> 1
|-FunctionDecl 0x56228072b418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56228072b238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56228072b2b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x56228072b4c8 <line:648:22>
| `-NonNullAttr 0x56228072b520 <col:63, col:80> 1 2
|-FunctionDecl 0x56228072b728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x56228072b568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x56228072b5e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x56228072b7d8 <line:651:22>
| `-NonNullAttr 0x56228072b830 <col:63, col:77> 1
|-FunctionDecl 0x56228072bb98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x56228072b910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x56228072ba30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x56228072bc48 <line:654:22>
| `-NonNullAttr 0x56228072bca0 <col:63, col:77> 1
|-FunctionDecl 0x56228072bdf8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x56228072bce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56228072bea0 <col:69>
|-FunctionDecl 0x56228072c018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x56228072bf08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56228072c0c0 <col:72>
|-FunctionDecl 0x56228072c2f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x56228072c128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x56228072c1d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x56228072c3a8 <col:44>
|-FunctionDecl 0x56228072c5c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x56228072c410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56228072c488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x56228072c678 <line:661:22>
| `-NonNullAttr 0x56228072c6d0 <col:63, col:77> 2
|-FunctionDecl 0x56228072cb30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x56228072c7b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x56228072c8c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x56228072c9d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x56228072cbe8 <col:47>
|-FunctionDecl 0x56228072ccf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x56228072cc58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56228072ce48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x56228072cdb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56228072cf10 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x56228072cfd0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x56228072d090 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x56228072d148 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x56228072d1c8 prev 0x56228072d148 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x56228072d230 <col:24> 'int' 0
|-VarDecl 0x56228072d268 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x56228072d2e8 prev 0x56228072d268 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x56228072d350 <col:27> 'int' 0
|-VarDecl 0x56228072d388 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x56228072d408 prev 0x56228072d388 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x56228072d470 <col:27> 'int' 0
|-VarDecl 0x56228072d4a8 <line:677:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x56228072d528 prev 0x56228072d4a8 <line:678:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x56228072d590 <col:27> 'int' 0
|-VarDecl 0x56228072d5c0 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x56228072d638 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x56228072d6b8 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x56228072d738 prev 0x56228072d6b8 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x56228072d7a0 <col:9> 'int' 0
|-VarDecl 0x56228072d7d8 <line:683:1, col:5> col:5 used y 'int'
|-VarDecl 0x56228072d858 prev 0x56228072d7d8 <line:684:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x56228072d8c0 <col:9> 'int' 0
|-VarDecl 0x56228072d8f0 <line:685:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x56228072d970 <line:686:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x56228072d9e8 <line:687:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x56228072da60 <line:688:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x56228072db00 <line:689:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x56228072db78 <line:690:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x56228072dbf0 <line:691:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x56228072dc68 <line:692:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x56228072dce0 <line:693:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x56228072dd60 <line:694:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x56228072dde0 <line:695:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x56228072de58 <line:696:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x56228072ded8 <line:697:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x56228072df50 <line:698:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x56228072dfc8 <line:699:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x56228072e040 <line:700:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x56228072e158 prev 0x56228072ccf0 <line:701:1, line:730:1> line:701:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x56228072e0c0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562280731198 <line:702:1, line:730:1>
|   |-CallExpr 0x56228072e268 <line:703:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56228072e250 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56228072e200 <col:3> 'void ()' Function 0x5622806d3fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56228072e2c8 <line:704:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56228072e288 <col:3> 'int' lvalue Var 0x56228072d738 'x' 'int'
|   | `-IntegerLiteral 0x56228072e2a8 <col:7> 'int' 1
|   |-CallExpr 0x56228072e320 <line:705:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56228072e308 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56228072e2e8 <col:3> 'void ()' Function 0x5622806d4060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56228072e378 <line:706:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56228072e360 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56228072e340 <col:3> 'void ()' Function 0x5622806d3fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x56228072e3d0 <line:707:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56228072e3b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56228072e398 <col:3> 'void ()' Function 0x5622806d4060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56228072e428 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56228072e410 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56228072e3f0 <col:3> 'void ()' Function 0x5622806d3fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56228072e4f8 <line:709:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x56228072e448 <col:3> '_Bool' lvalue Var 0x56228072dfc8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x56228072e4d8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x56228072e4c0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x56228072e468 <col:19> '_Bool (void)' Function 0x5622806d3770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x56228072e590 <line:710:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x56228072e518 <col:3> '_Bool' lvalue Var 0x56228072e040 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x56228072e570 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x56228072e558 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x56228072e538 <col:19> '_Bool (void)' Function 0x5622806d3770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x56228072e608 <line:711:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56228072e5b0 <col:3> '_Bool' lvalue Var 0x56228072d8f0 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56228072e5f0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56228072e5d0 <col:21> '_Bool' lvalue Var 0x56228072e040 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56228072e680 <line:712:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56228072e628 <col:3> 'int' lvalue Var 0x56228072d970 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56228072e668 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56228072e648 <col:15> 'int' lvalue Var 0x56228072d858 'y' 'int'
|   |-BinaryOperator 0x56228072eab8 <line:713:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x56228072e6a0 <col:3> 'int' lvalue Var 0x56228072d858 'y' 'int'
|   | `-ConditionalOperator 0x56228072ea88 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x56228072e8b0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x56228072e7d0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x56228072e6f8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x56228072e6e0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x56228072e6c0 <col:8> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x56228072e7b0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x56228072e748 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x56228072e730 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56228072e710 <col:27> '_Bool' lvalue Var 0x56228072da60 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x56228072e798 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x56228072e780 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x56228072e760 <col:46> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x56228072e890 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x56228072e828 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x56228072e810 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x56228072e7f0 <col:65> '_Bool' lvalue Var 0x56228072da60 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x56228072e878 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x56228072e860 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x56228072e840 <col:84> '_Bool' lvalue Var 0x56228072dbf0 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x56228072ea70 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56228072e8d0 <col:101> 'int' lvalue Var 0x56228072d858 'y' 'int'
|   |   `-ParenExpr 0x56228072ea50 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x56228072ea20 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x56228072e990 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56228072e948 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56228072e930 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56228072e8f0 <col:106> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56228072e978 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56228072e960 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56228072e910 <col:124> '_Bool' lvalue Var 0x56228072da60 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x56228072e9f0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56228072e9b0 <col:141> 'int' lvalue Var 0x56228072dde0 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x56228072ea08 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56228072e9d0 <col:153> 'int' lvalue Var 0x56228072ded8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x56228072efe0 <line:714:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56228072ead8 <col:3> 'int' lvalue Var 0x56228072dde0 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x56228072efb0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56228072ef80 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56228072ef68 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56228072eb10 <col:15> '_Bool' lvalue Var 0x56228072e040 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56228072ef98 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56228072eb30 <col:31> 'int' lvalue Var 0x56228072dde0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x56228072ef48 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56228072ef18 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56228072ed40 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56228072ec60 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56228072eb88 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56228072eb70 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56228072eb50 <col:45> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56228072ec40 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56228072ebd8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56228072ebc0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56228072eba0 <col:64> '_Bool' lvalue Var 0x56228072da60 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x56228072ec28 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56228072ec10 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56228072ebf0 <col:83> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56228072ed20 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56228072ecb8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56228072eca0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56228072ec80 <col:102> '_Bool' lvalue Var 0x56228072da60 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x56228072ed08 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56228072ecf0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56228072ecd0 <col:121> '_Bool' lvalue Var 0x56228072dbf0 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x56228072ef00 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56228072ed60 <col:138> 'int' lvalue Var 0x56228072dde0 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x56228072eee0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56228072eeb0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56228072ee20 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56228072edd8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56228072edc0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56228072ed80 <col:151> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56228072ee08 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56228072edf0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56228072eda0 <col:169> '_Bool' lvalue Var 0x56228072da60 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x56228072ee80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56228072ee40 <col:186> 'int' lvalue Var 0x56228072dde0 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x56228072ee98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56228072ee60 <col:198> 'int' lvalue Var 0x56228072dde0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x56228072f4f0 <line:715:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56228072f000 <col:3> 'int' lvalue Var 0x56228072ded8 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x56228072f4c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56228072f490 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56228072f478 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56228072f020 <col:15> '_Bool' lvalue Var 0x56228072e040 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56228072f4a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56228072f040 <col:31> 'int' lvalue Var 0x56228072ded8 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x56228072f458 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56228072f428 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56228072f250 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56228072f170 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56228072f098 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56228072f080 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56228072f060 <col:45> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56228072f150 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56228072f0e8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56228072f0d0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56228072f0b0 <col:64> '_Bool' lvalue Var 0x56228072da60 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x56228072f138 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56228072f120 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56228072f100 <col:83> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56228072f230 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56228072f1c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56228072f1b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56228072f190 <col:102> '_Bool' lvalue Var 0x56228072da60 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x56228072f218 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56228072f200 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56228072f1e0 <col:121> '_Bool' lvalue Var 0x56228072dbf0 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x56228072f410 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56228072f270 <col:138> 'int' lvalue Var 0x56228072ded8 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x56228072f3f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56228072f3c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56228072f330 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56228072f2e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56228072f2d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56228072f290 <col:151> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56228072f318 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56228072f300 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56228072f2b0 <col:169> '_Bool' lvalue Var 0x56228072da60 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x56228072f390 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56228072f350 <col:186> 'int' lvalue Var 0x56228072ded8 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x56228072f3a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56228072f370 <col:198> 'int' lvalue Var 0x56228072ded8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x56228072fa98 <line:716:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56228072f510 <col:3> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56228072fa80 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56228072fa50 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56228072fa08 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56228072f9f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56228072f530 <col:20> '_Bool' lvalue Var 0x56228072e040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56228072fa38 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56228072fa20 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56228072f550 <col:36> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56228072f9d0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56228072f9a0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56228072f760 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56228072f680 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56228072f5a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56228072f590 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56228072f570 <col:55> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56228072f660 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56228072f5f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56228072f5e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56228072f5c0 <col:74> '_Bool' lvalue Var 0x56228072da60 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x56228072f648 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56228072f630 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56228072f610 <col:93> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56228072f740 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56228072f6d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56228072f6c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56228072f6a0 <col:112> '_Bool' lvalue Var 0x56228072da60 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x56228072f728 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56228072f710 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56228072f6f0 <col:131> '_Bool' lvalue Var 0x56228072dbf0 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x56228072f988 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56228072f970 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56228072f780 <col:148> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56228072f950 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56228072f920 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56228072f840 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56228072f7f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56228072f7e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56228072f7a0 <col:166> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56228072f828 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56228072f810 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56228072f7c0 <col:184> '_Bool' lvalue Var 0x56228072da60 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x56228072f8d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56228072f890 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56228072f860 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56228072f908 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56228072f8f0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56228072f8b8 <col:212> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562280730088 <line:717:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56228072fab8 <col:3> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562280730070 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562280730040 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56228072fff8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56228072ffe0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56228072fad8 <col:20> '_Bool' lvalue Var 0x56228072e040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562280730028 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562280730010 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56228072fb20 <col:36> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56228072ffc0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56228072ff90 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56228072fd30 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56228072fc50 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56228072fb78 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56228072fb60 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56228072fb40 <col:55> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56228072fc30 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56228072fbc8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56228072fbb0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56228072fb90 <col:74> '_Bool' lvalue Var 0x56228072da60 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x56228072fc18 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56228072fc00 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56228072fbe0 <col:93> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56228072fd10 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56228072fca8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56228072fc90 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56228072fc70 <col:112> '_Bool' lvalue Var 0x56228072da60 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x56228072fcf8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56228072fce0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56228072fcc0 <col:131> '_Bool' lvalue Var 0x56228072dbf0 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x56228072ff78 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56228072ff60 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56228072fd50 <col:148> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56228072ff40 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56228072ff10 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56228072fe10 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56228072fdc8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56228072fdb0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56228072fd70 <col:166> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56228072fdf8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56228072fde0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56228072fd90 <col:184> '_Bool' lvalue Var 0x56228072da60 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x56228072fee0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56228072fe60 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56228072fe30 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56228072fef8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56228072feb8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56228072fe88 <col:219> 'int' 0
|   |-BinaryOperator 0x562280730630 <line:718:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5622807300a8 <col:3> '_Bool' lvalue Var 0x56228072da60 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562280730618 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5622807305e8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5622807305a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562280730588 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5622807300c8 <col:20> '_Bool' lvalue Var 0x56228072e040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5622807305d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5622807305b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5622807300e8 <col:36> '_Bool' lvalue Var 0x56228072da60 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x562280730568 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562280730538 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5622807302f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562280730218 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562280730140 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562280730128 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562280730108 <col:55> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5622807301f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562280730190 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562280730178 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562280730158 <col:74> '_Bool' lvalue Var 0x56228072da60 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5622807301e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5622807301c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5622807301a8 <col:93> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5622807302d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562280730270 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562280730258 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562280730238 <col:112> '_Bool' lvalue Var 0x56228072da60 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5622807302c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5622807302a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562280730288 <col:131> '_Bool' lvalue Var 0x56228072dbf0 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x562280730520 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562280730508 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562280730318 <col:148> '_Bool' lvalue Var 0x56228072da60 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x5622807304e8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5622807304b8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5622807303d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562280730390 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562280730378 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562280730338 <col:166> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5622807303c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5622807303a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562280730358 <col:184> '_Bool' lvalue Var 0x56228072da60 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x562280730470 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562280730428 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5622807303f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5622807304a0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562280730488 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562280730450 <col:212> '_Bool' lvalue Var 0x56228072da60 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x562280730c28 <line:719:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562280730650 <col:3> '_Bool' lvalue Var 0x56228072dbf0 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562280730c10 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562280730be0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562280730b98 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562280730b80 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562280730670 <col:20> '_Bool' lvalue Var 0x56228072e040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562280730bc8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562280730bb0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562280730690 <col:36> '_Bool' lvalue Var 0x56228072dbf0 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x562280730b60 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562280730b30 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5622807308a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5622807307c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5622807306e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5622807306d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5622807306b0 <col:55> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5622807307a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562280730738 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562280730720 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562280730700 <col:74> '_Bool' lvalue Var 0x56228072da60 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x562280730788 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562280730770 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562280730750 <col:93> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562280730880 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562280730818 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562280730800 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5622807307e0 <col:112> '_Bool' lvalue Var 0x56228072da60 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x562280730868 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562280730850 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562280730830 <col:131> '_Bool' lvalue Var 0x56228072dbf0 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x562280730ae8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562280730ad0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5622807308c0 <col:148> '_Bool' lvalue Var 0x56228072dbf0 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x562280730ab0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562280730a80 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562280730980 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562280730938 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562280730920 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5622807308e0 <col:166> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562280730968 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562280730950 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562280730900 <col:184> '_Bool' lvalue Var 0x56228072da60 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x562280730a50 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5622807309d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5622807309a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562280730a68 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562280730a28 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5622807309f8 <col:219> 'int' 0
|   |-BinaryOperator 0x562280730ca0 <line:720:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562280730c48 <col:3> 'int' lvalue Var 0x56228072d2e8 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x562280730c88 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562280730c68 <col:25> 'int' lvalue Var 0x56228072d858 'y' 'int'
|   |-BinaryOperator 0x562280730dd0 <line:721:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x562280730cc0 <col:3> 'int' lvalue Var 0x56228072d858 'y' 'int'
|   | `-ConditionalOperator 0x562280730da0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x562280730d58 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562280730d40 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562280730ce0 <col:7> '_Bool' lvalue Var 0x56228072d8f0 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x562280730d70 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562280730d00 <col:25> 'int' lvalue Var 0x56228072d970 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x562280730d88 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x562280730d20 <col:37> 'int' lvalue Var 0x56228072d858 'y' 'int'
|   |-BinaryOperator 0x562280730e68 <line:722:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x562280730df0 <col:3> '_Bool' lvalue Var 0x56228072d8f0 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x562280730e40 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562280730e10 <col:28> 'int' 0
|   |-CallExpr 0x562280730ec0 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562280730ea8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562280730e88 <col:3> 'void ()' Function 0x5622806d4060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562280730f18 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562280730f00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562280730ee0 <col:3> 'void ()' Function 0x5622806d3fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x562280730f70 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562280730f58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562280730f38 <col:3> 'void ()' Function 0x5622806d4060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562280730fc8 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562280730fb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562280730f90 <col:3> 'void ()' Function 0x5622806d3fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562280731080 <line:727:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562280730fe8 <col:3> 'int' lvalue Var 0x56228072d1c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562280731060 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562280731048 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562280731008 <col:22> 'int' lvalue Var 0x56228072d1c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562280731028 <col:41> 'int' 1
|   |-CallExpr 0x5622807310d8 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5622807310c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5622807310a0 <col:3> 'void ()' Function 0x5622806d4060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562280731188 <line:729:3, col:36>
|     `-CallExpr 0x562280731168 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562280731150 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5622807310f8 <col:10> 'void *(void)' Function 0x5622806d3ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562280731330 prev 0x56228072ce48 <line:731:1, line:774:1> line:731:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x562280731298 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562280735510 <line:732:1, line:774:1>
|   |-CallExpr 0x562280731410 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5622807313f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5622807313d8 <col:3> 'void ()' Function 0x5622806d3fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562280731488 <line:734:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562280731430 <col:3> 'int' lvalue Var 0x56228072ded8 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x562280731470 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562280731450 <col:15> 'int' lvalue Var 0x56228072dde0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5622807314e8 <line:735:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5622807314a8 <col:3> 'int' lvalue Var 0x56228072dde0 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x5622807314c8 <col:15> 'int' 1
|   |-BinaryOperator 0x562280731560 <line:736:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562280731508 <col:3> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562280731548 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562280731528 <col:20> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5622807315f8 <line:737:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562280731580 <col:3> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5622807315d0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5622807315a0 <col:27> 'int' 1
|   |-CallExpr 0x562280731778 <line:738:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x562280731760 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x562280731618 <col:3> 'void (int)' Function 0x5622806d3d28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x562280731718 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5622807316f8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5622807316d8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x562280731690 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x562280731678 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x562280731638 <col:23> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5622807316c0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5622807316a8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x562280731658 <col:41> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5622807317f8 <line:739:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5622807317a0 <col:3> '_Bool' lvalue Var 0x56228072db78 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5622807317e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5622807317c0 <col:20> '_Bool' lvalue Var 0x56228072d9e8 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x562280731870 <line:740:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562280731818 <col:3> '_Bool' lvalue Var 0x56228072dbf0 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562280731858 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562280731838 <col:20> '_Bool' lvalue Var 0x56228072da60 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5622807318e8 <line:741:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562280731890 <col:3> '_Bool' lvalue Var 0x56228072dc68 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5622807318d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5622807318b0 <col:20> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562280731980 <line:742:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562280731908 <col:3> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x562280731958 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562280731928 <col:27> 'int' 1
|   |-CallExpr 0x5622807319d8 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5622807319c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5622807319a0 <col:3> 'void ()' Function 0x5622806d4060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562280731a30 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562280731a18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5622807319f8 <col:3> 'void ()' Function 0x5622806d3fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562280731ac8 <line:745:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x562280731a50 <col:3> '_Bool' lvalue Var 0x56228072dfc8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x562280731aa8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x562280731a90 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x562280731a70 <col:19> '_Bool (void)' Function 0x5622806d3770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x562280731b78 <line:746:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x562280731ae8 <col:3> '_Bool' lvalue Var 0x56228072e040 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x562280731b58 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x562280731b40 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x562280731b08 <col:19> '_Bool (void)' Function 0x5622806d3770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x562280731bf0 <line:747:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x562280731b98 <col:3> '_Bool' lvalue Var 0x56228072d8f0 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x562280731bd8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562280731bb8 <col:21> '_Bool' lvalue Var 0x56228072e040 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x562280731c68 <line:748:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562280731c10 <col:3> 'int' lvalue Var 0x56228072d970 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x562280731c50 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562280731c30 <col:15> 'int' lvalue Var 0x56228072d858 'y' 'int'
|   |-BinaryOperator 0x5622807320a0 <line:749:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x562280731c88 <col:3> 'int' lvalue Var 0x56228072d858 'y' 'int'
|   | `-ConditionalOperator 0x562280732070 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x562280731e98 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x562280731db8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x562280731ce0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x562280731cc8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x562280731ca8 <col:8> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x562280731d98 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x562280731d30 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x562280731d18 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x562280731cf8 <col:27> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x562280731d80 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x562280731d68 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x562280731d48 <col:46> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x562280731e78 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x562280731e10 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x562280731df8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x562280731dd8 <col:65> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x562280731e60 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x562280731e48 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x562280731e28 <col:84> '_Bool' lvalue Var 0x56228072dc68 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x562280732058 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562280731eb8 <col:101> 'int' lvalue Var 0x56228072d858 'y' 'int'
|   |   `-ParenExpr 0x562280732038 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x562280732008 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x562280731f78 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562280731f30 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562280731f18 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562280731ed8 <col:106> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562280731f60 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562280731f48 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562280731ef8 <col:124> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x562280731fd8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562280731f98 <col:141> 'int' lvalue Var 0x56228072dde0 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x562280731ff0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562280731fb8 <col:153> 'int' lvalue Var 0x56228072ded8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5622807325b0 <line:750:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5622807320c0 <col:3> 'int' lvalue Var 0x56228072dde0 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x562280732580 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562280732550 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562280732538 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5622807320e0 <col:15> '_Bool' lvalue Var 0x56228072e040 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562280732568 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562280732100 <col:31> 'int' lvalue Var 0x56228072dde0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x562280732518 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5622807324e8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562280732310 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562280732230 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562280732158 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562280732140 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562280732120 <col:45> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562280732210 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5622807321a8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562280732190 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562280732170 <col:64> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5622807321f8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5622807321e0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5622807321c0 <col:83> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5622807322f0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562280732288 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562280732270 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562280732250 <col:102> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5622807322d8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5622807322c0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5622807322a0 <col:121> '_Bool' lvalue Var 0x56228072dc68 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5622807324d0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562280732330 <col:138> 'int' lvalue Var 0x56228072dde0 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x5622807324b0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562280732480 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5622807323f0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5622807323a8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562280732390 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562280732350 <col:151> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5622807323d8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5622807323c0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562280732370 <col:169> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x562280732450 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562280732410 <col:186> 'int' lvalue Var 0x56228072dde0 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x562280732468 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562280732430 <col:198> 'int' lvalue Var 0x56228072dde0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x562280732ac0 <line:751:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5622807325d0 <col:3> 'int' lvalue Var 0x56228072ded8 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x562280732a90 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562280732a60 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562280732a48 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5622807325f0 <col:15> '_Bool' lvalue Var 0x56228072e040 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562280732a78 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562280732610 <col:31> 'int' lvalue Var 0x56228072ded8 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x562280732a28 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5622807329f8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562280732820 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562280732740 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562280732668 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562280732650 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562280732630 <col:45> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562280732720 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5622807326b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5622807326a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562280732680 <col:64> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x562280732708 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5622807326f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5622807326d0 <col:83> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562280732800 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562280732798 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562280732780 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562280732760 <col:102> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5622807327e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5622807327d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5622807327b0 <col:121> '_Bool' lvalue Var 0x56228072dc68 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5622807329e0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562280732840 <col:138> 'int' lvalue Var 0x56228072ded8 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x5622807329c0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562280732990 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562280732900 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5622807328b8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5622807328a0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562280732860 <col:151> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5622807328e8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5622807328d0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562280732880 <col:169> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x562280732960 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562280732920 <col:186> 'int' lvalue Var 0x56228072ded8 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x562280732978 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562280732940 <col:198> 'int' lvalue Var 0x56228072ded8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x562280733078 <line:752:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562280732ae0 <col:3> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562280733060 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562280733030 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562280732fe8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562280732fd0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562280732b00 <col:20> '_Bool' lvalue Var 0x56228072e040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562280733018 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562280733000 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562280732b20 <col:36> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x562280732fb0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562280732f80 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562280732d40 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562280732c60 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562280732b88 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562280732b70 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562280732b50 <col:55> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562280732c40 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562280732bd8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562280732bc0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562280732ba0 <col:74> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x562280732c28 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562280732c10 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562280732bf0 <col:93> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562280732d20 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562280732cb8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562280732ca0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562280732c80 <col:112> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x562280732d08 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562280732cf0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562280732cd0 <col:131> '_Bool' lvalue Var 0x56228072dc68 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x562280732f68 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562280732f50 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562280732d60 <col:148> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x562280732f30 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562280732f00 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562280732e20 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562280732dd8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562280732dc0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562280732d80 <col:166> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562280732e08 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562280732df0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562280732da0 <col:184> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x562280732eb8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562280732e70 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562280732e40 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562280732ee8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562280732ed0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562280732e98 <col:212> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562280733640 <line:753:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562280733098 <col:3> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562280733628 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5622807335f8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5622807335b0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562280733598 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5622807330b8 <col:20> '_Bool' lvalue Var 0x56228072e040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5622807335e0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5622807335c8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5622807330d8 <col:36> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x562280733578 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562280733548 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5622807332e8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562280733208 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562280733130 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562280733118 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5622807330f8 <col:55> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5622807331e8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562280733180 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562280733168 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562280733148 <col:74> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5622807331d0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5622807331b8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562280733198 <col:93> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5622807332c8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562280733260 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562280733248 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562280733228 <col:112> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5622807332b0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562280733298 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562280733278 <col:131> '_Bool' lvalue Var 0x56228072dc68 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x562280733530 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562280733518 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562280733308 <col:148> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5622807334f8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5622807334c8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5622807333c8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562280733380 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562280733368 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562280733328 <col:166> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5622807333b0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562280733398 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562280733348 <col:184> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x562280733498 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562280733418 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5622807333e8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5622807334b0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562280733470 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562280733440 <col:219> 'int' 0
|   |-BinaryOperator 0x562280733c08 <line:754:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562280733660 <col:3> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562280733bf0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562280733bc0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562280733b78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562280733b60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562280733680 <col:20> '_Bool' lvalue Var 0x56228072e040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562280733ba8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562280733b90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5622807336a0 <col:36> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x562280733b20 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562280733af0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5622807338b0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5622807337d0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5622807336f8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5622807336e0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5622807336c0 <col:55> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5622807337b0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562280733748 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562280733730 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562280733710 <col:74> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x562280733798 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562280733780 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562280733760 <col:93> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562280733890 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562280733828 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562280733810 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5622807337f0 <col:112> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x562280733878 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562280733860 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562280733840 <col:131> '_Bool' lvalue Var 0x56228072dc68 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x562280733ad8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562280733ac0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5622807338d0 <col:148> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x562280733aa0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562280733a70 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562280733990 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562280733948 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562280733930 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5622807338f0 <col:166> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562280733978 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562280733960 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562280733910 <col:184> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x562280733a28 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5622807339e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5622807339b0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562280733a58 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562280733a40 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562280733a08 <col:212> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5622807341d0 <line:755:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562280733c28 <col:3> '_Bool' lvalue Var 0x56228072dc68 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5622807341b8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562280734188 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562280734140 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562280734128 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562280733c48 <col:20> '_Bool' lvalue Var 0x56228072e040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562280734170 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562280734158 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562280733c68 <col:36> '_Bool' lvalue Var 0x56228072dc68 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x562280734108 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5622807340d8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562280733e78 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562280733d98 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562280733cc0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562280733ca8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562280733c88 <col:55> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562280733d78 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562280733d10 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562280733cf8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562280733cd8 <col:74> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x562280733d60 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562280733d48 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562280733d28 <col:93> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562280733e58 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562280733df0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562280733dd8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562280733db8 <col:112> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x562280733e40 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562280733e28 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562280733e08 <col:131> '_Bool' lvalue Var 0x56228072dc68 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5622807340c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5622807340a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562280733e98 <col:148> '_Bool' lvalue Var 0x56228072dc68 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x562280734088 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562280734058 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562280733f58 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562280733f10 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562280733ef8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562280733eb8 <col:166> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562280733f40 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562280733f28 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562280733ed8 <col:184> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x562280734028 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562280733fa8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562280733f78 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562280734040 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562280734000 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562280733fd0 <col:219> 'int' 0
|   |-BinaryOperator 0x562280734248 <line:756:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5622807341f0 <col:3> 'int' lvalue Var 0x56228072d408 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x562280734230 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562280734210 <col:25> 'int' lvalue Var 0x56228072d858 'y' 'int'
|   |-BinaryOperator 0x562280734378 <line:757:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x562280734268 <col:3> 'int' lvalue Var 0x56228072d858 'y' 'int'
|   | `-ConditionalOperator 0x562280734348 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x562280734300 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5622807342e8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562280734288 <col:7> '_Bool' lvalue Var 0x56228072d8f0 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x562280734318 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5622807342a8 <col:25> 'int' lvalue Var 0x56228072d970 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x562280734330 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5622807342c8 <col:37> 'int' lvalue Var 0x56228072d858 'y' 'int'
|   |-BinaryOperator 0x562280734410 <line:758:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x562280734398 <col:3> '_Bool' lvalue Var 0x56228072d8f0 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5622807343e8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5622807343b8 <col:28> 'int' 0
|   |-CallExpr 0x562280734468 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562280734450 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562280734430 <col:3> 'void ()' Function 0x5622806d4060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5622807344c0 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5622807344a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562280734488 <col:3> 'void ()' Function 0x5622806d3fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562280734538 <line:761:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5622807344e0 <col:3> 'int' lvalue Var 0x56228072d528 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x562280734520 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562280734500 <col:25> 'int' lvalue Var 0x56228072d738 'x' 'int'
|   |-CallExpr 0x562280734590 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562280734578 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562280734558 <col:3> 'void ()' Function 0x5622806d4060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5622807345e8 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5622807345d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5622807345b0 <col:3> 'void ()' Function 0x5622806d3fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5622807348d0 <line:764:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562280734608 <col:3> 'int' lvalue Var 0x56228072d858 'y' 'int'
|   | `-ConditionalOperator 0x5622807348a0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5622807346c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562280734680 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562280734668 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562280734628 <col:7> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5622807346b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562280734698 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562280734648 <col:25> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x562280734888 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5622807346e8 <col:42> 'int' lvalue Var 0x56228072dde0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x562280734868 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562280734838 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5622807347a8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562280734760 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562280734748 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562280734708 <col:55> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562280734790 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562280734778 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562280734728 <col:73> '_Bool' lvalue Var 0x56228072dc68 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x562280734808 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5622807347c8 <col:90> 'int' lvalue Var 0x56228072ded8 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562280734820 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5622807347e8 <col:102> 'int' lvalue Var 0x56228072d858 'y' 'int'
|   |-BinaryOperator 0x562280734ad8 <line:765:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5622807348f0 <col:3> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562280734ac0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562280734a90 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5622807349b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562280734968 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562280734950 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562280734910 <col:20> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562280734998 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562280734980 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562280734930 <col:38> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562280734a48 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562280734a00 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5622807349d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562280734a78 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562280734a60 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562280734a28 <col:66> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562280734dd8 <line:766:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562280734af8 <col:3> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562280734dc0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562280734d90 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562280734cb0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562280734bd0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562280734b88 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562280734b70 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562280734b18 <col:20> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562280734bb8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562280734ba0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562280734b38 <col:38> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x562280734c90 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562280734c48 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562280734c30 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562280734bf0 <col:56> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562280734c78 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562280734c60 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562280734c10 <col:74> '_Bool' lvalue Var 0x56228072dc68 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562280734d48 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562280734d00 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562280734cd0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562280734d78 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562280734d60 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562280734d28 <col:102> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562280734fe0 <line:767:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562280734df8 <col:3> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562280734fc8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562280734f98 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562280734eb8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562280734e70 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562280734e58 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562280734e18 <col:20> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562280734ea0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562280734e88 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562280734e38 <col:38> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562280734f50 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562280734f08 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562280734ed8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562280734f80 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562280734f68 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562280734f30 <col:66> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5622807352c8 <line:768:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562280735000 <col:3> '_Bool' lvalue Var 0x56228072dc68 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5622807352b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562280735280 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5622807351a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5622807350c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562280735078 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562280735060 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562280735020 <col:20> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5622807350a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562280735090 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562280735040 <col:38> '_Bool' lvalue Var 0x56228072db00 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x562280735180 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562280735138 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562280735120 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5622807350e0 <col:56> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562280735168 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562280735150 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562280735100 <col:74> '_Bool' lvalue Var 0x56228072dc68 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562280735238 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5622807351f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5622807351c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562280735268 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562280735250 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562280735218 <col:102> '_Bool' lvalue Var 0x56228072dc68 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x562280735320 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562280735308 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5622807352e8 <col:3> 'void ()' Function 0x5622806d4060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562280735378 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562280735360 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562280735340 <col:3> 'void ()' Function 0x5622806d3fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562280735430 <line:771:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562280735398 <col:3> 'int' lvalue Var 0x56228072d1c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562280735410 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5622807353f8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5622807353b8 <col:22> 'int' lvalue Var 0x56228072d1c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5622807353d8 <col:41> 'int' 1
|   |-CallExpr 0x562280735488 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562280735470 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562280735450 <col:3> 'void ()' Function 0x5622806d4060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562280735500 <line:773:3, col:36>
|     `-CallExpr 0x5622807354e0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5622807354c8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5622807354a8 <col:10> 'void *(void)' Function 0x5622806d3ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562280735688 prev 0x56228072cf10 <line:775:1, line:777:1> line:775:6 fence 'void ()'
| `-CompoundStmt 0x562280735728 <line:776:1, line:777:1>
|-FunctionDecl 0x562280735758 prev 0x56228072cfd0 <line:778:1, line:780:1> line:778:6 isync 'void ()'
| `-CompoundStmt 0x5622807357f8 <line:779:1, line:780:1>
|-FunctionDecl 0x562280735828 prev 0x56228072d090 <line:781:1, line:783:1> line:781:6 lwfence 'void ()'
| `-CompoundStmt 0x5622807358c8 <line:782:1, line:783:1>
`-FunctionDecl 0x562280735938 <line:784:1, line:806:1> line:784:5 main 'int ()'
  `-CompoundStmt 0x562280737300 <line:785:1, line:806:1>
    |-DeclStmt 0x562280735a50 <line:786:3, col:18>
    | `-VarDecl 0x5622807359e8 <col:3, col:13> col:13 used t1775 'pthread_t':'unsigned long'
    |-CallExpr 0x562280735c78 <line:787:3, col:54> 'int'
    | |-ImplicitCastExpr 0x562280735c60 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562280735a68 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5622807145b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562280735aa8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562280735a88 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5622807359e8 't1775' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562280735cb8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562280735b20 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x562280735af8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562280735ac0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x562280735cd0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562280735b40 <col:39> 'void *(void *)' Function 0x56228072e158 'P0' 'void *(void *)'
    | `-ParenExpr 0x562280735be0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x562280735bb8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562280735b80 <col:52> 'int' 0
    |-DeclStmt 0x562280735d60 <line:788:3, col:18>
    | `-VarDecl 0x562280735cf8 <col:3, col:13> col:13 used t1776 'pthread_t':'unsigned long'
    |-CallExpr 0x562280735f08 <line:789:3, col:54> 'int'
    | |-ImplicitCastExpr 0x562280735ef0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562280735d78 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5622807145b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562280735db8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562280735d98 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562280735cf8 't1776' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562280735f48 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562280735e30 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x562280735e08 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562280735dd0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x562280735f60 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562280735e50 <col:39> 'void *(void *)' Function 0x562280731330 'P1' 'void *(void *)'
    | `-ParenExpr 0x562280735ed0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x562280735ea8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562280735e70 <col:52> 'int' 0
    |-CallExpr 0x562280735fb0 <line:790:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562280735f98 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562280735f78 <col:3> 'void ()' Function 0x5622806d3fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562280736080 <line:791:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x562280735fd0 <col:3> '_Bool' lvalue Var 0x56228072d5c0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x562280736068 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x562280736048 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x562280736030 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x562280735ff0 <col:21> 'int' lvalue Var 0x56228072d1c8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x562280736010 <col:41> 'int' 2
    |-CallExpr 0x5622807360d8 <line:792:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5622807360c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5622807360a0 <col:3> 'void ()' Function 0x5622806d4060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562280736150 <line:793:3, col:36> 'void'
    | |-ImplicitCastExpr 0x562280736138 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5622807360f8 <col:3> 'void (int)' Function 0x5622806d3940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x562280736190 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x562280736178 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x562280736118 <col:21> '_Bool' lvalue Var 0x56228072d5c0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5622807361e0 <line:794:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5622807361c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5622807361a8 <col:3> 'void ()' Function 0x5622806d3fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5622807364c8 <line:795:3, col:103> 'int' '='
    | |-DeclRefExpr 0x562280736200 <col:3> 'int' lvalue Var 0x56228072d858 'y' 'int'
    | `-ConditionalOperator 0x562280736498 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5622807362c0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x562280736278 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x562280736260 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x562280736220 <col:7> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5622807362a8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x562280736290 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x562280736240 <col:25> '_Bool' lvalue Var 0x56228072d9e8 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x562280736480 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5622807362e0 <col:42> 'int' lvalue Var 0x56228072dde0 'y$w_buff0' 'int'
    |   `-ParenExpr 0x562280736460 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x562280736430 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5622807363a0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x562280736358 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x562280736340 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x562280736300 <col:55> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x562280736388 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x562280736370 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x562280736320 <col:73> '_Bool' lvalue Var 0x56228072db78 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x562280736400 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5622807363c0 <col:90> 'int' lvalue Var 0x56228072ded8 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x562280736418 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5622807363e0 <col:102> 'int' lvalue Var 0x56228072d858 'y' 'int'
    |-BinaryOperator 0x5622807366d0 <line:796:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5622807364e8 <col:3> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5622807366b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562280736688 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5622807365a8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562280736560 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562280736548 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x562280736508 <col:20> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562280736590 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562280736578 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562280736528 <col:38> '_Bool' lvalue Var 0x56228072d9e8 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562280736640 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5622807365f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5622807365c8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562280736670 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562280736658 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562280736620 <col:66> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5622807369b8 <line:797:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5622807366f0 <col:3> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5622807369a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562280736970 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562280736890 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5622807367b0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562280736768 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562280736750 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562280736710 <col:20> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562280736798 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562280736780 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562280736730 <col:38> '_Bool' lvalue Var 0x56228072d9e8 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562280736870 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562280736828 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562280736810 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5622807367d0 <col:56> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562280736858 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562280736840 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5622807367f0 <col:74> '_Bool' lvalue Var 0x56228072db78 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562280736928 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5622807368e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5622807368b0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562280736958 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562280736940 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562280736908 <col:102> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x562280736bd8 <line:798:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5622807369d8 <col:3> '_Bool' lvalue Var 0x56228072d9e8 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562280736bc0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562280736b90 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x562280736a98 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562280736a50 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562280736a38 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5622807369f8 <col:20> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562280736a80 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562280736a68 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562280736a18 <col:38> '_Bool' lvalue Var 0x56228072d9e8 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562280736b30 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562280736ae8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562280736ab8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562280736b60 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562280736b48 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562280736b10 <col:66> '_Bool' lvalue Var 0x56228072d9e8 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x562280736ec0 <line:799:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x562280736bf8 <col:3> '_Bool' lvalue Var 0x56228072db78 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562280736ea8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562280736e78 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562280736d98 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x562280736cb8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562280736c70 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562280736c58 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562280736c18 <col:20> '_Bool' lvalue Var 0x56228072de58 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562280736ca0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562280736c88 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562280736c38 <col:38> '_Bool' lvalue Var 0x56228072d9e8 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562280736d78 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562280736d30 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562280736d18 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x562280736cd8 <col:56> '_Bool' lvalue Var 0x56228072df50 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562280736d60 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562280736d48 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x562280736cf8 <col:74> '_Bool' lvalue Var 0x56228072db78 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562280736e30 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562280736de8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562280736db8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562280736e60 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562280736e48 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562280736e10 <col:102> '_Bool' lvalue Var 0x56228072db78 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x562280736f18 <line:800:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562280736f00 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562280736ee0 <col:3> 'void ()' Function 0x5622806d4060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562280736f70 <line:801:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562280736f58 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562280736f38 <col:3> 'void ()' Function 0x5622806d3fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5622807371a8 <line:802:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x562280736f90 <col:3> '_Bool' lvalue Var 0x56228072d638 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x562280737190 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x562280737178 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x562280737158 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x562280737138 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x5622807370a0 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x562280737008 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x562280736ff0 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x562280736fb0 <col:23> 'int' lvalue Var 0x56228072d2e8 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x562280736fd0 <col:46> 'int' 0
    |         | `-BinaryOperator 0x562280737080 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x562280737068 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x562280737028 <col:51> 'int' lvalue Var 0x56228072d408 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x562280737048 <col:74> 'int' 1
    |         `-BinaryOperator 0x562280737118 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x562280737100 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5622807370c0 <col:79> 'int' lvalue Var 0x56228072d528 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x5622807370e0 <col:102> 'int' 0
    |-CallExpr 0x562280737200 <line:803:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5622807371e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5622807371c8 <col:3> 'void ()' Function 0x5622806d4060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562280737278 <line:804:3, col:36> 'void'
    | |-ImplicitCastExpr 0x562280737260 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562280737220 <col:3> 'void (int)' Function 0x5622806d3d28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5622807372b8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5622807372a0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x562280737240 <col:21> '_Bool' lvalue Var 0x56228072d638 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5622807372f0 <line:805:3, col:10>
      `-IntegerLiteral 0x5622807372d0 <col:10> 'int' 0
