TranslationUnitDecl 0x559247fede18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x559247fee6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x559247fee3b0 '__int128'
|-TypedefDecl 0x559247fee748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x559247fee3d0 'unsigned __int128'
|-TypedefDecl 0x559247feea50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x559247fee820 'struct __NSConstantString_tag'
|   `-Record 0x559247fee7a0 '__NSConstantString_tag'
|-TypedefDecl 0x559247feeaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x559247feeab0 'char *'
|   `-BuiltinType 0x559247fedeb0 'char'
|-TypedefDecl 0x55924802d650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x559247feed90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x559247feebd0 'struct __va_list_tag'
|     `-Record 0x559247feeb50 '__va_list_tag'
|-FunctionDecl 0x55924802d790 <./split_8/mix044_pso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55924802d6c0 <col:31> col:34 'int'
|-FunctionDecl 0x55924802d958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55924802da80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55924802dbc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55924802db38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55924802ddf8 <col:40, col:99>
|   |-IfStmt 0x55924802ddc8 <col:42, col:88>
|   | |-UnaryOperator 0x55924802dca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55924802dc90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55924802dc70 <col:47> 'int' lvalue ParmVar 0x55924802db38 'expression' 'int'
|   | `-CompoundStmt 0x55924802ddb0 <col:59, col:88>
|   |   `-LabelStmt 0x55924802dd98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55924802dd28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55924802dd10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55924802dcc0 <col:68> 'void () __attribute__((noreturn))' Function 0x55924802da80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55924802dde0 <col:89>
|   `-ReturnStmt 0x55924802dde8 <col:91>
|-FunctionDecl 0x55924802de40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55924802df00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55924802e280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55924802dfb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55924802e038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55924802e0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55924802e138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55924802e340 <line:10:22>
|-FunctionDecl 0x559248054390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55924802e3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55924802e430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55924802e4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55924802e530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x559248054450 <line:13:22>
|-FunctionDecl 0x559248054700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5592480544c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x559248054540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5592480545c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5592480547b8 <line:15:22>
|-TypedefDecl 0x559248054828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x559247fedf70 'unsigned char'
|-TypedefDecl 0x559248054898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x559247fedf90 'unsigned short'
|-TypedefDecl 0x559248054908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x559247fedfb0 'unsigned int'
|-TypedefDecl 0x559248054978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x559247fedfd0 'unsigned long'
|-TypedefDecl 0x5592480549e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x559247feded0 'signed char'
|-TypedefDecl 0x559248054a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x559247fedf70 'unsigned char'
|-TypedefDecl 0x559248054ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x559247fedef0 'short'
|-TypedefDecl 0x559248054b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x559247fedf90 'unsigned short'
|-TypedefDecl 0x559248054ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x559247fedf10 'int'
|-TypedefDecl 0x559248054c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x559247fedfb0 'unsigned int'
|-TypedefDecl 0x559248054c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x559247fedf30 'long'
|-TypedefDecl 0x559248054cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x559247fedfd0 'unsigned long'
|-TypedefDecl 0x559248054d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x559247fedf30 'long'
|-TypedefDecl 0x559248054dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x559247fedfd0 'unsigned long'
|-TypedefDecl 0x559248054e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x559247fedfd0 'unsigned long'
|-TypedefDecl 0x559248054eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x559247fedfb0 'unsigned int'
|-TypedefDecl 0x559248054f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x559247fedfb0 'unsigned int'
|-TypedefDecl 0x559248054f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x559247fedfd0 'unsigned long'
|-TypedefDecl 0x559248055008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x559247fedfd0 'unsigned long'
|-TypedefDecl 0x559248055078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x559247fedfb0 'unsigned int'
|-TypedefDecl 0x5592480550e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x559247fedfd0 'unsigned long'
|-TypedefDecl 0x559248055158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x559247fedf30 'long'
|-TypedefDecl 0x5592480551c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x559247fedf30 'long'
|-TypedefDecl 0x559248055238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x559247fedf10 'int'
|-RecordDecl 0x559248055290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x559248055408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5592480554c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x559248055460 'struct __fsid_t' sugar
|   `-RecordType 0x559248055310 '__fsid_t'
|     `-Record 0x559248055290 ''
|-TypedefDecl 0x559248055548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x559247fedf30 'long'
|-TypedefDecl 0x5592480555b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x559247fedfd0 'unsigned long'
|-TypedefDecl 0x559248055628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x559247fedfd0 'unsigned long'
|-TypedefDecl 0x559248055698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x559247fedfb0 'unsigned int'
|-TypedefDecl 0x559248055708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x559247fedf30 'long'
|-TypedefDecl 0x559248055778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x559247fedfb0 'unsigned int'
|-TypedefDecl 0x5592480557e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x559247fedf30 'long'
|-TypedefDecl 0x559248055858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x559247fedf10 'int'
|-TypedefDecl 0x5592480558c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x559247fedf10 'int'
|-TypedefDecl 0x559248055938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x559247fedf10 'int'
|-TypedefDecl 0x5592480559a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x559247fee630 'void *'
|   `-BuiltinType 0x559247fede70 'void'
|-TypedefDecl 0x559248055a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x559247fedf30 'long'
|-TypedefDecl 0x559248055a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x559247fedf30 'long'
|-TypedefDecl 0x559248055af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x559247fedf30 'long'
|-TypedefDecl 0x559248055b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x559247fedfd0 'unsigned long'
|-TypedefDecl 0x559248055bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x559247fedfd0 'unsigned long'
|-TypedefDecl 0x559248055c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x559247fedfd0 'unsigned long'
|-TypedefDecl 0x559248055cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x559247fedfd0 'unsigned long'
|-TypedefDecl 0x559248055d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x559247fedf30 'long'
|-TypedefDecl 0x559248055d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x559247fedf30 'long'
|-TypedefDecl 0x559248055e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x559247fedf30 'long'
|-TypedefDecl 0x559248055e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x559247fedfd0 'unsigned long'
|-TypedefDecl 0x559248055f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x559248055ed0 '__off64_t' sugar
|   |-Typedef 0x5592480551c8 '__off64_t'
|   `-BuiltinType 0x559247fedf30 'long'
|-TypedefDecl 0x559248056000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x559248055fc0 '__quad_t *'
|   `-TypedefType 0x559248055f60 '__quad_t' sugar
|     |-Typedef 0x559248054d68 '__quad_t'
|     `-BuiltinType 0x559247fedf30 'long'
|-TypedefDecl 0x559248056070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x559247feeab0 'char *'
|   `-BuiltinType 0x559247fedeb0 'char'
|-TypedefDecl 0x5592480560e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x559247fedf30 'long'
|-TypedefDecl 0x559248056150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x559247fedfb0 'unsigned int'
|-FunctionDecl 0x559248056298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5592480561c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5592480575e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5592480575d8 <line:72:3, col:34>
|     `-CallExpr 0x559248057598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x559248057580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x559248057510 <col:10> '<builtin fn type>' Function 0x559248057380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5592480575c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x559248057530 <col:29> 'unsigned int' lvalue ParmVar 0x5592480561c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x559248057380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x559248057420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x559248057490 <col:10> Implicit
| `-ConstAttr 0x5592480574e8 <col:10> Implicit
|-FunctionDecl 0x559248057740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x559248057638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x559248057a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x559248057a48 <line:77:3, col:34>
|     `-CallExpr 0x559248057a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5592480579f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x559248057978 <col:10> '<builtin fn type>' Function 0x5592480577e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x559248057a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x559248057998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x559248057638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5592480577e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x559248057888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5592480578f8 <col:10> Implicit
| `-ConstAttr 0x559248057950 <col:10> Implicit
|-TypedefDecl 0x559248057a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x559247fedfd0 'unsigned long'
|-TypedefDecl 0x559248057b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x559248057ae0 '__time_t' sugar
|   |-Typedef 0x559248055708 '__time_t'
|   `-BuiltinType 0x559247fedf30 'long'
|-RecordDecl 0x559248057b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x559248057c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x559248057cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x559248057d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x559248057d10 '__pid_t' sugar
|   |-Typedef 0x559248055238 '__pid_t'
|   `-BuiltinType 0x559247fedf10 'int'
|-RecordDecl 0x559248057da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x559248057e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x559248057eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x559248057f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x559248057fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x559247fedfd0 'unsigned long'
|-RecordDecl 0x559248058030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5592480582c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5592480593a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x559248058310 'struct cpu_set_t' sugar
|   `-RecordType 0x5592480580b0 'cpu_set_t'
|     `-Record 0x559248058030 ''
|-FunctionDecl 0x559248059678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x559248059448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559248059550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x559248059728 <line:107:19>
|-FunctionDecl 0x559248059900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x559248059790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5592480599a8 <col:69>
|-FunctionDecl 0x559248059b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x559248059a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x559248059bc8 <col:64>
|-FunctionDecl 0x559248059e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x559248059c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559248059d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x559248059f38 <line:113:22>
|-FunctionDecl 0x55924805a1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x559248059fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55924805a098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55924805a268 <col:88>
|-FunctionDecl 0x55924805a588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55924805a2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55924805a3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55924805a440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55924805a640 <col:62>
|-FunctionDecl 0x55924805a7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55924805a6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55924805a860 <col:63>
|-FunctionDecl 0x55924805a988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55924805aa28 <col:47>
|-FunctionDecl 0x55924805ab30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55924805aa98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55924805abd8 <col:69>
|-FunctionDecl 0x55924805ace0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55924805ac48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55924805ad88 <col:69>
|-FunctionDecl 0x55924805b048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55924805adf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55924805af28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55924805b0f8 <col:88>
|-TypedefDecl 0x55924805b188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55924805b150 '__clock_t' sugar
|   |-Typedef 0x559248055548 '__clock_t'
|   `-BuiltinType 0x559247fedf30 'long'
|-TypedefDecl 0x55924805b218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55924805b1e0 '__clockid_t' sugar
|   |-Typedef 0x559248055938 '__clockid_t'
|   `-BuiltinType 0x559247fedf10 'int'
|-TypedefDecl 0x55924805b2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55924805b270 '__timer_t' sugar
|   |-Typedef 0x5592480559a8 '__timer_t'
|   `-PointerType 0x559247fee630 'void *'
|     `-BuiltinType 0x559247fede70 'void'
|-RecordDecl 0x55924805b300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55924805b3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55924805b440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55924805b4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55924805b510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55924805b578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55924805b5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55924805b648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55924805b6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55924805b718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55924805b780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55924805b7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55924805b838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55924805b908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55924805b978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55924805ba20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55924805bbf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55924805bc90 <col:45>
|-FunctionDecl 0x55924805be70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55924805bd60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55924805bf18 <col:54>
|-FunctionDecl 0x55924805c118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55924805bf80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55924805bff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55924805c1c8 <line:157:22>
| `-ConstAttr 0x55924805c220 <col:63>
|-FunctionDecl 0x55924805d050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55924805c318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55924805d0f8 <col:56>
|-FunctionDecl 0x55924805d4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55924805d168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55924805d1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55924805d260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55924805d358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55924805d560 <col:54>
|-RecordDecl 0x55924805d5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55924805d668 parent 0x559247fede18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55924805d8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55924805d968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55924805d9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55924805da38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55924805db28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55924805dc48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55924805dbf0 'struct __locale_struct *'
|   `-ElaboratedType 0x55924805db80 'struct __locale_struct' sugar
|     `-RecordType 0x55924805d640 'struct __locale_struct'
|       `-Record 0x55924805d5b8 '__locale_struct'
|-TypedefDecl 0x55924805dcf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55924805dcc0 '__locale_t' sugar
|   |-Typedef 0x55924805dc48 '__locale_t'
|   `-PointerType 0x55924805dbf0 'struct __locale_struct *'
|     `-ElaboratedType 0x55924805db80 'struct __locale_struct' sugar
|       `-RecordType 0x55924805d640 'struct __locale_struct'
|         `-Record 0x55924805d5b8 '__locale_struct'
|-FunctionDecl 0x55924805f110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55924805dd68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55924805dde0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55924805de60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55924805def0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55924805df68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55924805f1d8 <col:40>
|-FunctionDecl 0x55924805f3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55924805f2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55924805f470 <col:66>
|-FunctionDecl 0x55924805f580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55924805f4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55924805f628 <col:69>
|-FunctionDecl 0x55924805f858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55924805f690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55924805f720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55924805f908 <col:52>
|-FunctionDecl 0x55924805fab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55924805f970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55924805fa00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55924805fb60 <col:55>
|-FunctionDecl 0x55924805fcf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55924805fbe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55924805fda0 <col:62>
|-FunctionDecl 0x55924805ff18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55924805fe08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55924805ffc0 <col:60>
|-FunctionDecl 0x5592480602b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x559248060118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x559248060198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x559248060368 <col:44>
|-FunctionDecl 0x559248060578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5592480603d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559248060450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x559248060628 <col:49>
|-VarDecl 0x559248060728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5592480607a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x559248060828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5592480608f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x559248060a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x559248060ac0 <col:42>
|-VarDecl 0x559248060b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x559248060bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x559248060d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x559248060c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x559248060de0 <col:57>
|-FunctionDecl 0x559248060ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559248060e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x559248060f98 <col:56>
|-FunctionDecl 0x5592480610d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559248061018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x559248061178 <col:59>
|-FunctionDecl 0x559248061280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5592480611e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x559248061328 <col:48>
| `-ConstAttr 0x559248061380 <col:89>
|-FunctionDecl 0x5592480615e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x559248061438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5592480614c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x559248061848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5592480616d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559248061768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5592480618f8 <col:88>
|-FunctionDecl 0x559248061a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559248061960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5592480619f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x559248061b40 <col:88>
|-FunctionDecl 0x559248061d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x559248061ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559248061c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x559248061e08 <line:208:22>
|-FunctionDecl 0x559248062178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x559248061e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559248061ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x559248061f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x559248062010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x559248062478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x559248062278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x559248062350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x559248062528 <col:85>
|-FunctionDecl 0x559248062918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x559248062590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5592480626c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5592480627d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5592480629d0 <col:52>
|-FunctionDecl 0x559248062b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x559248062a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x559248062bf0 <col:61>
|-FunctionDecl 0x5592480630f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x559248062c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x559248062cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x559248062e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x559248062ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5592480631b0 <col:62>
|-FunctionDecl 0x5592480633c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x559248063218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5592480632a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x559248063478 <line:221:22>
|-FunctionDecl 0x559248063578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5592480634e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x559248063620 <col:65>
|-TypedefDecl 0x559248063690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x559247fedfd0 'unsigned long'
|-RecordDecl 0x5592480636e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x559248063830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x559248063898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559248063948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5592480638f0 'union pthread_attr_t' sugar
|   `-RecordType 0x559248063770 'union pthread_attr_t'
|     `-Record 0x5592480636e8 'pthread_attr_t'
|-RecordDecl 0x5592480639a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x559248063b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x559248063b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x559248063c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x559248063be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x559248063a20 'struct __pthread_internal_list'
|     `-Record 0x5592480639a0 '__pthread_internal_list'
|-RecordDecl 0x559248063cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x559248063d58 parent 0x559247fede18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x559248063e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559248063e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x559248063f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x559248063f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x559248063fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x559248064038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x559248068110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5592480681c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5592480682b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x559248068318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5592480684a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x559248068440 'union pthread_mutex_t' sugar
|   `-RecordType 0x559248063d30 'pthread_mutex_t'
|     `-Record 0x559248063cb0 ''
|-RecordDecl 0x559248068510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x559248068650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5592480686b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559248068770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x559248068710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x559248068590 'pthread_mutexattr_t'
|     `-Record 0x559248068510 ''
|-RecordDecl 0x5592480687e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x559248068888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x559248068950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5592480689b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x559248068a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x559248068a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x559248068af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x559248068b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x559248068bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x559248068c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x559248068ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_8/mix044_pso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_8/mix044_pso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x559248068dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x559248068e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x559248068f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x559248068f10 'union pthread_cond_t' sugar
|   `-RecordType 0x559248068860 'pthread_cond_t'
|     `-Record 0x5592480687e0 ''
|-RecordDecl 0x559248068fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55924806a130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55924806a198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55924806a250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55924806a1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x559248069060 'pthread_condattr_t'
|     `-Record 0x559248068fe0 ''
|-TypedefDecl 0x55924806a2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x559247fedfb0 'unsigned int'
|-TypedefDecl 0x55924806a348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x559247fedf10 'int'
|-RecordDecl 0x55924806a3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55924806a448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55924806a510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55924806a578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55924806a5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55924806a648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55924806a6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55924806a718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55924806a780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55924806a7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55924806a850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55924806a8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55924806a920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55924806a9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_8/mix044_pso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_8/mix044_pso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55924806aa78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55924806aae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55924806ac30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55924806abd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55924806a420 'pthread_rwlock_t'
|     `-Record 0x55924806a3a0 ''
|-RecordDecl 0x55924806aca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55924806ade0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55924806ae48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55924806af00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55924806aea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55924806ad20 'pthread_rwlockattr_t'
|     `-Record 0x55924806aca0 ''
|-TypedefDecl 0x55924806af88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x559247fedf14 'volatile int' volatile
|   `-BuiltinType 0x559247fedf10 'int'
|-RecordDecl 0x55924806afe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55924806c140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55924806c1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55924806c260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55924806c200 'union pthread_barrier_t' sugar
|   `-RecordType 0x55924806b060 'pthread_barrier_t'
|     `-Record 0x55924806afe0 ''
|-RecordDecl 0x55924806c2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55924806c3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55924806c438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55924806c4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55924806c490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55924806c350 'pthread_barrierattr_t'
|     `-Record 0x55924806c2d0 ''
|-TypedefDecl 0x55924806c608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55924806c5a0 'long [8]' 8 
|   `-BuiltinType 0x559247fedf30 'long'
|-EnumDecl 0x55924806c660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55924806c728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55924806c778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55924806c7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55924806c898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55924806c8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55924806c938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55924806c988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55924806ca10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55924806c9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x55924806c9d8 <col:26> 'int' EnumConstant 0x55924806c898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55924806ca98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55924806ca80 <col:29> 'int'
| |   `-DeclRefExpr 0x55924806ca60 <col:29> 'int' EnumConstant 0x55924806c8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55924806cb20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55924806cb08 <col:30> 'int'
| |   `-DeclRefExpr 0x55924806cae8 <col:30> 'int' EnumConstant 0x55924806c938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55924806cba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55924806cb90 <col:27> 'int'
|     `-DeclRefExpr 0x55924806cb70 <col:27> 'int' EnumConstant 0x55924806ca10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55924806cbf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55924806ccc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55924806cd50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55924806cd38 <col:30> 'int'
| |   `-DeclRefExpr 0x55924806cd18 <col:30> 'int' EnumConstant 0x55924806ccc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55924806cda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55924806ce28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55924806ce10 <col:29> 'int'
|     `-DeclRefExpr 0x55924806cdf0 <col:29> 'int' EnumConstant 0x55924806cda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55924806ce78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55924806cf48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55924806cf98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55924806cfe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55924806d038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55924806d150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55924806d1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55924806d1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55924806d278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55924806d260 <col:31> 'int'
|     `-DeclRefExpr 0x55924806d240 <col:31> 'int' EnumConstant 0x55924806d150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55924806d2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55924806d398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55924806d3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55924806d438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55924806d508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55924806d558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55924806d5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55924806d678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55924806d6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55924806d718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55924806d958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55924806d9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55924806da28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55924806db48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55924806db98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55924806dc68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55924806dcb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55924806dd08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55924806ddd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55924806de28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55924806e488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55924806df20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55924806e030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55924806e270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55924806e2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55924806e548 <col:47>
| |-NonNullAttr 0x55924806e5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55924806e5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55924806e700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55924806e630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55924806e958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55924806e7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55924806e838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55924806eb28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55924806ea18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55924806ebd0 <col:60>
|-FunctionDecl 0x55924806ed20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55924806edc0 <col:54>
| `-ConstAttr 0x55924806ee18 <col:95>
|-FunctionDecl 0x55924806efe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55924806ee50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55924806eec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55924806f098 <line:394:19>
| `-ConstAttr 0x55924806f0f0 <col:60>
|-FunctionDecl 0x559248070b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5592480709d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x559248070bb0 <col:71>
| `-NonNullAttr 0x559248070c08 <col:112, col:126> 1
|-FunctionDecl 0x559248070d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x559248070c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x559248070db8 <line:397:22>
| `-NonNullAttr 0x559248070e10 <col:63, col:77> 1
|-FunctionDecl 0x559248071038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x559248070e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x559248070ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5592480710e8 <line:400:22>
| `-NonNullAttr 0x559248071140 <col:63, col:80> 1 2
|-FunctionDecl 0x559248071348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559248071188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559248071208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5592480713f8 <line:403:22>
| `-NonNullAttr 0x559248071450 <col:63, col:77> 1
|-FunctionDecl 0x5592480716a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x559248071498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x559248071540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x559248071758 <line:406:22>
| `-NonNullAttr 0x5592480717b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5592480729e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5592480717f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559248071870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559248072a98 <line:409:22>
| `-NonNullAttr 0x559248072af0 <col:63, col:77> 1
|-FunctionDecl 0x559248072d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559248072b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559248072bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x559248072dd8 <line:412:22>
| `-NonNullAttr 0x559248072e30 <col:63, col:80> 1 2
|-FunctionDecl 0x559248073068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559248072e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x559248072f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x559248073118 <col:37>
| `-NonNullAttr 0x559248073170 <col:78, col:95> 1 2
|-FunctionDecl 0x559248073358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5592480731b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559248073238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x559248073408 <line:418:22>
| `-NonNullAttr 0x559248073460 <col:63, col:80> 1 2
|-FunctionDecl 0x5592480735e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5592480734a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559248073528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x559248073698 <line:420:22>
| `-NonNullAttr 0x5592480736f0 <col:63, col:77> 1
|-FunctionDecl 0x559248073898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559248073738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5592480737b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x559248073948 <line:423:22>
| `-NonNullAttr 0x5592480739c0 <col:63, col:80> 1 2
|-FunctionDecl 0x559248073b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559248073a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559248073a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x559248073bf8 <line:426:22>
| `-NonNullAttr 0x559248073c50 <col:63, col:77> 1
|-FunctionDecl 0x559248073df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559248073c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559248073d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x559248073ea8 <line:429:22>
| `-NonNullAttr 0x559248073f00 <col:63, col:80> 1 2
|-FunctionDecl 0x559248074088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559248073f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559248073fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x559248074138 <line:431:22>
| `-NonNullAttr 0x559248074190 <col:63, col:77> 1
|-FunctionDecl 0x5592480743b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5592480741d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559248074258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x559248074468 <line:434:22>
| |-NonNullAttr 0x5592480744c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5592480744f8 <col:100> "" ""
|-FunctionDecl 0x559248074708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x559248074548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5592480745c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5592480747b8 <line:437:22>
| |-NonNullAttr 0x559248074810 <col:63, col:77> 1
| `-DeprecatedAttr 0x559248074848 <col:97> "" ""
|-FunctionDecl 0x559248074a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x559248074898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559248074910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x559248074af8 <line:440:22>
| `-NonNullAttr 0x559248074b50 <col:63, col:80> 1 2
|-FunctionDecl 0x559248074cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x559248074b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559248074c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559248074d80 <line:443:22>
| `-NonNullAttr 0x559248074dd8 <col:63, col:77> 1
|-FunctionDecl 0x5592480750c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x559248074e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559248074ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x559248074f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x559248075180 <line:447:22>
| `-NonNullAttr 0x5592480751d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x559248075488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x559248075230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5592480752b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x559248075328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559248075540 <col:43>
| `-NonNullAttr 0x559248075598 <col:84, col:98> 1
|-FunctionDecl 0x559248075858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5592480755e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559248075668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5592480756f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x559248075910 <line:452:22>
| `-NonNullAttr 0x559248075968 <col:63, col:77> 3
|-FunctionDecl 0x559248075c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5592480759e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559248075a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x559248075af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x559248075d30 <line:456:22>
| `-NonNullAttr 0x559248075d88 <col:63, col:80> 2 3
|-FunctionDecl 0x559248075f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x559248075dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559248075e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x559248076028 <line:458:22>
|-FunctionDecl 0x5592480763f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5592480760f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x559248076290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5592480764a8 <col:52, col:69> 1 2
|-FunctionDecl 0x559248076650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x559248076530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5592480765b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x559248076838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x559248076718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x559248076798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5592480769f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5592480768f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x559248076b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x559248076bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x559248076c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x559248076d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x559248076dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x559248076fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_8/mix044_pso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x559248077098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x559248077150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5592480770f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x559248076c50 '__pthread_unwind_buf_t'
| |   `-Record 0x559248076bd0 ''
| `-AlignedAttr 0x5592480771a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x559248077220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x559248077380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5592480773e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x559248077450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5592480774b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5592480776c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5592480775b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x559248077808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x559248077778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x559248077a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5592480778c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x559248077aa8 <line:487:22>
|-RecordDecl 0x559248077b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x559248077e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x559248077c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x559248077cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x559248077ec8 <col:86>
| `-ReturnsTwiceAttr 0x559248077f20 <col:12> Implicit
|-FunctionDecl 0x559248078248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559248077ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x559248078100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5592480782f8 <line:493:22>
| `-NonNullAttr 0x559248078350 <col:63, col:77> 1
|-FunctionDecl 0x5592480784c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559248078398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559248078570 <line:495:22>
| `-NonNullAttr 0x5592480785c8 <col:63, col:77> 1
|-FunctionDecl 0x5592480786d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559248078618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559248078778 <line:497:22>
| `-NonNullAttr 0x5592480787d0 <col:52, col:66> 1
|-FunctionDecl 0x5592480788d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559248078818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559248078978 <line:499:22>
| `-NonNullAttr 0x5592480789d0 <col:52, col:66> 1
|-FunctionDecl 0x559248079c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559248079a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559248079ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559248079cd8 <col:36>
| `-NonNullAttr 0x559248079d30 <col:66, col:83> 1 2
|-FunctionDecl 0x559248079e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559248079d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559248079ed8 <line:504:22>
| `-NonNullAttr 0x559248079f30 <col:52, col:66> 1
|-FunctionDecl 0x55924807a1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559248079fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55924807a060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55924807a278 <line:508:22>
| `-NonNullAttr 0x55924807a2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55924807a598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55924807a318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55924807a398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55924807a418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55924807a650 <line:512:22>
| `-NonNullAttr 0x55924807a6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x55924807a7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55924807a6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55924807a858 <line:514:22>
| `-NonNullAttr 0x55924807a8b0 <col:63, col:77> 1
|-FunctionDecl 0x55924807aad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55924807a960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55924807ab80 <line:516:22>
| `-NonNullAttr 0x55924807abd8 <col:63, col:77> 1
|-FunctionDecl 0x55924807ace0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55924807ac28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55924807ad88 <line:518:22>
| `-NonNullAttr 0x55924807ade0 <col:63, col:77> 1
|-FunctionDecl 0x55924807b008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55924807ae28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55924807aea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55924807b0b8 <line:522:22>
| `-NonNullAttr 0x55924807b110 <col:63, col:80> 1 2
|-FunctionDecl 0x55924807b318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55924807b158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55924807b1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55924807b3c8 <line:525:22>
| `-NonNullAttr 0x55924807b420 <col:63, col:77> 1
|-FunctionDecl 0x55924807b5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55924807b468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55924807b4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55924807b678 <line:528:22>
| `-NonNullAttr 0x55924807b6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55924807b858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55924807b718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55924807b798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55924807b908 <line:530:22>
| `-NonNullAttr 0x55924807b960 <col:63, col:77> 1
|-FunctionDecl 0x55924807bb20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55924807b9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55924807ba40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55924807bbd0 <line:534:22>
| `-NonNullAttr 0x55924807bc28 <col:63, col:80> 1 2
|-FunctionDecl 0x55924807bdb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55924807bc78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55924807bcf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55924807be68 <line:537:22>
| `-NonNullAttr 0x55924807bec0 <col:63, col:77> 1
|-FunctionDecl 0x55924807c068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55924807bf08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55924807bf88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55924807c118 <line:541:22>
| `-NonNullAttr 0x55924807c170 <col:63, col:80> 1 2
|-FunctionDecl 0x55924807c2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55924807c1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55924807c238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55924807c3a8 <line:544:22>
| `-NonNullAttr 0x55924807c400 <col:63, col:77> 1
|-FunctionDecl 0x55924807c5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55924807c448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55924807c4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55924807c698 <line:547:22>
| `-NonNullAttr 0x55924807c6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55924807c878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55924807c738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55924807c7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55924807c928 <line:550:22>
| `-NonNullAttr 0x55924807c980 <col:63, col:77> 1
|-FunctionDecl 0x55924807dcf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55924807daa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55924807dbb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55924807dda8 <col:29>
| `-NonNullAttr 0x55924807de00 <col:70, col:84> 1
|-FunctionDecl 0x55924807df78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55924807de48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55924807e020 <line:555:22>
| `-NonNullAttr 0x55924807e078 <col:63, col:77> 1
|-FunctionDecl 0x55924807e180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55924807e0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55924807e228 <line:557:22>
| `-NonNullAttr 0x55924807e280 <col:52, col:66> 1
|-FunctionDecl 0x55924807e380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55924807e2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55924807e428 <line:559:19>
| `-NonNullAttr 0x55924807e480 <col:49, col:63> 1
|-FunctionDecl 0x55924807e6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55924807e4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55924807e558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55924807e768 <col:39>
| `-NonNullAttr 0x55924807e7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x55924807e8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55924807e808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55924807e968 <line:564:22>
| `-NonNullAttr 0x55924807e9c0 <col:52, col:66> 1
|-FunctionDecl 0x55924807eb28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55924807ea70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55924807ebd0 <line:566:22>
| `-NonNullAttr 0x55924807ec28 <col:52, col:66> 1
|-FunctionDecl 0x55924807ede8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55924807ec78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55924807ed08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55924807ee98 <col:39>
| `-NonNullAttr 0x55924807eef0 <col:69, col:86> 1 2
|-FunctionDecl 0x55924807eff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55924807ef38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55924807f098 <line:571:22>
| `-NonNullAttr 0x55924807f0f0 <col:52, col:66> 1
|-FunctionDecl 0x55924807f2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55924807f1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55924807f380 <line:573:22>
| `-NonNullAttr 0x55924807f3d8 <col:63, col:77> 1
|-FunctionDecl 0x55924807f4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55924807f428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55924807f588 <line:575:22>
| `-NonNullAttr 0x55924807f5e0 <col:63, col:77> 1
|-FunctionDecl 0x55924807f808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55924807f628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55924807f6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55924807f8b8 <line:579:22>
| `-NonNullAttr 0x55924807f910 <col:63, col:80> 1 2
|-FunctionDecl 0x55924807fb38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55924807f958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55924807f9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55924807fbe8 <line:582:22>
| `-NonNullAttr 0x55924807fc40 <col:63, col:77> 1
|-FunctionDecl 0x55924807fde8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55924807fc88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55924807fd08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55924807fe98 <line:586:22>
| `-NonNullAttr 0x55924807fef0 <col:63, col:80> 1 2
|-FunctionDecl 0x559248080078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55924807ff38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55924807ffb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x559248080128 <col:36>
| `-NonNullAttr 0x559248080180 <col:77, col:91> 1
|-FunctionDecl 0x5592480804b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x559248080260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559248080370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x559248080568 <line:591:22>
| `-NonNullAttr 0x5592480805c0 <col:63, col:77> 1
|-FunctionDecl 0x559248080738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559248080608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5592480807e0 <line:593:22>
| `-NonNullAttr 0x559248080838 <col:63, col:77> 1
|-FunctionDecl 0x559248080940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559248080888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5592480809e8 <line:595:22>
| `-NonNullAttr 0x559248080a40 <col:52, col:66> 1
|-FunctionDecl 0x559248080b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559248080aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559248080c00 <line:597:22>
| `-NonNullAttr 0x559248080c58 <col:52, col:66> 1
|-FunctionDecl 0x559248080e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x559248080ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559248080d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x559248080f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x559248081268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559248080fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559248081030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5592480810c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x559248081320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x559248081538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x559248081400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5592480815e0 <line:606:22>
| `-NonNullAttr 0x559248081638 <col:63, col:77> 1
|-FunctionDecl 0x559248081740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x559248081688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5592480817e8 <line:608:22>
| `-NonNullAttr 0x559248081840 <col:63, col:77> 1
|-FunctionDecl 0x559248081aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559248081888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x559248081908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x559248081b50 <line:612:22>
| `-NonNullAttr 0x559248081ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x559248081db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x559248081bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x559248081c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x559248081e68 <col:37>
| `-NonNullAttr 0x559248081ec0 <col:78, col:92> 1
|-FunctionDecl 0x5592480820d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x559248081f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x559248081fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x559248082188 <line:618:22>
| `-NonNullAttr 0x5592480821e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5592480823a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x559248082228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5592480822a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x559248082458 <line:621:22>
| `-NonNullAttr 0x5592480824b0 <col:63, col:77> 1
|-FunctionDecl 0x559248082758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x559248082590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x559248082610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x559248082808 <line:623:22>
| `-NonNullAttr 0x559248082860 <col:63, col:77> 1
|-FunctionDecl 0x5592480829d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5592480828a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559248082ab0 <line:625:22>
| `-NonNullAttr 0x559248082b08 <col:63, col:77> 1
|-FunctionDecl 0x559248082c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559248082b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559248082cb8 <line:627:22>
| `-NonNullAttr 0x559248082d10 <col:52, col:66> 1
|-FunctionDecl 0x559248082e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559248082d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559248082eb8 <line:629:22>
| `-NonNullAttr 0x559248082f10 <col:52, col:66> 1
|-FunctionDecl 0x559248083010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559248082f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5592480830b8 <line:631:22>
| `-NonNullAttr 0x559248083110 <col:52, col:66> 1
|-FunctionDecl 0x5592480834e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5592480831f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x559248083300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x559248083380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5592480835a0 <line:635:22>
| `-NonNullAttr 0x5592480835f8 <col:63, col:77> 1
|-FunctionDecl 0x559248083778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x559248083648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x559248083820 <line:637:22>
| `-NonNullAttr 0x559248083878 <col:63, col:77> 1
|-FunctionDecl 0x559248083980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5592480838c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x559248083a28 <line:639:22>
| `-NonNullAttr 0x559248083a80 <col:52, col:66> 1
|-FunctionDecl 0x559248084c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x559248084b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x559248084d30 <line:641:22>
| `-NonNullAttr 0x559248084d88 <col:63, col:77> 1
|-FunctionDecl 0x559248084e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x559248084dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x559248084f38 <line:643:22>
| `-NonNullAttr 0x559248084f90 <col:63, col:77> 1
|-FunctionDecl 0x5592480851b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559248084fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x559248085058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x559248085268 <line:647:22>
| `-NonNullAttr 0x5592480852c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5592480854c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x559248085308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x559248085388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x559248085578 <line:650:22>
| `-NonNullAttr 0x5592480855d0 <col:63, col:77> 1
|-FunctionDecl 0x559248085918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5592480856b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5592480857d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5592480859c8 <line:653:22>
| `-NonNullAttr 0x559248085a20 <col:63, col:77> 1
|-FunctionDecl 0x559248085b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x559248085a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x559248085c30 <col:69>
|-FunctionDecl 0x559248085da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x559248085c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x559248085e50 <col:72>
|-FunctionDecl 0x559248086088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x559248085eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x559248085f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x559248086138 <col:44>
|-FunctionDecl 0x559248086358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5592480861a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559248086218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x559248086408 <line:660:22>
| `-NonNullAttr 0x559248086460 <col:63, col:77> 2
|-FunctionDecl 0x5592480868a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x559248086540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x559248086650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x559248086760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x559248086960 <col:47>
|-FunctionDecl 0x559248086af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5592480869d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559248086c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x559248086bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559248086da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x559248086d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559248086ef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x559248086e60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559248086fc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x559248087080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x559248087140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5592480871f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x559248087278 prev 0x5592480871f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5592480872e0 <col:24> 'int' 0
|-VarDecl 0x559248087318 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x559248087398 prev 0x559248087318 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x559248087400 <col:27> 'int' 0
|-VarDecl 0x559248087438 <line:676:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x5592480874b8 prev 0x559248087438 <line:677:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x559248087520 <col:27> 'int' 0
|-VarDecl 0x559248087558 <line:678:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x5592480875d8 prev 0x559248087558 <line:679:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x559248087640 <col:27> 'int' 0
|-VarDecl 0x559248087678 <line:680:1, col:5> col:5 used a 'int'
|-VarDecl 0x5592480876f8 prev 0x559248087678 <line:681:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x559248087760 <col:9> 'int' 0
|-VarDecl 0x559248087798 <line:682:1, col:5> col:5 used b 'int'
|-VarDecl 0x559248087818 prev 0x559248087798 <line:683:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x559248087880 <col:9> 'int' 0
|-VarDecl 0x5592480878b0 <line:684:1, col:7> col:7 used b$flush_delayed '_Bool'
|-VarDecl 0x559248087930 <line:685:1, col:5> col:5 used b$mem_tmp 'int'
|-VarDecl 0x5592480879a8 <line:686:1, col:7> col:7 used b$r_buff0_thd0 '_Bool'
|-VarDecl 0x559248087a20 <line:687:1, col:7> col:7 used b$r_buff0_thd1 '_Bool'
|-VarDecl 0x559248087b00 <line:688:1, col:7> col:7 used b$r_buff0_thd2 '_Bool'
|-VarDecl 0x559248087b78 <line:689:1, col:7> col:7 used b$r_buff0_thd3 '_Bool'
|-VarDecl 0x559248087bf0 <line:690:1, col:7> col:7 used b$r_buff0_thd4 '_Bool'
|-VarDecl 0x559248087c68 <line:691:1, col:7> col:7 used b$r_buff1_thd0 '_Bool'
|-VarDecl 0x559248087ce0 <line:692:1, col:7> col:7 used b$r_buff1_thd1 '_Bool'
|-VarDecl 0x559248087d58 <line:693:1, col:7> col:7 used b$r_buff1_thd2 '_Bool'
|-VarDecl 0x559248087dd0 <line:694:1, col:7> col:7 used b$r_buff1_thd3 '_Bool'
|-VarDecl 0x559248087e48 <line:695:1, col:7> col:7 used b$r_buff1_thd4 '_Bool'
|-VarDecl 0x559248087ec0 <line:696:1, col:7> col:7 b$read_delayed '_Bool'
|-VarDecl 0x559248087f40 <line:697:1, col:6> col:6 b$read_delayed_var 'int *'
|-VarDecl 0x559248087fc0 <line:698:1, col:5> col:5 used b$w_buff0 'int'
|-VarDecl 0x559248088038 <line:699:1, col:7> col:7 used b$w_buff0_used '_Bool'
|-VarDecl 0x5592480880b8 <line:700:1, col:5> col:5 used b$w_buff1 'int'
|-VarDecl 0x559248088130 <line:701:1, col:7> col:7 used b$w_buff1_used '_Bool'
|-VarDecl 0x5592480881a8 <line:702:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x559248088220 <line:703:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5592480882a0 <line:704:1, col:5> col:5 used x 'int'
|-VarDecl 0x559248088320 prev 0x5592480882a0 <line:705:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x559248088388 <col:9> 'int' 0
|-VarDecl 0x5592480883c0 <line:706:1, col:5> col:5 used y 'int'
|-VarDecl 0x559248088440 prev 0x5592480883c0 <line:707:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5592480884a8 <col:9> 'int' 0
|-VarDecl 0x5592480884e0 <line:708:1, col:5> col:5 used z 'int'
|-VarDecl 0x559248088560 prev 0x5592480884e0 <line:709:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5592480885c8 <col:9> 'int' 0
|-VarDecl 0x5592480885f8 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x559248088670 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x559248088788 prev 0x559248086af0 <line:712:1, line:741:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5592480886f0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55924808a028 <line:713:1, line:741:1>
|   |-CallExpr 0x559248088898 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559248088880 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559248088830 <col:3> 'void ()' Function 0x55924802de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559248088910 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5592480888b8 <col:3> 'int' lvalue Var 0x5592480880b8 'b$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5592480888f8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5592480888d8 <col:15> 'int' lvalue Var 0x559248087fc0 'b$w_buff0' 'int'
|   |-BinaryOperator 0x559248088970 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559248088930 <col:3> 'int' lvalue Var 0x559248087fc0 'b$w_buff0' 'int'
|   | `-IntegerLiteral 0x559248088950 <col:15> 'int' 1
|   |-BinaryOperator 0x5592480889e8 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559248088990 <col:3> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5592480889d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5592480889b0 <col:20> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559248088a80 <line:718:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x559248088a08 <col:3> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x559248088a58 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559248088a28 <col:27> 'int' 1
|   |-CallExpr 0x559248088c18 <line:719:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x559248088c00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x559248088aa0 <col:3> 'void (int)' Function 0x55924802dbc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x559248088bb0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x559248088b90 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x559248088b70 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x559248088b28 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x559248088b10 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x559248088ac0 <col:23> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x559248088b58 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x559248088b40 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x559248088ae0 <col:41> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559248088c98 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559248088c40 <col:3> '_Bool' lvalue Var 0x559248087c68 'b$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x559248088c80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559248088c60 <col:20> '_Bool' lvalue Var 0x5592480879a8 'b$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x559248088d10 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559248088cb8 <col:3> '_Bool' lvalue Var 0x559248087ce0 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559248088cf8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559248088cd8 <col:20> '_Bool' lvalue Var 0x559248087a20 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559248088d88 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559248088d30 <col:3> '_Bool' lvalue Var 0x559248087d58 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559248088d70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559248088d50 <col:20> '_Bool' lvalue Var 0x559248087b00 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559248088e00 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559248088da8 <col:3> '_Bool' lvalue Var 0x559248087dd0 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559248088de8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559248088dc8 <col:20> '_Bool' lvalue Var 0x559248087b78 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x559248088e78 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559248088e20 <col:3> '_Bool' lvalue Var 0x559248087e48 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559248088e60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559248088e40 <col:20> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x559248088f10 <line:725:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x559248088e98 <col:3> '_Bool' lvalue Var 0x559248087a20 'b$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x559248088ee8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559248088eb8 <col:27> 'int' 1
|   |-CallExpr 0x559248088f68 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559248088f50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559248088f30 <col:3> 'void ()' Function 0x55924802df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559248088fc0 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559248088fa8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559248088f88 <col:3> 'void ()' Function 0x55924802de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559248089020 <line:728:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559248088fe0 <col:3> 'int' lvalue Var 0x559248088320 'x' 'int'
|   | `-IntegerLiteral 0x559248089000 <col:7> 'int' 1
|   |-CallExpr 0x559248089078 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559248089060 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559248089040 <col:3> 'void ()' Function 0x55924802df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5592480890d0 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5592480890b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559248089098 <col:3> 'void ()' Function 0x55924802de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5592480893b8 <line:731:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5592480890f0 <col:3> 'int' lvalue Var 0x559248087818 'b' 'int'
|   | `-ConditionalOperator 0x559248089388 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5592480891b0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559248089168 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559248089150 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559248089110 <col:7> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559248089198 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559248089180 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559248089130 <col:25> '_Bool' lvalue Var 0x559248087a20 'b$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x559248089370 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5592480891d0 <col:42> 'int' lvalue Var 0x559248087fc0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x559248089350 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559248089320 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559248089290 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559248089248 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559248089230 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5592480891f0 <col:55> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559248089278 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559248089260 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559248089210 <col:73> '_Bool' lvalue Var 0x559248087ce0 'b$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5592480892f0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5592480892b0 <col:90> 'int' lvalue Var 0x5592480880b8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559248089308 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5592480892d0 <col:102> 'int' lvalue Var 0x559248087818 'b' 'int'
|   |-BinaryOperator 0x5592480895c0 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5592480893d8 <col:3> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5592480895a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559248089578 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559248089498 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559248089450 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559248089438 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5592480893f8 <col:20> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559248089480 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559248089468 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559248089418 <col:38> '_Bool' lvalue Var 0x559248087a20 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559248089530 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5592480894e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5592480894b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559248089560 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559248089548 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559248089510 <col:66> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5592480898a8 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5592480895e0 <col:3> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559248089890 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559248089860 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559248089780 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5592480896a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559248089658 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559248089640 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559248089600 <col:20> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559248089688 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559248089670 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559248089620 <col:38> '_Bool' lvalue Var 0x559248087a20 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x559248089760 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559248089718 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559248089700 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5592480896c0 <col:56> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559248089748 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559248089730 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5592480896e0 <col:74> '_Bool' lvalue Var 0x559248087ce0 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559248089818 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5592480897d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5592480897a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559248089848 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559248089830 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5592480897f8 <col:102> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559248089ab0 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5592480898c8 <col:3> '_Bool' lvalue Var 0x559248087a20 'b$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559248089a98 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559248089a68 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559248089988 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559248089940 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559248089928 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5592480898e8 <col:20> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559248089970 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559248089958 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559248089908 <col:38> '_Bool' lvalue Var 0x559248087a20 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559248089a20 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5592480899d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5592480899a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559248089a50 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559248089a38 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559248089a00 <col:66> '_Bool' lvalue Var 0x559248087a20 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559248089da8 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559248089ad0 <col:3> '_Bool' lvalue Var 0x559248087ce0 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559248089d90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559248089d60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559248089c80 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559248089ba0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559248089b58 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559248089b40 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559248089af0 <col:20> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559248089b88 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559248089b70 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559248089b20 <col:38> '_Bool' lvalue Var 0x559248087a20 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x559248089c60 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559248089c18 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559248089c00 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559248089bc0 <col:56> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559248089c48 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559248089c30 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559248089be0 <col:74> '_Bool' lvalue Var 0x559248087ce0 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559248089d18 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559248089cd0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559248089ca0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559248089d48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559248089d30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559248089cf8 <col:102> '_Bool' lvalue Var 0x559248087ce0 'b$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x559248089e00 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559248089de8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559248089dc8 <col:3> 'void ()' Function 0x55924802df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559248089e58 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559248089e40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559248089e20 <col:3> 'void ()' Function 0x55924802de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559248089f10 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559248089e78 <col:3> 'int' lvalue Var 0x559248087278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559248089ef0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559248089ed8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559248089e98 <col:22> 'int' lvalue Var 0x559248087278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559248089eb8 <col:41> 'int' 1
|   |-CallExpr 0x559248089f68 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559248089f50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559248089f30 <col:3> 'void ()' Function 0x55924802df00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55924808a018 <line:740:3, col:36>
|     `-CallExpr 0x559248089ff8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559248089fe0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559248089f88 <col:10> 'void *(void)' Function 0x55924802d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55924808a1c0 prev 0x559248086c48 <line:742:1, line:761:1> line:742:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55924808a128 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55924808b3f8 <line:743:1, line:761:1>
|   |-CallExpr 0x55924808a2a0 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55924808a288 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55924808a268 <col:3> 'void ()' Function 0x55924802de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55924808a300 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55924808a2c0 <col:3> 'int' lvalue Var 0x559248088320 'x' 'int'
|   | `-IntegerLiteral 0x55924808a2e0 <col:7> 'int' 2
|   |-CallExpr 0x55924808a358 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55924808a340 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55924808a320 <col:3> 'void ()' Function 0x55924802df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55924808a3b0 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55924808a398 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55924808a378 <col:3> 'void ()' Function 0x55924802de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55924808a428 <line:748:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55924808a3d0 <col:3> 'int' lvalue Var 0x559248087398 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55924808a410 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55924808a3f0 <col:25> 'int' lvalue Var 0x559248088440 'y' 'int'
|   |-CallExpr 0x55924808a480 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55924808a468 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55924808a448 <col:3> 'void ()' Function 0x55924802df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55924808a4d8 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55924808a4c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55924808a4a0 <col:3> 'void ()' Function 0x55924802de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55924808a7c0 <line:751:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55924808a4f8 <col:3> 'int' lvalue Var 0x559248087818 'b' 'int'
|   | `-ConditionalOperator 0x55924808a790 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55924808a5b8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55924808a570 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55924808a558 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55924808a518 <col:7> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55924808a5a0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55924808a588 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55924808a538 <col:25> '_Bool' lvalue Var 0x559248087b00 'b$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55924808a778 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55924808a5d8 <col:42> 'int' lvalue Var 0x559248087fc0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55924808a758 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55924808a728 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55924808a698 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55924808a650 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55924808a638 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55924808a5f8 <col:55> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55924808a680 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55924808a668 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55924808a618 <col:73> '_Bool' lvalue Var 0x559248087d58 'b$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55924808a6f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55924808a6b8 <col:90> 'int' lvalue Var 0x5592480880b8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55924808a710 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55924808a6d8 <col:102> 'int' lvalue Var 0x559248087818 'b' 'int'
|   |-BinaryOperator 0x55924808a9c8 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55924808a7e0 <col:3> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55924808a9b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55924808a980 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55924808a8a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55924808a858 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55924808a840 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55924808a800 <col:20> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55924808a888 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55924808a870 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55924808a820 <col:38> '_Bool' lvalue Var 0x559248087b00 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55924808a938 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55924808a8f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55924808a8c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55924808a968 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55924808a950 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55924808a918 <col:66> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55924808acc0 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55924808a9e8 <col:3> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55924808aca8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55924808ac78 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55924808ab98 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55924808aaa8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55924808aa60 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55924808aa48 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55924808aa08 <col:20> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55924808aa90 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55924808aa78 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55924808aa28 <col:38> '_Bool' lvalue Var 0x559248087b00 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55924808ab78 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55924808ab30 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55924808ab08 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55924808aac8 <col:56> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55924808ab60 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55924808ab48 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55924808aae8 <col:74> '_Bool' lvalue Var 0x559248087d58 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55924808ac30 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55924808abe8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55924808abb8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55924808ac60 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55924808ac48 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55924808ac10 <col:102> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55924808aec8 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55924808ace0 <col:3> '_Bool' lvalue Var 0x559248087b00 'b$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55924808aeb0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55924808ae80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55924808ada0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55924808ad58 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55924808ad40 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55924808ad00 <col:20> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55924808ad88 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55924808ad70 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55924808ad20 <col:38> '_Bool' lvalue Var 0x559248087b00 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55924808ae38 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55924808adf0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55924808adc0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55924808ae68 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55924808ae50 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55924808ae18 <col:66> '_Bool' lvalue Var 0x559248087b00 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55924808b1b0 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55924808aee8 <col:3> '_Bool' lvalue Var 0x559248087d58 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55924808b198 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55924808b168 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55924808b088 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55924808afa8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55924808af60 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55924808af48 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55924808af08 <col:20> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55924808af90 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55924808af78 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55924808af28 <col:38> '_Bool' lvalue Var 0x559248087b00 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55924808b068 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55924808b020 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55924808b008 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55924808afc8 <col:56> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55924808b050 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55924808b038 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55924808afe8 <col:74> '_Bool' lvalue Var 0x559248087d58 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55924808b120 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55924808b0d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55924808b0a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55924808b150 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55924808b138 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55924808b100 <col:102> '_Bool' lvalue Var 0x559248087d58 'b$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55924808b208 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55924808b1f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55924808b1d0 <col:3> 'void ()' Function 0x55924802df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55924808b260 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55924808b248 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55924808b228 <col:3> 'void ()' Function 0x55924802de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55924808b318 <line:758:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55924808b280 <col:3> 'int' lvalue Var 0x559248087278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55924808b2f8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55924808b2e0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55924808b2a0 <col:22> 'int' lvalue Var 0x559248087278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55924808b2c0 <col:41> 'int' 1
|   |-CallExpr 0x55924808b370 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55924808b358 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55924808b338 <col:3> 'void ()' Function 0x55924802df00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55924808b3e8 <line:760:3, col:36>
|     `-CallExpr 0x55924808b3c8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55924808b3b0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55924808b390 <col:10> 'void *(void)' Function 0x55924802d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55924808b540 prev 0x559248086da0 <line:762:1, line:781:1> line:762:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55924808b4a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55924808c768 <line:763:1, line:781:1>
|   |-CallExpr 0x55924808b620 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55924808b608 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55924808b5e8 <col:3> 'void ()' Function 0x55924802de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55924808b680 <line:765:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55924808b640 <col:3> 'int' lvalue Var 0x559248088440 'y' 'int'
|   | `-IntegerLiteral 0x55924808b660 <col:7> 'int' 1
|   |-CallExpr 0x55924808b6d8 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55924808b6c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55924808b6a0 <col:3> 'void ()' Function 0x55924802df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55924808b730 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55924808b718 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55924808b6f8 <col:3> 'void ()' Function 0x55924802de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55924808b790 <line:768:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55924808b750 <col:3> 'int' lvalue Var 0x559248088560 'z' 'int'
|   | `-IntegerLiteral 0x55924808b770 <col:7> 'int' 1
|   |-CallExpr 0x55924808b7e8 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55924808b7d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55924808b7b0 <col:3> 'void ()' Function 0x55924802df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55924808b840 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55924808b828 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55924808b808 <col:3> 'void ()' Function 0x55924802de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55924808bb40 <line:771:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55924808b860 <col:3> 'int' lvalue Var 0x559248087818 'b' 'int'
|   | `-ConditionalOperator 0x55924808baf8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55924808b920 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55924808b8d8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55924808b8c0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55924808b880 <col:7> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55924808b908 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55924808b8f0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55924808b8a0 <col:25> '_Bool' lvalue Var 0x559248087b78 'b$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55924808bae0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55924808b940 <col:42> 'int' lvalue Var 0x559248087fc0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55924808bac0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55924808ba90 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55924808ba00 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55924808b9b8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55924808b9a0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55924808b960 <col:55> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55924808b9e8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55924808b9d0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55924808b980 <col:73> '_Bool' lvalue Var 0x559248087dd0 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55924808ba60 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55924808ba20 <col:90> 'int' lvalue Var 0x5592480880b8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55924808ba78 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55924808ba40 <col:102> 'int' lvalue Var 0x559248087818 'b' 'int'
|   |-BinaryOperator 0x55924808bd48 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55924808bb60 <col:3> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55924808bd30 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55924808bd00 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55924808bc20 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55924808bbd8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55924808bbc0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55924808bb80 <col:20> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55924808bc08 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55924808bbf0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55924808bba0 <col:38> '_Bool' lvalue Var 0x559248087b78 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55924808bcb8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55924808bc70 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55924808bc40 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55924808bce8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55924808bcd0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55924808bc98 <col:66> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55924808c030 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55924808bd68 <col:3> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55924808c018 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55924808bfe8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55924808bf08 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55924808be28 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55924808bde0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55924808bdc8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55924808bd88 <col:20> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55924808be10 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55924808bdf8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55924808bda8 <col:38> '_Bool' lvalue Var 0x559248087b78 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55924808bee8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55924808bea0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55924808be88 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55924808be48 <col:56> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55924808bed0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55924808beb8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55924808be68 <col:74> '_Bool' lvalue Var 0x559248087dd0 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55924808bfa0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55924808bf58 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55924808bf28 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55924808bfd0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55924808bfb8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55924808bf80 <col:102> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55924808c238 <line:774:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55924808c050 <col:3> '_Bool' lvalue Var 0x559248087b78 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55924808c220 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55924808c1f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55924808c110 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55924808c0c8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55924808c0b0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55924808c070 <col:20> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55924808c0f8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55924808c0e0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55924808c090 <col:38> '_Bool' lvalue Var 0x559248087b78 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55924808c1a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55924808c160 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55924808c130 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55924808c1d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55924808c1c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55924808c188 <col:66> '_Bool' lvalue Var 0x559248087b78 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55924808c520 <line:775:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55924808c258 <col:3> '_Bool' lvalue Var 0x559248087dd0 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55924808c508 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55924808c4d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55924808c3f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55924808c318 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55924808c2d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55924808c2b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55924808c278 <col:20> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55924808c300 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55924808c2e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55924808c298 <col:38> '_Bool' lvalue Var 0x559248087b78 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55924808c3d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55924808c390 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55924808c378 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55924808c338 <col:56> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55924808c3c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55924808c3a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55924808c358 <col:74> '_Bool' lvalue Var 0x559248087dd0 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55924808c490 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55924808c448 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55924808c418 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55924808c4c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55924808c4a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55924808c470 <col:102> '_Bool' lvalue Var 0x559248087dd0 'b$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55924808c578 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55924808c560 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55924808c540 <col:3> 'void ()' Function 0x55924802df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55924808c5d0 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55924808c5b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55924808c598 <col:3> 'void ()' Function 0x55924802de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55924808c688 <line:778:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55924808c5f0 <col:3> 'int' lvalue Var 0x559248087278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55924808c668 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55924808c650 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55924808c610 <col:22> 'int' lvalue Var 0x559248087278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55924808c630 <col:41> 'int' 1
|   |-CallExpr 0x55924808c6e0 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55924808c6c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55924808c6a8 <col:3> 'void ()' Function 0x55924802df00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55924808c758 <line:780:3, col:36>
|     `-CallExpr 0x55924808c738 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55924808c720 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55924808c700 <col:10> 'void *(void)' Function 0x55924802d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55924808c8b0 prev 0x559248086ef8 <line:782:1, line:820:1> line:782:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x55924808c818 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5592480906a8 <line:783:1, line:820:1>
|   |-CallExpr 0x55924808c990 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55924808c978 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55924808c958 <col:3> 'void ()' Function 0x55924802de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55924808c9f0 <line:785:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55924808c9b0 <col:3> 'int' lvalue Var 0x559248088560 'z' 'int'
|   | `-IntegerLiteral 0x55924808c9d0 <col:7> 'int' 2
|   |-CallExpr 0x55924808ca48 <line:786:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55924808ca30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55924808ca10 <col:3> 'void ()' Function 0x55924802df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55924808caa0 <line:787:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55924808ca88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55924808ca68 <col:3> 'void ()' Function 0x55924802de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55924808cb00 <line:788:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55924808cac0 <col:3> 'int' lvalue Var 0x5592480876f8 'a' 'int'
|   | `-IntegerLiteral 0x55924808cae0 <col:7> 'int' 1
|   |-CallExpr 0x55924808cb68 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55924808cb50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55924808cb20 <col:3> 'void ()' Function 0x55924802df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55924808cbc0 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55924808cba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55924808cb88 <col:3> 'void ()' Function 0x55924802de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55924808cc38 <line:791:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55924808cbe0 <col:3> 'int' lvalue Var 0x5592480874b8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x55924808cc20 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55924808cc00 <col:25> 'int' lvalue Var 0x5592480876f8 'a' 'int'
|   |-CallExpr 0x55924808cc90 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55924808cc78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55924808cc58 <col:3> 'void ()' Function 0x55924802df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55924808cce8 <line:793:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55924808ccd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55924808ccb0 <col:3> 'void ()' Function 0x55924802de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55924808cd98 <line:794:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55924808cd08 <col:3> '_Bool' lvalue Var 0x5592480885f8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55924808cd80 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55924808cd60 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55924808cd48 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55924808cd28 <col:19> 'void *(void)' Function 0x55924802d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55924808ce48 <line:795:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55924808cdb8 <col:3> '_Bool' lvalue Var 0x559248088670 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55924808ce30 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55924808ce10 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55924808cdf8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55924808cdd8 <col:19> 'void *(void)' Function 0x55924802d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55924808cec0 <line:796:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55924808ce68 <col:3> '_Bool' lvalue Var 0x5592480878b0 'b$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55924808cea8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55924808ce88 <col:21> '_Bool' lvalue Var 0x559248088670 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55924808cf38 <line:797:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55924808cee0 <col:3> 'int' lvalue Var 0x559248087930 'b$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55924808cf20 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55924808cf00 <col:15> 'int' lvalue Var 0x559248087818 'b' 'int'
|   |-BinaryOperator 0x55924808d370 <line:798:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55924808cf58 <col:3> 'int' lvalue Var 0x559248087818 'b' 'int'
|   | `-ConditionalOperator 0x55924808d340 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55924808d168 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55924808d088 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55924808cfb0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55924808cf98 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55924808cf78 <col:8> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55924808d068 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55924808d000 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55924808cfe8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55924808cfc8 <col:27> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x55924808d050 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55924808d038 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55924808d018 <col:46> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55924808d148 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55924808d0e0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55924808d0c8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55924808d0a8 <col:65> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x55924808d130 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55924808d118 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55924808d0f8 <col:84> '_Bool' lvalue Var 0x559248087e48 'b$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55924808d328 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55924808d188 <col:101> 'int' lvalue Var 0x559248087818 'b' 'int'
|   |   `-ParenExpr 0x55924808d308 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55924808d2d8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55924808d248 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55924808d200 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55924808d1e8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55924808d1a8 <col:106> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55924808d230 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55924808d218 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55924808d1c8 <col:124> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55924808d2a8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55924808d268 <col:141> 'int' lvalue Var 0x559248087fc0 'b$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55924808d2c0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55924808d288 <col:153> 'int' lvalue Var 0x5592480880b8 'b$w_buff1' 'int'
|   |-BinaryOperator 0x55924808d880 <line:799:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55924808d390 <col:3> 'int' lvalue Var 0x559248087fc0 'b$w_buff0' 'int'
|   | `-ConditionalOperator 0x55924808d850 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55924808d820 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55924808d808 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55924808d3b0 <col:15> '_Bool' lvalue Var 0x559248088670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55924808d838 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55924808d3d0 <col:31> 'int' lvalue Var 0x559248087fc0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55924808d7e8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55924808d7b8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55924808d5e0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55924808d500 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55924808d428 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55924808d410 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55924808d3f0 <col:45> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55924808d4e0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55924808d478 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55924808d460 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55924808d440 <col:64> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55924808d4c8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55924808d4b0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55924808d490 <col:83> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55924808d5c0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55924808d558 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55924808d540 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55924808d520 <col:102> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55924808d5a8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55924808d590 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55924808d570 <col:121> '_Bool' lvalue Var 0x559248087e48 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55924808d7a0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55924808d600 <col:138> 'int' lvalue Var 0x559248087fc0 'b$w_buff0' 'int'
|   |       `-ParenExpr 0x55924808d780 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55924808d750 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55924808d6c0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55924808d678 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55924808d660 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55924808d620 <col:151> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55924808d6a8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55924808d690 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55924808d640 <col:169> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55924808d720 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55924808d6e0 <col:186> 'int' lvalue Var 0x559248087fc0 'b$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55924808d738 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55924808d700 <col:198> 'int' lvalue Var 0x559248087fc0 'b$w_buff0' 'int'
|   |-BinaryOperator 0x55924808dda0 <line:800:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55924808d8a0 <col:3> 'int' lvalue Var 0x5592480880b8 'b$w_buff1' 'int'
|   | `-ConditionalOperator 0x55924808dd70 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55924808dd40 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55924808dd28 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55924808d8c0 <col:15> '_Bool' lvalue Var 0x559248088670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55924808dd58 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55924808d8e0 <col:31> 'int' lvalue Var 0x5592480880b8 'b$w_buff1' 'int'
|   |   `-ParenExpr 0x55924808dd08 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55924808dcd8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55924808daf0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55924808da10 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55924808d938 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55924808d920 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55924808d900 <col:45> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55924808d9f0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55924808d988 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55924808d970 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55924808d950 <col:64> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55924808d9d8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55924808d9c0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55924808d9a0 <col:83> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55924808dad0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55924808da68 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55924808da50 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55924808da30 <col:102> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55924808dab8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55924808daa0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55924808da80 <col:121> '_Bool' lvalue Var 0x559248087e48 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55924808dcc0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55924808db10 <col:138> 'int' lvalue Var 0x5592480880b8 'b$w_buff1' 'int'
|   |       `-ParenExpr 0x55924808dca0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55924808dc70 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55924808dbe0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55924808db98 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55924808db80 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55924808db30 <col:151> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55924808dbc8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55924808dbb0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55924808db60 <col:169> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55924808dc40 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55924808dc00 <col:186> 'int' lvalue Var 0x5592480880b8 'b$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55924808dc58 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55924808dc20 <col:198> 'int' lvalue Var 0x5592480880b8 'b$w_buff1' 'int'
|   |-BinaryOperator 0x55924808e348 <line:801:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55924808ddc0 <col:3> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55924808e330 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55924808e300 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55924808e2b8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55924808e2a0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55924808dde0 <col:20> '_Bool' lvalue Var 0x559248088670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55924808e2e8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55924808e2d0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55924808de00 <col:36> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55924808e280 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55924808e250 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55924808e010 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55924808df30 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55924808de58 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55924808de40 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55924808de20 <col:55> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55924808df10 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55924808dea8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55924808de90 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55924808de70 <col:74> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55924808def8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55924808dee0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55924808dec0 <col:93> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55924808dff0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55924808df88 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55924808df70 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55924808df50 <col:112> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55924808dfd8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55924808dfc0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55924808dfa0 <col:131> '_Bool' lvalue Var 0x559248087e48 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55924808e238 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55924808e220 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55924808e030 <col:148> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55924808e200 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55924808e1d0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55924808e0f0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55924808e0a8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55924808e090 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55924808e050 <col:166> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55924808e0d8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55924808e0c0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55924808e070 <col:184> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55924808e188 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55924808e140 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55924808e110 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55924808e1b8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55924808e1a0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55924808e168 <col:212> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55924808e910 <line:802:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55924808e368 <col:3> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55924808e8f8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55924808e8c8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55924808e880 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55924808e868 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55924808e388 <col:20> '_Bool' lvalue Var 0x559248088670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55924808e8b0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55924808e898 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55924808e3a8 <col:36> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55924808e848 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55924808e818 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55924808e5b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55924808e4d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55924808e400 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55924808e3e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55924808e3c8 <col:55> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55924808e4b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55924808e450 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55924808e438 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55924808e418 <col:74> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55924808e4a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55924808e488 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55924808e468 <col:93> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55924808e598 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55924808e530 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55924808e518 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55924808e4f8 <col:112> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55924808e580 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55924808e568 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55924808e548 <col:131> '_Bool' lvalue Var 0x559248087e48 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55924808e800 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55924808e7e8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55924808e5d8 <col:148> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55924808e7c8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55924808e798 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55924808e698 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55924808e650 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55924808e638 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55924808e5f8 <col:166> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55924808e680 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55924808e668 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55924808e618 <col:184> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55924808e768 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55924808e6e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55924808e6b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55924808e780 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55924808e740 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55924808e710 <col:219> 'int' 0
|   |-BinaryOperator 0x55924808eec8 <line:803:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55924808e930 <col:3> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55924808eeb0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55924808ee80 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55924808ee38 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55924808ee20 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55924808e950 <col:20> '_Bool' lvalue Var 0x559248088670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55924808ee68 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55924808ee50 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55924808e970 <col:36> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x55924808ee00 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55924808edd0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55924808eb90 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55924808eaa0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55924808e9c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55924808e9b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55924808e990 <col:55> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55924808ea80 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55924808ea18 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55924808ea00 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55924808e9e0 <col:74> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55924808ea68 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55924808ea50 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55924808ea30 <col:93> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55924808eb70 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55924808eaf8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55924808eae0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55924808eac0 <col:112> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55924808eb48 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55924808eb30 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55924808eb10 <col:131> '_Bool' lvalue Var 0x559248087e48 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55924808edb8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55924808eda0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55924808ebb0 <col:148> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x55924808ed80 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55924808ed50 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55924808ec70 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55924808ec28 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55924808ec10 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55924808ebd0 <col:166> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55924808ec58 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55924808ec40 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55924808ebf0 <col:184> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55924808ed08 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55924808ecc0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55924808ec90 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55924808ed38 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55924808ed20 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55924808ece8 <col:212> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55924808f490 <line:804:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55924808eee8 <col:3> '_Bool' lvalue Var 0x559248087e48 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55924808f478 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55924808f448 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55924808f400 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55924808f3e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55924808ef08 <col:20> '_Bool' lvalue Var 0x559248088670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55924808f430 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55924808f418 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55924808ef28 <col:36> '_Bool' lvalue Var 0x559248087e48 'b$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x55924808f3c8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55924808f398 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55924808f138 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55924808f058 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55924808ef80 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55924808ef68 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55924808ef48 <col:55> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55924808f038 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55924808efd0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55924808efb8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55924808ef98 <col:74> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55924808f020 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55924808f008 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55924808efe8 <col:93> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55924808f118 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55924808f0b0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55924808f098 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55924808f078 <col:112> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55924808f100 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55924808f0e8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55924808f0c8 <col:131> '_Bool' lvalue Var 0x559248087e48 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55924808f380 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55924808f368 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55924808f158 <col:148> '_Bool' lvalue Var 0x559248087e48 'b$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x55924808f348 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55924808f318 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55924808f218 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55924808f1d0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55924808f1b8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55924808f178 <col:166> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55924808f200 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55924808f1e8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55924808f198 <col:184> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55924808f2e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55924808f268 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55924808f238 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55924808f300 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55924808f2c0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55924808f290 <col:219> 'int' 0
|   |-BinaryOperator 0x55924808f508 <line:805:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55924808f4b0 <col:3> 'int' lvalue Var 0x5592480875d8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x55924808f4f0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55924808f4d0 <col:25> 'int' lvalue Var 0x559248087818 'b' 'int'
|   |-BinaryOperator 0x55924808f638 <line:806:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55924808f528 <col:3> 'int' lvalue Var 0x559248087818 'b' 'int'
|   | `-ConditionalOperator 0x55924808f608 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55924808f5c0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55924808f5a8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55924808f548 <col:7> '_Bool' lvalue Var 0x5592480878b0 'b$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55924808f5d8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55924808f568 <col:25> 'int' lvalue Var 0x559248087930 'b$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55924808f5f0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55924808f588 <col:37> 'int' lvalue Var 0x559248087818 'b' 'int'
|   |-BinaryOperator 0x55924808f6d0 <line:807:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55924808f658 <col:3> '_Bool' lvalue Var 0x5592480878b0 'b$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55924808f6a8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55924808f678 <col:28> 'int' 0
|   |-CallExpr 0x55924808f728 <line:808:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55924808f710 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55924808f6f0 <col:3> 'void ()' Function 0x55924802df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55924808f780 <line:809:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55924808f768 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55924808f748 <col:3> 'void ()' Function 0x55924802de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55924808fa68 <line:810:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55924808f7a0 <col:3> 'int' lvalue Var 0x559248087818 'b' 'int'
|   | `-ConditionalOperator 0x55924808fa38 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55924808f860 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55924808f818 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55924808f800 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55924808f7c0 <col:7> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55924808f848 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55924808f830 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55924808f7e0 <col:25> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55924808fa20 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55924808f880 <col:42> 'int' lvalue Var 0x559248087fc0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55924808fa00 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55924808f9d0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55924808f940 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55924808f8f8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55924808f8e0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55924808f8a0 <col:55> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55924808f928 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55924808f910 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55924808f8c0 <col:73> '_Bool' lvalue Var 0x559248087e48 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55924808f9a0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55924808f960 <col:90> 'int' lvalue Var 0x5592480880b8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55924808f9b8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55924808f980 <col:102> 'int' lvalue Var 0x559248087818 'b' 'int'
|   |-BinaryOperator 0x55924808fc88 <line:811:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55924808fa88 <col:3> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55924808fc70 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55924808fc40 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55924808fb48 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55924808fb00 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55924808fae8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55924808faa8 <col:20> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55924808fb30 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55924808fb18 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55924808fac8 <col:38> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55924808fbf8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55924808fbb0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55924808fb80 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55924808fc28 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55924808fc10 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55924808fbd8 <col:66> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55924808ff70 <line:812:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55924808fca8 <col:3> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55924808ff58 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55924808ff28 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55924808fe48 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55924808fd68 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55924808fd20 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55924808fd08 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55924808fcc8 <col:20> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55924808fd50 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55924808fd38 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55924808fce8 <col:38> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55924808fe28 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55924808fde0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55924808fdc8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55924808fd88 <col:56> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55924808fe10 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55924808fdf8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55924808fda8 <col:74> '_Bool' lvalue Var 0x559248087e48 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55924808fee0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55924808fe98 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55924808fe68 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55924808ff10 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55924808fef8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55924808fec0 <col:102> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559248090178 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55924808ff90 <col:3> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559248090160 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559248090130 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559248090050 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559248090008 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55924808fff0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55924808ffb0 <col:20> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559248090038 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559248090020 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55924808ffd0 <col:38> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5592480900e8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5592480900a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559248090070 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559248090118 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559248090100 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5592480900c8 <col:66> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x559248090460 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559248090198 <col:3> '_Bool' lvalue Var 0x559248087e48 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559248090448 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559248090418 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559248090338 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559248090258 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559248090210 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5592480901f8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5592480901b8 <col:20> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559248090240 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559248090228 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5592480901d8 <col:38> '_Bool' lvalue Var 0x559248087bf0 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x559248090318 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5592480902d0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5592480902b8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559248090278 <col:56> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559248090300 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5592480902e8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559248090298 <col:74> '_Bool' lvalue Var 0x559248087e48 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5592480903d0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559248090388 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559248090358 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559248090400 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5592480903e8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5592480903b0 <col:102> '_Bool' lvalue Var 0x559248087e48 'b$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x5592480904b8 <line:815:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5592480904a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559248090480 <col:3> 'void ()' Function 0x55924802df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559248090510 <line:816:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5592480904f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592480904d8 <col:3> 'void ()' Function 0x55924802de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5592480905c8 <line:817:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559248090530 <col:3> 'int' lvalue Var 0x559248087278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5592480905a8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559248090590 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559248090550 <col:22> 'int' lvalue Var 0x559248087278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559248090570 <col:41> 'int' 1
|   |-CallExpr 0x559248090620 <line:818:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559248090608 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592480905e8 <col:3> 'void ()' Function 0x55924802df00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559248090698 <line:819:3, col:36>
|     `-CallExpr 0x559248090678 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559248090660 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559248090640 <col:10> 'void *(void)' Function 0x55924802d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5592480907f8 prev 0x559248086fc0 <line:821:1, line:823:1> line:821:6 fence 'void ()'
| `-CompoundStmt 0x559248090898 <line:822:1, line:823:1>
|-FunctionDecl 0x5592480908c8 prev 0x559248087080 <line:824:1, line:826:1> line:824:6 isync 'void ()'
| `-CompoundStmt 0x559248090968 <line:825:1, line:826:1>
|-FunctionDecl 0x559248090998 prev 0x559248087140 <line:827:1, line:829:1> line:827:6 lwfence 'void ()'
| `-CompoundStmt 0x559248090a38 <line:828:1, line:829:1>
`-FunctionDecl 0x559248090aa8 <line:830:1, line:856:1> line:830:5 main 'int ()'
  `-CompoundStmt 0x559248092bb0 <line:831:1, line:856:1>
    |-DeclStmt 0x559248090bf8 <line:832:3, col:18>
    | `-VarDecl 0x559248090b90 <col:3, col:13> col:13 used t1171 'pthread_t':'unsigned long'
    |-CallExpr 0x559248090e08 <line:833:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559248090df0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559248090c10 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55924806e488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559248090c50 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559248090c30 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559248090b90 't1171' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559248090e48 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559248090cc8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559248090ca0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559248090c68 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559248090e60 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559248090ce8 <col:39> 'void *(void *)' Function 0x559248088788 'P0' 'void *(void *)'
    | `-ParenExpr 0x559248090d68 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559248090d40 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559248090d08 <col:52> 'int' 0
    |-DeclStmt 0x559248090ef0 <line:834:3, col:18>
    | `-VarDecl 0x559248090e88 <col:3, col:13> col:13 used t1172 'pthread_t':'unsigned long'
    |-CallExpr 0x559248091098 <line:835:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559248091080 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559248090f08 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55924806e488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559248090f48 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559248090f28 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559248090e88 't1172' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5592480910d8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559248090fc0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559248090f98 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559248090f60 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5592480910f0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559248090fe0 <col:39> 'void *(void *)' Function 0x55924808a1c0 'P1' 'void *(void *)'
    | `-ParenExpr 0x559248091060 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559248091038 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559248091000 <col:52> 'int' 0
    |-DeclStmt 0x559248091180 <line:836:3, col:18>
    | `-VarDecl 0x559248091118 <col:3, col:13> col:13 used t1173 'pthread_t':'unsigned long'
    |-CallExpr 0x559248091328 <line:837:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559248091310 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559248091198 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55924806e488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5592480911d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5592480911b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559248091118 't1173' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559248091368 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559248091250 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559248091228 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5592480911f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559248091380 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559248091270 <col:39> 'void *(void *)' Function 0x55924808b540 'P2' 'void *(void *)'
    | `-ParenExpr 0x5592480912f0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5592480912c8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559248091290 <col:52> 'int' 0
    |-DeclStmt 0x559248091410 <line:838:3, col:18>
    | `-VarDecl 0x5592480913a8 <col:3, col:13> col:13 used t1174 'pthread_t':'unsigned long'
    |-CallExpr 0x5592480915b8 <line:839:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5592480915a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559248091428 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55924806e488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559248091468 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559248091448 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5592480913a8 't1174' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5592480915f8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5592480914e0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5592480914b8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559248091480 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559248091610 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559248091500 <col:39> 'void *(void *)' Function 0x55924808c8b0 'P3' 'void *(void *)'
    | `-ParenExpr 0x559248091580 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559248091558 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559248091520 <col:52> 'int' 0
    |-CallExpr 0x559248091660 <line:840:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559248091648 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559248091628 <col:3> 'void ()' Function 0x55924802de40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559248091730 <line:841:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x559248091680 <col:3> '_Bool' lvalue Var 0x5592480881a8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x559248091718 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5592480916f8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5592480916e0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5592480916a0 <col:21> 'int' lvalue Var 0x559248087278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5592480916c0 <col:41> 'int' 4
    |-CallExpr 0x559248091788 <line:842:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559248091770 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559248091750 <col:3> 'void ()' Function 0x55924802df00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559248091800 <line:843:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5592480917e8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5592480917a8 <col:3> 'void (int)' Function 0x55924802d790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x559248091840 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559248091828 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5592480917c8 <col:21> '_Bool' lvalue Var 0x5592480881a8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x559248091890 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559248091878 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559248091858 <col:3> 'void ()' Function 0x55924802de40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559248091ba0 <line:845:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5592480918b0 <col:3> 'int' lvalue Var 0x559248087818 'b' 'int'
    | `-ConditionalOperator 0x559248091b48 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x559248091970 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x559248091928 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x559248091910 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5592480918d0 <col:7> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x559248091958 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x559248091940 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5592480918f0 <col:25> '_Bool' lvalue Var 0x5592480879a8 'b$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x559248091b30 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x559248091990 <col:42> 'int' lvalue Var 0x559248087fc0 'b$w_buff0' 'int'
    |   `-ParenExpr 0x559248091b10 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x559248091ae0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x559248091a50 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x559248091a08 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5592480919f0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5592480919b0 <col:55> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x559248091a38 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x559248091a20 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5592480919d0 <col:73> '_Bool' lvalue Var 0x559248087c68 'b$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x559248091ab0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x559248091a70 <col:90> 'int' lvalue Var 0x5592480880b8 'b$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x559248091ac8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x559248091a90 <col:102> 'int' lvalue Var 0x559248087818 'b' 'int'
    |-BinaryOperator 0x559248091da8 <line:846:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559248091bc0 <col:3> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x559248091d90 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559248091d60 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x559248091c80 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559248091c38 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559248091c20 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559248091be0 <col:20> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x559248091c68 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559248091c50 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559248091c00 <col:38> '_Bool' lvalue Var 0x5592480879a8 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559248091d18 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559248091cd0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559248091ca0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559248091d48 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559248091d30 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559248091cf8 <col:66> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
    |-BinaryOperator 0x559248092090 <line:847:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559248091dc8 <col:3> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x559248092078 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559248092048 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559248091f68 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559248091e88 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559248091e40 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559248091e28 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559248091de8 <col:20> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559248091e70 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559248091e58 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559248091e08 <col:38> '_Bool' lvalue Var 0x5592480879a8 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559248091f48 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559248091f00 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559248091ee8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559248091ea8 <col:56> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559248091f30 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559248091f18 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559248091ec8 <col:74> '_Bool' lvalue Var 0x559248087c68 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559248092000 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559248091fb8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559248091f88 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559248092030 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559248092018 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559248091fe0 <col:102> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
    |-BinaryOperator 0x559248092298 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5592480920b0 <col:3> '_Bool' lvalue Var 0x5592480879a8 'b$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559248092280 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559248092250 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x559248092170 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559248092128 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559248092110 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5592480920d0 <col:20> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x559248092158 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559248092140 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5592480920f0 <col:38> '_Bool' lvalue Var 0x5592480879a8 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559248092208 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5592480921c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559248092190 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559248092238 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559248092220 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5592480921e8 <col:66> '_Bool' lvalue Var 0x5592480879a8 'b$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x559248092580 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5592480922b8 <col:3> '_Bool' lvalue Var 0x559248087c68 'b$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559248092568 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559248092538 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559248092458 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559248092378 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559248092330 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559248092318 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5592480922d8 <col:20> '_Bool' lvalue Var 0x559248088038 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559248092360 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559248092348 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5592480922f8 <col:38> '_Bool' lvalue Var 0x5592480879a8 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559248092438 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5592480923f0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5592480923d8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559248092398 <col:56> '_Bool' lvalue Var 0x559248088130 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559248092420 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559248092408 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5592480923b8 <col:74> '_Bool' lvalue Var 0x559248087c68 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5592480924f0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5592480924a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559248092478 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559248092520 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559248092508 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5592480924d0 <col:102> '_Bool' lvalue Var 0x559248087c68 'b$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5592480925d8 <line:850:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5592480925c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5592480925a0 <col:3> 'void ()' Function 0x55924802df00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559248092630 <line:851:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559248092618 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5592480925f8 <col:3> 'void ()' Function 0x55924802de40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559248092998 <line:852:3, col:123> '_Bool' '='
    | |-DeclRefExpr 0x559248092650 <col:3> '_Bool' lvalue Var 0x559248088220 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x559248092980 <col:21, col:123> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x559248092968 <col:21, col:123> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x559248092948 <col:22, col:123> 'int'
    |       `-BinaryOperator 0x559248092928 <col:23, col:122> 'int' '&&'
    |         |-BinaryOperator 0x559248092890 <col:23, col:94> 'int' '&&'
    |         | |-BinaryOperator 0x5592480927f8 <col:23, col:66> 'int' '&&'
    |         | | |-BinaryOperator 0x559248092760 <col:23, col:38> 'int' '&&'
    |         | | | |-BinaryOperator 0x5592480926c8 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x5592480926b0 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x559248092670 <col:23> 'int' lvalue Var 0x559248088320 'x' 'int'
    |         | | | | `-IntegerLiteral 0x559248092690 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x559248092740 <col:33, col:38> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x559248092728 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x5592480926e8 <col:33> 'int' lvalue Var 0x559248088560 'z' 'int'
    |         | | |   `-IntegerLiteral 0x559248092708 <col:38> 'int' 2
    |         | | `-BinaryOperator 0x5592480927d8 <col:43, col:66> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5592480927c0 <col:43> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x559248092780 <col:43> 'int' lvalue Var 0x559248087398 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x5592480927a0 <col:66> 'int' 0
    |         | `-BinaryOperator 0x559248092870 <col:71, col:94> 'int' '=='
    |         |   |-ImplicitCastExpr 0x559248092858 <col:71> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x559248092818 <col:71> 'int' lvalue Var 0x5592480874b8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x559248092838 <col:94> 'int' 1
    |         `-BinaryOperator 0x559248092908 <col:99, col:122> 'int' '=='
    |           |-ImplicitCastExpr 0x5592480928f0 <col:99> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5592480928b0 <col:99> 'int' lvalue Var 0x5592480875d8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x5592480928d0 <col:122> 'int' 0
    |-CallExpr 0x5592480929f0 <line:853:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5592480929d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5592480929b8 <col:3> 'void ()' Function 0x55924802df00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559248092a68 <line:854:3, col:36> 'void'
    | |-ImplicitCastExpr 0x559248092a50 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559248092a10 <col:3> 'void (int)' Function 0x55924802dbc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x559248092aa8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559248092a90 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x559248092a30 <col:21> '_Bool' lvalue Var 0x559248088220 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x559248092ae0 <line:855:3, col:10>
      `-IntegerLiteral 0x559248092ac0 <col:10> 'int' 0
