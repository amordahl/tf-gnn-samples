TranslationUnitDecl 0x56395e24ce18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56395e24d6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56395e24d3b0 '__int128'
|-TypedefDecl 0x56395e24d748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56395e24d3d0 'unsigned __int128'
|-TypedefDecl 0x56395e24da50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56395e24d820 'struct __NSConstantString_tag'
|   `-Record 0x56395e24d7a0 '__NSConstantString_tag'
|-TypedefDecl 0x56395e24daf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56395e24dab0 'char *'
|   `-BuiltinType 0x56395e24ceb0 'char'
|-TypedefDecl 0x56395e28c650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56395e24dd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56395e24dbd0 'struct __va_list_tag'
|     `-Record 0x56395e24db50 '__va_list_tag'
|-FunctionDecl 0x56395e28c790 <./split_8/mix027_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x56395e28c6c0 <col:31> col:34 'int'
|-FunctionDecl 0x56395e28c958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x56395e28ca80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x56395e28cbc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x56395e28cb38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x56395e28cdf8 <col:40, col:99>
|   |-IfStmt 0x56395e28cdc8 <col:42, col:88>
|   | |-UnaryOperator 0x56395e28cca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x56395e28cc90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x56395e28cc70 <col:47> 'int' lvalue ParmVar 0x56395e28cb38 'expression' 'int'
|   | `-CompoundStmt 0x56395e28cdb0 <col:59, col:88>
|   |   `-LabelStmt 0x56395e28cd98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x56395e28cd28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x56395e28cd10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x56395e28ccc0 <col:68> 'void () __attribute__((noreturn))' Function 0x56395e28ca80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x56395e28cde0 <col:89>
|   `-ReturnStmt 0x56395e28cde8 <col:91>
|-FunctionDecl 0x56395e28ce40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x56395e28cf00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x56395e28d280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56395e28cfb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x56395e28d038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x56395e28d0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56395e28d138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56395e28d340 <line:10:22>
|-FunctionDecl 0x56395e2b3390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56395e28d3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x56395e28d430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x56395e28d4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56395e28d530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56395e2b3450 <line:13:22>
|-FunctionDecl 0x56395e2b3700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56395e2b34c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x56395e2b3540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x56395e2b35c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x56395e2b37b8 <line:15:22>
|-TypedefDecl 0x56395e2b3828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x56395e24cf70 'unsigned char'
|-TypedefDecl 0x56395e2b3898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x56395e24cf90 'unsigned short'
|-TypedefDecl 0x56395e2b3908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x56395e24cfb0 'unsigned int'
|-TypedefDecl 0x56395e2b3978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x56395e24cfd0 'unsigned long'
|-TypedefDecl 0x56395e2b39e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x56395e24ced0 'signed char'
|-TypedefDecl 0x56395e2b3a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x56395e24cf70 'unsigned char'
|-TypedefDecl 0x56395e2b3ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x56395e24cef0 'short'
|-TypedefDecl 0x56395e2b3b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x56395e24cf90 'unsigned short'
|-TypedefDecl 0x56395e2b3ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x56395e24cf10 'int'
|-TypedefDecl 0x56395e2b3c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x56395e24cfb0 'unsigned int'
|-TypedefDecl 0x56395e2b3c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x56395e24cf30 'long'
|-TypedefDecl 0x56395e2b3cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x56395e24cfd0 'unsigned long'
|-TypedefDecl 0x56395e2b3d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x56395e24cf30 'long'
|-TypedefDecl 0x56395e2b3dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x56395e24cfd0 'unsigned long'
|-TypedefDecl 0x56395e2b3e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x56395e24cfd0 'unsigned long'
|-TypedefDecl 0x56395e2b3eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x56395e24cfb0 'unsigned int'
|-TypedefDecl 0x56395e2b3f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x56395e24cfb0 'unsigned int'
|-TypedefDecl 0x56395e2b3f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x56395e24cfd0 'unsigned long'
|-TypedefDecl 0x56395e2b4008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x56395e24cfd0 'unsigned long'
|-TypedefDecl 0x56395e2b4078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x56395e24cfb0 'unsigned int'
|-TypedefDecl 0x56395e2b40e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x56395e24cfd0 'unsigned long'
|-TypedefDecl 0x56395e2b4158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x56395e24cf30 'long'
|-TypedefDecl 0x56395e2b41c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x56395e24cf30 'long'
|-TypedefDecl 0x56395e2b4238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x56395e24cf10 'int'
|-RecordDecl 0x56395e2b4290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x56395e2b4408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x56395e2b44c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x56395e2b4460 'struct __fsid_t' sugar
|   `-RecordType 0x56395e2b4310 '__fsid_t'
|     `-Record 0x56395e2b4290 ''
|-TypedefDecl 0x56395e2b4548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x56395e24cf30 'long'
|-TypedefDecl 0x56395e2b45b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x56395e24cfd0 'unsigned long'
|-TypedefDecl 0x56395e2b4628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x56395e24cfd0 'unsigned long'
|-TypedefDecl 0x56395e2b4698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x56395e24cfb0 'unsigned int'
|-TypedefDecl 0x56395e2b4708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x56395e24cf30 'long'
|-TypedefDecl 0x56395e2b4778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x56395e24cfb0 'unsigned int'
|-TypedefDecl 0x56395e2b47e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x56395e24cf30 'long'
|-TypedefDecl 0x56395e2b4858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x56395e24cf10 'int'
|-TypedefDecl 0x56395e2b48c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x56395e24cf10 'int'
|-TypedefDecl 0x56395e2b4938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x56395e24cf10 'int'
|-TypedefDecl 0x56395e2b49a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x56395e24d630 'void *'
|   `-BuiltinType 0x56395e24ce70 'void'
|-TypedefDecl 0x56395e2b4a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x56395e24cf30 'long'
|-TypedefDecl 0x56395e2b4a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x56395e24cf30 'long'
|-TypedefDecl 0x56395e2b4af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x56395e24cf30 'long'
|-TypedefDecl 0x56395e2b4b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x56395e24cfd0 'unsigned long'
|-TypedefDecl 0x56395e2b4bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x56395e24cfd0 'unsigned long'
|-TypedefDecl 0x56395e2b4c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x56395e24cfd0 'unsigned long'
|-TypedefDecl 0x56395e2b4cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x56395e24cfd0 'unsigned long'
|-TypedefDecl 0x56395e2b4d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x56395e24cf30 'long'
|-TypedefDecl 0x56395e2b4d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x56395e24cf30 'long'
|-TypedefDecl 0x56395e2b4e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x56395e24cf30 'long'
|-TypedefDecl 0x56395e2b4e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x56395e24cfd0 'unsigned long'
|-TypedefDecl 0x56395e2b4f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x56395e2b4ed0 '__off64_t' sugar
|   |-Typedef 0x56395e2b41c8 '__off64_t'
|   `-BuiltinType 0x56395e24cf30 'long'
|-TypedefDecl 0x56395e2b5000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x56395e2b4fc0 '__quad_t *'
|   `-TypedefType 0x56395e2b4f60 '__quad_t' sugar
|     |-Typedef 0x56395e2b3d68 '__quad_t'
|     `-BuiltinType 0x56395e24cf30 'long'
|-TypedefDecl 0x56395e2b5070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x56395e24dab0 'char *'
|   `-BuiltinType 0x56395e24ceb0 'char'
|-TypedefDecl 0x56395e2b50e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x56395e24cf30 'long'
|-TypedefDecl 0x56395e2b5150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x56395e24cfb0 'unsigned int'
|-FunctionDecl 0x56395e2b5298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x56395e2b51c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x56395e2b65e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x56395e2b65d8 <line:72:3, col:34>
|     `-CallExpr 0x56395e2b6598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x56395e2b6580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56395e2b6510 <col:10> '<builtin fn type>' Function 0x56395e2b6380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x56395e2b65c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56395e2b6530 <col:29> 'unsigned int' lvalue ParmVar 0x56395e2b51c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x56395e2b6380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x56395e2b6420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x56395e2b6490 <col:10> Implicit
| `-ConstAttr 0x56395e2b64e8 <col:10> Implicit
|-FunctionDecl 0x56395e2b6740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x56395e2b6638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x56395e2b6a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x56395e2b6a48 <line:77:3, col:34>
|     `-CallExpr 0x56395e2b6a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x56395e2b69f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56395e2b6978 <col:10> '<builtin fn type>' Function 0x56395e2b67e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x56395e2b6a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x56395e2b6998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x56395e2b6638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x56395e2b67e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x56395e2b6888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x56395e2b68f8 <col:10> Implicit
| `-ConstAttr 0x56395e2b6950 <col:10> Implicit
|-TypedefDecl 0x56395e2b6a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x56395e24cfd0 'unsigned long'
|-TypedefDecl 0x56395e2b6b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x56395e2b6ae0 '__time_t' sugar
|   |-Typedef 0x56395e2b4708 '__time_t'
|   `-BuiltinType 0x56395e24cf30 'long'
|-RecordDecl 0x56395e2b6b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x56395e2b6c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x56395e2b6cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x56395e2b6d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x56395e2b6d10 '__pid_t' sugar
|   |-Typedef 0x56395e2b4238 '__pid_t'
|   `-BuiltinType 0x56395e24cf10 'int'
|-RecordDecl 0x56395e2b6da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x56395e2b6e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x56395e2b6eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x56395e2b6f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x56395e2b6fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x56395e24cfd0 'unsigned long'
|-RecordDecl 0x56395e2b7030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x56395e2b72c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x56395e2b83a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x56395e2b7310 'struct cpu_set_t' sugar
|   `-RecordType 0x56395e2b70b0 'cpu_set_t'
|     `-Record 0x56395e2b7030 ''
|-FunctionDecl 0x56395e2b8678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x56395e2b8448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56395e2b8550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x56395e2b8728 <line:107:19>
|-FunctionDecl 0x56395e2b8900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x56395e2b8790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x56395e2b89a8 <col:69>
|-FunctionDecl 0x56395e2b8b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x56395e2b8a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x56395e2b8bc8 <col:64>
|-FunctionDecl 0x56395e2b8e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x56395e2b8c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56395e2b8d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56395e2b8f38 <line:113:22>
|-FunctionDecl 0x56395e2b91b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x56395e2b8fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56395e2b9098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x56395e2b9268 <col:88>
|-FunctionDecl 0x56395e2b9588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56395e2b92d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56395e2b93b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x56395e2b9440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56395e2b9640 <col:62>
|-FunctionDecl 0x56395e2b97b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x56395e2b96a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x56395e2b9860 <col:63>
|-FunctionDecl 0x56395e2b9988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x56395e2b9a28 <col:47>
|-FunctionDecl 0x56395e2b9b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x56395e2b9a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56395e2b9bd8 <col:69>
|-FunctionDecl 0x56395e2b9ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x56395e2b9c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56395e2b9d88 <col:69>
|-FunctionDecl 0x56395e2ba048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56395e2b9df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56395e2b9f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x56395e2ba0f8 <col:88>
|-TypedefDecl 0x56395e2ba188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x56395e2ba150 '__clock_t' sugar
|   |-Typedef 0x56395e2b4548 '__clock_t'
|   `-BuiltinType 0x56395e24cf30 'long'
|-TypedefDecl 0x56395e2ba218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x56395e2ba1e0 '__clockid_t' sugar
|   |-Typedef 0x56395e2b4938 '__clockid_t'
|   `-BuiltinType 0x56395e24cf10 'int'
|-TypedefDecl 0x56395e2ba2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x56395e2ba270 '__timer_t' sugar
|   |-Typedef 0x56395e2b49a8 '__timer_t'
|   `-PointerType 0x56395e24d630 'void *'
|     `-BuiltinType 0x56395e24ce70 'void'
|-RecordDecl 0x56395e2ba300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x56395e2ba3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x56395e2ba440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x56395e2ba4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x56395e2ba510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x56395e2ba578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x56395e2ba5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x56395e2ba648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x56395e2ba6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x56395e2ba718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x56395e2ba780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x56395e2ba7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x56395e2ba838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x56395e2ba908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x56395e2ba978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x56395e2baa20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x56395e2babf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x56395e2bac90 <col:45>
|-FunctionDecl 0x56395e2bae70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x56395e2bad60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x56395e2baf18 <col:54>
|-FunctionDecl 0x56395e2bb118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x56395e2baf80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x56395e2baff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x56395e2bb1c8 <line:157:22>
| `-ConstAttr 0x56395e2bb220 <col:63>
|-FunctionDecl 0x56395e2bc050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56395e2bb318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56395e2bc0f8 <col:56>
|-FunctionDecl 0x56395e2bc4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x56395e2bc168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x56395e2bc1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56395e2bc260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x56395e2bc358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x56395e2bc560 <col:54>
|-RecordDecl 0x56395e2bc5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x56395e2bc668 parent 0x56395e24ce18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x56395e2bc8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x56395e2bc968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x56395e2bc9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x56395e2bca38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x56395e2bcb28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x56395e2bcc48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x56395e2bcbf0 'struct __locale_struct *'
|   `-ElaboratedType 0x56395e2bcb80 'struct __locale_struct' sugar
|     `-RecordType 0x56395e2bc640 'struct __locale_struct'
|       `-Record 0x56395e2bc5b8 '__locale_struct'
|-TypedefDecl 0x56395e2bccf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x56395e2bccc0 '__locale_t' sugar
|   |-Typedef 0x56395e2bcc48 '__locale_t'
|   `-PointerType 0x56395e2bcbf0 'struct __locale_struct *'
|     `-ElaboratedType 0x56395e2bcb80 'struct __locale_struct' sugar
|       `-RecordType 0x56395e2bc640 'struct __locale_struct'
|         `-Record 0x56395e2bc5b8 '__locale_struct'
|-FunctionDecl 0x56395e2be110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x56395e2bcd68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x56395e2bcde0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56395e2bce60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x56395e2bcef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56395e2bcf68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x56395e2be1d8 <col:40>
|-FunctionDecl 0x56395e2be3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56395e2be2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x56395e2be470 <col:66>
|-FunctionDecl 0x56395e2be580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56395e2be4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x56395e2be628 <col:69>
|-FunctionDecl 0x56395e2be858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56395e2be690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56395e2be720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56395e2be908 <col:52>
|-FunctionDecl 0x56395e2beab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56395e2be970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56395e2bea00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56395e2beb60 <col:55>
|-FunctionDecl 0x56395e2becf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x56395e2bebe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x56395e2beda0 <col:62>
|-FunctionDecl 0x56395e2bef18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x56395e2bee08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x56395e2befc0 <col:60>
|-FunctionDecl 0x56395e2bf2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56395e2bf118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56395e2bf198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x56395e2bf368 <col:44>
|-FunctionDecl 0x56395e2bf578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56395e2bf3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56395e2bf450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x56395e2bf628 <col:49>
|-VarDecl 0x56395e2bf728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x56395e2bf7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x56395e2bf828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x56395e2bf8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x56395e2bfa20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x56395e2bfac0 <col:42>
|-VarDecl 0x56395e2bfb30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x56395e2bfbb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x56395e2bfd38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x56395e2bfc28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x56395e2bfde0 <col:57>
|-FunctionDecl 0x56395e2bfef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56395e2bfe60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56395e2bff98 <col:56>
|-FunctionDecl 0x56395e2c00d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56395e2c0018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x56395e2c0178 <col:59>
|-FunctionDecl 0x56395e2c0280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x56395e2c01e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x56395e2c0328 <col:48>
| `-ConstAttr 0x56395e2c0380 <col:89>
|-FunctionDecl 0x56395e2c05e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56395e2c0438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x56395e2c04c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x56395e2c0848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56395e2c06d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56395e2c0768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x56395e2c08f8 <col:88>
|-FunctionDecl 0x56395e2c0a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56395e2c0960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56395e2c09f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x56395e2c0b40 <col:88>
|-FunctionDecl 0x56395e2c0d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x56395e2c0ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56395e2c0c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x56395e2c0e08 <line:208:22>
|-FunctionDecl 0x56395e2c1178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56395e2c0e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56395e2c0ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x56395e2c0f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x56395e2c1010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x56395e2c1478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x56395e2c1278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x56395e2c1350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x56395e2c1528 <col:85>
|-FunctionDecl 0x56395e2c1918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x56395e2c1590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56395e2c16c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x56395e2c17d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x56395e2c19d0 <col:52>
|-FunctionDecl 0x56395e2c1b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x56395e2c1a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56395e2c1bf0 <col:61>
|-FunctionDecl 0x56395e2c20f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x56395e2c1c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56395e2c1cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x56395e2c1e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x56395e2c1ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x56395e2c21b0 <col:62>
|-FunctionDecl 0x56395e2c23c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x56395e2c2218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56395e2c22a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x56395e2c2478 <line:221:22>
|-FunctionDecl 0x56395e2c2578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x56395e2c24e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56395e2c2620 <col:65>
|-TypedefDecl 0x56395e2c2690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x56395e24cfd0 'unsigned long'
|-RecordDecl 0x56395e2c26e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x56395e2c2830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56395e2c2898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56395e2c2948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x56395e2c28f0 'union pthread_attr_t' sugar
|   `-RecordType 0x56395e2c2770 'union pthread_attr_t'
|     `-Record 0x56395e2c26e8 'pthread_attr_t'
|-RecordDecl 0x56395e2c29a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x56395e2c2b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x56395e2c2b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x56395e2c2c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x56395e2c2be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x56395e2c2a20 'struct __pthread_internal_list'
|     `-Record 0x56395e2c29a0 '__pthread_internal_list'
|-RecordDecl 0x56395e2c2cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x56395e2c2d58 parent 0x56395e24ce18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x56395e2c2e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56395e2c2e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x56395e2c2f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x56395e2c2f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x56395e2c2fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x56395e2c3038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x56395e2c7110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x56395e2c71c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x56395e2c72b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x56395e2c7318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56395e2c74a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x56395e2c7440 'union pthread_mutex_t' sugar
|   `-RecordType 0x56395e2c2d30 'pthread_mutex_t'
|     `-Record 0x56395e2c2cb0 ''
|-RecordDecl 0x56395e2c7510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x56395e2c7650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56395e2c76b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56395e2c7770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x56395e2c7710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x56395e2c7590 'pthread_mutexattr_t'
|     `-Record 0x56395e2c7510 ''
|-RecordDecl 0x56395e2c77e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x56395e2c7888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x56395e2c7950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56395e2c79b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x56395e2c7a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x56395e2c7a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x56395e2c7af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x56395e2c7b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x56395e2c7bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x56395e2c7c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x56395e2c7ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_8/mix027_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_8/mix027_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x56395e2c7dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x56395e2c7e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x56395e2c7f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x56395e2c7f10 'union pthread_cond_t' sugar
|   `-RecordType 0x56395e2c7860 'pthread_cond_t'
|     `-Record 0x56395e2c77e0 ''
|-RecordDecl 0x56395e2c7fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x56395e2c9130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56395e2c9198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56395e2c9250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x56395e2c91f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x56395e2c8060 'pthread_condattr_t'
|     `-Record 0x56395e2c7fe0 ''
|-TypedefDecl 0x56395e2c92d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x56395e24cfb0 'unsigned int'
|-TypedefDecl 0x56395e2c9348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x56395e24cf10 'int'
|-RecordDecl 0x56395e2c93a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x56395e2c9448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x56395e2c9510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56395e2c9578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x56395e2c95e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x56395e2c9648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x56395e2c96b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x56395e2c9718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x56395e2c9780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x56395e2c97e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x56395e2c9850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x56395e2c98b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x56395e2c9920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x56395e2c99d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_8/mix027_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_8/mix027_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x56395e2c9a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56395e2c9ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56395e2c9c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x56395e2c9bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x56395e2c9420 'pthread_rwlock_t'
|     `-Record 0x56395e2c93a0 ''
|-RecordDecl 0x56395e2c9ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x56395e2c9de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x56395e2c9e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56395e2c9f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x56395e2c9ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x56395e2c9d20 'pthread_rwlockattr_t'
|     `-Record 0x56395e2c9ca0 ''
|-TypedefDecl 0x56395e2c9f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x56395e24cf14 'volatile int' volatile
|   `-BuiltinType 0x56395e24cf10 'int'
|-RecordDecl 0x56395e2c9fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x56395e2cb140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x56395e2cb1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56395e2cb260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x56395e2cb200 'union pthread_barrier_t' sugar
|   `-RecordType 0x56395e2ca060 'pthread_barrier_t'
|     `-Record 0x56395e2c9fe0 ''
|-RecordDecl 0x56395e2cb2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x56395e2cb3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56395e2cb438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56395e2cb4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x56395e2cb490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x56395e2cb350 'pthread_barrierattr_t'
|     `-Record 0x56395e2cb2d0 ''
|-TypedefDecl 0x56395e2cb608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x56395e2cb5a0 'long [8]' 8 
|   `-BuiltinType 0x56395e24cf30 'long'
|-EnumDecl 0x56395e2cb660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x56395e2cb728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x56395e2cb778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x56395e2cb7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x56395e2cb898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x56395e2cb8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x56395e2cb938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x56395e2cb988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x56395e2cba10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x56395e2cb9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x56395e2cb9d8 <col:26> 'int' EnumConstant 0x56395e2cb898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x56395e2cba98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x56395e2cba80 <col:29> 'int'
| |   `-DeclRefExpr 0x56395e2cba60 <col:29> 'int' EnumConstant 0x56395e2cb8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x56395e2cbb20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x56395e2cbb08 <col:30> 'int'
| |   `-DeclRefExpr 0x56395e2cbae8 <col:30> 'int' EnumConstant 0x56395e2cb938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x56395e2cbba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x56395e2cbb90 <col:27> 'int'
|     `-DeclRefExpr 0x56395e2cbb70 <col:27> 'int' EnumConstant 0x56395e2cba10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x56395e2cbbf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x56395e2cbcc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x56395e2cbd50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x56395e2cbd38 <col:30> 'int'
| |   `-DeclRefExpr 0x56395e2cbd18 <col:30> 'int' EnumConstant 0x56395e2cbcc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x56395e2cbda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x56395e2cbe28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x56395e2cbe10 <col:29> 'int'
|     `-DeclRefExpr 0x56395e2cbdf0 <col:29> 'int' EnumConstant 0x56395e2cbda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x56395e2cbe78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x56395e2cbf48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x56395e2cbf98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x56395e2cbfe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x56395e2cc038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x56395e2cc150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x56395e2cc1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x56395e2cc1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x56395e2cc278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x56395e2cc260 <col:31> 'int'
|     `-DeclRefExpr 0x56395e2cc240 <col:31> 'int' EnumConstant 0x56395e2cc150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x56395e2cc2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x56395e2cc398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x56395e2cc3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x56395e2cc438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x56395e2cc508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x56395e2cc558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x56395e2cc5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x56395e2cc678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x56395e2cc6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x56395e2cc718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x56395e2cc958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x56395e2cc9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x56395e2cca28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x56395e2ccb48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x56395e2ccb98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x56395e2ccc68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x56395e2cccb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x56395e2ccd08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x56395e2ccdd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x56395e2cce28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x56395e2cd488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x56395e2ccf20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x56395e2cd030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56395e2cd270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x56395e2cd2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x56395e2cd548 <col:47>
| |-NonNullAttr 0x56395e2cd5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x56395e2cd5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x56395e2cd700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x56395e2cd630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x56395e2cd958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x56395e2cd7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x56395e2cd838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x56395e2cdb28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x56395e2cda18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x56395e2cdbd0 <col:60>
|-FunctionDecl 0x56395e2cdd20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x56395e2cddc0 <col:54>
| `-ConstAttr 0x56395e2cde18 <col:95>
|-FunctionDecl 0x56395e2cdfe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x56395e2cde50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56395e2cdec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x56395e2ce098 <line:394:19>
| `-ConstAttr 0x56395e2ce0f0 <col:60>
|-FunctionDecl 0x56395e2cfb08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56395e2cf9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56395e2cfbb0 <col:71>
| `-NonNullAttr 0x56395e2cfc08 <col:112, col:126> 1
|-FunctionDecl 0x56395e2cfd10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56395e2cfc58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56395e2cfdb8 <line:397:22>
| `-NonNullAttr 0x56395e2cfe10 <col:63, col:77> 1
|-FunctionDecl 0x56395e2d0038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x56395e2cfe58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56395e2cfed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x56395e2d00e8 <line:400:22>
| `-NonNullAttr 0x56395e2d0140 <col:63, col:80> 1 2
|-FunctionDecl 0x56395e2d0348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56395e2d0188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56395e2d0208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x56395e2d03f8 <line:403:22>
| `-NonNullAttr 0x56395e2d0450 <col:63, col:77> 1
|-FunctionDecl 0x56395e2d06a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x56395e2d0498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56395e2d0540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x56395e2d0758 <line:406:22>
| `-NonNullAttr 0x56395e2d07b0 <col:63, col:80> 1 2
|-FunctionDecl 0x56395e2d19e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56395e2d07f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56395e2d0870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56395e2d1a98 <line:409:22>
| `-NonNullAttr 0x56395e2d1af0 <col:63, col:77> 1
|-FunctionDecl 0x56395e2d1d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56395e2d1b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56395e2d1bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56395e2d1dd8 <line:412:22>
| `-NonNullAttr 0x56395e2d1e30 <col:63, col:80> 1 2
|-FunctionDecl 0x56395e2d2068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56395e2d1e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x56395e2d1f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x56395e2d2118 <col:37>
| `-NonNullAttr 0x56395e2d2170 <col:78, col:95> 1 2
|-FunctionDecl 0x56395e2d2358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56395e2d21b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56395e2d2238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x56395e2d2408 <line:418:22>
| `-NonNullAttr 0x56395e2d2460 <col:63, col:80> 1 2
|-FunctionDecl 0x56395e2d25e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56395e2d24a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56395e2d2528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x56395e2d2698 <line:420:22>
| `-NonNullAttr 0x56395e2d26f0 <col:63, col:77> 1
|-FunctionDecl 0x56395e2d2898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56395e2d2738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56395e2d27b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x56395e2d2948 <line:423:22>
| `-NonNullAttr 0x56395e2d29c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56395e2d2b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56395e2d2a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56395e2d2a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x56395e2d2bf8 <line:426:22>
| `-NonNullAttr 0x56395e2d2c50 <col:63, col:77> 1
|-FunctionDecl 0x56395e2d2df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56395e2d2c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56395e2d2d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56395e2d2ea8 <line:429:22>
| `-NonNullAttr 0x56395e2d2f00 <col:63, col:80> 1 2
|-FunctionDecl 0x56395e2d3088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56395e2d2f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56395e2d2fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x56395e2d3138 <line:431:22>
| `-NonNullAttr 0x56395e2d3190 <col:63, col:77> 1
|-FunctionDecl 0x56395e2d33b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x56395e2d31d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56395e2d3258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x56395e2d3468 <line:434:22>
| |-NonNullAttr 0x56395e2d34c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x56395e2d34f8 <col:100> "" ""
|-FunctionDecl 0x56395e2d3708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x56395e2d3548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56395e2d35c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x56395e2d37b8 <line:437:22>
| |-NonNullAttr 0x56395e2d3810 <col:63, col:77> 1
| `-DeprecatedAttr 0x56395e2d3848 <col:97> "" ""
|-FunctionDecl 0x56395e2d3a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56395e2d3898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56395e2d3910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56395e2d3af8 <line:440:22>
| `-NonNullAttr 0x56395e2d3b50 <col:63, col:80> 1 2
|-FunctionDecl 0x56395e2d3cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56395e2d3b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56395e2d3c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56395e2d3d80 <line:443:22>
| `-NonNullAttr 0x56395e2d3dd8 <col:63, col:77> 1
|-FunctionDecl 0x56395e2d40c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56395e2d3e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56395e2d3ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x56395e2d3f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56395e2d4180 <line:447:22>
| `-NonNullAttr 0x56395e2d41d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x56395e2d4488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x56395e2d4230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56395e2d42b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x56395e2d4328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56395e2d4540 <col:43>
| `-NonNullAttr 0x56395e2d4598 <col:84, col:98> 1
|-FunctionDecl 0x56395e2d4858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56395e2d45e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56395e2d4668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x56395e2d46f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x56395e2d4910 <line:452:22>
| `-NonNullAttr 0x56395e2d4968 <col:63, col:77> 3
|-FunctionDecl 0x56395e2d4c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56395e2d49e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56395e2d4a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x56395e2d4af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56395e2d4d30 <line:456:22>
| `-NonNullAttr 0x56395e2d4d88 <col:63, col:80> 2 3
|-FunctionDecl 0x56395e2d4f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x56395e2d4dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56395e2d4e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x56395e2d5028 <line:458:22>
|-FunctionDecl 0x56395e2d53f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x56395e2d50f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x56395e2d5290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x56395e2d54a8 <col:52, col:69> 1 2
|-FunctionDecl 0x56395e2d5650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x56395e2d5530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x56395e2d55b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x56395e2d5838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x56395e2d5718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x56395e2d5798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x56395e2d59f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x56395e2d58f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x56395e2d5b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x56395e2d5bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x56395e2d5c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x56395e2d5d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x56395e2d5dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x56395e2d5fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_8/mix027_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x56395e2d6098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x56395e2d6150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x56395e2d60f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x56395e2d5c50 '__pthread_unwind_buf_t'
| |   `-Record 0x56395e2d5bd0 ''
| `-AlignedAttr 0x56395e2d61a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x56395e2d6220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x56395e2d6380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x56395e2d63e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x56395e2d6450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x56395e2d64b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x56395e2d66c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56395e2d65b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56395e2d6808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56395e2d6778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56395e2d6a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56395e2d68c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x56395e2d6aa8 <line:487:22>
|-RecordDecl 0x56395e2d6b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x56395e2d6e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x56395e2d6c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x56395e2d6cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x56395e2d6ec8 <col:86>
| `-ReturnsTwiceAttr 0x56395e2d6f20 <col:12> Implicit
|-FunctionDecl 0x56395e2d7248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56395e2d6ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x56395e2d7100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x56395e2d72f8 <line:493:22>
| `-NonNullAttr 0x56395e2d7350 <col:63, col:77> 1
|-FunctionDecl 0x56395e2d74c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56395e2d7398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56395e2d7570 <line:495:22>
| `-NonNullAttr 0x56395e2d75c8 <col:63, col:77> 1
|-FunctionDecl 0x56395e2d76d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56395e2d7618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56395e2d7778 <line:497:22>
| `-NonNullAttr 0x56395e2d77d0 <col:52, col:66> 1
|-FunctionDecl 0x56395e2d78d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56395e2d7818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56395e2d7978 <line:499:22>
| `-NonNullAttr 0x56395e2d79d0 <col:52, col:66> 1
|-FunctionDecl 0x56395e2d8c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56395e2d8a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56395e2d8ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56395e2d8cd8 <col:36>
| `-NonNullAttr 0x56395e2d8d30 <col:66, col:83> 1 2
|-FunctionDecl 0x56395e2d8e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56395e2d8d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56395e2d8ed8 <line:504:22>
| `-NonNullAttr 0x56395e2d8f30 <col:52, col:66> 1
|-FunctionDecl 0x56395e2d91c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56395e2d8fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56395e2d9060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56395e2d9278 <line:508:22>
| `-NonNullAttr 0x56395e2d92d0 <col:63, col:80> 1 2
|-FunctionDecl 0x56395e2d9598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x56395e2d9318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56395e2d9398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x56395e2d9418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x56395e2d9650 <line:512:22>
| `-NonNullAttr 0x56395e2d96a8 <col:63, col:80> 1 3
|-FunctionDecl 0x56395e2d97b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56395e2d96f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56395e2d9858 <line:514:22>
| `-NonNullAttr 0x56395e2d98b0 <col:63, col:77> 1
|-FunctionDecl 0x56395e2d9ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56395e2d9960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56395e2d9b80 <line:516:22>
| `-NonNullAttr 0x56395e2d9bd8 <col:63, col:77> 1
|-FunctionDecl 0x56395e2d9ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56395e2d9c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56395e2d9d88 <line:518:22>
| `-NonNullAttr 0x56395e2d9de0 <col:63, col:77> 1
|-FunctionDecl 0x56395e2da008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56395e2d9e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56395e2d9ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x56395e2da0b8 <line:522:22>
| `-NonNullAttr 0x56395e2da110 <col:63, col:80> 1 2
|-FunctionDecl 0x56395e2da318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56395e2da158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56395e2da1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x56395e2da3c8 <line:525:22>
| `-NonNullAttr 0x56395e2da420 <col:63, col:77> 1
|-FunctionDecl 0x56395e2da5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56395e2da468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56395e2da4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x56395e2da678 <line:528:22>
| `-NonNullAttr 0x56395e2da6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x56395e2da858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56395e2da718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56395e2da798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x56395e2da908 <line:530:22>
| `-NonNullAttr 0x56395e2da960 <col:63, col:77> 1
|-FunctionDecl 0x56395e2dab20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56395e2da9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56395e2daa40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x56395e2dabd0 <line:534:22>
| `-NonNullAttr 0x56395e2dac28 <col:63, col:80> 1 2
|-FunctionDecl 0x56395e2dadb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56395e2dac78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56395e2dacf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x56395e2dae68 <line:537:22>
| `-NonNullAttr 0x56395e2daec0 <col:63, col:77> 1
|-FunctionDecl 0x56395e2db068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56395e2daf08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56395e2daf88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56395e2db118 <line:541:22>
| `-NonNullAttr 0x56395e2db170 <col:63, col:80> 1 2
|-FunctionDecl 0x56395e2db2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56395e2db1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56395e2db238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x56395e2db3a8 <line:544:22>
| `-NonNullAttr 0x56395e2db400 <col:63, col:77> 1
|-FunctionDecl 0x56395e2db5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x56395e2db448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x56395e2db4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x56395e2db698 <line:547:22>
| `-NonNullAttr 0x56395e2db6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x56395e2db878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56395e2db738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56395e2db7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x56395e2db928 <line:550:22>
| `-NonNullAttr 0x56395e2db980 <col:63, col:77> 1
|-FunctionDecl 0x56395e2dccf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x56395e2dcaa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56395e2dcbb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x56395e2dcda8 <col:29>
| `-NonNullAttr 0x56395e2dce00 <col:70, col:84> 1
|-FunctionDecl 0x56395e2dcf78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56395e2dce48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56395e2dd020 <line:555:22>
| `-NonNullAttr 0x56395e2dd078 <col:63, col:77> 1
|-FunctionDecl 0x56395e2dd180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56395e2dd0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56395e2dd228 <line:557:22>
| `-NonNullAttr 0x56395e2dd280 <col:52, col:66> 1
|-FunctionDecl 0x56395e2dd380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56395e2dd2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56395e2dd428 <line:559:19>
| `-NonNullAttr 0x56395e2dd480 <col:49, col:63> 1
|-FunctionDecl 0x56395e2dd6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56395e2dd4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56395e2dd558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56395e2dd768 <col:39>
| `-NonNullAttr 0x56395e2dd7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x56395e2dd8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56395e2dd808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56395e2dd968 <line:564:22>
| `-NonNullAttr 0x56395e2dd9c0 <col:52, col:66> 1
|-FunctionDecl 0x56395e2ddb28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56395e2dda70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56395e2ddbd0 <line:566:22>
| `-NonNullAttr 0x56395e2ddc28 <col:52, col:66> 1
|-FunctionDecl 0x56395e2ddde8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56395e2ddc78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56395e2ddd08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56395e2dde98 <col:39>
| `-NonNullAttr 0x56395e2ddef0 <col:69, col:86> 1 2
|-FunctionDecl 0x56395e2ddff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56395e2ddf38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56395e2de098 <line:571:22>
| `-NonNullAttr 0x56395e2de0f0 <col:52, col:66> 1
|-FunctionDecl 0x56395e2de2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56395e2de1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56395e2de380 <line:573:22>
| `-NonNullAttr 0x56395e2de3d8 <col:63, col:77> 1
|-FunctionDecl 0x56395e2de4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56395e2de428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56395e2de588 <line:575:22>
| `-NonNullAttr 0x56395e2de5e0 <col:63, col:77> 1
|-FunctionDecl 0x56395e2de808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56395e2de628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56395e2de6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x56395e2de8b8 <line:579:22>
| `-NonNullAttr 0x56395e2de910 <col:63, col:80> 1 2
|-FunctionDecl 0x56395e2deb38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56395e2de958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56395e2de9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x56395e2debe8 <line:582:22>
| `-NonNullAttr 0x56395e2dec40 <col:63, col:77> 1
|-FunctionDecl 0x56395e2dede8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56395e2dec88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56395e2ded08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x56395e2dee98 <line:586:22>
| `-NonNullAttr 0x56395e2deef0 <col:63, col:80> 1 2
|-FunctionDecl 0x56395e2df078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56395e2def38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56395e2defb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x56395e2df128 <col:36>
| `-NonNullAttr 0x56395e2df180 <col:77, col:91> 1
|-FunctionDecl 0x56395e2df4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x56395e2df260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56395e2df370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x56395e2df568 <line:591:22>
| `-NonNullAttr 0x56395e2df5c0 <col:63, col:77> 1
|-FunctionDecl 0x56395e2df738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56395e2df608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56395e2df7e0 <line:593:22>
| `-NonNullAttr 0x56395e2df838 <col:63, col:77> 1
|-FunctionDecl 0x56395e2df940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56395e2df888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56395e2df9e8 <line:595:22>
| `-NonNullAttr 0x56395e2dfa40 <col:52, col:66> 1
|-FunctionDecl 0x56395e2dfb58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56395e2dfaa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56395e2dfc00 <line:597:22>
| `-NonNullAttr 0x56395e2dfc58 <col:52, col:66> 1
|-FunctionDecl 0x56395e2dfe88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x56395e2dfca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56395e2dfd20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x56395e2dff38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x56395e2e0268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56395e2dffb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56395e2e0030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56395e2e00c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x56395e2e0320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x56395e2e0538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56395e2e0400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56395e2e05e0 <line:606:22>
| `-NonNullAttr 0x56395e2e0638 <col:63, col:77> 1
|-FunctionDecl 0x56395e2e0740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56395e2e0688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56395e2e07e8 <line:608:22>
| `-NonNullAttr 0x56395e2e0840 <col:63, col:77> 1
|-FunctionDecl 0x56395e2e0aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56395e2e0888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56395e2e0908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x56395e2e0b50 <line:612:22>
| `-NonNullAttr 0x56395e2e0ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x56395e2e0db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x56395e2e0bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56395e2e0c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x56395e2e0e68 <col:37>
| `-NonNullAttr 0x56395e2e0ec0 <col:78, col:92> 1
|-FunctionDecl 0x56395e2e10d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x56395e2e0f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56395e2e0fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x56395e2e1188 <line:618:22>
| `-NonNullAttr 0x56395e2e11e0 <col:63, col:80> 1 2
|-FunctionDecl 0x56395e2e13a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x56395e2e1228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56395e2e12a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x56395e2e1458 <line:621:22>
| `-NonNullAttr 0x56395e2e14b0 <col:63, col:77> 1
|-FunctionDecl 0x56395e2e1758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x56395e2e1590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x56395e2e1610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x56395e2e1808 <line:623:22>
| `-NonNullAttr 0x56395e2e1860 <col:63, col:77> 1
|-FunctionDecl 0x56395e2e19d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56395e2e18a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56395e2e1ab0 <line:625:22>
| `-NonNullAttr 0x56395e2e1b08 <col:63, col:77> 1
|-FunctionDecl 0x56395e2e1c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56395e2e1b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56395e2e1cb8 <line:627:22>
| `-NonNullAttr 0x56395e2e1d10 <col:52, col:66> 1
|-FunctionDecl 0x56395e2e1e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56395e2e1d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56395e2e1eb8 <line:629:22>
| `-NonNullAttr 0x56395e2e1f10 <col:52, col:66> 1
|-FunctionDecl 0x56395e2e2010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56395e2e1f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56395e2e20b8 <line:631:22>
| `-NonNullAttr 0x56395e2e2110 <col:52, col:66> 1
|-FunctionDecl 0x56395e2e24e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x56395e2e21f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x56395e2e2300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56395e2e2380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x56395e2e25a0 <line:635:22>
| `-NonNullAttr 0x56395e2e25f8 <col:63, col:77> 1
|-FunctionDecl 0x56395e2e2778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56395e2e2648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56395e2e2820 <line:637:22>
| `-NonNullAttr 0x56395e2e2878 <col:63, col:77> 1
|-FunctionDecl 0x56395e2e2980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56395e2e28c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56395e2e2a28 <line:639:22>
| `-NonNullAttr 0x56395e2e2a80 <col:52, col:66> 1
|-FunctionDecl 0x56395e2e3c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56395e2e3b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56395e2e3d30 <line:641:22>
| `-NonNullAttr 0x56395e2e3d88 <col:63, col:77> 1
|-FunctionDecl 0x56395e2e3e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56395e2e3dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56395e2e3f38 <line:643:22>
| `-NonNullAttr 0x56395e2e3f90 <col:63, col:77> 1
|-FunctionDecl 0x56395e2e41b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56395e2e3fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56395e2e4058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x56395e2e4268 <line:647:22>
| `-NonNullAttr 0x56395e2e42c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56395e2e44c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x56395e2e4308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x56395e2e4388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x56395e2e4578 <line:650:22>
| `-NonNullAttr 0x56395e2e45d0 <col:63, col:77> 1
|-FunctionDecl 0x56395e2e4918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x56395e2e46b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x56395e2e47d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x56395e2e49c8 <line:653:22>
| `-NonNullAttr 0x56395e2e4a20 <col:63, col:77> 1
|-FunctionDecl 0x56395e2e4b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x56395e2e4a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56395e2e4c30 <col:69>
|-FunctionDecl 0x56395e2e4da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x56395e2e4c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56395e2e4e50 <col:72>
|-FunctionDecl 0x56395e2e5088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x56395e2e4eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x56395e2e4f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x56395e2e5138 <col:44>
|-FunctionDecl 0x56395e2e5358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x56395e2e51a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56395e2e5218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x56395e2e5408 <line:660:22>
| `-NonNullAttr 0x56395e2e5460 <col:63, col:77> 2
|-FunctionDecl 0x56395e2e58a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x56395e2e5540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x56395e2e5650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x56395e2e5760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x56395e2e5960 <col:47>
|-FunctionDecl 0x56395e2e5af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x56395e2e59d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56395e2e5c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x56395e2e5bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56395e2e5da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x56395e2e5d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56395e2e5ef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x56395e2e5e60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56395e2e5fc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x56395e2e6080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x56395e2e6140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x56395e2e61f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x56395e2e6278 prev 0x56395e2e61f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x56395e2e62e0 <col:24> 'int' 0
|-VarDecl 0x56395e2e6318 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x56395e2e6398 prev 0x56395e2e6318 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x56395e2e6400 <col:27> 'int' 0
|-VarDecl 0x56395e2e6438 <line:676:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x56395e2e64b8 prev 0x56395e2e6438 <line:677:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x56395e2e6520 <col:27> 'int' 0
|-VarDecl 0x56395e2e6558 <line:678:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x56395e2e65d8 prev 0x56395e2e6558 <line:679:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x56395e2e6640 <col:27> 'int' 0
|-VarDecl 0x56395e2e6678 <line:680:1, col:5> col:5 used a 'int'
|-VarDecl 0x56395e2e66f8 prev 0x56395e2e6678 <line:681:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x56395e2e6760 <col:9> 'int' 0
|-VarDecl 0x56395e2e6790 <line:682:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x56395e2e6808 <line:683:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x56395e2e6888 <line:684:1, col:5> col:5 used x 'int'
|-VarDecl 0x56395e2e6908 prev 0x56395e2e6888 <line:685:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x56395e2e6970 <col:9> 'int' 0
|-VarDecl 0x56395e2e69a8 <line:686:1, col:5> col:5 used y 'int'
|-VarDecl 0x56395e2e6a28 prev 0x56395e2e69a8 <line:687:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x56395e2e6a90 <col:9> 'int' 0
|-VarDecl 0x56395e2e6b00 <line:688:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x56395e2e6b80 <line:689:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x56395e2e6bf8 <line:690:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x56395e2e6c70 <line:691:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x56395e2e6ce8 <line:692:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x56395e2e6d60 <line:693:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x56395e2e6dd8 <line:694:1, col:7> col:7 used y$r_buff0_thd4 '_Bool'
|-VarDecl 0x56395e2e6e50 <line:695:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x56395e2e6ec8 <line:696:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x56395e2e6f40 <line:697:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x56395e2e6fb8 <line:698:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x56395e2e7030 <line:699:1, col:7> col:7 used y$r_buff1_thd4 '_Bool'
|-VarDecl 0x56395e2e70a8 <line:700:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x56395e2e7128 <line:701:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x56395e2e71a8 <line:702:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x56395e2e7220 <line:703:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x56395e2e72a0 <line:704:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x56395e2e7318 <line:705:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x56395e2e7398 <line:706:1, col:5> col:5 used z 'int'
|-VarDecl 0x56395e2e7418 prev 0x56395e2e7398 <line:707:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x56395e2e7480 <col:9> 'int' 0
|-VarDecl 0x56395e2e74b0 <line:708:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x56395e2e7528 <line:709:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x56395e2e7640 prev 0x56395e2e5af0 <line:710:1, line:724:1> line:710:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x56395e2e75a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56395e2e7c08 <line:711:1, line:724:1>
|   |-CallExpr 0x56395e2e7758 <line:712:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56395e2e7740 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2e76e8 <col:3> 'void ()' Function 0x56395e28ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56395e2e77b8 <line:713:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56395e2e7778 <col:3> 'int' lvalue Var 0x56395e2e66f8 'a' 'int'
|   | `-IntegerLiteral 0x56395e2e7798 <col:7> 'int' 1
|   |-CallExpr 0x56395e2e7810 <line:714:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56395e2e77f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2e77d8 <col:3> 'void ()' Function 0x56395e28cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56395e2e7868 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56395e2e7850 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2e7830 <col:3> 'void ()' Function 0x56395e28ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56395e2e78c8 <line:716:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56395e2e7888 <col:3> 'int' lvalue Var 0x56395e2e6908 'x' 'int'
|   | `-IntegerLiteral 0x56395e2e78a8 <col:7> 'int' 1
|   |-CallExpr 0x56395e2e7920 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56395e2e7908 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2e78e8 <col:3> 'void ()' Function 0x56395e28cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56395e2e7978 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56395e2e7960 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2e7940 <col:3> 'void ()' Function 0x56395e28ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x56395e2e79d0 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56395e2e79b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2e7998 <col:3> 'void ()' Function 0x56395e28cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56395e2e7a28 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56395e2e7a10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2e79f0 <col:3> 'void ()' Function 0x56395e28ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56395e2e7ae0 <line:721:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56395e2e7a48 <col:3> 'int' lvalue Var 0x56395e2e6278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56395e2e7ac0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56395e2e7aa8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56395e2e7a68 <col:22> 'int' lvalue Var 0x56395e2e6278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56395e2e7a88 <col:41> 'int' 1
|   |-CallExpr 0x56395e2e7b48 <line:722:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56395e2e7b30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2e7b10 <col:3> 'void ()' Function 0x56395e28cf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56395e2e7bf8 <line:723:3, col:36>
|     `-CallExpr 0x56395e2e7bd8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56395e2e7bc0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56395e2e7b68 <col:10> 'void *(void)' Function 0x56395e28c958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56395e2e7d28 prev 0x56395e2e5c48 <line:725:1, line:752:1> line:725:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x56395e2e7c90 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56395e2eac40 <line:726:1, line:752:1>
|   |-CallExpr 0x56395e2e7e08 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56395e2e7df0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2e7dd0 <col:3> 'void ()' Function 0x56395e28ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56395e2e7e68 <line:728:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56395e2e7e28 <col:3> 'int' lvalue Var 0x56395e2e6908 'x' 'int'
|   | `-IntegerLiteral 0x56395e2e7e48 <col:7> 'int' 2
|   |-CallExpr 0x56395e2e7ec0 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56395e2e7ea8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2e7e88 <col:3> 'void ()' Function 0x56395e28cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56395e2e7f18 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56395e2e7f00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2e7ee0 <col:3> 'void ()' Function 0x56395e28ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56395e2e7fc8 <line:731:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56395e2e7f38 <col:3> '_Bool' lvalue Var 0x56395e2e74b0 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x56395e2e7fb0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56395e2e7f90 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56395e2e7f78 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56395e2e7f58 <col:19> 'void *(void)' Function 0x56395e28c958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56395e2e8078 <line:732:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56395e2e7fe8 <col:3> '_Bool' lvalue Var 0x56395e2e7528 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x56395e2e8060 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56395e2e8040 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56395e2e8028 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56395e2e8008 <col:19> 'void *(void)' Function 0x56395e28c958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56395e2e80f0 <line:733:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56395e2e8098 <col:3> '_Bool' lvalue Var 0x56395e2e6b00 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56395e2e80d8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56395e2e80b8 <col:21> '_Bool' lvalue Var 0x56395e2e7528 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56395e2e8168 <line:734:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56395e2e8110 <col:3> 'int' lvalue Var 0x56395e2e6b80 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56395e2e8150 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56395e2e8130 <col:15> 'int' lvalue Var 0x56395e2e6a28 'y' 'int'
|   |-BinaryOperator 0x56395e2e85a0 <line:735:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x56395e2e8188 <col:3> 'int' lvalue Var 0x56395e2e6a28 'y' 'int'
|   | `-ConditionalOperator 0x56395e2e8570 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x56395e2e8398 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x56395e2e82b8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x56395e2e81e0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x56395e2e81c8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x56395e2e81a8 <col:8> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x56395e2e8298 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x56395e2e8230 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x56395e2e8218 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56395e2e81f8 <col:27> '_Bool' lvalue Var 0x56395e2e6ce8 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x56395e2e8280 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x56395e2e8268 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x56395e2e8248 <col:46> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x56395e2e8378 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x56395e2e8310 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x56395e2e82f8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x56395e2e82d8 <col:65> '_Bool' lvalue Var 0x56395e2e6ce8 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x56395e2e8360 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x56395e2e8348 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x56395e2e8328 <col:84> '_Bool' lvalue Var 0x56395e2e6f40 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x56395e2e8558 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56395e2e83b8 <col:101> 'int' lvalue Var 0x56395e2e6a28 'y' 'int'
|   |   `-ParenExpr 0x56395e2e8538 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x56395e2e8508 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x56395e2e8478 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56395e2e8430 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56395e2e8418 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56395e2e83d8 <col:106> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56395e2e8460 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56395e2e8448 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56395e2e83f8 <col:124> '_Bool' lvalue Var 0x56395e2e6ce8 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56395e2e84d8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56395e2e8498 <col:141> 'int' lvalue Var 0x56395e2e71a8 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x56395e2e84f0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56395e2e84b8 <col:153> 'int' lvalue Var 0x56395e2e72a0 'y$w_buff1' 'int'
|   |-BinaryOperator 0x56395e2e8ab0 <line:736:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56395e2e85c0 <col:3> 'int' lvalue Var 0x56395e2e71a8 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x56395e2e8a80 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56395e2e8a50 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56395e2e8a38 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56395e2e85e0 <col:15> '_Bool' lvalue Var 0x56395e2e7528 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56395e2e8a68 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56395e2e8600 <col:31> 'int' lvalue Var 0x56395e2e71a8 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x56395e2e8a18 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56395e2e89e8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56395e2e8810 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56395e2e8730 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56395e2e8658 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56395e2e8640 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56395e2e8620 <col:45> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56395e2e8710 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56395e2e86a8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56395e2e8690 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56395e2e8670 <col:64> '_Bool' lvalue Var 0x56395e2e6ce8 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x56395e2e86f8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56395e2e86e0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56395e2e86c0 <col:83> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56395e2e87f0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56395e2e8788 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56395e2e8770 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56395e2e8750 <col:102> '_Bool' lvalue Var 0x56395e2e6ce8 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x56395e2e87d8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56395e2e87c0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56395e2e87a0 <col:121> '_Bool' lvalue Var 0x56395e2e6f40 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56395e2e89d0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56395e2e8830 <col:138> 'int' lvalue Var 0x56395e2e71a8 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x56395e2e89b0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56395e2e8980 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56395e2e88f0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56395e2e88a8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56395e2e8890 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56395e2e8850 <col:151> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56395e2e88d8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56395e2e88c0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56395e2e8870 <col:169> '_Bool' lvalue Var 0x56395e2e6ce8 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x56395e2e8950 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56395e2e8910 <col:186> 'int' lvalue Var 0x56395e2e71a8 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x56395e2e8968 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56395e2e8930 <col:198> 'int' lvalue Var 0x56395e2e71a8 'y$w_buff0' 'int'
|   |-BinaryOperator 0x56395e2e8fd0 <line:737:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56395e2e8ad0 <col:3> 'int' lvalue Var 0x56395e2e72a0 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x56395e2e8fa0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56395e2e8f70 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56395e2e8f58 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56395e2e8af0 <col:15> '_Bool' lvalue Var 0x56395e2e7528 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56395e2e8f88 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56395e2e8b20 <col:31> 'int' lvalue Var 0x56395e2e72a0 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x56395e2e8f38 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56395e2e8f08 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56395e2e8d30 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56395e2e8c50 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56395e2e8b78 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56395e2e8b60 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56395e2e8b40 <col:45> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56395e2e8c30 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56395e2e8bc8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56395e2e8bb0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56395e2e8b90 <col:64> '_Bool' lvalue Var 0x56395e2e6ce8 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x56395e2e8c18 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56395e2e8c00 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56395e2e8be0 <col:83> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56395e2e8d10 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56395e2e8ca8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56395e2e8c90 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56395e2e8c70 <col:102> '_Bool' lvalue Var 0x56395e2e6ce8 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x56395e2e8cf8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56395e2e8ce0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56395e2e8cc0 <col:121> '_Bool' lvalue Var 0x56395e2e6f40 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56395e2e8ef0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56395e2e8d50 <col:138> 'int' lvalue Var 0x56395e2e72a0 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x56395e2e8ed0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56395e2e8ea0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56395e2e8e10 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56395e2e8dc8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56395e2e8db0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56395e2e8d70 <col:151> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56395e2e8df8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56395e2e8de0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56395e2e8d90 <col:169> '_Bool' lvalue Var 0x56395e2e6ce8 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x56395e2e8e70 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56395e2e8e30 <col:186> 'int' lvalue Var 0x56395e2e72a0 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x56395e2e8e88 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56395e2e8e50 <col:198> 'int' lvalue Var 0x56395e2e72a0 'y$w_buff1' 'int'
|   |-BinaryOperator 0x56395e2e9578 <line:738:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56395e2e8ff0 <col:3> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56395e2e9560 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56395e2e9530 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56395e2e94e8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56395e2e94d0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56395e2e9010 <col:20> '_Bool' lvalue Var 0x56395e2e7528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56395e2e9518 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56395e2e9500 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56395e2e9030 <col:36> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56395e2e94b0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56395e2e9480 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56395e2e9240 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56395e2e9160 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56395e2e9088 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56395e2e9070 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56395e2e9050 <col:55> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56395e2e9140 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56395e2e90d8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56395e2e90c0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56395e2e90a0 <col:74> '_Bool' lvalue Var 0x56395e2e6ce8 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x56395e2e9128 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56395e2e9110 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56395e2e90f0 <col:93> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56395e2e9220 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56395e2e91b8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56395e2e91a0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56395e2e9180 <col:112> '_Bool' lvalue Var 0x56395e2e6ce8 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x56395e2e9208 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56395e2e91f0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56395e2e91d0 <col:131> '_Bool' lvalue Var 0x56395e2e6f40 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x56395e2e9468 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56395e2e9450 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56395e2e9260 <col:148> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56395e2e9430 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56395e2e9400 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56395e2e9320 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56395e2e92d8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56395e2e92c0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56395e2e9280 <col:166> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56395e2e9308 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56395e2e92f0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56395e2e92a0 <col:184> '_Bool' lvalue Var 0x56395e2e6ce8 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x56395e2e93b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56395e2e9370 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56395e2e9340 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56395e2e93e8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56395e2e93d0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56395e2e9398 <col:212> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56395e2e9b78 <line:739:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56395e2e9598 <col:3> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56395e2e9b60 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56395e2e9b30 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56395e2e9ab0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56395e2e9a98 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56395e2e95b8 <col:20> '_Bool' lvalue Var 0x56395e2e7528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56395e2e9ae0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56395e2e9ac8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56395e2e95d8 <col:36> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56395e2e9a78 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56395e2e9a48 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56395e2e97e8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56395e2e9708 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56395e2e9630 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56395e2e9618 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56395e2e95f8 <col:55> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56395e2e96e8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56395e2e9680 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56395e2e9668 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56395e2e9648 <col:74> '_Bool' lvalue Var 0x56395e2e6ce8 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x56395e2e96d0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56395e2e96b8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56395e2e9698 <col:93> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56395e2e97c8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56395e2e9760 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56395e2e9748 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56395e2e9728 <col:112> '_Bool' lvalue Var 0x56395e2e6ce8 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x56395e2e97b0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56395e2e9798 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56395e2e9778 <col:131> '_Bool' lvalue Var 0x56395e2e6f40 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x56395e2e9a30 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56395e2e9a18 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56395e2e9808 <col:148> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56395e2e99f8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56395e2e99c8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56395e2e98c8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56395e2e9880 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56395e2e9868 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56395e2e9828 <col:166> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56395e2e98b0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56395e2e9898 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56395e2e9848 <col:184> '_Bool' lvalue Var 0x56395e2e6ce8 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x56395e2e9998 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56395e2e9918 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56395e2e98e8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56395e2e99b0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56395e2e9970 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56395e2e9940 <col:219> 'int' 0
|   |-BinaryOperator 0x56395e2ea120 <line:740:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56395e2e9b98 <col:3> '_Bool' lvalue Var 0x56395e2e6ce8 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56395e2ea108 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56395e2ea0d8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56395e2ea090 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56395e2ea078 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56395e2e9bb8 <col:20> '_Bool' lvalue Var 0x56395e2e7528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56395e2ea0c0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56395e2ea0a8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56395e2e9bd8 <col:36> '_Bool' lvalue Var 0x56395e2e6ce8 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x56395e2ea058 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56395e2ea028 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56395e2e9de8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56395e2e9d08 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56395e2e9c30 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56395e2e9c18 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56395e2e9bf8 <col:55> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56395e2e9ce8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56395e2e9c80 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56395e2e9c68 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56395e2e9c48 <col:74> '_Bool' lvalue Var 0x56395e2e6ce8 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x56395e2e9cd0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56395e2e9cb8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56395e2e9c98 <col:93> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56395e2e9dc8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56395e2e9d60 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56395e2e9d48 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56395e2e9d28 <col:112> '_Bool' lvalue Var 0x56395e2e6ce8 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x56395e2e9db0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56395e2e9d98 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56395e2e9d78 <col:131> '_Bool' lvalue Var 0x56395e2e6f40 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x56395e2ea010 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56395e2e9ff8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56395e2e9e08 <col:148> '_Bool' lvalue Var 0x56395e2e6ce8 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x56395e2e9fd8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56395e2e9fa8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56395e2e9ec8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56395e2e9e80 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56395e2e9e68 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56395e2e9e28 <col:166> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56395e2e9eb0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56395e2e9e98 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56395e2e9e48 <col:184> '_Bool' lvalue Var 0x56395e2e6ce8 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x56395e2e9f60 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56395e2e9f18 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56395e2e9ee8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56395e2e9f90 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56395e2e9f78 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56395e2e9f40 <col:212> '_Bool' lvalue Var 0x56395e2e6ce8 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56395e2ea6e8 <line:741:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56395e2ea140 <col:3> '_Bool' lvalue Var 0x56395e2e6f40 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56395e2ea6d0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56395e2ea6a0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56395e2ea658 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56395e2ea640 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56395e2ea160 <col:20> '_Bool' lvalue Var 0x56395e2e7528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56395e2ea688 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56395e2ea670 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56395e2ea180 <col:36> '_Bool' lvalue Var 0x56395e2e6f40 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x56395e2ea620 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56395e2ea5f0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56395e2ea390 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56395e2ea2b0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56395e2ea1d8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56395e2ea1c0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56395e2ea1a0 <col:55> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56395e2ea290 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56395e2ea228 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56395e2ea210 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56395e2ea1f0 <col:74> '_Bool' lvalue Var 0x56395e2e6ce8 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x56395e2ea278 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56395e2ea260 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56395e2ea240 <col:93> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56395e2ea370 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56395e2ea308 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56395e2ea2f0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56395e2ea2d0 <col:112> '_Bool' lvalue Var 0x56395e2e6ce8 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x56395e2ea358 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56395e2ea340 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56395e2ea320 <col:131> '_Bool' lvalue Var 0x56395e2e6f40 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x56395e2ea5d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56395e2ea5c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56395e2ea3b0 <col:148> '_Bool' lvalue Var 0x56395e2e6f40 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x56395e2ea5a0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56395e2ea570 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56395e2ea470 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56395e2ea428 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56395e2ea410 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56395e2ea3d0 <col:166> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56395e2ea458 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56395e2ea440 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56395e2ea3f0 <col:184> '_Bool' lvalue Var 0x56395e2e6ce8 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x56395e2ea540 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56395e2ea4c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56395e2ea490 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56395e2ea558 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56395e2ea518 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56395e2ea4e8 <col:219> 'int' 0
|   |-BinaryOperator 0x56395e2ea760 <line:742:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56395e2ea708 <col:3> 'int' lvalue Var 0x56395e2e6398 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x56395e2ea748 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56395e2ea728 <col:25> 'int' lvalue Var 0x56395e2e6a28 'y' 'int'
|   |-BinaryOperator 0x56395e2ea890 <line:743:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x56395e2ea780 <col:3> 'int' lvalue Var 0x56395e2e6a28 'y' 'int'
|   | `-ConditionalOperator 0x56395e2ea860 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x56395e2ea818 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56395e2ea800 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56395e2ea7a0 <col:7> '_Bool' lvalue Var 0x56395e2e6b00 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x56395e2ea830 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56395e2ea7c0 <col:25> 'int' lvalue Var 0x56395e2e6b80 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x56395e2ea848 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x56395e2ea7e0 <col:37> 'int' lvalue Var 0x56395e2e6a28 'y' 'int'
|   |-BinaryOperator 0x56395e2ea928 <line:744:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x56395e2ea8b0 <col:3> '_Bool' lvalue Var 0x56395e2e6b00 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56395e2ea900 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56395e2ea8d0 <col:28> 'int' 0
|   |-CallExpr 0x56395e2ea980 <line:745:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56395e2ea968 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2ea948 <col:3> 'void ()' Function 0x56395e28cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56395e2ea9d8 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56395e2ea9c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2ea9a0 <col:3> 'void ()' Function 0x56395e28ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x56395e2eaa30 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56395e2eaa18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2ea9f8 <col:3> 'void ()' Function 0x56395e28cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56395e2eaa88 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56395e2eaa70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2eaa50 <col:3> 'void ()' Function 0x56395e28ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56395e2eab60 <line:749:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56395e2eaaa8 <col:3> 'int' lvalue Var 0x56395e2e6278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56395e2eab40 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56395e2eab08 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56395e2eaac8 <col:22> 'int' lvalue Var 0x56395e2e6278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56395e2eaae8 <col:41> 'int' 1
|   |-CallExpr 0x56395e2eabb8 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56395e2eaba0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2eab80 <col:3> 'void ()' Function 0x56395e28cf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56395e2eac30 <line:751:3, col:36>
|     `-CallExpr 0x56395e2eac10 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56395e2eabf8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56395e2eabd8 <col:10> 'void *(void)' Function 0x56395e28c958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56395e2eadc8 prev 0x56395e2e5da0 <line:753:1, line:782:1> line:753:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x56395e2ead30 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56395e2ec600 <line:754:1, line:782:1>
|   |-CallExpr 0x56395e2eaea8 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56395e2eae90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2eae70 <col:3> 'void ()' Function 0x56395e28ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56395e2eaf20 <line:756:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56395e2eaec8 <col:3> 'int' lvalue Var 0x56395e2e72a0 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x56395e2eaf08 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56395e2eaee8 <col:15> 'int' lvalue Var 0x56395e2e71a8 'y$w_buff0' 'int'
|   |-BinaryOperator 0x56395e2eaf80 <line:757:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56395e2eaf40 <col:3> 'int' lvalue Var 0x56395e2e71a8 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x56395e2eaf60 <col:15> 'int' 1
|   |-BinaryOperator 0x56395e2eaff8 <line:758:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56395e2eafa0 <col:3> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56395e2eafe0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56395e2eafc0 <col:20> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56395e2eb090 <line:759:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56395e2eb018 <col:3> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x56395e2eb068 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56395e2eb038 <col:27> 'int' 1
|   |-CallExpr 0x56395e2eb218 <line:760:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x56395e2eb200 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x56395e2eb0b0 <col:3> 'void (int)' Function 0x56395e28cbc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x56395e2eb1b0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x56395e2eb190 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x56395e2eb170 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x56395e2eb128 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x56395e2eb110 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x56395e2eb0d0 <col:23> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x56395e2eb158 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x56395e2eb140 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x56395e2eb0f0 <col:41> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56395e2eb298 <line:761:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56395e2eb240 <col:3> '_Bool' lvalue Var 0x56395e2e6e50 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x56395e2eb280 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56395e2eb260 <col:20> '_Bool' lvalue Var 0x56395e2e6bf8 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x56395e2eb310 <line:762:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56395e2eb2b8 <col:3> '_Bool' lvalue Var 0x56395e2e6ec8 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56395e2eb2f8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56395e2eb2d8 <col:20> '_Bool' lvalue Var 0x56395e2e6c70 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56395e2eb388 <line:763:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56395e2eb330 <col:3> '_Bool' lvalue Var 0x56395e2e6f40 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56395e2eb370 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56395e2eb350 <col:20> '_Bool' lvalue Var 0x56395e2e6ce8 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56395e2eb400 <line:764:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56395e2eb3a8 <col:3> '_Bool' lvalue Var 0x56395e2e6fb8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56395e2eb3e8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56395e2eb3c8 <col:20> '_Bool' lvalue Var 0x56395e2e6d60 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56395e2eb478 <line:765:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56395e2eb420 <col:3> '_Bool' lvalue Var 0x56395e2e7030 'y$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56395e2eb460 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56395e2eb440 <col:20> '_Bool' lvalue Var 0x56395e2e6dd8 'y$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56395e2eb510 <line:766:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56395e2eb498 <col:3> '_Bool' lvalue Var 0x56395e2e6d60 'y$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x56395e2eb4e8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56395e2eb4b8 <col:27> 'int' 1
|   |-CallExpr 0x56395e2eb568 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56395e2eb550 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2eb530 <col:3> 'void ()' Function 0x56395e28cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56395e2eb5c0 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56395e2eb5a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2eb588 <col:3> 'void ()' Function 0x56395e28ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56395e2eb620 <line:769:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56395e2eb5e0 <col:3> 'int' lvalue Var 0x56395e2e7418 'z' 'int'
|   | `-IntegerLiteral 0x56395e2eb600 <col:7> 'int' 1
|   |-CallExpr 0x56395e2eb678 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56395e2eb660 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2eb640 <col:3> 'void ()' Function 0x56395e28cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56395e2eb6d0 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56395e2eb6b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2eb698 <col:3> 'void ()' Function 0x56395e28ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56395e2eb9b8 <line:772:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56395e2eb6f0 <col:3> 'int' lvalue Var 0x56395e2e6a28 'y' 'int'
|   | `-ConditionalOperator 0x56395e2eb988 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56395e2eb7b0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56395e2eb768 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56395e2eb750 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56395e2eb710 <col:7> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56395e2eb798 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56395e2eb780 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56395e2eb730 <col:25> '_Bool' lvalue Var 0x56395e2e6d60 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x56395e2eb970 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56395e2eb7d0 <col:42> 'int' lvalue Var 0x56395e2e71a8 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x56395e2eb950 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56395e2eb920 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56395e2eb890 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56395e2eb848 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56395e2eb830 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56395e2eb7f0 <col:55> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56395e2eb878 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56395e2eb860 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56395e2eb810 <col:73> '_Bool' lvalue Var 0x56395e2e6fb8 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56395e2eb8f0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56395e2eb8b0 <col:90> 'int' lvalue Var 0x56395e2e72a0 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56395e2eb908 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56395e2eb8d0 <col:102> 'int' lvalue Var 0x56395e2e6a28 'y' 'int'
|   |-BinaryOperator 0x56395e2ebbe0 <line:773:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56395e2eb9d8 <col:3> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56395e2ebbc8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56395e2ebb98 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56395e2eba98 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56395e2eba50 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56395e2eba38 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56395e2eb9f8 <col:20> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56395e2eba80 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56395e2eba68 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56395e2eba18 <col:38> '_Bool' lvalue Var 0x56395e2e6d60 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56395e2ebb50 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56395e2ebae8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56395e2ebab8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56395e2ebb80 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56395e2ebb68 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56395e2ebb10 <col:66> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56395e2ebec8 <line:774:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56395e2ebc00 <col:3> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56395e2ebeb0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56395e2ebe80 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56395e2ebda0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56395e2ebcc0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56395e2ebc78 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56395e2ebc60 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56395e2ebc20 <col:20> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56395e2ebca8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56395e2ebc90 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56395e2ebc40 <col:38> '_Bool' lvalue Var 0x56395e2e6d60 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56395e2ebd80 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56395e2ebd38 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56395e2ebd20 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56395e2ebce0 <col:56> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56395e2ebd68 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56395e2ebd50 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56395e2ebd00 <col:74> '_Bool' lvalue Var 0x56395e2e6fb8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56395e2ebe38 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56395e2ebdf0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56395e2ebdc0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56395e2ebe68 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56395e2ebe50 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56395e2ebe18 <col:102> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56395e2ec0d0 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56395e2ebee8 <col:3> '_Bool' lvalue Var 0x56395e2e6d60 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56395e2ec0b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56395e2ec088 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56395e2ebfa8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56395e2ebf60 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56395e2ebf48 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56395e2ebf08 <col:20> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56395e2ebf90 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56395e2ebf78 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56395e2ebf28 <col:38> '_Bool' lvalue Var 0x56395e2e6d60 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56395e2ec040 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56395e2ebff8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56395e2ebfc8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56395e2ec070 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56395e2ec058 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56395e2ec020 <col:66> '_Bool' lvalue Var 0x56395e2e6d60 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56395e2ec3b8 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56395e2ec0f0 <col:3> '_Bool' lvalue Var 0x56395e2e6fb8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56395e2ec3a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56395e2ec370 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56395e2ec290 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56395e2ec1b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56395e2ec168 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56395e2ec150 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56395e2ec110 <col:20> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56395e2ec198 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56395e2ec180 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56395e2ec130 <col:38> '_Bool' lvalue Var 0x56395e2e6d60 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56395e2ec270 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56395e2ec228 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56395e2ec210 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56395e2ec1d0 <col:56> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56395e2ec258 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56395e2ec240 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56395e2ec1f0 <col:74> '_Bool' lvalue Var 0x56395e2e6fb8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56395e2ec328 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56395e2ec2e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56395e2ec2b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56395e2ec358 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56395e2ec340 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56395e2ec308 <col:102> '_Bool' lvalue Var 0x56395e2e6fb8 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x56395e2ec410 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56395e2ec3f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2ec3d8 <col:3> 'void ()' Function 0x56395e28cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56395e2ec468 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56395e2ec450 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2ec430 <col:3> 'void ()' Function 0x56395e28ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56395e2ec520 <line:779:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56395e2ec488 <col:3> 'int' lvalue Var 0x56395e2e6278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56395e2ec500 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56395e2ec4e8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56395e2ec4a8 <col:22> 'int' lvalue Var 0x56395e2e6278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56395e2ec4c8 <col:41> 'int' 1
|   |-CallExpr 0x56395e2ec578 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56395e2ec560 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2ec540 <col:3> 'void ()' Function 0x56395e28cf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56395e2ec5f0 <line:781:3, col:36>
|     `-CallExpr 0x56395e2ec5d0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56395e2ec5b8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56395e2ec598 <col:10> 'void *(void)' Function 0x56395e28c958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56395e2ec798 prev 0x56395e2e5ef8 <line:783:1, line:805:1> line:783:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x56395e2ec700 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56395e2edb70 <line:784:1, line:805:1>
|   |-CallExpr 0x56395e2ec878 <line:785:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56395e2ec860 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2ec840 <col:3> 'void ()' Function 0x56395e28ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56395e2ec8d8 <line:786:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56395e2ec898 <col:3> 'int' lvalue Var 0x56395e2e7418 'z' 'int'
|   | `-IntegerLiteral 0x56395e2ec8b8 <col:7> 'int' 2
|   |-CallExpr 0x56395e2ec930 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56395e2ec918 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2ec8f8 <col:3> 'void ()' Function 0x56395e28cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56395e2ec988 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56395e2ec970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2ec950 <col:3> 'void ()' Function 0x56395e28ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56395e2eca00 <line:789:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56395e2ec9a8 <col:3> 'int' lvalue Var 0x56395e2e64b8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x56395e2ec9e8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56395e2ec9c8 <col:25> 'int' lvalue Var 0x56395e2e7418 'z' 'int'
|   |-CallExpr 0x56395e2eca58 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56395e2eca40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2eca20 <col:3> 'void ()' Function 0x56395e28cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56395e2ecab0 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56395e2eca98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2eca78 <col:3> 'void ()' Function 0x56395e28ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56395e2ecb28 <line:792:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56395e2ecad0 <col:3> 'int' lvalue Var 0x56395e2e65d8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x56395e2ecb10 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56395e2ecaf0 <col:25> 'int' lvalue Var 0x56395e2e66f8 'a' 'int'
|   |-CallExpr 0x56395e2ecb98 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56395e2ecb80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2ecb60 <col:3> 'void ()' Function 0x56395e28cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56395e2ecbf0 <line:794:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56395e2ecbd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2ecbb8 <col:3> 'void ()' Function 0x56395e28ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56395e2eced8 <line:795:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56395e2ecc10 <col:3> 'int' lvalue Var 0x56395e2e6a28 'y' 'int'
|   | `-ConditionalOperator 0x56395e2ecea8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56395e2eccd0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56395e2ecc88 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56395e2ecc70 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56395e2ecc30 <col:7> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56395e2eccb8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56395e2ecca0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56395e2ecc50 <col:25> '_Bool' lvalue Var 0x56395e2e6dd8 'y$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x56395e2ece90 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56395e2eccf0 <col:42> 'int' lvalue Var 0x56395e2e71a8 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x56395e2ece70 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56395e2ece40 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56395e2ecdb0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56395e2ecd68 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56395e2ecd50 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56395e2ecd10 <col:55> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56395e2ecd98 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56395e2ecd80 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56395e2ecd30 <col:73> '_Bool' lvalue Var 0x56395e2e7030 'y$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56395e2ece10 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56395e2ecdd0 <col:90> 'int' lvalue Var 0x56395e2e72a0 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56395e2ece28 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56395e2ecdf0 <col:102> 'int' lvalue Var 0x56395e2e6a28 'y' 'int'
|   |-BinaryOperator 0x56395e2ed0e0 <line:796:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56395e2ecef8 <col:3> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56395e2ed0c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56395e2ed098 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56395e2ecfb8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56395e2ecf70 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56395e2ecf58 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56395e2ecf18 <col:20> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56395e2ecfa0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56395e2ecf88 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56395e2ecf38 <col:38> '_Bool' lvalue Var 0x56395e2e6dd8 'y$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56395e2ed050 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56395e2ed008 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56395e2ecfd8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56395e2ed080 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56395e2ed068 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56395e2ed030 <col:66> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56395e2ed3c8 <line:797:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56395e2ed100 <col:3> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56395e2ed3b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56395e2ed380 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56395e2ed2a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56395e2ed1c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56395e2ed178 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56395e2ed160 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56395e2ed120 <col:20> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56395e2ed1a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56395e2ed190 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56395e2ed140 <col:38> '_Bool' lvalue Var 0x56395e2e6dd8 'y$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x56395e2ed280 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56395e2ed238 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56395e2ed220 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56395e2ed1e0 <col:56> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56395e2ed268 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56395e2ed250 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56395e2ed200 <col:74> '_Bool' lvalue Var 0x56395e2e7030 'y$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56395e2ed338 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56395e2ed2f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56395e2ed2c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56395e2ed368 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56395e2ed350 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56395e2ed318 <col:102> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56395e2ed5d0 <line:798:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56395e2ed3e8 <col:3> '_Bool' lvalue Var 0x56395e2e6dd8 'y$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56395e2ed5b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56395e2ed588 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56395e2ed4a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56395e2ed460 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56395e2ed448 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56395e2ed408 <col:20> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56395e2ed490 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56395e2ed478 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56395e2ed428 <col:38> '_Bool' lvalue Var 0x56395e2e6dd8 'y$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56395e2ed540 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56395e2ed4f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56395e2ed4c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56395e2ed570 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56395e2ed558 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56395e2ed520 <col:66> '_Bool' lvalue Var 0x56395e2e6dd8 'y$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56395e2ed8b8 <line:799:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56395e2ed5f0 <col:3> '_Bool' lvalue Var 0x56395e2e7030 'y$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56395e2ed8a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56395e2ed870 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56395e2ed790 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56395e2ed6b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56395e2ed668 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56395e2ed650 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56395e2ed610 <col:20> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56395e2ed698 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56395e2ed680 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56395e2ed630 <col:38> '_Bool' lvalue Var 0x56395e2e6dd8 'y$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x56395e2ed770 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56395e2ed728 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56395e2ed710 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56395e2ed6d0 <col:56> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56395e2ed758 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56395e2ed740 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56395e2ed6f0 <col:74> '_Bool' lvalue Var 0x56395e2e7030 'y$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56395e2ed828 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56395e2ed7e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56395e2ed7b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56395e2ed858 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56395e2ed840 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56395e2ed808 <col:102> '_Bool' lvalue Var 0x56395e2e7030 'y$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x56395e2ed910 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56395e2ed8f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2ed8d8 <col:3> 'void ()' Function 0x56395e28cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56395e2ed968 <line:801:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56395e2ed950 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2ed930 <col:3> 'void ()' Function 0x56395e28ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56395e2eda20 <line:802:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56395e2ed988 <col:3> 'int' lvalue Var 0x56395e2e6278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56395e2eda00 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56395e2ed9e8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56395e2ed9a8 <col:22> 'int' lvalue Var 0x56395e2e6278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56395e2ed9c8 <col:41> 'int' 1
|   |-CallExpr 0x56395e2eda78 <line:803:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56395e2eda60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56395e2eda40 <col:3> 'void ()' Function 0x56395e28cf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56395e2edaf0 <line:804:3, col:36>
|     `-CallExpr 0x56395e2edad0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56395e2edab8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56395e2eda98 <col:10> 'void *(void)' Function 0x56395e28c958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56395e2edc40 prev 0x56395e2e5fc0 <line:806:1, line:808:1> line:806:6 fence 'void ()'
| `-CompoundStmt 0x56395e2edce0 <line:807:1, line:808:1>
|-FunctionDecl 0x56395e2edd10 prev 0x56395e2e6080 <line:809:1, line:811:1> line:809:6 isync 'void ()'
| `-CompoundStmt 0x56395e2eddb0 <line:810:1, line:811:1>
|-FunctionDecl 0x56395e2edde0 prev 0x56395e2e6140 <line:812:1, line:814:1> line:812:6 lwfence 'void ()'
| `-CompoundStmt 0x56395e2ede80 <line:813:1, line:814:1>
`-FunctionDecl 0x56395e2edee8 <line:815:1, line:841:1> line:815:5 main 'int ()'
  `-CompoundStmt 0x56395e2eff00 <line:816:1, line:841:1>
    |-DeclStmt 0x56395e2ee000 <line:817:3, col:17>
    | `-VarDecl 0x56395e2edf98 <col:3, col:13> col:13 used t719 'pthread_t':'unsigned long'
    |-CallExpr 0x56395e2ee208 <line:818:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56395e2ee1f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56395e2ee018 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56395e2cd488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56395e2ee058 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56395e2ee038 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56395e2edf98 't719' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56395e2ee248 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56395e2ee0d0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56395e2ee0a8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56395e2ee070 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56395e2ee260 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56395e2ee0f0 <col:38> 'void *(void *)' Function 0x56395e2e7640 'P0' 'void *(void *)'
    | `-ParenExpr 0x56395e2ee170 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56395e2ee148 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56395e2ee110 <col:51> 'int' 0
    |-DeclStmt 0x56395e2ee2f0 <line:819:3, col:17>
    | `-VarDecl 0x56395e2ee288 <col:3, col:13> col:13 used t720 'pthread_t':'unsigned long'
    |-CallExpr 0x56395e2ee498 <line:820:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56395e2ee480 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56395e2ee308 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56395e2cd488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56395e2ee348 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56395e2ee328 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56395e2ee288 't720' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56395e2ee4d8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56395e2ee3c0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56395e2ee398 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56395e2ee360 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56395e2ee4f0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56395e2ee3e0 <col:38> 'void *(void *)' Function 0x56395e2e7d28 'P1' 'void *(void *)'
    | `-ParenExpr 0x56395e2ee460 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56395e2ee438 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56395e2ee400 <col:51> 'int' 0
    |-DeclStmt 0x56395e2ee580 <line:821:3, col:17>
    | `-VarDecl 0x56395e2ee518 <col:3, col:13> col:13 used t721 'pthread_t':'unsigned long'
    |-CallExpr 0x56395e2ee728 <line:822:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56395e2ee710 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56395e2ee598 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56395e2cd488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56395e2ee5d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56395e2ee5b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56395e2ee518 't721' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56395e2ee768 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56395e2ee650 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56395e2ee628 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56395e2ee5f0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56395e2ee780 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56395e2ee670 <col:38> 'void *(void *)' Function 0x56395e2eadc8 'P2' 'void *(void *)'
    | `-ParenExpr 0x56395e2ee6f0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56395e2ee6c8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56395e2ee690 <col:51> 'int' 0
    |-DeclStmt 0x56395e2ee810 <line:823:3, col:17>
    | `-VarDecl 0x56395e2ee7a8 <col:3, col:13> col:13 used t722 'pthread_t':'unsigned long'
    |-CallExpr 0x56395e2ee9b8 <line:824:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56395e2ee9a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56395e2ee828 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56395e2cd488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56395e2ee868 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56395e2ee848 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56395e2ee7a8 't722' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56395e2ee9f8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56395e2ee8e0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56395e2ee8b8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56395e2ee880 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56395e2eea10 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56395e2ee900 <col:38> 'void *(void *)' Function 0x56395e2ec798 'P3' 'void *(void *)'
    | `-ParenExpr 0x56395e2ee980 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56395e2ee958 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56395e2ee920 <col:51> 'int' 0
    |-CallExpr 0x56395e2eea60 <line:825:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56395e2eea48 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56395e2eea28 <col:3> 'void ()' Function 0x56395e28ce40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56395e2eeb30 <line:826:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x56395e2eea80 <col:3> '_Bool' lvalue Var 0x56395e2e6790 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x56395e2eeb18 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x56395e2eeaf8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x56395e2eeae0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x56395e2eeaa0 <col:21> 'int' lvalue Var 0x56395e2e6278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x56395e2eeac0 <col:41> 'int' 4
    |-CallExpr 0x56395e2eeb98 <line:827:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56395e2eeb80 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56395e2eeb50 <col:3> 'void ()' Function 0x56395e28cf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56395e2eec10 <line:828:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56395e2eebf8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56395e2eebb8 <col:3> 'void (int)' Function 0x56395e28c790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x56395e2eec50 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56395e2eec38 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56395e2eebd8 <col:21> '_Bool' lvalue Var 0x56395e2e6790 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x56395e2eeca0 <line:829:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56395e2eec88 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56395e2eec68 <col:3> 'void ()' Function 0x56395e28ce40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56395e2eef88 <line:830:3, col:103> 'int' '='
    | |-DeclRefExpr 0x56395e2eecc0 <col:3> 'int' lvalue Var 0x56395e2e6a28 'y' 'int'
    | `-ConditionalOperator 0x56395e2eef58 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x56395e2eed80 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x56395e2eed38 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x56395e2eed20 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x56395e2eece0 <col:7> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x56395e2eed68 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x56395e2eed50 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x56395e2eed00 <col:25> '_Bool' lvalue Var 0x56395e2e6bf8 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56395e2eef40 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56395e2eeda0 <col:42> 'int' lvalue Var 0x56395e2e71a8 'y$w_buff0' 'int'
    |   `-ParenExpr 0x56395e2eef20 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x56395e2eeef0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x56395e2eee60 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56395e2eee18 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56395e2eee00 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56395e2eedc0 <col:55> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56395e2eee48 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56395e2eee30 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56395e2eede0 <col:73> '_Bool' lvalue Var 0x56395e2e6e50 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56395e2eeec0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56395e2eee80 <col:90> 'int' lvalue Var 0x56395e2e72a0 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x56395e2eeed8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56395e2eeea0 <col:102> 'int' lvalue Var 0x56395e2e6a28 'y' 'int'
    |-BinaryOperator 0x56395e2ef190 <line:831:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56395e2eefa8 <col:3> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56395e2ef178 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56395e2ef148 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56395e2ef068 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56395e2ef020 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56395e2ef008 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56395e2eefc8 <col:20> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56395e2ef050 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56395e2ef038 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56395e2eefe8 <col:38> '_Bool' lvalue Var 0x56395e2e6bf8 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56395e2ef100 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56395e2ef0b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56395e2ef088 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56395e2ef130 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56395e2ef118 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56395e2ef0e0 <col:66> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56395e2ef478 <line:832:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56395e2ef1b0 <col:3> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56395e2ef460 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56395e2ef430 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56395e2ef350 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56395e2ef270 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56395e2ef228 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56395e2ef210 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56395e2ef1d0 <col:20> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56395e2ef258 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56395e2ef240 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56395e2ef1f0 <col:38> '_Bool' lvalue Var 0x56395e2e6bf8 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56395e2ef330 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56395e2ef2e8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56395e2ef2d0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56395e2ef290 <col:56> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56395e2ef318 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56395e2ef300 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56395e2ef2b0 <col:74> '_Bool' lvalue Var 0x56395e2e6e50 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56395e2ef3e8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56395e2ef3a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56395e2ef370 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56395e2ef418 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56395e2ef400 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56395e2ef3c8 <col:102> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x56395e2ef680 <line:833:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56395e2ef498 <col:3> '_Bool' lvalue Var 0x56395e2e6bf8 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56395e2ef668 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56395e2ef638 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56395e2ef558 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56395e2ef510 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56395e2ef4f8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56395e2ef4b8 <col:20> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56395e2ef540 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56395e2ef528 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56395e2ef4d8 <col:38> '_Bool' lvalue Var 0x56395e2e6bf8 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56395e2ef5f0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56395e2ef5a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56395e2ef578 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56395e2ef620 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56395e2ef608 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56395e2ef5d0 <col:66> '_Bool' lvalue Var 0x56395e2e6bf8 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56395e2ef968 <line:834:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56395e2ef6a0 <col:3> '_Bool' lvalue Var 0x56395e2e6e50 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56395e2ef950 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56395e2ef920 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56395e2ef840 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56395e2ef760 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56395e2ef718 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56395e2ef700 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56395e2ef6c0 <col:20> '_Bool' lvalue Var 0x56395e2e7220 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56395e2ef748 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56395e2ef730 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56395e2ef6e0 <col:38> '_Bool' lvalue Var 0x56395e2e6bf8 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56395e2ef820 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56395e2ef7d8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56395e2ef7c0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56395e2ef780 <col:56> '_Bool' lvalue Var 0x56395e2e7318 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56395e2ef808 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56395e2ef7f0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56395e2ef7a0 <col:74> '_Bool' lvalue Var 0x56395e2e6e50 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56395e2ef8d8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56395e2ef890 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56395e2ef860 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56395e2ef908 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56395e2ef8f0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56395e2ef8b8 <col:102> '_Bool' lvalue Var 0x56395e2e6e50 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x56395e2ef9c0 <line:835:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56395e2ef9a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56395e2ef988 <col:3> 'void ()' Function 0x56395e28cf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56395e2efa18 <line:836:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56395e2efa00 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56395e2ef9e0 <col:3> 'void ()' Function 0x56395e28ce40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56395e2efda8 <line:837:3, col:123> '_Bool' '='
    | |-DeclRefExpr 0x56395e2efa38 <col:3> '_Bool' lvalue Var 0x56395e2e6808 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x56395e2efd90 <col:21, col:123> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x56395e2efd78 <col:21, col:123> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x56395e2efd58 <col:22, col:123> 'int'
    |       `-BinaryOperator 0x56395e2efd38 <col:23, col:122> 'int' '&&'
    |         |-BinaryOperator 0x56395e2efca0 <col:23, col:94> 'int' '&&'
    |         | |-BinaryOperator 0x56395e2efc08 <col:23, col:66> 'int' '&&'
    |         | | |-BinaryOperator 0x56395e2efb48 <col:23, col:38> 'int' '&&'
    |         | | | |-BinaryOperator 0x56395e2efab0 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x56395e2efa98 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x56395e2efa58 <col:23> 'int' lvalue Var 0x56395e2e6908 'x' 'int'
    |         | | | | `-IntegerLiteral 0x56395e2efa78 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x56395e2efb28 <col:33, col:38> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x56395e2efb10 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x56395e2efad0 <col:33> 'int' lvalue Var 0x56395e2e7418 'z' 'int'
    |         | | |   `-IntegerLiteral 0x56395e2efaf0 <col:38> 'int' 2
    |         | | `-BinaryOperator 0x56395e2efbe8 <col:43, col:66> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x56395e2efbd0 <col:43> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x56395e2efb90 <col:43> 'int' lvalue Var 0x56395e2e6398 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x56395e2efbb0 <col:66> 'int' 0
    |         | `-BinaryOperator 0x56395e2efc80 <col:71, col:94> 'int' '=='
    |         |   |-ImplicitCastExpr 0x56395e2efc68 <col:71> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x56395e2efc28 <col:71> 'int' lvalue Var 0x56395e2e64b8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x56395e2efc48 <col:94> 'int' 2
    |         `-BinaryOperator 0x56395e2efd18 <col:99, col:122> 'int' '=='
    |           |-ImplicitCastExpr 0x56395e2efd00 <col:99> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56395e2efcc0 <col:99> 'int' lvalue Var 0x56395e2e65d8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x56395e2efce0 <col:122> 'int' 0
    |-CallExpr 0x56395e2efe00 <line:838:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56395e2efde8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56395e2efdc8 <col:3> 'void ()' Function 0x56395e28cf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56395e2efe78 <line:839:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56395e2efe60 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56395e2efe20 <col:3> 'void (int)' Function 0x56395e28cbc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x56395e2efeb8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56395e2efea0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56395e2efe40 <col:21> '_Bool' lvalue Var 0x56395e2e6808 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x56395e2efef0 <line:840:3, col:10>
      `-IntegerLiteral 0x56395e2efed0 <col:10> 'int' 0
