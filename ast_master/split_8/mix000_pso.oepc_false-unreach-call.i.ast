TranslationUnitDecl 0x55ef8ae4de18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55ef8ae4e6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55ef8ae4e3b0 '__int128'
|-TypedefDecl 0x55ef8ae4e748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55ef8ae4e3d0 'unsigned __int128'
|-TypedefDecl 0x55ef8ae4ea50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55ef8ae4e820 'struct __NSConstantString_tag'
|   `-Record 0x55ef8ae4e7a0 '__NSConstantString_tag'
|-TypedefDecl 0x55ef8ae4eaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55ef8ae4eab0 'char *'
|   `-BuiltinType 0x55ef8ae4deb0 'char'
|-TypedefDecl 0x55ef8ae8d650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55ef8ae4ed90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55ef8ae4ebd0 'struct __va_list_tag'
|     `-Record 0x55ef8ae4eb50 '__va_list_tag'
|-FunctionDecl 0x55ef8ae8d770 <./split_8/mix000_pso.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55ef8ae8d940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55ef8ae8d870 <col:31> col:34 'int'
|-FunctionDecl 0x55ef8ae8dab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55ef8ae8dbe0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55ef8ae8dd28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55ef8ae8dc98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55ef8ae8df58 <col:40, col:99>
|   |-IfStmt 0x55ef8ae8df28 <col:42, col:88>
|   | |-UnaryOperator 0x55ef8ae8de08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55ef8ae8ddf0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55ef8ae8ddd0 <col:47> 'int' lvalue ParmVar 0x55ef8ae8dc98 'expression' 'int'
|   | `-CompoundStmt 0x55ef8ae8df10 <col:59, col:88>
|   |   `-LabelStmt 0x55ef8ae8def8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55ef8ae8de88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55ef8ae8de70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55ef8ae8de20 <col:68> 'void () __attribute__((noreturn))' Function 0x55ef8ae8dbe0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55ef8ae8df40 <col:89>
|   `-ReturnStmt 0x55ef8ae8df48 <col:91>
|-FunctionDecl 0x55ef8ae8dfa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55ef8ae8e060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55ef8ae8e3e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55ef8ae8e118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55ef8ae8e198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55ef8ae8e218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55ef8ae8e298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55ef8ae8e4a0 <line:11:22>
|-FunctionDecl 0x55ef8aeb4520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55ef8ae8e510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55ef8ae8e590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55ef8aeb4350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55ef8aeb43d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55ef8aeb45e0 <line:14:22>
|-FunctionDecl 0x55ef8aeb4890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55ef8aeb4650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55ef8aeb46d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55ef8aeb4750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55ef8aeb4948 <line:16:22>
|-TypedefDecl 0x55ef8aeb49b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55ef8ae4df70 'unsigned char'
|-TypedefDecl 0x55ef8aeb4a28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55ef8ae4df90 'unsigned short'
|-TypedefDecl 0x55ef8aeb4a98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55ef8ae4dfb0 'unsigned int'
|-TypedefDecl 0x55ef8aeb4b08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55ef8ae4dfd0 'unsigned long'
|-TypedefDecl 0x55ef8aeb4b78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55ef8ae4ded0 'signed char'
|-TypedefDecl 0x55ef8aeb4be8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55ef8ae4df70 'unsigned char'
|-TypedefDecl 0x55ef8aeb4c58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55ef8ae4def0 'short'
|-TypedefDecl 0x55ef8aeb4cc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55ef8ae4df90 'unsigned short'
|-TypedefDecl 0x55ef8aeb4d38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55ef8ae4df10 'int'
|-TypedefDecl 0x55ef8aeb4da8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55ef8ae4dfb0 'unsigned int'
|-TypedefDecl 0x55ef8aeb4e18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55ef8ae4df30 'long'
|-TypedefDecl 0x55ef8aeb4e88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55ef8ae4dfd0 'unsigned long'
|-TypedefDecl 0x55ef8aeb4ef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55ef8ae4df30 'long'
|-TypedefDecl 0x55ef8aeb4f68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55ef8ae4dfd0 'unsigned long'
|-TypedefDecl 0x55ef8aeb4fd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55ef8ae4dfd0 'unsigned long'
|-TypedefDecl 0x55ef8aeb5048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55ef8ae4dfb0 'unsigned int'
|-TypedefDecl 0x55ef8aeb50b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55ef8ae4dfb0 'unsigned int'
|-TypedefDecl 0x55ef8aeb5128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55ef8ae4dfd0 'unsigned long'
|-TypedefDecl 0x55ef8aeb5198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55ef8ae4dfd0 'unsigned long'
|-TypedefDecl 0x55ef8aeb5208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55ef8ae4dfb0 'unsigned int'
|-TypedefDecl 0x55ef8aeb5278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55ef8ae4dfd0 'unsigned long'
|-TypedefDecl 0x55ef8aeb52e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55ef8ae4df30 'long'
|-TypedefDecl 0x55ef8aeb5378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55ef8ae4df30 'long'
|-TypedefDecl 0x55ef8aeb53e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55ef8ae4df10 'int'
|-RecordDecl 0x55ef8aeb5440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55ef8aeb5588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55ef8aeb5640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55ef8aeb55e0 'struct __fsid_t' sugar
|   `-RecordType 0x55ef8aeb54c0 '__fsid_t'
|     `-Record 0x55ef8aeb5440 ''
|-TypedefDecl 0x55ef8aeb56c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55ef8ae4df30 'long'
|-TypedefDecl 0x55ef8aeb5738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55ef8ae4dfd0 'unsigned long'
|-TypedefDecl 0x55ef8aeb57a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55ef8ae4dfd0 'unsigned long'
|-TypedefDecl 0x55ef8aeb5818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55ef8ae4dfb0 'unsigned int'
|-TypedefDecl 0x55ef8aeb5888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55ef8ae4df30 'long'
|-TypedefDecl 0x55ef8aeb58f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55ef8ae4dfb0 'unsigned int'
|-TypedefDecl 0x55ef8aeb5968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55ef8ae4df30 'long'
|-TypedefDecl 0x55ef8aeb59d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55ef8ae4df10 'int'
|-TypedefDecl 0x55ef8aeb5a48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55ef8ae4df10 'int'
|-TypedefDecl 0x55ef8aeb5ab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55ef8ae4df10 'int'
|-TypedefDecl 0x55ef8aeb5b28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55ef8ae4e630 'void *'
|   `-BuiltinType 0x55ef8ae4de70 'void'
|-TypedefDecl 0x55ef8aeb5b98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55ef8ae4df30 'long'
|-TypedefDecl 0x55ef8aeb5c08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55ef8ae4df30 'long'
|-TypedefDecl 0x55ef8aeb5c78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55ef8ae4df30 'long'
|-TypedefDecl 0x55ef8aeb5ce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55ef8ae4dfd0 'unsigned long'
|-TypedefDecl 0x55ef8aeb5d58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55ef8ae4dfd0 'unsigned long'
|-TypedefDecl 0x55ef8aeb5dc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55ef8ae4dfd0 'unsigned long'
|-TypedefDecl 0x55ef8aeb5e38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55ef8ae4dfd0 'unsigned long'
|-TypedefDecl 0x55ef8aeb5ea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55ef8ae4df30 'long'
|-TypedefDecl 0x55ef8aeb5f18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55ef8ae4df30 'long'
|-TypedefDecl 0x55ef8aeb5f88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55ef8ae4df30 'long'
|-TypedefDecl 0x55ef8aeb5ff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55ef8ae4dfd0 'unsigned long'
|-TypedefDecl 0x55ef8aeb6088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55ef8aeb6050 '__off64_t' sugar
|   |-Typedef 0x55ef8aeb5378 '__off64_t'
|   `-BuiltinType 0x55ef8ae4df30 'long'
|-TypedefDecl 0x55ef8aeb6180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55ef8aeb6140 '__quad_t *'
|   `-TypedefType 0x55ef8aeb60e0 '__quad_t' sugar
|     |-Typedef 0x55ef8aeb4ef8 '__quad_t'
|     `-BuiltinType 0x55ef8ae4df30 'long'
|-TypedefDecl 0x55ef8aeb61f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55ef8ae4eab0 'char *'
|   `-BuiltinType 0x55ef8ae4deb0 'char'
|-TypedefDecl 0x55ef8aeb6260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55ef8ae4df30 'long'
|-TypedefDecl 0x55ef8aeb62d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55ef8ae4dfb0 'unsigned int'
|-FunctionDecl 0x55ef8aeb7458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55ef8aeb7380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55ef8aeb7768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55ef8aeb7758 <line:73:3, col:34>
|     `-CallExpr 0x55ef8aeb7718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55ef8aeb7700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55ef8aeb7690 <col:10> '<builtin fn type>' Function 0x55ef8aeb7500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55ef8aeb7740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55ef8aeb76b0 <col:29> 'unsigned int' lvalue ParmVar 0x55ef8aeb7380 '__bsx' 'unsigned int'
|-FunctionDecl 0x55ef8aeb7500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55ef8aeb75a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55ef8aeb7610 <col:10> Implicit
| `-ConstAttr 0x55ef8aeb7668 <col:10> Implicit
|-FunctionDecl 0x55ef8aeb78c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55ef8aeb77b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55ef8aeb7bd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55ef8aeb7bc8 <line:78:3, col:34>
|     `-CallExpr 0x55ef8aeb7b88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55ef8aeb7b70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55ef8aeb7af8 <col:10> '<builtin fn type>' Function 0x55ef8aeb7968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55ef8aeb7bb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55ef8aeb7b18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55ef8aeb77b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55ef8aeb7968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55ef8aeb7a08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55ef8aeb7a78 <col:10> Implicit
| `-ConstAttr 0x55ef8aeb7ad0 <col:10> Implicit
|-TypedefDecl 0x55ef8aeb7c08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55ef8ae4dfd0 'unsigned long'
|-TypedefDecl 0x55ef8aeb7c98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55ef8aeb7c60 '__time_t' sugar
|   |-Typedef 0x55ef8aeb5888 '__time_t'
|   `-BuiltinType 0x55ef8ae4df30 'long'
|-RecordDecl 0x55ef8aeb7cf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55ef8aeb7da8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55ef8aeb7e38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55ef8aeb7ec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55ef8aeb7e90 '__pid_t' sugar
|   |-Typedef 0x55ef8aeb53e8 '__pid_t'
|   `-BuiltinType 0x55ef8ae4df10 'int'
|-RecordDecl 0x55ef8aeb7f20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55ef8aeb7fe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55ef8aeb8030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55ef8aeb80f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55ef8aeb8158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55ef8ae4dfd0 'unsigned long'
|-RecordDecl 0x55ef8aeb81b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55ef8aeb9480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55ef8aeb9530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55ef8aeb94d0 'struct cpu_set_t' sugar
|   `-RecordType 0x55ef8aeb8230 'cpu_set_t'
|     `-Record 0x55ef8aeb81b0 ''
|-FunctionDecl 0x55ef8aeb9808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55ef8aeb95d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55ef8aeb96e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55ef8aeb98b8 <line:108:19>
|-FunctionDecl 0x55ef8aeb9a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55ef8aeb9920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55ef8aeb9b38 <col:69>
|-FunctionDecl 0x55ef8aeb9cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55ef8aeb9ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55ef8aeb9d58 <col:64>
|-FunctionDecl 0x55ef8aeba018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55ef8aeb9dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55ef8aeb9ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55ef8aeba0c8 <line:114:22>
|-FunctionDecl 0x55ef8aeba3b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55ef8aeba130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55ef8aeba228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55ef8aeba460 <col:88>
|-FunctionDecl 0x55ef8aeba718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55ef8aeba4c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55ef8aeba548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55ef8aeba5d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55ef8aeba7d0 <col:62>
|-FunctionDecl 0x55ef8aeba948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55ef8aeba838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55ef8aeba9f0 <col:63>
|-FunctionDecl 0x55ef8aebab18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55ef8aebabb8 <col:47>
|-FunctionDecl 0x55ef8aebacc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55ef8aebac28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55ef8aebad68 <col:69>
|-FunctionDecl 0x55ef8aebae70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55ef8aebadd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55ef8aebaf18 <col:69>
|-FunctionDecl 0x55ef8aebb1d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55ef8aebaf80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55ef8aebb0b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55ef8aebb288 <col:88>
|-TypedefDecl 0x55ef8aebb318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55ef8aebb2e0 '__clock_t' sugar
|   |-Typedef 0x55ef8aeb56c8 '__clock_t'
|   `-BuiltinType 0x55ef8ae4df30 'long'
|-TypedefDecl 0x55ef8aebb3c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55ef8aebb370 '__clockid_t' sugar
|   |-Typedef 0x55ef8aeb5ab8 '__clockid_t'
|   `-BuiltinType 0x55ef8ae4df10 'int'
|-TypedefDecl 0x55ef8aebb458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55ef8aebb420 '__timer_t' sugar
|   |-Typedef 0x55ef8aeb5b28 '__timer_t'
|   `-PointerType 0x55ef8ae4e630 'void *'
|     `-BuiltinType 0x55ef8ae4de70 'void'
|-RecordDecl 0x55ef8aebb4b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55ef8aebb570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55ef8aebb5d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55ef8aebb640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55ef8aebb6a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55ef8aebb710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55ef8aebb778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55ef8aebb7e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55ef8aebb848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55ef8aebb8b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55ef8aebb918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55ef8aebb980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55ef8aebb9d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55ef8aebba98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55ef8aebbb08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55ef8aebbbb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55ef8aebbd80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55ef8aebbe20 <col:45>
|-FunctionDecl 0x55ef8aebc000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55ef8aebbef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55ef8aebc0a8 <col:54>
|-FunctionDecl 0x55ef8aebc2a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55ef8aebc110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55ef8aebc188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55ef8aebc358 <line:158:22>
| `-ConstAttr 0x55ef8aebcff0 <col:63>
|-FunctionDecl 0x55ef8aebd1f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55ef8aebd0e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55ef8aebd298 <col:56>
|-FunctionDecl 0x55ef8aebd640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55ef8aebd308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55ef8aebd380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55ef8aebd400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55ef8aebd4f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55ef8aebd700 <col:54>
|-RecordDecl 0x55ef8aebd758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55ef8aebd808 parent 0x55ef8ae4de18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55ef8aebda68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55ef8aebdb08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55ef8aebdb70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55ef8aebdbd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55ef8aebdcc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55ef8aebdde8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55ef8aebdd90 'struct __locale_struct *'
|   `-ElaboratedType 0x55ef8aebdd20 'struct __locale_struct' sugar
|     `-RecordType 0x55ef8aebd7e0 'struct __locale_struct'
|       `-Record 0x55ef8aebd758 '__locale_struct'
|-TypedefDecl 0x55ef8aebde98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55ef8aebde60 '__locale_t' sugar
|   |-Typedef 0x55ef8aebdde8 '__locale_t'
|   `-PointerType 0x55ef8aebdd90 'struct __locale_struct *'
|     `-ElaboratedType 0x55ef8aebdd20 'struct __locale_struct' sugar
|       `-RecordType 0x55ef8aebd7e0 'struct __locale_struct'
|         `-Record 0x55ef8aebd758 '__locale_struct'
|-FunctionDecl 0x55ef8aebf2a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55ef8aebdf08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55ef8aebdf80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55ef8aebf028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55ef8aebf0b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55ef8aebf130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55ef8aebf368 <col:40>
|-FunctionDecl 0x55ef8aebf558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55ef8aebf430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55ef8aebf600 <col:66>
|-FunctionDecl 0x55ef8aebf710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55ef8aebf668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55ef8aebf7b8 <col:69>
|-FunctionDecl 0x55ef8aebf9e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55ef8aebf820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55ef8aebf8b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55ef8aebfa98 <col:52>
|-FunctionDecl 0x55ef8aebfc40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55ef8aebfb00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55ef8aebfb90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55ef8aebfcf0 <col:55>
|-FunctionDecl 0x55ef8aebfe88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55ef8aebfd70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55ef8aebff30 <col:62>
|-FunctionDecl 0x55ef8aec0168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55ef8aebff98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55ef8aec0210 <col:60>
|-FunctionDecl 0x55ef8aec0438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55ef8aec0290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55ef8aec0310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55ef8aec04e8 <col:44>
|-FunctionDecl 0x55ef8aec06f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55ef8aec0550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55ef8aec05d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55ef8aec07a8 <col:49>
|-VarDecl 0x55ef8aec08a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55ef8aec0928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55ef8aec09a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55ef8aec0a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55ef8aec0ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55ef8aec0c40 <col:42>
|-VarDecl 0x55ef8aec0cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55ef8aec0d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55ef8aec0eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55ef8aec0da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55ef8aec0f60 <col:57>
|-FunctionDecl 0x55ef8aec10d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55ef8aec0fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55ef8aec1178 <col:56>
|-FunctionDecl 0x55ef8aec1288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55ef8aec11f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55ef8aec1330 <col:59>
|-FunctionDecl 0x55ef8aec1438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55ef8aec13a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55ef8aec14e0 <col:48>
| `-ConstAttr 0x55ef8aec1538 <col:89>
|-FunctionDecl 0x55ef8aec1798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55ef8aec15e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55ef8aec1678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55ef8aec19f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55ef8aec1888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55ef8aec1918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55ef8aec1aa8 <col:88>
|-FunctionDecl 0x55ef8aec1c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55ef8aec1b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55ef8aec1ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55ef8aec1cf0 <col:88>
|-FunctionDecl 0x55ef8aec1f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55ef8aec1d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55ef8aec1de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55ef8aec1fb8 <line:209:22>
|-FunctionDecl 0x55ef8aec2358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55ef8aec2020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55ef8aec20e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55ef8aec2170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55ef8aec2200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55ef8aec2658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55ef8aec2458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55ef8aec2530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55ef8aec2708 <col:85>
|-FunctionDecl 0x55ef8aec2af8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55ef8aec2770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55ef8aec28a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55ef8aec29b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55ef8aec2bb0 <col:52>
|-FunctionDecl 0x55ef8aec2d28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55ef8aec2c18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55ef8aec2dd0 <col:61>
|-FunctionDecl 0x55ef8aec3248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55ef8aec2e38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55ef8aec2eb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55ef8aec2fe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55ef8aec30f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55ef8aec3308 <col:62>
|-FunctionDecl 0x55ef8aec3528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55ef8aec3370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55ef8aec3400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55ef8aec35d8 <line:222:22>
|-FunctionDecl 0x55ef8aec36d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55ef8aec3640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55ef8aec3780 <col:65>
|-TypedefDecl 0x55ef8aec37f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55ef8ae4dfd0 'unsigned long'
|-RecordDecl 0x55ef8aec3848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55ef8aec3990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55ef8aec39f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55ef8aec3aa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55ef8aec3a50 'union pthread_attr_t' sugar
|   `-RecordType 0x55ef8aec38d0 'union pthread_attr_t'
|     `-Record 0x55ef8aec3848 'pthread_attr_t'
|-RecordDecl 0x55ef8aec3b00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55ef8aec3c78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55ef8aec3cf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55ef8aec3da0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55ef8aec3d40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55ef8aec3b80 'struct __pthread_internal_list'
|     `-Record 0x55ef8aec3b00 '__pthread_internal_list'
|-RecordDecl 0x55ef8aec3e10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55ef8aec3eb8 parent 0x55ef8ae4de18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55ef8aec3f90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55ef8aec3ff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55ef8aec4060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55ef8aec8110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55ef8aec8178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55ef8aec81e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55ef8aec8268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55ef8aec8320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55ef8aec8410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55ef8aec8478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55ef8aec8600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55ef8aec85a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55ef8aec3e90 'pthread_mutex_t'
|     `-Record 0x55ef8aec3e10 ''
|-RecordDecl 0x55ef8aec8670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55ef8aec87b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55ef8aec8818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55ef8aec88d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55ef8aec8870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55ef8aec86f0 'pthread_mutexattr_t'
|     `-Record 0x55ef8aec8670 ''
|-RecordDecl 0x55ef8aec8940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55ef8aec89e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55ef8aec8ab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55ef8aec8b18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55ef8aec8b80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55ef8aec8be8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55ef8aec8c50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55ef8aec8cb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55ef8aec8d20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55ef8aec8d88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55ef8aec8e40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_8/mix000_pso.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_8/mix000_pso.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55ef8aec8f30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55ef8aec8f98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55ef8aeca130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55ef8aec9070 'union pthread_cond_t' sugar
|   `-RecordType 0x55ef8aec89c0 'pthread_cond_t'
|     `-Record 0x55ef8aec8940 ''
|-RecordDecl 0x55ef8aeca1a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55ef8aeca2a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55ef8aeca308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55ef8aeca3c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55ef8aeca360 'union pthread_condattr_t' sugar
|   `-RecordType 0x55ef8aeca220 'pthread_condattr_t'
|     `-Record 0x55ef8aeca1a0 ''
|-TypedefDecl 0x55ef8aeca448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55ef8ae4dfb0 'unsigned int'
|-TypedefDecl 0x55ef8aeca4b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55ef8ae4df10 'int'
|-RecordDecl 0x55ef8aeca510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55ef8aeca5b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55ef8aeca680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55ef8aeca6e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55ef8aeca750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55ef8aeca7b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55ef8aeca820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55ef8aeca888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55ef8aeca8f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55ef8aeca958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55ef8aeca9c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55ef8aecaa28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55ef8aecaa90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55ef8aecab40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_8/mix000_pso.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_8/mix000_pso.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55ef8aecabe8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55ef8aecac50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55ef8aecada0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55ef8aecad40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55ef8aeca590 'pthread_rwlock_t'
|     `-Record 0x55ef8aeca510 ''
|-RecordDecl 0x55ef8aecae10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55ef8aecaf50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55ef8aecafb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55ef8aecb070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55ef8aecb010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55ef8aecae90 'pthread_rwlockattr_t'
|     `-Record 0x55ef8aecae10 ''
|-TypedefDecl 0x55ef8aecc140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55ef8ae4df14 'volatile int' volatile
|   `-BuiltinType 0x55ef8ae4df10 'int'
|-RecordDecl 0x55ef8aecc198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55ef8aecc2e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55ef8aecc348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55ef8aecc400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55ef8aecc3a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55ef8aecc220 'pthread_barrier_t'
|     `-Record 0x55ef8aecc198 ''
|-RecordDecl 0x55ef8aecc470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55ef8aecc570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55ef8aecc5d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55ef8aecc690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55ef8aecc630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55ef8aecc4f0 'pthread_barrierattr_t'
|     `-Record 0x55ef8aecc470 ''
|-TypedefDecl 0x55ef8aecc7a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55ef8aecc740 'long [8]' 8 
|   `-BuiltinType 0x55ef8ae4df30 'long'
|-EnumDecl 0x55ef8aecc800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55ef8aecc8c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55ef8aecc918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55ef8aecc968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55ef8aecca38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55ef8aecca88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55ef8aeccad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55ef8aeccb28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55ef8aeccbb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55ef8aeccb98 <col:26> 'int'
| |   `-DeclRefExpr 0x55ef8aeccb78 <col:26> 'int' EnumConstant 0x55ef8aecca38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55ef8aeccc38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55ef8aeccc20 <col:29> 'int'
| |   `-DeclRefExpr 0x55ef8aeccc00 <col:29> 'int' EnumConstant 0x55ef8aecca88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55ef8aecccc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55ef8aeccca8 <col:30> 'int'
| |   `-DeclRefExpr 0x55ef8aeccc88 <col:30> 'int' EnumConstant 0x55ef8aeccad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55ef8aeccd48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55ef8aeccd30 <col:27> 'int'
|     `-DeclRefExpr 0x55ef8aeccd10 <col:27> 'int' EnumConstant 0x55ef8aeccbb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55ef8aeccd98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55ef8aecce68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55ef8aeccef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55ef8aecced8 <col:30> 'int'
| |   `-DeclRefExpr 0x55ef8aecceb8 <col:30> 'int' EnumConstant 0x55ef8aecce68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55ef8aeccf40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55ef8aeccfc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55ef8aeccfb0 <col:29> 'int'
|     `-DeclRefExpr 0x55ef8aeccf90 <col:29> 'int' EnumConstant 0x55ef8aeccf40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55ef8aecd018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55ef8aecd0e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55ef8aecd150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55ef8aecd1a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55ef8aecd1f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55ef8aecd2b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55ef8aecd308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55ef8aecd358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55ef8aecd3e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55ef8aecd3c8 <col:31> 'int'
|     `-DeclRefExpr 0x55ef8aecd3a8 <col:31> 'int' EnumConstant 0x55ef8aecd2b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55ef8aecd430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55ef8aecd4f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55ef8aecd548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55ef8aecd598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55ef8aecd668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55ef8aecd6b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55ef8aecd708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55ef8aecd7d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55ef8aecd828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55ef8aecd878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55ef8aecdab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55ef8aecdb20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55ef8aecdb88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55ef8aecdca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55ef8aecdcf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55ef8aecddc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55ef8aecde18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55ef8aecde68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55ef8aecdf38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55ef8aecdf88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55ef8aece5b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55ef8aece080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55ef8aece1a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ef8aece3a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55ef8aece420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55ef8aece678 <col:47>
| |-NonNullAttr 0x55ef8aece6d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55ef8aece708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55ef8aece830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55ef8aece760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55ef8aecea88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55ef8aece8e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55ef8aece968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55ef8aecec58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55ef8aeceb48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55ef8aeced00 <col:60>
|-FunctionDecl 0x55ef8aecee50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55ef8aeceef0 <col:54>
| `-ConstAttr 0x55ef8aecef48 <col:95>
|-FunctionDecl 0x55ef8aed0990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55ef8aecef80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55ef8aeceff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55ef8aed0a40 <line:395:19>
| `-ConstAttr 0x55ef8aed0a98 <col:60>
|-FunctionDecl 0x55ef8aed0c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55ef8aed0b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55ef8aed0d10 <col:71>
| `-NonNullAttr 0x55ef8aed0d68 <col:112, col:126> 1
|-FunctionDecl 0x55ef8aed0e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55ef8aed0db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55ef8aed0f18 <line:398:22>
| `-NonNullAttr 0x55ef8aed0f70 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aed1198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55ef8aed0fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55ef8aed1038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55ef8aed1248 <line:401:22>
| `-NonNullAttr 0x55ef8aed12a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ef8aed14a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55ef8aed12e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ef8aed1368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55ef8aed1558 <line:404:22>
| `-NonNullAttr 0x55ef8aed15b0 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aed1808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55ef8aed15f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55ef8aed16a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55ef8aed18b8 <line:407:22>
| `-NonNullAttr 0x55ef8aed1910 <col:63, col:80> 1 2
|-FunctionDecl 0x55ef8aed2b68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55ef8aed29b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ef8aed2a28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55ef8aed2c18 <line:410:22>
| `-NonNullAttr 0x55ef8aed2c70 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aed2ea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55ef8aed2cb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ef8aed2d48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55ef8aed2f58 <line:413:22>
| `-NonNullAttr 0x55ef8aed2fb0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ef8aed31e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55ef8aed2ff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ef8aed3088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55ef8aed3298 <col:37>
| `-NonNullAttr 0x55ef8aed32f0 <col:78, col:95> 1 2
|-FunctionDecl 0x55ef8aed34d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ef8aed3338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ef8aed33b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55ef8aed3588 <line:419:22>
| `-NonNullAttr 0x55ef8aed35e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ef8aed3768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55ef8aed3628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ef8aed36a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55ef8aed3818 <line:421:22>
| `-NonNullAttr 0x55ef8aed3870 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aed3a38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ef8aed38b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ef8aed3938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55ef8aed3ae8 <line:424:22>
| `-NonNullAttr 0x55ef8aed3b40 <col:63, col:80> 1 2
|-FunctionDecl 0x55ef8aed3cc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55ef8aed3b88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ef8aed3c08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55ef8aed3d78 <line:427:22>
| `-NonNullAttr 0x55ef8aed3dd0 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aed3f78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ef8aed3e18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ef8aed3e98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55ef8aed4028 <line:430:22>
| `-NonNullAttr 0x55ef8aed4080 <col:63, col:80> 1 2
|-FunctionDecl 0x55ef8aed4208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55ef8aed40c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ef8aed4148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55ef8aed42b8 <line:432:22>
| `-NonNullAttr 0x55ef8aed4310 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aed4538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55ef8aed4358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ef8aed43d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55ef8aed45e8 <line:435:22>
| |-NonNullAttr 0x55ef8aed4640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55ef8aed4678 <col:100> "" ""
|-FunctionDecl 0x55ef8aed4888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55ef8aed46c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ef8aed4748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55ef8aed4938 <line:438:22>
| |-NonNullAttr 0x55ef8aed4990 <col:63, col:77> 1
| `-DeprecatedAttr 0x55ef8aed49d8 <col:97> "" ""
|-FunctionDecl 0x55ef8aed4bc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55ef8aed4a28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ef8aed4aa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55ef8aed4c78 <line:441:22>
| `-NonNullAttr 0x55ef8aed4cd0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ef8aed4e50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55ef8aed4d18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ef8aed4d90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55ef8aed4f00 <line:444:22>
| `-NonNullAttr 0x55ef8aed4f58 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aed5248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55ef8aed4fa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ef8aed5028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55ef8aed50a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55ef8aed5300 <line:448:22>
| `-NonNullAttr 0x55ef8aed5358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55ef8aed5608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55ef8aed53b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ef8aed5430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55ef8aed54a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55ef8aed56c0 <col:43>
| `-NonNullAttr 0x55ef8aed5718 <col:84, col:98> 1
|-FunctionDecl 0x55ef8aed5a20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55ef8aed5768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55ef8aed57e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55ef8aed5878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55ef8aed5ad8 <line:453:22>
| `-NonNullAttr 0x55ef8aed5b30 <col:63, col:77> 3
|-FunctionDecl 0x55ef8aed5e08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55ef8aed5b78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55ef8aed5bf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55ef8aed5c88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55ef8aed5ec0 <line:457:22>
| `-NonNullAttr 0x55ef8aed5f18 <col:63, col:80> 2 3
|-FunctionDecl 0x55ef8aed6108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55ef8aed5f68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55ef8aed5fe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55ef8aed61b8 <line:459:22>
|-FunctionDecl 0x55ef8aed6588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55ef8aed6280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55ef8aed6420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55ef8aed6638 <col:52, col:69> 1 2
|-FunctionDecl 0x55ef8aed67e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55ef8aed66c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55ef8aed6740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55ef8aed69f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55ef8aed68a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55ef8aed6928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55ef8aed6b48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55ef8aed6ab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55ef8aed6c88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55ef8aed6d28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55ef8aed6dd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55ef8aed6ec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55ef8aed6f30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55ef8aed7100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_8/mix000_pso.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55ef8aed71f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55ef8aed72b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55ef8aed7250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55ef8aed6db0 '__pthread_unwind_buf_t'
| |   `-Record 0x55ef8aed6d28 ''
| `-AlignedAttr 0x55ef8aed7308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55ef8aed7380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55ef8aed74e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55ef8aed7548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55ef8aed75b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55ef8aed7618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55ef8aed7820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55ef8aed7710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55ef8aed7a00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55ef8aed78d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55ef8aed7bc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55ef8aed7ab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55ef8aed7c68 <line:488:22>
|-RecordDecl 0x55ef8aed7cc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55ef8aed7fd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55ef8aed7e38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55ef8aed7eb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55ef8aed8088 <col:86>
| `-ReturnsTwiceAttr 0x55ef8aed80e0 <col:12> Implicit
|-FunctionDecl 0x55ef8aed8408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55ef8aed81b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55ef8aed82c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55ef8aed84b8 <line:494:22>
| `-NonNullAttr 0x55ef8aed8510 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aed8688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55ef8aed8558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55ef8aed8730 <line:496:22>
| `-NonNullAttr 0x55ef8aed8788 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aed8890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55ef8aed87d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55ef8aed8938 <line:498:22>
| `-NonNullAttr 0x55ef8aed8990 <col:52, col:66> 1
|-FunctionDecl 0x55ef8aed9ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55ef8aed9a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55ef8aed9b80 <line:500:22>
| `-NonNullAttr 0x55ef8aed9bd8 <col:52, col:66> 1
|-FunctionDecl 0x55ef8aed9e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55ef8aed9c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55ef8aed9cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55ef8aed9ec8 <col:36>
| `-NonNullAttr 0x55ef8aed9f20 <col:66, col:83> 1 2
|-FunctionDecl 0x55ef8aeda020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55ef8aed9f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55ef8aeda0c8 <line:505:22>
| `-NonNullAttr 0x55ef8aeda120 <col:52, col:66> 1
|-FunctionDecl 0x55ef8aeda3b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ef8aeda1d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55ef8aeda250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55ef8aeda468 <line:509:22>
| `-NonNullAttr 0x55ef8aeda4c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ef8aeda788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55ef8aeda508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55ef8aeda588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55ef8aeda608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55ef8aeda840 <line:513:22>
| `-NonNullAttr 0x55ef8aeda898 <col:63, col:80> 1 3
|-FunctionDecl 0x55ef8aedaa30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55ef8aeda8e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55ef8aedaad8 <line:515:22>
| `-NonNullAttr 0x55ef8aedab30 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aedad18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55ef8aedabe0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55ef8aedadc0 <line:517:22>
| `-NonNullAttr 0x55ef8aedae18 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aedaf20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55ef8aedae68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55ef8aedafc8 <line:519:22>
| `-NonNullAttr 0x55ef8aedb020 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aedb248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ef8aedb068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55ef8aedb0e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55ef8aedb2f8 <line:523:22>
| `-NonNullAttr 0x55ef8aedb350 <col:63, col:80> 1 2
|-FunctionDecl 0x55ef8aedb558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55ef8aedb398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55ef8aedb418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55ef8aedb608 <line:526:22>
| `-NonNullAttr 0x55ef8aedb660 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aedb808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ef8aedb6a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55ef8aedb728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55ef8aedb8b8 <line:529:22>
| `-NonNullAttr 0x55ef8aedb910 <col:63, col:80> 1 2
|-FunctionDecl 0x55ef8aedbb00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55ef8aedb958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55ef8aedba40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55ef8aedbbb0 <line:531:22>
| `-NonNullAttr 0x55ef8aedbc08 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aedbdb8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ef8aedbc58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55ef8aedbcd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55ef8aedbe68 <line:535:22>
| `-NonNullAttr 0x55ef8aedbec0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ef8aedc048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55ef8aedbf08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55ef8aedbf88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55ef8aedc0f8 <line:538:22>
| `-NonNullAttr 0x55ef8aedc150 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aedc2f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ef8aedc198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55ef8aedc218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55ef8aedc3a8 <line:542:22>
| `-NonNullAttr 0x55ef8aedc400 <col:63, col:80> 1 2
|-FunctionDecl 0x55ef8aedc588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55ef8aedc448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55ef8aedc4c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55ef8aedc638 <line:545:22>
| `-NonNullAttr 0x55ef8aedc690 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aedc878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55ef8aedc6d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55ef8aedc758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55ef8aedc928 <line:548:22>
| `-NonNullAttr 0x55ef8aedc980 <col:63, col:80> 1 2
|-FunctionDecl 0x55ef8aeddb38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55ef8aedc9c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55ef8aedda78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55ef8aeddbe8 <line:551:22>
| `-NonNullAttr 0x55ef8aeddc40 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aeddf78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55ef8aeddd20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55ef8aedde30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55ef8aede028 <col:29>
| `-NonNullAttr 0x55ef8aede080 <col:70, col:84> 1
|-FunctionDecl 0x55ef8aede1f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55ef8aede0c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55ef8aede2a0 <line:556:22>
| `-NonNullAttr 0x55ef8aede2f8 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aede400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55ef8aede348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55ef8aede4a8 <line:558:22>
| `-NonNullAttr 0x55ef8aede500 <col:52, col:66> 1
|-FunctionDecl 0x55ef8aede600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55ef8aede548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55ef8aede6a8 <line:560:19>
| `-NonNullAttr 0x55ef8aede700 <col:49, col:63> 1
|-FunctionDecl 0x55ef8aede938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55ef8aede748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55ef8aede7d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55ef8aede9e8 <col:39>
| `-NonNullAttr 0x55ef8aedea70 <col:69, col:86> 1 2
|-FunctionDecl 0x55ef8aedeb70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55ef8aedeab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55ef8aedec18 <line:565:22>
| `-NonNullAttr 0x55ef8aedec70 <col:52, col:66> 1
|-FunctionDecl 0x55ef8aeded70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55ef8aedecb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55ef8aedee18 <line:567:22>
| `-NonNullAttr 0x55ef8aedee70 <col:52, col:66> 1
|-FunctionDecl 0x55ef8aedf028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55ef8aedeeb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55ef8aedef48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55ef8aedf0d8 <col:39>
| `-NonNullAttr 0x55ef8aedf130 <col:69, col:86> 1 2
|-FunctionDecl 0x55ef8aedf230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55ef8aedf178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55ef8aedf2d8 <line:572:22>
| `-NonNullAttr 0x55ef8aedf330 <col:52, col:66> 1
|-FunctionDecl 0x55ef8aedf518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55ef8aedf3e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55ef8aedf5c0 <line:574:22>
| `-NonNullAttr 0x55ef8aedf618 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aedf720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55ef8aedf668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55ef8aedf7c8 <line:576:22>
| `-NonNullAttr 0x55ef8aedf820 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aedfa80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ef8aedf868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55ef8aedf8e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55ef8aedfb30 <line:580:22>
| `-NonNullAttr 0x55ef8aedfb88 <col:63, col:80> 1 2
|-FunctionDecl 0x55ef8aedfd98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55ef8aedfbd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55ef8aedfc58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55ef8aedfe48 <line:583:22>
| `-NonNullAttr 0x55ef8aedfea0 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aee0048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ef8aedfee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55ef8aedff68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55ef8aee00f8 <line:587:22>
| `-NonNullAttr 0x55ef8aee0150 <col:63, col:80> 1 2
|-FunctionDecl 0x55ef8aee02d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55ef8aee0198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55ef8aee0218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55ef8aee0388 <col:36>
| `-NonNullAttr 0x55ef8aee03e0 <col:77, col:91> 1
|-FunctionDecl 0x55ef8aee0718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55ef8aee04c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55ef8aee05d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55ef8aee07c8 <line:592:22>
| `-NonNullAttr 0x55ef8aee0820 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aee0998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55ef8aee0868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55ef8aee0a40 <line:594:22>
| `-NonNullAttr 0x55ef8aee0ac0 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aee0bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55ef8aee0b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55ef8aee0c68 <line:596:22>
| `-NonNullAttr 0x55ef8aee0cc0 <col:52, col:66> 1
|-FunctionDecl 0x55ef8aee0dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55ef8aee0d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55ef8aee0e68 <line:598:22>
| `-NonNullAttr 0x55ef8aee0ec0 <col:52, col:66> 1
|-FunctionDecl 0x55ef8aee10e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55ef8aee0f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55ef8aee0f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55ef8aee1198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55ef8aee14c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55ef8aee1218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55ef8aee1290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55ef8aee1320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55ef8aee1580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55ef8aee1798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55ef8aee1660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55ef8aee1840 <line:607:22>
| `-NonNullAttr 0x55ef8aee1898 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aee19a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55ef8aee18e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55ef8aee1a48 <line:609:22>
| `-NonNullAttr 0x55ef8aee1ad0 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aee1cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ef8aee1b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55ef8aee1b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55ef8aee1da8 <line:613:22>
| `-NonNullAttr 0x55ef8aee1e00 <col:63, col:80> 1 2
|-FunctionDecl 0x55ef8aee2008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55ef8aee1e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55ef8aee1ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55ef8aee20b8 <col:37>
| `-NonNullAttr 0x55ef8aee2110 <col:78, col:92> 1
|-FunctionDecl 0x55ef8aee2328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55ef8aee2158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55ef8aee2200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55ef8aee23d8 <line:619:22>
| `-NonNullAttr 0x55ef8aee2430 <col:63, col:80> 1 2
|-FunctionDecl 0x55ef8aee25f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55ef8aee2478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55ef8aee24f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55ef8aee26a8 <line:622:22>
| `-NonNullAttr 0x55ef8aee2700 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aee29a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55ef8aee27e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55ef8aee2860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55ef8aee2a58 <line:624:22>
| `-NonNullAttr 0x55ef8aee2ae0 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aee2c58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55ef8aee2b28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55ef8aee2d00 <line:626:22>
| `-NonNullAttr 0x55ef8aee2d58 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aee2e60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55ef8aee2da8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55ef8aee2f08 <line:628:22>
| `-NonNullAttr 0x55ef8aee2f60 <col:52, col:66> 1
|-FunctionDecl 0x55ef8aee3060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55ef8aee2fa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55ef8aee3108 <line:630:22>
| `-NonNullAttr 0x55ef8aee3160 <col:52, col:66> 1
|-FunctionDecl 0x55ef8aee3260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55ef8aee31a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55ef8aee3308 <line:632:22>
| `-NonNullAttr 0x55ef8aee3360 <col:52, col:66> 1
|-FunctionDecl 0x55ef8aee3738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55ef8aee3440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55ef8aee3550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55ef8aee35d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55ef8aee37f0 <line:636:22>
| `-NonNullAttr 0x55ef8aee3848 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aee39c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55ef8aee3898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55ef8aee3a70 <line:638:22>
| `-NonNullAttr 0x55ef8aee4b00 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aee4c00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55ef8aee4b48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55ef8aee4ca8 <line:640:22>
| `-NonNullAttr 0x55ef8aee4d00 <col:52, col:66> 1
|-FunctionDecl 0x55ef8aee4ee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55ef8aee4db0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55ef8aee4f90 <line:642:22>
| `-NonNullAttr 0x55ef8aee4fe8 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aee50f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55ef8aee5038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55ef8aee5198 <line:644:22>
| `-NonNullAttr 0x55ef8aee51f0 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aee5418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ef8aee5238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55ef8aee52b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55ef8aee54c8 <line:648:22>
| `-NonNullAttr 0x55ef8aee5520 <col:63, col:80> 1 2
|-FunctionDecl 0x55ef8aee5728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55ef8aee5568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55ef8aee55e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55ef8aee57d8 <line:651:22>
| `-NonNullAttr 0x55ef8aee5830 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aee5b98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55ef8aee5910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55ef8aee5a30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55ef8aee5c48 <line:654:22>
| `-NonNullAttr 0x55ef8aee5ca0 <col:63, col:77> 1
|-FunctionDecl 0x55ef8aee5df8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55ef8aee5ce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55ef8aee5ea0 <col:69>
|-FunctionDecl 0x55ef8aee6018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55ef8aee5f08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55ef8aee60c0 <col:72>
|-FunctionDecl 0x55ef8aee62f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55ef8aee6128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55ef8aee61d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55ef8aee63a8 <col:44>
|-FunctionDecl 0x55ef8aee65c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55ef8aee6410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55ef8aee6488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55ef8aee6678 <line:661:22>
| `-NonNullAttr 0x55ef8aee66d0 <col:63, col:77> 2
|-FunctionDecl 0x55ef8aee6b30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55ef8aee67b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55ef8aee68c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55ef8aee69d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55ef8aee6be8 <col:47>
|-FunctionDecl 0x55ef8aee6cf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55ef8aee6c58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55ef8aee6e48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55ef8aee6db0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55ef8aee6f10 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55ef8aee6fd0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55ef8aee7090 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55ef8aee7148 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55ef8aee71c8 prev 0x55ef8aee7148 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55ef8aee7230 <col:24> 'int' 0
|-VarDecl 0x55ef8aee7268 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55ef8aee72e8 prev 0x55ef8aee7268 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55ef8aee7350 <col:27> 'int' 0
|-VarDecl 0x55ef8aee7388 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x55ef8aee7408 prev 0x55ef8aee7388 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x55ef8aee7470 <col:27> 'int' 0
|-VarDecl 0x55ef8aee74a8 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55ef8aee7528 prev 0x55ef8aee74a8 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55ef8aee7590 <col:27> 'int' 0
|-VarDecl 0x55ef8aee75c8 <line:679:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x55ef8aee7648 prev 0x55ef8aee75c8 <line:680:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x55ef8aee76b0 <col:27> 'int' 0
|-VarDecl 0x55ef8aee76e0 <line:681:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55ef8aee7758 <line:682:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55ef8aee77d8 <line:683:1, col:5> col:5 used x 'int'
|-VarDecl 0x55ef8aee7858 prev 0x55ef8aee77d8 <line:684:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55ef8aee78c0 <col:9> 'int' 0
|-VarDecl 0x55ef8aee78f8 <line:685:1, col:5> col:5 used y 'int'
|-VarDecl 0x55ef8aee7978 prev 0x55ef8aee78f8 <line:686:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55ef8aee79e0 <col:9> 'int' 0
|-VarDecl 0x55ef8aee7a10 <line:687:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x55ef8aee7b00 <line:688:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x55ef8aee7b78 <line:689:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x55ef8aee7bf0 <line:690:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x55ef8aee7c68 <line:691:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x55ef8aee7ce0 <line:692:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x55ef8aee7d58 <line:693:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x55ef8aee7dd0 <line:694:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x55ef8aee7e48 <line:695:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x55ef8aee7ec8 <line:696:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x55ef8aee7f48 <line:697:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x55ef8aee7fc0 <line:698:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x55ef8aee8040 <line:699:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x55ef8aee80b8 <line:700:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x55ef8aee8130 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55ef8aee81a8 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55ef8aee82c0 prev 0x55ef8aee6cf0 <line:703:1, line:746:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55ef8aee8228 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55ef8aeec578 <line:704:1, line:746:1>
|   |-CallExpr 0x55ef8aee83d8 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ef8aee83c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ef8aee8368 <col:3> 'void ()' Function 0x55ef8ae8dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ef8aee8450 <line:706:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55ef8aee83f8 <col:3> 'int' lvalue Var 0x55ef8aee8040 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55ef8aee8438 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ef8aee8418 <col:15> 'int' lvalue Var 0x55ef8aee7f48 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55ef8aee84b0 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55ef8aee8470 <col:3> 'int' lvalue Var 0x55ef8aee7f48 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x55ef8aee8490 <col:15> 'int' 1
|   |-BinaryOperator 0x55ef8aee8528 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aee84d0 <col:3> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ef8aee8510 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ef8aee84f0 <col:20> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55ef8aee85c0 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aee8548 <col:3> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55ef8aee8598 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55ef8aee8568 <col:27> 'int' 1
|   |-CallExpr 0x55ef8aee8748 <line:710:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55ef8aee8730 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55ef8aee85e0 <col:3> 'void (int)' Function 0x55ef8ae8dd28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55ef8aee86e0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55ef8aee86c0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55ef8aee86a0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55ef8aee8658 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55ef8aee8640 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55ef8aee8600 <col:23> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55ef8aee8688 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55ef8aee8670 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55ef8aee8620 <col:41> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55ef8aee87c8 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aee8770 <col:3> '_Bool' lvalue Var 0x55ef8aee7ce0 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55ef8aee87b0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ef8aee8790 <col:20> '_Bool' lvalue Var 0x55ef8aee7b78 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55ef8aee8840 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aee87e8 <col:3> '_Bool' lvalue Var 0x55ef8aee7d58 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55ef8aee8828 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ef8aee8808 <col:20> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55ef8aee88b8 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aee8860 <col:3> '_Bool' lvalue Var 0x55ef8aee7dd0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55ef8aee88a0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ef8aee8880 <col:20> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55ef8aee8950 <line:714:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aee88d8 <col:3> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x55ef8aee8928 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55ef8aee88f8 <col:27> 'int' 1
|   |-CallExpr 0x55ef8aee89a8 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ef8aee8990 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ef8aee8970 <col:3> 'void ()' Function 0x55ef8ae8e060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ef8aee8a00 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ef8aee89e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ef8aee89c8 <col:3> 'void ()' Function 0x55ef8ae8dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ef8aee8ac8 <line:717:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aee8a20 <col:3> '_Bool' lvalue Var 0x55ef8aee8130 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55ef8aee8aa8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55ef8aee8a90 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55ef8aee8a40 <col:19> '_Bool (void)' Function 0x55ef8ae8d770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55ef8aee8b88 <line:718:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aee8b10 <col:3> '_Bool' lvalue Var 0x55ef8aee81a8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55ef8aee8b68 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55ef8aee8b50 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55ef8aee8b30 <col:19> '_Bool (void)' Function 0x55ef8ae8d770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55ef8aee8c00 <line:719:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aee8ba8 <col:3> '_Bool' lvalue Var 0x55ef8aee7a10 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55ef8aee8be8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ef8aee8bc8 <col:21> '_Bool' lvalue Var 0x55ef8aee81a8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55ef8aee8c78 <line:720:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55ef8aee8c20 <col:3> 'int' lvalue Var 0x55ef8aee7b00 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55ef8aee8c60 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ef8aee8c40 <col:15> 'int' lvalue Var 0x55ef8aee7978 'y' 'int'
|   |-BinaryOperator 0x55ef8aee90b0 <line:721:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55ef8aee8c98 <col:3> 'int' lvalue Var 0x55ef8aee7978 'y' 'int'
|   | `-ConditionalOperator 0x55ef8aee9080 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55ef8aee8ea8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55ef8aee8dc8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55ef8aee8cf0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55ef8aee8cd8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55ef8aee8cb8 <col:8> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55ef8aee8da8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55ef8aee8d40 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55ef8aee8d28 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55ef8aee8d08 <col:27> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x55ef8aee8d90 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55ef8aee8d78 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55ef8aee8d58 <col:46> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55ef8aee8e88 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55ef8aee8e20 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55ef8aee8e08 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55ef8aee8de8 <col:65> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x55ef8aee8e70 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55ef8aee8e58 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55ef8aee8e38 <col:84> '_Bool' lvalue Var 0x55ef8aee7d58 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55ef8aee9068 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ef8aee8ec8 <col:101> 'int' lvalue Var 0x55ef8aee7978 'y' 'int'
|   |   `-ParenExpr 0x55ef8aee9048 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55ef8aee9018 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55ef8aee8f88 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55ef8aee8f40 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55ef8aee8f28 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55ef8aee8ee8 <col:106> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55ef8aee8f70 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55ef8aee8f58 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55ef8aee8f08 <col:124> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55ef8aee8fe8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ef8aee8fa8 <col:141> 'int' lvalue Var 0x55ef8aee7f48 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55ef8aee9000 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ef8aee8fc8 <col:153> 'int' lvalue Var 0x55ef8aee8040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55ef8aee95c0 <line:722:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55ef8aee90d0 <col:3> 'int' lvalue Var 0x55ef8aee7f48 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55ef8aee9590 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55ef8aee9560 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55ef8aee9548 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55ef8aee90f0 <col:15> '_Bool' lvalue Var 0x55ef8aee81a8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55ef8aee9578 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ef8aee9110 <col:31> 'int' lvalue Var 0x55ef8aee7f48 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55ef8aee9528 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55ef8aee94f8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55ef8aee9320 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55ef8aee9240 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55ef8aee9168 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55ef8aee9150 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55ef8aee9130 <col:45> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55ef8aee9220 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55ef8aee91b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55ef8aee91a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55ef8aee9180 <col:64> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55ef8aee9208 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55ef8aee91f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55ef8aee91d0 <col:83> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55ef8aee9300 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55ef8aee9298 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55ef8aee9280 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55ef8aee9260 <col:102> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55ef8aee92e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55ef8aee92d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55ef8aee92b0 <col:121> '_Bool' lvalue Var 0x55ef8aee7d58 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55ef8aee94e0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ef8aee9340 <col:138> 'int' lvalue Var 0x55ef8aee7f48 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55ef8aee94c0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55ef8aee9490 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55ef8aee9400 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55ef8aee93b8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55ef8aee93a0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55ef8aee9360 <col:151> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55ef8aee93e8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55ef8aee93d0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55ef8aee9380 <col:169> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55ef8aee9460 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55ef8aee9420 <col:186> 'int' lvalue Var 0x55ef8aee7f48 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55ef8aee9478 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55ef8aee9440 <col:198> 'int' lvalue Var 0x55ef8aee7f48 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55ef8aee9ad0 <line:723:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55ef8aee95e0 <col:3> 'int' lvalue Var 0x55ef8aee8040 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55ef8aee9aa0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55ef8aee9a70 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55ef8aee9a58 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55ef8aee9600 <col:15> '_Bool' lvalue Var 0x55ef8aee81a8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55ef8aee9a88 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ef8aee9620 <col:31> 'int' lvalue Var 0x55ef8aee8040 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55ef8aee9a38 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55ef8aee9a08 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55ef8aee9830 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55ef8aee9750 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55ef8aee9678 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55ef8aee9660 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55ef8aee9640 <col:45> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55ef8aee9730 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55ef8aee96c8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55ef8aee96b0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55ef8aee9690 <col:64> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55ef8aee9718 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55ef8aee9700 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55ef8aee96e0 <col:83> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55ef8aee9810 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55ef8aee97a8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55ef8aee9790 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55ef8aee9770 <col:102> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55ef8aee97f8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55ef8aee97e0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55ef8aee97c0 <col:121> '_Bool' lvalue Var 0x55ef8aee7d58 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55ef8aee99f0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ef8aee9850 <col:138> 'int' lvalue Var 0x55ef8aee8040 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55ef8aee99d0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55ef8aee99a0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55ef8aee9910 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55ef8aee98c8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55ef8aee98b0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55ef8aee9870 <col:151> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55ef8aee98f8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55ef8aee98e0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55ef8aee9890 <col:169> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55ef8aee9970 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55ef8aee9930 <col:186> 'int' lvalue Var 0x55ef8aee8040 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55ef8aee9988 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55ef8aee9950 <col:198> 'int' lvalue Var 0x55ef8aee8040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55ef8aeea088 <line:724:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aee9af0 <col:3> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ef8aeea070 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ef8aeea040 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55ef8aee9ff8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ef8aee9fe0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ef8aee9b20 <col:20> '_Bool' lvalue Var 0x55ef8aee81a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ef8aeea028 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ef8aeea010 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ef8aee9b40 <col:36> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55ef8aee9fc0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55ef8aee9f90 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55ef8aee9d50 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55ef8aee9c70 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55ef8aee9b98 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55ef8aee9b80 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55ef8aee9b60 <col:55> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55ef8aee9c50 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55ef8aee9be8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55ef8aee9bd0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55ef8aee9bb0 <col:74> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55ef8aee9c38 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55ef8aee9c20 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55ef8aee9c00 <col:93> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55ef8aee9d30 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55ef8aee9cc8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55ef8aee9cb0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55ef8aee9c90 <col:112> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55ef8aee9d18 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55ef8aee9d00 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55ef8aee9ce0 <col:131> '_Bool' lvalue Var 0x55ef8aee7d58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55ef8aee9f78 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55ef8aee9f60 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ef8aee9d70 <col:148> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55ef8aee9f40 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55ef8aee9f10 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55ef8aee9e30 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55ef8aee9de8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55ef8aee9dd0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55ef8aee9d90 <col:166> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55ef8aee9e18 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55ef8aee9e00 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55ef8aee9db0 <col:184> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55ef8aee9ec8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55ef8aee9e80 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55ef8aee9e50 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55ef8aee9ef8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55ef8aee9ee0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55ef8aee9ea8 <col:212> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55ef8aeea650 <line:725:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aeea0a8 <col:3> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ef8aeea638 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ef8aeea608 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55ef8aeea5c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ef8aeea5a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ef8aeea0c8 <col:20> '_Bool' lvalue Var 0x55ef8aee81a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ef8aeea5f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ef8aeea5d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ef8aeea0e8 <col:36> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55ef8aeea588 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55ef8aeea558 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55ef8aeea2f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55ef8aeea218 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55ef8aeea140 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55ef8aeea128 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55ef8aeea108 <col:55> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55ef8aeea1f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55ef8aeea190 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55ef8aeea178 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55ef8aeea158 <col:74> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55ef8aeea1e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55ef8aeea1c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55ef8aeea1a8 <col:93> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55ef8aeea2d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55ef8aeea270 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55ef8aeea258 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55ef8aeea238 <col:112> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55ef8aeea2c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55ef8aeea2a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55ef8aeea288 <col:131> '_Bool' lvalue Var 0x55ef8aee7d58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55ef8aeea540 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55ef8aeea528 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ef8aeea318 <col:148> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55ef8aeea508 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55ef8aeea4d8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55ef8aeea3d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55ef8aeea390 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55ef8aeea378 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55ef8aeea338 <col:166> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55ef8aeea3c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55ef8aeea3a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55ef8aeea358 <col:184> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55ef8aeea4a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55ef8aeea428 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55ef8aeea3f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55ef8aeea4c0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55ef8aeea480 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55ef8aeea450 <col:219> 'int' 0
|   |-BinaryOperator 0x55ef8aeeac28 <line:726:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aeea670 <col:3> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55ef8aeeac10 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ef8aeeabe0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55ef8aeeab98 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ef8aeeab80 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ef8aeea690 <col:20> '_Bool' lvalue Var 0x55ef8aee81a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ef8aeeabc8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ef8aeeabb0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ef8aeea6b0 <col:36> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55ef8aeeab60 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55ef8aeeab30 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55ef8aeea8c0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55ef8aeea7e0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55ef8aeea708 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55ef8aeea6f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55ef8aeea6d0 <col:55> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55ef8aeea7c0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55ef8aeea758 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55ef8aeea740 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55ef8aeea720 <col:74> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55ef8aeea7a8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55ef8aeea790 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55ef8aeea770 <col:93> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55ef8aeea8a0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55ef8aeea838 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55ef8aeea820 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55ef8aeea800 <col:112> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55ef8aeea888 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55ef8aeea870 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55ef8aeea850 <col:131> '_Bool' lvalue Var 0x55ef8aee7d58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55ef8aeeaae8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55ef8aeeaad0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ef8aeea8e0 <col:148> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55ef8aeeaab0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55ef8aeeaa80 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55ef8aeea9a0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55ef8aeea958 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55ef8aeea940 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55ef8aeea900 <col:166> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55ef8aeea988 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55ef8aeea970 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55ef8aeea920 <col:184> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55ef8aeeaa38 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55ef8aeea9f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55ef8aeea9c0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55ef8aeeaa68 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55ef8aeeaa50 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55ef8aeeaa18 <col:212> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55ef8aeeb1f0 <line:727:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aeeac48 <col:3> '_Bool' lvalue Var 0x55ef8aee7d58 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55ef8aeeb1d8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ef8aeeb1a8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55ef8aeeb160 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ef8aeeb148 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ef8aeeac68 <col:20> '_Bool' lvalue Var 0x55ef8aee81a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ef8aeeb190 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ef8aeeb178 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ef8aeeac88 <col:36> '_Bool' lvalue Var 0x55ef8aee7d58 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55ef8aeeb128 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55ef8aeeb0f8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55ef8aeeae98 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55ef8aeeadb8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55ef8aeeace0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55ef8aeeacc8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55ef8aeeaca8 <col:55> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55ef8aeead98 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55ef8aeead30 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55ef8aeead18 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55ef8aeeacf8 <col:74> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55ef8aeead80 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55ef8aeead68 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55ef8aeead48 <col:93> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55ef8aeeae78 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55ef8aeeae10 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55ef8aeeadf8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55ef8aeeadd8 <col:112> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55ef8aeeae60 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55ef8aeeae48 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55ef8aeeae28 <col:131> '_Bool' lvalue Var 0x55ef8aee7d58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55ef8aeeb0e0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55ef8aeeb0c8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ef8aeeaeb8 <col:148> '_Bool' lvalue Var 0x55ef8aee7d58 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55ef8aeeb0a8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55ef8aeeb078 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55ef8aeeaf78 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55ef8aeeaf30 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55ef8aeeaf18 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55ef8aeeaed8 <col:166> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55ef8aeeaf60 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55ef8aeeaf48 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55ef8aeeaef8 <col:184> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55ef8aeeb048 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55ef8aeeafc8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55ef8aeeaf98 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55ef8aeeb060 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55ef8aeeb020 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55ef8aeeaff0 <col:219> 'int' 0
|   |-BinaryOperator 0x55ef8aeeb268 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55ef8aeeb210 <col:3> 'int' lvalue Var 0x55ef8aee72e8 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55ef8aeeb250 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ef8aeeb230 <col:25> 'int' lvalue Var 0x55ef8aee7978 'y' 'int'
|   |-BinaryOperator 0x55ef8aeeb398 <line:729:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55ef8aeeb288 <col:3> 'int' lvalue Var 0x55ef8aee7978 'y' 'int'
|   | `-ConditionalOperator 0x55ef8aeeb368 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55ef8aeeb320 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55ef8aeeb308 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55ef8aeeb2a8 <col:7> '_Bool' lvalue Var 0x55ef8aee7a10 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55ef8aeeb338 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ef8aeeb2c8 <col:25> 'int' lvalue Var 0x55ef8aee7b00 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55ef8aeeb350 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55ef8aeeb2e8 <col:37> 'int' lvalue Var 0x55ef8aee7978 'y' 'int'
|   |-BinaryOperator 0x55ef8aeeb430 <line:730:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aeeb3b8 <col:3> '_Bool' lvalue Var 0x55ef8aee7a10 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55ef8aeeb408 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55ef8aeeb3d8 <col:28> 'int' 0
|   |-CallExpr 0x55ef8aeeb488 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ef8aeeb470 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ef8aeeb450 <col:3> 'void ()' Function 0x55ef8ae8e060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ef8aeeb4e0 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ef8aeeb4c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ef8aeeb4a8 <col:3> 'void ()' Function 0x55ef8ae8dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ef8aeeb558 <line:733:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55ef8aeeb500 <col:3> 'int' lvalue Var 0x55ef8aee7408 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x55ef8aeeb540 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ef8aeeb520 <col:25> 'int' lvalue Var 0x55ef8aee7858 'x' 'int'
|   |-CallExpr 0x55ef8aeeb5b0 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ef8aeeb598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ef8aeeb578 <col:3> 'void ()' Function 0x55ef8ae8e060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ef8aeeb608 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ef8aeeb5f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ef8aeeb5d0 <col:3> 'void ()' Function 0x55ef8ae8dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ef8aeeb8f0 <line:736:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55ef8aeeb628 <col:3> 'int' lvalue Var 0x55ef8aee7978 'y' 'int'
|   | `-ConditionalOperator 0x55ef8aeeb8c0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55ef8aeeb6e8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55ef8aeeb6a0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55ef8aeeb688 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55ef8aeeb648 <col:7> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55ef8aeeb6d0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55ef8aeeb6b8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55ef8aeeb668 <col:25> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55ef8aeeb8a8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ef8aeeb708 <col:42> 'int' lvalue Var 0x55ef8aee7f48 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55ef8aeeb888 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55ef8aeeb858 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55ef8aeeb7c8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55ef8aeeb780 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55ef8aeeb768 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55ef8aeeb728 <col:55> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55ef8aeeb7b0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55ef8aeeb798 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55ef8aeeb748 <col:73> '_Bool' lvalue Var 0x55ef8aee7d58 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55ef8aeeb828 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ef8aeeb7e8 <col:90> 'int' lvalue Var 0x55ef8aee8040 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55ef8aeeb840 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ef8aeeb808 <col:102> 'int' lvalue Var 0x55ef8aee7978 'y' 'int'
|   |-BinaryOperator 0x55ef8aeebaf8 <line:737:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aeeb910 <col:3> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ef8aeebae0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ef8aeebab0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55ef8aeeb9d0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55ef8aeeb988 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55ef8aeeb970 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55ef8aeeb930 <col:20> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55ef8aeeb9b8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55ef8aeeb9a0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55ef8aeeb950 <col:38> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55ef8aeeba68 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ef8aeeba20 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ef8aeeb9f0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55ef8aeeba98 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ef8aeeba80 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ef8aeeba48 <col:66> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55ef8aeebe08 <line:738:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aeebb40 <col:3> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ef8aeebdf0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ef8aeebdc0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55ef8aeebce0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55ef8aeebc00 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55ef8aeebbb8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55ef8aeebba0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55ef8aeebb60 <col:20> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55ef8aeebbe8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55ef8aeebbd0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55ef8aeebb80 <col:38> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55ef8aeebcc0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55ef8aeebc78 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55ef8aeebc60 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55ef8aeebc20 <col:56> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55ef8aeebca8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55ef8aeebc90 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55ef8aeebc40 <col:74> '_Bool' lvalue Var 0x55ef8aee7d58 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55ef8aeebd78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ef8aeebd30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ef8aeebd00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55ef8aeebda8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ef8aeebd90 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ef8aeebd58 <col:102> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55ef8aeec010 <line:739:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aeebe28 <col:3> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55ef8aeebff8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ef8aeebfc8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55ef8aeebee8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55ef8aeebea0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55ef8aeebe88 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55ef8aeebe48 <col:20> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55ef8aeebed0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55ef8aeebeb8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55ef8aeebe68 <col:38> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55ef8aeebf80 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ef8aeebf38 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ef8aeebf08 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55ef8aeebfb0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ef8aeebf98 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ef8aeebf60 <col:66> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55ef8aeec2f8 <line:740:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aeec030 <col:3> '_Bool' lvalue Var 0x55ef8aee7d58 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55ef8aeec2e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ef8aeec2b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55ef8aeec1d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55ef8aeec0f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55ef8aeec0a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55ef8aeec090 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55ef8aeec050 <col:20> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55ef8aeec0d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55ef8aeec0c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55ef8aeec070 <col:38> '_Bool' lvalue Var 0x55ef8aee7bf0 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55ef8aeec1b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55ef8aeec168 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55ef8aeec150 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55ef8aeec110 <col:56> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55ef8aeec198 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55ef8aeec180 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55ef8aeec130 <col:74> '_Bool' lvalue Var 0x55ef8aee7d58 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55ef8aeec268 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ef8aeec220 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ef8aeec1f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55ef8aeec298 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ef8aeec280 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ef8aeec248 <col:102> '_Bool' lvalue Var 0x55ef8aee7d58 'y$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55ef8aeec350 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ef8aeec338 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ef8aeec318 <col:3> 'void ()' Function 0x55ef8ae8e060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ef8aeec3a8 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ef8aeec390 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ef8aeec370 <col:3> 'void ()' Function 0x55ef8ae8dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ef8aeec460 <line:743:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55ef8aeec3c8 <col:3> 'int' lvalue Var 0x55ef8aee71c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55ef8aeec440 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55ef8aeec428 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ef8aeec3e8 <col:22> 'int' lvalue Var 0x55ef8aee71c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55ef8aeec408 <col:41> 'int' 1
|   |-CallExpr 0x55ef8aeec4b8 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ef8aeec4a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ef8aeec480 <col:3> 'void ()' Function 0x55ef8ae8e060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55ef8aeec568 <line:745:3, col:36>
|     `-CallExpr 0x55ef8aeec548 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55ef8aeec530 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55ef8aeec4d8 <col:10> 'void *(void)' Function 0x55ef8ae8dab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55ef8aeec780 prev 0x55ef8aee6e48 <line:747:1, line:782:1> line:747:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55ef8aeec6e8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55ef8aef0448 <line:748:1, line:782:1>
|   |-CallExpr 0x55ef8aeec860 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ef8aeec848 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ef8aeec828 <col:3> 'void ()' Function 0x55ef8ae8dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ef8aeec8c0 <line:750:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55ef8aeec880 <col:3> 'int' lvalue Var 0x55ef8aee7858 'x' 'int'
|   | `-IntegerLiteral 0x55ef8aeec8a0 <col:7> 'int' 1
|   |-CallExpr 0x55ef8aeec918 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ef8aeec900 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ef8aeec8e0 <col:3> 'void ()' Function 0x55ef8ae8e060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ef8aeec970 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ef8aeec958 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ef8aeec938 <col:3> 'void ()' Function 0x55ef8ae8dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ef8aeec9e8 <line:753:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55ef8aeec990 <col:3> 'int' lvalue Var 0x55ef8aee7528 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55ef8aeec9d0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ef8aeec9b0 <col:25> 'int' lvalue Var 0x55ef8aee7858 'x' 'int'
|   |-CallExpr 0x55ef8aeeca40 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ef8aeeca28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ef8aeeca08 <col:3> 'void ()' Function 0x55ef8ae8e060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ef8aeeca98 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ef8aeeca80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ef8aeeca60 <col:3> 'void ()' Function 0x55ef8ae8dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ef8aeecb50 <line:756:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aeecab8 <col:3> '_Bool' lvalue Var 0x55ef8aee8130 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55ef8aeecb10 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55ef8aeecaf8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55ef8aeecad8 <col:19> '_Bool (void)' Function 0x55ef8ae8d770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55ef8aeecbe8 <line:757:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aeecb70 <col:3> '_Bool' lvalue Var 0x55ef8aee81a8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55ef8aeecbc8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55ef8aeecbb0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55ef8aeecb90 <col:19> '_Bool (void)' Function 0x55ef8ae8d770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55ef8aeecc60 <line:758:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aeecc08 <col:3> '_Bool' lvalue Var 0x55ef8aee7a10 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55ef8aeecc48 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ef8aeecc28 <col:21> '_Bool' lvalue Var 0x55ef8aee81a8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55ef8aeeccd8 <line:759:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55ef8aeecc80 <col:3> 'int' lvalue Var 0x55ef8aee7b00 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55ef8aeeccc0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ef8aeecca0 <col:15> 'int' lvalue Var 0x55ef8aee7978 'y' 'int'
|   |-BinaryOperator 0x55ef8aeed110 <line:760:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55ef8aeeccf8 <col:3> 'int' lvalue Var 0x55ef8aee7978 'y' 'int'
|   | `-ConditionalOperator 0x55ef8aeed0e0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55ef8aeecf08 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55ef8aeece28 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55ef8aeecd50 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55ef8aeecd38 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55ef8aeecd18 <col:8> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55ef8aeece08 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55ef8aeecda0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55ef8aeecd88 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55ef8aeecd68 <col:27> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55ef8aeecdf0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55ef8aeecdd8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55ef8aeecdb8 <col:46> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55ef8aeecee8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55ef8aeece80 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55ef8aeece68 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55ef8aeece48 <col:65> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55ef8aeeced0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55ef8aeeceb8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55ef8aeece98 <col:84> '_Bool' lvalue Var 0x55ef8aee7dd0 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55ef8aeed0c8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ef8aeecf28 <col:101> 'int' lvalue Var 0x55ef8aee7978 'y' 'int'
|   |   `-ParenExpr 0x55ef8aeed0a8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55ef8aeed078 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55ef8aeecfe8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55ef8aeecfa0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55ef8aeecf88 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55ef8aeecf48 <col:106> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55ef8aeecfd0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55ef8aeecfb8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55ef8aeecf68 <col:124> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55ef8aeed048 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ef8aeed008 <col:141> 'int' lvalue Var 0x55ef8aee7f48 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55ef8aeed060 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ef8aeed028 <col:153> 'int' lvalue Var 0x55ef8aee8040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55ef8aeed620 <line:761:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55ef8aeed130 <col:3> 'int' lvalue Var 0x55ef8aee7f48 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55ef8aeed5f0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55ef8aeed5c0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55ef8aeed5a8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55ef8aeed150 <col:15> '_Bool' lvalue Var 0x55ef8aee81a8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55ef8aeed5d8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ef8aeed170 <col:31> 'int' lvalue Var 0x55ef8aee7f48 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55ef8aeed588 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55ef8aeed558 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55ef8aeed380 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55ef8aeed2a0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55ef8aeed1c8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55ef8aeed1b0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55ef8aeed190 <col:45> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55ef8aeed280 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55ef8aeed218 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55ef8aeed200 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55ef8aeed1e0 <col:64> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55ef8aeed268 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55ef8aeed250 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55ef8aeed230 <col:83> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55ef8aeed360 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55ef8aeed2f8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55ef8aeed2e0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55ef8aeed2c0 <col:102> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55ef8aeed348 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55ef8aeed330 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55ef8aeed310 <col:121> '_Bool' lvalue Var 0x55ef8aee7dd0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55ef8aeed540 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ef8aeed3a0 <col:138> 'int' lvalue Var 0x55ef8aee7f48 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55ef8aeed520 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55ef8aeed4f0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55ef8aeed460 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55ef8aeed418 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55ef8aeed400 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55ef8aeed3c0 <col:151> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55ef8aeed448 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55ef8aeed430 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55ef8aeed3e0 <col:169> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55ef8aeed4c0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55ef8aeed480 <col:186> 'int' lvalue Var 0x55ef8aee7f48 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55ef8aeed4d8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55ef8aeed4a0 <col:198> 'int' lvalue Var 0x55ef8aee7f48 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55ef8aeedb30 <line:762:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55ef8aeed640 <col:3> 'int' lvalue Var 0x55ef8aee8040 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55ef8aeedb00 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55ef8aeedad0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55ef8aeedab8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55ef8aeed660 <col:15> '_Bool' lvalue Var 0x55ef8aee81a8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55ef8aeedae8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ef8aeed680 <col:31> 'int' lvalue Var 0x55ef8aee8040 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55ef8aeeda98 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55ef8aeeda68 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55ef8aeed890 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55ef8aeed7b0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55ef8aeed6d8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55ef8aeed6c0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55ef8aeed6a0 <col:45> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55ef8aeed790 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55ef8aeed728 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55ef8aeed710 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55ef8aeed6f0 <col:64> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55ef8aeed778 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55ef8aeed760 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55ef8aeed740 <col:83> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55ef8aeed870 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55ef8aeed808 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55ef8aeed7f0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55ef8aeed7d0 <col:102> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55ef8aeed858 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55ef8aeed840 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55ef8aeed820 <col:121> '_Bool' lvalue Var 0x55ef8aee7dd0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55ef8aeeda50 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ef8aeed8b0 <col:138> 'int' lvalue Var 0x55ef8aee8040 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55ef8aeeda30 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55ef8aeeda00 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55ef8aeed970 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55ef8aeed928 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55ef8aeed910 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55ef8aeed8d0 <col:151> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55ef8aeed958 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55ef8aeed940 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55ef8aeed8f0 <col:169> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55ef8aeed9d0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55ef8aeed990 <col:186> 'int' lvalue Var 0x55ef8aee8040 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55ef8aeed9e8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55ef8aeed9b0 <col:198> 'int' lvalue Var 0x55ef8aee8040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55ef8aeee0e8 <line:763:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aeedb60 <col:3> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ef8aeee0d0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ef8aeee0a0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55ef8aeee058 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ef8aeee040 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ef8aeedb80 <col:20> '_Bool' lvalue Var 0x55ef8aee81a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ef8aeee088 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ef8aeee070 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ef8aeedba0 <col:36> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55ef8aeee020 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55ef8aeedff0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55ef8aeeddb0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55ef8aeedcd0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55ef8aeedbf8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55ef8aeedbe0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55ef8aeedbc0 <col:55> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55ef8aeedcb0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55ef8aeedc48 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55ef8aeedc30 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55ef8aeedc10 <col:74> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55ef8aeedc98 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55ef8aeedc80 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55ef8aeedc60 <col:93> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55ef8aeedd90 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55ef8aeedd28 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55ef8aeedd10 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55ef8aeedcf0 <col:112> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55ef8aeedd78 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55ef8aeedd60 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55ef8aeedd40 <col:131> '_Bool' lvalue Var 0x55ef8aee7dd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55ef8aeedfd8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55ef8aeedfc0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ef8aeeddd0 <col:148> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55ef8aeedfa0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55ef8aeedf70 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55ef8aeede90 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55ef8aeede48 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55ef8aeede30 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55ef8aeeddf0 <col:166> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55ef8aeede78 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55ef8aeede60 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55ef8aeede10 <col:184> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55ef8aeedf28 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55ef8aeedee0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55ef8aeedeb0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55ef8aeedf58 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55ef8aeedf40 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55ef8aeedf08 <col:212> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55ef8aeee6b0 <line:764:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aeee108 <col:3> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ef8aeee698 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ef8aeee668 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55ef8aeee620 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ef8aeee608 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ef8aeee128 <col:20> '_Bool' lvalue Var 0x55ef8aee81a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ef8aeee650 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ef8aeee638 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ef8aeee148 <col:36> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55ef8aeee5e8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55ef8aeee5b8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55ef8aeee358 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55ef8aeee278 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55ef8aeee1a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55ef8aeee188 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55ef8aeee168 <col:55> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55ef8aeee258 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55ef8aeee1f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55ef8aeee1d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55ef8aeee1b8 <col:74> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55ef8aeee240 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55ef8aeee228 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55ef8aeee208 <col:93> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55ef8aeee338 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55ef8aeee2d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55ef8aeee2b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55ef8aeee298 <col:112> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55ef8aeee320 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55ef8aeee308 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55ef8aeee2e8 <col:131> '_Bool' lvalue Var 0x55ef8aee7dd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55ef8aeee5a0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55ef8aeee588 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ef8aeee378 <col:148> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55ef8aeee568 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55ef8aeee538 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55ef8aeee438 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55ef8aeee3f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55ef8aeee3d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55ef8aeee398 <col:166> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55ef8aeee420 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55ef8aeee408 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55ef8aeee3b8 <col:184> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55ef8aeee508 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55ef8aeee488 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55ef8aeee458 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55ef8aeee520 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55ef8aeee4e0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55ef8aeee4b0 <col:219> 'int' 0
|   |-BinaryOperator 0x55ef8aeeec68 <line:765:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aeee6d0 <col:3> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55ef8aeeec50 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ef8aeeec20 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55ef8aeeebd8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ef8aeeebc0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ef8aeee6f0 <col:20> '_Bool' lvalue Var 0x55ef8aee81a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ef8aeeec08 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ef8aeeebf0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ef8aeee710 <col:36> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55ef8aeeeba0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55ef8aeeeb70 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55ef8aeee920 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55ef8aeee840 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55ef8aeee768 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55ef8aeee750 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55ef8aeee730 <col:55> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55ef8aeee820 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55ef8aeee7b8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55ef8aeee7a0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55ef8aeee780 <col:74> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55ef8aeee808 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55ef8aeee7f0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55ef8aeee7d0 <col:93> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55ef8aeee900 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55ef8aeee898 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55ef8aeee880 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55ef8aeee860 <col:112> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55ef8aeee8e8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55ef8aeee8d0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55ef8aeee8b0 <col:131> '_Bool' lvalue Var 0x55ef8aee7dd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55ef8aeeeb48 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55ef8aeeeb30 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ef8aeee940 <col:148> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55ef8aeeeb10 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55ef8aeeeae0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55ef8aeeea00 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55ef8aeee9b8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55ef8aeee9a0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55ef8aeee960 <col:166> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55ef8aeee9e8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55ef8aeee9d0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55ef8aeee980 <col:184> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55ef8aeeea98 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55ef8aeeea50 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55ef8aeeea20 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55ef8aeeeac8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55ef8aeeeab0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55ef8aeeea78 <col:212> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55ef8aeef230 <line:766:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aeeec88 <col:3> '_Bool' lvalue Var 0x55ef8aee7dd0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55ef8aeef218 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ef8aeef1e8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55ef8aeef1a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ef8aeef188 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ef8aeeeca8 <col:20> '_Bool' lvalue Var 0x55ef8aee81a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ef8aeef1d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ef8aeef1b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ef8aeeecc8 <col:36> '_Bool' lvalue Var 0x55ef8aee7dd0 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55ef8aeef168 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55ef8aeef138 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55ef8aeeeed8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55ef8aeeedf8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55ef8aeeed20 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55ef8aeeed08 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55ef8aeeece8 <col:55> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55ef8aeeedd8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55ef8aeeed70 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55ef8aeeed58 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55ef8aeeed38 <col:74> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55ef8aeeedc0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55ef8aeeeda8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55ef8aeeed88 <col:93> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55ef8aeeeeb8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55ef8aeeee50 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55ef8aeeee38 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55ef8aeeee18 <col:112> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55ef8aeeeea0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55ef8aeeee88 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55ef8aeeee68 <col:131> '_Bool' lvalue Var 0x55ef8aee7dd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55ef8aeef120 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55ef8aeef108 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ef8aeeeef8 <col:148> '_Bool' lvalue Var 0x55ef8aee7dd0 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55ef8aeef0e8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55ef8aeef0b8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55ef8aeeefb8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55ef8aeeef70 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55ef8aeeef58 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55ef8aeeef18 <col:166> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55ef8aeeefa0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55ef8aeeef88 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55ef8aeeef38 <col:184> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55ef8aeef088 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55ef8aeef008 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55ef8aeeefd8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55ef8aeef0a0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55ef8aeef060 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55ef8aeef030 <col:219> 'int' 0
|   |-BinaryOperator 0x55ef8aeef2a8 <line:767:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55ef8aeef250 <col:3> 'int' lvalue Var 0x55ef8aee7648 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x55ef8aeef290 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ef8aeef270 <col:25> 'int' lvalue Var 0x55ef8aee7978 'y' 'int'
|   |-BinaryOperator 0x55ef8aeef3d8 <line:768:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55ef8aeef2c8 <col:3> 'int' lvalue Var 0x55ef8aee7978 'y' 'int'
|   | `-ConditionalOperator 0x55ef8aeef3a8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55ef8aeef360 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55ef8aeef348 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55ef8aeef2e8 <col:7> '_Bool' lvalue Var 0x55ef8aee7a10 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55ef8aeef378 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ef8aeef308 <col:25> 'int' lvalue Var 0x55ef8aee7b00 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55ef8aeef390 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55ef8aeef328 <col:37> 'int' lvalue Var 0x55ef8aee7978 'y' 'int'
|   |-BinaryOperator 0x55ef8aeef470 <line:769:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aeef3f8 <col:3> '_Bool' lvalue Var 0x55ef8aee7a10 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55ef8aeef448 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55ef8aeef418 <col:28> 'int' 0
|   |-CallExpr 0x55ef8aeef4c8 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ef8aeef4b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ef8aeef490 <col:3> 'void ()' Function 0x55ef8ae8e060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ef8aeef520 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ef8aeef508 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ef8aeef4e8 <col:3> 'void ()' Function 0x55ef8ae8dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ef8aeef808 <line:772:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55ef8aeef540 <col:3> 'int' lvalue Var 0x55ef8aee7978 'y' 'int'
|   | `-ConditionalOperator 0x55ef8aeef7d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55ef8aeef600 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55ef8aeef5b8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55ef8aeef5a0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55ef8aeef560 <col:7> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55ef8aeef5e8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55ef8aeef5d0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55ef8aeef580 <col:25> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55ef8aeef7c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ef8aeef620 <col:42> 'int' lvalue Var 0x55ef8aee7f48 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55ef8aeef7a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55ef8aeef770 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55ef8aeef6e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55ef8aeef698 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55ef8aeef680 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55ef8aeef640 <col:55> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55ef8aeef6c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55ef8aeef6b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55ef8aeef660 <col:73> '_Bool' lvalue Var 0x55ef8aee7dd0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55ef8aeef740 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ef8aeef700 <col:90> 'int' lvalue Var 0x55ef8aee8040 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55ef8aeef758 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ef8aeef720 <col:102> 'int' lvalue Var 0x55ef8aee7978 'y' 'int'
|   |-BinaryOperator 0x55ef8aeefa10 <line:773:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aeef828 <col:3> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ef8aeef9f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ef8aeef9c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55ef8aeef8e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55ef8aeef8a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55ef8aeef888 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55ef8aeef848 <col:20> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55ef8aeef8d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55ef8aeef8b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55ef8aeef868 <col:38> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ef8aeef980 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ef8aeef938 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ef8aeef908 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55ef8aeef9b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ef8aeef998 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ef8aeef960 <col:66> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55ef8aeefd10 <line:774:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aeefa30 <col:3> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ef8aeefcf8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ef8aeefcc8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55ef8aeefbe8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55ef8aeefaf0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55ef8aeefaa8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55ef8aeefa90 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55ef8aeefa50 <col:20> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55ef8aeefad8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55ef8aeefac0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55ef8aeefa70 <col:38> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55ef8aeefbc8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55ef8aeefb80 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55ef8aeefb50 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55ef8aeefb10 <col:56> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55ef8aeefbb0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55ef8aeefb98 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55ef8aeefb30 <col:74> '_Bool' lvalue Var 0x55ef8aee7dd0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ef8aeefc80 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ef8aeefc38 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ef8aeefc08 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55ef8aeefcb0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ef8aeefc98 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ef8aeefc60 <col:102> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55ef8aeeff18 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aeefd30 <col:3> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55ef8aeeff00 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ef8aeefed0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55ef8aeefdf0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55ef8aeefda8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55ef8aeefd90 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55ef8aeefd50 <col:20> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55ef8aeefdd8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55ef8aeefdc0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55ef8aeefd70 <col:38> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ef8aeefe88 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ef8aeefe40 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ef8aeefe10 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55ef8aeefeb8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ef8aeefea0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ef8aeefe68 <col:66> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55ef8aef0200 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55ef8aeeff38 <col:3> '_Bool' lvalue Var 0x55ef8aee7dd0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55ef8aef01e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ef8aef01b8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55ef8aef00d8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55ef8aeefff8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55ef8aeeffb0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55ef8aeeff98 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55ef8aeeff58 <col:20> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55ef8aeeffe0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55ef8aeeffc8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55ef8aeeff78 <col:38> '_Bool' lvalue Var 0x55ef8aee7c68 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55ef8aef00b8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55ef8aef0070 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55ef8aef0058 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55ef8aef0018 <col:56> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55ef8aef00a0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55ef8aef0088 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55ef8aef0038 <col:74> '_Bool' lvalue Var 0x55ef8aee7dd0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ef8aef0170 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ef8aef0128 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ef8aef00f8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55ef8aef01a0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ef8aef0188 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ef8aef0150 <col:102> '_Bool' lvalue Var 0x55ef8aee7dd0 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55ef8aef0258 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ef8aef0240 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ef8aef0220 <col:3> 'void ()' Function 0x55ef8ae8e060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ef8aef02b0 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ef8aef0298 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ef8aef0278 <col:3> 'void ()' Function 0x55ef8ae8dfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ef8aef0368 <line:779:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55ef8aef02d0 <col:3> 'int' lvalue Var 0x55ef8aee71c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55ef8aef0348 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55ef8aef0330 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ef8aef02f0 <col:22> 'int' lvalue Var 0x55ef8aee71c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55ef8aef0310 <col:41> 'int' 1
|   |-CallExpr 0x55ef8aef03c0 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ef8aef03a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ef8aef0388 <col:3> 'void ()' Function 0x55ef8ae8e060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55ef8aef0438 <line:781:3, col:36>
|     `-CallExpr 0x55ef8aef0418 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55ef8aef0400 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55ef8aef03e0 <col:10> 'void *(void)' Function 0x55ef8ae8dab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55ef8aef0580 prev 0x55ef8aee6f10 <line:783:1, line:785:1> line:783:6 fence 'void ()'
| `-CompoundStmt 0x55ef8aef0620 <line:784:1, line:785:1>
|-FunctionDecl 0x55ef8aef0650 prev 0x55ef8aee6fd0 <line:786:1, line:788:1> line:786:6 isync 'void ()'
| `-CompoundStmt 0x55ef8aef06f0 <line:787:1, line:788:1>
|-FunctionDecl 0x55ef8aef0720 prev 0x55ef8aee7090 <line:789:1, line:791:1> line:789:6 lwfence 'void ()'
| `-CompoundStmt 0x55ef8aef07c0 <line:790:1, line:791:1>
`-FunctionDecl 0x55ef8aef0828 <line:792:1, line:814:1> line:792:5 main 'int ()'
  `-CompoundStmt 0x55ef8aef22b0 <line:793:1, line:814:1>
    |-DeclStmt 0x55ef8aef0940 <line:794:3, col:15>
    | `-VarDecl 0x55ef8aef08d8 <col:3, col:13> col:13 used t4 'pthread_t':'unsigned long'
    |-CallExpr 0x55ef8aef0b90 <line:795:3, col:51> 'int'
    | |-ImplicitCastExpr 0x55ef8aef0b30 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ef8aef0958 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55ef8aece5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55ef8aef0998 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55ef8aef0978 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55ef8aef08d8 't4' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55ef8aef0bd0 <col:23, col:33> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55ef8aef0a10 <col:23, col:33> 'void *'
    | |   `-CStyleCastExpr 0x55ef8aef09e8 <col:24, col:32> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55ef8aef09b0 <col:32> 'int' 0
    | |-ImplicitCastExpr 0x55ef8aef0be8 <col:36> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ef8aef0a30 <col:36> 'void *(void *)' Function 0x55ef8aee82c0 'P0' 'void *(void *)'
    | `-ParenExpr 0x55ef8aef0ab0 <col:40, col:50> 'void *'
    |   `-CStyleCastExpr 0x55ef8aef0a88 <col:41, col:49> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55ef8aef0a50 <col:49> 'int' 0
    |-DeclStmt 0x55ef8aef0c78 <line:796:3, col:15>
    | `-VarDecl 0x55ef8aef0c10 <col:3, col:13> col:13 used t5 'pthread_t':'unsigned long'
    |-CallExpr 0x55ef8aef0e20 <line:797:3, col:51> 'int'
    | |-ImplicitCastExpr 0x55ef8aef0e08 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ef8aef0c90 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55ef8aece5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55ef8aef0cd0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55ef8aef0cb0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55ef8aef0c10 't5' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55ef8aef0e60 <col:23, col:33> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55ef8aef0d48 <col:23, col:33> 'void *'
    | |   `-CStyleCastExpr 0x55ef8aef0d20 <col:24, col:32> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55ef8aef0ce8 <col:32> 'int' 0
    | |-ImplicitCastExpr 0x55ef8aef0e78 <col:36> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ef8aef0d68 <col:36> 'void *(void *)' Function 0x55ef8aeec780 'P1' 'void *(void *)'
    | `-ParenExpr 0x55ef8aef0de8 <col:40, col:50> 'void *'
    |   `-CStyleCastExpr 0x55ef8aef0dc0 <col:41, col:49> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55ef8aef0d88 <col:49> 'int' 0
    |-CallExpr 0x55ef8aef0ec8 <line:798:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55ef8aef0eb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55ef8aef0e90 <col:3> 'void ()' Function 0x55ef8ae8dfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55ef8aef0f98 <line:799:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55ef8aef0ee8 <col:3> '_Bool' lvalue Var 0x55ef8aee76e0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55ef8aef0f80 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55ef8aef0f60 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55ef8aef0f48 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55ef8aef0f08 <col:21> 'int' lvalue Var 0x55ef8aee71c8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55ef8aef0f28 <col:41> 'int' 2
    |-CallExpr 0x55ef8aef0ff0 <line:800:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55ef8aef0fd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55ef8aef0fb8 <col:3> 'void ()' Function 0x55ef8ae8e060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55ef8aef1068 <line:801:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55ef8aef1050 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ef8aef1010 <col:3> 'void (int)' Function 0x55ef8ae8d940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55ef8aef10a8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55ef8aef1090 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55ef8aef1030 <col:21> '_Bool' lvalue Var 0x55ef8aee76e0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55ef8aef10f8 <line:802:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55ef8aef10e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55ef8aef10c0 <col:3> 'void ()' Function 0x55ef8ae8dfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55ef8aef13e0 <line:803:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55ef8aef1118 <col:3> 'int' lvalue Var 0x55ef8aee7978 'y' 'int'
    | `-ConditionalOperator 0x55ef8aef13b0 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55ef8aef11d8 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55ef8aef1190 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55ef8aef1178 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55ef8aef1138 <col:7> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55ef8aef11c0 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55ef8aef11a8 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55ef8aef1158 <col:25> '_Bool' lvalue Var 0x55ef8aee7b78 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55ef8aef1398 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55ef8aef11f8 <col:42> 'int' lvalue Var 0x55ef8aee7f48 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55ef8aef1378 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55ef8aef1348 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55ef8aef12b8 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55ef8aef1270 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55ef8aef1258 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55ef8aef1218 <col:55> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55ef8aef12a0 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55ef8aef1288 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55ef8aef1238 <col:73> '_Bool' lvalue Var 0x55ef8aee7ce0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55ef8aef1318 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55ef8aef12d8 <col:90> 'int' lvalue Var 0x55ef8aee8040 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55ef8aef1330 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55ef8aef12f8 <col:102> 'int' lvalue Var 0x55ef8aee7978 'y' 'int'
    |-BinaryOperator 0x55ef8aef15e8 <line:804:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55ef8aef1400 <col:3> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55ef8aef15d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55ef8aef15a0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55ef8aef14c0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55ef8aef1478 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55ef8aef1460 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55ef8aef1420 <col:20> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55ef8aef14a8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55ef8aef1490 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55ef8aef1440 <col:38> '_Bool' lvalue Var 0x55ef8aee7b78 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55ef8aef1558 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55ef8aef1510 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55ef8aef14e0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55ef8aef1588 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55ef8aef1570 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55ef8aef1538 <col:66> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55ef8aef18d0 <line:805:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55ef8aef1608 <col:3> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55ef8aef18b8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55ef8aef1888 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55ef8aef17a8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55ef8aef16c8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55ef8aef1680 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55ef8aef1668 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55ef8aef1628 <col:20> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55ef8aef16b0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55ef8aef1698 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55ef8aef1648 <col:38> '_Bool' lvalue Var 0x55ef8aee7b78 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55ef8aef1788 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55ef8aef1740 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55ef8aef1728 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55ef8aef16e8 <col:56> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55ef8aef1770 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55ef8aef1758 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55ef8aef1708 <col:74> '_Bool' lvalue Var 0x55ef8aee7ce0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55ef8aef1840 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55ef8aef17f8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55ef8aef17c8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55ef8aef1870 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55ef8aef1858 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55ef8aef1820 <col:102> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55ef8aef1ad8 <line:806:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55ef8aef18f0 <col:3> '_Bool' lvalue Var 0x55ef8aee7b78 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55ef8aef1ac0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55ef8aef1a90 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55ef8aef19b0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55ef8aef1968 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55ef8aef1950 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55ef8aef1910 <col:20> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55ef8aef1998 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55ef8aef1980 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55ef8aef1930 <col:38> '_Bool' lvalue Var 0x55ef8aee7b78 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55ef8aef1a48 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55ef8aef1a00 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55ef8aef19d0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55ef8aef1a78 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55ef8aef1a60 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55ef8aef1a28 <col:66> '_Bool' lvalue Var 0x55ef8aee7b78 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55ef8aef1dd8 <line:807:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55ef8aef1af8 <col:3> '_Bool' lvalue Var 0x55ef8aee7ce0 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55ef8aef1dc0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55ef8aef1d90 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55ef8aef1cb0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55ef8aef1bd0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55ef8aef1b70 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55ef8aef1b58 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55ef8aef1b18 <col:20> '_Bool' lvalue Var 0x55ef8aee7fc0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55ef8aef1bb8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55ef8aef1ba0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55ef8aef1b38 <col:38> '_Bool' lvalue Var 0x55ef8aee7b78 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55ef8aef1c90 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55ef8aef1c48 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55ef8aef1c30 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55ef8aef1bf0 <col:56> '_Bool' lvalue Var 0x55ef8aee80b8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55ef8aef1c78 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55ef8aef1c60 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55ef8aef1c10 <col:74> '_Bool' lvalue Var 0x55ef8aee7ce0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55ef8aef1d48 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55ef8aef1d00 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55ef8aef1cd0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55ef8aef1d78 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55ef8aef1d60 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55ef8aef1d28 <col:102> '_Bool' lvalue Var 0x55ef8aee7ce0 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55ef8aef1e30 <line:808:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55ef8aef1e18 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55ef8aef1df8 <col:3> 'void ()' Function 0x55ef8ae8e060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55ef8aef1e88 <line:809:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55ef8aef1e70 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55ef8aef1e50 <col:3> 'void ()' Function 0x55ef8ae8dfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55ef8aef2158 <line:810:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x55ef8aef1ea8 <col:3> '_Bool' lvalue Var 0x55ef8aee7758 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55ef8aef2140 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55ef8aef2128 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55ef8aef2108 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x55ef8aef20e8 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x55ef8aef2050 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x55ef8aef1fb8 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x55ef8aef1f20 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55ef8aef1f08 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55ef8aef1ec8 <col:23> 'int' lvalue Var 0x55ef8aee72e8 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x55ef8aef1ee8 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x55ef8aef1f98 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55ef8aef1f80 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55ef8aef1f40 <col:51> 'int' lvalue Var 0x55ef8aee7408 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x55ef8aef1f60 <col:74> 'int' 0
    |         | `-BinaryOperator 0x55ef8aef2030 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55ef8aef2018 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55ef8aef1fd8 <col:79> 'int' lvalue Var 0x55ef8aee7528 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x55ef8aef1ff8 <col:102> 'int' 1
    |         `-BinaryOperator 0x55ef8aef20c8 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x55ef8aef20b0 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55ef8aef2070 <col:107> 'int' lvalue Var 0x55ef8aee7648 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x55ef8aef2090 <col:130> 'int' 0
    |-CallExpr 0x55ef8aef21b0 <line:811:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55ef8aef2198 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55ef8aef2178 <col:3> 'void ()' Function 0x55ef8ae8e060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55ef8aef2228 <line:812:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55ef8aef2210 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ef8aef21d0 <col:3> 'void (int)' Function 0x55ef8ae8dd28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55ef8aef2268 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55ef8aef2250 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55ef8aef21f0 <col:21> '_Bool' lvalue Var 0x55ef8aee7758 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55ef8aef22a0 <line:813:3, col:10>
      `-IntegerLiteral 0x55ef8aef2280 <col:10> 'int' 0
