TranslationUnitDecl 0x555af5f59e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x555af5f5a6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x555af5f5a3b0 '__int128'
|-TypedefDecl 0x555af5f5a748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x555af5f5a3d0 'unsigned __int128'
|-TypedefDecl 0x555af5f5aa50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x555af5f5a820 'struct __NSConstantString_tag'
|   `-Record 0x555af5f5a7a0 '__NSConstantString_tag'
|-TypedefDecl 0x555af5f5aaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x555af5f5aab0 'char *'
|   `-BuiltinType 0x555af5f59eb0 'char'
|-TypedefDecl 0x555af5f99650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x555af5f5ad90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x555af5f5abd0 'struct __va_list_tag'
|     `-Record 0x555af5f5ab50 '__va_list_tag'
|-FunctionDecl 0x555af5f99790 <./split_8/mix047_tso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x555af5f996c0 <col:31> col:34 'int'
|-FunctionDecl 0x555af5f99958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x555af5f99a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x555af5f99bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x555af5f99b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x555af5f99df8 <col:40, col:99>
|   |-IfStmt 0x555af5f99dc8 <col:42, col:88>
|   | |-UnaryOperator 0x555af5f99ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x555af5f99c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x555af5f99c70 <col:47> 'int' lvalue ParmVar 0x555af5f99b38 'expression' 'int'
|   | `-CompoundStmt 0x555af5f99db0 <col:59, col:88>
|   |   `-LabelStmt 0x555af5f99d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x555af5f99d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x555af5f99d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x555af5f99cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x555af5f99a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x555af5f99de0 <col:89>
|   `-ReturnStmt 0x555af5f99de8 <col:91>
|-FunctionDecl 0x555af5f99e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x555af5f99f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x555af5f9a280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x555af5f99fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x555af5f9a038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x555af5f9a0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x555af5f9a138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x555af5f9a340 <line:10:22>
|-FunctionDecl 0x555af5fc0390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x555af5f9a3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x555af5f9a430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x555af5f9a4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x555af5f9a530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x555af5fc0450 <line:13:22>
|-FunctionDecl 0x555af5fc0700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x555af5fc04c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x555af5fc0540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x555af5fc05c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x555af5fc07b8 <line:15:22>
|-TypedefDecl 0x555af5fc0828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x555af5f59f70 'unsigned char'
|-TypedefDecl 0x555af5fc0898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x555af5f59f90 'unsigned short'
|-TypedefDecl 0x555af5fc0908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x555af5f59fb0 'unsigned int'
|-TypedefDecl 0x555af5fc0978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x555af5f59fd0 'unsigned long'
|-TypedefDecl 0x555af5fc09e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x555af5f59ed0 'signed char'
|-TypedefDecl 0x555af5fc0a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x555af5f59f70 'unsigned char'
|-TypedefDecl 0x555af5fc0ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x555af5f59ef0 'short'
|-TypedefDecl 0x555af5fc0b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x555af5f59f90 'unsigned short'
|-TypedefDecl 0x555af5fc0ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x555af5f59f10 'int'
|-TypedefDecl 0x555af5fc0c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x555af5f59fb0 'unsigned int'
|-TypedefDecl 0x555af5fc0c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x555af5f59f30 'long'
|-TypedefDecl 0x555af5fc0cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x555af5f59fd0 'unsigned long'
|-TypedefDecl 0x555af5fc0d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x555af5f59f30 'long'
|-TypedefDecl 0x555af5fc0dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x555af5f59fd0 'unsigned long'
|-TypedefDecl 0x555af5fc0e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x555af5f59fd0 'unsigned long'
|-TypedefDecl 0x555af5fc0eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x555af5f59fb0 'unsigned int'
|-TypedefDecl 0x555af5fc0f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x555af5f59fb0 'unsigned int'
|-TypedefDecl 0x555af5fc0f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x555af5f59fd0 'unsigned long'
|-TypedefDecl 0x555af5fc1008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x555af5f59fd0 'unsigned long'
|-TypedefDecl 0x555af5fc1078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x555af5f59fb0 'unsigned int'
|-TypedefDecl 0x555af5fc10e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x555af5f59fd0 'unsigned long'
|-TypedefDecl 0x555af5fc1158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x555af5f59f30 'long'
|-TypedefDecl 0x555af5fc11c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x555af5f59f30 'long'
|-TypedefDecl 0x555af5fc1238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x555af5f59f10 'int'
|-RecordDecl 0x555af5fc1290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x555af5fc1408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x555af5fc14c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x555af5fc1460 'struct __fsid_t' sugar
|   `-RecordType 0x555af5fc1310 '__fsid_t'
|     `-Record 0x555af5fc1290 ''
|-TypedefDecl 0x555af5fc1548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x555af5f59f30 'long'
|-TypedefDecl 0x555af5fc15b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x555af5f59fd0 'unsigned long'
|-TypedefDecl 0x555af5fc1628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x555af5f59fd0 'unsigned long'
|-TypedefDecl 0x555af5fc1698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x555af5f59fb0 'unsigned int'
|-TypedefDecl 0x555af5fc1708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x555af5f59f30 'long'
|-TypedefDecl 0x555af5fc1778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x555af5f59fb0 'unsigned int'
|-TypedefDecl 0x555af5fc17e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x555af5f59f30 'long'
|-TypedefDecl 0x555af5fc1858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x555af5f59f10 'int'
|-TypedefDecl 0x555af5fc18c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x555af5f59f10 'int'
|-TypedefDecl 0x555af5fc1938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x555af5f59f10 'int'
|-TypedefDecl 0x555af5fc19a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x555af5f5a630 'void *'
|   `-BuiltinType 0x555af5f59e70 'void'
|-TypedefDecl 0x555af5fc1a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x555af5f59f30 'long'
|-TypedefDecl 0x555af5fc1a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x555af5f59f30 'long'
|-TypedefDecl 0x555af5fc1af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x555af5f59f30 'long'
|-TypedefDecl 0x555af5fc1b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x555af5f59fd0 'unsigned long'
|-TypedefDecl 0x555af5fc1bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x555af5f59fd0 'unsigned long'
|-TypedefDecl 0x555af5fc1c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x555af5f59fd0 'unsigned long'
|-TypedefDecl 0x555af5fc1cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x555af5f59fd0 'unsigned long'
|-TypedefDecl 0x555af5fc1d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x555af5f59f30 'long'
|-TypedefDecl 0x555af5fc1d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x555af5f59f30 'long'
|-TypedefDecl 0x555af5fc1e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x555af5f59f30 'long'
|-TypedefDecl 0x555af5fc1e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x555af5f59fd0 'unsigned long'
|-TypedefDecl 0x555af5fc1f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x555af5fc1ed0 '__off64_t' sugar
|   |-Typedef 0x555af5fc11c8 '__off64_t'
|   `-BuiltinType 0x555af5f59f30 'long'
|-TypedefDecl 0x555af5fc2000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x555af5fc1fc0 '__quad_t *'
|   `-TypedefType 0x555af5fc1f60 '__quad_t' sugar
|     |-Typedef 0x555af5fc0d68 '__quad_t'
|     `-BuiltinType 0x555af5f59f30 'long'
|-TypedefDecl 0x555af5fc2070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x555af5f5aab0 'char *'
|   `-BuiltinType 0x555af5f59eb0 'char'
|-TypedefDecl 0x555af5fc20e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x555af5f59f30 'long'
|-TypedefDecl 0x555af5fc2150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x555af5f59fb0 'unsigned int'
|-FunctionDecl 0x555af5fc2298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x555af5fc21c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x555af5fc35e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x555af5fc35d8 <line:72:3, col:34>
|     `-CallExpr 0x555af5fc3598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x555af5fc3580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x555af5fc3510 <col:10> '<builtin fn type>' Function 0x555af5fc3380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x555af5fc35c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x555af5fc3530 <col:29> 'unsigned int' lvalue ParmVar 0x555af5fc21c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x555af5fc3380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x555af5fc3420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x555af5fc3490 <col:10> Implicit
| `-ConstAttr 0x555af5fc34e8 <col:10> Implicit
|-FunctionDecl 0x555af5fc3740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x555af5fc3638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x555af5fc3a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x555af5fc3a48 <line:77:3, col:34>
|     `-CallExpr 0x555af5fc3a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x555af5fc39f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x555af5fc3978 <col:10> '<builtin fn type>' Function 0x555af5fc37e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x555af5fc3a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x555af5fc3998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x555af5fc3638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x555af5fc37e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x555af5fc3888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x555af5fc38f8 <col:10> Implicit
| `-ConstAttr 0x555af5fc3950 <col:10> Implicit
|-TypedefDecl 0x555af5fc3a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x555af5f59fd0 'unsigned long'
|-TypedefDecl 0x555af5fc3b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x555af5fc3ae0 '__time_t' sugar
|   |-Typedef 0x555af5fc1708 '__time_t'
|   `-BuiltinType 0x555af5f59f30 'long'
|-RecordDecl 0x555af5fc3b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x555af5fc3c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x555af5fc3cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x555af5fc3d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x555af5fc3d10 '__pid_t' sugar
|   |-Typedef 0x555af5fc1238 '__pid_t'
|   `-BuiltinType 0x555af5f59f10 'int'
|-RecordDecl 0x555af5fc3da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x555af5fc3e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x555af5fc3eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x555af5fc3f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x555af5fc3fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x555af5f59fd0 'unsigned long'
|-RecordDecl 0x555af5fc4030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x555af5fc42c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x555af5fc53a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x555af5fc4310 'struct cpu_set_t' sugar
|   `-RecordType 0x555af5fc40b0 'cpu_set_t'
|     `-Record 0x555af5fc4030 ''
|-FunctionDecl 0x555af5fc5678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x555af5fc5448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x555af5fc5550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x555af5fc5728 <line:107:19>
|-FunctionDecl 0x555af5fc5900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x555af5fc5790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x555af5fc59a8 <col:69>
|-FunctionDecl 0x555af5fc5b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x555af5fc5a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x555af5fc5bc8 <col:64>
|-FunctionDecl 0x555af5fc5e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x555af5fc5c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x555af5fc5d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x555af5fc5f38 <line:113:22>
|-FunctionDecl 0x555af5fc61b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x555af5fc5fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x555af5fc6098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x555af5fc6268 <col:88>
|-FunctionDecl 0x555af5fc6588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x555af5fc62d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x555af5fc63b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x555af5fc6440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x555af5fc6640 <col:62>
|-FunctionDecl 0x555af5fc67b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x555af5fc66a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x555af5fc6860 <col:63>
|-FunctionDecl 0x555af5fc6988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x555af5fc6a28 <col:47>
|-FunctionDecl 0x555af5fc6b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x555af5fc6a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x555af5fc6bd8 <col:69>
|-FunctionDecl 0x555af5fc6ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x555af5fc6c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x555af5fc6d88 <col:69>
|-FunctionDecl 0x555af5fc7048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x555af5fc6df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x555af5fc6f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x555af5fc70f8 <col:88>
|-TypedefDecl 0x555af5fc7188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x555af5fc7150 '__clock_t' sugar
|   |-Typedef 0x555af5fc1548 '__clock_t'
|   `-BuiltinType 0x555af5f59f30 'long'
|-TypedefDecl 0x555af5fc7218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x555af5fc71e0 '__clockid_t' sugar
|   |-Typedef 0x555af5fc1938 '__clockid_t'
|   `-BuiltinType 0x555af5f59f10 'int'
|-TypedefDecl 0x555af5fc72a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x555af5fc7270 '__timer_t' sugar
|   |-Typedef 0x555af5fc19a8 '__timer_t'
|   `-PointerType 0x555af5f5a630 'void *'
|     `-BuiltinType 0x555af5f59e70 'void'
|-RecordDecl 0x555af5fc7300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x555af5fc73d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x555af5fc7440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x555af5fc74a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x555af5fc7510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x555af5fc7578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x555af5fc75e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x555af5fc7648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x555af5fc76b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x555af5fc7718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x555af5fc7780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x555af5fc77e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x555af5fc7838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x555af5fc7908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x555af5fc7978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x555af5fc7a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x555af5fc7bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x555af5fc7c90 <col:45>
|-FunctionDecl 0x555af5fc7e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x555af5fc7d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x555af5fc7f18 <col:54>
|-FunctionDecl 0x555af5fc8118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x555af5fc7f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x555af5fc7ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x555af5fc81c8 <line:157:22>
| `-ConstAttr 0x555af5fc8220 <col:63>
|-FunctionDecl 0x555af5fc9050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x555af5fc8318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x555af5fc90f8 <col:56>
|-FunctionDecl 0x555af5fc94a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x555af5fc9168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x555af5fc91e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x555af5fc9260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x555af5fc9358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x555af5fc9560 <col:54>
|-RecordDecl 0x555af5fc95b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x555af5fc9668 parent 0x555af5f59e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x555af5fc98c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x555af5fc9968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x555af5fc99d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x555af5fc9a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x555af5fc9b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x555af5fc9c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x555af5fc9bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x555af5fc9b80 'struct __locale_struct' sugar
|     `-RecordType 0x555af5fc9640 'struct __locale_struct'
|       `-Record 0x555af5fc95b8 '__locale_struct'
|-TypedefDecl 0x555af5fc9cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x555af5fc9cc0 '__locale_t' sugar
|   |-Typedef 0x555af5fc9c48 '__locale_t'
|   `-PointerType 0x555af5fc9bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x555af5fc9b80 'struct __locale_struct' sugar
|       `-RecordType 0x555af5fc9640 'struct __locale_struct'
|         `-Record 0x555af5fc95b8 '__locale_struct'
|-FunctionDecl 0x555af5fcb110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x555af5fc9d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x555af5fc9de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x555af5fc9e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x555af5fc9ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x555af5fc9f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x555af5fcb1d8 <col:40>
|-FunctionDecl 0x555af5fcb3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x555af5fcb2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x555af5fcb470 <col:66>
|-FunctionDecl 0x555af5fcb580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x555af5fcb4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x555af5fcb628 <col:69>
|-FunctionDecl 0x555af5fcb858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x555af5fcb690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x555af5fcb720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x555af5fcb908 <col:52>
|-FunctionDecl 0x555af5fcbab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x555af5fcb970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x555af5fcba00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x555af5fcbb60 <col:55>
|-FunctionDecl 0x555af5fcbcf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x555af5fcbbe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x555af5fcbda0 <col:62>
|-FunctionDecl 0x555af5fcbf18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x555af5fcbe08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x555af5fcbfc0 <col:60>
|-FunctionDecl 0x555af5fcc2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x555af5fcc118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x555af5fcc198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x555af5fcc368 <col:44>
|-FunctionDecl 0x555af5fcc578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x555af5fcc3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x555af5fcc450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x555af5fcc628 <col:49>
|-VarDecl 0x555af5fcc728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x555af5fcc7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x555af5fcc828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x555af5fcc8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x555af5fcca20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x555af5fccac0 <col:42>
|-VarDecl 0x555af5fccb30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x555af5fccbb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x555af5fccd38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x555af5fccc28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x555af5fccde0 <col:57>
|-FunctionDecl 0x555af5fccef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x555af5fcce60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x555af5fccf98 <col:56>
|-FunctionDecl 0x555af5fcd0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x555af5fcd018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x555af5fcd178 <col:59>
|-FunctionDecl 0x555af5fcd280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x555af5fcd1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x555af5fcd328 <col:48>
| `-ConstAttr 0x555af5fcd380 <col:89>
|-FunctionDecl 0x555af5fcd5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x555af5fcd438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x555af5fcd4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x555af5fcd848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x555af5fcd6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555af5fcd768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x555af5fcd8f8 <col:88>
|-FunctionDecl 0x555af5fcda90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x555af5fcd960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555af5fcd9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x555af5fcdb40 <col:88>
|-FunctionDecl 0x555af5fcdd58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x555af5fcdba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555af5fcdc38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x555af5fcde08 <line:208:22>
|-FunctionDecl 0x555af5fce178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x555af5fcde70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555af5fcdef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x555af5fcdf80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x555af5fce010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x555af5fce478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x555af5fce278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x555af5fce350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x555af5fce528 <col:85>
|-FunctionDecl 0x555af5fce918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x555af5fce590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555af5fce6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x555af5fce7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x555af5fce9d0 <col:52>
|-FunctionDecl 0x555af5fceb48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x555af5fcea38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x555af5fcebf0 <col:61>
|-FunctionDecl 0x555af5fcf0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x555af5fcec58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x555af5fcecd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x555af5fcee08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x555af5fceef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x555af5fcf1b0 <col:62>
|-FunctionDecl 0x555af5fcf3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x555af5fcf218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x555af5fcf2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x555af5fcf478 <line:221:22>
|-FunctionDecl 0x555af5fcf578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x555af5fcf4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x555af5fcf620 <col:65>
|-TypedefDecl 0x555af5fcf690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x555af5f59fd0 'unsigned long'
|-RecordDecl 0x555af5fcf6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x555af5fcf830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x555af5fcf898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555af5fcf948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x555af5fcf8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x555af5fcf770 'union pthread_attr_t'
|     `-Record 0x555af5fcf6e8 'pthread_attr_t'
|-RecordDecl 0x555af5fcf9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x555af5fcfb18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x555af5fcfb90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x555af5fcfc40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x555af5fcfbe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x555af5fcfa20 'struct __pthread_internal_list'
|     `-Record 0x555af5fcf9a0 '__pthread_internal_list'
|-RecordDecl 0x555af5fcfcb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x555af5fcfd58 parent 0x555af5f59e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x555af5fcfe30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x555af5fcfe98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x555af5fcff00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x555af5fcff68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x555af5fcffd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x555af5fd0038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x555af5fd4110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x555af5fd41c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x555af5fd42b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x555af5fd4318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555af5fd44a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x555af5fd4440 'union pthread_mutex_t' sugar
|   `-RecordType 0x555af5fcfd30 'pthread_mutex_t'
|     `-Record 0x555af5fcfcb0 ''
|-RecordDecl 0x555af5fd4510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x555af5fd4650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x555af5fd46b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x555af5fd4770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x555af5fd4710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x555af5fd4590 'pthread_mutexattr_t'
|     `-Record 0x555af5fd4510 ''
|-RecordDecl 0x555af5fd47e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x555af5fd4888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x555af5fd4950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x555af5fd49b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x555af5fd4a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x555af5fd4a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x555af5fd4af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x555af5fd4b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x555af5fd4bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x555af5fd4c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x555af5fd4ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_8/mix047_tso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_8/mix047_tso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x555af5fd4dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x555af5fd4e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x555af5fd4f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x555af5fd4f10 'union pthread_cond_t' sugar
|   `-RecordType 0x555af5fd4860 'pthread_cond_t'
|     `-Record 0x555af5fd47e0 ''
|-RecordDecl 0x555af5fd4fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x555af5fd6130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x555af5fd6198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x555af5fd6250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x555af5fd61f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x555af5fd5060 'pthread_condattr_t'
|     `-Record 0x555af5fd4fe0 ''
|-TypedefDecl 0x555af5fd62d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x555af5f59fb0 'unsigned int'
|-TypedefDecl 0x555af5fd6348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x555af5f59f10 'int'
|-RecordDecl 0x555af5fd63a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x555af5fd6448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x555af5fd6510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x555af5fd6578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x555af5fd65e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x555af5fd6648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x555af5fd66b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x555af5fd6718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x555af5fd6780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x555af5fd67e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x555af5fd6850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x555af5fd68b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x555af5fd6920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x555af5fd69d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_8/mix047_tso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_8/mix047_tso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x555af5fd6a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x555af5fd6ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555af5fd6c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x555af5fd6bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x555af5fd6420 'pthread_rwlock_t'
|     `-Record 0x555af5fd63a0 ''
|-RecordDecl 0x555af5fd6ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x555af5fd6de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x555af5fd6e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555af5fd6f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x555af5fd6ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x555af5fd6d20 'pthread_rwlockattr_t'
|     `-Record 0x555af5fd6ca0 ''
|-TypedefDecl 0x555af5fd6f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x555af5f59f14 'volatile int' volatile
|   `-BuiltinType 0x555af5f59f10 'int'
|-RecordDecl 0x555af5fd6fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x555af5fd8140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x555af5fd81a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555af5fd8260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x555af5fd8200 'union pthread_barrier_t' sugar
|   `-RecordType 0x555af5fd7060 'pthread_barrier_t'
|     `-Record 0x555af5fd6fe0 ''
|-RecordDecl 0x555af5fd82d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x555af5fd83d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x555af5fd8438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x555af5fd84f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x555af5fd8490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x555af5fd8350 'pthread_barrierattr_t'
|     `-Record 0x555af5fd82d0 ''
|-TypedefDecl 0x555af5fd8608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x555af5fd85a0 'long [8]' 8 
|   `-BuiltinType 0x555af5f59f30 'long'
|-EnumDecl 0x555af5fd8660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x555af5fd8728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x555af5fd8778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x555af5fd87c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x555af5fd8898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x555af5fd88e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x555af5fd8938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x555af5fd8988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x555af5fd8a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x555af5fd89f8 <col:26> 'int'
| |   `-DeclRefExpr 0x555af5fd89d8 <col:26> 'int' EnumConstant 0x555af5fd8898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x555af5fd8a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x555af5fd8a80 <col:29> 'int'
| |   `-DeclRefExpr 0x555af5fd8a60 <col:29> 'int' EnumConstant 0x555af5fd88e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x555af5fd8b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x555af5fd8b08 <col:30> 'int'
| |   `-DeclRefExpr 0x555af5fd8ae8 <col:30> 'int' EnumConstant 0x555af5fd8938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x555af5fd8ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x555af5fd8b90 <col:27> 'int'
|     `-DeclRefExpr 0x555af5fd8b70 <col:27> 'int' EnumConstant 0x555af5fd8a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x555af5fd8bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x555af5fd8cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x555af5fd8d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x555af5fd8d38 <col:30> 'int'
| |   `-DeclRefExpr 0x555af5fd8d18 <col:30> 'int' EnumConstant 0x555af5fd8cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x555af5fd8da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x555af5fd8e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x555af5fd8e10 <col:29> 'int'
|     `-DeclRefExpr 0x555af5fd8df0 <col:29> 'int' EnumConstant 0x555af5fd8da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x555af5fd8e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x555af5fd8f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x555af5fd8f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x555af5fd8fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x555af5fd9038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x555af5fd9150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x555af5fd91a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x555af5fd91f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x555af5fd9278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x555af5fd9260 <col:31> 'int'
|     `-DeclRefExpr 0x555af5fd9240 <col:31> 'int' EnumConstant 0x555af5fd9150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x555af5fd92c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x555af5fd9398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x555af5fd93e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x555af5fd9438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x555af5fd9508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x555af5fd9558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x555af5fd95a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x555af5fd9678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x555af5fd96c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x555af5fd9718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x555af5fd9958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x555af5fd99c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x555af5fd9a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x555af5fd9b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x555af5fd9b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x555af5fd9c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x555af5fd9cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x555af5fd9d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x555af5fd9dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x555af5fd9e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x555af5fda488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x555af5fd9f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x555af5fda030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555af5fda270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x555af5fda2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x555af5fda548 <col:47>
| |-NonNullAttr 0x555af5fda5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x555af5fda5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x555af5fda700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x555af5fda630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x555af5fda958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x555af5fda7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x555af5fda838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x555af5fdab28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x555af5fdaa18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x555af5fdabd0 <col:60>
|-FunctionDecl 0x555af5fdad20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x555af5fdadc0 <col:54>
| `-ConstAttr 0x555af5fdae18 <col:95>
|-FunctionDecl 0x555af5fdafe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x555af5fdae50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555af5fdaec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x555af5fdb098 <line:394:19>
| `-ConstAttr 0x555af5fdb0f0 <col:60>
|-FunctionDecl 0x555af5fdcb08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x555af5fdc9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x555af5fdcbb0 <col:71>
| `-NonNullAttr 0x555af5fdcc08 <col:112, col:126> 1
|-FunctionDecl 0x555af5fdcd10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x555af5fdcc58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x555af5fdcdb8 <line:397:22>
| `-NonNullAttr 0x555af5fdce10 <col:63, col:77> 1
|-FunctionDecl 0x555af5fdd038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x555af5fdce58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x555af5fdced8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x555af5fdd0e8 <line:400:22>
| `-NonNullAttr 0x555af5fdd140 <col:63, col:80> 1 2
|-FunctionDecl 0x555af5fdd348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x555af5fdd188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555af5fdd208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x555af5fdd3f8 <line:403:22>
| `-NonNullAttr 0x555af5fdd450 <col:63, col:77> 1
|-FunctionDecl 0x555af5fdd6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x555af5fdd498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x555af5fdd540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x555af5fdd758 <line:406:22>
| `-NonNullAttr 0x555af5fdd7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x555af5fde9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x555af5fdd7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555af5fdd870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x555af5fdea98 <line:409:22>
| `-NonNullAttr 0x555af5fdeaf0 <col:63, col:77> 1
|-FunctionDecl 0x555af5fded28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x555af5fdeb38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555af5fdebc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x555af5fdedd8 <line:412:22>
| `-NonNullAttr 0x555af5fdee30 <col:63, col:80> 1 2
|-FunctionDecl 0x555af5fdf068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x555af5fdee78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x555af5fdef08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x555af5fdf118 <col:37>
| `-NonNullAttr 0x555af5fdf170 <col:78, col:95> 1 2
|-FunctionDecl 0x555af5fdf358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555af5fdf1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555af5fdf238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x555af5fdf408 <line:418:22>
| `-NonNullAttr 0x555af5fdf460 <col:63, col:80> 1 2
|-FunctionDecl 0x555af5fdf5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x555af5fdf4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555af5fdf528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x555af5fdf698 <line:420:22>
| `-NonNullAttr 0x555af5fdf6f0 <col:63, col:77> 1
|-FunctionDecl 0x555af5fdf898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555af5fdf738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555af5fdf7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x555af5fdf948 <line:423:22>
| `-NonNullAttr 0x555af5fdf9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x555af5fdfb48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x555af5fdfa08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555af5fdfa88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x555af5fdfbf8 <line:426:22>
| `-NonNullAttr 0x555af5fdfc50 <col:63, col:77> 1
|-FunctionDecl 0x555af5fdfdf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555af5fdfc98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555af5fdfd18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x555af5fdfea8 <line:429:22>
| `-NonNullAttr 0x555af5fdff00 <col:63, col:80> 1 2
|-FunctionDecl 0x555af5fe0088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x555af5fdff48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555af5fdffc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x555af5fe0138 <line:431:22>
| `-NonNullAttr 0x555af5fe0190 <col:63, col:77> 1
|-FunctionDecl 0x555af5fe03b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x555af5fe01d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555af5fe0258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x555af5fe0468 <line:434:22>
| |-NonNullAttr 0x555af5fe04c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x555af5fe04f8 <col:100> "" ""
|-FunctionDecl 0x555af5fe0708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x555af5fe0548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555af5fe05c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x555af5fe07b8 <line:437:22>
| |-NonNullAttr 0x555af5fe0810 <col:63, col:77> 1
| `-DeprecatedAttr 0x555af5fe0848 <col:97> "" ""
|-FunctionDecl 0x555af5fe0a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x555af5fe0898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555af5fe0910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x555af5fe0af8 <line:440:22>
| `-NonNullAttr 0x555af5fe0b50 <col:63, col:80> 1 2
|-FunctionDecl 0x555af5fe0cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x555af5fe0b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555af5fe0c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x555af5fe0d80 <line:443:22>
| `-NonNullAttr 0x555af5fe0dd8 <col:63, col:77> 1
|-FunctionDecl 0x555af5fe10c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x555af5fe0e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555af5fe0ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x555af5fe0f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x555af5fe1180 <line:447:22>
| `-NonNullAttr 0x555af5fe11d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x555af5fe1488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x555af5fe1230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555af5fe12b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x555af5fe1328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x555af5fe1540 <col:43>
| `-NonNullAttr 0x555af5fe1598 <col:84, col:98> 1
|-FunctionDecl 0x555af5fe1858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x555af5fe15e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555af5fe1668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x555af5fe16f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x555af5fe1910 <line:452:22>
| `-NonNullAttr 0x555af5fe1968 <col:63, col:77> 3
|-FunctionDecl 0x555af5fe1c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x555af5fe19e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555af5fe1a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x555af5fe1af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x555af5fe1d30 <line:456:22>
| `-NonNullAttr 0x555af5fe1d88 <col:63, col:80> 2 3
|-FunctionDecl 0x555af5fe1f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x555af5fe1dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555af5fe1e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x555af5fe2028 <line:458:22>
|-FunctionDecl 0x555af5fe23f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x555af5fe20f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x555af5fe2290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x555af5fe24a8 <col:52, col:69> 1 2
|-FunctionDecl 0x555af5fe2650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x555af5fe2530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x555af5fe25b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x555af5fe2838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x555af5fe2718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x555af5fe2798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x555af5fe29f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x555af5fe28f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x555af5fe2b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x555af5fe2bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x555af5fe2c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x555af5fe2d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x555af5fe2dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x555af5fe2fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_8/mix047_tso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x555af5fe3098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x555af5fe3150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x555af5fe30f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x555af5fe2c50 '__pthread_unwind_buf_t'
| |   `-Record 0x555af5fe2bd0 ''
| `-AlignedAttr 0x555af5fe31a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x555af5fe3220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x555af5fe3380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x555af5fe33e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x555af5fe3450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x555af5fe34b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x555af5fe36c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x555af5fe35b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x555af5fe3808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x555af5fe3778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x555af5fe3a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x555af5fe38c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x555af5fe3aa8 <line:487:22>
|-RecordDecl 0x555af5fe3b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x555af5fe3e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x555af5fe3c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x555af5fe3cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x555af5fe3ec8 <col:86>
| `-ReturnsTwiceAttr 0x555af5fe3f20 <col:12> Implicit
|-FunctionDecl 0x555af5fe4248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x555af5fe3ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x555af5fe4100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x555af5fe42f8 <line:493:22>
| `-NonNullAttr 0x555af5fe4350 <col:63, col:77> 1
|-FunctionDecl 0x555af5fe44c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555af5fe4398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555af5fe4570 <line:495:22>
| `-NonNullAttr 0x555af5fe45c8 <col:63, col:77> 1
|-FunctionDecl 0x555af5fe46d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555af5fe4618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555af5fe4778 <line:497:22>
| `-NonNullAttr 0x555af5fe47d0 <col:52, col:66> 1
|-FunctionDecl 0x555af5fe48d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555af5fe4818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555af5fe4978 <line:499:22>
| `-NonNullAttr 0x555af5fe49d0 <col:52, col:66> 1
|-FunctionDecl 0x555af5fe5c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x555af5fe5a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x555af5fe5ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x555af5fe5cd8 <col:36>
| `-NonNullAttr 0x555af5fe5d30 <col:66, col:83> 1 2
|-FunctionDecl 0x555af5fe5e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555af5fe5d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555af5fe5ed8 <line:504:22>
| `-NonNullAttr 0x555af5fe5f30 <col:52, col:66> 1
|-FunctionDecl 0x555af5fe61c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555af5fe5fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x555af5fe6060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x555af5fe6278 <line:508:22>
| `-NonNullAttr 0x555af5fe62d0 <col:63, col:80> 1 2
|-FunctionDecl 0x555af5fe6598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x555af5fe6318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x555af5fe6398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x555af5fe6418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x555af5fe6650 <line:512:22>
| `-NonNullAttr 0x555af5fe66a8 <col:63, col:80> 1 3
|-FunctionDecl 0x555af5fe67b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555af5fe66f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555af5fe6858 <line:514:22>
| `-NonNullAttr 0x555af5fe68b0 <col:63, col:77> 1
|-FunctionDecl 0x555af5fe6ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x555af5fe6960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x555af5fe6b80 <line:516:22>
| `-NonNullAttr 0x555af5fe6bd8 <col:63, col:77> 1
|-FunctionDecl 0x555af5fe6ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x555af5fe6c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x555af5fe6d88 <line:518:22>
| `-NonNullAttr 0x555af5fe6de0 <col:63, col:77> 1
|-FunctionDecl 0x555af5fe7008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555af5fe6e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x555af5fe6ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x555af5fe70b8 <line:522:22>
| `-NonNullAttr 0x555af5fe7110 <col:63, col:80> 1 2
|-FunctionDecl 0x555af5fe7318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555af5fe7158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555af5fe71d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x555af5fe73c8 <line:525:22>
| `-NonNullAttr 0x555af5fe7420 <col:63, col:77> 1
|-FunctionDecl 0x555af5fe75c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555af5fe7468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x555af5fe74e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x555af5fe7678 <line:528:22>
| `-NonNullAttr 0x555af5fe76d0 <col:63, col:80> 1 2
|-FunctionDecl 0x555af5fe7858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555af5fe7718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555af5fe7798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x555af5fe7908 <line:530:22>
| `-NonNullAttr 0x555af5fe7960 <col:63, col:77> 1
|-FunctionDecl 0x555af5fe7b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555af5fe79a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x555af5fe7a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x555af5fe7bd0 <line:534:22>
| `-NonNullAttr 0x555af5fe7c28 <col:63, col:80> 1 2
|-FunctionDecl 0x555af5fe7db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555af5fe7c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555af5fe7cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x555af5fe7e68 <line:537:22>
| `-NonNullAttr 0x555af5fe7ec0 <col:63, col:77> 1
|-FunctionDecl 0x555af5fe8068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555af5fe7f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x555af5fe7f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x555af5fe8118 <line:541:22>
| `-NonNullAttr 0x555af5fe8170 <col:63, col:80> 1 2
|-FunctionDecl 0x555af5fe82f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555af5fe81b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555af5fe8238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x555af5fe83a8 <line:544:22>
| `-NonNullAttr 0x555af5fe8400 <col:63, col:77> 1
|-FunctionDecl 0x555af5fe85e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x555af5fe8448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x555af5fe84c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x555af5fe8698 <line:547:22>
| `-NonNullAttr 0x555af5fe86f0 <col:63, col:80> 1 2
|-FunctionDecl 0x555af5fe8878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555af5fe8738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555af5fe87b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x555af5fe8928 <line:550:22>
| `-NonNullAttr 0x555af5fe8980 <col:63, col:77> 1
|-FunctionDecl 0x555af5fe9cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x555af5fe9aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x555af5fe9bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x555af5fe9da8 <col:29>
| `-NonNullAttr 0x555af5fe9e00 <col:70, col:84> 1
|-FunctionDecl 0x555af5fe9f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555af5fe9e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555af5fea020 <line:555:22>
| `-NonNullAttr 0x555af5fea078 <col:63, col:77> 1
|-FunctionDecl 0x555af5fea180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555af5fea0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555af5fea228 <line:557:22>
| `-NonNullAttr 0x555af5fea280 <col:52, col:66> 1
|-FunctionDecl 0x555af5fea380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555af5fea2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555af5fea428 <line:559:19>
| `-NonNullAttr 0x555af5fea480 <col:49, col:63> 1
|-FunctionDecl 0x555af5fea6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x555af5fea4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x555af5fea558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x555af5fea768 <col:39>
| `-NonNullAttr 0x555af5fea7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x555af5fea8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555af5fea808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555af5fea968 <line:564:22>
| `-NonNullAttr 0x555af5fea9c0 <col:52, col:66> 1
|-FunctionDecl 0x555af5feab28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555af5feaa70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555af5feabd0 <line:566:22>
| `-NonNullAttr 0x555af5feac28 <col:52, col:66> 1
|-FunctionDecl 0x555af5feade8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x555af5feac78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x555af5fead08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x555af5feae98 <col:39>
| `-NonNullAttr 0x555af5feaef0 <col:69, col:86> 1 2
|-FunctionDecl 0x555af5feaff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555af5feaf38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555af5feb098 <line:571:22>
| `-NonNullAttr 0x555af5feb0f0 <col:52, col:66> 1
|-FunctionDecl 0x555af5feb2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x555af5feb1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x555af5feb380 <line:573:22>
| `-NonNullAttr 0x555af5feb3d8 <col:63, col:77> 1
|-FunctionDecl 0x555af5feb4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x555af5feb428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x555af5feb588 <line:575:22>
| `-NonNullAttr 0x555af5feb5e0 <col:63, col:77> 1
|-FunctionDecl 0x555af5feb808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555af5feb628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x555af5feb6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x555af5feb8b8 <line:579:22>
| `-NonNullAttr 0x555af5feb910 <col:63, col:80> 1 2
|-FunctionDecl 0x555af5febb38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x555af5feb958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x555af5feb9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x555af5febbe8 <line:582:22>
| `-NonNullAttr 0x555af5febc40 <col:63, col:77> 1
|-FunctionDecl 0x555af5febde8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555af5febc88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x555af5febd08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x555af5febe98 <line:586:22>
| `-NonNullAttr 0x555af5febef0 <col:63, col:80> 1 2
|-FunctionDecl 0x555af5fec078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x555af5febf38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x555af5febfb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x555af5fec128 <col:36>
| `-NonNullAttr 0x555af5fec180 <col:77, col:91> 1
|-FunctionDecl 0x555af5fec4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x555af5fec260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x555af5fec370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x555af5fec568 <line:591:22>
| `-NonNullAttr 0x555af5fec5c0 <col:63, col:77> 1
|-FunctionDecl 0x555af5fec738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x555af5fec608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x555af5fec7e0 <line:593:22>
| `-NonNullAttr 0x555af5fec838 <col:63, col:77> 1
|-FunctionDecl 0x555af5fec940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x555af5fec888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x555af5fec9e8 <line:595:22>
| `-NonNullAttr 0x555af5feca40 <col:52, col:66> 1
|-FunctionDecl 0x555af5fecb58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x555af5fecaa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x555af5fecc00 <line:597:22>
| `-NonNullAttr 0x555af5fecc58 <col:52, col:66> 1
|-FunctionDecl 0x555af5fece88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x555af5fecca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x555af5fecd20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x555af5fecf38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x555af5fed268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x555af5fecfb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x555af5fed030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x555af5fed0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x555af5fed320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x555af5fed538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x555af5fed400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x555af5fed5e0 <line:606:22>
| `-NonNullAttr 0x555af5fed638 <col:63, col:77> 1
|-FunctionDecl 0x555af5fed740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x555af5fed688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x555af5fed7e8 <line:608:22>
| `-NonNullAttr 0x555af5fed840 <col:63, col:77> 1
|-FunctionDecl 0x555af5fedaa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555af5fed888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x555af5fed908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x555af5fedb50 <line:612:22>
| `-NonNullAttr 0x555af5fedba8 <col:63, col:80> 1 2
|-FunctionDecl 0x555af5feddb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x555af5fedbf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x555af5fedc78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x555af5fede68 <col:37>
| `-NonNullAttr 0x555af5fedec0 <col:78, col:92> 1
|-FunctionDecl 0x555af5fee0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x555af5fedf08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x555af5fedfb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x555af5fee188 <line:618:22>
| `-NonNullAttr 0x555af5fee1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x555af5fee3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x555af5fee228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x555af5fee2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x555af5fee458 <line:621:22>
| `-NonNullAttr 0x555af5fee4b0 <col:63, col:77> 1
|-FunctionDecl 0x555af5fee758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x555af5fee590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x555af5fee610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x555af5fee808 <line:623:22>
| `-NonNullAttr 0x555af5fee860 <col:63, col:77> 1
|-FunctionDecl 0x555af5fee9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x555af5fee8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555af5feeab0 <line:625:22>
| `-NonNullAttr 0x555af5feeb08 <col:63, col:77> 1
|-FunctionDecl 0x555af5feec10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x555af5feeb58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555af5feecb8 <line:627:22>
| `-NonNullAttr 0x555af5feed10 <col:52, col:66> 1
|-FunctionDecl 0x555af5feee10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x555af5feed58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555af5feeeb8 <line:629:22>
| `-NonNullAttr 0x555af5feef10 <col:52, col:66> 1
|-FunctionDecl 0x555af5fef010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x555af5feef58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555af5fef0b8 <line:631:22>
| `-NonNullAttr 0x555af5fef110 <col:52, col:66> 1
|-FunctionDecl 0x555af5fef4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x555af5fef1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x555af5fef300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x555af5fef380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x555af5fef5a0 <line:635:22>
| `-NonNullAttr 0x555af5fef5f8 <col:63, col:77> 1
|-FunctionDecl 0x555af5fef778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x555af5fef648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x555af5fef820 <line:637:22>
| `-NonNullAttr 0x555af5fef878 <col:63, col:77> 1
|-FunctionDecl 0x555af5fef980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x555af5fef8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x555af5fefa28 <line:639:22>
| `-NonNullAttr 0x555af5fefa80 <col:52, col:66> 1
|-FunctionDecl 0x555af5ff0c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x555af5ff0b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x555af5ff0d30 <line:641:22>
| `-NonNullAttr 0x555af5ff0d88 <col:63, col:77> 1
|-FunctionDecl 0x555af5ff0e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x555af5ff0dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x555af5ff0f38 <line:643:22>
| `-NonNullAttr 0x555af5ff0f90 <col:63, col:77> 1
|-FunctionDecl 0x555af5ff11b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555af5ff0fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x555af5ff1058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x555af5ff1268 <line:647:22>
| `-NonNullAttr 0x555af5ff12c0 <col:63, col:80> 1 2
|-FunctionDecl 0x555af5ff14c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x555af5ff1308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x555af5ff1388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x555af5ff1578 <line:650:22>
| `-NonNullAttr 0x555af5ff15d0 <col:63, col:77> 1
|-FunctionDecl 0x555af5ff1918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x555af5ff16b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x555af5ff17d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x555af5ff19c8 <line:653:22>
| `-NonNullAttr 0x555af5ff1a20 <col:63, col:77> 1
|-FunctionDecl 0x555af5ff1b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x555af5ff1a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x555af5ff1c30 <col:69>
|-FunctionDecl 0x555af5ff1da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x555af5ff1c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x555af5ff1e50 <col:72>
|-FunctionDecl 0x555af5ff2088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x555af5ff1eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x555af5ff1f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x555af5ff2138 <col:44>
|-FunctionDecl 0x555af5ff2358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x555af5ff21a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555af5ff2218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x555af5ff2408 <line:660:22>
| `-NonNullAttr 0x555af5ff2460 <col:63, col:77> 2
|-FunctionDecl 0x555af5ff28a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x555af5ff2540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x555af5ff2650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x555af5ff2760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x555af5ff2960 <col:47>
|-FunctionDecl 0x555af5ff2af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x555af5ff29d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x555af5ff2c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x555af5ff2bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x555af5ff2da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x555af5ff2d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x555af5ff2ef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x555af5ff2e60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x555af5ff2fc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x555af5ff3080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x555af5ff3140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x555af5ff31f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x555af5ff3278 prev 0x555af5ff31f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x555af5ff32e0 <col:24> 'int' 0
|-VarDecl 0x555af5ff3318 <line:674:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x555af5ff3398 prev 0x555af5ff3318 <line:675:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x555af5ff3400 <col:27> 'int' 0
|-VarDecl 0x555af5ff3438 <line:676:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x555af5ff34b8 prev 0x555af5ff3438 <line:677:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x555af5ff3520 <col:27> 'int' 0
|-VarDecl 0x555af5ff3558 <line:678:1, col:5> col:5 used a 'int'
|-VarDecl 0x555af5ff35d8 prev 0x555af5ff3558 <line:679:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x555af5ff3640 <col:9> 'int' 0
|-VarDecl 0x555af5ff3678 <line:680:1, col:5> col:5 used b 'int'
|-VarDecl 0x555af5ff36f8 prev 0x555af5ff3678 <line:681:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x555af5ff3760 <col:9> 'int' 0
|-VarDecl 0x555af5ff3790 <line:682:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x555af5ff3808 <line:683:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x555af5ff3888 <line:684:1, col:5> col:5 used x 'int'
|-VarDecl 0x555af5ff3908 prev 0x555af5ff3888 <line:685:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x555af5ff3970 <col:9> 'int' 0
|-VarDecl 0x555af5ff39a8 <line:686:1, col:5> col:5 used y 'int'
|-VarDecl 0x555af5ff3a28 prev 0x555af5ff39a8 <line:687:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x555af5ff3a90 <col:9> 'int' 0
|-VarDecl 0x555af5ff3b00 <line:688:1, col:5> col:5 used z 'int'
|-VarDecl 0x555af5ff3b80 prev 0x555af5ff3b00 <line:689:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x555af5ff3be8 <col:9> 'int' 0
|-VarDecl 0x555af5ff3c18 <line:690:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x555af5ff3c98 <line:691:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x555af5ff3d10 <line:692:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x555af5ff3d88 <line:693:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x555af5ff3e00 <line:694:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x555af5ff3e78 <line:695:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x555af5ff3ef0 <line:696:1, col:7> col:7 used z$r_buff0_thd4 '_Bool'
|-VarDecl 0x555af5ff3f68 <line:697:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x555af5ff3fe0 <line:698:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x555af5ff4058 <line:699:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x555af5ff40d0 <line:700:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x555af5ff4148 <line:701:1, col:7> col:7 used z$r_buff1_thd4 '_Bool'
|-VarDecl 0x555af5ff41c0 <line:702:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x555af5ff4240 <line:703:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x555af5ff42c0 <line:704:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x555af5ff4338 <line:705:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x555af5ff43b8 <line:706:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x555af5ff4430 <line:707:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x555af5ff44a8 <line:708:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x555af5ff4520 <line:709:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x555af5ff4638 prev 0x555af5ff2af0 <line:710:1, line:724:1> line:710:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x555af5ff45a0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x555af5ff4c08 <line:711:1, line:724:1>
|   |-CallExpr 0x555af5ff4748 <line:712:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555af5ff4730 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff46e0 <col:3> 'void ()' Function 0x555af5f99e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555af5ff47a8 <line:713:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x555af5ff4768 <col:3> 'int' lvalue Var 0x555af5ff36f8 'b' 'int'
|   | `-IntegerLiteral 0x555af5ff4788 <col:7> 'int' 1
|   |-CallExpr 0x555af5ff4800 <line:714:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555af5ff47e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff47c8 <col:3> 'void ()' Function 0x555af5f99f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555af5ff4858 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555af5ff4840 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff4820 <col:3> 'void ()' Function 0x555af5f99e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555af5ff48b8 <line:716:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x555af5ff4878 <col:3> 'int' lvalue Var 0x555af5ff3908 'x' 'int'
|   | `-IntegerLiteral 0x555af5ff4898 <col:7> 'int' 1
|   |-CallExpr 0x555af5ff4910 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555af5ff48f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff48d8 <col:3> 'void ()' Function 0x555af5f99f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555af5ff4968 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555af5ff4950 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff4930 <col:3> 'void ()' Function 0x555af5f99e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x555af5ff49c0 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555af5ff49a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff4988 <col:3> 'void ()' Function 0x555af5f99f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555af5ff4a18 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555af5ff4a00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff49e0 <col:3> 'void ()' Function 0x555af5f99e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555af5ff4ad0 <line:721:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x555af5ff4a38 <col:3> 'int' lvalue Var 0x555af5ff3278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x555af5ff4ab0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x555af5ff4a98 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555af5ff4a58 <col:22> 'int' lvalue Var 0x555af5ff3278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x555af5ff4a78 <col:41> 'int' 1
|   |-CallExpr 0x555af5ff4b48 <line:722:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555af5ff4b30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff4b10 <col:3> 'void ()' Function 0x555af5f99f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x555af5ff4bf8 <line:723:3, col:36>
|     `-CallExpr 0x555af5ff4bd8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x555af5ff4bc0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x555af5ff4b68 <col:10> 'void *(void)' Function 0x555af5f99958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x555af5ff4d28 prev 0x555af5ff2c48 <line:725:1, line:739:1> line:725:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x555af5ff4c90 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x555af5ff5270 <line:726:1, line:739:1>
|   |-CallExpr 0x555af5ff4e08 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555af5ff4df0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff4dd0 <col:3> 'void ()' Function 0x555af5f99e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555af5ff4e68 <line:728:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x555af5ff4e28 <col:3> 'int' lvalue Var 0x555af5ff3908 'x' 'int'
|   | `-IntegerLiteral 0x555af5ff4e48 <col:7> 'int' 2
|   |-CallExpr 0x555af5ff4ec0 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555af5ff4ea8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff4e88 <col:3> 'void ()' Function 0x555af5f99f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555af5ff4f18 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555af5ff4f00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff4ee0 <col:3> 'void ()' Function 0x555af5f99e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555af5ff4f78 <line:731:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x555af5ff4f38 <col:3> 'int' lvalue Var 0x555af5ff3a28 'y' 'int'
|   | `-IntegerLiteral 0x555af5ff4f58 <col:7> 'int' 1
|   |-CallExpr 0x555af5ff4fd0 <line:732:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555af5ff4fb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff4f98 <col:3> 'void ()' Function 0x555af5f99f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555af5ff5028 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555af5ff5010 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff4ff0 <col:3> 'void ()' Function 0x555af5f99e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x555af5ff5080 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555af5ff5068 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff5048 <col:3> 'void ()' Function 0x555af5f99f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555af5ff50d8 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555af5ff50c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff50a0 <col:3> 'void ()' Function 0x555af5f99e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555af5ff5190 <line:736:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x555af5ff50f8 <col:3> 'int' lvalue Var 0x555af5ff3278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x555af5ff5170 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x555af5ff5158 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555af5ff5118 <col:22> 'int' lvalue Var 0x555af5ff3278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x555af5ff5138 <col:41> 'int' 1
|   |-CallExpr 0x555af5ff51e8 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555af5ff51d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff51b0 <col:3> 'void ()' Function 0x555af5f99f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x555af5ff5260 <line:738:3, col:36>
|     `-CallExpr 0x555af5ff5240 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x555af5ff5228 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x555af5ff5208 <col:10> 'void *(void)' Function 0x555af5f99958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x555af5ff5390 prev 0x555af5ff2da0 <line:740:1, line:759:1> line:740:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x555af5ff52f8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x555af5ff65b8 <line:741:1, line:759:1>
|   |-CallExpr 0x555af5ff5470 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555af5ff5458 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff5438 <col:3> 'void ()' Function 0x555af5f99e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555af5ff54d0 <line:743:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x555af5ff5490 <col:3> 'int' lvalue Var 0x555af5ff3a28 'y' 'int'
|   | `-IntegerLiteral 0x555af5ff54b0 <col:7> 'int' 2
|   |-CallExpr 0x555af5ff5528 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555af5ff5510 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff54f0 <col:3> 'void ()' Function 0x555af5f99f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555af5ff5580 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555af5ff5568 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff5548 <col:3> 'void ()' Function 0x555af5f99e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555af5ff55e0 <line:746:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x555af5ff55a0 <col:3> 'int' lvalue Var 0x555af5ff3b80 'z' 'int'
|   | `-IntegerLiteral 0x555af5ff55c0 <col:7> 'int' 1
|   |-CallExpr 0x555af5ff5638 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555af5ff5620 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff5600 <col:3> 'void ()' Function 0x555af5f99f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555af5ff5690 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555af5ff5678 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff5658 <col:3> 'void ()' Function 0x555af5f99e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555af5ff5978 <line:749:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x555af5ff56b0 <col:3> 'int' lvalue Var 0x555af5ff3b80 'z' 'int'
|   | `-ConditionalOperator 0x555af5ff5948 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x555af5ff5770 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x555af5ff5728 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x555af5ff5710 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x555af5ff56d0 <col:7> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x555af5ff5758 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x555af5ff5740 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x555af5ff56f0 <col:25> '_Bool' lvalue Var 0x555af5ff3e78 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x555af5ff5930 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555af5ff5790 <col:42> 'int' lvalue Var 0x555af5ff42c0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x555af5ff5910 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x555af5ff58e0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x555af5ff5850 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x555af5ff5808 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x555af5ff57f0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x555af5ff57b0 <col:55> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x555af5ff5838 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x555af5ff5820 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x555af5ff57d0 <col:73> '_Bool' lvalue Var 0x555af5ff40d0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x555af5ff58b0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555af5ff5870 <col:90> 'int' lvalue Var 0x555af5ff43b8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x555af5ff58c8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x555af5ff5890 <col:102> 'int' lvalue Var 0x555af5ff3b80 'z' 'int'
|   |-BinaryOperator 0x555af5ff5b98 <line:750:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555af5ff5998 <col:3> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x555af5ff5b80 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555af5ff5b50 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555af5ff5a58 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555af5ff5a10 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555af5ff59f8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555af5ff59b8 <col:20> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555af5ff5a40 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555af5ff5a28 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555af5ff59d8 <col:38> '_Bool' lvalue Var 0x555af5ff3e78 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x555af5ff5af0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555af5ff5aa8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555af5ff5a78 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555af5ff5b38 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555af5ff5b20 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555af5ff5ad0 <col:66> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555af5ff5e80 <line:751:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555af5ff5bb8 <col:3> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555af5ff5e68 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555af5ff5e38 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555af5ff5d58 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555af5ff5c78 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555af5ff5c30 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555af5ff5c18 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555af5ff5bd8 <col:20> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555af5ff5c60 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555af5ff5c48 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555af5ff5bf8 <col:38> '_Bool' lvalue Var 0x555af5ff3e78 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x555af5ff5d38 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555af5ff5cf0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555af5ff5cd8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555af5ff5c98 <col:56> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555af5ff5d20 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555af5ff5d08 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555af5ff5cb8 <col:74> '_Bool' lvalue Var 0x555af5ff40d0 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x555af5ff5df0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555af5ff5da8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555af5ff5d78 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555af5ff5e20 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555af5ff5e08 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555af5ff5dd0 <col:102> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x555af5ff6088 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555af5ff5ea0 <col:3> '_Bool' lvalue Var 0x555af5ff3e78 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x555af5ff6070 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555af5ff6040 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555af5ff5f60 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555af5ff5f18 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555af5ff5f00 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555af5ff5ec0 <col:20> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555af5ff5f48 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555af5ff5f30 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555af5ff5ee0 <col:38> '_Bool' lvalue Var 0x555af5ff3e78 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x555af5ff5ff8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555af5ff5fb0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555af5ff5f80 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555af5ff6028 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555af5ff6010 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555af5ff5fd8 <col:66> '_Bool' lvalue Var 0x555af5ff3e78 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x555af5ff6370 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555af5ff60a8 <col:3> '_Bool' lvalue Var 0x555af5ff40d0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x555af5ff6358 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555af5ff6328 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555af5ff6248 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555af5ff6168 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555af5ff6120 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555af5ff6108 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555af5ff60c8 <col:20> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555af5ff6150 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555af5ff6138 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555af5ff60e8 <col:38> '_Bool' lvalue Var 0x555af5ff3e78 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x555af5ff6228 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555af5ff61e0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555af5ff61c8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555af5ff6188 <col:56> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555af5ff6210 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555af5ff61f8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555af5ff61a8 <col:74> '_Bool' lvalue Var 0x555af5ff40d0 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x555af5ff62e0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555af5ff6298 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555af5ff6268 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555af5ff6310 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555af5ff62f8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555af5ff62c0 <col:102> '_Bool' lvalue Var 0x555af5ff40d0 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x555af5ff63c8 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555af5ff63b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff6390 <col:3> 'void ()' Function 0x555af5f99f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555af5ff6420 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555af5ff6408 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff63e8 <col:3> 'void ()' Function 0x555af5f99e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555af5ff64d8 <line:756:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x555af5ff6440 <col:3> 'int' lvalue Var 0x555af5ff3278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x555af5ff64b8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x555af5ff64a0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555af5ff6460 <col:22> 'int' lvalue Var 0x555af5ff3278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x555af5ff6480 <col:41> 'int' 1
|   |-CallExpr 0x555af5ff6530 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555af5ff6518 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff64f8 <col:3> 'void ()' Function 0x555af5f99f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x555af5ff65a8 <line:758:3, col:36>
|     `-CallExpr 0x555af5ff6588 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x555af5ff6570 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x555af5ff6550 <col:10> 'void *(void)' Function 0x555af5f99958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x555af5ff6700 prev 0x555af5ff2ef8 <line:760:1, line:795:1> line:760:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x555af5ff6668 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x555af5ff81b0 <line:761:1, line:795:1>
|   |-CallExpr 0x555af5ff67e0 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555af5ff67c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff67a8 <col:3> 'void ()' Function 0x555af5f99e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555af5ff6858 <line:763:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x555af5ff6800 <col:3> 'int' lvalue Var 0x555af5ff43b8 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x555af5ff6840 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555af5ff6820 <col:15> 'int' lvalue Var 0x555af5ff42c0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x555af5ff68b8 <line:764:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x555af5ff6878 <col:3> 'int' lvalue Var 0x555af5ff42c0 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x555af5ff6898 <col:15> 'int' 2
|   |-BinaryOperator 0x555af5ff6930 <line:765:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555af5ff68d8 <col:3> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555af5ff6918 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555af5ff68f8 <col:20> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555af5ff69c8 <line:766:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x555af5ff6950 <col:3> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x555af5ff69a0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x555af5ff6970 <col:27> 'int' 1
|   |-CallExpr 0x555af5ff6b78 <line:767:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x555af5ff6b60 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x555af5ff69e8 <col:3> 'void (int)' Function 0x555af5f99bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x555af5ff6ae8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x555af5ff6ac8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x555af5ff6aa8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x555af5ff6a60 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x555af5ff6a48 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x555af5ff6a08 <col:23> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x555af5ff6a90 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x555af5ff6a78 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x555af5ff6a28 <col:41> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555af5ff6bf8 <line:768:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555af5ff6ba0 <col:3> '_Bool' lvalue Var 0x555af5ff3f68 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x555af5ff6be0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555af5ff6bc0 <col:20> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x555af5ff6c70 <line:769:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555af5ff6c18 <col:3> '_Bool' lvalue Var 0x555af5ff3fe0 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x555af5ff6c58 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555af5ff6c38 <col:20> '_Bool' lvalue Var 0x555af5ff3d88 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x555af5ff6ce8 <line:770:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555af5ff6c90 <col:3> '_Bool' lvalue Var 0x555af5ff4058 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x555af5ff6cd0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555af5ff6cb0 <col:20> '_Bool' lvalue Var 0x555af5ff3e00 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x555af5ff6d60 <line:771:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555af5ff6d08 <col:3> '_Bool' lvalue Var 0x555af5ff40d0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x555af5ff6d48 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555af5ff6d28 <col:20> '_Bool' lvalue Var 0x555af5ff3e78 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x555af5ff6dd8 <line:772:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555af5ff6d80 <col:3> '_Bool' lvalue Var 0x555af5ff4148 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x555af5ff6dc0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555af5ff6da0 <col:20> '_Bool' lvalue Var 0x555af5ff3ef0 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x555af5ff6e70 <line:773:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x555af5ff6df8 <col:3> '_Bool' lvalue Var 0x555af5ff3ef0 'z$r_buff0_thd4' '_Bool'
|   | `-CStyleCastExpr 0x555af5ff6e48 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x555af5ff6e18 <col:27> 'int' 1
|   |-CallExpr 0x555af5ff6ec8 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555af5ff6eb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff6e90 <col:3> 'void ()' Function 0x555af5f99f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555af5ff6f20 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555af5ff6f08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff6ee8 <col:3> 'void ()' Function 0x555af5f99e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555af5ff6f80 <line:776:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x555af5ff6f40 <col:3> 'int' lvalue Var 0x555af5ff35d8 'a' 'int'
|   | `-IntegerLiteral 0x555af5ff6f60 <col:7> 'int' 1
|   |-CallExpr 0x555af5ff6fd8 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555af5ff6fc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff6fa0 <col:3> 'void ()' Function 0x555af5f99f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555af5ff7030 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555af5ff7018 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff6ff8 <col:3> 'void ()' Function 0x555af5f99e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555af5ff70a8 <line:779:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x555af5ff7050 <col:3> 'int' lvalue Var 0x555af5ff3398 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x555af5ff7090 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555af5ff7070 <col:25> 'int' lvalue Var 0x555af5ff35d8 'a' 'int'
|   |-CallExpr 0x555af5ff7100 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555af5ff70e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff70c8 <col:3> 'void ()' Function 0x555af5f99f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555af5ff7158 <line:781:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555af5ff7140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff7120 <col:3> 'void ()' Function 0x555af5f99e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555af5ff71d0 <line:782:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x555af5ff7178 <col:3> 'int' lvalue Var 0x555af5ff34b8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x555af5ff71b8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555af5ff7198 <col:25> 'int' lvalue Var 0x555af5ff36f8 'b' 'int'
|   |-CallExpr 0x555af5ff7228 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555af5ff7210 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff71f0 <col:3> 'void ()' Function 0x555af5f99f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555af5ff7280 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555af5ff7268 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff7248 <col:3> 'void ()' Function 0x555af5f99e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555af5ff7568 <line:785:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x555af5ff72a0 <col:3> 'int' lvalue Var 0x555af5ff3b80 'z' 'int'
|   | `-ConditionalOperator 0x555af5ff7538 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x555af5ff7360 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x555af5ff7318 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x555af5ff7300 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x555af5ff72c0 <col:7> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x555af5ff7348 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x555af5ff7330 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x555af5ff72e0 <col:25> '_Bool' lvalue Var 0x555af5ff3ef0 'z$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x555af5ff7520 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555af5ff7380 <col:42> 'int' lvalue Var 0x555af5ff42c0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x555af5ff7500 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x555af5ff74d0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x555af5ff7440 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x555af5ff73f8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x555af5ff73e0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x555af5ff73a0 <col:55> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x555af5ff7428 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x555af5ff7410 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x555af5ff73c0 <col:73> '_Bool' lvalue Var 0x555af5ff4148 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x555af5ff74a0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555af5ff7460 <col:90> 'int' lvalue Var 0x555af5ff43b8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x555af5ff74b8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x555af5ff7480 <col:102> 'int' lvalue Var 0x555af5ff3b80 'z' 'int'
|   |-BinaryOperator 0x555af5ff7770 <line:786:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555af5ff7588 <col:3> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x555af5ff7758 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555af5ff7728 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555af5ff7648 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555af5ff7600 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555af5ff75e8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555af5ff75a8 <col:20> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555af5ff7630 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555af5ff7618 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555af5ff75c8 <col:38> '_Bool' lvalue Var 0x555af5ff3ef0 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x555af5ff76e0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555af5ff7698 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555af5ff7668 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555af5ff7710 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555af5ff76f8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555af5ff76c0 <col:66> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555af5ff7a58 <line:787:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555af5ff7790 <col:3> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555af5ff7a40 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555af5ff7a10 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555af5ff7930 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555af5ff7850 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555af5ff7808 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555af5ff77f0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555af5ff77b0 <col:20> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555af5ff7838 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555af5ff7820 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555af5ff77d0 <col:38> '_Bool' lvalue Var 0x555af5ff3ef0 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x555af5ff7910 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555af5ff78c8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555af5ff78b0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555af5ff7870 <col:56> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555af5ff78f8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555af5ff78e0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555af5ff7890 <col:74> '_Bool' lvalue Var 0x555af5ff4148 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x555af5ff79c8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555af5ff7980 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555af5ff7950 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555af5ff79f8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555af5ff79e0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555af5ff79a8 <col:102> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x555af5ff7c80 <line:788:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555af5ff7a78 <col:3> '_Bool' lvalue Var 0x555af5ff3ef0 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x555af5ff7c68 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555af5ff7c38 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555af5ff7b58 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555af5ff7af0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555af5ff7ad8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555af5ff7a98 <col:20> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555af5ff7b40 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555af5ff7b08 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555af5ff7ab8 <col:38> '_Bool' lvalue Var 0x555af5ff3ef0 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x555af5ff7bf0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555af5ff7ba8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555af5ff7b78 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555af5ff7c20 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555af5ff7c08 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555af5ff7bd0 <col:66> '_Bool' lvalue Var 0x555af5ff3ef0 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x555af5ff7f68 <line:789:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555af5ff7ca0 <col:3> '_Bool' lvalue Var 0x555af5ff4148 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x555af5ff7f50 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555af5ff7f20 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555af5ff7e40 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555af5ff7d60 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555af5ff7d18 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555af5ff7d00 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555af5ff7cc0 <col:20> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555af5ff7d48 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555af5ff7d30 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555af5ff7ce0 <col:38> '_Bool' lvalue Var 0x555af5ff3ef0 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x555af5ff7e20 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555af5ff7dd8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555af5ff7dc0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555af5ff7d80 <col:56> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555af5ff7e08 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555af5ff7df0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555af5ff7da0 <col:74> '_Bool' lvalue Var 0x555af5ff4148 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x555af5ff7ed8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555af5ff7e90 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555af5ff7e60 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555af5ff7f08 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555af5ff7ef0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555af5ff7eb8 <col:102> '_Bool' lvalue Var 0x555af5ff4148 'z$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x555af5ff7fc0 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555af5ff7fa8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff7f88 <col:3> 'void ()' Function 0x555af5f99f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555af5ff8018 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555af5ff8000 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff7fe0 <col:3> 'void ()' Function 0x555af5f99e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555af5ff80d0 <line:792:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x555af5ff8038 <col:3> 'int' lvalue Var 0x555af5ff3278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x555af5ff80b0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x555af5ff8098 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555af5ff8058 <col:22> 'int' lvalue Var 0x555af5ff3278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x555af5ff8078 <col:41> 'int' 1
|   |-CallExpr 0x555af5ff8128 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555af5ff8110 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555af5ff80f0 <col:3> 'void ()' Function 0x555af5f99f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x555af5ff81a0 <line:794:3, col:36>
|     `-CallExpr 0x555af5ff8180 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x555af5ff8168 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x555af5ff8148 <col:10> 'void *(void)' Function 0x555af5f99958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x555af5ff82e8 prev 0x555af5ff2fc0 <line:796:1, line:798:1> line:796:6 fence 'void ()'
| `-CompoundStmt 0x555af5ff8388 <line:797:1, line:798:1>
|-FunctionDecl 0x555af5ff83b8 prev 0x555af5ff3080 <line:799:1, line:801:1> line:799:6 isync 'void ()'
| `-CompoundStmt 0x555af5ff8458 <line:800:1, line:801:1>
|-FunctionDecl 0x555af5ff8488 prev 0x555af5ff3140 <line:802:1, line:804:1> line:802:6 lwfence 'void ()'
| `-CompoundStmt 0x555af5ff8528 <line:803:1, line:804:1>
`-FunctionDecl 0x555af5ff8598 <line:805:1, line:844:1> line:805:5 main 'int ()'
  `-CompoundStmt 0x555af5ffcf58 <line:806:1, line:844:1>
    |-DeclStmt 0x555af5ff86b0 <line:807:3, col:18>
    | `-VarDecl 0x555af5ff8648 <col:3, col:13> col:13 used t1279 'pthread_t':'unsigned long'
    |-CallExpr 0x555af5ff88b8 <line:808:3, col:54> 'int'
    | |-ImplicitCastExpr 0x555af5ff88a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555af5ff86c8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x555af5fda488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x555af5ff8708 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x555af5ff86e8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x555af5ff8648 't1279' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x555af5ff88f8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x555af5ff8780 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x555af5ff8758 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x555af5ff8720 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x555af5ff8910 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555af5ff87a0 <col:39> 'void *(void *)' Function 0x555af5ff4638 'P0' 'void *(void *)'
    | `-ParenExpr 0x555af5ff8820 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x555af5ff87f8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x555af5ff87c0 <col:52> 'int' 0
    |-DeclStmt 0x555af5ff89a0 <line:809:3, col:18>
    | `-VarDecl 0x555af5ff8938 <col:3, col:13> col:13 used t1280 'pthread_t':'unsigned long'
    |-CallExpr 0x555af5ff8b68 <line:810:3, col:54> 'int'
    | |-ImplicitCastExpr 0x555af5ff8b50 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555af5ff89b8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x555af5fda488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x555af5ff89f8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x555af5ff89d8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x555af5ff8938 't1280' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x555af5ff8ba8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x555af5ff8a70 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x555af5ff8a48 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x555af5ff8a10 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x555af5ff8bc0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555af5ff8a90 <col:39> 'void *(void *)' Function 0x555af5ff4d28 'P1' 'void *(void *)'
    | `-ParenExpr 0x555af5ff8b10 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x555af5ff8ae8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x555af5ff8ab0 <col:52> 'int' 0
    |-DeclStmt 0x555af5ff8c50 <line:811:3, col:18>
    | `-VarDecl 0x555af5ff8be8 <col:3, col:13> col:13 used t1281 'pthread_t':'unsigned long'
    |-CallExpr 0x555af5ff8df8 <line:812:3, col:54> 'int'
    | |-ImplicitCastExpr 0x555af5ff8de0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555af5ff8c68 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x555af5fda488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x555af5ff8ca8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x555af5ff8c88 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x555af5ff8be8 't1281' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x555af5ff8e38 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x555af5ff8d20 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x555af5ff8cf8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x555af5ff8cc0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x555af5ff8e50 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555af5ff8d40 <col:39> 'void *(void *)' Function 0x555af5ff5390 'P2' 'void *(void *)'
    | `-ParenExpr 0x555af5ff8dc0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x555af5ff8d98 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x555af5ff8d60 <col:52> 'int' 0
    |-DeclStmt 0x555af5ff8ee0 <line:813:3, col:18>
    | `-VarDecl 0x555af5ff8e78 <col:3, col:13> col:13 used t1282 'pthread_t':'unsigned long'
    |-CallExpr 0x555af5ff9088 <line:814:3, col:54> 'int'
    | |-ImplicitCastExpr 0x555af5ff9070 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555af5ff8ef8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x555af5fda488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x555af5ff8f38 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x555af5ff8f18 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x555af5ff8e78 't1282' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x555af5ff90c8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x555af5ff8fb0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x555af5ff8f88 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x555af5ff8f50 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x555af5ff90e0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555af5ff8fd0 <col:39> 'void *(void *)' Function 0x555af5ff6700 'P3' 'void *(void *)'
    | `-ParenExpr 0x555af5ff9050 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x555af5ff9028 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x555af5ff8ff0 <col:52> 'int' 0
    |-CallExpr 0x555af5ff9130 <line:815:3, col:27> 'void'
    | `-ImplicitCastExpr 0x555af5ff9118 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555af5ff90f8 <col:3> 'void ()' Function 0x555af5f99e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x555af5ff9200 <line:816:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x555af5ff9150 <col:3> '_Bool' lvalue Var 0x555af5ff3790 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x555af5ff91e8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x555af5ff91c8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x555af5ff91b0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x555af5ff9170 <col:21> 'int' lvalue Var 0x555af5ff3278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x555af5ff9190 <col:41> 'int' 4
    |-CallExpr 0x555af5ff9258 <line:817:3, col:25> 'void'
    | `-ImplicitCastExpr 0x555af5ff9240 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555af5ff9220 <col:3> 'void ()' Function 0x555af5f99f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x555af5ff92d0 <line:818:3, col:36> 'void'
    | |-ImplicitCastExpr 0x555af5ff92b8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555af5ff9278 <col:3> 'void (int)' Function 0x555af5f99790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x555af5ff9310 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x555af5ff92f8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x555af5ff9298 <col:21> '_Bool' lvalue Var 0x555af5ff3790 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x555af5ff9360 <line:819:3, col:27> 'void'
    | `-ImplicitCastExpr 0x555af5ff9348 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555af5ff9328 <col:3> 'void ()' Function 0x555af5f99e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x555af5ff9648 <line:820:3, col:103> 'int' '='
    | |-DeclRefExpr 0x555af5ff9380 <col:3> 'int' lvalue Var 0x555af5ff3b80 'z' 'int'
    | `-ConditionalOperator 0x555af5ff9618 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x555af5ff9440 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x555af5ff93f8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x555af5ff93e0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x555af5ff93a0 <col:7> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x555af5ff9428 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x555af5ff9410 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x555af5ff93c0 <col:25> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x555af5ff9600 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x555af5ff9460 <col:42> 'int' lvalue Var 0x555af5ff42c0 'z$w_buff0' 'int'
    |   `-ParenExpr 0x555af5ff95e0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x555af5ff95b0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x555af5ff9520 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x555af5ff94d8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x555af5ff94c0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x555af5ff9480 <col:55> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x555af5ff9508 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x555af5ff94f0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x555af5ff94a0 <col:73> '_Bool' lvalue Var 0x555af5ff3f68 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x555af5ff9580 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x555af5ff9540 <col:90> 'int' lvalue Var 0x555af5ff43b8 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x555af5ff9598 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x555af5ff9560 <col:102> 'int' lvalue Var 0x555af5ff3b80 'z' 'int'
    |-BinaryOperator 0x555af5ff9850 <line:821:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x555af5ff9668 <col:3> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x555af5ff9838 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555af5ff9808 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x555af5ff9728 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x555af5ff96e0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x555af5ff96c8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x555af5ff9688 <col:20> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x555af5ff9710 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x555af5ff96f8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x555af5ff96a8 <col:38> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555af5ff97c0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x555af5ff9778 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x555af5ff9748 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x555af5ff97f0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555af5ff97d8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555af5ff97a0 <col:66> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x555af5ff9b60 <line:822:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x555af5ff9870 <col:3> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x555af5ff9b20 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555af5ff9af0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x555af5ff9a10 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x555af5ff9930 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x555af5ff98e8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x555af5ff98d0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x555af5ff9890 <col:20> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x555af5ff9918 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x555af5ff9900 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x555af5ff98b0 <col:38> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x555af5ff99f0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x555af5ff99a8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x555af5ff9990 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x555af5ff9950 <col:56> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x555af5ff99d8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x555af5ff99c0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x555af5ff9970 <col:74> '_Bool' lvalue Var 0x555af5ff3f68 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555af5ff9aa8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x555af5ff9a60 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x555af5ff9a30 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x555af5ff9ad8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555af5ff9ac0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555af5ff9a88 <col:102> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x555af5ff9d68 <line:823:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x555af5ff9b80 <col:3> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x555af5ff9d50 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555af5ff9d20 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x555af5ff9c40 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x555af5ff9bf8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x555af5ff9be0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x555af5ff9ba0 <col:20> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x555af5ff9c28 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x555af5ff9c10 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x555af5ff9bc0 <col:38> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555af5ff9cd8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x555af5ff9c90 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x555af5ff9c60 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x555af5ff9d08 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555af5ff9cf0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555af5ff9cb8 <col:66> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x555af5ffa050 <line:824:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x555af5ff9d88 <col:3> '_Bool' lvalue Var 0x555af5ff3f68 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x555af5ffa038 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555af5ffa008 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x555af5ff9f28 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x555af5ff9e48 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x555af5ff9e00 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x555af5ff9de8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x555af5ff9da8 <col:20> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x555af5ff9e30 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x555af5ff9e18 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x555af5ff9dc8 <col:38> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x555af5ff9f08 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x555af5ff9ec0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x555af5ff9ea8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x555af5ff9e68 <col:56> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x555af5ff9ef0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x555af5ff9ed8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x555af5ff9e88 <col:74> '_Bool' lvalue Var 0x555af5ff3f68 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555af5ff9fc0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x555af5ff9f78 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x555af5ff9f48 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x555af5ff9ff0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555af5ff9fd8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555af5ff9fa0 <col:102> '_Bool' lvalue Var 0x555af5ff3f68 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x555af5ffa0a8 <line:825:3, col:25> 'void'
    | `-ImplicitCastExpr 0x555af5ffa090 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555af5ffa070 <col:3> 'void ()' Function 0x555af5f99f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x555af5ffa100 <line:826:3, col:27> 'void'
    | `-ImplicitCastExpr 0x555af5ffa0e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555af5ffa0c8 <col:3> 'void ()' Function 0x555af5f99e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x555af5ffa1b0 <line:827:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x555af5ffa120 <col:3> '_Bool' lvalue Var 0x555af5ff44a8 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x555af5ffa198 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x555af5ffa178 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x555af5ffa160 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x555af5ffa140 <col:19> 'void *(void)' Function 0x555af5f99958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x555af5ffa260 <line:828:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x555af5ffa1d0 <col:3> '_Bool' lvalue Var 0x555af5ff4520 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x555af5ffa248 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x555af5ffa228 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x555af5ffa210 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x555af5ffa1f0 <col:19> 'void *(void)' Function 0x555af5f99958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x555af5ffa2d8 <line:829:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x555af5ffa280 <col:3> '_Bool' lvalue Var 0x555af5ff3c18 'z$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x555af5ffa2c0 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x555af5ffa2a0 <col:21> '_Bool' lvalue Var 0x555af5ff4520 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x555af5ffa350 <line:830:3, col:15> 'int' '='
    | |-DeclRefExpr 0x555af5ffa2f8 <col:3> 'int' lvalue Var 0x555af5ff3c98 'z$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x555af5ffa338 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x555af5ffa318 <col:15> 'int' lvalue Var 0x555af5ff3b80 'z' 'int'
    |-BinaryOperator 0x555af5ffa788 <line:831:3, col:162> 'int' '='
    | |-DeclRefExpr 0x555af5ffa370 <col:3> 'int' lvalue Var 0x555af5ff3b80 'z' 'int'
    | `-ConditionalOperator 0x555af5ffa758 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x555af5ffa580 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x555af5ffa4a0 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x555af5ffa3c8 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x555af5ffa3b0 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x555af5ffa390 <col:8> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x555af5ffa480 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x555af5ffa418 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x555af5ffa400 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x555af5ffa3e0 <col:27> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x555af5ffa468 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x555af5ffa450 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x555af5ffa430 <col:46> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x555af5ffa560 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x555af5ffa4f8 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x555af5ffa4e0 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x555af5ffa4c0 <col:65> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x555af5ffa548 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x555af5ffa530 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x555af5ffa510 <col:84> '_Bool' lvalue Var 0x555af5ff3f68 'z$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x555af5ffa740 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x555af5ffa5a0 <col:101> 'int' lvalue Var 0x555af5ff3b80 'z' 'int'
    |   `-ParenExpr 0x555af5ffa720 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x555af5ffa6f0 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x555af5ffa660 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x555af5ffa618 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x555af5ffa600 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x555af5ffa5c0 <col:106> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x555af5ffa648 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x555af5ffa630 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x555af5ffa5e0 <col:124> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x555af5ffa6c0 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x555af5ffa680 <col:141> 'int' lvalue Var 0x555af5ff42c0 'z$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x555af5ffa6d8 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x555af5ffa6a0 <col:153> 'int' lvalue Var 0x555af5ff43b8 'z$w_buff1' 'int'
    |-BinaryOperator 0x555af5ffacb8 <line:832:3, col:208> 'int' '='
    | |-DeclRefExpr 0x555af5ffa7a8 <col:3> 'int' lvalue Var 0x555af5ff42c0 'z$w_buff0' 'int'
    | `-ConditionalOperator 0x555af5ffac88 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x555af5ffac58 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x555af5ffac40 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x555af5ffa7c8 <col:15> '_Bool' lvalue Var 0x555af5ff4520 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x555af5ffac70 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x555af5ffa7e8 <col:31> 'int' lvalue Var 0x555af5ff42c0 'z$w_buff0' 'int'
    |   `-ParenExpr 0x555af5ffac20 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x555af5ffabf0 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x555af5ffa9f8 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x555af5ffa918 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x555af5ffa840 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x555af5ffa828 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x555af5ffa808 <col:45> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x555af5ffa8f8 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x555af5ffa890 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x555af5ffa878 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x555af5ffa858 <col:64> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x555af5ffa8e0 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x555af5ffa8c8 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x555af5ffa8a8 <col:83> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x555af5ffa9d8 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x555af5ffa970 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x555af5ffa958 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x555af5ffa938 <col:102> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x555af5ffa9c0 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x555af5ffa9a8 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x555af5ffa988 <col:121> '_Bool' lvalue Var 0x555af5ff3f68 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x555af5ffabd8 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x555af5ffaa18 <col:138> 'int' lvalue Var 0x555af5ff42c0 'z$w_buff0' 'int'
    |       `-ParenExpr 0x555af5ffabb8 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x555af5ffab88 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x555af5ffaad8 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x555af5ffaa90 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x555af5ffaa78 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x555af5ffaa38 <col:151> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x555af5ffaac0 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x555af5ffaaa8 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x555af5ffaa58 <col:169> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x555af5ffab38 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x555af5ffaaf8 <col:186> 'int' lvalue Var 0x555af5ff42c0 'z$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x555af5ffab70 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x555af5ffab18 <col:198> 'int' lvalue Var 0x555af5ff42c0 'z$w_buff0' 'int'
    |-BinaryOperator 0x555af5ffb1c8 <line:833:3, col:208> 'int' '='
    | |-DeclRefExpr 0x555af5ffacd8 <col:3> 'int' lvalue Var 0x555af5ff43b8 'z$w_buff1' 'int'
    | `-ConditionalOperator 0x555af5ffb198 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x555af5ffb168 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x555af5ffb150 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x555af5ffacf8 <col:15> '_Bool' lvalue Var 0x555af5ff4520 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x555af5ffb180 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x555af5ffad18 <col:31> 'int' lvalue Var 0x555af5ff43b8 'z$w_buff1' 'int'
    |   `-ParenExpr 0x555af5ffb130 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x555af5ffb100 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x555af5ffaf28 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x555af5ffae48 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x555af5ffad70 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x555af5ffad58 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x555af5ffad38 <col:45> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x555af5ffae28 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x555af5ffadc0 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x555af5ffada8 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x555af5ffad88 <col:64> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x555af5ffae10 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x555af5ffadf8 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x555af5ffadd8 <col:83> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x555af5ffaf08 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x555af5ffaea0 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x555af5ffae88 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x555af5ffae68 <col:102> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x555af5ffaef0 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x555af5ffaed8 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x555af5ffaeb8 <col:121> '_Bool' lvalue Var 0x555af5ff3f68 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x555af5ffb0e8 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x555af5ffaf48 <col:138> 'int' lvalue Var 0x555af5ff43b8 'z$w_buff1' 'int'
    |       `-ParenExpr 0x555af5ffb0c8 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x555af5ffb098 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x555af5ffb008 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x555af5ffafc0 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x555af5ffafa8 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x555af5ffaf68 <col:151> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x555af5ffaff0 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x555af5ffafd8 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x555af5ffaf88 <col:169> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x555af5ffb068 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x555af5ffb028 <col:186> 'int' lvalue Var 0x555af5ff43b8 'z$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x555af5ffb080 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x555af5ffb048 <col:198> 'int' lvalue Var 0x555af5ff43b8 'z$w_buff1' 'int'
    |-BinaryOperator 0x555af5ffb770 <line:834:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x555af5ffb1e8 <col:3> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x555af5ffb758 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555af5ffb728 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x555af5ffb6e0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x555af5ffb6c8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x555af5ffb208 <col:20> '_Bool' lvalue Var 0x555af5ff4520 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x555af5ffb710 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x555af5ffb6f8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x555af5ffb228 <col:36> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x555af5ffb6a8 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x555af5ffb678 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x555af5ffb438 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x555af5ffb358 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x555af5ffb280 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x555af5ffb268 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x555af5ffb248 <col:55> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x555af5ffb338 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x555af5ffb2d0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x555af5ffb2b8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x555af5ffb298 <col:74> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x555af5ffb320 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x555af5ffb308 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x555af5ffb2e8 <col:93> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x555af5ffb418 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x555af5ffb3b0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x555af5ffb398 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x555af5ffb378 <col:112> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x555af5ffb400 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x555af5ffb3e8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x555af5ffb3c8 <col:131> '_Bool' lvalue Var 0x555af5ff3f68 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x555af5ffb660 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x555af5ffb648 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x555af5ffb458 <col:148> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x555af5ffb628 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x555af5ffb5f8 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x555af5ffb518 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x555af5ffb4d0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x555af5ffb4b8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x555af5ffb478 <col:166> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x555af5ffb500 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x555af5ffb4e8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x555af5ffb498 <col:184> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x555af5ffb5b0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x555af5ffb568 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x555af5ffb538 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x555af5ffb5e0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x555af5ffb5c8 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x555af5ffb590 <col:212> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x555af5ffbd50 <line:835:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x555af5ffb790 <col:3> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x555af5ffbd38 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555af5ffbd08 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x555af5ffbcc0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x555af5ffbca8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x555af5ffb7b0 <col:20> '_Bool' lvalue Var 0x555af5ff4520 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x555af5ffbcf0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x555af5ffbcd8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x555af5ffb7d0 <col:36> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x555af5ffbc88 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x555af5ffbc58 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x555af5ffb9e0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x555af5ffb900 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x555af5ffb828 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x555af5ffb810 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x555af5ffb7f0 <col:55> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x555af5ffb8e0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x555af5ffb878 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x555af5ffb860 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x555af5ffb840 <col:74> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x555af5ffb8c8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x555af5ffb8b0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x555af5ffb890 <col:93> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x555af5ffb9c0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x555af5ffb958 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x555af5ffb940 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x555af5ffb920 <col:112> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x555af5ffb9a8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x555af5ffb990 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x555af5ffb970 <col:131> '_Bool' lvalue Var 0x555af5ff3f68 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x555af5ffbc40 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x555af5ffbc28 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x555af5ffba00 <col:148> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x555af5ffbc08 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x555af5ffbbd8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x555af5ffbac0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x555af5ffba78 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x555af5ffba60 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x555af5ffba20 <col:166> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x555af5ffbaa8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x555af5ffba90 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x555af5ffba40 <col:184> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x555af5ffbba8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x555af5ffbb10 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x555af5ffbae0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x555af5ffbbc0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x555af5ffbb80 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x555af5ffbb38 <col:219> 'int' 0
    |-BinaryOperator 0x555af5ffc2f8 <line:836:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x555af5ffbd70 <col:3> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x555af5ffc2e0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555af5ffc2b0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x555af5ffc268 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x555af5ffc250 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x555af5ffbd90 <col:20> '_Bool' lvalue Var 0x555af5ff4520 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x555af5ffc298 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x555af5ffc280 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x555af5ffbdb0 <col:36> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x555af5ffc230 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x555af5ffc200 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x555af5ffbfc0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x555af5ffbee0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x555af5ffbe08 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x555af5ffbdf0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x555af5ffbdd0 <col:55> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x555af5ffbec0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x555af5ffbe58 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x555af5ffbe40 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x555af5ffbe20 <col:74> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x555af5ffbea8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x555af5ffbe90 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x555af5ffbe70 <col:93> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x555af5ffbfa0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x555af5ffbf38 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x555af5ffbf20 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x555af5ffbf00 <col:112> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x555af5ffbf88 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x555af5ffbf70 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x555af5ffbf50 <col:131> '_Bool' lvalue Var 0x555af5ff3f68 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x555af5ffc1e8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x555af5ffc1d0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x555af5ffbfe0 <col:148> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x555af5ffc1b0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x555af5ffc180 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x555af5ffc0a0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x555af5ffc058 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x555af5ffc040 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x555af5ffc000 <col:166> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x555af5ffc088 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x555af5ffc070 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x555af5ffc020 <col:184> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x555af5ffc138 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x555af5ffc0f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x555af5ffc0c0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x555af5ffc168 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x555af5ffc150 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x555af5ffc118 <col:212> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x555af5ffc8c0 <line:837:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x555af5ffc318 <col:3> '_Bool' lvalue Var 0x555af5ff3f68 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x555af5ffc8a8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555af5ffc878 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x555af5ffc830 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x555af5ffc818 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x555af5ffc338 <col:20> '_Bool' lvalue Var 0x555af5ff4520 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x555af5ffc860 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x555af5ffc848 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x555af5ffc358 <col:36> '_Bool' lvalue Var 0x555af5ff3f68 'z$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x555af5ffc7f8 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x555af5ffc7c8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x555af5ffc568 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x555af5ffc488 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x555af5ffc3b0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x555af5ffc398 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x555af5ffc378 <col:55> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x555af5ffc468 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x555af5ffc400 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x555af5ffc3e8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x555af5ffc3c8 <col:74> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x555af5ffc450 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x555af5ffc438 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x555af5ffc418 <col:93> '_Bool' lvalue Var 0x555af5ff4430 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x555af5ffc548 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x555af5ffc4e0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x555af5ffc4c8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x555af5ffc4a8 <col:112> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x555af5ffc530 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x555af5ffc518 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x555af5ffc4f8 <col:131> '_Bool' lvalue Var 0x555af5ff3f68 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x555af5ffc7b0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x555af5ffc798 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x555af5ffc588 <col:148> '_Bool' lvalue Var 0x555af5ff3f68 'z$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x555af5ffc778 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x555af5ffc748 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x555af5ffc648 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x555af5ffc600 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x555af5ffc5e8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x555af5ffc5a8 <col:166> '_Bool' lvalue Var 0x555af5ff4338 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x555af5ffc630 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x555af5ffc618 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x555af5ffc5c8 <col:184> '_Bool' lvalue Var 0x555af5ff3d10 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x555af5ffc718 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x555af5ffc698 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x555af5ffc668 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x555af5ffc730 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x555af5ffc6f0 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x555af5ffc6c0 <col:219> 'int' 0
    |-BinaryOperator 0x555af5ffcc38 <line:838:3, col:105> '_Bool' '='
    | |-DeclRefExpr 0x555af5ffc8e0 <col:3> '_Bool' lvalue Var 0x555af5ff3808 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x555af5ffcc20 <col:21, col:105> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x555af5ffcc08 <col:21, col:105> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x555af5ffcbe8 <col:22, col:105> 'int'
    |       `-BinaryOperator 0x555af5ffcbc8 <col:23, col:104> 'int' '&&'
    |         |-BinaryOperator 0x555af5ffcb20 <col:23, col:76> 'int' '&&'
    |         | |-BinaryOperator 0x555af5ffca88 <col:23, col:48> 'int' '&&'
    |         | | |-BinaryOperator 0x555af5ffc9f0 <col:23, col:38> 'int' '&&'
    |         | | | |-BinaryOperator 0x555af5ffc958 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x555af5ffc940 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x555af5ffc900 <col:23> 'int' lvalue Var 0x555af5ff3908 'x' 'int'
    |         | | | | `-IntegerLiteral 0x555af5ffc920 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x555af5ffc9d0 <col:33, col:38> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x555af5ffc9b8 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x555af5ffc978 <col:33> 'int' lvalue Var 0x555af5ff3a28 'y' 'int'
    |         | | |   `-IntegerLiteral 0x555af5ffc998 <col:38> 'int' 2
    |         | | `-BinaryOperator 0x555af5ffca68 <col:43, col:48> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x555af5ffca50 <col:43> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x555af5ffca10 <col:43> 'int' lvalue Var 0x555af5ff3b80 'z' 'int'
    |         | |   `-IntegerLiteral 0x555af5ffca30 <col:48> 'int' 2
    |         | `-BinaryOperator 0x555af5ffcb00 <col:53, col:76> 'int' '=='
    |         |   |-ImplicitCastExpr 0x555af5ffcae8 <col:53> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x555af5ffcaa8 <col:53> 'int' lvalue Var 0x555af5ff3398 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x555af5ffcac8 <col:76> 'int' 1
    |         `-BinaryOperator 0x555af5ffcba8 <col:81, col:104> 'int' '=='
    |           |-ImplicitCastExpr 0x555af5ffcb90 <col:81> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x555af5ffcb40 <col:81> 'int' lvalue Var 0x555af5ff34b8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x555af5ffcb60 <col:104> 'int' 0
    |-BinaryOperator 0x555af5ffcd68 <line:839:3, col:37> 'int' '='
    | |-DeclRefExpr 0x555af5ffcc58 <col:3> 'int' lvalue Var 0x555af5ff3b80 'z' 'int'
    | `-ConditionalOperator 0x555af5ffcd38 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x555af5ffccf0 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x555af5ffccd8 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x555af5ffcc78 <col:7> '_Bool' lvalue Var 0x555af5ff3c18 'z$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x555af5ffcd08 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x555af5ffcc98 <col:25> 'int' lvalue Var 0x555af5ff3c98 'z$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x555af5ffcd20 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x555af5ffccb8 <col:37> 'int' lvalue Var 0x555af5ff3b80 'z' 'int'
    |-BinaryOperator 0x555af5ffce00 <line:840:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x555af5ffcd88 <col:3> '_Bool' lvalue Var 0x555af5ff3c18 'z$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x555af5ffcdd8 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x555af5ffcda8 <col:28> 'int' 0
    |-CallExpr 0x555af5ffce58 <line:841:3, col:25> 'void'
    | `-ImplicitCastExpr 0x555af5ffce40 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555af5ffce20 <col:3> 'void ()' Function 0x555af5f99f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x555af5ffced0 <line:842:3, col:36> 'void'
    | |-ImplicitCastExpr 0x555af5ffceb8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555af5ffce78 <col:3> 'void (int)' Function 0x555af5f99bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x555af5ffcf10 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x555af5ffcef8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x555af5ffce98 <col:21> '_Bool' lvalue Var 0x555af5ff3808 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x555af5ffcf48 <line:843:3, col:10>
      `-IntegerLiteral 0x555af5ffcf28 <col:10> 'int' 0
