TranslationUnitDecl 0x56385cc16e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56385cc176d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56385cc173b0 '__int128'
|-TypedefDecl 0x56385cc17748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56385cc173d0 'unsigned __int128'
|-TypedefDecl 0x56385cc17a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56385cc17820 'struct __NSConstantString_tag'
|   `-Record 0x56385cc177a0 '__NSConstantString_tag'
|-TypedefDecl 0x56385cc17af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56385cc17ab0 'char *'
|   `-BuiltinType 0x56385cc16eb0 'char'
|-TypedefDecl 0x56385cc56650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56385cc17d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56385cc17bd0 'struct __va_list_tag'
|     `-Record 0x56385cc17b50 '__va_list_tag'
|-FunctionDecl 0x56385cc56790 <./split_8/mix014_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x56385cc566c0 <col:31> col:34 'int'
|-FunctionDecl 0x56385cc56958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x56385cc56a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x56385cc56bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x56385cc56b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x56385cc56df8 <col:40, col:99>
|   |-IfStmt 0x56385cc56dc8 <col:42, col:88>
|   | |-UnaryOperator 0x56385cc56ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x56385cc56c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x56385cc56c70 <col:47> 'int' lvalue ParmVar 0x56385cc56b38 'expression' 'int'
|   | `-CompoundStmt 0x56385cc56db0 <col:59, col:88>
|   |   `-LabelStmt 0x56385cc56d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x56385cc56d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x56385cc56d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x56385cc56cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x56385cc56a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x56385cc56de0 <col:89>
|   `-ReturnStmt 0x56385cc56de8 <col:91>
|-FunctionDecl 0x56385cc56e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x56385cc56f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x56385cc57280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56385cc56fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x56385cc57038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x56385cc570b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56385cc57138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56385cc57340 <line:10:22>
|-FunctionDecl 0x56385cc7d390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56385cc573b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x56385cc57430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x56385cc574b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56385cc57530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56385cc7d450 <line:13:22>
|-FunctionDecl 0x56385cc7d700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56385cc7d4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x56385cc7d540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x56385cc7d5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x56385cc7d7b8 <line:15:22>
|-TypedefDecl 0x56385cc7d828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x56385cc16f70 'unsigned char'
|-TypedefDecl 0x56385cc7d898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x56385cc16f90 'unsigned short'
|-TypedefDecl 0x56385cc7d908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x56385cc16fb0 'unsigned int'
|-TypedefDecl 0x56385cc7d978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x56385cc16fd0 'unsigned long'
|-TypedefDecl 0x56385cc7d9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x56385cc16ed0 'signed char'
|-TypedefDecl 0x56385cc7da58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x56385cc16f70 'unsigned char'
|-TypedefDecl 0x56385cc7dac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x56385cc16ef0 'short'
|-TypedefDecl 0x56385cc7db38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x56385cc16f90 'unsigned short'
|-TypedefDecl 0x56385cc7dba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x56385cc16f10 'int'
|-TypedefDecl 0x56385cc7dc18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x56385cc16fb0 'unsigned int'
|-TypedefDecl 0x56385cc7dc88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x56385cc16f30 'long'
|-TypedefDecl 0x56385cc7dcf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x56385cc16fd0 'unsigned long'
|-TypedefDecl 0x56385cc7dd68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x56385cc16f30 'long'
|-TypedefDecl 0x56385cc7ddd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x56385cc16fd0 'unsigned long'
|-TypedefDecl 0x56385cc7de48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x56385cc16fd0 'unsigned long'
|-TypedefDecl 0x56385cc7deb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x56385cc16fb0 'unsigned int'
|-TypedefDecl 0x56385cc7df28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x56385cc16fb0 'unsigned int'
|-TypedefDecl 0x56385cc7df98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x56385cc16fd0 'unsigned long'
|-TypedefDecl 0x56385cc7e008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x56385cc16fd0 'unsigned long'
|-TypedefDecl 0x56385cc7e078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x56385cc16fb0 'unsigned int'
|-TypedefDecl 0x56385cc7e0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x56385cc16fd0 'unsigned long'
|-TypedefDecl 0x56385cc7e158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x56385cc16f30 'long'
|-TypedefDecl 0x56385cc7e1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x56385cc16f30 'long'
|-TypedefDecl 0x56385cc7e238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x56385cc16f10 'int'
|-RecordDecl 0x56385cc7e290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x56385cc7e408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x56385cc7e4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x56385cc7e460 'struct __fsid_t' sugar
|   `-RecordType 0x56385cc7e310 '__fsid_t'
|     `-Record 0x56385cc7e290 ''
|-TypedefDecl 0x56385cc7e548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x56385cc16f30 'long'
|-TypedefDecl 0x56385cc7e5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x56385cc16fd0 'unsigned long'
|-TypedefDecl 0x56385cc7e628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x56385cc16fd0 'unsigned long'
|-TypedefDecl 0x56385cc7e698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x56385cc16fb0 'unsigned int'
|-TypedefDecl 0x56385cc7e708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x56385cc16f30 'long'
|-TypedefDecl 0x56385cc7e778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x56385cc16fb0 'unsigned int'
|-TypedefDecl 0x56385cc7e7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x56385cc16f30 'long'
|-TypedefDecl 0x56385cc7e858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x56385cc16f10 'int'
|-TypedefDecl 0x56385cc7e8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x56385cc16f10 'int'
|-TypedefDecl 0x56385cc7e938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x56385cc16f10 'int'
|-TypedefDecl 0x56385cc7e9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x56385cc17630 'void *'
|   `-BuiltinType 0x56385cc16e70 'void'
|-TypedefDecl 0x56385cc7ea18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x56385cc16f30 'long'
|-TypedefDecl 0x56385cc7ea88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x56385cc16f30 'long'
|-TypedefDecl 0x56385cc7eaf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x56385cc16f30 'long'
|-TypedefDecl 0x56385cc7eb68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x56385cc16fd0 'unsigned long'
|-TypedefDecl 0x56385cc7ebd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x56385cc16fd0 'unsigned long'
|-TypedefDecl 0x56385cc7ec48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x56385cc16fd0 'unsigned long'
|-TypedefDecl 0x56385cc7ecb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x56385cc16fd0 'unsigned long'
|-TypedefDecl 0x56385cc7ed28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x56385cc16f30 'long'
|-TypedefDecl 0x56385cc7ed98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x56385cc16f30 'long'
|-TypedefDecl 0x56385cc7ee08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x56385cc16f30 'long'
|-TypedefDecl 0x56385cc7ee78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x56385cc16fd0 'unsigned long'
|-TypedefDecl 0x56385cc7ef08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x56385cc7eed0 '__off64_t' sugar
|   |-Typedef 0x56385cc7e1c8 '__off64_t'
|   `-BuiltinType 0x56385cc16f30 'long'
|-TypedefDecl 0x56385cc7f000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x56385cc7efc0 '__quad_t *'
|   `-TypedefType 0x56385cc7ef60 '__quad_t' sugar
|     |-Typedef 0x56385cc7dd68 '__quad_t'
|     `-BuiltinType 0x56385cc16f30 'long'
|-TypedefDecl 0x56385cc7f070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x56385cc17ab0 'char *'
|   `-BuiltinType 0x56385cc16eb0 'char'
|-TypedefDecl 0x56385cc7f0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x56385cc16f30 'long'
|-TypedefDecl 0x56385cc7f150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x56385cc16fb0 'unsigned int'
|-FunctionDecl 0x56385cc7f298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x56385cc7f1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x56385cc805e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x56385cc805d8 <line:72:3, col:34>
|     `-CallExpr 0x56385cc80598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x56385cc80580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56385cc80510 <col:10> '<builtin fn type>' Function 0x56385cc80380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x56385cc805c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56385cc80530 <col:29> 'unsigned int' lvalue ParmVar 0x56385cc7f1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x56385cc80380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x56385cc80420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x56385cc80490 <col:10> Implicit
| `-ConstAttr 0x56385cc804e8 <col:10> Implicit
|-FunctionDecl 0x56385cc80740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x56385cc80638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x56385cc80a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x56385cc80a48 <line:77:3, col:34>
|     `-CallExpr 0x56385cc80a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x56385cc809f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56385cc80978 <col:10> '<builtin fn type>' Function 0x56385cc807e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x56385cc80a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x56385cc80998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x56385cc80638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x56385cc807e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x56385cc80888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x56385cc808f8 <col:10> Implicit
| `-ConstAttr 0x56385cc80950 <col:10> Implicit
|-TypedefDecl 0x56385cc80a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x56385cc16fd0 'unsigned long'
|-TypedefDecl 0x56385cc80b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x56385cc80ae0 '__time_t' sugar
|   |-Typedef 0x56385cc7e708 '__time_t'
|   `-BuiltinType 0x56385cc16f30 'long'
|-RecordDecl 0x56385cc80b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x56385cc80c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x56385cc80cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x56385cc80d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x56385cc80d10 '__pid_t' sugar
|   |-Typedef 0x56385cc7e238 '__pid_t'
|   `-BuiltinType 0x56385cc16f10 'int'
|-RecordDecl 0x56385cc80da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x56385cc80e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x56385cc80eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x56385cc80f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x56385cc80fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x56385cc16fd0 'unsigned long'
|-RecordDecl 0x56385cc81030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x56385cc812c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x56385cc823a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x56385cc81310 'struct cpu_set_t' sugar
|   `-RecordType 0x56385cc810b0 'cpu_set_t'
|     `-Record 0x56385cc81030 ''
|-FunctionDecl 0x56385cc82678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x56385cc82448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56385cc82550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x56385cc82728 <line:107:19>
|-FunctionDecl 0x56385cc82900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x56385cc82790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x56385cc829a8 <col:69>
|-FunctionDecl 0x56385cc82b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x56385cc82a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x56385cc82bc8 <col:64>
|-FunctionDecl 0x56385cc82e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x56385cc82c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56385cc82d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56385cc82f38 <line:113:22>
|-FunctionDecl 0x56385cc831b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x56385cc82fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56385cc83098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x56385cc83268 <col:88>
|-FunctionDecl 0x56385cc83588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56385cc832d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56385cc833b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x56385cc83440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56385cc83640 <col:62>
|-FunctionDecl 0x56385cc837b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x56385cc836a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x56385cc83860 <col:63>
|-FunctionDecl 0x56385cc83988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x56385cc83a28 <col:47>
|-FunctionDecl 0x56385cc83b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x56385cc83a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56385cc83bd8 <col:69>
|-FunctionDecl 0x56385cc83ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x56385cc83c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56385cc83d88 <col:69>
|-FunctionDecl 0x56385cc84048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56385cc83df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56385cc83f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x56385cc840f8 <col:88>
|-TypedefDecl 0x56385cc84188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x56385cc84150 '__clock_t' sugar
|   |-Typedef 0x56385cc7e548 '__clock_t'
|   `-BuiltinType 0x56385cc16f30 'long'
|-TypedefDecl 0x56385cc84218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x56385cc841e0 '__clockid_t' sugar
|   |-Typedef 0x56385cc7e938 '__clockid_t'
|   `-BuiltinType 0x56385cc16f10 'int'
|-TypedefDecl 0x56385cc842a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x56385cc84270 '__timer_t' sugar
|   |-Typedef 0x56385cc7e9a8 '__timer_t'
|   `-PointerType 0x56385cc17630 'void *'
|     `-BuiltinType 0x56385cc16e70 'void'
|-RecordDecl 0x56385cc84300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x56385cc843d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x56385cc84440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x56385cc844a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x56385cc84510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x56385cc84578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x56385cc845e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x56385cc84648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x56385cc846b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x56385cc84718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x56385cc84780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x56385cc847e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x56385cc84838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x56385cc84908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x56385cc84978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x56385cc84a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x56385cc84bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x56385cc84c90 <col:45>
|-FunctionDecl 0x56385cc84e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x56385cc84d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x56385cc84f18 <col:54>
|-FunctionDecl 0x56385cc85118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x56385cc84f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x56385cc84ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x56385cc851c8 <line:157:22>
| `-ConstAttr 0x56385cc85220 <col:63>
|-FunctionDecl 0x56385cc86050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56385cc85318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56385cc860f8 <col:56>
|-FunctionDecl 0x56385cc864a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x56385cc86168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x56385cc861e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56385cc86260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x56385cc86358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x56385cc86560 <col:54>
|-RecordDecl 0x56385cc865b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x56385cc86668 parent 0x56385cc16e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x56385cc868c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x56385cc86968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x56385cc869d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x56385cc86a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x56385cc86b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x56385cc86c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x56385cc86bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x56385cc86b80 'struct __locale_struct' sugar
|     `-RecordType 0x56385cc86640 'struct __locale_struct'
|       `-Record 0x56385cc865b8 '__locale_struct'
|-TypedefDecl 0x56385cc86cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x56385cc86cc0 '__locale_t' sugar
|   |-Typedef 0x56385cc86c48 '__locale_t'
|   `-PointerType 0x56385cc86bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x56385cc86b80 'struct __locale_struct' sugar
|       `-RecordType 0x56385cc86640 'struct __locale_struct'
|         `-Record 0x56385cc865b8 '__locale_struct'
|-FunctionDecl 0x56385cc88110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x56385cc86d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x56385cc86de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56385cc86e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x56385cc86ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56385cc86f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x56385cc881d8 <col:40>
|-FunctionDecl 0x56385cc883c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56385cc882a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x56385cc88470 <col:66>
|-FunctionDecl 0x56385cc88580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56385cc884d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x56385cc88628 <col:69>
|-FunctionDecl 0x56385cc88858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56385cc88690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56385cc88720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56385cc88908 <col:52>
|-FunctionDecl 0x56385cc88ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56385cc88970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56385cc88a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56385cc88b60 <col:55>
|-FunctionDecl 0x56385cc88cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x56385cc88be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x56385cc88da0 <col:62>
|-FunctionDecl 0x56385cc88f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x56385cc88e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x56385cc88fc0 <col:60>
|-FunctionDecl 0x56385cc892b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56385cc89118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56385cc89198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x56385cc89368 <col:44>
|-FunctionDecl 0x56385cc89578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56385cc893d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56385cc89450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x56385cc89628 <col:49>
|-VarDecl 0x56385cc89728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x56385cc897a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x56385cc89828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x56385cc898f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x56385cc89a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x56385cc89ac0 <col:42>
|-VarDecl 0x56385cc89b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x56385cc89bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x56385cc89d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x56385cc89c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x56385cc89de0 <col:57>
|-FunctionDecl 0x56385cc89ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56385cc89e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56385cc89f98 <col:56>
|-FunctionDecl 0x56385cc8a0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56385cc8a018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x56385cc8a178 <col:59>
|-FunctionDecl 0x56385cc8a280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x56385cc8a1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x56385cc8a328 <col:48>
| `-ConstAttr 0x56385cc8a380 <col:89>
|-FunctionDecl 0x56385cc8a5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56385cc8a438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x56385cc8a4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x56385cc8a848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56385cc8a6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56385cc8a768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x56385cc8a8f8 <col:88>
|-FunctionDecl 0x56385cc8aa90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56385cc8a960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56385cc8a9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x56385cc8ab40 <col:88>
|-FunctionDecl 0x56385cc8ad58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x56385cc8aba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56385cc8ac38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x56385cc8ae08 <line:208:22>
|-FunctionDecl 0x56385cc8b178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56385cc8ae70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56385cc8aef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x56385cc8af80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x56385cc8b010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x56385cc8b478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x56385cc8b278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x56385cc8b350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x56385cc8b528 <col:85>
|-FunctionDecl 0x56385cc8b918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x56385cc8b590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56385cc8b6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x56385cc8b7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x56385cc8b9d0 <col:52>
|-FunctionDecl 0x56385cc8bb48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x56385cc8ba38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56385cc8bbf0 <col:61>
|-FunctionDecl 0x56385cc8c0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x56385cc8bc58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56385cc8bcd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x56385cc8be08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x56385cc8bef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x56385cc8c1b0 <col:62>
|-FunctionDecl 0x56385cc8c3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x56385cc8c218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56385cc8c2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x56385cc8c478 <line:221:22>
|-FunctionDecl 0x56385cc8c578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x56385cc8c4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56385cc8c620 <col:65>
|-TypedefDecl 0x56385cc8c690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x56385cc16fd0 'unsigned long'
|-RecordDecl 0x56385cc8c6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x56385cc8c830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56385cc8c898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56385cc8c948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x56385cc8c8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x56385cc8c770 'union pthread_attr_t'
|     `-Record 0x56385cc8c6e8 'pthread_attr_t'
|-RecordDecl 0x56385cc8c9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x56385cc8cb18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x56385cc8cb90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x56385cc8cc40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x56385cc8cbe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x56385cc8ca20 'struct __pthread_internal_list'
|     `-Record 0x56385cc8c9a0 '__pthread_internal_list'
|-RecordDecl 0x56385cc8ccb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x56385cc8cd58 parent 0x56385cc16e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x56385cc8ce30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56385cc8ce98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x56385cc8cf00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x56385cc8cf68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x56385cc8cfd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x56385cc8d038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x56385cc91110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x56385cc911c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x56385cc912b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x56385cc91318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56385cc914a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x56385cc91440 'union pthread_mutex_t' sugar
|   `-RecordType 0x56385cc8cd30 'pthread_mutex_t'
|     `-Record 0x56385cc8ccb0 ''
|-RecordDecl 0x56385cc91510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x56385cc91650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56385cc916b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56385cc91770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x56385cc91710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x56385cc91590 'pthread_mutexattr_t'
|     `-Record 0x56385cc91510 ''
|-RecordDecl 0x56385cc917e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x56385cc91888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x56385cc91950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56385cc919b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x56385cc91a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x56385cc91a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x56385cc91af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x56385cc91b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x56385cc91bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x56385cc91c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x56385cc91ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_8/mix014_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_8/mix014_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x56385cc91dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x56385cc91e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x56385cc91f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x56385cc91f10 'union pthread_cond_t' sugar
|   `-RecordType 0x56385cc91860 'pthread_cond_t'
|     `-Record 0x56385cc917e0 ''
|-RecordDecl 0x56385cc91fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x56385cc93130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56385cc93198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56385cc93250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x56385cc931f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x56385cc92060 'pthread_condattr_t'
|     `-Record 0x56385cc91fe0 ''
|-TypedefDecl 0x56385cc932d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x56385cc16fb0 'unsigned int'
|-TypedefDecl 0x56385cc93348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x56385cc16f10 'int'
|-RecordDecl 0x56385cc933a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x56385cc93448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x56385cc93510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56385cc93578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x56385cc935e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x56385cc93648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x56385cc936b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x56385cc93718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x56385cc93780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x56385cc937e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x56385cc93850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x56385cc938b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x56385cc93920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x56385cc939d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_8/mix014_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_8/mix014_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x56385cc93a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56385cc93ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56385cc93c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x56385cc93bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x56385cc93420 'pthread_rwlock_t'
|     `-Record 0x56385cc933a0 ''
|-RecordDecl 0x56385cc93ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x56385cc93de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x56385cc93e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56385cc93f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x56385cc93ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x56385cc93d20 'pthread_rwlockattr_t'
|     `-Record 0x56385cc93ca0 ''
|-TypedefDecl 0x56385cc93f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x56385cc16f14 'volatile int' volatile
|   `-BuiltinType 0x56385cc16f10 'int'
|-RecordDecl 0x56385cc93fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x56385cc95140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x56385cc951a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56385cc95260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x56385cc95200 'union pthread_barrier_t' sugar
|   `-RecordType 0x56385cc94060 'pthread_barrier_t'
|     `-Record 0x56385cc93fe0 ''
|-RecordDecl 0x56385cc952d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x56385cc953d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56385cc95438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56385cc954f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x56385cc95490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x56385cc95350 'pthread_barrierattr_t'
|     `-Record 0x56385cc952d0 ''
|-TypedefDecl 0x56385cc95608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x56385cc955a0 'long [8]' 8 
|   `-BuiltinType 0x56385cc16f30 'long'
|-EnumDecl 0x56385cc95660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x56385cc95728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x56385cc95778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x56385cc957c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x56385cc95898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x56385cc958e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x56385cc95938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x56385cc95988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x56385cc95a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x56385cc959f8 <col:26> 'int'
| |   `-DeclRefExpr 0x56385cc959d8 <col:26> 'int' EnumConstant 0x56385cc95898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x56385cc95a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x56385cc95a80 <col:29> 'int'
| |   `-DeclRefExpr 0x56385cc95a60 <col:29> 'int' EnumConstant 0x56385cc958e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x56385cc95b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x56385cc95b08 <col:30> 'int'
| |   `-DeclRefExpr 0x56385cc95ae8 <col:30> 'int' EnumConstant 0x56385cc95938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x56385cc95ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x56385cc95b90 <col:27> 'int'
|     `-DeclRefExpr 0x56385cc95b70 <col:27> 'int' EnumConstant 0x56385cc95a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x56385cc95bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x56385cc95cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x56385cc95d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x56385cc95d38 <col:30> 'int'
| |   `-DeclRefExpr 0x56385cc95d18 <col:30> 'int' EnumConstant 0x56385cc95cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x56385cc95da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x56385cc95e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x56385cc95e10 <col:29> 'int'
|     `-DeclRefExpr 0x56385cc95df0 <col:29> 'int' EnumConstant 0x56385cc95da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x56385cc95e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x56385cc95f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x56385cc95f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x56385cc95fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x56385cc96038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x56385cc96150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x56385cc961a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x56385cc961f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x56385cc96278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x56385cc96260 <col:31> 'int'
|     `-DeclRefExpr 0x56385cc96240 <col:31> 'int' EnumConstant 0x56385cc96150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x56385cc962c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x56385cc96398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x56385cc963e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x56385cc96438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x56385cc96508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x56385cc96558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x56385cc965a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x56385cc96678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x56385cc966c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x56385cc96718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x56385cc96958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x56385cc969c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x56385cc96a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x56385cc96b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x56385cc96b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x56385cc96c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x56385cc96cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x56385cc96d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x56385cc96dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x56385cc96e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x56385cc97488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x56385cc96f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x56385cc97030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56385cc97270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x56385cc972f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x56385cc97548 <col:47>
| |-NonNullAttr 0x56385cc975a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x56385cc975d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x56385cc97700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x56385cc97630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x56385cc97958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x56385cc977b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x56385cc97838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x56385cc97b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x56385cc97a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x56385cc97bd0 <col:60>
|-FunctionDecl 0x56385cc97d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x56385cc97dc0 <col:54>
| `-ConstAttr 0x56385cc97e18 <col:95>
|-FunctionDecl 0x56385cc97fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x56385cc97e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56385cc97ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x56385cc98098 <line:394:19>
| `-ConstAttr 0x56385cc980f0 <col:60>
|-FunctionDecl 0x56385cc99b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56385cc999d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56385cc99bb0 <col:71>
| `-NonNullAttr 0x56385cc99c08 <col:112, col:126> 1
|-FunctionDecl 0x56385cc99d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56385cc99c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56385cc99db8 <line:397:22>
| `-NonNullAttr 0x56385cc99e10 <col:63, col:77> 1
|-FunctionDecl 0x56385cc9a038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x56385cc99e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56385cc99ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x56385cc9a0e8 <line:400:22>
| `-NonNullAttr 0x56385cc9a140 <col:63, col:80> 1 2
|-FunctionDecl 0x56385cc9a348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56385cc9a188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56385cc9a208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x56385cc9a3f8 <line:403:22>
| `-NonNullAttr 0x56385cc9a450 <col:63, col:77> 1
|-FunctionDecl 0x56385cc9a6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x56385cc9a498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56385cc9a540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x56385cc9a758 <line:406:22>
| `-NonNullAttr 0x56385cc9a7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x56385cc9b9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56385cc9a7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56385cc9a870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56385cc9ba98 <line:409:22>
| `-NonNullAttr 0x56385cc9baf0 <col:63, col:77> 1
|-FunctionDecl 0x56385cc9bd28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56385cc9bb38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56385cc9bbc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56385cc9bdd8 <line:412:22>
| `-NonNullAttr 0x56385cc9be30 <col:63, col:80> 1 2
|-FunctionDecl 0x56385cc9c068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56385cc9be78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x56385cc9bf08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x56385cc9c118 <col:37>
| `-NonNullAttr 0x56385cc9c170 <col:78, col:95> 1 2
|-FunctionDecl 0x56385cc9c358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56385cc9c1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56385cc9c238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x56385cc9c408 <line:418:22>
| `-NonNullAttr 0x56385cc9c460 <col:63, col:80> 1 2
|-FunctionDecl 0x56385cc9c5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56385cc9c4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56385cc9c528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x56385cc9c698 <line:420:22>
| `-NonNullAttr 0x56385cc9c6f0 <col:63, col:77> 1
|-FunctionDecl 0x56385cc9c898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56385cc9c738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56385cc9c7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x56385cc9c948 <line:423:22>
| `-NonNullAttr 0x56385cc9c9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56385cc9cb48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56385cc9ca08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56385cc9ca88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x56385cc9cbf8 <line:426:22>
| `-NonNullAttr 0x56385cc9cc50 <col:63, col:77> 1
|-FunctionDecl 0x56385cc9cdf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56385cc9cc98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56385cc9cd18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56385cc9cea8 <line:429:22>
| `-NonNullAttr 0x56385cc9cf00 <col:63, col:80> 1 2
|-FunctionDecl 0x56385cc9d088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56385cc9cf48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56385cc9cfc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x56385cc9d138 <line:431:22>
| `-NonNullAttr 0x56385cc9d190 <col:63, col:77> 1
|-FunctionDecl 0x56385cc9d3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x56385cc9d1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56385cc9d258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x56385cc9d468 <line:434:22>
| |-NonNullAttr 0x56385cc9d4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x56385cc9d4f8 <col:100> "" ""
|-FunctionDecl 0x56385cc9d708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x56385cc9d548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56385cc9d5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x56385cc9d7b8 <line:437:22>
| |-NonNullAttr 0x56385cc9d810 <col:63, col:77> 1
| `-DeprecatedAttr 0x56385cc9d848 <col:97> "" ""
|-FunctionDecl 0x56385cc9da48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56385cc9d898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56385cc9d910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56385cc9daf8 <line:440:22>
| `-NonNullAttr 0x56385cc9db50 <col:63, col:80> 1 2
|-FunctionDecl 0x56385cc9dcd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56385cc9db98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56385cc9dc10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56385cc9dd80 <line:443:22>
| `-NonNullAttr 0x56385cc9ddd8 <col:63, col:77> 1
|-FunctionDecl 0x56385cc9e0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56385cc9de28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56385cc9dea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x56385cc9df20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56385cc9e180 <line:447:22>
| `-NonNullAttr 0x56385cc9e1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x56385cc9e488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x56385cc9e230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56385cc9e2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x56385cc9e328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56385cc9e540 <col:43>
| `-NonNullAttr 0x56385cc9e598 <col:84, col:98> 1
|-FunctionDecl 0x56385cc9e858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56385cc9e5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56385cc9e668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x56385cc9e6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x56385cc9e910 <line:452:22>
| `-NonNullAttr 0x56385cc9e968 <col:63, col:77> 3
|-FunctionDecl 0x56385cc9ec78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56385cc9e9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56385cc9ea60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x56385cc9eaf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56385cc9ed30 <line:456:22>
| `-NonNullAttr 0x56385cc9ed88 <col:63, col:80> 2 3
|-FunctionDecl 0x56385cc9ef78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x56385cc9edd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56385cc9ee58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x56385cc9f028 <line:458:22>
|-FunctionDecl 0x56385cc9f3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x56385cc9f0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x56385cc9f290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x56385cc9f4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x56385cc9f650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x56385cc9f530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x56385cc9f5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x56385cc9f838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x56385cc9f718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x56385cc9f798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x56385cc9f9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x56385cc9f8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x56385cc9fb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x56385cc9fbd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x56385cc9fc78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x56385cc9fd68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x56385cc9fdd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x56385cc9ffa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_8/mix014_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x56385cca0098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x56385cca0150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x56385cca00f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x56385cc9fc50 '__pthread_unwind_buf_t'
| |   `-Record 0x56385cc9fbd0 ''
| `-AlignedAttr 0x56385cca01a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x56385cca0220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x56385cca0380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x56385cca03e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x56385cca0450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x56385cca04b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x56385cca06c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56385cca05b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56385cca0808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56385cca0778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56385cca0a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56385cca08c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x56385cca0aa8 <line:487:22>
|-RecordDecl 0x56385cca0b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x56385cca0e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x56385cca0c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x56385cca0cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x56385cca0ec8 <col:86>
| `-ReturnsTwiceAttr 0x56385cca0f20 <col:12> Implicit
|-FunctionDecl 0x56385cca1248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56385cca0ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x56385cca1100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x56385cca12f8 <line:493:22>
| `-NonNullAttr 0x56385cca1350 <col:63, col:77> 1
|-FunctionDecl 0x56385cca14c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56385cca1398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56385cca1570 <line:495:22>
| `-NonNullAttr 0x56385cca15c8 <col:63, col:77> 1
|-FunctionDecl 0x56385cca16d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56385cca1618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56385cca1778 <line:497:22>
| `-NonNullAttr 0x56385cca17d0 <col:52, col:66> 1
|-FunctionDecl 0x56385cca18d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56385cca1818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56385cca1978 <line:499:22>
| `-NonNullAttr 0x56385cca19d0 <col:52, col:66> 1
|-FunctionDecl 0x56385cca2c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56385cca2a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56385cca2ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56385cca2cd8 <col:36>
| `-NonNullAttr 0x56385cca2d30 <col:66, col:83> 1 2
|-FunctionDecl 0x56385cca2e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56385cca2d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56385cca2ed8 <line:504:22>
| `-NonNullAttr 0x56385cca2f30 <col:52, col:66> 1
|-FunctionDecl 0x56385cca31c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56385cca2fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56385cca3060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56385cca3278 <line:508:22>
| `-NonNullAttr 0x56385cca32d0 <col:63, col:80> 1 2
|-FunctionDecl 0x56385cca3598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x56385cca3318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56385cca3398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x56385cca3418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x56385cca3650 <line:512:22>
| `-NonNullAttr 0x56385cca36a8 <col:63, col:80> 1 3
|-FunctionDecl 0x56385cca37b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56385cca36f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56385cca3858 <line:514:22>
| `-NonNullAttr 0x56385cca38b0 <col:63, col:77> 1
|-FunctionDecl 0x56385cca3ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56385cca3960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56385cca3b80 <line:516:22>
| `-NonNullAttr 0x56385cca3bd8 <col:63, col:77> 1
|-FunctionDecl 0x56385cca3ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56385cca3c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56385cca3d88 <line:518:22>
| `-NonNullAttr 0x56385cca3de0 <col:63, col:77> 1
|-FunctionDecl 0x56385cca4008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56385cca3e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56385cca3ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x56385cca40b8 <line:522:22>
| `-NonNullAttr 0x56385cca4110 <col:63, col:80> 1 2
|-FunctionDecl 0x56385cca4318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56385cca4158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56385cca41d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x56385cca43c8 <line:525:22>
| `-NonNullAttr 0x56385cca4420 <col:63, col:77> 1
|-FunctionDecl 0x56385cca45c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56385cca4468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56385cca44e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x56385cca4678 <line:528:22>
| `-NonNullAttr 0x56385cca46d0 <col:63, col:80> 1 2
|-FunctionDecl 0x56385cca4858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56385cca4718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56385cca4798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x56385cca4908 <line:530:22>
| `-NonNullAttr 0x56385cca4960 <col:63, col:77> 1
|-FunctionDecl 0x56385cca4b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56385cca49a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56385cca4a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x56385cca4bd0 <line:534:22>
| `-NonNullAttr 0x56385cca4c28 <col:63, col:80> 1 2
|-FunctionDecl 0x56385cca4db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56385cca4c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56385cca4cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x56385cca4e68 <line:537:22>
| `-NonNullAttr 0x56385cca4ec0 <col:63, col:77> 1
|-FunctionDecl 0x56385cca5068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56385cca4f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56385cca4f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56385cca5118 <line:541:22>
| `-NonNullAttr 0x56385cca5170 <col:63, col:80> 1 2
|-FunctionDecl 0x56385cca52f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56385cca51b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56385cca5238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x56385cca53a8 <line:544:22>
| `-NonNullAttr 0x56385cca5400 <col:63, col:77> 1
|-FunctionDecl 0x56385cca55e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x56385cca5448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x56385cca54c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x56385cca5698 <line:547:22>
| `-NonNullAttr 0x56385cca56f0 <col:63, col:80> 1 2
|-FunctionDecl 0x56385cca5878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56385cca5738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56385cca57b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x56385cca5928 <line:550:22>
| `-NonNullAttr 0x56385cca5980 <col:63, col:77> 1
|-FunctionDecl 0x56385cca6cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x56385cca6aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56385cca6bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x56385cca6da8 <col:29>
| `-NonNullAttr 0x56385cca6e00 <col:70, col:84> 1
|-FunctionDecl 0x56385cca6f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56385cca6e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56385cca7020 <line:555:22>
| `-NonNullAttr 0x56385cca7078 <col:63, col:77> 1
|-FunctionDecl 0x56385cca7180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56385cca70c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56385cca7228 <line:557:22>
| `-NonNullAttr 0x56385cca7280 <col:52, col:66> 1
|-FunctionDecl 0x56385cca7380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56385cca72c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56385cca7428 <line:559:19>
| `-NonNullAttr 0x56385cca7480 <col:49, col:63> 1
|-FunctionDecl 0x56385cca76b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56385cca74c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56385cca7558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56385cca7768 <col:39>
| `-NonNullAttr 0x56385cca77c0 <col:69, col:86> 1 2
|-FunctionDecl 0x56385cca78c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56385cca7808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56385cca7968 <line:564:22>
| `-NonNullAttr 0x56385cca79c0 <col:52, col:66> 1
|-FunctionDecl 0x56385cca7b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56385cca7a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56385cca7bd0 <line:566:22>
| `-NonNullAttr 0x56385cca7c28 <col:52, col:66> 1
|-FunctionDecl 0x56385cca7de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56385cca7c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56385cca7d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56385cca7e98 <col:39>
| `-NonNullAttr 0x56385cca7ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x56385cca7ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56385cca7f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56385cca8098 <line:571:22>
| `-NonNullAttr 0x56385cca80f0 <col:52, col:66> 1
|-FunctionDecl 0x56385cca82d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56385cca81a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56385cca8380 <line:573:22>
| `-NonNullAttr 0x56385cca83d8 <col:63, col:77> 1
|-FunctionDecl 0x56385cca84e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56385cca8428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56385cca8588 <line:575:22>
| `-NonNullAttr 0x56385cca85e0 <col:63, col:77> 1
|-FunctionDecl 0x56385cca8808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56385cca8628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56385cca86a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x56385cca88b8 <line:579:22>
| `-NonNullAttr 0x56385cca8910 <col:63, col:80> 1 2
|-FunctionDecl 0x56385cca8b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56385cca8958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56385cca89d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x56385cca8be8 <line:582:22>
| `-NonNullAttr 0x56385cca8c40 <col:63, col:77> 1
|-FunctionDecl 0x56385cca8de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56385cca8c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56385cca8d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x56385cca8e98 <line:586:22>
| `-NonNullAttr 0x56385cca8ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x56385cca9078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56385cca8f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56385cca8fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x56385cca9128 <col:36>
| `-NonNullAttr 0x56385cca9180 <col:77, col:91> 1
|-FunctionDecl 0x56385cca94b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x56385cca9260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56385cca9370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x56385cca9568 <line:591:22>
| `-NonNullAttr 0x56385cca95c0 <col:63, col:77> 1
|-FunctionDecl 0x56385cca9738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56385cca9608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56385cca97e0 <line:593:22>
| `-NonNullAttr 0x56385cca9838 <col:63, col:77> 1
|-FunctionDecl 0x56385cca9940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56385cca9888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56385cca99e8 <line:595:22>
| `-NonNullAttr 0x56385cca9a40 <col:52, col:66> 1
|-FunctionDecl 0x56385cca9b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56385cca9aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56385cca9c00 <line:597:22>
| `-NonNullAttr 0x56385cca9c58 <col:52, col:66> 1
|-FunctionDecl 0x56385cca9e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x56385cca9ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56385cca9d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x56385cca9f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x56385ccaa268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56385cca9fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56385ccaa030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56385ccaa0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x56385ccaa320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x56385ccaa538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56385ccaa400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56385ccaa5e0 <line:606:22>
| `-NonNullAttr 0x56385ccaa638 <col:63, col:77> 1
|-FunctionDecl 0x56385ccaa740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56385ccaa688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56385ccaa7e8 <line:608:22>
| `-NonNullAttr 0x56385ccaa840 <col:63, col:77> 1
|-FunctionDecl 0x56385ccaaaa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56385ccaa888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56385ccaa908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x56385ccaab50 <line:612:22>
| `-NonNullAttr 0x56385ccaaba8 <col:63, col:80> 1 2
|-FunctionDecl 0x56385ccaadb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x56385ccaabf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56385ccaac78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x56385ccaae68 <col:37>
| `-NonNullAttr 0x56385ccaaec0 <col:78, col:92> 1
|-FunctionDecl 0x56385ccab0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x56385ccaaf08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56385ccaafb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x56385ccab188 <line:618:22>
| `-NonNullAttr 0x56385ccab1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x56385ccab3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x56385ccab228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56385ccab2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x56385ccab458 <line:621:22>
| `-NonNullAttr 0x56385ccab4b0 <col:63, col:77> 1
|-FunctionDecl 0x56385ccab758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x56385ccab590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x56385ccab610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x56385ccab808 <line:623:22>
| `-NonNullAttr 0x56385ccab860 <col:63, col:77> 1
|-FunctionDecl 0x56385ccab9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56385ccab8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56385ccabab0 <line:625:22>
| `-NonNullAttr 0x56385ccabb08 <col:63, col:77> 1
|-FunctionDecl 0x56385ccabc10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56385ccabb58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56385ccabcb8 <line:627:22>
| `-NonNullAttr 0x56385ccabd10 <col:52, col:66> 1
|-FunctionDecl 0x56385ccabe10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56385ccabd58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56385ccabeb8 <line:629:22>
| `-NonNullAttr 0x56385ccabf10 <col:52, col:66> 1
|-FunctionDecl 0x56385ccac010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56385ccabf58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56385ccac0b8 <line:631:22>
| `-NonNullAttr 0x56385ccac110 <col:52, col:66> 1
|-FunctionDecl 0x56385ccac4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x56385ccac1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x56385ccac300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56385ccac380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x56385ccac5a0 <line:635:22>
| `-NonNullAttr 0x56385ccac5f8 <col:63, col:77> 1
|-FunctionDecl 0x56385ccac778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56385ccac648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56385ccac820 <line:637:22>
| `-NonNullAttr 0x56385ccac878 <col:63, col:77> 1
|-FunctionDecl 0x56385ccac980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56385ccac8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56385ccaca28 <line:639:22>
| `-NonNullAttr 0x56385ccaca80 <col:52, col:66> 1
|-FunctionDecl 0x56385ccadc88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56385ccadb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56385ccadd30 <line:641:22>
| `-NonNullAttr 0x56385ccadd88 <col:63, col:77> 1
|-FunctionDecl 0x56385ccade90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56385ccaddd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56385ccadf38 <line:643:22>
| `-NonNullAttr 0x56385ccadf90 <col:63, col:77> 1
|-FunctionDecl 0x56385ccae1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56385ccadfd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56385ccae058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x56385ccae268 <line:647:22>
| `-NonNullAttr 0x56385ccae2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56385ccae4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x56385ccae308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x56385ccae388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x56385ccae578 <line:650:22>
| `-NonNullAttr 0x56385ccae5d0 <col:63, col:77> 1
|-FunctionDecl 0x56385ccae918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x56385ccae6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x56385ccae7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x56385ccae9c8 <line:653:22>
| `-NonNullAttr 0x56385ccaea20 <col:63, col:77> 1
|-FunctionDecl 0x56385ccaeb88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x56385ccaea68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56385ccaec30 <col:69>
|-FunctionDecl 0x56385ccaeda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x56385ccaec98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56385ccaee50 <col:72>
|-FunctionDecl 0x56385ccaf088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x56385ccaeeb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x56385ccaef68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x56385ccaf138 <col:44>
|-FunctionDecl 0x56385ccaf358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x56385ccaf1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56385ccaf218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x56385ccaf408 <line:660:22>
| `-NonNullAttr 0x56385ccaf460 <col:63, col:77> 2
|-FunctionDecl 0x56385ccaf8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x56385ccaf540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x56385ccaf650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x56385ccaf760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x56385ccaf960 <col:47>
|-FunctionDecl 0x56385ccafaf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x56385ccaf9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56385ccafc48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x56385ccafbb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56385ccafda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x56385ccafd08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56385ccafef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x56385ccafe60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56385ccaffc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x56385ccb0080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x56385ccb0140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x56385ccb01f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x56385ccb0278 prev 0x56385ccb01f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x56385ccb02e0 <col:24> 'int' 0
|-VarDecl 0x56385ccb0318 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x56385ccb0398 prev 0x56385ccb0318 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x56385ccb0400 <col:27> 'int' 0
|-VarDecl 0x56385ccb0438 <line:676:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x56385ccb04b8 prev 0x56385ccb0438 <line:677:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x56385ccb0520 <col:27> 'int' 0
|-VarDecl 0x56385ccb0558 <line:678:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x56385ccb05d8 prev 0x56385ccb0558 <line:679:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x56385ccb0640 <col:27> 'int' 0
|-VarDecl 0x56385ccb0678 <line:680:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x56385ccb06f8 prev 0x56385ccb0678 <line:681:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x56385ccb0760 <col:27> 'int' 0
|-VarDecl 0x56385ccb0798 <line:682:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x56385ccb0818 prev 0x56385ccb0798 <line:683:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x56385ccb0880 <col:27> 'int' 0
|-VarDecl 0x56385ccb08b8 <line:684:1, col:5> col:5 used a 'int'
|-VarDecl 0x56385ccb0938 prev 0x56385ccb08b8 <line:685:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x56385ccb09a0 <col:9> 'int' 0
|-VarDecl 0x56385ccb09d0 <line:686:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x56385ccb0a48 <line:687:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x56385ccb0b00 <line:688:1, col:5> col:5 used x 'int'
|-VarDecl 0x56385ccb0b80 prev 0x56385ccb0b00 <line:689:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x56385ccb0be8 <col:9> 'int' 0
|-VarDecl 0x56385ccb0c20 <line:690:1, col:5> col:5 used y 'int'
|-VarDecl 0x56385ccb0ca0 prev 0x56385ccb0c20 <line:691:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x56385ccb0d08 <col:9> 'int' 0
|-VarDecl 0x56385ccb0d40 <line:692:1, col:5> col:5 used z 'int'
|-VarDecl 0x56385ccb0dc0 prev 0x56385ccb0d40 <line:693:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x56385ccb0e28 <col:9> 'int' 0
|-VarDecl 0x56385ccb0e58 <line:694:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x56385ccb0ed8 <line:695:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x56385ccb0f50 <line:696:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x56385ccb0fc8 <line:697:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x56385ccb1040 <line:698:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x56385ccb10b8 <line:699:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x56385ccb1130 <line:700:1, col:7> col:7 used z$r_buff0_thd4 '_Bool'
|-VarDecl 0x56385ccb11a8 <line:701:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x56385ccb1220 <line:702:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x56385ccb1298 <line:703:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x56385ccb1310 <line:704:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x56385ccb1388 <line:705:1, col:7> col:7 used z$r_buff1_thd4 '_Bool'
|-VarDecl 0x56385ccb1400 <line:706:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x56385ccb1480 <line:707:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x56385ccb1500 <line:708:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x56385ccb1578 <line:709:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x56385ccb15f8 <line:710:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x56385ccb1670 <line:711:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x56385ccb16e8 <line:712:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x56385ccb1760 <line:713:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x56385ccb1878 prev 0x56385ccafaf0 <line:714:1, line:728:1> line:714:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x56385ccb17e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56385ccb1e38 <line:715:1, line:728:1>
|   |-CallExpr 0x56385ccb1988 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56385ccb1970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb1920 <col:3> 'void ()' Function 0x56385cc56e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56385ccb19e8 <line:717:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56385ccb19a8 <col:3> 'int' lvalue Var 0x56385ccb0938 'a' 'int'
|   | `-IntegerLiteral 0x56385ccb19c8 <col:7> 'int' 1
|   |-CallExpr 0x56385ccb1a40 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56385ccb1a28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb1a08 <col:3> 'void ()' Function 0x56385cc56f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56385ccb1a98 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56385ccb1a80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb1a60 <col:3> 'void ()' Function 0x56385cc56e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56385ccb1b10 <line:720:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56385ccb1ab8 <col:3> 'int' lvalue Var 0x56385ccb0b80 'x' 'int'
|   | `-IntegerLiteral 0x56385ccb1ad8 <col:7> 'int' 1
|   |-CallExpr 0x56385ccb1b68 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56385ccb1b50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb1b30 <col:3> 'void ()' Function 0x56385cc56f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56385ccb1bc0 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56385ccb1ba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb1b88 <col:3> 'void ()' Function 0x56385cc56e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x56385ccb1c18 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56385ccb1c00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb1be0 <col:3> 'void ()' Function 0x56385cc56f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56385ccb1c70 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56385ccb1c58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb1c38 <col:3> 'void ()' Function 0x56385cc56e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56385ccb1d28 <line:725:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56385ccb1c90 <col:3> 'int' lvalue Var 0x56385ccb0278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56385ccb1d08 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56385ccb1cf0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56385ccb1cb0 <col:22> 'int' lvalue Var 0x56385ccb0278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56385ccb1cd0 <col:41> 'int' 1
|   |-CallExpr 0x56385ccb1d80 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56385ccb1d68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb1d48 <col:3> 'void ()' Function 0x56385cc56f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56385ccb1e28 <line:727:3, col:36>
|     `-CallExpr 0x56385ccb1e08 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56385ccb1df0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56385ccb1da0 <col:10> 'void *(void)' Function 0x56385cc56958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56385ccb1f58 prev 0x56385ccafc48 <line:729:1, line:746:1> line:729:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x56385ccb1ec0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56385ccb25e0 <line:730:1, line:746:1>
|   |-CallExpr 0x56385ccb2038 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56385ccb2020 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb2000 <col:3> 'void ()' Function 0x56385cc56e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56385ccb2098 <line:732:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56385ccb2058 <col:3> 'int' lvalue Var 0x56385ccb0b80 'x' 'int'
|   | `-IntegerLiteral 0x56385ccb2078 <col:7> 'int' 2
|   |-CallExpr 0x56385ccb20f0 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56385ccb20d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb20b8 <col:3> 'void ()' Function 0x56385cc56f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56385ccb2148 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56385ccb2130 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb2110 <col:3> 'void ()' Function 0x56385cc56e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56385ccb21c0 <line:735:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56385ccb2168 <col:3> 'int' lvalue Var 0x56385ccb0398 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x56385ccb21a8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56385ccb2188 <col:25> 'int' lvalue Var 0x56385ccb0b80 'x' 'int'
|   |-CallExpr 0x56385ccb2218 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56385ccb2200 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb21e0 <col:3> 'void ()' Function 0x56385cc56f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56385ccb2270 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56385ccb2258 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb2238 <col:3> 'void ()' Function 0x56385cc56e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56385ccb22e8 <line:738:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56385ccb2290 <col:3> 'int' lvalue Var 0x56385ccb04b8 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x56385ccb22d0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56385ccb22b0 <col:25> 'int' lvalue Var 0x56385ccb0ca0 'y' 'int'
|   |-CallExpr 0x56385ccb2340 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56385ccb2328 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb2308 <col:3> 'void ()' Function 0x56385cc56f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56385ccb2398 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56385ccb2380 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb2360 <col:3> 'void ()' Function 0x56385cc56e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x56385ccb23f0 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56385ccb23d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb23b8 <col:3> 'void ()' Function 0x56385cc56f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56385ccb2448 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56385ccb2430 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb2410 <col:3> 'void ()' Function 0x56385cc56e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56385ccb2500 <line:743:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56385ccb2468 <col:3> 'int' lvalue Var 0x56385ccb0278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56385ccb24e0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56385ccb24c8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56385ccb2488 <col:22> 'int' lvalue Var 0x56385ccb0278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56385ccb24a8 <col:41> 'int' 1
|   |-CallExpr 0x56385ccb2558 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56385ccb2540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb2520 <col:3> 'void ()' Function 0x56385cc56f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56385ccb25d0 <line:745:3, col:36>
|     `-CallExpr 0x56385ccb25b0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56385ccb2598 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56385ccb2578 <col:10> 'void *(void)' Function 0x56385cc56958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56385ccb2718 prev 0x56385ccafda0 <line:747:1, line:774:1> line:747:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x56385ccb2680 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56385ccb5620 <line:748:1, line:774:1>
|   |-CallExpr 0x56385ccb27f8 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56385ccb27e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb27c0 <col:3> 'void ()' Function 0x56385cc56e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56385ccb2858 <line:750:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56385ccb2818 <col:3> 'int' lvalue Var 0x56385ccb0ca0 'y' 'int'
|   | `-IntegerLiteral 0x56385ccb2838 <col:7> 'int' 1
|   |-CallExpr 0x56385ccb28b0 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56385ccb2898 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb2878 <col:3> 'void ()' Function 0x56385cc56f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56385ccb2908 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56385ccb28f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb28d0 <col:3> 'void ()' Function 0x56385cc56e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56385ccb29b8 <line:753:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb2928 <col:3> '_Bool' lvalue Var 0x56385ccb16e8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x56385ccb29a0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56385ccb2980 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56385ccb2968 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56385ccb2948 <col:19> 'void *(void)' Function 0x56385cc56958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56385ccb2a68 <line:754:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb29d8 <col:3> '_Bool' lvalue Var 0x56385ccb1760 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x56385ccb2a50 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56385ccb2a30 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56385ccb2a18 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56385ccb29f8 <col:19> 'void *(void)' Function 0x56385cc56958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56385ccb2ae0 <line:755:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb2a88 <col:3> '_Bool' lvalue Var 0x56385ccb0e58 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56385ccb2ac8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56385ccb2aa8 <col:21> '_Bool' lvalue Var 0x56385ccb1760 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56385ccb2b78 <line:756:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56385ccb2b20 <col:3> 'int' lvalue Var 0x56385ccb0ed8 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56385ccb2b60 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56385ccb2b40 <col:15> 'int' lvalue Var 0x56385ccb0dc0 'z' 'int'
|   |-BinaryOperator 0x56385ccb2fb0 <line:757:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x56385ccb2b98 <col:3> 'int' lvalue Var 0x56385ccb0dc0 'z' 'int'
|   | `-ConditionalOperator 0x56385ccb2f80 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x56385ccb2da8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x56385ccb2cc8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x56385ccb2bf0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x56385ccb2bd8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x56385ccb2bb8 <col:8> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x56385ccb2ca8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x56385ccb2c40 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x56385ccb2c28 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56385ccb2c08 <col:27> '_Bool' lvalue Var 0x56385ccb10b8 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x56385ccb2c90 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x56385ccb2c78 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x56385ccb2c58 <col:46> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x56385ccb2d88 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x56385ccb2d20 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x56385ccb2d08 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x56385ccb2ce8 <col:65> '_Bool' lvalue Var 0x56385ccb10b8 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x56385ccb2d70 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x56385ccb2d58 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x56385ccb2d38 <col:84> '_Bool' lvalue Var 0x56385ccb1310 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x56385ccb2f68 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56385ccb2dc8 <col:101> 'int' lvalue Var 0x56385ccb0dc0 'z' 'int'
|   |   `-ParenExpr 0x56385ccb2f48 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x56385ccb2f18 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x56385ccb2e88 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56385ccb2e40 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56385ccb2e28 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56385ccb2de8 <col:106> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56385ccb2e70 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56385ccb2e58 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56385ccb2e08 <col:124> '_Bool' lvalue Var 0x56385ccb10b8 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56385ccb2ee8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56385ccb2ea8 <col:141> 'int' lvalue Var 0x56385ccb1500 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x56385ccb2f00 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56385ccb2ec8 <col:153> 'int' lvalue Var 0x56385ccb15f8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x56385ccb34c0 <line:758:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56385ccb2fd0 <col:3> 'int' lvalue Var 0x56385ccb1500 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x56385ccb3490 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56385ccb3460 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56385ccb3448 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56385ccb2ff0 <col:15> '_Bool' lvalue Var 0x56385ccb1760 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56385ccb3478 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56385ccb3010 <col:31> 'int' lvalue Var 0x56385ccb1500 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x56385ccb3428 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56385ccb33f8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56385ccb3220 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56385ccb3140 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56385ccb3068 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56385ccb3050 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56385ccb3030 <col:45> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56385ccb3120 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56385ccb30b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56385ccb30a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56385ccb3080 <col:64> '_Bool' lvalue Var 0x56385ccb10b8 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x56385ccb3108 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56385ccb30f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56385ccb30d0 <col:83> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56385ccb3200 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56385ccb3198 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56385ccb3180 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56385ccb3160 <col:102> '_Bool' lvalue Var 0x56385ccb10b8 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x56385ccb31e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56385ccb31d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56385ccb31b0 <col:121> '_Bool' lvalue Var 0x56385ccb1310 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56385ccb33e0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56385ccb3240 <col:138> 'int' lvalue Var 0x56385ccb1500 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x56385ccb33c0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56385ccb3390 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56385ccb3300 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56385ccb32b8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56385ccb32a0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56385ccb3260 <col:151> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56385ccb32e8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56385ccb32d0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56385ccb3280 <col:169> '_Bool' lvalue Var 0x56385ccb10b8 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x56385ccb3360 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56385ccb3320 <col:186> 'int' lvalue Var 0x56385ccb1500 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x56385ccb3378 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56385ccb3340 <col:198> 'int' lvalue Var 0x56385ccb1500 'z$w_buff0' 'int'
|   |-BinaryOperator 0x56385ccb39d0 <line:759:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56385ccb34e0 <col:3> 'int' lvalue Var 0x56385ccb15f8 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x56385ccb39a0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56385ccb3970 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56385ccb3958 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56385ccb3500 <col:15> '_Bool' lvalue Var 0x56385ccb1760 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56385ccb3988 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56385ccb3520 <col:31> 'int' lvalue Var 0x56385ccb15f8 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x56385ccb3938 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56385ccb3908 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56385ccb3730 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56385ccb3650 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56385ccb3578 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56385ccb3560 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56385ccb3540 <col:45> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56385ccb3630 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56385ccb35c8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56385ccb35b0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56385ccb3590 <col:64> '_Bool' lvalue Var 0x56385ccb10b8 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x56385ccb3618 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56385ccb3600 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56385ccb35e0 <col:83> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56385ccb3710 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56385ccb36a8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56385ccb3690 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56385ccb3670 <col:102> '_Bool' lvalue Var 0x56385ccb10b8 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x56385ccb36f8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56385ccb36e0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56385ccb36c0 <col:121> '_Bool' lvalue Var 0x56385ccb1310 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56385ccb38f0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56385ccb3750 <col:138> 'int' lvalue Var 0x56385ccb15f8 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x56385ccb38d0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56385ccb38a0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56385ccb3810 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56385ccb37c8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56385ccb37b0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56385ccb3770 <col:151> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56385ccb37f8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56385ccb37e0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56385ccb3790 <col:169> '_Bool' lvalue Var 0x56385ccb10b8 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x56385ccb3870 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56385ccb3830 <col:186> 'int' lvalue Var 0x56385ccb15f8 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x56385ccb3888 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56385ccb3850 <col:198> 'int' lvalue Var 0x56385ccb15f8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x56385ccb3f98 <line:760:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb39f0 <col:3> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56385ccb3f80 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56385ccb3f50 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56385ccb3f08 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56385ccb3ef0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56385ccb3a10 <col:20> '_Bool' lvalue Var 0x56385ccb1760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56385ccb3f38 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56385ccb3f20 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56385ccb3a30 <col:36> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56385ccb3ed0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56385ccb3ea0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56385ccb3c60 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56385ccb3b80 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56385ccb3a88 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56385ccb3a70 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56385ccb3a50 <col:55> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56385ccb3b60 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56385ccb3ad8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56385ccb3ac0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56385ccb3aa0 <col:74> '_Bool' lvalue Var 0x56385ccb10b8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56385ccb3b48 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56385ccb3b30 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56385ccb3af0 <col:93> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56385ccb3c40 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56385ccb3bd8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56385ccb3bc0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56385ccb3ba0 <col:112> '_Bool' lvalue Var 0x56385ccb10b8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56385ccb3c28 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56385ccb3c10 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56385ccb3bf0 <col:131> '_Bool' lvalue Var 0x56385ccb1310 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56385ccb3e88 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56385ccb3e70 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56385ccb3c80 <col:148> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56385ccb3e50 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56385ccb3e20 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56385ccb3d40 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56385ccb3cf8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56385ccb3ce0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56385ccb3ca0 <col:166> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56385ccb3d28 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56385ccb3d10 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56385ccb3cc0 <col:184> '_Bool' lvalue Var 0x56385ccb10b8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56385ccb3dd8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56385ccb3d90 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56385ccb3d60 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56385ccb3e08 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56385ccb3df0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56385ccb3db8 <col:212> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56385ccb4560 <line:761:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb3fb8 <col:3> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56385ccb4548 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56385ccb4518 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56385ccb44d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56385ccb44b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56385ccb3fd8 <col:20> '_Bool' lvalue Var 0x56385ccb1760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56385ccb4500 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56385ccb44e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56385ccb3ff8 <col:36> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56385ccb4498 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56385ccb4468 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56385ccb4208 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56385ccb4128 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56385ccb4050 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56385ccb4038 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56385ccb4018 <col:55> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56385ccb4108 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56385ccb40a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56385ccb4088 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56385ccb4068 <col:74> '_Bool' lvalue Var 0x56385ccb10b8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56385ccb40f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56385ccb40d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56385ccb40b8 <col:93> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56385ccb41e8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56385ccb4180 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56385ccb4168 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56385ccb4148 <col:112> '_Bool' lvalue Var 0x56385ccb10b8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56385ccb41d0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56385ccb41b8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56385ccb4198 <col:131> '_Bool' lvalue Var 0x56385ccb1310 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56385ccb4450 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56385ccb4438 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56385ccb4228 <col:148> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56385ccb4418 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56385ccb43e8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56385ccb42e8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56385ccb42a0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56385ccb4288 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56385ccb4248 <col:166> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56385ccb42d0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56385ccb42b8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56385ccb4268 <col:184> '_Bool' lvalue Var 0x56385ccb10b8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56385ccb43b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56385ccb4338 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56385ccb4308 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56385ccb43d0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56385ccb4390 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56385ccb4360 <col:219> 'int' 0
|   |-BinaryOperator 0x56385ccb4b08 <line:762:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb4580 <col:3> '_Bool' lvalue Var 0x56385ccb10b8 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56385ccb4af0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56385ccb4ac0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56385ccb4a78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56385ccb4a60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56385ccb45a0 <col:20> '_Bool' lvalue Var 0x56385ccb1760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56385ccb4aa8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56385ccb4a90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56385ccb45c0 <col:36> '_Bool' lvalue Var 0x56385ccb10b8 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x56385ccb4a40 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56385ccb4a10 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56385ccb47d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56385ccb46f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56385ccb4618 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56385ccb4600 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56385ccb45e0 <col:55> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56385ccb46d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56385ccb4668 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56385ccb4650 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56385ccb4630 <col:74> '_Bool' lvalue Var 0x56385ccb10b8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56385ccb46b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56385ccb46a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56385ccb4680 <col:93> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56385ccb47b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56385ccb4748 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56385ccb4730 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56385ccb4710 <col:112> '_Bool' lvalue Var 0x56385ccb10b8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56385ccb4798 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56385ccb4780 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56385ccb4760 <col:131> '_Bool' lvalue Var 0x56385ccb1310 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56385ccb49f8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56385ccb49e0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56385ccb47f0 <col:148> '_Bool' lvalue Var 0x56385ccb10b8 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x56385ccb49c0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56385ccb4990 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56385ccb48b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56385ccb4868 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56385ccb4850 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56385ccb4810 <col:166> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56385ccb4898 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56385ccb4880 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56385ccb4830 <col:184> '_Bool' lvalue Var 0x56385ccb10b8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56385ccb4948 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56385ccb4900 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56385ccb48d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56385ccb4978 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56385ccb4960 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56385ccb4928 <col:212> '_Bool' lvalue Var 0x56385ccb10b8 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56385ccb50e8 <line:763:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb4b40 <col:3> '_Bool' lvalue Var 0x56385ccb1310 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56385ccb50d0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56385ccb50a0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56385ccb5058 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56385ccb5040 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56385ccb4b60 <col:20> '_Bool' lvalue Var 0x56385ccb1760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56385ccb5088 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56385ccb5070 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56385ccb4b80 <col:36> '_Bool' lvalue Var 0x56385ccb1310 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x56385ccb5020 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56385ccb4ff0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56385ccb4d90 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56385ccb4cb0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56385ccb4bd8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56385ccb4bc0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56385ccb4ba0 <col:55> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56385ccb4c90 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56385ccb4c28 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56385ccb4c10 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56385ccb4bf0 <col:74> '_Bool' lvalue Var 0x56385ccb10b8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56385ccb4c78 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56385ccb4c60 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56385ccb4c40 <col:93> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56385ccb4d70 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56385ccb4d08 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56385ccb4cf0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56385ccb4cd0 <col:112> '_Bool' lvalue Var 0x56385ccb10b8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56385ccb4d58 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56385ccb4d40 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56385ccb4d20 <col:131> '_Bool' lvalue Var 0x56385ccb1310 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56385ccb4fd8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56385ccb4fc0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56385ccb4db0 <col:148> '_Bool' lvalue Var 0x56385ccb1310 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x56385ccb4fa0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56385ccb4f70 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56385ccb4e70 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56385ccb4e28 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56385ccb4e10 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56385ccb4dd0 <col:166> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56385ccb4e58 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56385ccb4e40 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56385ccb4df0 <col:184> '_Bool' lvalue Var 0x56385ccb10b8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56385ccb4f40 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56385ccb4ec0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56385ccb4e90 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56385ccb4f58 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56385ccb4f18 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56385ccb4ee8 <col:219> 'int' 0
|   |-BinaryOperator 0x56385ccb5160 <line:764:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56385ccb5108 <col:3> 'int' lvalue Var 0x56385ccb05d8 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x56385ccb5148 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56385ccb5128 <col:25> 'int' lvalue Var 0x56385ccb0dc0 'z' 'int'
|   |-BinaryOperator 0x56385ccb5290 <line:765:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x56385ccb5180 <col:3> 'int' lvalue Var 0x56385ccb0dc0 'z' 'int'
|   | `-ConditionalOperator 0x56385ccb5260 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x56385ccb5218 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56385ccb5200 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56385ccb51a0 <col:7> '_Bool' lvalue Var 0x56385ccb0e58 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x56385ccb5230 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56385ccb51c0 <col:25> 'int' lvalue Var 0x56385ccb0ed8 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x56385ccb5248 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x56385ccb51e0 <col:37> 'int' lvalue Var 0x56385ccb0dc0 'z' 'int'
|   |-BinaryOperator 0x56385ccb5328 <line:766:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb52b0 <col:3> '_Bool' lvalue Var 0x56385ccb0e58 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56385ccb5300 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56385ccb52d0 <col:28> 'int' 0
|   |-CallExpr 0x56385ccb5380 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56385ccb5368 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb5348 <col:3> 'void ()' Function 0x56385cc56f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56385ccb53d8 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56385ccb53c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb53a0 <col:3> 'void ()' Function 0x56385cc56e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x56385ccb5430 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56385ccb5418 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb53f8 <col:3> 'void ()' Function 0x56385cc56f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56385ccb5488 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56385ccb5470 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb5450 <col:3> 'void ()' Function 0x56385cc56e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56385ccb5540 <line:771:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56385ccb54a8 <col:3> 'int' lvalue Var 0x56385ccb0278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56385ccb5520 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56385ccb5508 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56385ccb54c8 <col:22> 'int' lvalue Var 0x56385ccb0278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56385ccb54e8 <col:41> 'int' 1
|   |-CallExpr 0x56385ccb5598 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56385ccb5580 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb5560 <col:3> 'void ()' Function 0x56385cc56f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56385ccb5610 <line:773:3, col:36>
|     `-CallExpr 0x56385ccb55f0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56385ccb55d8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56385ccb55b8 <col:10> 'void *(void)' Function 0x56385cc56958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56385ccb57a8 prev 0x56385ccafef8 <line:775:1, line:820:1> line:775:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x56385ccb5710 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56385ccb9b90 <line:776:1, line:820:1>
|   |-CallExpr 0x56385ccb5888 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56385ccb5870 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb5850 <col:3> 'void ()' Function 0x56385cc56e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56385ccb5900 <line:778:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56385ccb58a8 <col:3> 'int' lvalue Var 0x56385ccb15f8 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x56385ccb58e8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56385ccb58c8 <col:15> 'int' lvalue Var 0x56385ccb1500 'z$w_buff0' 'int'
|   |-BinaryOperator 0x56385ccb5960 <line:779:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56385ccb5920 <col:3> 'int' lvalue Var 0x56385ccb1500 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x56385ccb5940 <col:15> 'int' 1
|   |-BinaryOperator 0x56385ccb59d8 <line:780:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb5980 <col:3> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56385ccb59c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56385ccb59a0 <col:20> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56385ccb5a70 <line:781:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb59f8 <col:3> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x56385ccb5a48 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56385ccb5a18 <col:27> 'int' 1
|   |-CallExpr 0x56385ccb5c08 <line:782:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x56385ccb5bf0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x56385ccb5a90 <col:3> 'void (int)' Function 0x56385cc56bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x56385ccb5ba8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x56385ccb5b88 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x56385ccb5b68 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x56385ccb5b08 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x56385ccb5af0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x56385ccb5ab0 <col:23> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x56385ccb5b50 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x56385ccb5b20 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x56385ccb5ad0 <col:41> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56385ccb5c88 <line:783:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb5c30 <col:3> '_Bool' lvalue Var 0x56385ccb11a8 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x56385ccb5c70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56385ccb5c50 <col:20> '_Bool' lvalue Var 0x56385ccb0f50 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x56385ccb5d00 <line:784:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb5ca8 <col:3> '_Bool' lvalue Var 0x56385ccb1220 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56385ccb5ce8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56385ccb5cc8 <col:20> '_Bool' lvalue Var 0x56385ccb0fc8 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56385ccb5d78 <line:785:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb5d20 <col:3> '_Bool' lvalue Var 0x56385ccb1298 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56385ccb5d60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56385ccb5d40 <col:20> '_Bool' lvalue Var 0x56385ccb1040 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56385ccb5df0 <line:786:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb5d98 <col:3> '_Bool' lvalue Var 0x56385ccb1310 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56385ccb5dd8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56385ccb5db8 <col:20> '_Bool' lvalue Var 0x56385ccb10b8 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56385ccb5e68 <line:787:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb5e10 <col:3> '_Bool' lvalue Var 0x56385ccb1388 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56385ccb5e50 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56385ccb5e30 <col:20> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56385ccb5f00 <line:788:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb5e88 <col:3> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   | `-CStyleCastExpr 0x56385ccb5ed8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56385ccb5ea8 <col:27> 'int' 1
|   |-CallExpr 0x56385ccb5f58 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56385ccb5f40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb5f20 <col:3> 'void ()' Function 0x56385cc56f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56385ccb5fb0 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56385ccb5f98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb5f78 <col:3> 'void ()' Function 0x56385cc56e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56385ccb6060 <line:791:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb5fd0 <col:3> '_Bool' lvalue Var 0x56385ccb16e8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x56385ccb6048 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56385ccb6028 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56385ccb6010 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56385ccb5ff0 <col:19> 'void *(void)' Function 0x56385cc56958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56385ccb6110 <line:792:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb6080 <col:3> '_Bool' lvalue Var 0x56385ccb1760 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x56385ccb60f8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56385ccb60d8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56385ccb60c0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56385ccb60a0 <col:19> 'void *(void)' Function 0x56385cc56958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56385ccb6188 <line:793:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb6130 <col:3> '_Bool' lvalue Var 0x56385ccb0e58 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56385ccb6170 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56385ccb6150 <col:21> '_Bool' lvalue Var 0x56385ccb1760 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56385ccb6200 <line:794:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56385ccb61a8 <col:3> 'int' lvalue Var 0x56385ccb0ed8 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56385ccb61e8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56385ccb61c8 <col:15> 'int' lvalue Var 0x56385ccb0dc0 'z' 'int'
|   |-BinaryOperator 0x56385ccb6638 <line:795:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x56385ccb6220 <col:3> 'int' lvalue Var 0x56385ccb0dc0 'z' 'int'
|   | `-ConditionalOperator 0x56385ccb6608 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x56385ccb6430 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x56385ccb6350 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x56385ccb6278 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x56385ccb6260 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x56385ccb6240 <col:8> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x56385ccb6330 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x56385ccb62c8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x56385ccb62b0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56385ccb6290 <col:27> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x56385ccb6318 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x56385ccb6300 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x56385ccb62e0 <col:46> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x56385ccb6410 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x56385ccb63a8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x56385ccb6390 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x56385ccb6370 <col:65> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x56385ccb63f8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x56385ccb63e0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x56385ccb63c0 <col:84> '_Bool' lvalue Var 0x56385ccb1388 'z$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x56385ccb65f0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56385ccb6450 <col:101> 'int' lvalue Var 0x56385ccb0dc0 'z' 'int'
|   |   `-ParenExpr 0x56385ccb65d0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x56385ccb65a0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x56385ccb6510 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56385ccb64c8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56385ccb64b0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56385ccb6470 <col:106> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56385ccb64f8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56385ccb64e0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56385ccb6490 <col:124> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56385ccb6570 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56385ccb6530 <col:141> 'int' lvalue Var 0x56385ccb1500 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x56385ccb6588 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56385ccb6550 <col:153> 'int' lvalue Var 0x56385ccb15f8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x56385ccb6b60 <line:796:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56385ccb6658 <col:3> 'int' lvalue Var 0x56385ccb1500 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x56385ccb6b18 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56385ccb6ae8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56385ccb6ad0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56385ccb6678 <col:15> '_Bool' lvalue Var 0x56385ccb1760 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56385ccb6b00 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56385ccb6698 <col:31> 'int' lvalue Var 0x56385ccb1500 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x56385ccb6ab0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56385ccb6a80 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56385ccb68a8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56385ccb67c8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56385ccb66f0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56385ccb66d8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56385ccb66b8 <col:45> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56385ccb67a8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56385ccb6740 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56385ccb6728 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56385ccb6708 <col:64> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x56385ccb6790 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56385ccb6778 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56385ccb6758 <col:83> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56385ccb6888 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56385ccb6820 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56385ccb6808 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56385ccb67e8 <col:102> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x56385ccb6870 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56385ccb6858 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56385ccb6838 <col:121> '_Bool' lvalue Var 0x56385ccb1388 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56385ccb6a68 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56385ccb68c8 <col:138> 'int' lvalue Var 0x56385ccb1500 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x56385ccb6a48 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56385ccb6a18 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56385ccb6988 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56385ccb6940 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56385ccb6928 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56385ccb68e8 <col:151> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56385ccb6970 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56385ccb6958 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56385ccb6908 <col:169> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x56385ccb69e8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56385ccb69a8 <col:186> 'int' lvalue Var 0x56385ccb1500 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x56385ccb6a00 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56385ccb69c8 <col:198> 'int' lvalue Var 0x56385ccb1500 'z$w_buff0' 'int'
|   |-BinaryOperator 0x56385ccb7070 <line:797:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56385ccb6b80 <col:3> 'int' lvalue Var 0x56385ccb15f8 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x56385ccb7040 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56385ccb7010 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56385ccb6ff8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56385ccb6ba0 <col:15> '_Bool' lvalue Var 0x56385ccb1760 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56385ccb7028 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56385ccb6bc0 <col:31> 'int' lvalue Var 0x56385ccb15f8 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x56385ccb6fd8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56385ccb6fa8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56385ccb6dd0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56385ccb6cf0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56385ccb6c18 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56385ccb6c00 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56385ccb6be0 <col:45> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56385ccb6cd0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56385ccb6c68 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56385ccb6c50 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56385ccb6c30 <col:64> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x56385ccb6cb8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56385ccb6ca0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56385ccb6c80 <col:83> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56385ccb6db0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56385ccb6d48 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56385ccb6d30 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56385ccb6d10 <col:102> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x56385ccb6d98 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56385ccb6d80 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56385ccb6d60 <col:121> '_Bool' lvalue Var 0x56385ccb1388 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56385ccb6f90 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56385ccb6df0 <col:138> 'int' lvalue Var 0x56385ccb15f8 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x56385ccb6f70 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56385ccb6f40 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56385ccb6eb0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56385ccb6e68 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56385ccb6e50 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56385ccb6e10 <col:151> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56385ccb6e98 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56385ccb6e80 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56385ccb6e30 <col:169> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x56385ccb6f10 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56385ccb6ed0 <col:186> 'int' lvalue Var 0x56385ccb15f8 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x56385ccb6f28 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56385ccb6ef0 <col:198> 'int' lvalue Var 0x56385ccb15f8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x56385ccb7618 <line:798:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb7090 <col:3> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56385ccb7600 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56385ccb75d0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56385ccb7588 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56385ccb7570 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56385ccb70b0 <col:20> '_Bool' lvalue Var 0x56385ccb1760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56385ccb75b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56385ccb75a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56385ccb70d0 <col:36> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56385ccb7550 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56385ccb7520 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56385ccb72e0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56385ccb7200 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56385ccb7128 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56385ccb7110 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56385ccb70f0 <col:55> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56385ccb71e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56385ccb7178 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56385ccb7160 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56385ccb7140 <col:74> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56385ccb71c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56385ccb71b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56385ccb7190 <col:93> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56385ccb72c0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56385ccb7258 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56385ccb7240 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56385ccb7220 <col:112> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56385ccb72a8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56385ccb7290 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56385ccb7270 <col:131> '_Bool' lvalue Var 0x56385ccb1388 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56385ccb7508 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56385ccb74f0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56385ccb7300 <col:148> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56385ccb74d0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56385ccb74a0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56385ccb73c0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56385ccb7378 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56385ccb7360 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56385ccb7320 <col:166> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56385ccb73a8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56385ccb7390 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56385ccb7340 <col:184> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56385ccb7458 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56385ccb7410 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56385ccb73e0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56385ccb7488 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56385ccb7470 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56385ccb7438 <col:212> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56385ccb7c00 <line:799:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb7638 <col:3> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56385ccb7be8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56385ccb7bb8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56385ccb7b70 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56385ccb7b38 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56385ccb7658 <col:20> '_Bool' lvalue Var 0x56385ccb1760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56385ccb7ba0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56385ccb7b88 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56385ccb7678 <col:36> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56385ccb7b18 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56385ccb7ae8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56385ccb7888 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56385ccb77a8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56385ccb76d0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56385ccb76b8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56385ccb7698 <col:55> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56385ccb7788 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56385ccb7720 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56385ccb7708 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56385ccb76e8 <col:74> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56385ccb7770 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56385ccb7758 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56385ccb7738 <col:93> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56385ccb7868 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56385ccb7800 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56385ccb77e8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56385ccb77c8 <col:112> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56385ccb7850 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56385ccb7838 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56385ccb7818 <col:131> '_Bool' lvalue Var 0x56385ccb1388 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56385ccb7ad0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56385ccb7ab8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56385ccb78a8 <col:148> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56385ccb7a98 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56385ccb7a68 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56385ccb7968 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56385ccb7920 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56385ccb7908 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56385ccb78c8 <col:166> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56385ccb7950 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56385ccb7938 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56385ccb78e8 <col:184> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56385ccb7a38 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56385ccb79b8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56385ccb7988 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56385ccb7a50 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56385ccb7a10 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56385ccb79e0 <col:219> 'int' 0
|   |-BinaryOperator 0x56385ccb81a8 <line:800:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb7c20 <col:3> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56385ccb8190 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56385ccb8160 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56385ccb8118 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56385ccb8100 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56385ccb7c40 <col:20> '_Bool' lvalue Var 0x56385ccb1760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56385ccb8148 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56385ccb8130 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56385ccb7c60 <col:36> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x56385ccb80e0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56385ccb80b0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56385ccb7e70 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56385ccb7d90 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56385ccb7cb8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56385ccb7ca0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56385ccb7c80 <col:55> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56385ccb7d70 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56385ccb7d08 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56385ccb7cf0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56385ccb7cd0 <col:74> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56385ccb7d58 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56385ccb7d40 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56385ccb7d20 <col:93> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56385ccb7e50 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56385ccb7de8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56385ccb7dd0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56385ccb7db0 <col:112> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56385ccb7e38 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56385ccb7e20 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56385ccb7e00 <col:131> '_Bool' lvalue Var 0x56385ccb1388 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56385ccb8098 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56385ccb8080 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56385ccb7e90 <col:148> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x56385ccb8060 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56385ccb8030 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56385ccb7f50 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56385ccb7f08 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56385ccb7ef0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56385ccb7eb0 <col:166> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56385ccb7f38 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56385ccb7f20 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56385ccb7ed0 <col:184> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56385ccb7fe8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56385ccb7fa0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56385ccb7f70 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56385ccb8018 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56385ccb8000 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56385ccb7fc8 <col:212> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56385ccb8770 <line:801:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb81c8 <col:3> '_Bool' lvalue Var 0x56385ccb1388 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56385ccb8758 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56385ccb8728 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56385ccb86e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56385ccb86c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56385ccb81e8 <col:20> '_Bool' lvalue Var 0x56385ccb1760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56385ccb8710 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56385ccb86f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56385ccb8208 <col:36> '_Bool' lvalue Var 0x56385ccb1388 'z$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x56385ccb86a8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56385ccb8678 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56385ccb8418 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56385ccb8338 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56385ccb8260 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56385ccb8248 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56385ccb8228 <col:55> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56385ccb8318 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56385ccb82b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56385ccb8298 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56385ccb8278 <col:74> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56385ccb8300 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56385ccb82e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56385ccb82c8 <col:93> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56385ccb83f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56385ccb8390 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56385ccb8378 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56385ccb8358 <col:112> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56385ccb83e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56385ccb83c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56385ccb83a8 <col:131> '_Bool' lvalue Var 0x56385ccb1388 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56385ccb8660 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56385ccb8648 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56385ccb8438 <col:148> '_Bool' lvalue Var 0x56385ccb1388 'z$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x56385ccb8628 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56385ccb85f8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56385ccb84f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56385ccb84b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56385ccb8498 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56385ccb8458 <col:166> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56385ccb84e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56385ccb84c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56385ccb8478 <col:184> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56385ccb85c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56385ccb8548 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56385ccb8518 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56385ccb85e0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56385ccb85a0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56385ccb8570 <col:219> 'int' 0
|   |-BinaryOperator 0x56385ccb87e8 <line:802:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56385ccb8790 <col:3> 'int' lvalue Var 0x56385ccb06f8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x56385ccb87d0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56385ccb87b0 <col:25> 'int' lvalue Var 0x56385ccb0dc0 'z' 'int'
|   |-BinaryOperator 0x56385ccb8918 <line:803:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x56385ccb8808 <col:3> 'int' lvalue Var 0x56385ccb0dc0 'z' 'int'
|   | `-ConditionalOperator 0x56385ccb88e8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x56385ccb88a0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56385ccb8888 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56385ccb8828 <col:7> '_Bool' lvalue Var 0x56385ccb0e58 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x56385ccb88b8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56385ccb8848 <col:25> 'int' lvalue Var 0x56385ccb0ed8 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x56385ccb88d0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x56385ccb8868 <col:37> 'int' lvalue Var 0x56385ccb0dc0 'z' 'int'
|   |-BinaryOperator 0x56385ccb89b0 <line:804:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb8938 <col:3> '_Bool' lvalue Var 0x56385ccb0e58 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56385ccb8988 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56385ccb8958 <col:28> 'int' 0
|   |-CallExpr 0x56385ccb8a08 <line:805:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56385ccb89f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb89d0 <col:3> 'void ()' Function 0x56385cc56f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56385ccb8a60 <line:806:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56385ccb8a48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb8a28 <col:3> 'void ()' Function 0x56385cc56e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56385ccb8ad8 <line:807:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56385ccb8a80 <col:3> 'int' lvalue Var 0x56385ccb0818 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x56385ccb8ac0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56385ccb8aa0 <col:25> 'int' lvalue Var 0x56385ccb0938 'a' 'int'
|   |-CallExpr 0x56385ccb8b30 <line:808:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56385ccb8b18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb8af8 <col:3> 'void ()' Function 0x56385cc56f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56385ccb8b98 <line:809:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56385ccb8b80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb8b50 <col:3> 'void ()' Function 0x56385cc56e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56385ccb8e80 <line:810:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56385ccb8bb8 <col:3> 'int' lvalue Var 0x56385ccb0dc0 'z' 'int'
|   | `-ConditionalOperator 0x56385ccb8e50 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56385ccb8c78 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56385ccb8c30 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56385ccb8c18 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56385ccb8bd8 <col:7> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56385ccb8c60 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56385ccb8c48 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56385ccb8bf8 <col:25> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x56385ccb8e38 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56385ccb8c98 <col:42> 'int' lvalue Var 0x56385ccb1500 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x56385ccb8e18 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56385ccb8de8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56385ccb8d58 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56385ccb8d10 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56385ccb8cf8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56385ccb8cb8 <col:55> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56385ccb8d40 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56385ccb8d28 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56385ccb8cd8 <col:73> '_Bool' lvalue Var 0x56385ccb1388 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56385ccb8db8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56385ccb8d78 <col:90> 'int' lvalue Var 0x56385ccb15f8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56385ccb8dd0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56385ccb8d98 <col:102> 'int' lvalue Var 0x56385ccb0dc0 'z' 'int'
|   |-BinaryOperator 0x56385ccb9088 <line:811:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb8ea0 <col:3> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56385ccb9070 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56385ccb9040 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56385ccb8f60 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56385ccb8f18 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56385ccb8f00 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56385ccb8ec0 <col:20> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56385ccb8f48 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56385ccb8f30 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56385ccb8ee0 <col:38> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56385ccb8ff8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56385ccb8fb0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56385ccb8f80 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56385ccb9028 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56385ccb9010 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56385ccb8fd8 <col:66> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56385ccb9370 <line:812:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb90a8 <col:3> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56385ccb9358 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56385ccb9328 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56385ccb9248 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56385ccb9168 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56385ccb9120 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56385ccb9108 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56385ccb90c8 <col:20> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56385ccb9150 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56385ccb9138 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56385ccb90e8 <col:38> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x56385ccb9228 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56385ccb91e0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56385ccb91c8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56385ccb9188 <col:56> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56385ccb9210 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56385ccb91f8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56385ccb91a8 <col:74> '_Bool' lvalue Var 0x56385ccb1388 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56385ccb92e0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56385ccb9298 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56385ccb9268 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56385ccb9310 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56385ccb92f8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56385ccb92c0 <col:102> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56385ccb9578 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb9390 <col:3> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56385ccb9560 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56385ccb9530 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56385ccb9450 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56385ccb9408 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56385ccb93f0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56385ccb93b0 <col:20> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56385ccb9438 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56385ccb9420 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56385ccb93d0 <col:38> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56385ccb94e8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56385ccb94a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56385ccb9470 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56385ccb9518 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56385ccb9500 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56385ccb94c8 <col:66> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56385ccb9860 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56385ccb9598 <col:3> '_Bool' lvalue Var 0x56385ccb1388 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56385ccb9848 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56385ccb9818 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56385ccb9738 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56385ccb9658 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56385ccb9610 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56385ccb95f8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56385ccb95b8 <col:20> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56385ccb9640 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56385ccb9628 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56385ccb95d8 <col:38> '_Bool' lvalue Var 0x56385ccb1130 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x56385ccb9718 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56385ccb96d0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56385ccb96b8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56385ccb9678 <col:56> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56385ccb9700 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56385ccb96e8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56385ccb9698 <col:74> '_Bool' lvalue Var 0x56385ccb1388 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56385ccb97d0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56385ccb9788 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56385ccb9758 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56385ccb9800 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56385ccb97e8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56385ccb97b0 <col:102> '_Bool' lvalue Var 0x56385ccb1388 'z$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x56385ccb98b8 <line:815:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56385ccb98a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb9880 <col:3> 'void ()' Function 0x56385cc56f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56385ccb9910 <line:816:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56385ccb98f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb98d8 <col:3> 'void ()' Function 0x56385cc56e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56385ccb99c8 <line:817:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56385ccb9930 <col:3> 'int' lvalue Var 0x56385ccb0278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56385ccb99a8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56385ccb9990 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56385ccb9950 <col:22> 'int' lvalue Var 0x56385ccb0278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56385ccb9970 <col:41> 'int' 1
|   |-CallExpr 0x56385ccb9a20 <line:818:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56385ccb9a08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56385ccb99e8 <col:3> 'void ()' Function 0x56385cc56f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56385ccb9a98 <line:819:3, col:36>
|     `-CallExpr 0x56385ccb9a78 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56385ccb9a60 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56385ccb9a40 <col:10> 'void *(void)' Function 0x56385cc56958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56385ccb9d18 prev 0x56385ccaffc0 <line:821:1, line:823:1> line:821:6 fence 'void ()'
| `-CompoundStmt 0x56385ccb9db8 <line:822:1, line:823:1>
|-FunctionDecl 0x56385ccb9de8 prev 0x56385ccb0080 <line:824:1, line:826:1> line:824:6 isync 'void ()'
| `-CompoundStmt 0x56385ccb9e88 <line:825:1, line:826:1>
|-FunctionDecl 0x56385ccb9eb8 prev 0x56385ccb0140 <line:827:1, line:829:1> line:827:6 lwfence 'void ()'
| `-CompoundStmt 0x56385ccb9f58 <line:828:1, line:829:1>
`-FunctionDecl 0x56385ccb9fc8 <line:830:1, line:856:1> line:830:5 main 'int ()'
  `-CompoundStmt 0x56385ccbc070 <line:831:1, line:856:1>
    |-DeclStmt 0x56385ccba0e0 <line:832:3, col:17>
    | `-VarDecl 0x56385ccba078 <col:3, col:13> col:13 used t359 'pthread_t':'unsigned long'
    |-CallExpr 0x56385ccba2e8 <line:833:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56385ccba2d0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56385ccba0f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56385cc97488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56385ccba138 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56385ccba118 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56385ccba078 't359' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56385ccba328 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56385ccba1b0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56385ccba188 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56385ccba150 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56385ccba340 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56385ccba1d0 <col:38> 'void *(void *)' Function 0x56385ccb1878 'P0' 'void *(void *)'
    | `-ParenExpr 0x56385ccba250 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56385ccba228 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56385ccba1f0 <col:51> 'int' 0
    |-DeclStmt 0x56385ccba3d0 <line:834:3, col:17>
    | `-VarDecl 0x56385ccba368 <col:3, col:13> col:13 used t360 'pthread_t':'unsigned long'
    |-CallExpr 0x56385ccba578 <line:835:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56385ccba560 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56385ccba3e8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56385cc97488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56385ccba428 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56385ccba408 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56385ccba368 't360' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56385ccba5b8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56385ccba4a0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56385ccba478 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56385ccba440 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56385ccba5d0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56385ccba4c0 <col:38> 'void *(void *)' Function 0x56385ccb1f58 'P1' 'void *(void *)'
    | `-ParenExpr 0x56385ccba540 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56385ccba518 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56385ccba4e0 <col:51> 'int' 0
    |-DeclStmt 0x56385ccba660 <line:836:3, col:17>
    | `-VarDecl 0x56385ccba5f8 <col:3, col:13> col:13 used t361 'pthread_t':'unsigned long'
    |-CallExpr 0x56385ccba808 <line:837:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56385ccba7f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56385ccba678 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56385cc97488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56385ccba6b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56385ccba698 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56385ccba5f8 't361' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56385ccba848 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56385ccba730 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56385ccba708 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56385ccba6d0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56385ccba860 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56385ccba750 <col:38> 'void *(void *)' Function 0x56385ccb2718 'P2' 'void *(void *)'
    | `-ParenExpr 0x56385ccba7d0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56385ccba7a8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56385ccba770 <col:51> 'int' 0
    |-DeclStmt 0x56385ccba8f0 <line:838:3, col:17>
    | `-VarDecl 0x56385ccba888 <col:3, col:13> col:13 used t362 'pthread_t':'unsigned long'
    |-CallExpr 0x56385ccbaa98 <line:839:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56385ccbaa80 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56385ccba908 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56385cc97488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56385ccba948 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56385ccba928 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56385ccba888 't362' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56385ccbaad8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56385ccba9c0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56385ccba998 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56385ccba960 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56385ccbaaf0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56385ccba9e0 <col:38> 'void *(void *)' Function 0x56385ccb57a8 'P3' 'void *(void *)'
    | `-ParenExpr 0x56385ccbaa60 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56385ccbaa38 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56385ccbaa00 <col:51> 'int' 0
    |-CallExpr 0x56385ccbab40 <line:840:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56385ccbab28 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56385ccbab08 <col:3> 'void ()' Function 0x56385cc56e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56385ccbac30 <line:841:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x56385ccbab60 <col:3> '_Bool' lvalue Var 0x56385ccb09d0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x56385ccbac18 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x56385ccbabf8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x56385ccbabe0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x56385ccbaba0 <col:21> 'int' lvalue Var 0x56385ccb0278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x56385ccbabc0 <col:41> 'int' 4
    |-CallExpr 0x56385ccbac88 <line:842:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56385ccbac70 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56385ccbac50 <col:3> 'void ()' Function 0x56385cc56f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56385ccbad00 <line:843:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56385ccbace8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56385ccbaca8 <col:3> 'void (int)' Function 0x56385cc56790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x56385ccbad40 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56385ccbad28 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56385ccbacc8 <col:21> '_Bool' lvalue Var 0x56385ccb09d0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x56385ccbad90 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56385ccbad78 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56385ccbad58 <col:3> 'void ()' Function 0x56385cc56e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56385ccbb078 <line:845:3, col:103> 'int' '='
    | |-DeclRefExpr 0x56385ccbadb0 <col:3> 'int' lvalue Var 0x56385ccb0dc0 'z' 'int'
    | `-ConditionalOperator 0x56385ccbb048 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x56385ccbae70 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x56385ccbae28 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x56385ccbae10 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x56385ccbadd0 <col:7> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x56385ccbae58 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x56385ccbae40 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x56385ccbadf0 <col:25> '_Bool' lvalue Var 0x56385ccb0f50 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56385ccbb030 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56385ccbae90 <col:42> 'int' lvalue Var 0x56385ccb1500 'z$w_buff0' 'int'
    |   `-ParenExpr 0x56385ccbb010 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x56385ccbafe0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x56385ccbaf50 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56385ccbaf08 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56385ccbaef0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56385ccbaeb0 <col:55> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56385ccbaf38 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56385ccbaf20 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56385ccbaed0 <col:73> '_Bool' lvalue Var 0x56385ccb11a8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56385ccbafb0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56385ccbaf70 <col:90> 'int' lvalue Var 0x56385ccb15f8 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x56385ccbafc8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56385ccbaf90 <col:102> 'int' lvalue Var 0x56385ccb0dc0 'z' 'int'
    |-BinaryOperator 0x56385ccbb280 <line:846:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56385ccbb098 <col:3> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56385ccbb268 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56385ccbb238 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56385ccbb158 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56385ccbb110 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56385ccbb0f8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56385ccbb0b8 <col:20> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56385ccbb140 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56385ccbb128 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56385ccbb0d8 <col:38> '_Bool' lvalue Var 0x56385ccb0f50 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56385ccbb1f0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56385ccbb1a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56385ccbb178 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56385ccbb220 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56385ccbb208 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56385ccbb1d0 <col:66> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56385ccbb568 <line:847:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56385ccbb2a0 <col:3> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56385ccbb550 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56385ccbb520 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56385ccbb440 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56385ccbb360 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56385ccbb318 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56385ccbb300 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56385ccbb2c0 <col:20> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56385ccbb348 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56385ccbb330 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56385ccbb2e0 <col:38> '_Bool' lvalue Var 0x56385ccb0f50 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56385ccbb420 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56385ccbb3d8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56385ccbb3c0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56385ccbb380 <col:56> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56385ccbb408 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56385ccbb3f0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56385ccbb3a0 <col:74> '_Bool' lvalue Var 0x56385ccb11a8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56385ccbb4d8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56385ccbb490 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56385ccbb460 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56385ccbb508 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56385ccbb4f0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56385ccbb4b8 <col:102> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x56385ccbb770 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56385ccbb588 <col:3> '_Bool' lvalue Var 0x56385ccb0f50 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56385ccbb758 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56385ccbb728 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56385ccbb648 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56385ccbb600 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56385ccbb5e8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56385ccbb5a8 <col:20> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56385ccbb630 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56385ccbb618 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56385ccbb5c8 <col:38> '_Bool' lvalue Var 0x56385ccb0f50 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56385ccbb6e0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56385ccbb698 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56385ccbb668 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56385ccbb710 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56385ccbb6f8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56385ccbb6c0 <col:66> '_Bool' lvalue Var 0x56385ccb0f50 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56385ccbba58 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56385ccbb790 <col:3> '_Bool' lvalue Var 0x56385ccb11a8 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56385ccbba40 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56385ccbba10 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56385ccbb930 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56385ccbb850 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56385ccbb808 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56385ccbb7f0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56385ccbb7b0 <col:20> '_Bool' lvalue Var 0x56385ccb1578 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56385ccbb838 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56385ccbb820 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56385ccbb7d0 <col:38> '_Bool' lvalue Var 0x56385ccb0f50 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56385ccbb910 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56385ccbb8c8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56385ccbb8b0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56385ccbb870 <col:56> '_Bool' lvalue Var 0x56385ccb1670 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56385ccbb8f8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56385ccbb8e0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56385ccbb890 <col:74> '_Bool' lvalue Var 0x56385ccb11a8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56385ccbb9c8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56385ccbb980 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56385ccbb950 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56385ccbb9f8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56385ccbb9e0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56385ccbb9a8 <col:102> '_Bool' lvalue Var 0x56385ccb11a8 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x56385ccbbab0 <line:850:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56385ccbba98 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56385ccbba78 <col:3> 'void ()' Function 0x56385cc56f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56385ccbbb08 <line:851:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56385ccbbaf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56385ccbbad0 <col:3> 'void ()' Function 0x56385cc56e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56385ccbbf18 <line:852:3, col:169> '_Bool' '='
    | |-DeclRefExpr 0x56385ccbbb28 <col:3> '_Bool' lvalue Var 0x56385ccb0a48 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x56385ccbbf00 <col:21, col:169> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x56385ccbbee8 <col:21, col:169> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x56385ccbbec8 <col:22, col:169> 'int'
    |       `-BinaryOperator 0x56385ccbbea8 <col:23, col:168> 'int' '&&'
    |         |-BinaryOperator 0x56385ccbbe10 <col:23, col:140> 'int' '&&'
    |         | |-BinaryOperator 0x56385ccbbd78 <col:23, col:112> 'int' '&&'
    |         | | |-BinaryOperator 0x56385ccbbce0 <col:23, col:84> 'int' '&&'
    |         | | | |-BinaryOperator 0x56385ccbbc48 <col:23, col:56> 'int' '&&'
    |         | | | | |-BinaryOperator 0x56385ccbbbb0 <col:23, col:28> 'int' '=='
    |         | | | | | |-ImplicitCastExpr 0x56385ccbbb88 <col:23> 'int' <LValueToRValue>
    |         | | | | | | `-DeclRefExpr 0x56385ccbbb48 <col:23> 'int' lvalue Var 0x56385ccb0b80 'x' 'int'
    |         | | | | | `-IntegerLiteral 0x56385ccbbb68 <col:28> 'int' 2
    |         | | | | `-BinaryOperator 0x56385ccbbc28 <col:33, col:56> 'int' '=='
    |         | | | |   |-ImplicitCastExpr 0x56385ccbbc10 <col:33> 'int' <LValueToRValue>
    |         | | | |   | `-DeclRefExpr 0x56385ccbbbd0 <col:33> 'int' lvalue Var 0x56385ccb0398 '__unbuffered_p1_EAX' 'int'
    |         | | | |   `-IntegerLiteral 0x56385ccbbbf0 <col:56> 'int' 2
    |         | | | `-BinaryOperator 0x56385ccbbcc0 <col:61, col:84> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x56385ccbbca8 <col:61> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x56385ccbbc68 <col:61> 'int' lvalue Var 0x56385ccb04b8 '__unbuffered_p1_EBX' 'int'
    |         | | |   `-IntegerLiteral 0x56385ccbbc88 <col:84> 'int' 0
    |         | | `-BinaryOperator 0x56385ccbbd58 <col:89, col:112> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x56385ccbbd40 <col:89> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x56385ccbbd00 <col:89> 'int' lvalue Var 0x56385ccb05d8 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x56385ccbbd20 <col:112> 'int' 0
    |         | `-BinaryOperator 0x56385ccbbdf0 <col:117, col:140> 'int' '=='
    |         |   |-ImplicitCastExpr 0x56385ccbbdd8 <col:117> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x56385ccbbd98 <col:117> 'int' lvalue Var 0x56385ccb06f8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x56385ccbbdb8 <col:140> 'int' 1
    |         `-BinaryOperator 0x56385ccbbe88 <col:145, col:168> 'int' '=='
    |           |-ImplicitCastExpr 0x56385ccbbe70 <col:145> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56385ccbbe30 <col:145> 'int' lvalue Var 0x56385ccb0818 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x56385ccbbe50 <col:168> 'int' 0
    |-CallExpr 0x56385ccbbf70 <line:853:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56385ccbbf58 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56385ccbbf38 <col:3> 'void ()' Function 0x56385cc56f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56385ccbbfe8 <line:854:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56385ccbbfd0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56385ccbbf90 <col:3> 'void (int)' Function 0x56385cc56bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x56385ccbc028 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56385ccbc010 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56385ccbbfb0 <col:21> '_Bool' lvalue Var 0x56385ccb0a48 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x56385ccbc060 <line:855:3, col:10>
      `-IntegerLiteral 0x56385ccbc040 <col:10> 'int' 0
