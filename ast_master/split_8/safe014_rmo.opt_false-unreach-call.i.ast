TranslationUnitDecl 0x560d9dc9ce18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x560d9dc9d6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x560d9dc9d3b0 '__int128'
|-TypedefDecl 0x560d9dc9d748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x560d9dc9d3d0 'unsigned __int128'
|-TypedefDecl 0x560d9dc9da50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x560d9dc9d820 'struct __NSConstantString_tag'
|   `-Record 0x560d9dc9d7a0 '__NSConstantString_tag'
|-TypedefDecl 0x560d9dc9daf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x560d9dc9dab0 'char *'
|   `-BuiltinType 0x560d9dc9ceb0 'char'
|-TypedefDecl 0x560d9dcdc650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x560d9dc9dd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x560d9dc9dbd0 'struct __va_list_tag'
|     `-Record 0x560d9dc9db50 '__va_list_tag'
|-FunctionDecl 0x560d9dcdc770 <./split_8/safe014_rmo.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x560d9dcdc940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x560d9dcdc870 <col:31> col:34 'int'
|-FunctionDecl 0x560d9dcdcab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x560d9dcdcbe0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x560d9dcdcd28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x560d9dcdcc98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x560d9dcdcf58 <col:40, col:99>
|   |-IfStmt 0x560d9dcdcf28 <col:42, col:88>
|   | |-UnaryOperator 0x560d9dcdce08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x560d9dcdcdf0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x560d9dcdcdd0 <col:47> 'int' lvalue ParmVar 0x560d9dcdcc98 'expression' 'int'
|   | `-CompoundStmt 0x560d9dcdcf10 <col:59, col:88>
|   |   `-LabelStmt 0x560d9dcdcef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x560d9dcdce88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x560d9dcdce70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x560d9dcdce20 <col:68> 'void () __attribute__((noreturn))' Function 0x560d9dcdcbe0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x560d9dcdcf40 <col:89>
|   `-ReturnStmt 0x560d9dcdcf48 <col:91>
|-FunctionDecl 0x560d9dcdcfa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x560d9dcdd060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x560d9dcdd3e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560d9dcdd118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x560d9dcdd198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x560d9dcdd218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560d9dcdd298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560d9dcdd4a0 <line:11:22>
|-FunctionDecl 0x560d9dd03520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560d9dcdd510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x560d9dcdd590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x560d9dd03350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560d9dd033d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560d9dd035e0 <line:14:22>
|-FunctionDecl 0x560d9dd03890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560d9dd03650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x560d9dd036d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x560d9dd03750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x560d9dd03948 <line:16:22>
|-TypedefDecl 0x560d9dd039b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x560d9dc9cf70 'unsigned char'
|-TypedefDecl 0x560d9dd03a28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x560d9dc9cf90 'unsigned short'
|-TypedefDecl 0x560d9dd03a98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x560d9dc9cfb0 'unsigned int'
|-TypedefDecl 0x560d9dd03b08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x560d9dc9cfd0 'unsigned long'
|-TypedefDecl 0x560d9dd03b78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x560d9dc9ced0 'signed char'
|-TypedefDecl 0x560d9dd03be8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x560d9dc9cf70 'unsigned char'
|-TypedefDecl 0x560d9dd03c58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x560d9dc9cef0 'short'
|-TypedefDecl 0x560d9dd03cc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x560d9dc9cf90 'unsigned short'
|-TypedefDecl 0x560d9dd03d38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x560d9dc9cf10 'int'
|-TypedefDecl 0x560d9dd03da8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x560d9dc9cfb0 'unsigned int'
|-TypedefDecl 0x560d9dd03e18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x560d9dc9cf30 'long'
|-TypedefDecl 0x560d9dd03e88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x560d9dc9cfd0 'unsigned long'
|-TypedefDecl 0x560d9dd03ef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x560d9dc9cf30 'long'
|-TypedefDecl 0x560d9dd03f68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x560d9dc9cfd0 'unsigned long'
|-TypedefDecl 0x560d9dd03fd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x560d9dc9cfd0 'unsigned long'
|-TypedefDecl 0x560d9dd04048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x560d9dc9cfb0 'unsigned int'
|-TypedefDecl 0x560d9dd040b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x560d9dc9cfb0 'unsigned int'
|-TypedefDecl 0x560d9dd04128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x560d9dc9cfd0 'unsigned long'
|-TypedefDecl 0x560d9dd04198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x560d9dc9cfd0 'unsigned long'
|-TypedefDecl 0x560d9dd04208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x560d9dc9cfb0 'unsigned int'
|-TypedefDecl 0x560d9dd04278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x560d9dc9cfd0 'unsigned long'
|-TypedefDecl 0x560d9dd042e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x560d9dc9cf30 'long'
|-TypedefDecl 0x560d9dd04378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x560d9dc9cf30 'long'
|-TypedefDecl 0x560d9dd043e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x560d9dc9cf10 'int'
|-RecordDecl 0x560d9dd04440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x560d9dd04588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x560d9dd04640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x560d9dd045e0 'struct __fsid_t' sugar
|   `-RecordType 0x560d9dd044c0 '__fsid_t'
|     `-Record 0x560d9dd04440 ''
|-TypedefDecl 0x560d9dd046c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x560d9dc9cf30 'long'
|-TypedefDecl 0x560d9dd04738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x560d9dc9cfd0 'unsigned long'
|-TypedefDecl 0x560d9dd047a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x560d9dc9cfd0 'unsigned long'
|-TypedefDecl 0x560d9dd04818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x560d9dc9cfb0 'unsigned int'
|-TypedefDecl 0x560d9dd04888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x560d9dc9cf30 'long'
|-TypedefDecl 0x560d9dd048f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x560d9dc9cfb0 'unsigned int'
|-TypedefDecl 0x560d9dd04968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x560d9dc9cf30 'long'
|-TypedefDecl 0x560d9dd049d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x560d9dc9cf10 'int'
|-TypedefDecl 0x560d9dd04a48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x560d9dc9cf10 'int'
|-TypedefDecl 0x560d9dd04ab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x560d9dc9cf10 'int'
|-TypedefDecl 0x560d9dd04b28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x560d9dc9d630 'void *'
|   `-BuiltinType 0x560d9dc9ce70 'void'
|-TypedefDecl 0x560d9dd04b98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x560d9dc9cf30 'long'
|-TypedefDecl 0x560d9dd04c08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x560d9dc9cf30 'long'
|-TypedefDecl 0x560d9dd04c78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x560d9dc9cf30 'long'
|-TypedefDecl 0x560d9dd04ce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x560d9dc9cfd0 'unsigned long'
|-TypedefDecl 0x560d9dd04d58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x560d9dc9cfd0 'unsigned long'
|-TypedefDecl 0x560d9dd04dc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x560d9dc9cfd0 'unsigned long'
|-TypedefDecl 0x560d9dd04e38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x560d9dc9cfd0 'unsigned long'
|-TypedefDecl 0x560d9dd04ea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x560d9dc9cf30 'long'
|-TypedefDecl 0x560d9dd04f18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x560d9dc9cf30 'long'
|-TypedefDecl 0x560d9dd04f88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x560d9dc9cf30 'long'
|-TypedefDecl 0x560d9dd04ff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x560d9dc9cfd0 'unsigned long'
|-TypedefDecl 0x560d9dd05088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x560d9dd05050 '__off64_t' sugar
|   |-Typedef 0x560d9dd04378 '__off64_t'
|   `-BuiltinType 0x560d9dc9cf30 'long'
|-TypedefDecl 0x560d9dd05180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x560d9dd05140 '__quad_t *'
|   `-TypedefType 0x560d9dd050e0 '__quad_t' sugar
|     |-Typedef 0x560d9dd03ef8 '__quad_t'
|     `-BuiltinType 0x560d9dc9cf30 'long'
|-TypedefDecl 0x560d9dd051f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x560d9dc9dab0 'char *'
|   `-BuiltinType 0x560d9dc9ceb0 'char'
|-TypedefDecl 0x560d9dd05260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x560d9dc9cf30 'long'
|-TypedefDecl 0x560d9dd052d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x560d9dc9cfb0 'unsigned int'
|-FunctionDecl 0x560d9dd06458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x560d9dd06380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x560d9dd06768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x560d9dd06758 <line:73:3, col:34>
|     `-CallExpr 0x560d9dd06718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x560d9dd06700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560d9dd06690 <col:10> '<builtin fn type>' Function 0x560d9dd06500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x560d9dd06740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x560d9dd066b0 <col:29> 'unsigned int' lvalue ParmVar 0x560d9dd06380 '__bsx' 'unsigned int'
|-FunctionDecl 0x560d9dd06500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x560d9dd065a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x560d9dd06610 <col:10> Implicit
| `-ConstAttr 0x560d9dd06668 <col:10> Implicit
|-FunctionDecl 0x560d9dd068c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x560d9dd067b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x560d9dd06bd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x560d9dd06bc8 <line:78:3, col:34>
|     `-CallExpr 0x560d9dd06b88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x560d9dd06b70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560d9dd06af8 <col:10> '<builtin fn type>' Function 0x560d9dd06968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x560d9dd06bb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x560d9dd06b18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x560d9dd067b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x560d9dd06968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x560d9dd06a08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x560d9dd06a78 <col:10> Implicit
| `-ConstAttr 0x560d9dd06ad0 <col:10> Implicit
|-TypedefDecl 0x560d9dd06c08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x560d9dc9cfd0 'unsigned long'
|-TypedefDecl 0x560d9dd06c98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x560d9dd06c60 '__time_t' sugar
|   |-Typedef 0x560d9dd04888 '__time_t'
|   `-BuiltinType 0x560d9dc9cf30 'long'
|-RecordDecl 0x560d9dd06cf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x560d9dd06da8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x560d9dd06e38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x560d9dd06ec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x560d9dd06e90 '__pid_t' sugar
|   |-Typedef 0x560d9dd043e8 '__pid_t'
|   `-BuiltinType 0x560d9dc9cf10 'int'
|-RecordDecl 0x560d9dd06f20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x560d9dd06fe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x560d9dd07030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x560d9dd070f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x560d9dd07158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x560d9dc9cfd0 'unsigned long'
|-RecordDecl 0x560d9dd071b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x560d9dd08480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x560d9dd08530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x560d9dd084d0 'struct cpu_set_t' sugar
|   `-RecordType 0x560d9dd07230 'cpu_set_t'
|     `-Record 0x560d9dd071b0 ''
|-FunctionDecl 0x560d9dd08808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x560d9dd085d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560d9dd086e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x560d9dd088b8 <line:108:19>
|-FunctionDecl 0x560d9dd08a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x560d9dd08920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x560d9dd08b38 <col:69>
|-FunctionDecl 0x560d9dd08cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x560d9dd08ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x560d9dd08d58 <col:64>
|-FunctionDecl 0x560d9dd09018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x560d9dd08dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560d9dd08ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560d9dd090c8 <line:114:22>
|-FunctionDecl 0x560d9dd093b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x560d9dd09130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560d9dd09228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x560d9dd09460 <col:88>
|-FunctionDecl 0x560d9dd09718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560d9dd094c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560d9dd09548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x560d9dd095d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560d9dd097d0 <col:62>
|-FunctionDecl 0x560d9dd09948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x560d9dd09838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x560d9dd099f0 <col:63>
|-FunctionDecl 0x560d9dd09b18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x560d9dd09bb8 <col:47>
|-FunctionDecl 0x560d9dd09cc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x560d9dd09c28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560d9dd09d68 <col:69>
|-FunctionDecl 0x560d9dd09e70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x560d9dd09dd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560d9dd09f18 <col:69>
|-FunctionDecl 0x560d9dd0a1d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560d9dd09f80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560d9dd0a0b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x560d9dd0a288 <col:88>
|-TypedefDecl 0x560d9dd0a318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x560d9dd0a2e0 '__clock_t' sugar
|   |-Typedef 0x560d9dd046c8 '__clock_t'
|   `-BuiltinType 0x560d9dc9cf30 'long'
|-TypedefDecl 0x560d9dd0a3c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x560d9dd0a370 '__clockid_t' sugar
|   |-Typedef 0x560d9dd04ab8 '__clockid_t'
|   `-BuiltinType 0x560d9dc9cf10 'int'
|-TypedefDecl 0x560d9dd0a458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x560d9dd0a420 '__timer_t' sugar
|   |-Typedef 0x560d9dd04b28 '__timer_t'
|   `-PointerType 0x560d9dc9d630 'void *'
|     `-BuiltinType 0x560d9dc9ce70 'void'
|-RecordDecl 0x560d9dd0a4b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x560d9dd0a570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x560d9dd0a5d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x560d9dd0a640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x560d9dd0a6a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x560d9dd0a710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x560d9dd0a778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x560d9dd0a7e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x560d9dd0a848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x560d9dd0a8b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x560d9dd0a918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x560d9dd0a980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x560d9dd0a9d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x560d9dd0aa98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x560d9dd0ab08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x560d9dd0abb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x560d9dd0ad80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x560d9dd0ae20 <col:45>
|-FunctionDecl 0x560d9dd0b000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x560d9dd0aef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x560d9dd0b0a8 <col:54>
|-FunctionDecl 0x560d9dd0b2a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x560d9dd0b110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x560d9dd0b188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x560d9dd0b358 <line:158:22>
| `-ConstAttr 0x560d9dd0bff0 <col:63>
|-FunctionDecl 0x560d9dd0c1f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560d9dd0c0e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560d9dd0c298 <col:56>
|-FunctionDecl 0x560d9dd0c640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x560d9dd0c308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x560d9dd0c380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560d9dd0c400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x560d9dd0c4f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x560d9dd0c700 <col:54>
|-RecordDecl 0x560d9dd0c758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x560d9dd0c808 parent 0x560d9dc9ce18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x560d9dd0ca68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x560d9dd0cb08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x560d9dd0cb70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x560d9dd0cbd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x560d9dd0ccc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x560d9dd0cde8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x560d9dd0cd90 'struct __locale_struct *'
|   `-ElaboratedType 0x560d9dd0cd20 'struct __locale_struct' sugar
|     `-RecordType 0x560d9dd0c7e0 'struct __locale_struct'
|       `-Record 0x560d9dd0c758 '__locale_struct'
|-TypedefDecl 0x560d9dd0ce98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x560d9dd0ce60 '__locale_t' sugar
|   |-Typedef 0x560d9dd0cde8 '__locale_t'
|   `-PointerType 0x560d9dd0cd90 'struct __locale_struct *'
|     `-ElaboratedType 0x560d9dd0cd20 'struct __locale_struct' sugar
|       `-RecordType 0x560d9dd0c7e0 'struct __locale_struct'
|         `-Record 0x560d9dd0c758 '__locale_struct'
|-FunctionDecl 0x560d9dd0e2a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x560d9dd0cf08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x560d9dd0cf80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560d9dd0e028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x560d9dd0e0b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560d9dd0e130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x560d9dd0e368 <col:40>
|-FunctionDecl 0x560d9dd0e558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560d9dd0e430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x560d9dd0e600 <col:66>
|-FunctionDecl 0x560d9dd0e710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560d9dd0e668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x560d9dd0e7b8 <col:69>
|-FunctionDecl 0x560d9dd0e9e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560d9dd0e820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560d9dd0e8b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560d9dd0ea98 <col:52>
|-FunctionDecl 0x560d9dd0ec40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560d9dd0eb00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560d9dd0eb90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560d9dd0ecf0 <col:55>
|-FunctionDecl 0x560d9dd0ee88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x560d9dd0ed70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x560d9dd0ef30 <col:62>
|-FunctionDecl 0x560d9dd0f168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x560d9dd0ef98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x560d9dd0f210 <col:60>
|-FunctionDecl 0x560d9dd0f438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560d9dd0f290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560d9dd0f310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x560d9dd0f4e8 <col:44>
|-FunctionDecl 0x560d9dd0f6f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560d9dd0f550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560d9dd0f5d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x560d9dd0f7a8 <col:49>
|-VarDecl 0x560d9dd0f8a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x560d9dd0f928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x560d9dd0f9a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x560d9dd0fa70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x560d9dd0fba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x560d9dd0fc40 <col:42>
|-VarDecl 0x560d9dd0fcb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x560d9dd0fd30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x560d9dd0feb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x560d9dd0fda8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x560d9dd0ff60 <col:57>
|-FunctionDecl 0x560d9dd100d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560d9dd0ffe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560d9dd10178 <col:56>
|-FunctionDecl 0x560d9dd10288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560d9dd101f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x560d9dd10330 <col:59>
|-FunctionDecl 0x560d9dd10438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x560d9dd103a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x560d9dd104e0 <col:48>
| `-ConstAttr 0x560d9dd10538 <col:89>
|-FunctionDecl 0x560d9dd10798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560d9dd105e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x560d9dd10678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x560d9dd109f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560d9dd10888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560d9dd10918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x560d9dd10aa8 <col:88>
|-FunctionDecl 0x560d9dd10c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560d9dd10b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560d9dd10ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x560d9dd10cf0 <col:88>
|-FunctionDecl 0x560d9dd10f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x560d9dd10d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560d9dd10de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x560d9dd10fb8 <line:209:22>
|-FunctionDecl 0x560d9dd11358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560d9dd11020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560d9dd110e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x560d9dd11170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x560d9dd11200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x560d9dd11658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x560d9dd11458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x560d9dd11530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x560d9dd11708 <col:85>
|-FunctionDecl 0x560d9dd11af8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x560d9dd11770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560d9dd118a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x560d9dd119b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x560d9dd11bb0 <col:52>
|-FunctionDecl 0x560d9dd11d28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x560d9dd11c18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560d9dd11dd0 <col:61>
|-FunctionDecl 0x560d9dd12248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x560d9dd11e38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560d9dd11eb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x560d9dd11fe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x560d9dd120f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x560d9dd12308 <col:62>
|-FunctionDecl 0x560d9dd12528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x560d9dd12370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560d9dd12400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x560d9dd125d8 <line:222:22>
|-FunctionDecl 0x560d9dd126d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x560d9dd12640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560d9dd12780 <col:65>
|-TypedefDecl 0x560d9dd127f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x560d9dc9cfd0 'unsigned long'
|-RecordDecl 0x560d9dd12848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x560d9dd12990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560d9dd129f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560d9dd12aa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x560d9dd12a50 'union pthread_attr_t' sugar
|   `-RecordType 0x560d9dd128d0 'union pthread_attr_t'
|     `-Record 0x560d9dd12848 'pthread_attr_t'
|-RecordDecl 0x560d9dd12b00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x560d9dd12c78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x560d9dd12cf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x560d9dd12da0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x560d9dd12d40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x560d9dd12b80 'struct __pthread_internal_list'
|     `-Record 0x560d9dd12b00 '__pthread_internal_list'
|-RecordDecl 0x560d9dd12e10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x560d9dd12eb8 parent 0x560d9dc9ce18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x560d9dd12f90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560d9dd12ff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x560d9dd13060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x560d9dd17110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x560d9dd17178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x560d9dd171e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x560d9dd17268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x560d9dd17320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x560d9dd17410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x560d9dd17478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560d9dd17600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x560d9dd175a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x560d9dd12e90 'pthread_mutex_t'
|     `-Record 0x560d9dd12e10 ''
|-RecordDecl 0x560d9dd17670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x560d9dd177b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560d9dd17818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560d9dd178d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x560d9dd17870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x560d9dd176f0 'pthread_mutexattr_t'
|     `-Record 0x560d9dd17670 ''
|-RecordDecl 0x560d9dd17940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x560d9dd179e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x560d9dd17ab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560d9dd17b18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x560d9dd17b80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x560d9dd17be8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x560d9dd17c50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x560d9dd17cb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x560d9dd17d20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x560d9dd17d88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x560d9dd17e40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_8/safe014_rmo.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_8/safe014_rmo.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x560d9dd17f30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x560d9dd17f98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x560d9dd19130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x560d9dd18070 'union pthread_cond_t' sugar
|   `-RecordType 0x560d9dd179c0 'pthread_cond_t'
|     `-Record 0x560d9dd17940 ''
|-RecordDecl 0x560d9dd191a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x560d9dd192a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560d9dd19308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560d9dd193c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x560d9dd19360 'union pthread_condattr_t' sugar
|   `-RecordType 0x560d9dd19220 'pthread_condattr_t'
|     `-Record 0x560d9dd191a0 ''
|-TypedefDecl 0x560d9dd19448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x560d9dc9cfb0 'unsigned int'
|-TypedefDecl 0x560d9dd194b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x560d9dc9cf10 'int'
|-RecordDecl 0x560d9dd19510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x560d9dd195b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x560d9dd19680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560d9dd196e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x560d9dd19750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x560d9dd197b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x560d9dd19820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x560d9dd19888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x560d9dd198f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x560d9dd19958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x560d9dd199c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x560d9dd19a28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x560d9dd19a90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x560d9dd19b40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_8/safe014_rmo.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_8/safe014_rmo.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x560d9dd19be8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560d9dd19c50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560d9dd19da0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x560d9dd19d40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x560d9dd19590 'pthread_rwlock_t'
|     `-Record 0x560d9dd19510 ''
|-RecordDecl 0x560d9dd19e10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x560d9dd19f50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x560d9dd19fb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560d9dd1a070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x560d9dd1a010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x560d9dd19e90 'pthread_rwlockattr_t'
|     `-Record 0x560d9dd19e10 ''
|-TypedefDecl 0x560d9dd1b140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x560d9dc9cf14 'volatile int' volatile
|   `-BuiltinType 0x560d9dc9cf10 'int'
|-RecordDecl 0x560d9dd1b198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x560d9dd1b2e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x560d9dd1b348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560d9dd1b400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x560d9dd1b3a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x560d9dd1b220 'pthread_barrier_t'
|     `-Record 0x560d9dd1b198 ''
|-RecordDecl 0x560d9dd1b470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x560d9dd1b570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560d9dd1b5d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560d9dd1b690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x560d9dd1b630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x560d9dd1b4f0 'pthread_barrierattr_t'
|     `-Record 0x560d9dd1b470 ''
|-TypedefDecl 0x560d9dd1b7a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x560d9dd1b740 'long [8]' 8 
|   `-BuiltinType 0x560d9dc9cf30 'long'
|-EnumDecl 0x560d9dd1b800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x560d9dd1b8c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x560d9dd1b918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x560d9dd1b968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x560d9dd1ba38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x560d9dd1ba88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x560d9dd1bad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x560d9dd1bb28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x560d9dd1bbb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x560d9dd1bb98 <col:26> 'int'
| |   `-DeclRefExpr 0x560d9dd1bb78 <col:26> 'int' EnumConstant 0x560d9dd1ba38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x560d9dd1bc38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x560d9dd1bc20 <col:29> 'int'
| |   `-DeclRefExpr 0x560d9dd1bc00 <col:29> 'int' EnumConstant 0x560d9dd1ba88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x560d9dd1bcc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x560d9dd1bca8 <col:30> 'int'
| |   `-DeclRefExpr 0x560d9dd1bc88 <col:30> 'int' EnumConstant 0x560d9dd1bad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x560d9dd1bd48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x560d9dd1bd30 <col:27> 'int'
|     `-DeclRefExpr 0x560d9dd1bd10 <col:27> 'int' EnumConstant 0x560d9dd1bbb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x560d9dd1bd98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x560d9dd1be68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x560d9dd1bef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x560d9dd1bed8 <col:30> 'int'
| |   `-DeclRefExpr 0x560d9dd1beb8 <col:30> 'int' EnumConstant 0x560d9dd1be68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x560d9dd1bf40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x560d9dd1bfc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x560d9dd1bfb0 <col:29> 'int'
|     `-DeclRefExpr 0x560d9dd1bf90 <col:29> 'int' EnumConstant 0x560d9dd1bf40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x560d9dd1c018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x560d9dd1c0e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x560d9dd1c150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x560d9dd1c1a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x560d9dd1c1f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x560d9dd1c2b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x560d9dd1c308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x560d9dd1c358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x560d9dd1c3e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x560d9dd1c3c8 <col:31> 'int'
|     `-DeclRefExpr 0x560d9dd1c3a8 <col:31> 'int' EnumConstant 0x560d9dd1c2b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x560d9dd1c430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x560d9dd1c4f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x560d9dd1c548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x560d9dd1c598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x560d9dd1c668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x560d9dd1c6b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x560d9dd1c708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x560d9dd1c7d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x560d9dd1c828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x560d9dd1c878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x560d9dd1cab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x560d9dd1cb20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x560d9dd1cb88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x560d9dd1cca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x560d9dd1ccf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x560d9dd1cdc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x560d9dd1ce18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x560d9dd1ce68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x560d9dd1cf38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x560d9dd1cf88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x560d9dd1d5b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x560d9dd1d080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x560d9dd1d1a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560d9dd1d3a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x560d9dd1d420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x560d9dd1d678 <col:47>
| |-NonNullAttr 0x560d9dd1d6d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x560d9dd1d708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x560d9dd1d830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x560d9dd1d760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x560d9dd1da88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x560d9dd1d8e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x560d9dd1d968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x560d9dd1dc58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x560d9dd1db48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x560d9dd1dd00 <col:60>
|-FunctionDecl 0x560d9dd1de50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x560d9dd1def0 <col:54>
| `-ConstAttr 0x560d9dd1df48 <col:95>
|-FunctionDecl 0x560d9dd1f990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x560d9dd1df80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560d9dd1dff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x560d9dd1fa40 <line:395:19>
| `-ConstAttr 0x560d9dd1fa98 <col:60>
|-FunctionDecl 0x560d9dd1fc68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560d9dd1fb30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560d9dd1fd10 <col:71>
| `-NonNullAttr 0x560d9dd1fd68 <col:112, col:126> 1
|-FunctionDecl 0x560d9dd1fe70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560d9dd1fdb8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560d9dd1ff18 <line:398:22>
| `-NonNullAttr 0x560d9dd1ff70 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd20198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x560d9dd1ffb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560d9dd20038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x560d9dd20248 <line:401:22>
| `-NonNullAttr 0x560d9dd202a0 <col:63, col:80> 1 2
|-FunctionDecl 0x560d9dd204a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560d9dd202e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560d9dd20368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x560d9dd20558 <line:404:22>
| `-NonNullAttr 0x560d9dd205b0 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd20808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x560d9dd205f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560d9dd206a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x560d9dd208b8 <line:407:22>
| `-NonNullAttr 0x560d9dd20910 <col:63, col:80> 1 2
|-FunctionDecl 0x560d9dd21b68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560d9dd219b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560d9dd21a28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560d9dd21c18 <line:410:22>
| `-NonNullAttr 0x560d9dd21c70 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd21ea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560d9dd21cb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560d9dd21d48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560d9dd21f58 <line:413:22>
| `-NonNullAttr 0x560d9dd21fb0 <col:63, col:80> 1 2
|-FunctionDecl 0x560d9dd221e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560d9dd21ff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x560d9dd22088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x560d9dd22298 <col:37>
| `-NonNullAttr 0x560d9dd222f0 <col:78, col:95> 1 2
|-FunctionDecl 0x560d9dd224d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560d9dd22338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560d9dd223b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x560d9dd22588 <line:419:22>
| `-NonNullAttr 0x560d9dd225e0 <col:63, col:80> 1 2
|-FunctionDecl 0x560d9dd22768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560d9dd22628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560d9dd226a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x560d9dd22818 <line:421:22>
| `-NonNullAttr 0x560d9dd22870 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd22a38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560d9dd228b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560d9dd22938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x560d9dd22ae8 <line:424:22>
| `-NonNullAttr 0x560d9dd22b40 <col:63, col:80> 1 2
|-FunctionDecl 0x560d9dd22cc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560d9dd22b88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560d9dd22c08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x560d9dd22d78 <line:427:22>
| `-NonNullAttr 0x560d9dd22dd0 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd22f78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560d9dd22e18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560d9dd22e98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x560d9dd23028 <line:430:22>
| `-NonNullAttr 0x560d9dd23080 <col:63, col:80> 1 2
|-FunctionDecl 0x560d9dd23208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560d9dd230c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560d9dd23148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x560d9dd232b8 <line:432:22>
| `-NonNullAttr 0x560d9dd23310 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd23538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x560d9dd23358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560d9dd233d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x560d9dd235e8 <line:435:22>
| |-NonNullAttr 0x560d9dd23640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x560d9dd23678 <col:100> "" ""
|-FunctionDecl 0x560d9dd23888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x560d9dd236c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560d9dd23748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x560d9dd23938 <line:438:22>
| |-NonNullAttr 0x560d9dd23990 <col:63, col:77> 1
| `-DeprecatedAttr 0x560d9dd239d8 <col:97> "" ""
|-FunctionDecl 0x560d9dd23bc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560d9dd23a28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560d9dd23aa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560d9dd23c78 <line:441:22>
| `-NonNullAttr 0x560d9dd23cd0 <col:63, col:80> 1 2
|-FunctionDecl 0x560d9dd23e50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560d9dd23d18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560d9dd23d90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560d9dd23f00 <line:444:22>
| `-NonNullAttr 0x560d9dd23f58 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd24248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560d9dd23fa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560d9dd24028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x560d9dd240a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560d9dd24300 <line:448:22>
| `-NonNullAttr 0x560d9dd24358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x560d9dd24608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x560d9dd243b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560d9dd24430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x560d9dd244a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560d9dd246c0 <col:43>
| `-NonNullAttr 0x560d9dd24718 <col:84, col:98> 1
|-FunctionDecl 0x560d9dd24a20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560d9dd24768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560d9dd247e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x560d9dd24878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x560d9dd24ad8 <line:453:22>
| `-NonNullAttr 0x560d9dd24b30 <col:63, col:77> 3
|-FunctionDecl 0x560d9dd24e08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560d9dd24b78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560d9dd24bf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x560d9dd24c88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560d9dd24ec0 <line:457:22>
| `-NonNullAttr 0x560d9dd24f18 <col:63, col:80> 2 3
|-FunctionDecl 0x560d9dd25108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x560d9dd24f68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560d9dd24fe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x560d9dd251b8 <line:459:22>
|-FunctionDecl 0x560d9dd25588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x560d9dd25280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x560d9dd25420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x560d9dd25638 <col:52, col:69> 1 2
|-FunctionDecl 0x560d9dd257e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x560d9dd256c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x560d9dd25740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x560d9dd259f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x560d9dd258a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x560d9dd25928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x560d9dd25b48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x560d9dd25ab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x560d9dd25c88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x560d9dd25d28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x560d9dd25dd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x560d9dd25ec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x560d9dd25f30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x560d9dd26100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_8/safe014_rmo.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x560d9dd261f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x560d9dd262b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x560d9dd26250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x560d9dd25db0 '__pthread_unwind_buf_t'
| |   `-Record 0x560d9dd25d28 ''
| `-AlignedAttr 0x560d9dd26308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x560d9dd26380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x560d9dd264e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x560d9dd26548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x560d9dd265b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x560d9dd26618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x560d9dd26820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560d9dd26710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560d9dd26a00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560d9dd268d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560d9dd26bc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560d9dd26ab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x560d9dd26c68 <line:488:22>
|-RecordDecl 0x560d9dd26cc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x560d9dd26fd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x560d9dd26e38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x560d9dd26eb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x560d9dd27088 <col:86>
| `-ReturnsTwiceAttr 0x560d9dd270e0 <col:12> Implicit
|-FunctionDecl 0x560d9dd27408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560d9dd271b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x560d9dd272c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x560d9dd274b8 <line:494:22>
| `-NonNullAttr 0x560d9dd27510 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd27688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560d9dd27558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560d9dd27730 <line:496:22>
| `-NonNullAttr 0x560d9dd27788 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd27890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560d9dd277d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560d9dd27938 <line:498:22>
| `-NonNullAttr 0x560d9dd27990 <col:52, col:66> 1
|-FunctionDecl 0x560d9dd28ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560d9dd28a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560d9dd28b80 <line:500:22>
| `-NonNullAttr 0x560d9dd28bd8 <col:52, col:66> 1
|-FunctionDecl 0x560d9dd28e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560d9dd28c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560d9dd28cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560d9dd28ec8 <col:36>
| `-NonNullAttr 0x560d9dd28f20 <col:66, col:83> 1 2
|-FunctionDecl 0x560d9dd29020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560d9dd28f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560d9dd290c8 <line:505:22>
| `-NonNullAttr 0x560d9dd29120 <col:52, col:66> 1
|-FunctionDecl 0x560d9dd293b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560d9dd291d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560d9dd29250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560d9dd29468 <line:509:22>
| `-NonNullAttr 0x560d9dd294c0 <col:63, col:80> 1 2
|-FunctionDecl 0x560d9dd29788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x560d9dd29508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560d9dd29588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x560d9dd29608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x560d9dd29840 <line:513:22>
| `-NonNullAttr 0x560d9dd29898 <col:63, col:80> 1 3
|-FunctionDecl 0x560d9dd29a30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560d9dd298e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560d9dd29ad8 <line:515:22>
| `-NonNullAttr 0x560d9dd29b30 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd29d18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560d9dd29be0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560d9dd29dc0 <line:517:22>
| `-NonNullAttr 0x560d9dd29e18 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd29f20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560d9dd29e68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560d9dd29fc8 <line:519:22>
| `-NonNullAttr 0x560d9dd2a020 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd2a248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560d9dd2a068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560d9dd2a0e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x560d9dd2a2f8 <line:523:22>
| `-NonNullAttr 0x560d9dd2a350 <col:63, col:80> 1 2
|-FunctionDecl 0x560d9dd2a558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560d9dd2a398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560d9dd2a418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x560d9dd2a608 <line:526:22>
| `-NonNullAttr 0x560d9dd2a660 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd2a808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560d9dd2a6a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560d9dd2a728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x560d9dd2a8b8 <line:529:22>
| `-NonNullAttr 0x560d9dd2a910 <col:63, col:80> 1 2
|-FunctionDecl 0x560d9dd2ab00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560d9dd2a958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560d9dd2aa40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x560d9dd2abb0 <line:531:22>
| `-NonNullAttr 0x560d9dd2ac08 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd2adb8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560d9dd2ac58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560d9dd2acd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x560d9dd2ae68 <line:535:22>
| `-NonNullAttr 0x560d9dd2aec0 <col:63, col:80> 1 2
|-FunctionDecl 0x560d9dd2b048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560d9dd2af08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560d9dd2af88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x560d9dd2b0f8 <line:538:22>
| `-NonNullAttr 0x560d9dd2b150 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd2b2f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560d9dd2b198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560d9dd2b218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560d9dd2b3a8 <line:542:22>
| `-NonNullAttr 0x560d9dd2b400 <col:63, col:80> 1 2
|-FunctionDecl 0x560d9dd2b588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560d9dd2b448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560d9dd2b4c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x560d9dd2b638 <line:545:22>
| `-NonNullAttr 0x560d9dd2b690 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd2b878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x560d9dd2b6d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x560d9dd2b758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x560d9dd2b928 <line:548:22>
| `-NonNullAttr 0x560d9dd2b980 <col:63, col:80> 1 2
|-FunctionDecl 0x560d9dd2cb38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560d9dd2b9c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560d9dd2ca78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x560d9dd2cbe8 <line:551:22>
| `-NonNullAttr 0x560d9dd2cc40 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd2cf78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x560d9dd2cd20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560d9dd2ce30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x560d9dd2d028 <col:29>
| `-NonNullAttr 0x560d9dd2d080 <col:70, col:84> 1
|-FunctionDecl 0x560d9dd2d1f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560d9dd2d0c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560d9dd2d2a0 <line:556:22>
| `-NonNullAttr 0x560d9dd2d2f8 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd2d400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560d9dd2d348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560d9dd2d4a8 <line:558:22>
| `-NonNullAttr 0x560d9dd2d500 <col:52, col:66> 1
|-FunctionDecl 0x560d9dd2d600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560d9dd2d548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560d9dd2d6a8 <line:560:19>
| `-NonNullAttr 0x560d9dd2d700 <col:49, col:63> 1
|-FunctionDecl 0x560d9dd2d938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560d9dd2d748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560d9dd2d7d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560d9dd2d9e8 <col:39>
| `-NonNullAttr 0x560d9dd2da70 <col:69, col:86> 1 2
|-FunctionDecl 0x560d9dd2db70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560d9dd2dab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560d9dd2dc18 <line:565:22>
| `-NonNullAttr 0x560d9dd2dc70 <col:52, col:66> 1
|-FunctionDecl 0x560d9dd2dd70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560d9dd2dcb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560d9dd2de18 <line:567:22>
| `-NonNullAttr 0x560d9dd2de70 <col:52, col:66> 1
|-FunctionDecl 0x560d9dd2e028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560d9dd2deb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560d9dd2df48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560d9dd2e0d8 <col:39>
| `-NonNullAttr 0x560d9dd2e130 <col:69, col:86> 1 2
|-FunctionDecl 0x560d9dd2e230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560d9dd2e178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560d9dd2e2d8 <line:572:22>
| `-NonNullAttr 0x560d9dd2e330 <col:52, col:66> 1
|-FunctionDecl 0x560d9dd2e518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560d9dd2e3e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560d9dd2e5c0 <line:574:22>
| `-NonNullAttr 0x560d9dd2e618 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd2e720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560d9dd2e668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560d9dd2e7c8 <line:576:22>
| `-NonNullAttr 0x560d9dd2e820 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd2ea80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560d9dd2e868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560d9dd2e8e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x560d9dd2eb30 <line:580:22>
| `-NonNullAttr 0x560d9dd2eb88 <col:63, col:80> 1 2
|-FunctionDecl 0x560d9dd2ed98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560d9dd2ebd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560d9dd2ec58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x560d9dd2ee48 <line:583:22>
| `-NonNullAttr 0x560d9dd2eea0 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd2f048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560d9dd2eee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560d9dd2ef68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x560d9dd2f0f8 <line:587:22>
| `-NonNullAttr 0x560d9dd2f150 <col:63, col:80> 1 2
|-FunctionDecl 0x560d9dd2f2d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560d9dd2f198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560d9dd2f218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x560d9dd2f388 <col:36>
| `-NonNullAttr 0x560d9dd2f3e0 <col:77, col:91> 1
|-FunctionDecl 0x560d9dd2f718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x560d9dd2f4c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560d9dd2f5d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x560d9dd2f7c8 <line:592:22>
| `-NonNullAttr 0x560d9dd2f820 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd2f998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560d9dd2f868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560d9dd2fa40 <line:594:22>
| `-NonNullAttr 0x560d9dd2fac0 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd2fbc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560d9dd2fb08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560d9dd2fc68 <line:596:22>
| `-NonNullAttr 0x560d9dd2fcc0 <col:52, col:66> 1
|-FunctionDecl 0x560d9dd2fdc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560d9dd2fd08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560d9dd2fe68 <line:598:22>
| `-NonNullAttr 0x560d9dd2fec0 <col:52, col:66> 1
|-FunctionDecl 0x560d9dd300e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x560d9dd2ff08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560d9dd2ff80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x560d9dd30198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x560d9dd304c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560d9dd30218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560d9dd30290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560d9dd30320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x560d9dd30580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x560d9dd30798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560d9dd30660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560d9dd30840 <line:607:22>
| `-NonNullAttr 0x560d9dd30898 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd309a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560d9dd308e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560d9dd30a48 <line:609:22>
| `-NonNullAttr 0x560d9dd30ad0 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd30cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560d9dd30b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560d9dd30b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x560d9dd30da8 <line:613:22>
| `-NonNullAttr 0x560d9dd30e00 <col:63, col:80> 1 2
|-FunctionDecl 0x560d9dd31008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x560d9dd30e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560d9dd30ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x560d9dd310b8 <col:37>
| `-NonNullAttr 0x560d9dd31110 <col:78, col:92> 1
|-FunctionDecl 0x560d9dd31328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x560d9dd31158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560d9dd31200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x560d9dd313d8 <line:619:22>
| `-NonNullAttr 0x560d9dd31430 <col:63, col:80> 1 2
|-FunctionDecl 0x560d9dd315f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x560d9dd31478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560d9dd314f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x560d9dd316a8 <line:622:22>
| `-NonNullAttr 0x560d9dd31700 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd319a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x560d9dd317e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x560d9dd31860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x560d9dd31a58 <line:624:22>
| `-NonNullAttr 0x560d9dd31ae0 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd31c58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560d9dd31b28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560d9dd31d00 <line:626:22>
| `-NonNullAttr 0x560d9dd31d58 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd31e60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560d9dd31da8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560d9dd31f08 <line:628:22>
| `-NonNullAttr 0x560d9dd31f60 <col:52, col:66> 1
|-FunctionDecl 0x560d9dd32060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560d9dd31fa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560d9dd32108 <line:630:22>
| `-NonNullAttr 0x560d9dd32160 <col:52, col:66> 1
|-FunctionDecl 0x560d9dd32260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560d9dd321a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560d9dd32308 <line:632:22>
| `-NonNullAttr 0x560d9dd32360 <col:52, col:66> 1
|-FunctionDecl 0x560d9dd32738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x560d9dd32440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x560d9dd32550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560d9dd325d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x560d9dd327f0 <line:636:22>
| `-NonNullAttr 0x560d9dd32848 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd329c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560d9dd32898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560d9dd32a70 <line:638:22>
| `-NonNullAttr 0x560d9dd33b00 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd33c00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560d9dd33b48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560d9dd33ca8 <line:640:22>
| `-NonNullAttr 0x560d9dd33d00 <col:52, col:66> 1
|-FunctionDecl 0x560d9dd33ee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560d9dd33db0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560d9dd33f90 <line:642:22>
| `-NonNullAttr 0x560d9dd33fe8 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd340f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560d9dd34038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560d9dd34198 <line:644:22>
| `-NonNullAttr 0x560d9dd341f0 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd34418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560d9dd34238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560d9dd342b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x560d9dd344c8 <line:648:22>
| `-NonNullAttr 0x560d9dd34520 <col:63, col:80> 1 2
|-FunctionDecl 0x560d9dd34728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x560d9dd34568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x560d9dd345e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x560d9dd347d8 <line:651:22>
| `-NonNullAttr 0x560d9dd34830 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd34b98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x560d9dd34910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x560d9dd34a30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x560d9dd34c48 <line:654:22>
| `-NonNullAttr 0x560d9dd34ca0 <col:63, col:77> 1
|-FunctionDecl 0x560d9dd34df8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x560d9dd34ce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560d9dd34ea0 <col:69>
|-FunctionDecl 0x560d9dd35018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x560d9dd34f08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560d9dd350c0 <col:72>
|-FunctionDecl 0x560d9dd352f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x560d9dd35128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x560d9dd351d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x560d9dd353a8 <col:44>
|-FunctionDecl 0x560d9dd355c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x560d9dd35410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560d9dd35488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x560d9dd35678 <line:661:22>
| `-NonNullAttr 0x560d9dd356d0 <col:63, col:77> 2
|-FunctionDecl 0x560d9dd35b30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x560d9dd357b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x560d9dd358c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x560d9dd359d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x560d9dd35be8 <col:47>
|-FunctionDecl 0x560d9dd35cf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x560d9dd35c58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560d9dd35e48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x560d9dd35db0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560d9dd35fa0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x560d9dd35f08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560d9dd36068 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x560d9dd36128 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x560d9dd361e8 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x560d9dd362a0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x560d9dd36320 prev 0x560d9dd362a0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x560d9dd36388 <col:24> 'int' 0
|-VarDecl 0x560d9dd363c0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x560d9dd36440 prev 0x560d9dd363c0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x560d9dd364a8 <col:27> 'int' 0
|-VarDecl 0x560d9dd364e0 <line:676:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x560d9dd36560 prev 0x560d9dd364e0 <line:677:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x560d9dd365c8 <col:27> 'int' 0
|-VarDecl 0x560d9dd36600 <line:678:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x560d9dd36680 prev 0x560d9dd36600 <line:679:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x560d9dd366e8 <col:27> 'int' 0
|-VarDecl 0x560d9dd36718 <line:680:1, col:7> col:7 __unbuffered_p2_EAX$flush_delayed '_Bool'
|-VarDecl 0x560d9dd36798 <line:681:1, col:5> col:5 __unbuffered_p2_EAX$mem_tmp 'int'
|-VarDecl 0x560d9dd36810 <line:682:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x560d9dd36888 <line:683:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x560d9dd36900 <line:684:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x560d9dd36978 <line:685:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x560d9dd369f0 <line:686:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x560d9dd36a68 <line:687:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x560d9dd36b00 <line:688:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x560d9dd36b78 <line:689:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x560d9dd36bf0 <line:690:1, col:7> col:7 used __unbuffered_p2_EAX$read_delayed '_Bool'
|-VarDecl 0x560d9dd36c70 <line:691:1, col:6> col:6 used __unbuffered_p2_EAX$read_delayed_var 'int *'
|-VarDecl 0x560d9dd36cf0 <line:692:1, col:5> col:5 __unbuffered_p2_EAX$w_buff0 'int'
|-VarDecl 0x560d9dd36d68 <line:693:1, col:7> col:7 __unbuffered_p2_EAX$w_buff0_used '_Bool'
|-VarDecl 0x560d9dd36de8 <line:694:1, col:5> col:5 __unbuffered_p2_EAX$w_buff1 'int'
|-VarDecl 0x560d9dd36e60 <line:695:1, col:7> col:7 __unbuffered_p2_EAX$w_buff1_used '_Bool'
|-VarDecl 0x560d9dd36ed8 <line:696:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x560d9dd36f50 <line:697:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x560d9dd36fd0 <line:698:1, col:5> col:5 used x 'int'
|-VarDecl 0x560d9dd37050 prev 0x560d9dd36fd0 <line:699:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x560d9dd370b8 <col:9> 'int' 0
|-VarDecl 0x560d9dd370e8 <line:700:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x560d9dd37168 <line:701:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x560d9dd371e0 <line:702:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x560d9dd37258 <line:703:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x560d9dd372d0 <line:704:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x560d9dd37348 <line:705:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x560d9dd373c0 <line:706:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x560d9dd37438 <line:707:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x560d9dd374b0 <line:708:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x560d9dd37528 <line:709:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x560d9dd375a0 <line:710:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x560d9dd37620 <line:711:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x560d9dd376a0 <line:712:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x560d9dd37718 <line:713:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x560d9dd37798 <line:714:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x560d9dd37810 <line:715:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x560d9dd37890 <line:716:1, col:5> col:5 used y 'int'
|-VarDecl 0x560d9dd37910 prev 0x560d9dd37890 <line:717:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x560d9dd37978 <col:9> 'int' 0
|-VarDecl 0x560d9dd379a8 <line:718:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x560d9dd37a20 <line:719:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x560d9dd37a98 <line:720:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x560d9dd38bd0 prev 0x560d9dd35cf0 <line:721:1, line:748:1> line:721:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x560d9dd38b38 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560d9dd3bb50 <line:722:1, line:748:1>
|   |-CallExpr 0x560d9dd38ce8 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d9dd38cd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d9dd38c78 <col:3> 'void ()' Function 0x560d9dcdcfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d9dd38d60 <line:724:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560d9dd38d08 <col:3> 'int' lvalue Var 0x560d9dd36440 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x560d9dd38d48 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560d9dd38d28 <col:25> 'int' lvalue Var 0x560d9dd37910 'y' 'int'
|   |-CallExpr 0x560d9dd38db8 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d9dd38da0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d9dd38d80 <col:3> 'void ()' Function 0x560d9dcdd060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560d9dd38e10 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d9dd38df8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d9dd38dd8 <col:3> 'void ()' Function 0x560d9dcdcfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d9dd38ed8 <line:727:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x560d9dd38e30 <col:3> '_Bool' lvalue Var 0x560d9dd379a8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x560d9dd38eb8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x560d9dd38ea0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x560d9dd38e50 <col:19> '_Bool (void)' Function 0x560d9dcdc770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x560d9dd38f70 <line:728:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x560d9dd38ef8 <col:3> '_Bool' lvalue Var 0x560d9dd37a98 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x560d9dd38f50 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x560d9dd38f38 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x560d9dd38f18 <col:19> '_Bool (void)' Function 0x560d9dcdc770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x560d9dd38fe8 <line:729:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x560d9dd38f90 <col:3> '_Bool' lvalue Var 0x560d9dd370e8 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x560d9dd38fd0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560d9dd38fb0 <col:21> '_Bool' lvalue Var 0x560d9dd37a98 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x560d9dd39060 <line:730:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560d9dd39008 <col:3> 'int' lvalue Var 0x560d9dd37168 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x560d9dd39048 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560d9dd39028 <col:15> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
|   |-BinaryOperator 0x560d9dd39498 <line:731:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x560d9dd39080 <col:3> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
|   | `-ConditionalOperator 0x560d9dd39468 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x560d9dd39290 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x560d9dd391b0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x560d9dd390d8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x560d9dd390c0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x560d9dd390a0 <col:8> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x560d9dd39190 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x560d9dd39128 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x560d9dd39110 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x560d9dd390f0 <col:27> '_Bool' lvalue Var 0x560d9dd37258 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x560d9dd39178 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x560d9dd39160 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x560d9dd39140 <col:46> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x560d9dd39270 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x560d9dd39208 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x560d9dd391f0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x560d9dd391d0 <col:65> '_Bool' lvalue Var 0x560d9dd37258 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x560d9dd39258 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x560d9dd39240 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x560d9dd39220 <col:84> '_Bool' lvalue Var 0x560d9dd37438 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x560d9dd39450 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560d9dd392b0 <col:101> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
|   |   `-ParenExpr 0x560d9dd39430 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x560d9dd39400 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x560d9dd39370 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560d9dd39328 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560d9dd39310 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560d9dd392d0 <col:106> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560d9dd39358 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560d9dd39340 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560d9dd392f0 <col:124> '_Bool' lvalue Var 0x560d9dd37258 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560d9dd393d0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560d9dd39390 <col:141> 'int' lvalue Var 0x560d9dd376a0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x560d9dd393e8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d9dd393b0 <col:153> 'int' lvalue Var 0x560d9dd37798 'x$w_buff1' 'int'
|   |-BinaryOperator 0x560d9dd399a8 <line:732:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560d9dd394b8 <col:3> 'int' lvalue Var 0x560d9dd376a0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x560d9dd39978 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560d9dd39948 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560d9dd39930 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560d9dd394d8 <col:15> '_Bool' lvalue Var 0x560d9dd37a98 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560d9dd39960 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560d9dd394f8 <col:31> 'int' lvalue Var 0x560d9dd376a0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x560d9dd39910 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560d9dd398e0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560d9dd39708 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560d9dd39628 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560d9dd39550 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560d9dd39538 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560d9dd39518 <col:45> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560d9dd39608 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560d9dd395a0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560d9dd39588 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560d9dd39568 <col:64> '_Bool' lvalue Var 0x560d9dd37258 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x560d9dd395f0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560d9dd395d8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560d9dd395b8 <col:83> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560d9dd396e8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560d9dd39680 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560d9dd39668 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560d9dd39648 <col:102> '_Bool' lvalue Var 0x560d9dd37258 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x560d9dd396d0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560d9dd396b8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560d9dd39698 <col:121> '_Bool' lvalue Var 0x560d9dd37438 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560d9dd398c8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560d9dd39728 <col:138> 'int' lvalue Var 0x560d9dd376a0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x560d9dd398a8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560d9dd39878 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560d9dd397e8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560d9dd397a0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560d9dd39788 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560d9dd39748 <col:151> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560d9dd397d0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560d9dd397b8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560d9dd39768 <col:169> '_Bool' lvalue Var 0x560d9dd37258 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x560d9dd39848 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560d9dd39808 <col:186> 'int' lvalue Var 0x560d9dd376a0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x560d9dd39860 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560d9dd39828 <col:198> 'int' lvalue Var 0x560d9dd376a0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x560d9dd39ed0 <line:733:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560d9dd399c8 <col:3> 'int' lvalue Var 0x560d9dd37798 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x560d9dd39ea0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560d9dd39e70 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560d9dd39e58 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560d9dd399e8 <col:15> '_Bool' lvalue Var 0x560d9dd37a98 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560d9dd39e88 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560d9dd39a08 <col:31> 'int' lvalue Var 0x560d9dd37798 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x560d9dd39e38 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560d9dd39e08 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560d9dd39c30 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560d9dd39b50 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560d9dd39a60 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560d9dd39a48 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560d9dd39a28 <col:45> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560d9dd39b30 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560d9dd39ab0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560d9dd39a98 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560d9dd39a78 <col:64> '_Bool' lvalue Var 0x560d9dd37258 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x560d9dd39b00 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560d9dd39ae8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560d9dd39ac8 <col:83> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560d9dd39c10 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560d9dd39ba8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560d9dd39b90 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560d9dd39b70 <col:102> '_Bool' lvalue Var 0x560d9dd37258 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x560d9dd39bf8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560d9dd39be0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560d9dd39bc0 <col:121> '_Bool' lvalue Var 0x560d9dd37438 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560d9dd39df0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560d9dd39c50 <col:138> 'int' lvalue Var 0x560d9dd37798 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x560d9dd39dd0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560d9dd39da0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560d9dd39d10 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560d9dd39cc8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560d9dd39cb0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560d9dd39c70 <col:151> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560d9dd39cf8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560d9dd39ce0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560d9dd39c90 <col:169> '_Bool' lvalue Var 0x560d9dd37258 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x560d9dd39d70 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560d9dd39d30 <col:186> 'int' lvalue Var 0x560d9dd37798 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x560d9dd39d88 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560d9dd39d50 <col:198> 'int' lvalue Var 0x560d9dd37798 'x$w_buff1' 'int'
|   |-BinaryOperator 0x560d9dd3a478 <line:734:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560d9dd39ef0 <col:3> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560d9dd3a460 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d9dd3a430 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560d9dd3a3e8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560d9dd3a3d0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560d9dd39f10 <col:20> '_Bool' lvalue Var 0x560d9dd37a98 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560d9dd3a418 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560d9dd3a400 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560d9dd39f30 <col:36> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x560d9dd3a3b0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560d9dd3a380 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560d9dd3a140 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560d9dd3a060 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560d9dd39f88 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560d9dd39f70 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560d9dd39f50 <col:55> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560d9dd3a040 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560d9dd39fd8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560d9dd39fc0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560d9dd39fa0 <col:74> '_Bool' lvalue Var 0x560d9dd37258 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x560d9dd3a028 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560d9dd3a010 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560d9dd39ff0 <col:93> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560d9dd3a120 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560d9dd3a0b8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560d9dd3a0a0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560d9dd3a080 <col:112> '_Bool' lvalue Var 0x560d9dd37258 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x560d9dd3a108 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560d9dd3a0f0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560d9dd3a0d0 <col:131> '_Bool' lvalue Var 0x560d9dd37438 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x560d9dd3a368 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560d9dd3a350 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560d9dd3a160 <col:148> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x560d9dd3a330 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560d9dd3a300 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560d9dd3a220 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560d9dd3a1d8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560d9dd3a1c0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560d9dd3a180 <col:166> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560d9dd3a208 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560d9dd3a1f0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560d9dd3a1a0 <col:184> '_Bool' lvalue Var 0x560d9dd37258 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x560d9dd3a2b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560d9dd3a270 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560d9dd3a240 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560d9dd3a2e8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560d9dd3a2d0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560d9dd3a298 <col:212> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560d9dd3aa40 <line:735:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560d9dd3a498 <col:3> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560d9dd3aa28 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d9dd3a9f8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560d9dd3a9b0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560d9dd3a998 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560d9dd3a4b8 <col:20> '_Bool' lvalue Var 0x560d9dd37a98 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560d9dd3a9e0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560d9dd3a9c8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560d9dd3a4d8 <col:36> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x560d9dd3a978 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560d9dd3a948 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560d9dd3a6e8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560d9dd3a608 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560d9dd3a530 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560d9dd3a518 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560d9dd3a4f8 <col:55> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560d9dd3a5e8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560d9dd3a580 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560d9dd3a568 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560d9dd3a548 <col:74> '_Bool' lvalue Var 0x560d9dd37258 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x560d9dd3a5d0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560d9dd3a5b8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560d9dd3a598 <col:93> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560d9dd3a6c8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560d9dd3a660 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560d9dd3a648 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560d9dd3a628 <col:112> '_Bool' lvalue Var 0x560d9dd37258 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x560d9dd3a6b0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560d9dd3a698 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560d9dd3a678 <col:131> '_Bool' lvalue Var 0x560d9dd37438 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x560d9dd3a930 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560d9dd3a918 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560d9dd3a708 <col:148> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x560d9dd3a8f8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560d9dd3a8c8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560d9dd3a7c8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560d9dd3a780 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560d9dd3a768 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560d9dd3a728 <col:166> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560d9dd3a7b0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560d9dd3a798 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560d9dd3a748 <col:184> '_Bool' lvalue Var 0x560d9dd37258 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x560d9dd3a898 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560d9dd3a818 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560d9dd3a7e8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560d9dd3a8b0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560d9dd3a870 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560d9dd3a840 <col:219> 'int' 0
|   |-BinaryOperator 0x560d9dd3aff8 <line:736:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560d9dd3aa60 <col:3> '_Bool' lvalue Var 0x560d9dd37258 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560d9dd3afe0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d9dd3afb0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560d9dd3af68 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560d9dd3af50 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560d9dd3aa80 <col:20> '_Bool' lvalue Var 0x560d9dd37a98 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560d9dd3af98 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560d9dd3af80 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560d9dd3aaa0 <col:36> '_Bool' lvalue Var 0x560d9dd37258 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x560d9dd3af30 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560d9dd3af00 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560d9dd3acc0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560d9dd3abe0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560d9dd3aaf8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560d9dd3aae0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560d9dd3aac0 <col:55> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560d9dd3abc0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560d9dd3ab58 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560d9dd3ab40 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560d9dd3ab10 <col:74> '_Bool' lvalue Var 0x560d9dd37258 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x560d9dd3aba8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560d9dd3ab90 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560d9dd3ab70 <col:93> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560d9dd3aca0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560d9dd3ac38 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560d9dd3ac20 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560d9dd3ac00 <col:112> '_Bool' lvalue Var 0x560d9dd37258 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x560d9dd3ac88 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560d9dd3ac70 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560d9dd3ac50 <col:131> '_Bool' lvalue Var 0x560d9dd37438 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x560d9dd3aee8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560d9dd3aed0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560d9dd3ace0 <col:148> '_Bool' lvalue Var 0x560d9dd37258 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x560d9dd3aeb0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560d9dd3ae80 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560d9dd3ada0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560d9dd3ad58 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560d9dd3ad40 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560d9dd3ad00 <col:166> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560d9dd3ad88 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560d9dd3ad70 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560d9dd3ad20 <col:184> '_Bool' lvalue Var 0x560d9dd37258 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x560d9dd3ae38 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560d9dd3adf0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560d9dd3adc0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560d9dd3ae68 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560d9dd3ae50 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560d9dd3ae18 <col:212> '_Bool' lvalue Var 0x560d9dd37258 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560d9dd3b5c0 <line:737:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560d9dd3b018 <col:3> '_Bool' lvalue Var 0x560d9dd37438 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560d9dd3b5a8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d9dd3b578 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560d9dd3b530 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560d9dd3b518 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560d9dd3b038 <col:20> '_Bool' lvalue Var 0x560d9dd37a98 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560d9dd3b560 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560d9dd3b548 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560d9dd3b058 <col:36> '_Bool' lvalue Var 0x560d9dd37438 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x560d9dd3b4f8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560d9dd3b4c8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560d9dd3b268 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560d9dd3b188 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560d9dd3b0b0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560d9dd3b098 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560d9dd3b078 <col:55> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560d9dd3b168 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560d9dd3b100 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560d9dd3b0e8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560d9dd3b0c8 <col:74> '_Bool' lvalue Var 0x560d9dd37258 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x560d9dd3b150 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560d9dd3b138 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560d9dd3b118 <col:93> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560d9dd3b248 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560d9dd3b1e0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560d9dd3b1c8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560d9dd3b1a8 <col:112> '_Bool' lvalue Var 0x560d9dd37258 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x560d9dd3b230 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560d9dd3b218 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560d9dd3b1f8 <col:131> '_Bool' lvalue Var 0x560d9dd37438 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x560d9dd3b4b0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560d9dd3b498 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560d9dd3b288 <col:148> '_Bool' lvalue Var 0x560d9dd37438 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x560d9dd3b478 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560d9dd3b448 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560d9dd3b348 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560d9dd3b300 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560d9dd3b2e8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560d9dd3b2a8 <col:166> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560d9dd3b330 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560d9dd3b318 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560d9dd3b2c8 <col:184> '_Bool' lvalue Var 0x560d9dd37258 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x560d9dd3b418 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560d9dd3b398 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560d9dd3b368 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560d9dd3b430 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560d9dd3b3f0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560d9dd3b3c0 <col:219> 'int' 0
|   |-BinaryOperator 0x560d9dd3b638 <line:738:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560d9dd3b5e0 <col:3> 'int' lvalue Var 0x560d9dd36560 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x560d9dd3b620 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560d9dd3b600 <col:25> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
|   |-BinaryOperator 0x560d9dd3b768 <line:739:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x560d9dd3b658 <col:3> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
|   | `-ConditionalOperator 0x560d9dd3b738 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x560d9dd3b6f0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560d9dd3b6d8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560d9dd3b678 <col:7> '_Bool' lvalue Var 0x560d9dd370e8 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x560d9dd3b708 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560d9dd3b698 <col:25> 'int' lvalue Var 0x560d9dd37168 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x560d9dd3b720 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x560d9dd3b6b8 <col:37> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
|   |-BinaryOperator 0x560d9dd3b800 <line:740:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x560d9dd3b788 <col:3> '_Bool' lvalue Var 0x560d9dd370e8 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x560d9dd3b7d8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560d9dd3b7a8 <col:28> 'int' 0
|   |-CallExpr 0x560d9dd3b858 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d9dd3b840 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d9dd3b820 <col:3> 'void ()' Function 0x560d9dcdd060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560d9dd3b8b0 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d9dd3b898 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d9dd3b878 <col:3> 'void ()' Function 0x560d9dcdcfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x560d9dd3b908 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d9dd3b8f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d9dd3b8d0 <col:3> 'void ()' Function 0x560d9dcdd060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560d9dd3b960 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d9dd3b948 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d9dd3b928 <col:3> 'void ()' Function 0x560d9dcdcfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d9dd3ba18 <line:745:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560d9dd3b980 <col:3> 'int' lvalue Var 0x560d9dd36320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560d9dd3b9f8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560d9dd3b9e0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560d9dd3b9a0 <col:22> 'int' lvalue Var 0x560d9dd36320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560d9dd3b9c0 <col:41> 'int' 1
|   |-CallExpr 0x560d9dd3ba70 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d9dd3ba58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d9dd3ba38 <col:3> 'void ()' Function 0x560d9dcdd060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560d9dd3bb18 <line:747:3, col:36>
|     `-CallExpr 0x560d9dd3baf8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560d9dd3bae0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560d9dd3ba90 <col:10> 'void *(void)' Function 0x560d9dcdcab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560d9dd3bcd8 prev 0x560d9dd35e48 <line:749:1, line:768:1> line:749:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x560d9dd3bc40 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560d9dd3cf08 <line:750:1, line:768:1>
|   |-CallExpr 0x560d9dd3bdb8 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d9dd3bda0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d9dd3bd80 <col:3> 'void ()' Function 0x560d9dcdcfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d9dd3be18 <line:752:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560d9dd3bdd8 <col:3> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
|   | `-IntegerLiteral 0x560d9dd3bdf8 <col:7> 'int' 1
|   |-CallExpr 0x560d9dd3be70 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d9dd3be58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d9dd3be38 <col:3> 'void ()' Function 0x560d9dcdd060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560d9dd3bec8 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d9dd3beb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d9dd3be90 <col:3> 'void ()' Function 0x560d9dcdcfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d9dd3bf28 <line:755:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560d9dd3bee8 <col:3> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
|   | `-IntegerLiteral 0x560d9dd3bf08 <col:7> 'int' 2
|   |-CallExpr 0x560d9dd3bf80 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d9dd3bf68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d9dd3bf48 <col:3> 'void ()' Function 0x560d9dcdd060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560d9dd3bfd8 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d9dd3bfc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d9dd3bfa0 <col:3> 'void ()' Function 0x560d9dcdcfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d9dd3c2c0 <line:758:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560d9dd3bff8 <col:3> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
|   | `-ConditionalOperator 0x560d9dd3c290 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560d9dd3c0b8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560d9dd3c070 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560d9dd3c058 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560d9dd3c018 <col:7> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560d9dd3c0a0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560d9dd3c088 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560d9dd3c038 <col:25> '_Bool' lvalue Var 0x560d9dd372d0 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x560d9dd3c278 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560d9dd3c0d8 <col:42> 'int' lvalue Var 0x560d9dd376a0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x560d9dd3c258 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560d9dd3c228 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560d9dd3c198 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560d9dd3c150 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560d9dd3c138 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560d9dd3c0f8 <col:55> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560d9dd3c180 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560d9dd3c168 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560d9dd3c118 <col:73> '_Bool' lvalue Var 0x560d9dd374b0 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560d9dd3c1f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560d9dd3c1b8 <col:90> 'int' lvalue Var 0x560d9dd37798 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560d9dd3c210 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d9dd3c1d8 <col:102> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
|   |-BinaryOperator 0x560d9dd3c4c8 <line:759:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560d9dd3c2e0 <col:3> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560d9dd3c4b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d9dd3c480 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560d9dd3c3a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560d9dd3c358 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560d9dd3c340 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560d9dd3c300 <col:20> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560d9dd3c388 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560d9dd3c370 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560d9dd3c320 <col:38> '_Bool' lvalue Var 0x560d9dd372d0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560d9dd3c438 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560d9dd3c3f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560d9dd3c3c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560d9dd3c468 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560d9dd3c450 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d9dd3c418 <col:66> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560d9dd3c7b0 <line:760:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560d9dd3c4e8 <col:3> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560d9dd3c798 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d9dd3c768 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560d9dd3c688 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560d9dd3c5a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560d9dd3c560 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560d9dd3c548 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560d9dd3c508 <col:20> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560d9dd3c590 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560d9dd3c578 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560d9dd3c528 <col:38> '_Bool' lvalue Var 0x560d9dd372d0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x560d9dd3c668 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560d9dd3c620 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560d9dd3c608 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560d9dd3c5c8 <col:56> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560d9dd3c650 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560d9dd3c638 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560d9dd3c5e8 <col:74> '_Bool' lvalue Var 0x560d9dd374b0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560d9dd3c720 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560d9dd3c6d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560d9dd3c6a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560d9dd3c750 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560d9dd3c738 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d9dd3c700 <col:102> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560d9dd3c9b8 <line:761:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560d9dd3c7d0 <col:3> '_Bool' lvalue Var 0x560d9dd372d0 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560d9dd3c9a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d9dd3c970 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560d9dd3c890 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560d9dd3c848 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560d9dd3c830 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560d9dd3c7f0 <col:20> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560d9dd3c878 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560d9dd3c860 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560d9dd3c810 <col:38> '_Bool' lvalue Var 0x560d9dd372d0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560d9dd3c928 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560d9dd3c8e0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560d9dd3c8b0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560d9dd3c958 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560d9dd3c940 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d9dd3c908 <col:66> '_Bool' lvalue Var 0x560d9dd372d0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560d9dd3ccc0 <line:762:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560d9dd3c9d8 <col:3> '_Bool' lvalue Var 0x560d9dd374b0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560d9dd3cca8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d9dd3cc78 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560d9dd3cb98 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560d9dd3ca98 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560d9dd3ca50 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560d9dd3ca38 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560d9dd3c9f8 <col:20> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560d9dd3ca80 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560d9dd3ca68 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560d9dd3ca18 <col:38> '_Bool' lvalue Var 0x560d9dd372d0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x560d9dd3cb78 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560d9dd3cb10 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560d9dd3caf8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560d9dd3cab8 <col:56> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560d9dd3cb60 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560d9dd3cb28 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560d9dd3cad8 <col:74> '_Bool' lvalue Var 0x560d9dd374b0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560d9dd3cc30 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560d9dd3cbe8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560d9dd3cbb8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560d9dd3cc60 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560d9dd3cc48 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d9dd3cc10 <col:102> '_Bool' lvalue Var 0x560d9dd374b0 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x560d9dd3cd18 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d9dd3cd00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d9dd3cce0 <col:3> 'void ()' Function 0x560d9dcdd060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560d9dd3cd70 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d9dd3cd58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d9dd3cd38 <col:3> 'void ()' Function 0x560d9dcdcfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d9dd3ce28 <line:765:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560d9dd3cd90 <col:3> 'int' lvalue Var 0x560d9dd36320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560d9dd3ce08 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560d9dd3cdf0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560d9dd3cdb0 <col:22> 'int' lvalue Var 0x560d9dd36320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560d9dd3cdd0 <col:41> 'int' 1
|   |-CallExpr 0x560d9dd3ce80 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d9dd3ce68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d9dd3ce48 <col:3> 'void ()' Function 0x560d9dcdd060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560d9dd3cef8 <line:767:3, col:36>
|     `-CallExpr 0x560d9dd3ced8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560d9dd3cec0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560d9dd3cea0 <col:10> 'void *(void)' Function 0x560d9dcdcab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560d9dd3d050 prev 0x560d9dd35fa0 <line:769:1, line:803:1> line:769:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x560d9dd3cfb8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560d9dd40d18 <line:770:1, line:803:1>
|   |-CallExpr 0x560d9dd3d130 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d9dd3d118 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d9dd3d0f8 <col:3> 'void ()' Function 0x560d9dcdcfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d9dd3d1c8 <line:772:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x560d9dd3d150 <col:3> '_Bool' lvalue Var 0x560d9dd379a8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x560d9dd3d1a8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x560d9dd3d190 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x560d9dd3d170 <col:19> '_Bool (void)' Function 0x560d9dcdc770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x560d9dd3d260 <line:773:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x560d9dd3d1e8 <col:3> '_Bool' lvalue Var 0x560d9dd37a98 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x560d9dd3d240 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x560d9dd3d228 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x560d9dd3d208 <col:19> '_Bool (void)' Function 0x560d9dcdc770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x560d9dd3d2d8 <line:774:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x560d9dd3d280 <col:3> '_Bool' lvalue Var 0x560d9dd370e8 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x560d9dd3d2c0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560d9dd3d2a0 <col:21> '_Bool' lvalue Var 0x560d9dd37a98 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x560d9dd3d350 <line:775:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560d9dd3d2f8 <col:3> 'int' lvalue Var 0x560d9dd37168 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x560d9dd3d338 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560d9dd3d318 <col:15> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
|   |-BinaryOperator 0x560d9dd3d788 <line:776:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x560d9dd3d370 <col:3> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
|   | `-ConditionalOperator 0x560d9dd3d758 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x560d9dd3d580 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x560d9dd3d4a0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x560d9dd3d3c8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x560d9dd3d3b0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x560d9dd3d390 <col:8> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x560d9dd3d480 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x560d9dd3d418 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x560d9dd3d400 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x560d9dd3d3e0 <col:27> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x560d9dd3d468 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x560d9dd3d450 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x560d9dd3d430 <col:46> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x560d9dd3d560 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x560d9dd3d4f8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x560d9dd3d4e0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x560d9dd3d4c0 <col:65> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x560d9dd3d548 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x560d9dd3d530 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x560d9dd3d510 <col:84> '_Bool' lvalue Var 0x560d9dd37528 'x$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x560d9dd3d740 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560d9dd3d5a0 <col:101> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
|   |   `-ParenExpr 0x560d9dd3d720 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x560d9dd3d6f0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x560d9dd3d660 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560d9dd3d618 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560d9dd3d600 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560d9dd3d5c0 <col:106> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560d9dd3d648 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560d9dd3d630 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560d9dd3d5e0 <col:124> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560d9dd3d6c0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560d9dd3d680 <col:141> 'int' lvalue Var 0x560d9dd376a0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x560d9dd3d6d8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d9dd3d6a0 <col:153> 'int' lvalue Var 0x560d9dd37798 'x$w_buff1' 'int'
|   |-BinaryOperator 0x560d9dd3dcb8 <line:777:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560d9dd3d7a8 <col:3> 'int' lvalue Var 0x560d9dd376a0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x560d9dd3dc88 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560d9dd3dc58 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560d9dd3dc40 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560d9dd3d7c8 <col:15> '_Bool' lvalue Var 0x560d9dd37a98 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560d9dd3dc70 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560d9dd3d7e8 <col:31> 'int' lvalue Var 0x560d9dd376a0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x560d9dd3dc20 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560d9dd3dbf0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560d9dd3d9f8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560d9dd3d918 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560d9dd3d840 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560d9dd3d828 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560d9dd3d808 <col:45> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560d9dd3d8f8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560d9dd3d890 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560d9dd3d878 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560d9dd3d858 <col:64> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x560d9dd3d8e0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560d9dd3d8c8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560d9dd3d8a8 <col:83> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560d9dd3d9d8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560d9dd3d970 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560d9dd3d958 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560d9dd3d938 <col:102> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x560d9dd3d9c0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560d9dd3d9a8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560d9dd3d988 <col:121> '_Bool' lvalue Var 0x560d9dd37528 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560d9dd3dbd8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560d9dd3da18 <col:138> 'int' lvalue Var 0x560d9dd376a0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x560d9dd3dbb8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560d9dd3db88 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560d9dd3dad8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560d9dd3da90 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560d9dd3da78 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560d9dd3da38 <col:151> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560d9dd3dac0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560d9dd3daa8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560d9dd3da58 <col:169> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x560d9dd3db38 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560d9dd3daf8 <col:186> 'int' lvalue Var 0x560d9dd376a0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x560d9dd3db70 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560d9dd3db18 <col:198> 'int' lvalue Var 0x560d9dd376a0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x560d9dd3e1c8 <line:778:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560d9dd3dcd8 <col:3> 'int' lvalue Var 0x560d9dd37798 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x560d9dd3e198 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560d9dd3e168 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560d9dd3e150 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560d9dd3dcf8 <col:15> '_Bool' lvalue Var 0x560d9dd37a98 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560d9dd3e180 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560d9dd3dd18 <col:31> 'int' lvalue Var 0x560d9dd37798 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x560d9dd3e130 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560d9dd3e100 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560d9dd3df28 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560d9dd3de48 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560d9dd3dd70 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560d9dd3dd58 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560d9dd3dd38 <col:45> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560d9dd3de28 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560d9dd3ddc0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560d9dd3dda8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560d9dd3dd88 <col:64> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x560d9dd3de10 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560d9dd3ddf8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560d9dd3ddd8 <col:83> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560d9dd3df08 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560d9dd3dea0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560d9dd3de88 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560d9dd3de68 <col:102> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x560d9dd3def0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560d9dd3ded8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560d9dd3deb8 <col:121> '_Bool' lvalue Var 0x560d9dd37528 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560d9dd3e0e8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560d9dd3df48 <col:138> 'int' lvalue Var 0x560d9dd37798 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x560d9dd3e0c8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560d9dd3e098 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560d9dd3e008 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560d9dd3dfc0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560d9dd3dfa8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560d9dd3df68 <col:151> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560d9dd3dff0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560d9dd3dfd8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560d9dd3df88 <col:169> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x560d9dd3e068 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560d9dd3e028 <col:186> 'int' lvalue Var 0x560d9dd37798 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x560d9dd3e080 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560d9dd3e048 <col:198> 'int' lvalue Var 0x560d9dd37798 'x$w_buff1' 'int'
|   |-BinaryOperator 0x560d9dd3e770 <line:779:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560d9dd3e1e8 <col:3> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560d9dd3e758 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d9dd3e728 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560d9dd3e6e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560d9dd3e6c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560d9dd3e208 <col:20> '_Bool' lvalue Var 0x560d9dd37a98 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560d9dd3e710 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560d9dd3e6f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560d9dd3e228 <col:36> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x560d9dd3e6a8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560d9dd3e678 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560d9dd3e438 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560d9dd3e358 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560d9dd3e280 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560d9dd3e268 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560d9dd3e248 <col:55> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560d9dd3e338 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560d9dd3e2d0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560d9dd3e2b8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560d9dd3e298 <col:74> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x560d9dd3e320 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560d9dd3e308 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560d9dd3e2e8 <col:93> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560d9dd3e418 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560d9dd3e3b0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560d9dd3e398 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560d9dd3e378 <col:112> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x560d9dd3e400 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560d9dd3e3e8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560d9dd3e3c8 <col:131> '_Bool' lvalue Var 0x560d9dd37528 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x560d9dd3e660 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560d9dd3e648 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560d9dd3e458 <col:148> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x560d9dd3e628 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560d9dd3e5f8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560d9dd3e518 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560d9dd3e4d0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560d9dd3e4b8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560d9dd3e478 <col:166> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560d9dd3e500 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560d9dd3e4e8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560d9dd3e498 <col:184> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x560d9dd3e5b0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560d9dd3e568 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560d9dd3e538 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560d9dd3e5e0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560d9dd3e5c8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560d9dd3e590 <col:212> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560d9dd3ed50 <line:780:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560d9dd3e790 <col:3> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560d9dd3ed38 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d9dd3ed08 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560d9dd3ecc0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560d9dd3eca8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560d9dd3e7b0 <col:20> '_Bool' lvalue Var 0x560d9dd37a98 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560d9dd3ecf0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560d9dd3ecd8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560d9dd3e7d0 <col:36> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x560d9dd3ec88 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560d9dd3ec58 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560d9dd3e9e0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560d9dd3e900 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560d9dd3e828 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560d9dd3e810 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560d9dd3e7f0 <col:55> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560d9dd3e8e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560d9dd3e878 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560d9dd3e860 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560d9dd3e840 <col:74> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x560d9dd3e8c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560d9dd3e8b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560d9dd3e890 <col:93> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560d9dd3e9c0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560d9dd3e958 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560d9dd3e940 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560d9dd3e920 <col:112> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x560d9dd3e9a8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560d9dd3e990 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560d9dd3e970 <col:131> '_Bool' lvalue Var 0x560d9dd37528 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x560d9dd3ec40 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560d9dd3ec28 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560d9dd3ea00 <col:148> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x560d9dd3ec08 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560d9dd3ebd8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560d9dd3eac0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560d9dd3ea78 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560d9dd3ea60 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560d9dd3ea20 <col:166> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560d9dd3eaa8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560d9dd3ea90 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560d9dd3ea40 <col:184> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x560d9dd3eba8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560d9dd3eb10 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560d9dd3eae0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560d9dd3ebc0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560d9dd3eb80 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560d9dd3eb38 <col:219> 'int' 0
|   |-BinaryOperator 0x560d9dd3f2f8 <line:781:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560d9dd3ed70 <col:3> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560d9dd3f2e0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d9dd3f2b0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560d9dd3f268 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560d9dd3f250 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560d9dd3ed90 <col:20> '_Bool' lvalue Var 0x560d9dd37a98 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560d9dd3f298 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560d9dd3f280 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560d9dd3edb0 <col:36> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x560d9dd3f230 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560d9dd3f200 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560d9dd3efc0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560d9dd3eee0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560d9dd3ee08 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560d9dd3edf0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560d9dd3edd0 <col:55> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560d9dd3eec0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560d9dd3ee58 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560d9dd3ee40 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560d9dd3ee20 <col:74> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x560d9dd3eea8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560d9dd3ee90 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560d9dd3ee70 <col:93> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560d9dd3efa0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560d9dd3ef38 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560d9dd3ef20 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560d9dd3ef00 <col:112> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x560d9dd3ef88 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560d9dd3ef70 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560d9dd3ef50 <col:131> '_Bool' lvalue Var 0x560d9dd37528 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x560d9dd3f1e8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560d9dd3f1d0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560d9dd3efe0 <col:148> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x560d9dd3f1b0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560d9dd3f180 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560d9dd3f0a0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560d9dd3f058 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560d9dd3f040 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560d9dd3f000 <col:166> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560d9dd3f088 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560d9dd3f070 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560d9dd3f020 <col:184> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x560d9dd3f138 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560d9dd3f0f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560d9dd3f0c0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560d9dd3f168 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560d9dd3f150 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560d9dd3f118 <col:212> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560d9dd3f8c0 <line:782:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560d9dd3f318 <col:3> '_Bool' lvalue Var 0x560d9dd37528 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560d9dd3f8a8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d9dd3f878 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560d9dd3f830 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560d9dd3f818 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560d9dd3f338 <col:20> '_Bool' lvalue Var 0x560d9dd37a98 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560d9dd3f860 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560d9dd3f848 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560d9dd3f358 <col:36> '_Bool' lvalue Var 0x560d9dd37528 'x$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x560d9dd3f7f8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560d9dd3f7c8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560d9dd3f568 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560d9dd3f488 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560d9dd3f3b0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560d9dd3f398 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560d9dd3f378 <col:55> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560d9dd3f468 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560d9dd3f400 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560d9dd3f3e8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560d9dd3f3c8 <col:74> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x560d9dd3f450 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560d9dd3f438 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560d9dd3f418 <col:93> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560d9dd3f548 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560d9dd3f4e0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560d9dd3f4c8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560d9dd3f4a8 <col:112> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x560d9dd3f530 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560d9dd3f518 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560d9dd3f4f8 <col:131> '_Bool' lvalue Var 0x560d9dd37528 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x560d9dd3f7b0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560d9dd3f798 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560d9dd3f588 <col:148> '_Bool' lvalue Var 0x560d9dd37528 'x$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x560d9dd3f778 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560d9dd3f748 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560d9dd3f648 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560d9dd3f600 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560d9dd3f5e8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560d9dd3f5a8 <col:166> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560d9dd3f630 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560d9dd3f618 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560d9dd3f5c8 <col:184> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x560d9dd3f718 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560d9dd3f698 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560d9dd3f668 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560d9dd3f730 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560d9dd3f6f0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560d9dd3f6c0 <col:219> 'int' 0
|   |-BinaryOperator 0x560d9dd3f958 <line:783:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x560d9dd3f8e0 <col:3> '_Bool' lvalue Var 0x560d9dd36bf0 '__unbuffered_p2_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x560d9dd3f930 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560d9dd3f900 <col:45> 'int' 1
|   |-BinaryOperator 0x560d9dd3f9d0 <line:784:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x560d9dd3f978 <col:3> 'int *' lvalue Var 0x560d9dd36c70 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x560d9dd3f9b8 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x560d9dd3f998 <col:43> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
|   |-BinaryOperator 0x560d9dd3fa48 <line:785:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560d9dd3f9f0 <col:3> 'int' lvalue Var 0x560d9dd36680 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x560d9dd3fa30 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560d9dd3fa10 <col:25> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
|   |-BinaryOperator 0x560d9dd3fb90 <line:786:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x560d9dd3fa68 <col:3> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
|   | `-ConditionalOperator 0x560d9dd3fb48 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x560d9dd3fb00 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560d9dd3fae8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560d9dd3fa88 <col:7> '_Bool' lvalue Var 0x560d9dd370e8 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x560d9dd3fb18 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560d9dd3faa8 <col:25> 'int' lvalue Var 0x560d9dd37168 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x560d9dd3fb30 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x560d9dd3fac8 <col:37> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
|   |-BinaryOperator 0x560d9dd3fc28 <line:787:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x560d9dd3fbb0 <col:3> '_Bool' lvalue Var 0x560d9dd370e8 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x560d9dd3fc00 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560d9dd3fbd0 <col:28> 'int' 0
|   |-CallExpr 0x560d9dd3fc80 <line:788:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d9dd3fc68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d9dd3fc48 <col:3> 'void ()' Function 0x560d9dcdd060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560d9dd3fcd8 <line:789:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d9dd3fcc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d9dd3fca0 <col:3> 'void ()' Function 0x560d9dcdcfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d9dd3fd38 <line:790:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560d9dd3fcf8 <col:3> 'int' lvalue Var 0x560d9dd37910 'y' 'int'
|   | `-IntegerLiteral 0x560d9dd3fd18 <col:7> 'int' 1
|   |-CallExpr 0x560d9dd3fd90 <line:791:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d9dd3fd78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d9dd3fd58 <col:3> 'void ()' Function 0x560d9dcdd060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560d9dd3fde8 <line:792:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d9dd3fdd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d9dd3fdb0 <col:3> 'void ()' Function 0x560d9dcdcfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d9dd400d0 <line:793:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560d9dd3fe08 <col:3> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
|   | `-ConditionalOperator 0x560d9dd400a0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560d9dd3fec8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560d9dd3fe80 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560d9dd3fe68 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560d9dd3fe28 <col:7> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560d9dd3feb0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560d9dd3fe98 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560d9dd3fe48 <col:25> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x560d9dd40088 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560d9dd3fee8 <col:42> 'int' lvalue Var 0x560d9dd376a0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x560d9dd40068 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560d9dd40038 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560d9dd3ffa8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560d9dd3ff60 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560d9dd3ff48 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560d9dd3ff08 <col:55> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560d9dd3ff90 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560d9dd3ff78 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560d9dd3ff28 <col:73> '_Bool' lvalue Var 0x560d9dd37528 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560d9dd40008 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560d9dd3ffc8 <col:90> 'int' lvalue Var 0x560d9dd37798 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560d9dd40020 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d9dd3ffe8 <col:102> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
|   |-BinaryOperator 0x560d9dd402d8 <line:794:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560d9dd400f0 <col:3> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560d9dd402c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d9dd40290 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560d9dd401b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560d9dd40168 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560d9dd40150 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560d9dd40110 <col:20> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560d9dd40198 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560d9dd40180 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560d9dd40130 <col:38> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560d9dd40248 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560d9dd40200 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560d9dd401d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560d9dd40278 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560d9dd40260 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d9dd40228 <col:66> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560d9dd405c0 <line:795:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560d9dd402f8 <col:3> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560d9dd405a8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d9dd40578 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560d9dd40498 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560d9dd403b8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560d9dd40370 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560d9dd40358 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560d9dd40318 <col:20> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560d9dd403a0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560d9dd40388 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560d9dd40338 <col:38> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x560d9dd40478 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560d9dd40430 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560d9dd40418 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560d9dd403d8 <col:56> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560d9dd40460 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560d9dd40448 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560d9dd403f8 <col:74> '_Bool' lvalue Var 0x560d9dd37528 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560d9dd40530 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560d9dd404e8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560d9dd404b8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560d9dd40560 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560d9dd40548 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d9dd40510 <col:102> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560d9dd407c8 <line:796:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560d9dd405e0 <col:3> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560d9dd407b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d9dd40780 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560d9dd406a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560d9dd40658 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560d9dd40640 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560d9dd40600 <col:20> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560d9dd40688 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560d9dd40670 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560d9dd40620 <col:38> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560d9dd40738 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560d9dd406f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560d9dd406c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560d9dd40768 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560d9dd40750 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d9dd40718 <col:66> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560d9dd40ab0 <line:797:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560d9dd407e8 <col:3> '_Bool' lvalue Var 0x560d9dd37528 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560d9dd40a98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d9dd40a68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560d9dd40988 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560d9dd408a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560d9dd40860 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560d9dd40848 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560d9dd40808 <col:20> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560d9dd40890 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560d9dd40878 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560d9dd40828 <col:38> '_Bool' lvalue Var 0x560d9dd37348 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x560d9dd40968 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560d9dd40920 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560d9dd40908 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560d9dd408c8 <col:56> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560d9dd40950 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560d9dd40938 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560d9dd408e8 <col:74> '_Bool' lvalue Var 0x560d9dd37528 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560d9dd40a20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560d9dd409d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560d9dd409a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560d9dd40a50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560d9dd40a38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d9dd40a00 <col:102> '_Bool' lvalue Var 0x560d9dd37528 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x560d9dd40b08 <line:798:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d9dd40af0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d9dd40ad0 <col:3> 'void ()' Function 0x560d9dcdd060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560d9dd40b60 <line:799:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d9dd40b48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d9dd40b28 <col:3> 'void ()' Function 0x560d9dcdcfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d9dd40c38 <line:800:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560d9dd40ba0 <col:3> 'int' lvalue Var 0x560d9dd36320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560d9dd40c18 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560d9dd40c00 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560d9dd40bc0 <col:22> 'int' lvalue Var 0x560d9dd36320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560d9dd40be0 <col:41> 'int' 1
|   |-CallExpr 0x560d9dd40c90 <line:801:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d9dd40c78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d9dd40c58 <col:3> 'void ()' Function 0x560d9dcdd060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560d9dd40d08 <line:802:3, col:36>
|     `-CallExpr 0x560d9dd40ce8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560d9dd40cd0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560d9dd40cb0 <col:10> 'void *(void)' Function 0x560d9dcdcab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560d9dd40e48 prev 0x560d9dd36068 <line:804:1, line:806:1> line:804:6 fence 'void ()'
| `-CompoundStmt 0x560d9dd40ee8 <line:805:1, line:806:1>
|-FunctionDecl 0x560d9dd40f18 prev 0x560d9dd36128 <line:807:1, line:809:1> line:807:6 isync 'void ()'
| `-CompoundStmt 0x560d9dd40fb8 <line:808:1, line:809:1>
|-FunctionDecl 0x560d9dd40fe8 prev 0x560d9dd361e8 <line:810:1, line:812:1> line:810:6 lwfence 'void ()'
| `-CompoundStmt 0x560d9dd41088 <line:811:1, line:812:1>
`-FunctionDecl 0x560d9dd410f8 <line:813:1, line:852:1> line:813:5 main 'int ()'
  `-CompoundStmt 0x560d9dd45a48 <line:814:1, line:852:1>
    |-DeclStmt 0x560d9dd41210 <line:815:3, col:18>
    | `-VarDecl 0x560d9dd411a8 <col:3, col:13> col:13 used t2114 'pthread_t':'unsigned long'
    |-CallExpr 0x560d9dd41418 <line:816:3, col:54> 'int'
    | |-ImplicitCastExpr 0x560d9dd41400 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560d9dd41228 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560d9dd1d5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560d9dd41268 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560d9dd41248 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560d9dd411a8 't2114' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560d9dd41458 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560d9dd412e0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x560d9dd412b8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560d9dd41280 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x560d9dd41470 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560d9dd41300 <col:39> 'void *(void *)' Function 0x560d9dd38bd0 'P0' 'void *(void *)'
    | `-ParenExpr 0x560d9dd41380 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x560d9dd41358 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560d9dd41320 <col:52> 'int' 0
    |-DeclStmt 0x560d9dd41500 <line:817:3, col:18>
    | `-VarDecl 0x560d9dd41498 <col:3, col:13> col:13 used t2115 'pthread_t':'unsigned long'
    |-CallExpr 0x560d9dd416a8 <line:818:3, col:54> 'int'
    | |-ImplicitCastExpr 0x560d9dd41690 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560d9dd41518 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560d9dd1d5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560d9dd41558 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560d9dd41538 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560d9dd41498 't2115' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560d9dd416e8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560d9dd415d0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x560d9dd415a8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560d9dd41570 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x560d9dd41700 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560d9dd415f0 <col:39> 'void *(void *)' Function 0x560d9dd3bcd8 'P1' 'void *(void *)'
    | `-ParenExpr 0x560d9dd41670 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x560d9dd41648 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560d9dd41610 <col:52> 'int' 0
    |-DeclStmt 0x560d9dd41790 <line:819:3, col:18>
    | `-VarDecl 0x560d9dd41728 <col:3, col:13> col:13 used t2116 'pthread_t':'unsigned long'
    |-CallExpr 0x560d9dd41938 <line:820:3, col:54> 'int'
    | |-ImplicitCastExpr 0x560d9dd41920 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560d9dd417a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560d9dd1d5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560d9dd417e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560d9dd417c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560d9dd41728 't2116' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560d9dd41978 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560d9dd41860 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x560d9dd41838 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560d9dd41800 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x560d9dd41990 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560d9dd41880 <col:39> 'void *(void *)' Function 0x560d9dd3d050 'P2' 'void *(void *)'
    | `-ParenExpr 0x560d9dd41900 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x560d9dd418d8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560d9dd418a0 <col:52> 'int' 0
    |-CallExpr 0x560d9dd419e0 <line:821:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560d9dd419c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560d9dd419a8 <col:3> 'void ()' Function 0x560d9dcdcfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560d9dd41ab0 <line:822:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x560d9dd41a00 <col:3> '_Bool' lvalue Var 0x560d9dd36ed8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x560d9dd41a98 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x560d9dd41a78 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x560d9dd41a60 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x560d9dd41a20 <col:21> 'int' lvalue Var 0x560d9dd36320 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x560d9dd41a40 <col:41> 'int' 3
    |-CallExpr 0x560d9dd41b08 <line:823:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560d9dd41af0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560d9dd41ad0 <col:3> 'void ()' Function 0x560d9dcdd060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560d9dd41bc8 <line:824:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560d9dd41bb0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560d9dd41b28 <col:3> 'void (int)' Function 0x560d9dcdc940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x560d9dd41c08 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560d9dd41bf0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560d9dd41b48 <col:21> '_Bool' lvalue Var 0x560d9dd36ed8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x560d9dd41c58 <line:825:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560d9dd41c40 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560d9dd41c20 <col:3> 'void ()' Function 0x560d9dcdcfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560d9dd41f40 <line:826:3, col:103> 'int' '='
    | |-DeclRefExpr 0x560d9dd41c78 <col:3> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
    | `-ConditionalOperator 0x560d9dd41f10 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x560d9dd41d38 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x560d9dd41cf0 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x560d9dd41cd8 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x560d9dd41c98 <col:7> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x560d9dd41d20 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x560d9dd41d08 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x560d9dd41cb8 <col:25> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x560d9dd41ef8 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560d9dd41d58 <col:42> 'int' lvalue Var 0x560d9dd376a0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x560d9dd41ed8 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x560d9dd41ea8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x560d9dd41e18 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x560d9dd41dd0 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x560d9dd41db8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x560d9dd41d78 <col:55> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x560d9dd41e00 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x560d9dd41de8 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x560d9dd41d98 <col:73> '_Bool' lvalue Var 0x560d9dd373c0 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560d9dd41e78 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560d9dd41e38 <col:90> 'int' lvalue Var 0x560d9dd37798 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x560d9dd41e90 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x560d9dd41e58 <col:102> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
    |-BinaryOperator 0x560d9dd42148 <line:827:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560d9dd41f60 <col:3> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x560d9dd42130 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560d9dd42100 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560d9dd42020 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560d9dd41fd8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560d9dd41fc0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560d9dd41f80 <col:20> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560d9dd42008 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560d9dd41ff0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560d9dd41fa0 <col:38> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560d9dd420b8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560d9dd42070 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560d9dd42040 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560d9dd420e8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560d9dd420d0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560d9dd42098 <col:66> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x560d9dd42430 <line:828:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560d9dd42168 <col:3> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x560d9dd42418 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560d9dd423e8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560d9dd42308 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560d9dd42228 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560d9dd421e0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560d9dd421c8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560d9dd42188 <col:20> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560d9dd42210 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560d9dd421f8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560d9dd421a8 <col:38> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560d9dd422e8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560d9dd422a0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560d9dd42288 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560d9dd42248 <col:56> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560d9dd422d0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560d9dd422b8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560d9dd42268 <col:74> '_Bool' lvalue Var 0x560d9dd373c0 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560d9dd423a0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560d9dd42358 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560d9dd42328 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560d9dd423d0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560d9dd423b8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560d9dd42380 <col:102> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x560d9dd42638 <line:829:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560d9dd42450 <col:3> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560d9dd42620 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560d9dd425f0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560d9dd42510 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560d9dd424c8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560d9dd424b0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560d9dd42470 <col:20> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560d9dd424f8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560d9dd424e0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560d9dd42490 <col:38> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560d9dd425a8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560d9dd42560 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560d9dd42530 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560d9dd425d8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560d9dd425c0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560d9dd42588 <col:66> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x560d9dd42920 <line:830:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560d9dd42658 <col:3> '_Bool' lvalue Var 0x560d9dd373c0 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560d9dd42908 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560d9dd428d8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560d9dd427f8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560d9dd42718 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560d9dd426d0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560d9dd426b8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560d9dd42678 <col:20> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560d9dd42700 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560d9dd426e8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560d9dd42698 <col:38> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560d9dd427d8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560d9dd42790 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560d9dd42778 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560d9dd42738 <col:56> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560d9dd427c0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560d9dd427a8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560d9dd42758 <col:74> '_Bool' lvalue Var 0x560d9dd373c0 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560d9dd42890 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560d9dd42848 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560d9dd42818 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560d9dd428c0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560d9dd428a8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560d9dd42870 <col:102> '_Bool' lvalue Var 0x560d9dd373c0 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x560d9dd42978 <line:831:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560d9dd42960 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560d9dd42940 <col:3> 'void ()' Function 0x560d9dcdd060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560d9dd429d0 <line:832:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560d9dd429b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560d9dd42998 <col:3> 'void ()' Function 0x560d9dcdcfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560d9dd42a68 <line:833:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x560d9dd429f0 <col:3> '_Bool' lvalue Var 0x560d9dd379a8 'weak$$choice0' '_Bool'
    | `-CallExpr 0x560d9dd42a48 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x560d9dd42a30 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x560d9dd42a10 <col:19> '_Bool (void)' Function 0x560d9dcdc770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x560d9dd42b00 <line:834:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x560d9dd42a88 <col:3> '_Bool' lvalue Var 0x560d9dd37a98 'weak$$choice2' '_Bool'
    | `-CallExpr 0x560d9dd42ae0 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x560d9dd42ac8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x560d9dd42aa8 <col:19> '_Bool (void)' Function 0x560d9dcdc770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x560d9dd42b78 <line:835:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x560d9dd42b20 <col:3> '_Bool' lvalue Var 0x560d9dd370e8 'x$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x560d9dd42b60 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x560d9dd42b40 <col:21> '_Bool' lvalue Var 0x560d9dd37a98 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x560d9dd42c18 <line:836:3, col:15> 'int' '='
    | |-DeclRefExpr 0x560d9dd42bc0 <col:3> 'int' lvalue Var 0x560d9dd37168 'x$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x560d9dd42c00 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x560d9dd42be0 <col:15> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
    |-BinaryOperator 0x560d9dd43050 <line:837:3, col:162> 'int' '='
    | |-DeclRefExpr 0x560d9dd42c38 <col:3> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
    | `-ConditionalOperator 0x560d9dd43020 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x560d9dd42e48 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x560d9dd42d68 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x560d9dd42c90 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x560d9dd42c78 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x560d9dd42c58 <col:8> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x560d9dd42d48 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x560d9dd42ce0 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x560d9dd42cc8 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x560d9dd42ca8 <col:27> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x560d9dd42d30 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x560d9dd42d18 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x560d9dd42cf8 <col:46> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x560d9dd42e28 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x560d9dd42dc0 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x560d9dd42da8 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x560d9dd42d88 <col:65> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x560d9dd42e10 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x560d9dd42df8 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x560d9dd42dd8 <col:84> '_Bool' lvalue Var 0x560d9dd373c0 'x$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x560d9dd43008 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560d9dd42e68 <col:101> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
    |   `-ParenExpr 0x560d9dd42fe8 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x560d9dd42fb8 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x560d9dd42f28 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x560d9dd42ee0 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x560d9dd42ec8 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x560d9dd42e88 <col:106> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x560d9dd42f10 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x560d9dd42ef8 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x560d9dd42ea8 <col:124> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560d9dd42f88 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560d9dd42f48 <col:141> 'int' lvalue Var 0x560d9dd376a0 'x$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x560d9dd42fa0 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x560d9dd42f68 <col:153> 'int' lvalue Var 0x560d9dd37798 'x$w_buff1' 'int'
    |-BinaryOperator 0x560d9dd43560 <line:838:3, col:208> 'int' '='
    | |-DeclRefExpr 0x560d9dd43070 <col:3> 'int' lvalue Var 0x560d9dd376a0 'x$w_buff0' 'int'
    | `-ConditionalOperator 0x560d9dd43530 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x560d9dd43500 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x560d9dd434e8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x560d9dd43090 <col:15> '_Bool' lvalue Var 0x560d9dd37a98 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x560d9dd43518 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560d9dd430b0 <col:31> 'int' lvalue Var 0x560d9dd376a0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x560d9dd434c8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x560d9dd43498 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x560d9dd432c0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x560d9dd431e0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x560d9dd43108 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x560d9dd430f0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x560d9dd430d0 <col:45> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x560d9dd431c0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x560d9dd43158 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x560d9dd43140 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x560d9dd43120 <col:64> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x560d9dd431a8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x560d9dd43190 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x560d9dd43170 <col:83> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x560d9dd432a0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x560d9dd43238 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x560d9dd43220 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x560d9dd43200 <col:102> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x560d9dd43288 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x560d9dd43270 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x560d9dd43250 <col:121> '_Bool' lvalue Var 0x560d9dd373c0 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560d9dd43480 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560d9dd432e0 <col:138> 'int' lvalue Var 0x560d9dd376a0 'x$w_buff0' 'int'
    |       `-ParenExpr 0x560d9dd43460 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x560d9dd43430 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x560d9dd433a0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x560d9dd43358 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x560d9dd43340 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x560d9dd43300 <col:151> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x560d9dd43388 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x560d9dd43370 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x560d9dd43320 <col:169> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x560d9dd43400 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x560d9dd433c0 <col:186> 'int' lvalue Var 0x560d9dd376a0 'x$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x560d9dd43418 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x560d9dd433e0 <col:198> 'int' lvalue Var 0x560d9dd376a0 'x$w_buff0' 'int'
    |-BinaryOperator 0x560d9dd43a70 <line:839:3, col:208> 'int' '='
    | |-DeclRefExpr 0x560d9dd43580 <col:3> 'int' lvalue Var 0x560d9dd37798 'x$w_buff1' 'int'
    | `-ConditionalOperator 0x560d9dd43a40 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x560d9dd43a10 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x560d9dd439f8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x560d9dd435a0 <col:15> '_Bool' lvalue Var 0x560d9dd37a98 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x560d9dd43a28 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560d9dd435c0 <col:31> 'int' lvalue Var 0x560d9dd37798 'x$w_buff1' 'int'
    |   `-ParenExpr 0x560d9dd439d8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x560d9dd439a8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x560d9dd437d0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x560d9dd436f0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x560d9dd43618 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x560d9dd43600 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x560d9dd435e0 <col:45> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x560d9dd436d0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x560d9dd43668 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x560d9dd43650 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x560d9dd43630 <col:64> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x560d9dd436b8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x560d9dd436a0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x560d9dd43680 <col:83> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x560d9dd437b0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x560d9dd43748 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x560d9dd43730 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x560d9dd43710 <col:102> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x560d9dd43798 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x560d9dd43780 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x560d9dd43760 <col:121> '_Bool' lvalue Var 0x560d9dd373c0 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560d9dd43990 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560d9dd437f0 <col:138> 'int' lvalue Var 0x560d9dd37798 'x$w_buff1' 'int'
    |       `-ParenExpr 0x560d9dd43970 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x560d9dd43940 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x560d9dd438b0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x560d9dd43868 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x560d9dd43850 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x560d9dd43810 <col:151> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x560d9dd43898 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x560d9dd43880 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x560d9dd43830 <col:169> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x560d9dd43910 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x560d9dd438d0 <col:186> 'int' lvalue Var 0x560d9dd37798 'x$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x560d9dd43928 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x560d9dd438f0 <col:198> 'int' lvalue Var 0x560d9dd37798 'x$w_buff1' 'int'
    |-BinaryOperator 0x560d9dd44038 <line:840:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x560d9dd43a90 <col:3> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x560d9dd44020 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560d9dd43ff0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x560d9dd43fa8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560d9dd43f90 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560d9dd43ab0 <col:20> '_Bool' lvalue Var 0x560d9dd37a98 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x560d9dd43fd8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560d9dd43fc0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560d9dd43ad0 <col:36> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x560d9dd43f70 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x560d9dd43f40 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x560d9dd43d00 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x560d9dd43c20 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x560d9dd43b28 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x560d9dd43b10 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x560d9dd43af0 <col:55> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x560d9dd43c00 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x560d9dd43b78 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x560d9dd43b60 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x560d9dd43b40 <col:74> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x560d9dd43be8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x560d9dd43bd0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x560d9dd43b90 <col:93> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x560d9dd43ce0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x560d9dd43c78 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x560d9dd43c60 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x560d9dd43c40 <col:112> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x560d9dd43cc8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x560d9dd43cb0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x560d9dd43c90 <col:131> '_Bool' lvalue Var 0x560d9dd373c0 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x560d9dd43f28 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x560d9dd43f10 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x560d9dd43d20 <col:148> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x560d9dd43ef0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x560d9dd43ec0 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x560d9dd43de0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x560d9dd43d98 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x560d9dd43d80 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x560d9dd43d40 <col:166> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x560d9dd43dc8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x560d9dd43db0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x560d9dd43d60 <col:184> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x560d9dd43e78 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x560d9dd43e30 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x560d9dd43e00 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x560d9dd43ea8 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x560d9dd43e90 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x560d9dd43e58 <col:212> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x560d9dd44600 <line:841:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x560d9dd44058 <col:3> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x560d9dd445e8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560d9dd445b8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x560d9dd44570 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560d9dd44558 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560d9dd44078 <col:20> '_Bool' lvalue Var 0x560d9dd37a98 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x560d9dd445a0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560d9dd44588 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560d9dd44098 <col:36> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x560d9dd44538 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x560d9dd44508 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x560d9dd442a8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x560d9dd441c8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x560d9dd440f0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x560d9dd440d8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x560d9dd440b8 <col:55> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x560d9dd441a8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x560d9dd44140 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x560d9dd44128 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x560d9dd44108 <col:74> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x560d9dd44190 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x560d9dd44178 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x560d9dd44158 <col:93> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x560d9dd44288 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x560d9dd44220 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x560d9dd44208 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x560d9dd441e8 <col:112> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x560d9dd44270 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x560d9dd44258 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x560d9dd44238 <col:131> '_Bool' lvalue Var 0x560d9dd373c0 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x560d9dd444f0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x560d9dd444d8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x560d9dd442c8 <col:148> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x560d9dd444b8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x560d9dd44488 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x560d9dd44388 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x560d9dd44340 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x560d9dd44328 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x560d9dd442e8 <col:166> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x560d9dd44370 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x560d9dd44358 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x560d9dd44308 <col:184> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x560d9dd44458 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x560d9dd443d8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x560d9dd443a8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x560d9dd44470 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x560d9dd44430 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x560d9dd44400 <col:219> 'int' 0
    |-BinaryOperator 0x560d9dd44ba8 <line:842:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x560d9dd44620 <col:3> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560d9dd44b90 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560d9dd44b60 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x560d9dd44b18 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560d9dd44b00 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560d9dd44640 <col:20> '_Bool' lvalue Var 0x560d9dd37a98 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x560d9dd44b48 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560d9dd44b30 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560d9dd44660 <col:36> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x560d9dd44ae0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x560d9dd44ab0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x560d9dd44870 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x560d9dd44790 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x560d9dd446b8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x560d9dd446a0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x560d9dd44680 <col:55> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x560d9dd44770 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x560d9dd44708 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x560d9dd446f0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x560d9dd446d0 <col:74> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x560d9dd44758 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x560d9dd44740 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x560d9dd44720 <col:93> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x560d9dd44850 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x560d9dd447e8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x560d9dd447d0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x560d9dd447b0 <col:112> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x560d9dd44838 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x560d9dd44820 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x560d9dd44800 <col:131> '_Bool' lvalue Var 0x560d9dd373c0 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x560d9dd44a98 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x560d9dd44a80 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x560d9dd44890 <col:148> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x560d9dd44a60 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x560d9dd44a30 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x560d9dd44950 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x560d9dd44908 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x560d9dd448f0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x560d9dd448b0 <col:166> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x560d9dd44938 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x560d9dd44920 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x560d9dd448d0 <col:184> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x560d9dd449e8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x560d9dd449a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x560d9dd44970 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x560d9dd44a18 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x560d9dd44a00 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x560d9dd449c8 <col:212> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x560d9dd45188 <line:843:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x560d9dd44be0 <col:3> '_Bool' lvalue Var 0x560d9dd373c0 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560d9dd45170 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560d9dd45140 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x560d9dd450f8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560d9dd450e0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560d9dd44c00 <col:20> '_Bool' lvalue Var 0x560d9dd37a98 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x560d9dd45128 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560d9dd45110 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560d9dd44c20 <col:36> '_Bool' lvalue Var 0x560d9dd373c0 'x$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x560d9dd450c0 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x560d9dd45090 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x560d9dd44e30 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x560d9dd44d50 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x560d9dd44c78 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x560d9dd44c60 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x560d9dd44c40 <col:55> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x560d9dd44d30 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x560d9dd44cc8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x560d9dd44cb0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x560d9dd44c90 <col:74> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x560d9dd44d18 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x560d9dd44d00 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x560d9dd44ce0 <col:93> '_Bool' lvalue Var 0x560d9dd37810 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x560d9dd44e10 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x560d9dd44da8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x560d9dd44d90 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x560d9dd44d70 <col:112> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x560d9dd44df8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x560d9dd44de0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x560d9dd44dc0 <col:131> '_Bool' lvalue Var 0x560d9dd373c0 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x560d9dd45078 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x560d9dd45060 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x560d9dd44e50 <col:148> '_Bool' lvalue Var 0x560d9dd373c0 'x$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x560d9dd45040 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x560d9dd45010 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x560d9dd44f10 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x560d9dd44ec8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x560d9dd44eb0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x560d9dd44e70 <col:166> '_Bool' lvalue Var 0x560d9dd37718 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x560d9dd44ef8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x560d9dd44ee0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x560d9dd44e90 <col:184> '_Bool' lvalue Var 0x560d9dd371e0 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x560d9dd44fe0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x560d9dd44f60 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x560d9dd44f30 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x560d9dd44ff8 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x560d9dd44fb8 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x560d9dd44f88 <col:219> 'int' 0
    |-BinaryOperator 0x560d9dd45220 <line:844:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x560d9dd451a8 <col:3> '_Bool' lvalue Var 0x560d9dd37a20 'weak$$choice1' '_Bool'
    | `-CallExpr 0x560d9dd45200 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x560d9dd451e8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x560d9dd451c8 <col:19> '_Bool (void)' Function 0x560d9dcdc770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x560d9dd45458 <line:845:3, col:140> 'int' '='
    | |-DeclRefExpr 0x560d9dd45240 <col:3> 'int' lvalue Var 0x560d9dd36680 '__unbuffered_p2_EAX' 'int'
    | `-ConditionalOperator 0x560d9dd45428 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x560d9dd453f8 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x560d9dd453e0 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x560d9dd45260 <col:25> '_Bool' lvalue Var 0x560d9dd36bf0 '__unbuffered_p2_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x560d9dd453a0 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x560d9dd45370 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x560d9dd45328 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x560d9dd45310 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x560d9dd45280 <col:61> '_Bool' lvalue Var 0x560d9dd37a20 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x560d9dd45340 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x560d9dd452d8 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x560d9dd452c0 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x560d9dd452a0 <col:78> 'int *' lvalue Var 0x560d9dd36c70 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x560d9dd45358 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x560d9dd452f0 <col:117> 'int' lvalue Var 0x560d9dd36680 '__unbuffered_p2_EAX' 'int'
    |   `-ImplicitCastExpr 0x560d9dd45410 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x560d9dd453c0 <col:140> 'int' lvalue Var 0x560d9dd36680 '__unbuffered_p2_EAX' 'int'
    |-BinaryOperator 0x560d9dd45728 <line:846:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x560d9dd45478 <col:3> '_Bool' lvalue Var 0x560d9dd36f50 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x560d9dd45710 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x560d9dd456f8 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x560d9dd456d8 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x560d9dd456b8 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x560d9dd45620 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x560d9dd45588 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x560d9dd454f0 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x560d9dd454d8 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x560d9dd45498 <col:23> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
    |         | | | `-IntegerLiteral 0x560d9dd454b8 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x560d9dd45568 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x560d9dd45550 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x560d9dd45510 <col:33> 'int' lvalue Var 0x560d9dd36440 '__unbuffered_p0_EAX' 'int'
    |         | |   `-IntegerLiteral 0x560d9dd45530 <col:56> 'int' 1
    |         | `-BinaryOperator 0x560d9dd45600 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x560d9dd455e8 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x560d9dd455a8 <col:61> 'int' lvalue Var 0x560d9dd36560 '__unbuffered_p0_EBX' 'int'
    |         |   `-IntegerLiteral 0x560d9dd455c8 <col:84> 'int' 0
    |         `-BinaryOperator 0x560d9dd45698 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x560d9dd45680 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x560d9dd45640 <col:89> 'int' lvalue Var 0x560d9dd36680 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x560d9dd45660 <col:112> 'int' 2
    |-BinaryOperator 0x560d9dd45858 <line:847:3, col:37> 'int' '='
    | |-DeclRefExpr 0x560d9dd45748 <col:3> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
    | `-ConditionalOperator 0x560d9dd45828 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x560d9dd457e0 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x560d9dd457c8 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x560d9dd45768 <col:7> '_Bool' lvalue Var 0x560d9dd370e8 'x$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x560d9dd457f8 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560d9dd45788 <col:25> 'int' lvalue Var 0x560d9dd37168 'x$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x560d9dd45810 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x560d9dd457a8 <col:37> 'int' lvalue Var 0x560d9dd37050 'x' 'int'
    |-BinaryOperator 0x560d9dd458f0 <line:848:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x560d9dd45878 <col:3> '_Bool' lvalue Var 0x560d9dd370e8 'x$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x560d9dd458c8 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x560d9dd45898 <col:28> 'int' 0
    |-CallExpr 0x560d9dd45948 <line:849:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560d9dd45930 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560d9dd45910 <col:3> 'void ()' Function 0x560d9dcdd060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560d9dd459c0 <line:850:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560d9dd459a8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560d9dd45968 <col:3> 'void (int)' Function 0x560d9dcdcd28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x560d9dd45a00 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560d9dd459e8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560d9dd45988 <col:21> '_Bool' lvalue Var 0x560d9dd36f50 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x560d9dd45a38 <line:851:3, col:10>
      `-IntegerLiteral 0x560d9dd45a18 <col:10> 'int' 0
