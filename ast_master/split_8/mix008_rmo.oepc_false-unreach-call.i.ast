TranslationUnitDecl 0x560ef4a26e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x560ef4a276d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x560ef4a273b0 '__int128'
|-TypedefDecl 0x560ef4a27748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x560ef4a273d0 'unsigned __int128'
|-TypedefDecl 0x560ef4a27a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x560ef4a27820 'struct __NSConstantString_tag'
|   `-Record 0x560ef4a277a0 '__NSConstantString_tag'
|-TypedefDecl 0x560ef4a27af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x560ef4a27ab0 'char *'
|   `-BuiltinType 0x560ef4a26eb0 'char'
|-TypedefDecl 0x560ef4a66650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x560ef4a27d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x560ef4a27bd0 'struct __va_list_tag'
|     `-Record 0x560ef4a27b50 '__va_list_tag'
|-FunctionDecl 0x560ef4a66790 <./split_8/mix008_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x560ef4a666c0 <col:31> col:34 'int'
|-FunctionDecl 0x560ef4a66958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x560ef4a66a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x560ef4a66bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x560ef4a66b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x560ef4a66df8 <col:40, col:99>
|   |-IfStmt 0x560ef4a66dc8 <col:42, col:88>
|   | |-UnaryOperator 0x560ef4a66ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x560ef4a66c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x560ef4a66c70 <col:47> 'int' lvalue ParmVar 0x560ef4a66b38 'expression' 'int'
|   | `-CompoundStmt 0x560ef4a66db0 <col:59, col:88>
|   |   `-LabelStmt 0x560ef4a66d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x560ef4a66d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x560ef4a66d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x560ef4a66cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x560ef4a66a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x560ef4a66de0 <col:89>
|   `-ReturnStmt 0x560ef4a66de8 <col:91>
|-FunctionDecl 0x560ef4a66e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x560ef4a66f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x560ef4a67280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560ef4a66fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x560ef4a67038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x560ef4a670b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560ef4a67138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560ef4a67340 <line:10:22>
|-FunctionDecl 0x560ef4a8d390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560ef4a673b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x560ef4a67430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x560ef4a674b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560ef4a67530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560ef4a8d450 <line:13:22>
|-FunctionDecl 0x560ef4a8d700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560ef4a8d4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x560ef4a8d540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x560ef4a8d5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x560ef4a8d7b8 <line:15:22>
|-TypedefDecl 0x560ef4a8d828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x560ef4a26f70 'unsigned char'
|-TypedefDecl 0x560ef4a8d898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x560ef4a26f90 'unsigned short'
|-TypedefDecl 0x560ef4a8d908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x560ef4a26fb0 'unsigned int'
|-TypedefDecl 0x560ef4a8d978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x560ef4a26fd0 'unsigned long'
|-TypedefDecl 0x560ef4a8d9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x560ef4a26ed0 'signed char'
|-TypedefDecl 0x560ef4a8da58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x560ef4a26f70 'unsigned char'
|-TypedefDecl 0x560ef4a8dac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x560ef4a26ef0 'short'
|-TypedefDecl 0x560ef4a8db38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x560ef4a26f90 'unsigned short'
|-TypedefDecl 0x560ef4a8dba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x560ef4a26f10 'int'
|-TypedefDecl 0x560ef4a8dc18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x560ef4a26fb0 'unsigned int'
|-TypedefDecl 0x560ef4a8dc88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x560ef4a26f30 'long'
|-TypedefDecl 0x560ef4a8dcf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x560ef4a26fd0 'unsigned long'
|-TypedefDecl 0x560ef4a8dd68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x560ef4a26f30 'long'
|-TypedefDecl 0x560ef4a8ddd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x560ef4a26fd0 'unsigned long'
|-TypedefDecl 0x560ef4a8de48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x560ef4a26fd0 'unsigned long'
|-TypedefDecl 0x560ef4a8deb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x560ef4a26fb0 'unsigned int'
|-TypedefDecl 0x560ef4a8df28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x560ef4a26fb0 'unsigned int'
|-TypedefDecl 0x560ef4a8df98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x560ef4a26fd0 'unsigned long'
|-TypedefDecl 0x560ef4a8e008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x560ef4a26fd0 'unsigned long'
|-TypedefDecl 0x560ef4a8e078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x560ef4a26fb0 'unsigned int'
|-TypedefDecl 0x560ef4a8e0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x560ef4a26fd0 'unsigned long'
|-TypedefDecl 0x560ef4a8e158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x560ef4a26f30 'long'
|-TypedefDecl 0x560ef4a8e1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x560ef4a26f30 'long'
|-TypedefDecl 0x560ef4a8e238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x560ef4a26f10 'int'
|-RecordDecl 0x560ef4a8e290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x560ef4a8e408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x560ef4a8e4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x560ef4a8e460 'struct __fsid_t' sugar
|   `-RecordType 0x560ef4a8e310 '__fsid_t'
|     `-Record 0x560ef4a8e290 ''
|-TypedefDecl 0x560ef4a8e548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x560ef4a26f30 'long'
|-TypedefDecl 0x560ef4a8e5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x560ef4a26fd0 'unsigned long'
|-TypedefDecl 0x560ef4a8e628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x560ef4a26fd0 'unsigned long'
|-TypedefDecl 0x560ef4a8e698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x560ef4a26fb0 'unsigned int'
|-TypedefDecl 0x560ef4a8e708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x560ef4a26f30 'long'
|-TypedefDecl 0x560ef4a8e778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x560ef4a26fb0 'unsigned int'
|-TypedefDecl 0x560ef4a8e7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x560ef4a26f30 'long'
|-TypedefDecl 0x560ef4a8e858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x560ef4a26f10 'int'
|-TypedefDecl 0x560ef4a8e8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x560ef4a26f10 'int'
|-TypedefDecl 0x560ef4a8e938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x560ef4a26f10 'int'
|-TypedefDecl 0x560ef4a8e9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x560ef4a27630 'void *'
|   `-BuiltinType 0x560ef4a26e70 'void'
|-TypedefDecl 0x560ef4a8ea18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x560ef4a26f30 'long'
|-TypedefDecl 0x560ef4a8ea88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x560ef4a26f30 'long'
|-TypedefDecl 0x560ef4a8eaf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x560ef4a26f30 'long'
|-TypedefDecl 0x560ef4a8eb68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x560ef4a26fd0 'unsigned long'
|-TypedefDecl 0x560ef4a8ebd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x560ef4a26fd0 'unsigned long'
|-TypedefDecl 0x560ef4a8ec48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x560ef4a26fd0 'unsigned long'
|-TypedefDecl 0x560ef4a8ecb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x560ef4a26fd0 'unsigned long'
|-TypedefDecl 0x560ef4a8ed28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x560ef4a26f30 'long'
|-TypedefDecl 0x560ef4a8ed98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x560ef4a26f30 'long'
|-TypedefDecl 0x560ef4a8ee08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x560ef4a26f30 'long'
|-TypedefDecl 0x560ef4a8ee78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x560ef4a26fd0 'unsigned long'
|-TypedefDecl 0x560ef4a8ef08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x560ef4a8eed0 '__off64_t' sugar
|   |-Typedef 0x560ef4a8e1c8 '__off64_t'
|   `-BuiltinType 0x560ef4a26f30 'long'
|-TypedefDecl 0x560ef4a8f000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x560ef4a8efc0 '__quad_t *'
|   `-TypedefType 0x560ef4a8ef60 '__quad_t' sugar
|     |-Typedef 0x560ef4a8dd68 '__quad_t'
|     `-BuiltinType 0x560ef4a26f30 'long'
|-TypedefDecl 0x560ef4a8f070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x560ef4a27ab0 'char *'
|   `-BuiltinType 0x560ef4a26eb0 'char'
|-TypedefDecl 0x560ef4a8f0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x560ef4a26f30 'long'
|-TypedefDecl 0x560ef4a8f150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x560ef4a26fb0 'unsigned int'
|-FunctionDecl 0x560ef4a8f298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x560ef4a8f1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x560ef4a905e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x560ef4a905d8 <line:72:3, col:34>
|     `-CallExpr 0x560ef4a90598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x560ef4a90580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560ef4a90510 <col:10> '<builtin fn type>' Function 0x560ef4a90380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x560ef4a905c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x560ef4a90530 <col:29> 'unsigned int' lvalue ParmVar 0x560ef4a8f1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x560ef4a90380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x560ef4a90420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x560ef4a90490 <col:10> Implicit
| `-ConstAttr 0x560ef4a904e8 <col:10> Implicit
|-FunctionDecl 0x560ef4a90740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x560ef4a90638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x560ef4a90a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x560ef4a90a48 <line:77:3, col:34>
|     `-CallExpr 0x560ef4a90a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x560ef4a909f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560ef4a90978 <col:10> '<builtin fn type>' Function 0x560ef4a907e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x560ef4a90a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x560ef4a90998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x560ef4a90638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x560ef4a907e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x560ef4a90888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x560ef4a908f8 <col:10> Implicit
| `-ConstAttr 0x560ef4a90950 <col:10> Implicit
|-TypedefDecl 0x560ef4a90a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x560ef4a26fd0 'unsigned long'
|-TypedefDecl 0x560ef4a90b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x560ef4a90ae0 '__time_t' sugar
|   |-Typedef 0x560ef4a8e708 '__time_t'
|   `-BuiltinType 0x560ef4a26f30 'long'
|-RecordDecl 0x560ef4a90b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x560ef4a90c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x560ef4a90cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x560ef4a90d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x560ef4a90d10 '__pid_t' sugar
|   |-Typedef 0x560ef4a8e238 '__pid_t'
|   `-BuiltinType 0x560ef4a26f10 'int'
|-RecordDecl 0x560ef4a90da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x560ef4a90e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x560ef4a90eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x560ef4a90f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x560ef4a90fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x560ef4a26fd0 'unsigned long'
|-RecordDecl 0x560ef4a91030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x560ef4a912c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x560ef4a923a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x560ef4a91310 'struct cpu_set_t' sugar
|   `-RecordType 0x560ef4a910b0 'cpu_set_t'
|     `-Record 0x560ef4a91030 ''
|-FunctionDecl 0x560ef4a92678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x560ef4a92448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560ef4a92550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x560ef4a92728 <line:107:19>
|-FunctionDecl 0x560ef4a92900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x560ef4a92790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x560ef4a929a8 <col:69>
|-FunctionDecl 0x560ef4a92b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x560ef4a92a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x560ef4a92bc8 <col:64>
|-FunctionDecl 0x560ef4a92e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x560ef4a92c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560ef4a92d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560ef4a92f38 <line:113:22>
|-FunctionDecl 0x560ef4a931b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x560ef4a92fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560ef4a93098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x560ef4a93268 <col:88>
|-FunctionDecl 0x560ef4a93588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560ef4a932d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560ef4a933b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x560ef4a93440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560ef4a93640 <col:62>
|-FunctionDecl 0x560ef4a937b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x560ef4a936a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x560ef4a93860 <col:63>
|-FunctionDecl 0x560ef4a93988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x560ef4a93a28 <col:47>
|-FunctionDecl 0x560ef4a93b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x560ef4a93a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560ef4a93bd8 <col:69>
|-FunctionDecl 0x560ef4a93ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x560ef4a93c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560ef4a93d88 <col:69>
|-FunctionDecl 0x560ef4a94048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560ef4a93df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560ef4a93f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x560ef4a940f8 <col:88>
|-TypedefDecl 0x560ef4a94188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x560ef4a94150 '__clock_t' sugar
|   |-Typedef 0x560ef4a8e548 '__clock_t'
|   `-BuiltinType 0x560ef4a26f30 'long'
|-TypedefDecl 0x560ef4a94218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x560ef4a941e0 '__clockid_t' sugar
|   |-Typedef 0x560ef4a8e938 '__clockid_t'
|   `-BuiltinType 0x560ef4a26f10 'int'
|-TypedefDecl 0x560ef4a942a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x560ef4a94270 '__timer_t' sugar
|   |-Typedef 0x560ef4a8e9a8 '__timer_t'
|   `-PointerType 0x560ef4a27630 'void *'
|     `-BuiltinType 0x560ef4a26e70 'void'
|-RecordDecl 0x560ef4a94300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x560ef4a943d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x560ef4a94440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x560ef4a944a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x560ef4a94510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x560ef4a94578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x560ef4a945e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x560ef4a94648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x560ef4a946b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x560ef4a94718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x560ef4a94780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x560ef4a947e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x560ef4a94838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x560ef4a94908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x560ef4a94978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x560ef4a94a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x560ef4a94bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x560ef4a94c90 <col:45>
|-FunctionDecl 0x560ef4a94e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x560ef4a94d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x560ef4a94f18 <col:54>
|-FunctionDecl 0x560ef4a95118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x560ef4a94f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x560ef4a94ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x560ef4a951c8 <line:157:22>
| `-ConstAttr 0x560ef4a95220 <col:63>
|-FunctionDecl 0x560ef4a96050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560ef4a95318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560ef4a960f8 <col:56>
|-FunctionDecl 0x560ef4a964a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x560ef4a96168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x560ef4a961e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560ef4a96260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x560ef4a96358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x560ef4a96560 <col:54>
|-RecordDecl 0x560ef4a965b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x560ef4a96668 parent 0x560ef4a26e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x560ef4a968c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x560ef4a96968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x560ef4a969d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x560ef4a96a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x560ef4a96b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x560ef4a96c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x560ef4a96bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x560ef4a96b80 'struct __locale_struct' sugar
|     `-RecordType 0x560ef4a96640 'struct __locale_struct'
|       `-Record 0x560ef4a965b8 '__locale_struct'
|-TypedefDecl 0x560ef4a96cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x560ef4a96cc0 '__locale_t' sugar
|   |-Typedef 0x560ef4a96c48 '__locale_t'
|   `-PointerType 0x560ef4a96bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x560ef4a96b80 'struct __locale_struct' sugar
|       `-RecordType 0x560ef4a96640 'struct __locale_struct'
|         `-Record 0x560ef4a965b8 '__locale_struct'
|-FunctionDecl 0x560ef4a98110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x560ef4a96d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x560ef4a96de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560ef4a96e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x560ef4a96ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560ef4a96f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x560ef4a981d8 <col:40>
|-FunctionDecl 0x560ef4a983c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560ef4a982a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x560ef4a98470 <col:66>
|-FunctionDecl 0x560ef4a98580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560ef4a984d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x560ef4a98628 <col:69>
|-FunctionDecl 0x560ef4a98858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560ef4a98690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560ef4a98720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560ef4a98908 <col:52>
|-FunctionDecl 0x560ef4a98ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560ef4a98970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560ef4a98a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560ef4a98b60 <col:55>
|-FunctionDecl 0x560ef4a98cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x560ef4a98be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x560ef4a98da0 <col:62>
|-FunctionDecl 0x560ef4a98f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x560ef4a98e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x560ef4a98fc0 <col:60>
|-FunctionDecl 0x560ef4a992b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560ef4a99118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560ef4a99198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x560ef4a99368 <col:44>
|-FunctionDecl 0x560ef4a99578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560ef4a993d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560ef4a99450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x560ef4a99628 <col:49>
|-VarDecl 0x560ef4a99728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x560ef4a997a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x560ef4a99828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x560ef4a998f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x560ef4a99a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x560ef4a99ac0 <col:42>
|-VarDecl 0x560ef4a99b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x560ef4a99bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x560ef4a99d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x560ef4a99c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x560ef4a99de0 <col:57>
|-FunctionDecl 0x560ef4a99ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560ef4a99e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560ef4a99f98 <col:56>
|-FunctionDecl 0x560ef4a9a0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560ef4a9a018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x560ef4a9a178 <col:59>
|-FunctionDecl 0x560ef4a9a280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x560ef4a9a1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x560ef4a9a328 <col:48>
| `-ConstAttr 0x560ef4a9a380 <col:89>
|-FunctionDecl 0x560ef4a9a5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560ef4a9a438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x560ef4a9a4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x560ef4a9a848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560ef4a9a6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560ef4a9a768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x560ef4a9a8f8 <col:88>
|-FunctionDecl 0x560ef4a9aa90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560ef4a9a960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560ef4a9a9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x560ef4a9ab40 <col:88>
|-FunctionDecl 0x560ef4a9ad58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x560ef4a9aba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560ef4a9ac38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x560ef4a9ae08 <line:208:22>
|-FunctionDecl 0x560ef4a9b178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560ef4a9ae70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560ef4a9aef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x560ef4a9af80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x560ef4a9b010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x560ef4a9b478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x560ef4a9b278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x560ef4a9b350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x560ef4a9b528 <col:85>
|-FunctionDecl 0x560ef4a9b918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x560ef4a9b590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560ef4a9b6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x560ef4a9b7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x560ef4a9b9d0 <col:52>
|-FunctionDecl 0x560ef4a9bb48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x560ef4a9ba38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560ef4a9bbf0 <col:61>
|-FunctionDecl 0x560ef4a9c0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x560ef4a9bc58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560ef4a9bcd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x560ef4a9be08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x560ef4a9bef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x560ef4a9c1b0 <col:62>
|-FunctionDecl 0x560ef4a9c3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x560ef4a9c218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560ef4a9c2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x560ef4a9c478 <line:221:22>
|-FunctionDecl 0x560ef4a9c578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x560ef4a9c4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560ef4a9c620 <col:65>
|-TypedefDecl 0x560ef4a9c690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x560ef4a26fd0 'unsigned long'
|-RecordDecl 0x560ef4a9c6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x560ef4a9c830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560ef4a9c898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560ef4a9c948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x560ef4a9c8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x560ef4a9c770 'union pthread_attr_t'
|     `-Record 0x560ef4a9c6e8 'pthread_attr_t'
|-RecordDecl 0x560ef4a9c9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x560ef4a9cb18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x560ef4a9cb90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x560ef4a9cc40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x560ef4a9cbe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x560ef4a9ca20 'struct __pthread_internal_list'
|     `-Record 0x560ef4a9c9a0 '__pthread_internal_list'
|-RecordDecl 0x560ef4a9ccb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x560ef4a9cd58 parent 0x560ef4a26e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x560ef4a9ce30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560ef4a9ce98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x560ef4a9cf00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x560ef4a9cf68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x560ef4a9cfd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x560ef4a9d038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x560ef4aa1110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x560ef4aa11c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x560ef4aa12b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x560ef4aa1318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560ef4aa14a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x560ef4aa1440 'union pthread_mutex_t' sugar
|   `-RecordType 0x560ef4a9cd30 'pthread_mutex_t'
|     `-Record 0x560ef4a9ccb0 ''
|-RecordDecl 0x560ef4aa1510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x560ef4aa1650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560ef4aa16b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560ef4aa1770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x560ef4aa1710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x560ef4aa1590 'pthread_mutexattr_t'
|     `-Record 0x560ef4aa1510 ''
|-RecordDecl 0x560ef4aa17e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x560ef4aa1888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x560ef4aa1950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560ef4aa19b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x560ef4aa1a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x560ef4aa1a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x560ef4aa1af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x560ef4aa1b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x560ef4aa1bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x560ef4aa1c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x560ef4aa1ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_8/mix008_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_8/mix008_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x560ef4aa1dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x560ef4aa1e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x560ef4aa1f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x560ef4aa1f10 'union pthread_cond_t' sugar
|   `-RecordType 0x560ef4aa1860 'pthread_cond_t'
|     `-Record 0x560ef4aa17e0 ''
|-RecordDecl 0x560ef4aa1fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x560ef4aa3130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560ef4aa3198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560ef4aa3250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x560ef4aa31f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x560ef4aa2060 'pthread_condattr_t'
|     `-Record 0x560ef4aa1fe0 ''
|-TypedefDecl 0x560ef4aa32d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x560ef4a26fb0 'unsigned int'
|-TypedefDecl 0x560ef4aa3348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x560ef4a26f10 'int'
|-RecordDecl 0x560ef4aa33a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x560ef4aa3448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x560ef4aa3510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560ef4aa3578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x560ef4aa35e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x560ef4aa3648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x560ef4aa36b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x560ef4aa3718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x560ef4aa3780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x560ef4aa37e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x560ef4aa3850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x560ef4aa38b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x560ef4aa3920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x560ef4aa39d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_8/mix008_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_8/mix008_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x560ef4aa3a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560ef4aa3ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560ef4aa3c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x560ef4aa3bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x560ef4aa3420 'pthread_rwlock_t'
|     `-Record 0x560ef4aa33a0 ''
|-RecordDecl 0x560ef4aa3ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x560ef4aa3de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x560ef4aa3e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560ef4aa3f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x560ef4aa3ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x560ef4aa3d20 'pthread_rwlockattr_t'
|     `-Record 0x560ef4aa3ca0 ''
|-TypedefDecl 0x560ef4aa3f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x560ef4a26f14 'volatile int' volatile
|   `-BuiltinType 0x560ef4a26f10 'int'
|-RecordDecl 0x560ef4aa3fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x560ef4aa5140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x560ef4aa51a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560ef4aa5260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x560ef4aa5200 'union pthread_barrier_t' sugar
|   `-RecordType 0x560ef4aa4060 'pthread_barrier_t'
|     `-Record 0x560ef4aa3fe0 ''
|-RecordDecl 0x560ef4aa52d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x560ef4aa53d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560ef4aa5438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560ef4aa54f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x560ef4aa5490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x560ef4aa5350 'pthread_barrierattr_t'
|     `-Record 0x560ef4aa52d0 ''
|-TypedefDecl 0x560ef4aa5608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x560ef4aa55a0 'long [8]' 8 
|   `-BuiltinType 0x560ef4a26f30 'long'
|-EnumDecl 0x560ef4aa5660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x560ef4aa5728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x560ef4aa5778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x560ef4aa57c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x560ef4aa5898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x560ef4aa58e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x560ef4aa5938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x560ef4aa5988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x560ef4aa5a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x560ef4aa59f8 <col:26> 'int'
| |   `-DeclRefExpr 0x560ef4aa59d8 <col:26> 'int' EnumConstant 0x560ef4aa5898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x560ef4aa5a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x560ef4aa5a80 <col:29> 'int'
| |   `-DeclRefExpr 0x560ef4aa5a60 <col:29> 'int' EnumConstant 0x560ef4aa58e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x560ef4aa5b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x560ef4aa5b08 <col:30> 'int'
| |   `-DeclRefExpr 0x560ef4aa5ae8 <col:30> 'int' EnumConstant 0x560ef4aa5938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x560ef4aa5ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x560ef4aa5b90 <col:27> 'int'
|     `-DeclRefExpr 0x560ef4aa5b70 <col:27> 'int' EnumConstant 0x560ef4aa5a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x560ef4aa5bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x560ef4aa5cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x560ef4aa5d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x560ef4aa5d38 <col:30> 'int'
| |   `-DeclRefExpr 0x560ef4aa5d18 <col:30> 'int' EnumConstant 0x560ef4aa5cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x560ef4aa5da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x560ef4aa5e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x560ef4aa5e10 <col:29> 'int'
|     `-DeclRefExpr 0x560ef4aa5df0 <col:29> 'int' EnumConstant 0x560ef4aa5da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x560ef4aa5e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x560ef4aa5f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x560ef4aa5f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x560ef4aa5fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x560ef4aa6038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x560ef4aa6150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x560ef4aa61a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x560ef4aa61f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x560ef4aa6278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x560ef4aa6260 <col:31> 'int'
|     `-DeclRefExpr 0x560ef4aa6240 <col:31> 'int' EnumConstant 0x560ef4aa6150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x560ef4aa62c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x560ef4aa6398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x560ef4aa63e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x560ef4aa6438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x560ef4aa6508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x560ef4aa6558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x560ef4aa65a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x560ef4aa6678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x560ef4aa66c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x560ef4aa6718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x560ef4aa6958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x560ef4aa69c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x560ef4aa6a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x560ef4aa6b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x560ef4aa6b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x560ef4aa6c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x560ef4aa6cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x560ef4aa6d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x560ef4aa6dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x560ef4aa6e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x560ef4aa7488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x560ef4aa6f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x560ef4aa7030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560ef4aa7270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x560ef4aa72f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x560ef4aa7548 <col:47>
| |-NonNullAttr 0x560ef4aa75a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x560ef4aa75d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x560ef4aa7700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x560ef4aa7630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x560ef4aa7958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x560ef4aa77b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x560ef4aa7838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x560ef4aa7b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x560ef4aa7a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x560ef4aa7bd0 <col:60>
|-FunctionDecl 0x560ef4aa7d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x560ef4aa7dc0 <col:54>
| `-ConstAttr 0x560ef4aa7e18 <col:95>
|-FunctionDecl 0x560ef4aa7fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x560ef4aa7e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560ef4aa7ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x560ef4aa8098 <line:394:19>
| `-ConstAttr 0x560ef4aa80f0 <col:60>
|-FunctionDecl 0x560ef4aa9b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560ef4aa99d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560ef4aa9bb0 <col:71>
| `-NonNullAttr 0x560ef4aa9c08 <col:112, col:126> 1
|-FunctionDecl 0x560ef4aa9d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560ef4aa9c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560ef4aa9db8 <line:397:22>
| `-NonNullAttr 0x560ef4aa9e10 <col:63, col:77> 1
|-FunctionDecl 0x560ef4aaa038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x560ef4aa9e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560ef4aa9ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x560ef4aaa0e8 <line:400:22>
| `-NonNullAttr 0x560ef4aaa140 <col:63, col:80> 1 2
|-FunctionDecl 0x560ef4aaa348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560ef4aaa188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560ef4aaa208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x560ef4aaa3f8 <line:403:22>
| `-NonNullAttr 0x560ef4aaa450 <col:63, col:77> 1
|-FunctionDecl 0x560ef4aaa6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x560ef4aaa498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560ef4aaa540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x560ef4aaa758 <line:406:22>
| `-NonNullAttr 0x560ef4aaa7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x560ef4aab9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560ef4aaa7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560ef4aaa870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560ef4aaba98 <line:409:22>
| `-NonNullAttr 0x560ef4aabaf0 <col:63, col:77> 1
|-FunctionDecl 0x560ef4aabd28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560ef4aabb38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560ef4aabbc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560ef4aabdd8 <line:412:22>
| `-NonNullAttr 0x560ef4aabe30 <col:63, col:80> 1 2
|-FunctionDecl 0x560ef4aac068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560ef4aabe78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x560ef4aabf08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x560ef4aac118 <col:37>
| `-NonNullAttr 0x560ef4aac170 <col:78, col:95> 1 2
|-FunctionDecl 0x560ef4aac358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560ef4aac1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560ef4aac238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x560ef4aac408 <line:418:22>
| `-NonNullAttr 0x560ef4aac460 <col:63, col:80> 1 2
|-FunctionDecl 0x560ef4aac5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560ef4aac4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560ef4aac528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x560ef4aac698 <line:420:22>
| `-NonNullAttr 0x560ef4aac6f0 <col:63, col:77> 1
|-FunctionDecl 0x560ef4aac898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560ef4aac738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560ef4aac7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x560ef4aac948 <line:423:22>
| `-NonNullAttr 0x560ef4aac9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x560ef4aacb48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560ef4aaca08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560ef4aaca88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x560ef4aacbf8 <line:426:22>
| `-NonNullAttr 0x560ef4aacc50 <col:63, col:77> 1
|-FunctionDecl 0x560ef4aacdf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560ef4aacc98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560ef4aacd18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x560ef4aacea8 <line:429:22>
| `-NonNullAttr 0x560ef4aacf00 <col:63, col:80> 1 2
|-FunctionDecl 0x560ef4aad088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560ef4aacf48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560ef4aacfc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x560ef4aad138 <line:431:22>
| `-NonNullAttr 0x560ef4aad190 <col:63, col:77> 1
|-FunctionDecl 0x560ef4aad3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x560ef4aad1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560ef4aad258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x560ef4aad468 <line:434:22>
| |-NonNullAttr 0x560ef4aad4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x560ef4aad4f8 <col:100> "" ""
|-FunctionDecl 0x560ef4aad708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x560ef4aad548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560ef4aad5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x560ef4aad7b8 <line:437:22>
| |-NonNullAttr 0x560ef4aad810 <col:63, col:77> 1
| `-DeprecatedAttr 0x560ef4aad848 <col:97> "" ""
|-FunctionDecl 0x560ef4aada48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560ef4aad898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560ef4aad910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560ef4aadaf8 <line:440:22>
| `-NonNullAttr 0x560ef4aadb50 <col:63, col:80> 1 2
|-FunctionDecl 0x560ef4aadcd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560ef4aadb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560ef4aadc10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560ef4aadd80 <line:443:22>
| `-NonNullAttr 0x560ef4aaddd8 <col:63, col:77> 1
|-FunctionDecl 0x560ef4aae0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560ef4aade28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560ef4aadea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x560ef4aadf20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560ef4aae180 <line:447:22>
| `-NonNullAttr 0x560ef4aae1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x560ef4aae488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x560ef4aae230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560ef4aae2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x560ef4aae328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560ef4aae540 <col:43>
| `-NonNullAttr 0x560ef4aae598 <col:84, col:98> 1
|-FunctionDecl 0x560ef4aae858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560ef4aae5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560ef4aae668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x560ef4aae6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x560ef4aae910 <line:452:22>
| `-NonNullAttr 0x560ef4aae968 <col:63, col:77> 3
|-FunctionDecl 0x560ef4aaec78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560ef4aae9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560ef4aaea60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x560ef4aaeaf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560ef4aaed30 <line:456:22>
| `-NonNullAttr 0x560ef4aaed88 <col:63, col:80> 2 3
|-FunctionDecl 0x560ef4aaef78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x560ef4aaedd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560ef4aaee58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x560ef4aaf028 <line:458:22>
|-FunctionDecl 0x560ef4aaf3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x560ef4aaf0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x560ef4aaf290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x560ef4aaf4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x560ef4aaf650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x560ef4aaf530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x560ef4aaf5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x560ef4aaf838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x560ef4aaf718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x560ef4aaf798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x560ef4aaf9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x560ef4aaf8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x560ef4aafb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x560ef4aafbd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x560ef4aafc78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x560ef4aafd68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x560ef4aafdd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x560ef4aaffa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_8/mix008_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x560ef4ab0098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x560ef4ab0150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x560ef4ab00f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x560ef4aafc50 '__pthread_unwind_buf_t'
| |   `-Record 0x560ef4aafbd0 ''
| `-AlignedAttr 0x560ef4ab01a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x560ef4ab0220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x560ef4ab0380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x560ef4ab03e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x560ef4ab0450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x560ef4ab04b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x560ef4ab06c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560ef4ab05b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560ef4ab0808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560ef4ab0778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560ef4ab0a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560ef4ab08c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x560ef4ab0aa8 <line:487:22>
|-RecordDecl 0x560ef4ab0b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x560ef4ab0e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x560ef4ab0c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x560ef4ab0cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x560ef4ab0ec8 <col:86>
| `-ReturnsTwiceAttr 0x560ef4ab0f20 <col:12> Implicit
|-FunctionDecl 0x560ef4ab1248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560ef4ab0ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x560ef4ab1100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x560ef4ab12f8 <line:493:22>
| `-NonNullAttr 0x560ef4ab1350 <col:63, col:77> 1
|-FunctionDecl 0x560ef4ab14c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560ef4ab1398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560ef4ab1570 <line:495:22>
| `-NonNullAttr 0x560ef4ab15c8 <col:63, col:77> 1
|-FunctionDecl 0x560ef4ab16d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560ef4ab1618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560ef4ab1778 <line:497:22>
| `-NonNullAttr 0x560ef4ab17d0 <col:52, col:66> 1
|-FunctionDecl 0x560ef4ab18d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560ef4ab1818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560ef4ab1978 <line:499:22>
| `-NonNullAttr 0x560ef4ab19d0 <col:52, col:66> 1
|-FunctionDecl 0x560ef4ab2c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560ef4ab2a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560ef4ab2ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560ef4ab2cd8 <col:36>
| `-NonNullAttr 0x560ef4ab2d30 <col:66, col:83> 1 2
|-FunctionDecl 0x560ef4ab2e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560ef4ab2d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560ef4ab2ed8 <line:504:22>
| `-NonNullAttr 0x560ef4ab2f30 <col:52, col:66> 1
|-FunctionDecl 0x560ef4ab31c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560ef4ab2fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560ef4ab3060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560ef4ab3278 <line:508:22>
| `-NonNullAttr 0x560ef4ab32d0 <col:63, col:80> 1 2
|-FunctionDecl 0x560ef4ab3598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x560ef4ab3318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560ef4ab3398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x560ef4ab3418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x560ef4ab3650 <line:512:22>
| `-NonNullAttr 0x560ef4ab36a8 <col:63, col:80> 1 3
|-FunctionDecl 0x560ef4ab37b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560ef4ab36f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560ef4ab3858 <line:514:22>
| `-NonNullAttr 0x560ef4ab38b0 <col:63, col:77> 1
|-FunctionDecl 0x560ef4ab3ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560ef4ab3960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560ef4ab3b80 <line:516:22>
| `-NonNullAttr 0x560ef4ab3bd8 <col:63, col:77> 1
|-FunctionDecl 0x560ef4ab3ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560ef4ab3c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560ef4ab3d88 <line:518:22>
| `-NonNullAttr 0x560ef4ab3de0 <col:63, col:77> 1
|-FunctionDecl 0x560ef4ab4008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560ef4ab3e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560ef4ab3ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x560ef4ab40b8 <line:522:22>
| `-NonNullAttr 0x560ef4ab4110 <col:63, col:80> 1 2
|-FunctionDecl 0x560ef4ab4318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560ef4ab4158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560ef4ab41d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x560ef4ab43c8 <line:525:22>
| `-NonNullAttr 0x560ef4ab4420 <col:63, col:77> 1
|-FunctionDecl 0x560ef4ab45c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560ef4ab4468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560ef4ab44e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x560ef4ab4678 <line:528:22>
| `-NonNullAttr 0x560ef4ab46d0 <col:63, col:80> 1 2
|-FunctionDecl 0x560ef4ab4858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560ef4ab4718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560ef4ab4798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x560ef4ab4908 <line:530:22>
| `-NonNullAttr 0x560ef4ab4960 <col:63, col:77> 1
|-FunctionDecl 0x560ef4ab4b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560ef4ab49a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560ef4ab4a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x560ef4ab4bd0 <line:534:22>
| `-NonNullAttr 0x560ef4ab4c28 <col:63, col:80> 1 2
|-FunctionDecl 0x560ef4ab4db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560ef4ab4c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560ef4ab4cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x560ef4ab4e68 <line:537:22>
| `-NonNullAttr 0x560ef4ab4ec0 <col:63, col:77> 1
|-FunctionDecl 0x560ef4ab5068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560ef4ab4f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560ef4ab4f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560ef4ab5118 <line:541:22>
| `-NonNullAttr 0x560ef4ab5170 <col:63, col:80> 1 2
|-FunctionDecl 0x560ef4ab52f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560ef4ab51b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560ef4ab5238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x560ef4ab53a8 <line:544:22>
| `-NonNullAttr 0x560ef4ab5400 <col:63, col:77> 1
|-FunctionDecl 0x560ef4ab55e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x560ef4ab5448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x560ef4ab54c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x560ef4ab5698 <line:547:22>
| `-NonNullAttr 0x560ef4ab56f0 <col:63, col:80> 1 2
|-FunctionDecl 0x560ef4ab5878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560ef4ab5738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560ef4ab57b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x560ef4ab5928 <line:550:22>
| `-NonNullAttr 0x560ef4ab5980 <col:63, col:77> 1
|-FunctionDecl 0x560ef4ab6cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x560ef4ab6aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560ef4ab6bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x560ef4ab6da8 <col:29>
| `-NonNullAttr 0x560ef4ab6e00 <col:70, col:84> 1
|-FunctionDecl 0x560ef4ab6f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560ef4ab6e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560ef4ab7020 <line:555:22>
| `-NonNullAttr 0x560ef4ab7078 <col:63, col:77> 1
|-FunctionDecl 0x560ef4ab7180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560ef4ab70c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560ef4ab7228 <line:557:22>
| `-NonNullAttr 0x560ef4ab7280 <col:52, col:66> 1
|-FunctionDecl 0x560ef4ab7380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560ef4ab72c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560ef4ab7428 <line:559:19>
| `-NonNullAttr 0x560ef4ab7480 <col:49, col:63> 1
|-FunctionDecl 0x560ef4ab76b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560ef4ab74c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560ef4ab7558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560ef4ab7768 <col:39>
| `-NonNullAttr 0x560ef4ab77c0 <col:69, col:86> 1 2
|-FunctionDecl 0x560ef4ab78c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560ef4ab7808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560ef4ab7968 <line:564:22>
| `-NonNullAttr 0x560ef4ab79c0 <col:52, col:66> 1
|-FunctionDecl 0x560ef4ab7b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560ef4ab7a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560ef4ab7bd0 <line:566:22>
| `-NonNullAttr 0x560ef4ab7c28 <col:52, col:66> 1
|-FunctionDecl 0x560ef4ab7de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560ef4ab7c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560ef4ab7d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560ef4ab7e98 <col:39>
| `-NonNullAttr 0x560ef4ab7ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x560ef4ab7ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560ef4ab7f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560ef4ab8098 <line:571:22>
| `-NonNullAttr 0x560ef4ab80f0 <col:52, col:66> 1
|-FunctionDecl 0x560ef4ab82d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560ef4ab81a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560ef4ab8380 <line:573:22>
| `-NonNullAttr 0x560ef4ab83d8 <col:63, col:77> 1
|-FunctionDecl 0x560ef4ab84e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560ef4ab8428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560ef4ab8588 <line:575:22>
| `-NonNullAttr 0x560ef4ab85e0 <col:63, col:77> 1
|-FunctionDecl 0x560ef4ab8808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560ef4ab8628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560ef4ab86a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x560ef4ab88b8 <line:579:22>
| `-NonNullAttr 0x560ef4ab8910 <col:63, col:80> 1 2
|-FunctionDecl 0x560ef4ab8b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560ef4ab8958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560ef4ab89d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x560ef4ab8be8 <line:582:22>
| `-NonNullAttr 0x560ef4ab8c40 <col:63, col:77> 1
|-FunctionDecl 0x560ef4ab8de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560ef4ab8c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560ef4ab8d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x560ef4ab8e98 <line:586:22>
| `-NonNullAttr 0x560ef4ab8ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x560ef4ab9078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560ef4ab8f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560ef4ab8fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x560ef4ab9128 <col:36>
| `-NonNullAttr 0x560ef4ab9180 <col:77, col:91> 1
|-FunctionDecl 0x560ef4ab94b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x560ef4ab9260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560ef4ab9370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x560ef4ab9568 <line:591:22>
| `-NonNullAttr 0x560ef4ab95c0 <col:63, col:77> 1
|-FunctionDecl 0x560ef4ab9738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560ef4ab9608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560ef4ab97e0 <line:593:22>
| `-NonNullAttr 0x560ef4ab9838 <col:63, col:77> 1
|-FunctionDecl 0x560ef4ab9940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560ef4ab9888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560ef4ab99e8 <line:595:22>
| `-NonNullAttr 0x560ef4ab9a40 <col:52, col:66> 1
|-FunctionDecl 0x560ef4ab9b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560ef4ab9aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560ef4ab9c00 <line:597:22>
| `-NonNullAttr 0x560ef4ab9c58 <col:52, col:66> 1
|-FunctionDecl 0x560ef4ab9e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x560ef4ab9ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560ef4ab9d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x560ef4ab9f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x560ef4aba268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560ef4ab9fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560ef4aba030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560ef4aba0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x560ef4aba320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x560ef4aba538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560ef4aba400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560ef4aba5e0 <line:606:22>
| `-NonNullAttr 0x560ef4aba638 <col:63, col:77> 1
|-FunctionDecl 0x560ef4aba740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560ef4aba688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560ef4aba7e8 <line:608:22>
| `-NonNullAttr 0x560ef4aba840 <col:63, col:77> 1
|-FunctionDecl 0x560ef4abaaa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560ef4aba888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560ef4aba908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x560ef4abab50 <line:612:22>
| `-NonNullAttr 0x560ef4ababa8 <col:63, col:80> 1 2
|-FunctionDecl 0x560ef4abadb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x560ef4ababf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560ef4abac78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x560ef4abae68 <col:37>
| `-NonNullAttr 0x560ef4abaec0 <col:78, col:92> 1
|-FunctionDecl 0x560ef4abb0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x560ef4abaf08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560ef4abafb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x560ef4abb188 <line:618:22>
| `-NonNullAttr 0x560ef4abb1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x560ef4abb3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x560ef4abb228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560ef4abb2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x560ef4abb458 <line:621:22>
| `-NonNullAttr 0x560ef4abb4b0 <col:63, col:77> 1
|-FunctionDecl 0x560ef4abb758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x560ef4abb590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x560ef4abb610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x560ef4abb808 <line:623:22>
| `-NonNullAttr 0x560ef4abb860 <col:63, col:77> 1
|-FunctionDecl 0x560ef4abb9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560ef4abb8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560ef4abbab0 <line:625:22>
| `-NonNullAttr 0x560ef4abbb08 <col:63, col:77> 1
|-FunctionDecl 0x560ef4abbc10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560ef4abbb58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560ef4abbcb8 <line:627:22>
| `-NonNullAttr 0x560ef4abbd10 <col:52, col:66> 1
|-FunctionDecl 0x560ef4abbe10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560ef4abbd58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560ef4abbeb8 <line:629:22>
| `-NonNullAttr 0x560ef4abbf10 <col:52, col:66> 1
|-FunctionDecl 0x560ef4abc010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560ef4abbf58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560ef4abc0b8 <line:631:22>
| `-NonNullAttr 0x560ef4abc110 <col:52, col:66> 1
|-FunctionDecl 0x560ef4abc4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x560ef4abc1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x560ef4abc300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560ef4abc380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x560ef4abc5a0 <line:635:22>
| `-NonNullAttr 0x560ef4abc5f8 <col:63, col:77> 1
|-FunctionDecl 0x560ef4abc778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560ef4abc648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560ef4abc820 <line:637:22>
| `-NonNullAttr 0x560ef4abc878 <col:63, col:77> 1
|-FunctionDecl 0x560ef4abc980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560ef4abc8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560ef4abca28 <line:639:22>
| `-NonNullAttr 0x560ef4abca80 <col:52, col:66> 1
|-FunctionDecl 0x560ef4abdc88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560ef4abdb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560ef4abdd30 <line:641:22>
| `-NonNullAttr 0x560ef4abdd88 <col:63, col:77> 1
|-FunctionDecl 0x560ef4abde90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560ef4abddd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560ef4abdf38 <line:643:22>
| `-NonNullAttr 0x560ef4abdf90 <col:63, col:77> 1
|-FunctionDecl 0x560ef4abe1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560ef4abdfd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560ef4abe058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x560ef4abe268 <line:647:22>
| `-NonNullAttr 0x560ef4abe2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x560ef4abe4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x560ef4abe308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x560ef4abe388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x560ef4abe578 <line:650:22>
| `-NonNullAttr 0x560ef4abe5d0 <col:63, col:77> 1
|-FunctionDecl 0x560ef4abe918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x560ef4abe6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x560ef4abe7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x560ef4abe9c8 <line:653:22>
| `-NonNullAttr 0x560ef4abea20 <col:63, col:77> 1
|-FunctionDecl 0x560ef4abeb88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x560ef4abea68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560ef4abec30 <col:69>
|-FunctionDecl 0x560ef4abeda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x560ef4abec98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560ef4abee50 <col:72>
|-FunctionDecl 0x560ef4abf088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x560ef4abeeb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x560ef4abef68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x560ef4abf138 <col:44>
|-FunctionDecl 0x560ef4abf358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x560ef4abf1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560ef4abf218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x560ef4abf408 <line:660:22>
| `-NonNullAttr 0x560ef4abf460 <col:63, col:77> 2
|-FunctionDecl 0x560ef4abf8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x560ef4abf540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x560ef4abf650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x560ef4abf760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x560ef4abf960 <col:47>
|-FunctionDecl 0x560ef4abfaf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x560ef4abf9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560ef4abfc48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x560ef4abfbb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560ef4abfda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x560ef4abfd08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560ef4abfef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x560ef4abfe60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560ef4abffc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x560ef4ac0080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x560ef4ac0140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x560ef4ac01f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x560ef4ac0278 prev 0x560ef4ac01f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x560ef4ac02e0 <col:24> 'int' 0
|-VarDecl 0x560ef4ac0318 <line:674:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x560ef4ac0398 prev 0x560ef4ac0318 <line:675:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x560ef4ac0400 <col:27> 'int' 0
|-VarDecl 0x560ef4ac0438 <line:676:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x560ef4ac04b8 prev 0x560ef4ac0438 <line:677:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x560ef4ac0520 <col:27> 'int' 0
|-VarDecl 0x560ef4ac0558 <line:678:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x560ef4ac05d8 prev 0x560ef4ac0558 <line:679:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x560ef4ac0640 <col:27> 'int' 0
|-VarDecl 0x560ef4ac0678 <line:680:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x560ef4ac06f8 prev 0x560ef4ac0678 <line:681:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x560ef4ac0760 <col:27> 'int' 0
|-VarDecl 0x560ef4ac0798 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x560ef4ac0818 prev 0x560ef4ac0798 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x560ef4ac0880 <col:9> 'int' 0
|-VarDecl 0x560ef4ac08b0 <line:684:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x560ef4ac0930 <line:685:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x560ef4ac09a8 <line:686:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x560ef4ac0a20 <line:687:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x560ef4ac0b00 <line:688:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x560ef4ac0b78 <line:689:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x560ef4ac0bf0 <line:690:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x560ef4ac0c68 <line:691:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x560ef4ac0ce0 <line:692:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x560ef4ac0d58 <line:693:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x560ef4ac0dd0 <line:694:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x560ef4ac0e48 <line:695:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x560ef4ac0ec0 <line:696:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x560ef4ac0f40 <line:697:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x560ef4ac0fc0 <line:698:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x560ef4ac1038 <line:699:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x560ef4ac10b8 <line:700:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x560ef4ac1130 <line:701:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x560ef4ac11a8 <line:702:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x560ef4ac1220 <line:703:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x560ef4ac12a0 <line:704:1, col:5> col:5 used x 'int'
|-VarDecl 0x560ef4ac1320 prev 0x560ef4ac12a0 <line:705:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x560ef4ac1388 <col:9> 'int' 0
|-VarDecl 0x560ef4ac13c0 <line:706:1, col:5> col:5 used y 'int'
|-VarDecl 0x560ef4ac1440 prev 0x560ef4ac13c0 <line:707:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x560ef4ac14a8 <col:9> 'int' 0
|-VarDecl 0x560ef4ac14e0 <line:708:1, col:5> col:5 used z 'int'
|-VarDecl 0x560ef4ac1560 prev 0x560ef4ac14e0 <line:709:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x560ef4ac15c8 <col:9> 'int' 0
|-VarDecl 0x560ef4ac15f8 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x560ef4ac1670 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x560ef4ac1788 prev 0x560ef4abfaf0 <line:712:1, line:741:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x560ef4ac16f0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560ef4ac3028 <line:713:1, line:741:1>
|   |-CallExpr 0x560ef4ac1898 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac1880 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac1830 <col:3> 'void ()' Function 0x560ef4a66e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ef4ac1910 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560ef4ac18b8 <col:3> 'int' lvalue Var 0x560ef4ac10b8 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x560ef4ac18f8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560ef4ac18d8 <col:15> 'int' lvalue Var 0x560ef4ac0fc0 'a$w_buff0' 'int'
|   |-BinaryOperator 0x560ef4ac1970 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560ef4ac1930 <col:3> 'int' lvalue Var 0x560ef4ac0fc0 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x560ef4ac1950 <col:15> 'int' 1
|   |-BinaryOperator 0x560ef4ac19e8 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac1990 <col:3> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac19d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560ef4ac19b0 <col:20> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560ef4ac1a80 <line:718:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac1a08 <col:3> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x560ef4ac1a58 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560ef4ac1a28 <col:27> 'int' 1
|   |-CallExpr 0x560ef4ac1c18 <line:719:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x560ef4ac1c00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x560ef4ac1aa0 <col:3> 'void (int)' Function 0x560ef4a66bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x560ef4ac1bb0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x560ef4ac1b90 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x560ef4ac1b70 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x560ef4ac1b28 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x560ef4ac1b10 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x560ef4ac1ac0 <col:23> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x560ef4ac1b58 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x560ef4ac1b40 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x560ef4ac1ae0 <col:41> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560ef4ac1c98 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac1c40 <col:3> '_Bool' lvalue Var 0x560ef4ac0c68 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac1c80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560ef4ac1c60 <col:20> '_Bool' lvalue Var 0x560ef4ac09a8 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x560ef4ac1d10 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac1cb8 <col:3> '_Bool' lvalue Var 0x560ef4ac0ce0 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac1cf8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560ef4ac1cd8 <col:20> '_Bool' lvalue Var 0x560ef4ac0a20 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560ef4ac1d88 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac1d30 <col:3> '_Bool' lvalue Var 0x560ef4ac0d58 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac1d70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560ef4ac1d50 <col:20> '_Bool' lvalue Var 0x560ef4ac0b00 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560ef4ac1e00 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac1da8 <col:3> '_Bool' lvalue Var 0x560ef4ac0dd0 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac1de8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560ef4ac1dc8 <col:20> '_Bool' lvalue Var 0x560ef4ac0b78 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560ef4ac1e78 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac1e20 <col:3> '_Bool' lvalue Var 0x560ef4ac0e48 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac1e60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560ef4ac1e40 <col:20> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x560ef4ac1f10 <line:725:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac1e98 <col:3> '_Bool' lvalue Var 0x560ef4ac0a20 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x560ef4ac1ee8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560ef4ac1eb8 <col:27> 'int' 1
|   |-CallExpr 0x560ef4ac1f68 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac1f50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac1f30 <col:3> 'void ()' Function 0x560ef4a66f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560ef4ac1fc0 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac1fa8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac1f88 <col:3> 'void ()' Function 0x560ef4a66e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ef4ac2020 <line:728:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560ef4ac1fe0 <col:3> 'int' lvalue Var 0x560ef4ac1320 'x' 'int'
|   | `-IntegerLiteral 0x560ef4ac2000 <col:7> 'int' 1
|   |-CallExpr 0x560ef4ac2078 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac2060 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac2040 <col:3> 'void ()' Function 0x560ef4a66f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560ef4ac20d0 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac20b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac2098 <col:3> 'void ()' Function 0x560ef4a66e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ef4ac23b8 <line:731:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560ef4ac20f0 <col:3> 'int' lvalue Var 0x560ef4ac0818 'a' 'int'
|   | `-ConditionalOperator 0x560ef4ac2388 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560ef4ac21b0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560ef4ac2168 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560ef4ac2150 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560ef4ac2110 <col:7> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560ef4ac2198 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560ef4ac2180 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560ef4ac2130 <col:25> '_Bool' lvalue Var 0x560ef4ac0a20 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x560ef4ac2370 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560ef4ac21d0 <col:42> 'int' lvalue Var 0x560ef4ac0fc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x560ef4ac2350 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560ef4ac2320 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560ef4ac2290 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560ef4ac2248 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560ef4ac2230 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560ef4ac21f0 <col:55> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560ef4ac2278 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560ef4ac2260 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560ef4ac2210 <col:73> '_Bool' lvalue Var 0x560ef4ac0ce0 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560ef4ac22f0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560ef4ac22b0 <col:90> 'int' lvalue Var 0x560ef4ac10b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560ef4ac2308 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ef4ac22d0 <col:102> 'int' lvalue Var 0x560ef4ac0818 'a' 'int'
|   |-BinaryOperator 0x560ef4ac25c0 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac23d8 <col:3> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac25a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ef4ac2578 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560ef4ac2498 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560ef4ac2450 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560ef4ac2438 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560ef4ac23f8 <col:20> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560ef4ac2480 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560ef4ac2468 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560ef4ac2418 <col:38> '_Bool' lvalue Var 0x560ef4ac0a20 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560ef4ac2530 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ef4ac24e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ef4ac24b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560ef4ac2560 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ef4ac2548 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ef4ac2510 <col:66> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560ef4ac28a8 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac25e0 <col:3> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac2890 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ef4ac2860 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560ef4ac2780 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560ef4ac26a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560ef4ac2658 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560ef4ac2640 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560ef4ac2600 <col:20> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560ef4ac2688 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560ef4ac2670 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560ef4ac2620 <col:38> '_Bool' lvalue Var 0x560ef4ac0a20 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x560ef4ac2760 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560ef4ac2718 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560ef4ac2700 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560ef4ac26c0 <col:56> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560ef4ac2748 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560ef4ac2730 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560ef4ac26e0 <col:74> '_Bool' lvalue Var 0x560ef4ac0ce0 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560ef4ac2818 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ef4ac27d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ef4ac27a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560ef4ac2848 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ef4ac2830 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ef4ac27f8 <col:102> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560ef4ac2ab0 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac28c8 <col:3> '_Bool' lvalue Var 0x560ef4ac0a20 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac2a98 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ef4ac2a68 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560ef4ac2988 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560ef4ac2940 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560ef4ac2928 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560ef4ac28e8 <col:20> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560ef4ac2970 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560ef4ac2958 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560ef4ac2908 <col:38> '_Bool' lvalue Var 0x560ef4ac0a20 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560ef4ac2a20 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ef4ac29d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ef4ac29a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560ef4ac2a50 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ef4ac2a38 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ef4ac2a00 <col:66> '_Bool' lvalue Var 0x560ef4ac0a20 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560ef4ac2da8 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac2ad0 <col:3> '_Bool' lvalue Var 0x560ef4ac0ce0 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac2d90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ef4ac2d60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560ef4ac2c80 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560ef4ac2ba0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560ef4ac2b58 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560ef4ac2b40 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560ef4ac2af0 <col:20> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560ef4ac2b88 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560ef4ac2b70 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560ef4ac2b20 <col:38> '_Bool' lvalue Var 0x560ef4ac0a20 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x560ef4ac2c60 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560ef4ac2c18 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560ef4ac2c00 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560ef4ac2bc0 <col:56> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560ef4ac2c48 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560ef4ac2c30 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560ef4ac2be0 <col:74> '_Bool' lvalue Var 0x560ef4ac0ce0 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560ef4ac2d18 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ef4ac2cd0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ef4ac2ca0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560ef4ac2d48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ef4ac2d30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ef4ac2cf8 <col:102> '_Bool' lvalue Var 0x560ef4ac0ce0 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x560ef4ac2e00 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac2de8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac2dc8 <col:3> 'void ()' Function 0x560ef4a66f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560ef4ac2e58 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac2e40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac2e20 <col:3> 'void ()' Function 0x560ef4a66e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ef4ac2f10 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560ef4ac2e78 <col:3> 'int' lvalue Var 0x560ef4ac0278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560ef4ac2ef0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560ef4ac2ed8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560ef4ac2e98 <col:22> 'int' lvalue Var 0x560ef4ac0278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560ef4ac2eb8 <col:41> 'int' 1
|   |-CallExpr 0x560ef4ac2f68 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac2f50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac2f30 <col:3> 'void ()' Function 0x560ef4a66f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560ef4ac3018 <line:740:3, col:36>
|     `-CallExpr 0x560ef4ac2ff8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560ef4ac2fe0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560ef4ac2f88 <col:10> 'void *(void)' Function 0x560ef4a66958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560ef4ac31c0 prev 0x560ef4abfc48 <line:742:1, line:761:1> line:742:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x560ef4ac3128 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560ef4ac43e0 <line:743:1, line:761:1>
|   |-CallExpr 0x560ef4ac32a0 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac3288 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac3268 <col:3> 'void ()' Function 0x560ef4a66e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ef4ac3300 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560ef4ac32c0 <col:3> 'int' lvalue Var 0x560ef4ac1320 'x' 'int'
|   | `-IntegerLiteral 0x560ef4ac32e0 <col:7> 'int' 2
|   |-CallExpr 0x560ef4ac3358 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac3340 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac3320 <col:3> 'void ()' Function 0x560ef4a66f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560ef4ac33b0 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac3398 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac3378 <col:3> 'void ()' Function 0x560ef4a66e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ef4ac3410 <line:748:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560ef4ac33d0 <col:3> 'int' lvalue Var 0x560ef4ac1440 'y' 'int'
|   | `-IntegerLiteral 0x560ef4ac33f0 <col:7> 'int' 1
|   |-CallExpr 0x560ef4ac3468 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac3450 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac3430 <col:3> 'void ()' Function 0x560ef4a66f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560ef4ac34c0 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac34a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac3488 <col:3> 'void ()' Function 0x560ef4a66e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ef4ac37a8 <line:751:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560ef4ac34e0 <col:3> 'int' lvalue Var 0x560ef4ac0818 'a' 'int'
|   | `-ConditionalOperator 0x560ef4ac3778 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560ef4ac35a0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560ef4ac3558 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560ef4ac3540 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560ef4ac3500 <col:7> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560ef4ac3588 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560ef4ac3570 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560ef4ac3520 <col:25> '_Bool' lvalue Var 0x560ef4ac0b00 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x560ef4ac3760 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560ef4ac35c0 <col:42> 'int' lvalue Var 0x560ef4ac0fc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x560ef4ac3740 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560ef4ac3710 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560ef4ac3680 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560ef4ac3638 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560ef4ac3620 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560ef4ac35e0 <col:55> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560ef4ac3668 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560ef4ac3650 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560ef4ac3600 <col:73> '_Bool' lvalue Var 0x560ef4ac0d58 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560ef4ac36e0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560ef4ac36a0 <col:90> 'int' lvalue Var 0x560ef4ac10b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560ef4ac36f8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ef4ac36c0 <col:102> 'int' lvalue Var 0x560ef4ac0818 'a' 'int'
|   |-BinaryOperator 0x560ef4ac39b0 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac37c8 <col:3> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac3998 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ef4ac3968 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560ef4ac3888 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560ef4ac3840 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560ef4ac3828 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560ef4ac37e8 <col:20> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560ef4ac3870 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560ef4ac3858 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560ef4ac3808 <col:38> '_Bool' lvalue Var 0x560ef4ac0b00 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560ef4ac3920 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ef4ac38d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ef4ac38a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560ef4ac3950 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ef4ac3938 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ef4ac3900 <col:66> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560ef4ac3ca8 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac39d0 <col:3> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac3c90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ef4ac3c60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560ef4ac3b80 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560ef4ac3a90 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560ef4ac3a48 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560ef4ac3a30 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560ef4ac39f0 <col:20> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560ef4ac3a78 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560ef4ac3a60 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560ef4ac3a10 <col:38> '_Bool' lvalue Var 0x560ef4ac0b00 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x560ef4ac3b60 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560ef4ac3b08 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560ef4ac3af0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560ef4ac3ab0 <col:56> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560ef4ac3b48 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560ef4ac3b30 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560ef4ac3ad0 <col:74> '_Bool' lvalue Var 0x560ef4ac0d58 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560ef4ac3c18 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ef4ac3bd0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ef4ac3ba0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560ef4ac3c48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ef4ac3c30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ef4ac3bf8 <col:102> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560ef4ac3eb0 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac3cc8 <col:3> '_Bool' lvalue Var 0x560ef4ac0b00 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac3e98 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ef4ac3e68 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560ef4ac3d88 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560ef4ac3d40 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560ef4ac3d28 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560ef4ac3ce8 <col:20> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560ef4ac3d70 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560ef4ac3d58 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560ef4ac3d08 <col:38> '_Bool' lvalue Var 0x560ef4ac0b00 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560ef4ac3e20 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ef4ac3dd8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ef4ac3da8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560ef4ac3e50 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ef4ac3e38 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ef4ac3e00 <col:66> '_Bool' lvalue Var 0x560ef4ac0b00 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560ef4ac4198 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac3ed0 <col:3> '_Bool' lvalue Var 0x560ef4ac0d58 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac4180 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ef4ac4150 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560ef4ac4070 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560ef4ac3f90 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560ef4ac3f48 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560ef4ac3f30 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560ef4ac3ef0 <col:20> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560ef4ac3f78 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560ef4ac3f60 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560ef4ac3f10 <col:38> '_Bool' lvalue Var 0x560ef4ac0b00 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x560ef4ac4050 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560ef4ac4008 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560ef4ac3ff0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560ef4ac3fb0 <col:56> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560ef4ac4038 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560ef4ac4020 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560ef4ac3fd0 <col:74> '_Bool' lvalue Var 0x560ef4ac0d58 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560ef4ac4108 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ef4ac40c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ef4ac4090 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560ef4ac4138 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ef4ac4120 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ef4ac40e8 <col:102> '_Bool' lvalue Var 0x560ef4ac0d58 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x560ef4ac41f0 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac41d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac41b8 <col:3> 'void ()' Function 0x560ef4a66f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560ef4ac4248 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac4230 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac4210 <col:3> 'void ()' Function 0x560ef4a66e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ef4ac4300 <line:758:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560ef4ac4268 <col:3> 'int' lvalue Var 0x560ef4ac0278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560ef4ac42e0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560ef4ac42c8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560ef4ac4288 <col:22> 'int' lvalue Var 0x560ef4ac0278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560ef4ac42a8 <col:41> 'int' 1
|   |-CallExpr 0x560ef4ac4358 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac4340 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac4320 <col:3> 'void ()' Function 0x560ef4a66f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560ef4ac43d0 <line:760:3, col:36>
|     `-CallExpr 0x560ef4ac43b0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560ef4ac4398 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560ef4ac4378 <col:10> 'void *(void)' Function 0x560ef4a66958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560ef4ac4528 prev 0x560ef4abfda0 <line:762:1, line:784:1> line:762:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x560ef4ac4490 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560ef4ac5890 <line:763:1, line:784:1>
|   |-CallExpr 0x560ef4ac4608 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac45f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac45d0 <col:3> 'void ()' Function 0x560ef4a66e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ef4ac4668 <line:765:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560ef4ac4628 <col:3> 'int' lvalue Var 0x560ef4ac1440 'y' 'int'
|   | `-IntegerLiteral 0x560ef4ac4648 <col:7> 'int' 2
|   |-CallExpr 0x560ef4ac46c0 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac46a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac4688 <col:3> 'void ()' Function 0x560ef4a66f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560ef4ac4718 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac4700 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac46e0 <col:3> 'void ()' Function 0x560ef4a66e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ef4ac4790 <line:768:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560ef4ac4738 <col:3> 'int' lvalue Var 0x560ef4ac0398 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x560ef4ac4778 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560ef4ac4758 <col:25> 'int' lvalue Var 0x560ef4ac1440 'y' 'int'
|   |-CallExpr 0x560ef4ac47e8 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac47d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac47b0 <col:3> 'void ()' Function 0x560ef4a66f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560ef4ac4840 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac4828 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac4808 <col:3> 'void ()' Function 0x560ef4a66e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ef4ac48b8 <line:771:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560ef4ac4860 <col:3> 'int' lvalue Var 0x560ef4ac04b8 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x560ef4ac48a0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560ef4ac4880 <col:25> 'int' lvalue Var 0x560ef4ac1560 'z' 'int'
|   |-CallExpr 0x560ef4ac4910 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac48f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac48d8 <col:3> 'void ()' Function 0x560ef4a66f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560ef4ac4968 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac4950 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac4930 <col:3> 'void ()' Function 0x560ef4a66e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ef4ac4c68 <line:774:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560ef4ac4988 <col:3> 'int' lvalue Var 0x560ef4ac0818 'a' 'int'
|   | `-ConditionalOperator 0x560ef4ac4c38 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560ef4ac4a48 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560ef4ac4a00 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560ef4ac49e8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560ef4ac49a8 <col:7> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560ef4ac4a30 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560ef4ac4a18 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560ef4ac49c8 <col:25> '_Bool' lvalue Var 0x560ef4ac0b78 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x560ef4ac4c20 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560ef4ac4a68 <col:42> 'int' lvalue Var 0x560ef4ac0fc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x560ef4ac4c00 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560ef4ac4bd0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560ef4ac4b40 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560ef4ac4ae0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560ef4ac4ac8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560ef4ac4a88 <col:55> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560ef4ac4b10 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560ef4ac4af8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560ef4ac4aa8 <col:73> '_Bool' lvalue Var 0x560ef4ac0dd0 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560ef4ac4ba0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560ef4ac4b60 <col:90> 'int' lvalue Var 0x560ef4ac10b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560ef4ac4bb8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ef4ac4b80 <col:102> 'int' lvalue Var 0x560ef4ac0818 'a' 'int'
|   |-BinaryOperator 0x560ef4ac4e70 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac4c88 <col:3> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac4e58 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ef4ac4e28 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560ef4ac4d48 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560ef4ac4d00 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560ef4ac4ce8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560ef4ac4ca8 <col:20> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560ef4ac4d30 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560ef4ac4d18 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560ef4ac4cc8 <col:38> '_Bool' lvalue Var 0x560ef4ac0b78 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560ef4ac4de0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ef4ac4d98 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ef4ac4d68 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560ef4ac4e10 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ef4ac4df8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ef4ac4dc0 <col:66> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560ef4ac5158 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac4e90 <col:3> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac5140 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ef4ac5110 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560ef4ac5030 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560ef4ac4f50 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560ef4ac4f08 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560ef4ac4ef0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560ef4ac4eb0 <col:20> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560ef4ac4f38 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560ef4ac4f20 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560ef4ac4ed0 <col:38> '_Bool' lvalue Var 0x560ef4ac0b78 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x560ef4ac5010 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560ef4ac4fc8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560ef4ac4fb0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560ef4ac4f70 <col:56> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560ef4ac4ff8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560ef4ac4fe0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560ef4ac4f90 <col:74> '_Bool' lvalue Var 0x560ef4ac0dd0 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560ef4ac50c8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ef4ac5080 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ef4ac5050 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560ef4ac50f8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ef4ac50e0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ef4ac50a8 <col:102> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560ef4ac5360 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac5178 <col:3> '_Bool' lvalue Var 0x560ef4ac0b78 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac5348 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ef4ac5318 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560ef4ac5238 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560ef4ac51f0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560ef4ac51d8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560ef4ac5198 <col:20> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560ef4ac5220 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560ef4ac5208 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560ef4ac51b8 <col:38> '_Bool' lvalue Var 0x560ef4ac0b78 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560ef4ac52d0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ef4ac5288 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ef4ac5258 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560ef4ac5300 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ef4ac52e8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ef4ac52b0 <col:66> '_Bool' lvalue Var 0x560ef4ac0b78 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560ef4ac5648 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac5380 <col:3> '_Bool' lvalue Var 0x560ef4ac0dd0 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac5630 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ef4ac5600 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560ef4ac5520 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560ef4ac5440 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560ef4ac53f8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560ef4ac53e0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560ef4ac53a0 <col:20> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560ef4ac5428 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560ef4ac5410 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560ef4ac53c0 <col:38> '_Bool' lvalue Var 0x560ef4ac0b78 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x560ef4ac5500 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560ef4ac54b8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560ef4ac54a0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560ef4ac5460 <col:56> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560ef4ac54e8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560ef4ac54d0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560ef4ac5480 <col:74> '_Bool' lvalue Var 0x560ef4ac0dd0 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560ef4ac55b8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ef4ac5570 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ef4ac5540 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560ef4ac55e8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ef4ac55d0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ef4ac5598 <col:102> '_Bool' lvalue Var 0x560ef4ac0dd0 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x560ef4ac56a0 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac5688 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac5668 <col:3> 'void ()' Function 0x560ef4a66f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560ef4ac56f8 <line:780:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac56e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac56c0 <col:3> 'void ()' Function 0x560ef4a66e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ef4ac57b0 <line:781:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560ef4ac5718 <col:3> 'int' lvalue Var 0x560ef4ac0278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560ef4ac5790 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560ef4ac5778 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560ef4ac5738 <col:22> 'int' lvalue Var 0x560ef4ac0278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560ef4ac5758 <col:41> 'int' 1
|   |-CallExpr 0x560ef4ac5808 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac57f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac57d0 <col:3> 'void ()' Function 0x560ef4a66f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560ef4ac5880 <line:783:3, col:36>
|     `-CallExpr 0x560ef4ac5860 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560ef4ac5848 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560ef4ac5828 <col:10> 'void *(void)' Function 0x560ef4a66958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560ef4ac59f0 prev 0x560ef4abfef8 <line:785:1, line:820:1> line:785:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x560ef4ac5958 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560ef4ac96f8 <line:786:1, line:820:1>
|   |-CallExpr 0x560ef4ac5ad0 <line:787:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac5ab8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac5a98 <col:3> 'void ()' Function 0x560ef4a66e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ef4ac5b50 <line:788:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560ef4ac5af0 <col:3> 'int' lvalue Var 0x560ef4ac1560 'z' 'int'
|   | `-IntegerLiteral 0x560ef4ac5b10 <col:7> 'int' 1
|   |-CallExpr 0x560ef4ac5ba8 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac5b90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac5b70 <col:3> 'void ()' Function 0x560ef4a66f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560ef4ac5c00 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac5be8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac5bc8 <col:3> 'void ()' Function 0x560ef4a66e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ef4ac5c78 <line:791:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560ef4ac5c20 <col:3> 'int' lvalue Var 0x560ef4ac05d8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x560ef4ac5c60 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560ef4ac5c40 <col:25> 'int' lvalue Var 0x560ef4ac1560 'z' 'int'
|   |-CallExpr 0x560ef4ac5cd0 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac5cb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac5c98 <col:3> 'void ()' Function 0x560ef4a66f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560ef4ac5d28 <line:793:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac5d10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac5cf0 <col:3> 'void ()' Function 0x560ef4a66e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ef4ac5dd8 <line:794:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac5d48 <col:3> '_Bool' lvalue Var 0x560ef4ac15f8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac5dc0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x560ef4ac5da0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x560ef4ac5d88 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x560ef4ac5d68 <col:19> 'void *(void)' Function 0x560ef4a66958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x560ef4ac5e88 <line:795:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac5df8 <col:3> '_Bool' lvalue Var 0x560ef4ac1670 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac5e70 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x560ef4ac5e50 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x560ef4ac5e38 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x560ef4ac5e18 <col:19> 'void *(void)' Function 0x560ef4a66958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x560ef4ac5f00 <line:796:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac5ea8 <col:3> '_Bool' lvalue Var 0x560ef4ac08b0 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac5ee8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560ef4ac5ec8 <col:21> '_Bool' lvalue Var 0x560ef4ac1670 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x560ef4ac5f78 <line:797:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560ef4ac5f20 <col:3> 'int' lvalue Var 0x560ef4ac0930 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x560ef4ac5f60 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560ef4ac5f40 <col:15> 'int' lvalue Var 0x560ef4ac0818 'a' 'int'
|   |-BinaryOperator 0x560ef4ac63b0 <line:798:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x560ef4ac5f98 <col:3> 'int' lvalue Var 0x560ef4ac0818 'a' 'int'
|   | `-ConditionalOperator 0x560ef4ac6380 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x560ef4ac61a8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x560ef4ac60c8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x560ef4ac5ff0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x560ef4ac5fd8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x560ef4ac5fb8 <col:8> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x560ef4ac60a8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x560ef4ac6040 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x560ef4ac6028 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x560ef4ac6008 <col:27> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x560ef4ac6090 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x560ef4ac6078 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x560ef4ac6058 <col:46> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x560ef4ac6188 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x560ef4ac6120 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x560ef4ac6108 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x560ef4ac60e8 <col:65> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x560ef4ac6170 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x560ef4ac6158 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x560ef4ac6138 <col:84> '_Bool' lvalue Var 0x560ef4ac0e48 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x560ef4ac6368 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560ef4ac61c8 <col:101> 'int' lvalue Var 0x560ef4ac0818 'a' 'int'
|   |   `-ParenExpr 0x560ef4ac6348 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x560ef4ac6318 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x560ef4ac6288 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560ef4ac6240 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560ef4ac6228 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560ef4ac61e8 <col:106> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560ef4ac6270 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560ef4ac6258 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560ef4ac6208 <col:124> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x560ef4ac62e8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560ef4ac62a8 <col:141> 'int' lvalue Var 0x560ef4ac0fc0 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x560ef4ac6300 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ef4ac62c8 <col:153> 'int' lvalue Var 0x560ef4ac10b8 'a$w_buff1' 'int'
|   |-BinaryOperator 0x560ef4ac68c0 <line:799:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560ef4ac63d0 <col:3> 'int' lvalue Var 0x560ef4ac0fc0 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x560ef4ac6890 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560ef4ac6860 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560ef4ac6848 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560ef4ac63f0 <col:15> '_Bool' lvalue Var 0x560ef4ac1670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560ef4ac6878 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560ef4ac6410 <col:31> 'int' lvalue Var 0x560ef4ac0fc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x560ef4ac6828 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560ef4ac67f8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560ef4ac6620 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560ef4ac6540 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560ef4ac6468 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560ef4ac6450 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560ef4ac6430 <col:45> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560ef4ac6520 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560ef4ac64b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560ef4ac64a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560ef4ac6480 <col:64> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x560ef4ac6508 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560ef4ac64f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560ef4ac64d0 <col:83> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560ef4ac6600 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560ef4ac6598 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560ef4ac6580 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560ef4ac6560 <col:102> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x560ef4ac65e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560ef4ac65d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560ef4ac65b0 <col:121> '_Bool' lvalue Var 0x560ef4ac0e48 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x560ef4ac67e0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560ef4ac6640 <col:138> 'int' lvalue Var 0x560ef4ac0fc0 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x560ef4ac67c0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560ef4ac6790 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560ef4ac6700 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560ef4ac66b8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560ef4ac66a0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560ef4ac6660 <col:151> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560ef4ac66e8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560ef4ac66d0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560ef4ac6680 <col:169> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x560ef4ac6760 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560ef4ac6720 <col:186> 'int' lvalue Var 0x560ef4ac0fc0 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x560ef4ac6778 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560ef4ac6740 <col:198> 'int' lvalue Var 0x560ef4ac0fc0 'a$w_buff0' 'int'
|   |-BinaryOperator 0x560ef4ac6de0 <line:800:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560ef4ac68e0 <col:3> 'int' lvalue Var 0x560ef4ac10b8 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x560ef4ac6db0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560ef4ac6d80 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560ef4ac6d68 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560ef4ac6900 <col:15> '_Bool' lvalue Var 0x560ef4ac1670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560ef4ac6d98 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560ef4ac6920 <col:31> 'int' lvalue Var 0x560ef4ac10b8 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x560ef4ac6d48 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560ef4ac6d18 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560ef4ac6b30 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560ef4ac6a50 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560ef4ac6978 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560ef4ac6960 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560ef4ac6940 <col:45> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560ef4ac6a30 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560ef4ac69c8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560ef4ac69b0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560ef4ac6990 <col:64> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x560ef4ac6a18 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560ef4ac6a00 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560ef4ac69e0 <col:83> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560ef4ac6b10 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560ef4ac6aa8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560ef4ac6a90 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560ef4ac6a70 <col:102> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x560ef4ac6af8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560ef4ac6ae0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560ef4ac6ac0 <col:121> '_Bool' lvalue Var 0x560ef4ac0e48 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x560ef4ac6d00 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560ef4ac6b60 <col:138> 'int' lvalue Var 0x560ef4ac10b8 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x560ef4ac6ce0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560ef4ac6cb0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560ef4ac6c20 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560ef4ac6bd8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560ef4ac6bc0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560ef4ac6b80 <col:151> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560ef4ac6c08 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560ef4ac6bf0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560ef4ac6ba0 <col:169> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x560ef4ac6c80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560ef4ac6c40 <col:186> 'int' lvalue Var 0x560ef4ac10b8 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x560ef4ac6c98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560ef4ac6c60 <col:198> 'int' lvalue Var 0x560ef4ac10b8 'a$w_buff1' 'int'
|   |-BinaryOperator 0x560ef4ac7388 <line:801:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac6e00 <col:3> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac7370 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ef4ac7340 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560ef4ac72f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560ef4ac72e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560ef4ac6e20 <col:20> '_Bool' lvalue Var 0x560ef4ac1670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560ef4ac7328 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560ef4ac7310 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560ef4ac6e40 <col:36> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x560ef4ac72c0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560ef4ac7290 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560ef4ac7050 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560ef4ac6f70 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560ef4ac6e98 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560ef4ac6e80 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560ef4ac6e60 <col:55> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560ef4ac6f50 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560ef4ac6ee8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560ef4ac6ed0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560ef4ac6eb0 <col:74> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x560ef4ac6f38 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560ef4ac6f20 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560ef4ac6f00 <col:93> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560ef4ac7030 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560ef4ac6fc8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560ef4ac6fb0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560ef4ac6f90 <col:112> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x560ef4ac7018 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560ef4ac7000 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560ef4ac6fe0 <col:131> '_Bool' lvalue Var 0x560ef4ac0e48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x560ef4ac7278 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560ef4ac7260 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560ef4ac7070 <col:148> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x560ef4ac7240 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560ef4ac7210 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560ef4ac7130 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560ef4ac70e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560ef4ac70d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560ef4ac7090 <col:166> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560ef4ac7118 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560ef4ac7100 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560ef4ac70b0 <col:184> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x560ef4ac71c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560ef4ac7180 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560ef4ac7150 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560ef4ac71f8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560ef4ac71e0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560ef4ac71a8 <col:212> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560ef4ac7950 <line:802:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac73a8 <col:3> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac7938 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ef4ac7908 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560ef4ac78c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560ef4ac78a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560ef4ac73c8 <col:20> '_Bool' lvalue Var 0x560ef4ac1670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560ef4ac78f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560ef4ac78d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560ef4ac73e8 <col:36> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x560ef4ac7888 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560ef4ac7858 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560ef4ac75f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560ef4ac7518 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560ef4ac7440 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560ef4ac7428 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560ef4ac7408 <col:55> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560ef4ac74f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560ef4ac7490 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560ef4ac7478 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560ef4ac7458 <col:74> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x560ef4ac74e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560ef4ac74c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560ef4ac74a8 <col:93> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560ef4ac75d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560ef4ac7570 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560ef4ac7558 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560ef4ac7538 <col:112> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x560ef4ac75c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560ef4ac75a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560ef4ac7588 <col:131> '_Bool' lvalue Var 0x560ef4ac0e48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x560ef4ac7840 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560ef4ac7828 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560ef4ac7618 <col:148> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x560ef4ac7808 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560ef4ac77d8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560ef4ac76d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560ef4ac7690 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560ef4ac7678 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560ef4ac7638 <col:166> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560ef4ac76c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560ef4ac76a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560ef4ac7658 <col:184> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x560ef4ac77a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560ef4ac7728 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560ef4ac76f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560ef4ac77c0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560ef4ac7780 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560ef4ac7750 <col:219> 'int' 0
|   |-BinaryOperator 0x560ef4ac7f18 <line:803:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac7970 <col:3> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac7f00 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ef4ac7ed0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560ef4ac7e88 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560ef4ac7e70 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560ef4ac7990 <col:20> '_Bool' lvalue Var 0x560ef4ac1670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560ef4ac7eb8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560ef4ac7ea0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560ef4ac79b0 <col:36> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x560ef4ac7e50 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560ef4ac7e20 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560ef4ac7be0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560ef4ac7ae0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560ef4ac7a08 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560ef4ac79f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560ef4ac79d0 <col:55> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560ef4ac7ac0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560ef4ac7a58 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560ef4ac7a40 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560ef4ac7a20 <col:74> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x560ef4ac7aa8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560ef4ac7a90 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560ef4ac7a70 <col:93> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560ef4ac7bc0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560ef4ac7b38 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560ef4ac7b20 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560ef4ac7b00 <col:112> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x560ef4ac7ba8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560ef4ac7b90 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560ef4ac7b70 <col:131> '_Bool' lvalue Var 0x560ef4ac0e48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x560ef4ac7e08 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560ef4ac7df0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560ef4ac7c00 <col:148> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x560ef4ac7dd0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560ef4ac7da0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560ef4ac7cc0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560ef4ac7c78 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560ef4ac7c60 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560ef4ac7c20 <col:166> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560ef4ac7ca8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560ef4ac7c90 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560ef4ac7c40 <col:184> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x560ef4ac7d58 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560ef4ac7d10 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560ef4ac7ce0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560ef4ac7d88 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560ef4ac7d70 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560ef4ac7d38 <col:212> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x560ef4ac84e0 <line:804:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac7f38 <col:3> '_Bool' lvalue Var 0x560ef4ac0e48 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac84c8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ef4ac8498 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560ef4ac8450 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560ef4ac8438 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560ef4ac7f58 <col:20> '_Bool' lvalue Var 0x560ef4ac1670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560ef4ac8480 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560ef4ac8468 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560ef4ac7f78 <col:36> '_Bool' lvalue Var 0x560ef4ac0e48 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x560ef4ac8418 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560ef4ac83e8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560ef4ac8188 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560ef4ac80a8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560ef4ac7fd0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560ef4ac7fb8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560ef4ac7f98 <col:55> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560ef4ac8088 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560ef4ac8020 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560ef4ac8008 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560ef4ac7fe8 <col:74> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x560ef4ac8070 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560ef4ac8058 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560ef4ac8038 <col:93> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560ef4ac8168 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560ef4ac8100 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560ef4ac80e8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560ef4ac80c8 <col:112> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x560ef4ac8150 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560ef4ac8138 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560ef4ac8118 <col:131> '_Bool' lvalue Var 0x560ef4ac0e48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x560ef4ac83d0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560ef4ac83b8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560ef4ac81a8 <col:148> '_Bool' lvalue Var 0x560ef4ac0e48 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x560ef4ac8398 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560ef4ac8368 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560ef4ac8268 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560ef4ac8220 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560ef4ac8208 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560ef4ac81c8 <col:166> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560ef4ac8250 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560ef4ac8238 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560ef4ac81e8 <col:184> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x560ef4ac8338 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560ef4ac82b8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560ef4ac8288 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560ef4ac8350 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560ef4ac8310 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560ef4ac82e0 <col:219> 'int' 0
|   |-BinaryOperator 0x560ef4ac8558 <line:805:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560ef4ac8500 <col:3> 'int' lvalue Var 0x560ef4ac06f8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x560ef4ac8540 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560ef4ac8520 <col:25> 'int' lvalue Var 0x560ef4ac0818 'a' 'int'
|   |-BinaryOperator 0x560ef4ac8688 <line:806:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x560ef4ac8578 <col:3> 'int' lvalue Var 0x560ef4ac0818 'a' 'int'
|   | `-ConditionalOperator 0x560ef4ac8658 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x560ef4ac8610 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560ef4ac85f8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560ef4ac8598 <col:7> '_Bool' lvalue Var 0x560ef4ac08b0 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x560ef4ac8628 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560ef4ac85b8 <col:25> 'int' lvalue Var 0x560ef4ac0930 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x560ef4ac8640 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x560ef4ac85d8 <col:37> 'int' lvalue Var 0x560ef4ac0818 'a' 'int'
|   |-BinaryOperator 0x560ef4ac8720 <line:807:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac86a8 <col:3> '_Bool' lvalue Var 0x560ef4ac08b0 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x560ef4ac86f8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560ef4ac86c8 <col:28> 'int' 0
|   |-CallExpr 0x560ef4ac8778 <line:808:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac8760 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac8740 <col:3> 'void ()' Function 0x560ef4a66f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560ef4ac87d0 <line:809:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac87b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac8798 <col:3> 'void ()' Function 0x560ef4a66e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ef4ac8ab8 <line:810:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560ef4ac87f0 <col:3> 'int' lvalue Var 0x560ef4ac0818 'a' 'int'
|   | `-ConditionalOperator 0x560ef4ac8a88 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560ef4ac88b0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560ef4ac8868 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560ef4ac8850 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560ef4ac8810 <col:7> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560ef4ac8898 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560ef4ac8880 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560ef4ac8830 <col:25> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x560ef4ac8a70 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560ef4ac88d0 <col:42> 'int' lvalue Var 0x560ef4ac0fc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x560ef4ac8a50 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560ef4ac8a20 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560ef4ac8990 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560ef4ac8948 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560ef4ac8930 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560ef4ac88f0 <col:55> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560ef4ac8978 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560ef4ac8960 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560ef4ac8910 <col:73> '_Bool' lvalue Var 0x560ef4ac0e48 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x560ef4ac89f0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560ef4ac89b0 <col:90> 'int' lvalue Var 0x560ef4ac10b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560ef4ac8a08 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ef4ac89d0 <col:102> 'int' lvalue Var 0x560ef4ac0818 'a' 'int'
|   |-BinaryOperator 0x560ef4ac8cd8 <line:811:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac8ad8 <col:3> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac8cc0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ef4ac8c90 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560ef4ac8bb0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560ef4ac8b50 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560ef4ac8b38 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560ef4ac8af8 <col:20> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560ef4ac8b98 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560ef4ac8b80 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560ef4ac8b18 <col:38> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x560ef4ac8c48 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ef4ac8c00 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ef4ac8bd0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560ef4ac8c78 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ef4ac8c60 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ef4ac8c28 <col:66> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560ef4ac8fc0 <line:812:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac8cf8 <col:3> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac8fa8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ef4ac8f78 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560ef4ac8e98 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560ef4ac8db8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560ef4ac8d70 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560ef4ac8d58 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560ef4ac8d18 <col:20> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560ef4ac8da0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560ef4ac8d88 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560ef4ac8d38 <col:38> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x560ef4ac8e78 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560ef4ac8e30 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560ef4ac8e18 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560ef4ac8dd8 <col:56> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560ef4ac8e60 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560ef4ac8e48 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560ef4ac8df8 <col:74> '_Bool' lvalue Var 0x560ef4ac0e48 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x560ef4ac8f30 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ef4ac8ee8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ef4ac8eb8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560ef4ac8f60 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ef4ac8f48 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ef4ac8f10 <col:102> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560ef4ac91c8 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac8fe0 <col:3> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac91b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ef4ac9180 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560ef4ac90a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560ef4ac9058 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560ef4ac9040 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560ef4ac9000 <col:20> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560ef4ac9088 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560ef4ac9070 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560ef4ac9020 <col:38> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x560ef4ac9138 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ef4ac90f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ef4ac90c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560ef4ac9168 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ef4ac9150 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ef4ac9118 <col:66> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x560ef4ac94b0 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560ef4ac91e8 <col:3> '_Bool' lvalue Var 0x560ef4ac0e48 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x560ef4ac9498 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ef4ac9468 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560ef4ac9388 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560ef4ac92a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560ef4ac9260 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560ef4ac9248 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560ef4ac9208 <col:20> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560ef4ac9290 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560ef4ac9278 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560ef4ac9228 <col:38> '_Bool' lvalue Var 0x560ef4ac0bf0 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x560ef4ac9368 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560ef4ac9320 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560ef4ac9308 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560ef4ac92c8 <col:56> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560ef4ac9350 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560ef4ac9338 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560ef4ac92e8 <col:74> '_Bool' lvalue Var 0x560ef4ac0e48 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x560ef4ac9420 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ef4ac93d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ef4ac93a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560ef4ac9450 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ef4ac9438 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ef4ac9400 <col:102> '_Bool' lvalue Var 0x560ef4ac0e48 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x560ef4ac9508 <line:815:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac94f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac94d0 <col:3> 'void ()' Function 0x560ef4a66f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560ef4ac9560 <line:816:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac9548 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac9528 <col:3> 'void ()' Function 0x560ef4a66e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ef4ac9618 <line:817:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560ef4ac9580 <col:3> 'int' lvalue Var 0x560ef4ac0278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560ef4ac95f8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560ef4ac95e0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560ef4ac95a0 <col:22> 'int' lvalue Var 0x560ef4ac0278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560ef4ac95c0 <col:41> 'int' 1
|   |-CallExpr 0x560ef4ac9670 <line:818:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ef4ac9658 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ef4ac9638 <col:3> 'void ()' Function 0x560ef4a66f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560ef4ac96e8 <line:819:3, col:36>
|     `-CallExpr 0x560ef4ac96c8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560ef4ac96b0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560ef4ac9690 <col:10> 'void *(void)' Function 0x560ef4a66958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560ef4ac9830 prev 0x560ef4abffc0 <line:821:1, line:823:1> line:821:6 fence 'void ()'
| `-CompoundStmt 0x560ef4ac98d0 <line:822:1, line:823:1>
|-FunctionDecl 0x560ef4ac9900 prev 0x560ef4ac0080 <line:824:1, line:826:1> line:824:6 isync 'void ()'
| `-CompoundStmt 0x560ef4ac99a0 <line:825:1, line:826:1>
|-FunctionDecl 0x560ef4ac99d0 prev 0x560ef4ac0140 <line:827:1, line:829:1> line:827:6 lwfence 'void ()'
| `-CompoundStmt 0x560ef4ac9a70 <line:828:1, line:829:1>
`-FunctionDecl 0x560ef4ac9ad8 <line:830:1, line:856:1> line:830:5 main 'int ()'
  `-CompoundStmt 0x560ef4acbbb0 <line:831:1, line:856:1>
    |-DeclStmt 0x560ef4ac9c08 <line:832:3, col:17>
    | `-VarDecl 0x560ef4ac9ba0 <col:3, col:13> col:13 used t227 'pthread_t':'unsigned long'
    |-CallExpr 0x560ef4ac9e18 <line:833:3, col:53> 'int'
    | |-ImplicitCastExpr 0x560ef4ac9e00 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560ef4ac9c20 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560ef4aa7488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560ef4ac9c60 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560ef4ac9c40 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560ef4ac9ba0 't227' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560ef4ac9e58 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560ef4ac9cd8 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x560ef4ac9cb0 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560ef4ac9c78 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x560ef4ac9e70 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560ef4ac9cf8 <col:38> 'void *(void *)' Function 0x560ef4ac1788 'P0' 'void *(void *)'
    | `-ParenExpr 0x560ef4ac9d78 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x560ef4ac9d50 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560ef4ac9d18 <col:51> 'int' 0
    |-DeclStmt 0x560ef4ac9f00 <line:834:3, col:17>
    | `-VarDecl 0x560ef4ac9e98 <col:3, col:13> col:13 used t228 'pthread_t':'unsigned long'
    |-CallExpr 0x560ef4aca0a8 <line:835:3, col:53> 'int'
    | |-ImplicitCastExpr 0x560ef4aca090 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560ef4ac9f18 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560ef4aa7488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560ef4ac9f58 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560ef4ac9f38 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560ef4ac9e98 't228' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560ef4aca0e8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560ef4ac9fd0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x560ef4ac9fa8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560ef4ac9f70 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x560ef4aca100 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560ef4ac9ff0 <col:38> 'void *(void *)' Function 0x560ef4ac31c0 'P1' 'void *(void *)'
    | `-ParenExpr 0x560ef4aca070 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x560ef4aca048 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560ef4aca010 <col:51> 'int' 0
    |-DeclStmt 0x560ef4aca190 <line:836:3, col:17>
    | `-VarDecl 0x560ef4aca128 <col:3, col:13> col:13 used t229 'pthread_t':'unsigned long'
    |-CallExpr 0x560ef4aca338 <line:837:3, col:53> 'int'
    | |-ImplicitCastExpr 0x560ef4aca320 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560ef4aca1a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560ef4aa7488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560ef4aca1e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560ef4aca1c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560ef4aca128 't229' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560ef4aca378 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560ef4aca260 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x560ef4aca238 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560ef4aca200 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x560ef4aca390 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560ef4aca280 <col:38> 'void *(void *)' Function 0x560ef4ac4528 'P2' 'void *(void *)'
    | `-ParenExpr 0x560ef4aca300 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x560ef4aca2d8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560ef4aca2a0 <col:51> 'int' 0
    |-DeclStmt 0x560ef4aca420 <line:838:3, col:17>
    | `-VarDecl 0x560ef4aca3b8 <col:3, col:13> col:13 used t230 'pthread_t':'unsigned long'
    |-CallExpr 0x560ef4aca5c8 <line:839:3, col:53> 'int'
    | |-ImplicitCastExpr 0x560ef4aca5b0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560ef4aca438 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560ef4aa7488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560ef4aca478 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560ef4aca458 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560ef4aca3b8 't230' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560ef4aca608 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560ef4aca4f0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x560ef4aca4c8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560ef4aca490 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x560ef4aca620 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560ef4aca510 <col:38> 'void *(void *)' Function 0x560ef4ac59f0 'P3' 'void *(void *)'
    | `-ParenExpr 0x560ef4aca590 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x560ef4aca568 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560ef4aca530 <col:51> 'int' 0
    |-CallExpr 0x560ef4aca670 <line:840:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560ef4aca658 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560ef4aca638 <col:3> 'void ()' Function 0x560ef4a66e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560ef4aca740 <line:841:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x560ef4aca690 <col:3> '_Bool' lvalue Var 0x560ef4ac11a8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x560ef4aca728 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x560ef4aca708 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x560ef4aca6f0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x560ef4aca6b0 <col:21> 'int' lvalue Var 0x560ef4ac0278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x560ef4aca6d0 <col:41> 'int' 4
    |-CallExpr 0x560ef4aca798 <line:842:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560ef4aca780 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560ef4aca760 <col:3> 'void ()' Function 0x560ef4a66f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560ef4aca810 <line:843:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560ef4aca7f8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560ef4aca7b8 <col:3> 'void (int)' Function 0x560ef4a66790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x560ef4aca850 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560ef4aca838 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560ef4aca7d8 <col:21> '_Bool' lvalue Var 0x560ef4ac11a8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x560ef4aca8a0 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560ef4aca888 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560ef4aca868 <col:3> 'void ()' Function 0x560ef4a66e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560ef4acaba0 <line:845:3, col:103> 'int' '='
    | |-DeclRefExpr 0x560ef4aca8c0 <col:3> 'int' lvalue Var 0x560ef4ac0818 'a' 'int'
    | `-ConditionalOperator 0x560ef4acab58 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x560ef4aca980 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x560ef4aca938 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x560ef4aca920 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x560ef4aca8e0 <col:7> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x560ef4aca968 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x560ef4aca950 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x560ef4aca900 <col:25> '_Bool' lvalue Var 0x560ef4ac09a8 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x560ef4acab40 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560ef4aca9a0 <col:42> 'int' lvalue Var 0x560ef4ac0fc0 'a$w_buff0' 'int'
    |   `-ParenExpr 0x560ef4acab20 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x560ef4acaaf0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x560ef4acaa60 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x560ef4acaa18 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x560ef4acaa00 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x560ef4aca9c0 <col:55> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x560ef4acaa48 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x560ef4acaa30 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x560ef4aca9e0 <col:73> '_Bool' lvalue Var 0x560ef4ac0c68 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560ef4acaac0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560ef4acaa80 <col:90> 'int' lvalue Var 0x560ef4ac10b8 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x560ef4acaad8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x560ef4acaaa0 <col:102> 'int' lvalue Var 0x560ef4ac0818 'a' 'int'
    |-BinaryOperator 0x560ef4acada8 <line:846:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560ef4acabc0 <col:3> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x560ef4acad90 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560ef4acad60 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560ef4acac80 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560ef4acac38 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560ef4acac20 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560ef4acabe0 <col:20> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560ef4acac68 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560ef4acac50 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560ef4acac00 <col:38> '_Bool' lvalue Var 0x560ef4ac09a8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560ef4acad18 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560ef4acacd0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560ef4acaca0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560ef4acad48 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560ef4acad30 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560ef4acacf8 <col:66> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x560ef4acb090 <line:847:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560ef4acadc8 <col:3> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x560ef4acb078 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560ef4acb048 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560ef4acaf68 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560ef4acae88 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560ef4acae40 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560ef4acae28 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560ef4acade8 <col:20> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560ef4acae70 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560ef4acae58 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560ef4acae08 <col:38> '_Bool' lvalue Var 0x560ef4ac09a8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560ef4acaf48 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560ef4acaf00 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560ef4acaee8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560ef4acaea8 <col:56> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560ef4acaf30 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560ef4acaf18 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560ef4acaec8 <col:74> '_Bool' lvalue Var 0x560ef4ac0c68 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560ef4acb000 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560ef4acafb8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560ef4acaf88 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560ef4acb030 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560ef4acb018 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560ef4acafe0 <col:102> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x560ef4acb298 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560ef4acb0b0 <col:3> '_Bool' lvalue Var 0x560ef4ac09a8 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560ef4acb280 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560ef4acb250 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560ef4acb170 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560ef4acb128 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560ef4acb110 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560ef4acb0d0 <col:20> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560ef4acb158 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560ef4acb140 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560ef4acb0f0 <col:38> '_Bool' lvalue Var 0x560ef4ac09a8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560ef4acb208 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560ef4acb1c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560ef4acb190 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560ef4acb238 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560ef4acb220 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560ef4acb1e8 <col:66> '_Bool' lvalue Var 0x560ef4ac09a8 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x560ef4acb580 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560ef4acb2b8 <col:3> '_Bool' lvalue Var 0x560ef4ac0c68 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560ef4acb568 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560ef4acb538 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560ef4acb458 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560ef4acb378 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560ef4acb330 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560ef4acb318 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560ef4acb2d8 <col:20> '_Bool' lvalue Var 0x560ef4ac1038 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560ef4acb360 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560ef4acb348 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560ef4acb2f8 <col:38> '_Bool' lvalue Var 0x560ef4ac09a8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560ef4acb438 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560ef4acb3f0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560ef4acb3d8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560ef4acb398 <col:56> '_Bool' lvalue Var 0x560ef4ac1130 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560ef4acb420 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560ef4acb408 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560ef4acb3b8 <col:74> '_Bool' lvalue Var 0x560ef4ac0c68 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560ef4acb4f0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560ef4acb4a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560ef4acb478 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560ef4acb520 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560ef4acb508 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560ef4acb4d0 <col:102> '_Bool' lvalue Var 0x560ef4ac0c68 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x560ef4acb5d8 <line:850:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560ef4acb5c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560ef4acb5a0 <col:3> 'void ()' Function 0x560ef4a66f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560ef4acb630 <line:851:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560ef4acb618 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560ef4acb5f8 <col:3> 'void ()' Function 0x560ef4a66e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560ef4acba30 <line:852:3, col:151> '_Bool' '='
    | |-DeclRefExpr 0x560ef4acb650 <col:3> '_Bool' lvalue Var 0x560ef4ac1220 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x560ef4acba18 <col:21, col:151> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x560ef4acba00 <col:21, col:151> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x560ef4acb9e0 <col:22, col:151> 'int'
    |       `-BinaryOperator 0x560ef4acb9c0 <col:23, col:150> 'int' '&&'
    |         |-BinaryOperator 0x560ef4acb928 <col:23, col:122> 'int' '&&'
    |         | |-BinaryOperator 0x560ef4acb890 <col:23, col:94> 'int' '&&'
    |         | | |-BinaryOperator 0x560ef4acb7f8 <col:23, col:66> 'int' '&&'
    |         | | | |-BinaryOperator 0x560ef4acb760 <col:23, col:38> 'int' '&&'
    |         | | | | |-BinaryOperator 0x560ef4acb6c8 <col:23, col:28> 'int' '=='
    |         | | | | | |-ImplicitCastExpr 0x560ef4acb6b0 <col:23> 'int' <LValueToRValue>
    |         | | | | | | `-DeclRefExpr 0x560ef4acb670 <col:23> 'int' lvalue Var 0x560ef4ac1320 'x' 'int'
    |         | | | | | `-IntegerLiteral 0x560ef4acb690 <col:28> 'int' 2
    |         | | | | `-BinaryOperator 0x560ef4acb740 <col:33, col:38> 'int' '=='
    |         | | | |   |-ImplicitCastExpr 0x560ef4acb728 <col:33> 'int' <LValueToRValue>
    |         | | | |   | `-DeclRefExpr 0x560ef4acb6e8 <col:33> 'int' lvalue Var 0x560ef4ac1440 'y' 'int'
    |         | | | |   `-IntegerLiteral 0x560ef4acb708 <col:38> 'int' 2
    |         | | | `-BinaryOperator 0x560ef4acb7d8 <col:43, col:66> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x560ef4acb7c0 <col:43> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x560ef4acb780 <col:43> 'int' lvalue Var 0x560ef4ac0398 '__unbuffered_p2_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x560ef4acb7a0 <col:66> 'int' 2
    |         | | `-BinaryOperator 0x560ef4acb870 <col:71, col:94> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x560ef4acb858 <col:71> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x560ef4acb818 <col:71> 'int' lvalue Var 0x560ef4ac04b8 '__unbuffered_p2_EBX' 'int'
    |         | |   `-IntegerLiteral 0x560ef4acb838 <col:94> 'int' 0
    |         | `-BinaryOperator 0x560ef4acb908 <col:99, col:122> 'int' '=='
    |         |   |-ImplicitCastExpr 0x560ef4acb8f0 <col:99> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x560ef4acb8b0 <col:99> 'int' lvalue Var 0x560ef4ac05d8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x560ef4acb8d0 <col:122> 'int' 1
    |         `-BinaryOperator 0x560ef4acb9a0 <col:127, col:150> 'int' '=='
    |           |-ImplicitCastExpr 0x560ef4acb988 <col:127> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x560ef4acb948 <col:127> 'int' lvalue Var 0x560ef4ac06f8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x560ef4acb968 <col:150> 'int' 0
    |-CallExpr 0x560ef4acba88 <line:853:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560ef4acba70 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560ef4acba50 <col:3> 'void ()' Function 0x560ef4a66f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560ef4acbb00 <line:854:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560ef4acbae8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560ef4acbaa8 <col:3> 'void (int)' Function 0x560ef4a66bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x560ef4acbb40 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560ef4acbb28 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560ef4acbac8 <col:21> '_Bool' lvalue Var 0x560ef4ac1220 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x560ef4acbb78 <line:855:3, col:10>
      `-IntegerLiteral 0x560ef4acbb58 <col:10> 'int' 0
