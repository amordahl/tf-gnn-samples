TranslationUnitDecl 0x55e274c1fe18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55e274c206d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55e274c203b0 '__int128'
|-TypedefDecl 0x55e274c20748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55e274c203d0 'unsigned __int128'
|-TypedefDecl 0x55e274c20a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55e274c20820 'struct __NSConstantString_tag'
|   `-Record 0x55e274c207a0 '__NSConstantString_tag'
|-TypedefDecl 0x55e274c20af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55e274c20ab0 'char *'
|   `-BuiltinType 0x55e274c1feb0 'char'
|-TypedefDecl 0x55e274c5f650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55e274c20d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55e274c20bd0 'struct __va_list_tag'
|     `-Record 0x55e274c20b50 '__va_list_tag'
|-FunctionDecl 0x55e274c5f790 <./split_5/mix030_tso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55e274c5f6c0 <col:31> col:34 'int'
|-FunctionDecl 0x55e274c5f958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55e274c5fa80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55e274c5fbc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55e274c5fb38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55e274c5fdf8 <col:40, col:99>
|   |-IfStmt 0x55e274c5fdc8 <col:42, col:88>
|   | |-UnaryOperator 0x55e274c5fca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55e274c5fc90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55e274c5fc70 <col:47> 'int' lvalue ParmVar 0x55e274c5fb38 'expression' 'int'
|   | `-CompoundStmt 0x55e274c5fdb0 <col:59, col:88>
|   |   `-LabelStmt 0x55e274c5fd98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55e274c5fd28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55e274c5fd10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55e274c5fcc0 <col:68> 'void () __attribute__((noreturn))' Function 0x55e274c5fa80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55e274c5fde0 <col:89>
|   `-ReturnStmt 0x55e274c5fde8 <col:91>
|-FunctionDecl 0x55e274c5fe40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55e274c5ff00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55e274c60280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55e274c5ffb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55e274c60038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55e274c600b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55e274c60138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55e274c60340 <line:10:22>
|-FunctionDecl 0x55e274c86390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55e274c603b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55e274c60430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55e274c604b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55e274c60530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55e274c86450 <line:13:22>
|-FunctionDecl 0x55e274c86700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55e274c864c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55e274c86540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55e274c865c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55e274c867b8 <line:15:22>
|-TypedefDecl 0x55e274c86828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55e274c1ff70 'unsigned char'
|-TypedefDecl 0x55e274c86898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55e274c1ff90 'unsigned short'
|-TypedefDecl 0x55e274c86908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55e274c1ffb0 'unsigned int'
|-TypedefDecl 0x55e274c86978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55e274c1ffd0 'unsigned long'
|-TypedefDecl 0x55e274c869e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55e274c1fed0 'signed char'
|-TypedefDecl 0x55e274c86a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55e274c1ff70 'unsigned char'
|-TypedefDecl 0x55e274c86ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55e274c1fef0 'short'
|-TypedefDecl 0x55e274c86b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55e274c1ff90 'unsigned short'
|-TypedefDecl 0x55e274c86ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55e274c1ff10 'int'
|-TypedefDecl 0x55e274c86c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55e274c1ffb0 'unsigned int'
|-TypedefDecl 0x55e274c86c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55e274c1ff30 'long'
|-TypedefDecl 0x55e274c86cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55e274c1ffd0 'unsigned long'
|-TypedefDecl 0x55e274c86d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55e274c1ff30 'long'
|-TypedefDecl 0x55e274c86dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55e274c1ffd0 'unsigned long'
|-TypedefDecl 0x55e274c86e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55e274c1ffd0 'unsigned long'
|-TypedefDecl 0x55e274c86eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55e274c1ffb0 'unsigned int'
|-TypedefDecl 0x55e274c86f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55e274c1ffb0 'unsigned int'
|-TypedefDecl 0x55e274c86f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55e274c1ffd0 'unsigned long'
|-TypedefDecl 0x55e274c87008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55e274c1ffd0 'unsigned long'
|-TypedefDecl 0x55e274c87078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55e274c1ffb0 'unsigned int'
|-TypedefDecl 0x55e274c870e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55e274c1ffd0 'unsigned long'
|-TypedefDecl 0x55e274c87158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55e274c1ff30 'long'
|-TypedefDecl 0x55e274c871c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55e274c1ff30 'long'
|-TypedefDecl 0x55e274c87238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55e274c1ff10 'int'
|-RecordDecl 0x55e274c87290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55e274c87408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55e274c874c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55e274c87460 'struct __fsid_t' sugar
|   `-RecordType 0x55e274c87310 '__fsid_t'
|     `-Record 0x55e274c87290 ''
|-TypedefDecl 0x55e274c87548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55e274c1ff30 'long'
|-TypedefDecl 0x55e274c875b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55e274c1ffd0 'unsigned long'
|-TypedefDecl 0x55e274c87628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55e274c1ffd0 'unsigned long'
|-TypedefDecl 0x55e274c87698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55e274c1ffb0 'unsigned int'
|-TypedefDecl 0x55e274c87708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55e274c1ff30 'long'
|-TypedefDecl 0x55e274c87778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55e274c1ffb0 'unsigned int'
|-TypedefDecl 0x55e274c877e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55e274c1ff30 'long'
|-TypedefDecl 0x55e274c87858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55e274c1ff10 'int'
|-TypedefDecl 0x55e274c878c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55e274c1ff10 'int'
|-TypedefDecl 0x55e274c87938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55e274c1ff10 'int'
|-TypedefDecl 0x55e274c879a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55e274c20630 'void *'
|   `-BuiltinType 0x55e274c1fe70 'void'
|-TypedefDecl 0x55e274c87a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55e274c1ff30 'long'
|-TypedefDecl 0x55e274c87a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55e274c1ff30 'long'
|-TypedefDecl 0x55e274c87af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55e274c1ff30 'long'
|-TypedefDecl 0x55e274c87b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55e274c1ffd0 'unsigned long'
|-TypedefDecl 0x55e274c87bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55e274c1ffd0 'unsigned long'
|-TypedefDecl 0x55e274c87c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55e274c1ffd0 'unsigned long'
|-TypedefDecl 0x55e274c87cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55e274c1ffd0 'unsigned long'
|-TypedefDecl 0x55e274c87d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55e274c1ff30 'long'
|-TypedefDecl 0x55e274c87d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55e274c1ff30 'long'
|-TypedefDecl 0x55e274c87e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55e274c1ff30 'long'
|-TypedefDecl 0x55e274c87e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55e274c1ffd0 'unsigned long'
|-TypedefDecl 0x55e274c87f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55e274c87ed0 '__off64_t' sugar
|   |-Typedef 0x55e274c871c8 '__off64_t'
|   `-BuiltinType 0x55e274c1ff30 'long'
|-TypedefDecl 0x55e274c88000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55e274c87fc0 '__quad_t *'
|   `-TypedefType 0x55e274c87f60 '__quad_t' sugar
|     |-Typedef 0x55e274c86d68 '__quad_t'
|     `-BuiltinType 0x55e274c1ff30 'long'
|-TypedefDecl 0x55e274c88070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55e274c20ab0 'char *'
|   `-BuiltinType 0x55e274c1feb0 'char'
|-TypedefDecl 0x55e274c880e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55e274c1ff30 'long'
|-TypedefDecl 0x55e274c88150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55e274c1ffb0 'unsigned int'
|-FunctionDecl 0x55e274c88298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55e274c881c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55e274c895e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55e274c895d8 <line:72:3, col:34>
|     `-CallExpr 0x55e274c89598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55e274c89580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55e274c89510 <col:10> '<builtin fn type>' Function 0x55e274c89380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55e274c895c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55e274c89530 <col:29> 'unsigned int' lvalue ParmVar 0x55e274c881c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55e274c89380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55e274c89420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55e274c89490 <col:10> Implicit
| `-ConstAttr 0x55e274c894e8 <col:10> Implicit
|-FunctionDecl 0x55e274c89740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55e274c89638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55e274c89a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55e274c89a48 <line:77:3, col:34>
|     `-CallExpr 0x55e274c89a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55e274c899f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55e274c89978 <col:10> '<builtin fn type>' Function 0x55e274c897e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55e274c89a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55e274c89998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55e274c89638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55e274c897e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55e274c89888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55e274c898f8 <col:10> Implicit
| `-ConstAttr 0x55e274c89950 <col:10> Implicit
|-TypedefDecl 0x55e274c89a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55e274c1ffd0 'unsigned long'
|-TypedefDecl 0x55e274c89b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55e274c89ae0 '__time_t' sugar
|   |-Typedef 0x55e274c87708 '__time_t'
|   `-BuiltinType 0x55e274c1ff30 'long'
|-RecordDecl 0x55e274c89b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55e274c89c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55e274c89cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55e274c89d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55e274c89d10 '__pid_t' sugar
|   |-Typedef 0x55e274c87238 '__pid_t'
|   `-BuiltinType 0x55e274c1ff10 'int'
|-RecordDecl 0x55e274c89da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55e274c89e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55e274c89eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55e274c89f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55e274c89fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55e274c1ffd0 'unsigned long'
|-RecordDecl 0x55e274c8a030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55e274c8a2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55e274c8b3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55e274c8a310 'struct cpu_set_t' sugar
|   `-RecordType 0x55e274c8a0b0 'cpu_set_t'
|     `-Record 0x55e274c8a030 ''
|-FunctionDecl 0x55e274c8b678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55e274c8b448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55e274c8b550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55e274c8b728 <line:107:19>
|-FunctionDecl 0x55e274c8b900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55e274c8b790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55e274c8b9a8 <col:69>
|-FunctionDecl 0x55e274c8bb20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55e274c8ba10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55e274c8bbc8 <col:64>
|-FunctionDecl 0x55e274c8be88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55e274c8bc30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55e274c8bd68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55e274c8bf38 <line:113:22>
|-FunctionDecl 0x55e274c8c1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55e274c8bfa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55e274c8c098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55e274c8c268 <col:88>
|-FunctionDecl 0x55e274c8c588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55e274c8c2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55e274c8c3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55e274c8c440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55e274c8c640 <col:62>
|-FunctionDecl 0x55e274c8c7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55e274c8c6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55e274c8c860 <col:63>
|-FunctionDecl 0x55e274c8c988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55e274c8ca28 <col:47>
|-FunctionDecl 0x55e274c8cb30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55e274c8ca98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55e274c8cbd8 <col:69>
|-FunctionDecl 0x55e274c8cce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55e274c8cc48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55e274c8cd88 <col:69>
|-FunctionDecl 0x55e274c8d048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55e274c8cdf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55e274c8cf28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55e274c8d0f8 <col:88>
|-TypedefDecl 0x55e274c8d188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55e274c8d150 '__clock_t' sugar
|   |-Typedef 0x55e274c87548 '__clock_t'
|   `-BuiltinType 0x55e274c1ff30 'long'
|-TypedefDecl 0x55e274c8d218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55e274c8d1e0 '__clockid_t' sugar
|   |-Typedef 0x55e274c87938 '__clockid_t'
|   `-BuiltinType 0x55e274c1ff10 'int'
|-TypedefDecl 0x55e274c8d2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55e274c8d270 '__timer_t' sugar
|   |-Typedef 0x55e274c879a8 '__timer_t'
|   `-PointerType 0x55e274c20630 'void *'
|     `-BuiltinType 0x55e274c1fe70 'void'
|-RecordDecl 0x55e274c8d300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55e274c8d3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55e274c8d440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55e274c8d4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55e274c8d510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55e274c8d578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55e274c8d5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55e274c8d648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55e274c8d6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55e274c8d718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55e274c8d780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55e274c8d7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55e274c8d838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55e274c8d908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55e274c8d978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55e274c8da20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55e274c8dbf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55e274c8dc90 <col:45>
|-FunctionDecl 0x55e274c8de70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55e274c8dd60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55e274c8df18 <col:54>
|-FunctionDecl 0x55e274c8e118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55e274c8df80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55e274c8dff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55e274c8e1c8 <line:157:22>
| `-ConstAttr 0x55e274c8e220 <col:63>
|-FunctionDecl 0x55e274c8f050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55e274c8e318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55e274c8f0f8 <col:56>
|-FunctionDecl 0x55e274c8f4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55e274c8f168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55e274c8f1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55e274c8f260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55e274c8f358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55e274c8f560 <col:54>
|-RecordDecl 0x55e274c8f5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55e274c8f668 parent 0x55e274c1fe18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55e274c8f8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55e274c8f968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55e274c8f9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55e274c8fa38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55e274c8fb28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55e274c8fc48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55e274c8fbf0 'struct __locale_struct *'
|   `-ElaboratedType 0x55e274c8fb80 'struct __locale_struct' sugar
|     `-RecordType 0x55e274c8f640 'struct __locale_struct'
|       `-Record 0x55e274c8f5b8 '__locale_struct'
|-TypedefDecl 0x55e274c8fcf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55e274c8fcc0 '__locale_t' sugar
|   |-Typedef 0x55e274c8fc48 '__locale_t'
|   `-PointerType 0x55e274c8fbf0 'struct __locale_struct *'
|     `-ElaboratedType 0x55e274c8fb80 'struct __locale_struct' sugar
|       `-RecordType 0x55e274c8f640 'struct __locale_struct'
|         `-Record 0x55e274c8f5b8 '__locale_struct'
|-FunctionDecl 0x55e274c91110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55e274c8fd68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55e274c8fde0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55e274c8fe60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55e274c8fef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55e274c8ff68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55e274c911d8 <col:40>
|-FunctionDecl 0x55e274c913c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55e274c912a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55e274c91470 <col:66>
|-FunctionDecl 0x55e274c91580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55e274c914d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55e274c91628 <col:69>
|-FunctionDecl 0x55e274c91858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55e274c91690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55e274c91720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55e274c91908 <col:52>
|-FunctionDecl 0x55e274c91ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55e274c91970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55e274c91a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55e274c91b60 <col:55>
|-FunctionDecl 0x55e274c91cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55e274c91be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55e274c91da0 <col:62>
|-FunctionDecl 0x55e274c91f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55e274c91e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55e274c91fc0 <col:60>
|-FunctionDecl 0x55e274c922b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55e274c92118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55e274c92198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55e274c92368 <col:44>
|-FunctionDecl 0x55e274c92578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55e274c923d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55e274c92450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55e274c92628 <col:49>
|-VarDecl 0x55e274c92728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55e274c927a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55e274c92828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55e274c928f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55e274c92a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55e274c92ac0 <col:42>
|-VarDecl 0x55e274c92b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55e274c92bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55e274c92d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55e274c92c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55e274c92de0 <col:57>
|-FunctionDecl 0x55e274c92ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55e274c92e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55e274c92f98 <col:56>
|-FunctionDecl 0x55e274c930d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55e274c93018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55e274c93178 <col:59>
|-FunctionDecl 0x55e274c93280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55e274c931e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55e274c93328 <col:48>
| `-ConstAttr 0x55e274c93380 <col:89>
|-FunctionDecl 0x55e274c935e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55e274c93438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55e274c934c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55e274c93848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55e274c936d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55e274c93768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55e274c938f8 <col:88>
|-FunctionDecl 0x55e274c93a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55e274c93960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55e274c939f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55e274c93b40 <col:88>
|-FunctionDecl 0x55e274c93d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55e274c93ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55e274c93c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55e274c93e08 <line:208:22>
|-FunctionDecl 0x55e274c94178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55e274c93e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55e274c93ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55e274c93f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55e274c94010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55e274c94478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55e274c94278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55e274c94350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55e274c94528 <col:85>
|-FunctionDecl 0x55e274c94918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55e274c94590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55e274c946c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55e274c947d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55e274c949d0 <col:52>
|-FunctionDecl 0x55e274c94b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55e274c94a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55e274c94bf0 <col:61>
|-FunctionDecl 0x55e274c950f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55e274c94c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55e274c94cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55e274c94e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55e274c94ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55e274c951b0 <col:62>
|-FunctionDecl 0x55e274c953c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55e274c95218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55e274c952a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55e274c95478 <line:221:22>
|-FunctionDecl 0x55e274c95578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55e274c954e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55e274c95620 <col:65>
|-TypedefDecl 0x55e274c95690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55e274c1ffd0 'unsigned long'
|-RecordDecl 0x55e274c956e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55e274c95830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55e274c95898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55e274c95948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55e274c958f0 'union pthread_attr_t' sugar
|   `-RecordType 0x55e274c95770 'union pthread_attr_t'
|     `-Record 0x55e274c956e8 'pthread_attr_t'
|-RecordDecl 0x55e274c959a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55e274c95b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55e274c95b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55e274c95c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55e274c95be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55e274c95a20 'struct __pthread_internal_list'
|     `-Record 0x55e274c959a0 '__pthread_internal_list'
|-RecordDecl 0x55e274c95cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55e274c95d58 parent 0x55e274c1fe18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55e274c95e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55e274c95e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55e274c95f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55e274c95f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55e274c95fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55e274c96038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55e274c9a110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55e274c9a1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55e274c9a2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55e274c9a318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55e274c9a4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55e274c9a440 'union pthread_mutex_t' sugar
|   `-RecordType 0x55e274c95d30 'pthread_mutex_t'
|     `-Record 0x55e274c95cb0 ''
|-RecordDecl 0x55e274c9a510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55e274c9a650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55e274c9a6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55e274c9a770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55e274c9a710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55e274c9a590 'pthread_mutexattr_t'
|     `-Record 0x55e274c9a510 ''
|-RecordDecl 0x55e274c9a7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55e274c9a888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55e274c9a950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55e274c9a9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55e274c9aa20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55e274c9aa88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55e274c9aaf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55e274c9ab58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55e274c9abc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55e274c9ac28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55e274c9ace0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_5/mix030_tso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_5/mix030_tso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55e274c9add0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55e274c9ae38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55e274c9af70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55e274c9af10 'union pthread_cond_t' sugar
|   `-RecordType 0x55e274c9a860 'pthread_cond_t'
|     `-Record 0x55e274c9a7e0 ''
|-RecordDecl 0x55e274c9afe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55e274c9c130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55e274c9c198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55e274c9c250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55e274c9c1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x55e274c9b060 'pthread_condattr_t'
|     `-Record 0x55e274c9afe0 ''
|-TypedefDecl 0x55e274c9c2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55e274c1ffb0 'unsigned int'
|-TypedefDecl 0x55e274c9c348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55e274c1ff10 'int'
|-RecordDecl 0x55e274c9c3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55e274c9c448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55e274c9c510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55e274c9c578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55e274c9c5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55e274c9c648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55e274c9c6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55e274c9c718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55e274c9c780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55e274c9c7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55e274c9c850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55e274c9c8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55e274c9c920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55e274c9c9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_5/mix030_tso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_5/mix030_tso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55e274c9ca78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55e274c9cae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55e274c9cc30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55e274c9cbd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55e274c9c420 'pthread_rwlock_t'
|     `-Record 0x55e274c9c3a0 ''
|-RecordDecl 0x55e274c9cca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55e274c9cde0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55e274c9ce48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55e274c9cf00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55e274c9cea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55e274c9cd20 'pthread_rwlockattr_t'
|     `-Record 0x55e274c9cca0 ''
|-TypedefDecl 0x55e274c9cf88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55e274c1ff14 'volatile int' volatile
|   `-BuiltinType 0x55e274c1ff10 'int'
|-RecordDecl 0x55e274c9cfe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55e274c9e140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55e274c9e1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55e274c9e260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55e274c9e200 'union pthread_barrier_t' sugar
|   `-RecordType 0x55e274c9d060 'pthread_barrier_t'
|     `-Record 0x55e274c9cfe0 ''
|-RecordDecl 0x55e274c9e2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55e274c9e3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55e274c9e438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55e274c9e4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55e274c9e490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55e274c9e350 'pthread_barrierattr_t'
|     `-Record 0x55e274c9e2d0 ''
|-TypedefDecl 0x55e274c9e608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55e274c9e5a0 'long [8]' 8 
|   `-BuiltinType 0x55e274c1ff30 'long'
|-EnumDecl 0x55e274c9e660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55e274c9e728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55e274c9e778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55e274c9e7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55e274c9e898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55e274c9e8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55e274c9e938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55e274c9e988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55e274c9ea10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55e274c9e9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x55e274c9e9d8 <col:26> 'int' EnumConstant 0x55e274c9e898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55e274c9ea98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55e274c9ea80 <col:29> 'int'
| |   `-DeclRefExpr 0x55e274c9ea60 <col:29> 'int' EnumConstant 0x55e274c9e8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55e274c9eb20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55e274c9eb08 <col:30> 'int'
| |   `-DeclRefExpr 0x55e274c9eae8 <col:30> 'int' EnumConstant 0x55e274c9e938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55e274c9eba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55e274c9eb90 <col:27> 'int'
|     `-DeclRefExpr 0x55e274c9eb70 <col:27> 'int' EnumConstant 0x55e274c9ea10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55e274c9ebf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55e274c9ecc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55e274c9ed50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55e274c9ed38 <col:30> 'int'
| |   `-DeclRefExpr 0x55e274c9ed18 <col:30> 'int' EnumConstant 0x55e274c9ecc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55e274c9eda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55e274c9ee28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55e274c9ee10 <col:29> 'int'
|     `-DeclRefExpr 0x55e274c9edf0 <col:29> 'int' EnumConstant 0x55e274c9eda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55e274c9ee78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55e274c9ef48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55e274c9ef98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55e274c9efe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55e274c9f038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55e274c9f150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55e274c9f1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55e274c9f1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55e274c9f278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55e274c9f260 <col:31> 'int'
|     `-DeclRefExpr 0x55e274c9f240 <col:31> 'int' EnumConstant 0x55e274c9f150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55e274c9f2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55e274c9f398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55e274c9f3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55e274c9f438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55e274c9f508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55e274c9f558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55e274c9f5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55e274c9f678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55e274c9f6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55e274c9f718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55e274c9f958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55e274c9f9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55e274c9fa28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55e274c9fb48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55e274c9fb98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55e274c9fc68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55e274c9fcb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55e274c9fd08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55e274c9fdd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55e274c9fe28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55e274ca0488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55e274c9ff20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55e274ca0030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e274ca0270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55e274ca02f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55e274ca0548 <col:47>
| |-NonNullAttr 0x55e274ca05a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55e274ca05d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55e274ca0700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55e274ca0630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55e274ca0958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55e274ca07b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55e274ca0838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55e274ca0b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55e274ca0a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55e274ca0bd0 <col:60>
|-FunctionDecl 0x55e274ca0d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55e274ca0dc0 <col:54>
| `-ConstAttr 0x55e274ca0e18 <col:95>
|-FunctionDecl 0x55e274ca0fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55e274ca0e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55e274ca0ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55e274ca1098 <line:394:19>
| `-ConstAttr 0x55e274ca10f0 <col:60>
|-FunctionDecl 0x55e274ca2b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55e274ca29d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55e274ca2bb0 <col:71>
| `-NonNullAttr 0x55e274ca2c08 <col:112, col:126> 1
|-FunctionDecl 0x55e274ca2d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55e274ca2c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55e274ca2db8 <line:397:22>
| `-NonNullAttr 0x55e274ca2e10 <col:63, col:77> 1
|-FunctionDecl 0x55e274ca3038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55e274ca2e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55e274ca2ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55e274ca30e8 <line:400:22>
| `-NonNullAttr 0x55e274ca3140 <col:63, col:80> 1 2
|-FunctionDecl 0x55e274ca3348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55e274ca3188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e274ca3208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55e274ca33f8 <line:403:22>
| `-NonNullAttr 0x55e274ca3450 <col:63, col:77> 1
|-FunctionDecl 0x55e274ca36a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55e274ca3498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55e274ca3540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55e274ca3758 <line:406:22>
| `-NonNullAttr 0x55e274ca37b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e274ca49e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55e274ca37f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e274ca3870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55e274ca4a98 <line:409:22>
| `-NonNullAttr 0x55e274ca4af0 <col:63, col:77> 1
|-FunctionDecl 0x55e274ca4d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55e274ca4b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e274ca4bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55e274ca4dd8 <line:412:22>
| `-NonNullAttr 0x55e274ca4e30 <col:63, col:80> 1 2
|-FunctionDecl 0x55e274ca5068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55e274ca4e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e274ca4f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55e274ca5118 <col:37>
| `-NonNullAttr 0x55e274ca5170 <col:78, col:95> 1 2
|-FunctionDecl 0x55e274ca5358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e274ca51b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e274ca5238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55e274ca5408 <line:418:22>
| `-NonNullAttr 0x55e274ca5460 <col:63, col:80> 1 2
|-FunctionDecl 0x55e274ca55e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55e274ca54a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e274ca5528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55e274ca5698 <line:420:22>
| `-NonNullAttr 0x55e274ca56f0 <col:63, col:77> 1
|-FunctionDecl 0x55e274ca5898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e274ca5738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e274ca57b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55e274ca5948 <line:423:22>
| `-NonNullAttr 0x55e274ca59c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e274ca5b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55e274ca5a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e274ca5a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55e274ca5bf8 <line:426:22>
| `-NonNullAttr 0x55e274ca5c50 <col:63, col:77> 1
|-FunctionDecl 0x55e274ca5df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e274ca5c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e274ca5d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55e274ca5ea8 <line:429:22>
| `-NonNullAttr 0x55e274ca5f00 <col:63, col:80> 1 2
|-FunctionDecl 0x55e274ca6088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55e274ca5f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e274ca5fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55e274ca6138 <line:431:22>
| `-NonNullAttr 0x55e274ca6190 <col:63, col:77> 1
|-FunctionDecl 0x55e274ca63b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55e274ca61d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e274ca6258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55e274ca6468 <line:434:22>
| |-NonNullAttr 0x55e274ca64c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55e274ca64f8 <col:100> "" ""
|-FunctionDecl 0x55e274ca6708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55e274ca6548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e274ca65c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55e274ca67b8 <line:437:22>
| |-NonNullAttr 0x55e274ca6810 <col:63, col:77> 1
| `-DeprecatedAttr 0x55e274ca6848 <col:97> "" ""
|-FunctionDecl 0x55e274ca6a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55e274ca6898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e274ca6910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55e274ca6af8 <line:440:22>
| `-NonNullAttr 0x55e274ca6b50 <col:63, col:80> 1 2
|-FunctionDecl 0x55e274ca6cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55e274ca6b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e274ca6c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55e274ca6d80 <line:443:22>
| `-NonNullAttr 0x55e274ca6dd8 <col:63, col:77> 1
|-FunctionDecl 0x55e274ca70c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55e274ca6e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55e274ca6ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55e274ca6f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55e274ca7180 <line:447:22>
| `-NonNullAttr 0x55e274ca71d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55e274ca7488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55e274ca7230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55e274ca72b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55e274ca7328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55e274ca7540 <col:43>
| `-NonNullAttr 0x55e274ca7598 <col:84, col:98> 1
|-FunctionDecl 0x55e274ca7858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55e274ca75e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55e274ca7668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55e274ca76f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55e274ca7910 <line:452:22>
| `-NonNullAttr 0x55e274ca7968 <col:63, col:77> 3
|-FunctionDecl 0x55e274ca7c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55e274ca79e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55e274ca7a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55e274ca7af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55e274ca7d30 <line:456:22>
| `-NonNullAttr 0x55e274ca7d88 <col:63, col:80> 2 3
|-FunctionDecl 0x55e274ca7f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55e274ca7dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55e274ca7e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55e274ca8028 <line:458:22>
|-FunctionDecl 0x55e274ca83f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55e274ca80f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55e274ca8290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55e274ca84a8 <col:52, col:69> 1 2
|-FunctionDecl 0x55e274ca8650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55e274ca8530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55e274ca85b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55e274ca8838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55e274ca8718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55e274ca8798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55e274ca89f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55e274ca88f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55e274ca8b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55e274ca8bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55e274ca8c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55e274ca8d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55e274ca8dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55e274ca8fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_5/mix030_tso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55e274ca9098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55e274ca9150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55e274ca90f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55e274ca8c50 '__pthread_unwind_buf_t'
| |   `-Record 0x55e274ca8bd0 ''
| `-AlignedAttr 0x55e274ca91a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55e274ca9220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55e274ca9380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55e274ca93e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55e274ca9450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55e274ca94b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55e274ca96c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55e274ca95b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55e274ca9808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55e274ca9778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55e274ca9a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55e274ca98c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55e274ca9aa8 <line:487:22>
|-RecordDecl 0x55e274ca9b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55e274ca9e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55e274ca9c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55e274ca9cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55e274ca9ec8 <col:86>
| `-ReturnsTwiceAttr 0x55e274ca9f20 <col:12> Implicit
|-FunctionDecl 0x55e274caa248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55e274ca9ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55e274caa100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55e274caa2f8 <line:493:22>
| `-NonNullAttr 0x55e274caa350 <col:63, col:77> 1
|-FunctionDecl 0x55e274caa4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55e274caa398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55e274caa570 <line:495:22>
| `-NonNullAttr 0x55e274caa5c8 <col:63, col:77> 1
|-FunctionDecl 0x55e274caa6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55e274caa618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55e274caa778 <line:497:22>
| `-NonNullAttr 0x55e274caa7d0 <col:52, col:66> 1
|-FunctionDecl 0x55e274caa8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55e274caa818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55e274caa978 <line:499:22>
| `-NonNullAttr 0x55e274caa9d0 <col:52, col:66> 1
|-FunctionDecl 0x55e274cabc28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55e274caba38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55e274cabac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55e274cabcd8 <col:36>
| `-NonNullAttr 0x55e274cabd30 <col:66, col:83> 1 2
|-FunctionDecl 0x55e274cabe30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55e274cabd78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55e274cabed8 <line:504:22>
| `-NonNullAttr 0x55e274cabf30 <col:52, col:66> 1
|-FunctionDecl 0x55e274cac1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e274cabfe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55e274cac060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55e274cac278 <line:508:22>
| `-NonNullAttr 0x55e274cac2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e274cac598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55e274cac318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55e274cac398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55e274cac418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55e274cac650 <line:512:22>
| `-NonNullAttr 0x55e274cac6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x55e274cac7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55e274cac6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55e274cac858 <line:514:22>
| `-NonNullAttr 0x55e274cac8b0 <col:63, col:77> 1
|-FunctionDecl 0x55e274cacad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55e274cac960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55e274cacb80 <line:516:22>
| `-NonNullAttr 0x55e274cacbd8 <col:63, col:77> 1
|-FunctionDecl 0x55e274cacce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55e274cacc28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55e274cacd88 <line:518:22>
| `-NonNullAttr 0x55e274cacde0 <col:63, col:77> 1
|-FunctionDecl 0x55e274cad008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e274cace28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55e274cacea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55e274cad0b8 <line:522:22>
| `-NonNullAttr 0x55e274cad110 <col:63, col:80> 1 2
|-FunctionDecl 0x55e274cad318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55e274cad158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e274cad1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55e274cad3c8 <line:525:22>
| `-NonNullAttr 0x55e274cad420 <col:63, col:77> 1
|-FunctionDecl 0x55e274cad5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e274cad468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55e274cad4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55e274cad678 <line:528:22>
| `-NonNullAttr 0x55e274cad6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e274cad858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55e274cad718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e274cad798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55e274cad908 <line:530:22>
| `-NonNullAttr 0x55e274cad960 <col:63, col:77> 1
|-FunctionDecl 0x55e274cadb20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e274cad9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55e274cada40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55e274cadbd0 <line:534:22>
| `-NonNullAttr 0x55e274cadc28 <col:63, col:80> 1 2
|-FunctionDecl 0x55e274caddb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55e274cadc78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e274cadcf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55e274cade68 <line:537:22>
| `-NonNullAttr 0x55e274cadec0 <col:63, col:77> 1
|-FunctionDecl 0x55e274cae068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e274cadf08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55e274cadf88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55e274cae118 <line:541:22>
| `-NonNullAttr 0x55e274cae170 <col:63, col:80> 1 2
|-FunctionDecl 0x55e274cae2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55e274cae1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e274cae238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55e274cae3a8 <line:544:22>
| `-NonNullAttr 0x55e274cae400 <col:63, col:77> 1
|-FunctionDecl 0x55e274cae5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55e274cae448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e274cae4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55e274cae698 <line:547:22>
| `-NonNullAttr 0x55e274cae6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e274cae878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55e274cae738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55e274cae7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55e274cae928 <line:550:22>
| `-NonNullAttr 0x55e274cae980 <col:63, col:77> 1
|-FunctionDecl 0x55e274cafcf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55e274cafaa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55e274cafbb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55e274cafda8 <col:29>
| `-NonNullAttr 0x55e274cafe00 <col:70, col:84> 1
|-FunctionDecl 0x55e274caff78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e274cafe48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e274cb0020 <line:555:22>
| `-NonNullAttr 0x55e274cb0078 <col:63, col:77> 1
|-FunctionDecl 0x55e274cb0180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e274cb00c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e274cb0228 <line:557:22>
| `-NonNullAttr 0x55e274cb0280 <col:52, col:66> 1
|-FunctionDecl 0x55e274cb0380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e274cb02c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e274cb0428 <line:559:19>
| `-NonNullAttr 0x55e274cb0480 <col:49, col:63> 1
|-FunctionDecl 0x55e274cb06b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55e274cb04c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55e274cb0558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55e274cb0768 <col:39>
| `-NonNullAttr 0x55e274cb07c0 <col:69, col:86> 1 2
|-FunctionDecl 0x55e274cb08c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e274cb0808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e274cb0968 <line:564:22>
| `-NonNullAttr 0x55e274cb09c0 <col:52, col:66> 1
|-FunctionDecl 0x55e274cb0b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e274cb0a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e274cb0bd0 <line:566:22>
| `-NonNullAttr 0x55e274cb0c28 <col:52, col:66> 1
|-FunctionDecl 0x55e274cb0de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55e274cb0c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55e274cb0d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55e274cb0e98 <col:39>
| `-NonNullAttr 0x55e274cb0ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x55e274cb0ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55e274cb0f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55e274cb1098 <line:571:22>
| `-NonNullAttr 0x55e274cb10f0 <col:52, col:66> 1
|-FunctionDecl 0x55e274cb12d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55e274cb11a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55e274cb1380 <line:573:22>
| `-NonNullAttr 0x55e274cb13d8 <col:63, col:77> 1
|-FunctionDecl 0x55e274cb14e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55e274cb1428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55e274cb1588 <line:575:22>
| `-NonNullAttr 0x55e274cb15e0 <col:63, col:77> 1
|-FunctionDecl 0x55e274cb1808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e274cb1628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55e274cb16a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55e274cb18b8 <line:579:22>
| `-NonNullAttr 0x55e274cb1910 <col:63, col:80> 1 2
|-FunctionDecl 0x55e274cb1b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55e274cb1958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55e274cb19d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55e274cb1be8 <line:582:22>
| `-NonNullAttr 0x55e274cb1c40 <col:63, col:77> 1
|-FunctionDecl 0x55e274cb1de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e274cb1c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55e274cb1d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55e274cb1e98 <line:586:22>
| `-NonNullAttr 0x55e274cb1ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e274cb2078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55e274cb1f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55e274cb1fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55e274cb2128 <col:36>
| `-NonNullAttr 0x55e274cb2180 <col:77, col:91> 1
|-FunctionDecl 0x55e274cb24b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55e274cb2260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55e274cb2370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55e274cb2568 <line:591:22>
| `-NonNullAttr 0x55e274cb25c0 <col:63, col:77> 1
|-FunctionDecl 0x55e274cb2738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55e274cb2608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55e274cb27e0 <line:593:22>
| `-NonNullAttr 0x55e274cb2838 <col:63, col:77> 1
|-FunctionDecl 0x55e274cb2940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55e274cb2888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55e274cb29e8 <line:595:22>
| `-NonNullAttr 0x55e274cb2a40 <col:52, col:66> 1
|-FunctionDecl 0x55e274cb2b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55e274cb2aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55e274cb2c00 <line:597:22>
| `-NonNullAttr 0x55e274cb2c58 <col:52, col:66> 1
|-FunctionDecl 0x55e274cb2e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55e274cb2ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55e274cb2d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55e274cb2f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55e274cb3268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55e274cb2fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55e274cb3030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55e274cb30c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55e274cb3320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55e274cb3538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55e274cb3400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55e274cb35e0 <line:606:22>
| `-NonNullAttr 0x55e274cb3638 <col:63, col:77> 1
|-FunctionDecl 0x55e274cb3740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55e274cb3688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55e274cb37e8 <line:608:22>
| `-NonNullAttr 0x55e274cb3840 <col:63, col:77> 1
|-FunctionDecl 0x55e274cb3aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e274cb3888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55e274cb3908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55e274cb3b50 <line:612:22>
| `-NonNullAttr 0x55e274cb3ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x55e274cb3db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55e274cb3bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55e274cb3c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55e274cb3e68 <col:37>
| `-NonNullAttr 0x55e274cb3ec0 <col:78, col:92> 1
|-FunctionDecl 0x55e274cb40d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55e274cb3f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55e274cb3fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55e274cb4188 <line:618:22>
| `-NonNullAttr 0x55e274cb41e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e274cb43a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55e274cb4228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55e274cb42a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55e274cb4458 <line:621:22>
| `-NonNullAttr 0x55e274cb44b0 <col:63, col:77> 1
|-FunctionDecl 0x55e274cb4758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55e274cb4590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55e274cb4610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55e274cb4808 <line:623:22>
| `-NonNullAttr 0x55e274cb4860 <col:63, col:77> 1
|-FunctionDecl 0x55e274cb49d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55e274cb48a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55e274cb4ab0 <line:625:22>
| `-NonNullAttr 0x55e274cb4b08 <col:63, col:77> 1
|-FunctionDecl 0x55e274cb4c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55e274cb4b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55e274cb4cb8 <line:627:22>
| `-NonNullAttr 0x55e274cb4d10 <col:52, col:66> 1
|-FunctionDecl 0x55e274cb4e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55e274cb4d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55e274cb4eb8 <line:629:22>
| `-NonNullAttr 0x55e274cb4f10 <col:52, col:66> 1
|-FunctionDecl 0x55e274cb5010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55e274cb4f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55e274cb50b8 <line:631:22>
| `-NonNullAttr 0x55e274cb5110 <col:52, col:66> 1
|-FunctionDecl 0x55e274cb54e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55e274cb51f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55e274cb5300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55e274cb5380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55e274cb55a0 <line:635:22>
| `-NonNullAttr 0x55e274cb55f8 <col:63, col:77> 1
|-FunctionDecl 0x55e274cb5778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55e274cb5648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55e274cb5820 <line:637:22>
| `-NonNullAttr 0x55e274cb5878 <col:63, col:77> 1
|-FunctionDecl 0x55e274cb5980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55e274cb58c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55e274cb5a28 <line:639:22>
| `-NonNullAttr 0x55e274cb5a80 <col:52, col:66> 1
|-FunctionDecl 0x55e274cb6c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55e274cb6b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55e274cb6d30 <line:641:22>
| `-NonNullAttr 0x55e274cb6d88 <col:63, col:77> 1
|-FunctionDecl 0x55e274cb6e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55e274cb6dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55e274cb6f38 <line:643:22>
| `-NonNullAttr 0x55e274cb6f90 <col:63, col:77> 1
|-FunctionDecl 0x55e274cb71b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55e274cb6fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55e274cb7058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55e274cb7268 <line:647:22>
| `-NonNullAttr 0x55e274cb72c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55e274cb74c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55e274cb7308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55e274cb7388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55e274cb7578 <line:650:22>
| `-NonNullAttr 0x55e274cb75d0 <col:63, col:77> 1
|-FunctionDecl 0x55e274cb7918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55e274cb76b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55e274cb77d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55e274cb79c8 <line:653:22>
| `-NonNullAttr 0x55e274cb7a20 <col:63, col:77> 1
|-FunctionDecl 0x55e274cb7b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55e274cb7a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55e274cb7c30 <col:69>
|-FunctionDecl 0x55e274cb7da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55e274cb7c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55e274cb7e50 <col:72>
|-FunctionDecl 0x55e274cb8088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55e274cb7eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55e274cb7f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55e274cb8138 <col:44>
|-FunctionDecl 0x55e274cb8358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55e274cb81a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55e274cb8218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55e274cb8408 <line:660:22>
| `-NonNullAttr 0x55e274cb8460 <col:63, col:77> 2
|-FunctionDecl 0x55e274cb88a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55e274cb8540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55e274cb8650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55e274cb8760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55e274cb8960 <col:47>
|-FunctionDecl 0x55e274cb8af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55e274cb89d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55e274cb8c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55e274cb8bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55e274cb8da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55e274cb8d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55e274cb8ef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x55e274cb8e60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55e274cb8fc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55e274cb9080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55e274cb9140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55e274cb91f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55e274cb9278 prev 0x55e274cb91f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55e274cb92e0 <col:24> 'int' 0
|-VarDecl 0x55e274cb9318 <line:674:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x55e274cb9398 prev 0x55e274cb9318 <line:675:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x55e274cb9400 <col:27> 'int' 0
|-VarDecl 0x55e274cb9438 <line:676:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x55e274cb94b8 prev 0x55e274cb9438 <line:677:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x55e274cb9520 <col:27> 'int' 0
|-VarDecl 0x55e274cb9558 <line:678:1, col:5> col:5 used a 'int'
|-VarDecl 0x55e274cb95d8 prev 0x55e274cb9558 <line:679:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x55e274cb9640 <col:9> 'int' 0
|-VarDecl 0x55e274cb9670 <line:680:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55e274cb96e8 <line:681:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55e274cb9768 <line:682:1, col:5> col:5 used x 'int'
|-VarDecl 0x55e274cb97e8 prev 0x55e274cb9768 <line:683:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55e274cb9850 <col:9> 'int' 0
|-VarDecl 0x55e274cb9888 <line:684:1, col:5> col:5 used y 'int'
|-VarDecl 0x55e274cb9908 prev 0x55e274cb9888 <line:685:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55e274cb9970 <col:9> 'int' 0
|-VarDecl 0x55e274cb99a8 <line:686:1, col:5> col:5 used z 'int'
|-VarDecl 0x55e274cb9a28 prev 0x55e274cb99a8 <line:687:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55e274cb9a90 <col:9> 'int' 0
|-VarDecl 0x55e274cb9b00 <line:688:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x55e274cb9b80 <line:689:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x55e274cb9bf8 <line:690:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x55e274cb9c70 <line:691:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x55e274cb9ce8 <line:692:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x55e274cb9d60 <line:693:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x55e274cb9dd8 <line:694:1, col:7> col:7 used z$r_buff0_thd4 '_Bool'
|-VarDecl 0x55e274cb9e50 <line:695:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x55e274cb9ec8 <line:696:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x55e274cb9f40 <line:697:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x55e274cb9fb8 <line:698:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x55e274cba030 <line:699:1, col:7> col:7 used z$r_buff1_thd4 '_Bool'
|-VarDecl 0x55e274cba0a8 <line:700:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x55e274cba128 <line:701:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x55e274cba1a8 <line:702:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x55e274cba220 <line:703:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x55e274cba2a0 <line:704:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x55e274cba318 <line:705:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x55e274cba390 <line:706:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55e274cba408 <line:707:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55e274cba520 prev 0x55e274cb8af0 <line:708:1, line:722:1> line:708:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55e274cba488 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55e274cbab10 <line:709:1, line:722:1>
|   |-CallExpr 0x55e274cba638 <line:710:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e274cba620 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cba5c8 <col:3> 'void ()' Function 0x55e274c5fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e274cba698 <line:711:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55e274cba658 <col:3> 'int' lvalue Var 0x55e274cb95d8 'a' 'int'
|   | `-IntegerLiteral 0x55e274cba678 <col:7> 'int' 1
|   |-CallExpr 0x55e274cba6f0 <line:712:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e274cba6d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cba6b8 <col:3> 'void ()' Function 0x55e274c5ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e274cba748 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e274cba730 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cba710 <col:3> 'void ()' Function 0x55e274c5fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e274cba7a8 <line:714:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55e274cba768 <col:3> 'int' lvalue Var 0x55e274cb97e8 'x' 'int'
|   | `-IntegerLiteral 0x55e274cba788 <col:7> 'int' 1
|   |-CallExpr 0x55e274cba800 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e274cba7e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cba7c8 <col:3> 'void ()' Function 0x55e274c5ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e274cba858 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e274cba840 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cba820 <col:3> 'void ()' Function 0x55e274c5fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55e274cba8b0 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e274cba898 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cba878 <col:3> 'void ()' Function 0x55e274c5ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e274cba908 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e274cba8f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cba8d0 <col:3> 'void ()' Function 0x55e274c5fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e274cba9c0 <line:719:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55e274cba928 <col:3> 'int' lvalue Var 0x55e274cb9278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55e274cba9a0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55e274cba988 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e274cba948 <col:22> 'int' lvalue Var 0x55e274cb9278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55e274cba968 <col:41> 'int' 1
|   |-CallExpr 0x55e274cbaa18 <line:720:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e274cbaa00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cba9e0 <col:3> 'void ()' Function 0x55e274c5ff00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55e274cbaac8 <line:721:3, col:36>
|     `-CallExpr 0x55e274cbaaa8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55e274cbaa90 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55e274cbaa38 <col:10> 'void *(void)' Function 0x55e274c5f958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55e274cbac30 prev 0x55e274cb8c48 <line:723:1, line:737:1> line:723:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55e274cbab98 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55e274cbb178 <line:724:1, line:737:1>
|   |-CallExpr 0x55e274cbad10 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e274cbacf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cbacd8 <col:3> 'void ()' Function 0x55e274c5fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e274cbad70 <line:726:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55e274cbad30 <col:3> 'int' lvalue Var 0x55e274cb97e8 'x' 'int'
|   | `-IntegerLiteral 0x55e274cbad50 <col:7> 'int' 2
|   |-CallExpr 0x55e274cbadc8 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e274cbadb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cbad90 <col:3> 'void ()' Function 0x55e274c5ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e274cbae20 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e274cbae08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cbade8 <col:3> 'void ()' Function 0x55e274c5fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e274cbae80 <line:729:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55e274cbae40 <col:3> 'int' lvalue Var 0x55e274cb9908 'y' 'int'
|   | `-IntegerLiteral 0x55e274cbae60 <col:7> 'int' 1
|   |-CallExpr 0x55e274cbaed8 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e274cbaec0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cbaea0 <col:3> 'void ()' Function 0x55e274c5ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e274cbaf30 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e274cbaf18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cbaef8 <col:3> 'void ()' Function 0x55e274c5fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55e274cbaf88 <line:732:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e274cbaf70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cbaf50 <col:3> 'void ()' Function 0x55e274c5ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e274cbafe0 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e274cbafc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cbafa8 <col:3> 'void ()' Function 0x55e274c5fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e274cbb098 <line:734:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55e274cbb000 <col:3> 'int' lvalue Var 0x55e274cb9278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55e274cbb078 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55e274cbb060 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e274cbb020 <col:22> 'int' lvalue Var 0x55e274cb9278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55e274cbb040 <col:41> 'int' 1
|   |-CallExpr 0x55e274cbb0f0 <line:735:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e274cbb0d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cbb0b8 <col:3> 'void ()' Function 0x55e274c5ff00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55e274cbb168 <line:736:3, col:36>
|     `-CallExpr 0x55e274cbb148 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55e274cbb130 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55e274cbb110 <col:10> 'void *(void)' Function 0x55e274c5f958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55e274cbb298 prev 0x55e274cb8da0 <line:738:1, line:757:1> line:738:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55e274cbb200 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55e274cbc4c0 <line:739:1, line:757:1>
|   |-CallExpr 0x55e274cbb378 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e274cbb360 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cbb340 <col:3> 'void ()' Function 0x55e274c5fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e274cbb3d8 <line:741:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55e274cbb398 <col:3> 'int' lvalue Var 0x55e274cb9908 'y' 'int'
|   | `-IntegerLiteral 0x55e274cbb3b8 <col:7> 'int' 2
|   |-CallExpr 0x55e274cbb430 <line:742:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e274cbb418 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cbb3f8 <col:3> 'void ()' Function 0x55e274c5ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e274cbb488 <line:743:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e274cbb470 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cbb450 <col:3> 'void ()' Function 0x55e274c5fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e274cbb4e8 <line:744:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55e274cbb4a8 <col:3> 'int' lvalue Var 0x55e274cb9a28 'z' 'int'
|   | `-IntegerLiteral 0x55e274cbb4c8 <col:7> 'int' 1
|   |-CallExpr 0x55e274cbb540 <line:745:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e274cbb528 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cbb508 <col:3> 'void ()' Function 0x55e274c5ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e274cbb598 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e274cbb580 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cbb560 <col:3> 'void ()' Function 0x55e274c5fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e274cbb880 <line:747:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55e274cbb5b8 <col:3> 'int' lvalue Var 0x55e274cb9a28 'z' 'int'
|   | `-ConditionalOperator 0x55e274cbb850 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55e274cbb678 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55e274cbb630 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55e274cbb618 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55e274cbb5d8 <col:7> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55e274cbb660 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55e274cbb648 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55e274cbb5f8 <col:25> '_Bool' lvalue Var 0x55e274cb9d60 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55e274cbb838 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e274cbb698 <col:42> 'int' lvalue Var 0x55e274cba1a8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55e274cbb818 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55e274cbb7e8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55e274cbb758 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55e274cbb710 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55e274cbb6f8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55e274cbb6b8 <col:55> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55e274cbb740 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55e274cbb728 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55e274cbb6d8 <col:73> '_Bool' lvalue Var 0x55e274cb9fb8 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55e274cbb7b8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e274cbb778 <col:90> 'int' lvalue Var 0x55e274cba2a0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55e274cbb7d0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e274cbb798 <col:102> 'int' lvalue Var 0x55e274cb9a28 'z' 'int'
|   |-BinaryOperator 0x55e274cbba88 <line:748:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55e274cbb8a0 <col:3> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e274cbba70 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e274cbba40 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55e274cbb960 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55e274cbb918 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55e274cbb900 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55e274cbb8c0 <col:20> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55e274cbb948 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55e274cbb930 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55e274cbb8e0 <col:38> '_Bool' lvalue Var 0x55e274cb9d60 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55e274cbb9f8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e274cbb9b0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e274cbb980 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55e274cbba28 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e274cbba10 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e274cbb9d8 <col:66> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55e274cbbd88 <line:749:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55e274cbbaa8 <col:3> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e274cbbd70 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e274cbbd40 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55e274cbbc60 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55e274cbbb80 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55e274cbbb38 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55e274cbbb20 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55e274cbbac8 <col:20> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55e274cbbb68 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55e274cbbb50 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55e274cbbae8 <col:38> '_Bool' lvalue Var 0x55e274cb9d60 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55e274cbbc40 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55e274cbbbf8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55e274cbbbe0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55e274cbbba0 <col:56> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55e274cbbc28 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55e274cbbc10 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55e274cbbbc0 <col:74> '_Bool' lvalue Var 0x55e274cb9fb8 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55e274cbbcf8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e274cbbcb0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e274cbbc80 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55e274cbbd28 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e274cbbd10 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e274cbbcd8 <col:102> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55e274cbbf90 <line:750:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55e274cbbda8 <col:3> '_Bool' lvalue Var 0x55e274cb9d60 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55e274cbbf78 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e274cbbf48 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55e274cbbe68 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55e274cbbe20 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55e274cbbe08 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55e274cbbdc8 <col:20> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55e274cbbe50 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55e274cbbe38 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55e274cbbde8 <col:38> '_Bool' lvalue Var 0x55e274cb9d60 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55e274cbbf00 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e274cbbeb8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e274cbbe88 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55e274cbbf30 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e274cbbf18 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e274cbbee0 <col:66> '_Bool' lvalue Var 0x55e274cb9d60 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55e274cbc278 <line:751:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55e274cbbfb0 <col:3> '_Bool' lvalue Var 0x55e274cb9fb8 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55e274cbc260 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e274cbc230 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55e274cbc150 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55e274cbc070 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55e274cbc028 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55e274cbc010 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55e274cbbfd0 <col:20> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55e274cbc058 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55e274cbc040 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55e274cbbff0 <col:38> '_Bool' lvalue Var 0x55e274cb9d60 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55e274cbc130 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55e274cbc0e8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55e274cbc0d0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55e274cbc090 <col:56> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55e274cbc118 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55e274cbc100 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55e274cbc0b0 <col:74> '_Bool' lvalue Var 0x55e274cb9fb8 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55e274cbc1e8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e274cbc1a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e274cbc170 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55e274cbc218 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e274cbc200 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e274cbc1c8 <col:102> '_Bool' lvalue Var 0x55e274cb9fb8 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55e274cbc2d0 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e274cbc2b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cbc298 <col:3> 'void ()' Function 0x55e274c5ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e274cbc328 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e274cbc310 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cbc2f0 <col:3> 'void ()' Function 0x55e274c5fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e274cbc3e0 <line:754:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55e274cbc348 <col:3> 'int' lvalue Var 0x55e274cb9278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55e274cbc3c0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55e274cbc3a8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e274cbc368 <col:22> 'int' lvalue Var 0x55e274cb9278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55e274cbc388 <col:41> 'int' 1
|   |-CallExpr 0x55e274cbc438 <line:755:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e274cbc420 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cbc400 <col:3> 'void ()' Function 0x55e274c5ff00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55e274cbc4b0 <line:756:3, col:36>
|     `-CallExpr 0x55e274cbc490 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55e274cbc478 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55e274cbc458 <col:10> 'void *(void)' Function 0x55e274c5f958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55e274cbc608 prev 0x55e274cb8ef8 <line:758:1, line:803:1> line:758:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x55e274cbc570 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55e274cc0910 <line:759:1, line:803:1>
|   |-CallExpr 0x55e274cbc6e8 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e274cbc6d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cbc6b0 <col:3> 'void ()' Function 0x55e274c5fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e274cbc760 <line:761:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55e274cbc708 <col:3> 'int' lvalue Var 0x55e274cba2a0 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55e274cbc748 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e274cbc728 <col:15> 'int' lvalue Var 0x55e274cba1a8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55e274cbc7c0 <line:762:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55e274cbc780 <col:3> 'int' lvalue Var 0x55e274cba1a8 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x55e274cbc7a0 <col:15> 'int' 2
|   |-BinaryOperator 0x55e274cbc838 <line:763:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55e274cbc7e0 <col:3> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e274cbc820 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e274cbc800 <col:20> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55e274cbc8d0 <line:764:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55e274cbc858 <col:3> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55e274cbc8a8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55e274cbc878 <col:27> 'int' 1
|   |-CallExpr 0x55e274cbca58 <line:765:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55e274cbca40 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55e274cbc8f0 <col:3> 'void (int)' Function 0x55e274c5fbc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55e274cbc9f0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55e274cbc9d0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55e274cbc9b0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55e274cbc968 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55e274cbc950 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55e274cbc910 <col:23> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55e274cbc998 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55e274cbc980 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55e274cbc930 <col:41> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55e274cbcad8 <line:766:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55e274cbca80 <col:3> '_Bool' lvalue Var 0x55e274cb9e50 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55e274cbcac0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e274cbcaa0 <col:20> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55e274cbcb68 <line:767:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55e274cbcaf8 <col:3> '_Bool' lvalue Var 0x55e274cb9ec8 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55e274cbcb50 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e274cbcb30 <col:20> '_Bool' lvalue Var 0x55e274cb9c70 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55e274cbcbe0 <line:768:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55e274cbcb88 <col:3> '_Bool' lvalue Var 0x55e274cb9f40 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55e274cbcbc8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e274cbcba8 <col:20> '_Bool' lvalue Var 0x55e274cb9ce8 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55e274cbcc58 <line:769:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55e274cbcc00 <col:3> '_Bool' lvalue Var 0x55e274cb9fb8 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55e274cbcc40 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e274cbcc20 <col:20> '_Bool' lvalue Var 0x55e274cb9d60 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55e274cbccd0 <line:770:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55e274cbcc78 <col:3> '_Bool' lvalue Var 0x55e274cba030 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55e274cbccb8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e274cbcc98 <col:20> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55e274cbcd68 <line:771:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55e274cbccf0 <col:3> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   | `-CStyleCastExpr 0x55e274cbcd40 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55e274cbcd10 <col:27> 'int' 1
|   |-CallExpr 0x55e274cbcdc0 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e274cbcda8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cbcd88 <col:3> 'void ()' Function 0x55e274c5ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e274cbce18 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e274cbce00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cbcde0 <col:3> 'void ()' Function 0x55e274c5fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e274cbcec8 <line:774:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55e274cbce38 <col:3> '_Bool' lvalue Var 0x55e274cba390 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55e274cbceb0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55e274cbce90 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55e274cbce78 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55e274cbce58 <col:19> 'void *(void)' Function 0x55e274c5f958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55e274cbcf78 <line:775:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55e274cbcee8 <col:3> '_Bool' lvalue Var 0x55e274cba408 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55e274cbcf60 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55e274cbcf40 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55e274cbcf28 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55e274cbcf08 <col:19> 'void *(void)' Function 0x55e274c5f958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55e274cbcff0 <line:776:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55e274cbcf98 <col:3> '_Bool' lvalue Var 0x55e274cb9b00 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55e274cbcfd8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e274cbcfb8 <col:21> '_Bool' lvalue Var 0x55e274cba408 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55e274cbd068 <line:777:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55e274cbd010 <col:3> 'int' lvalue Var 0x55e274cb9b80 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55e274cbd050 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e274cbd030 <col:15> 'int' lvalue Var 0x55e274cb9a28 'z' 'int'
|   |-BinaryOperator 0x55e274cbd4a0 <line:778:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55e274cbd088 <col:3> 'int' lvalue Var 0x55e274cb9a28 'z' 'int'
|   | `-ConditionalOperator 0x55e274cbd470 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55e274cbd298 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55e274cbd1b8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55e274cbd0e0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55e274cbd0c8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55e274cbd0a8 <col:8> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55e274cbd198 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55e274cbd130 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55e274cbd118 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55e274cbd0f8 <col:27> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x55e274cbd180 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55e274cbd168 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55e274cbd148 <col:46> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55e274cbd278 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55e274cbd210 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55e274cbd1f8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55e274cbd1d8 <col:65> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x55e274cbd260 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55e274cbd248 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55e274cbd228 <col:84> '_Bool' lvalue Var 0x55e274cba030 'z$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55e274cbd458 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e274cbd2b8 <col:101> 'int' lvalue Var 0x55e274cb9a28 'z' 'int'
|   |   `-ParenExpr 0x55e274cbd438 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55e274cbd408 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55e274cbd378 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55e274cbd330 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55e274cbd318 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55e274cbd2d8 <col:106> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55e274cbd360 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55e274cbd348 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55e274cbd2f8 <col:124> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55e274cbd3d8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e274cbd398 <col:141> 'int' lvalue Var 0x55e274cba1a8 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55e274cbd3f0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e274cbd3b8 <col:153> 'int' lvalue Var 0x55e274cba2a0 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55e274cbd9b0 <line:779:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55e274cbd4c0 <col:3> 'int' lvalue Var 0x55e274cba1a8 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x55e274cbd980 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55e274cbd950 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55e274cbd938 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55e274cbd4e0 <col:15> '_Bool' lvalue Var 0x55e274cba408 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55e274cbd968 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e274cbd500 <col:31> 'int' lvalue Var 0x55e274cba1a8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55e274cbd918 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55e274cbd8e8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55e274cbd710 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55e274cbd630 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55e274cbd558 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55e274cbd540 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55e274cbd520 <col:45> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55e274cbd610 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55e274cbd5a8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55e274cbd590 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55e274cbd570 <col:64> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55e274cbd5f8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55e274cbd5e0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55e274cbd5c0 <col:83> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55e274cbd6f0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55e274cbd688 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55e274cbd670 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55e274cbd650 <col:102> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55e274cbd6d8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55e274cbd6c0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55e274cbd6a0 <col:121> '_Bool' lvalue Var 0x55e274cba030 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55e274cbd8d0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e274cbd730 <col:138> 'int' lvalue Var 0x55e274cba1a8 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x55e274cbd8b0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55e274cbd880 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55e274cbd7f0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55e274cbd7a8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55e274cbd790 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55e274cbd750 <col:151> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55e274cbd7d8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55e274cbd7c0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55e274cbd770 <col:169> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55e274cbd850 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55e274cbd810 <col:186> 'int' lvalue Var 0x55e274cba1a8 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55e274cbd868 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55e274cbd830 <col:198> 'int' lvalue Var 0x55e274cba1a8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55e274cbdee0 <line:780:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55e274cbd9d0 <col:3> 'int' lvalue Var 0x55e274cba2a0 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x55e274cbdeb0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55e274cbde80 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55e274cbde68 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55e274cbd9f0 <col:15> '_Bool' lvalue Var 0x55e274cba408 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55e274cbde98 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e274cbda10 <col:31> 'int' lvalue Var 0x55e274cba2a0 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x55e274cbde48 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55e274cbde18 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55e274cbdc40 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55e274cbdb60 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55e274cbda68 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55e274cbda50 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55e274cbda30 <col:45> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55e274cbdb40 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55e274cbdab8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55e274cbdaa0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55e274cbda80 <col:64> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55e274cbdb08 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55e274cbdaf0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55e274cbdad0 <col:83> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55e274cbdc20 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55e274cbdbb8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55e274cbdba0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55e274cbdb80 <col:102> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55e274cbdc08 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55e274cbdbf0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55e274cbdbd0 <col:121> '_Bool' lvalue Var 0x55e274cba030 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55e274cbde00 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e274cbdc60 <col:138> 'int' lvalue Var 0x55e274cba2a0 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x55e274cbdde0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55e274cbddb0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55e274cbdd20 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55e274cbdcd8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55e274cbdcc0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55e274cbdc80 <col:151> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55e274cbdd08 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55e274cbdcf0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55e274cbdca0 <col:169> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55e274cbdd80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55e274cbdd40 <col:186> 'int' lvalue Var 0x55e274cba2a0 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55e274cbdd98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55e274cbdd60 <col:198> 'int' lvalue Var 0x55e274cba2a0 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55e274cbe488 <line:781:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55e274cbdf00 <col:3> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e274cbe470 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e274cbe440 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55e274cbe3f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e274cbe3e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e274cbdf20 <col:20> '_Bool' lvalue Var 0x55e274cba408 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e274cbe428 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e274cbe410 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e274cbdf40 <col:36> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55e274cbe3c0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55e274cbe390 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55e274cbe150 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55e274cbe070 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55e274cbdf98 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55e274cbdf80 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55e274cbdf60 <col:55> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55e274cbe050 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55e274cbdfe8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55e274cbdfd0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55e274cbdfb0 <col:74> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55e274cbe038 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55e274cbe020 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55e274cbe000 <col:93> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55e274cbe130 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55e274cbe0c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55e274cbe0b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55e274cbe090 <col:112> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55e274cbe118 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55e274cbe100 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55e274cbe0e0 <col:131> '_Bool' lvalue Var 0x55e274cba030 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55e274cbe378 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e274cbe360 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e274cbe170 <col:148> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55e274cbe340 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55e274cbe310 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55e274cbe230 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e274cbe1e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e274cbe1d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e274cbe190 <col:166> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e274cbe218 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e274cbe200 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e274cbe1b0 <col:184> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55e274cbe2c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e274cbe280 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e274cbe250 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55e274cbe2f8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55e274cbe2e0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55e274cbe2a8 <col:212> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55e274cbea50 <line:782:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55e274cbe4a8 <col:3> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e274cbea38 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e274cbea08 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55e274cbe9c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e274cbe9a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e274cbe4c8 <col:20> '_Bool' lvalue Var 0x55e274cba408 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e274cbe9f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e274cbe9d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e274cbe4e8 <col:36> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55e274cbe988 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55e274cbe958 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55e274cbe6f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55e274cbe618 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55e274cbe540 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55e274cbe528 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55e274cbe508 <col:55> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55e274cbe5f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55e274cbe590 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55e274cbe578 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55e274cbe558 <col:74> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55e274cbe5e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55e274cbe5c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55e274cbe5a8 <col:93> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55e274cbe6d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55e274cbe670 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55e274cbe658 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55e274cbe638 <col:112> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55e274cbe6c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55e274cbe6a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55e274cbe688 <col:131> '_Bool' lvalue Var 0x55e274cba030 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55e274cbe940 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e274cbe928 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e274cbe718 <col:148> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55e274cbe908 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55e274cbe8d8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55e274cbe7d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e274cbe790 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e274cbe778 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e274cbe738 <col:166> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e274cbe7c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e274cbe7a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e274cbe758 <col:184> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55e274cbe8a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e274cbe828 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e274cbe7f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55e274cbe8c0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55e274cbe880 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55e274cbe850 <col:219> 'int' 0
|   |-BinaryOperator 0x55e274cbf008 <line:783:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55e274cbea70 <col:3> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55e274cbeff0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e274cbefc0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55e274cbef78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e274cbef60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e274cbea90 <col:20> '_Bool' lvalue Var 0x55e274cba408 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e274cbefa8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e274cbef90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e274cbeab0 <col:36> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x55e274cbef40 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55e274cbef10 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55e274cbecd0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55e274cbebf0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55e274cbeb08 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55e274cbeaf0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55e274cbead0 <col:55> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55e274cbebd0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55e274cbeb68 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55e274cbeb50 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55e274cbeb20 <col:74> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55e274cbebb8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55e274cbeba0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55e274cbeb80 <col:93> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55e274cbecb0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55e274cbec48 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55e274cbec30 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55e274cbec10 <col:112> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55e274cbec98 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55e274cbec80 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55e274cbec60 <col:131> '_Bool' lvalue Var 0x55e274cba030 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55e274cbeef8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e274cbeee0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e274cbecf0 <col:148> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x55e274cbeec0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55e274cbee90 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55e274cbedb0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e274cbed68 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e274cbed50 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e274cbed10 <col:166> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e274cbed98 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e274cbed80 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e274cbed30 <col:184> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55e274cbee48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e274cbee00 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e274cbedd0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55e274cbee78 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55e274cbee60 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55e274cbee28 <col:212> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55e274cbf5d0 <line:784:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55e274cbf028 <col:3> '_Bool' lvalue Var 0x55e274cba030 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55e274cbf5b8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e274cbf588 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55e274cbf540 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e274cbf528 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e274cbf048 <col:20> '_Bool' lvalue Var 0x55e274cba408 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55e274cbf570 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55e274cbf558 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55e274cbf068 <col:36> '_Bool' lvalue Var 0x55e274cba030 'z$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x55e274cbf508 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55e274cbf4d8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55e274cbf278 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55e274cbf198 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55e274cbf0c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55e274cbf0a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55e274cbf088 <col:55> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55e274cbf178 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55e274cbf110 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55e274cbf0f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55e274cbf0d8 <col:74> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55e274cbf160 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55e274cbf148 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55e274cbf128 <col:93> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55e274cbf258 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55e274cbf1f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55e274cbf1d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55e274cbf1b8 <col:112> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55e274cbf240 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55e274cbf228 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55e274cbf208 <col:131> '_Bool' lvalue Var 0x55e274cba030 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55e274cbf4c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55e274cbf4a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55e274cbf298 <col:148> '_Bool' lvalue Var 0x55e274cba030 'z$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x55e274cbf488 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55e274cbf458 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55e274cbf358 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55e274cbf310 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55e274cbf2f8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55e274cbf2b8 <col:166> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55e274cbf340 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55e274cbf328 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55e274cbf2d8 <col:184> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55e274cbf428 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55e274cbf3a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55e274cbf378 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55e274cbf440 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55e274cbf400 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55e274cbf3d0 <col:219> 'int' 0
|   |-BinaryOperator 0x55e274cbf648 <line:785:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55e274cbf5f0 <col:3> 'int' lvalue Var 0x55e274cb9398 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x55e274cbf630 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e274cbf610 <col:25> 'int' lvalue Var 0x55e274cb9a28 'z' 'int'
|   |-BinaryOperator 0x55e274cbf778 <line:786:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55e274cbf668 <col:3> 'int' lvalue Var 0x55e274cb9a28 'z' 'int'
|   | `-ConditionalOperator 0x55e274cbf748 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55e274cbf700 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55e274cbf6e8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55e274cbf688 <col:7> '_Bool' lvalue Var 0x55e274cb9b00 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55e274cbf718 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e274cbf6a8 <col:25> 'int' lvalue Var 0x55e274cb9b80 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55e274cbf730 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55e274cbf6c8 <col:37> 'int' lvalue Var 0x55e274cb9a28 'z' 'int'
|   |-BinaryOperator 0x55e274cbf810 <line:787:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55e274cbf798 <col:3> '_Bool' lvalue Var 0x55e274cb9b00 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55e274cbf7e8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55e274cbf7b8 <col:28> 'int' 0
|   |-CallExpr 0x55e274cbf868 <line:788:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e274cbf850 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cbf830 <col:3> 'void ()' Function 0x55e274c5ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e274cbf8c0 <line:789:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e274cbf8a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cbf888 <col:3> 'void ()' Function 0x55e274c5fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e274cbf938 <line:790:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55e274cbf8e0 <col:3> 'int' lvalue Var 0x55e274cb94b8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x55e274cbf920 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55e274cbf900 <col:25> 'int' lvalue Var 0x55e274cb95d8 'a' 'int'
|   |-CallExpr 0x55e274cbf990 <line:791:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e274cbf978 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cbf958 <col:3> 'void ()' Function 0x55e274c5ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e274cbf9e8 <line:792:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e274cbf9d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cbf9b0 <col:3> 'void ()' Function 0x55e274c5fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e274cbfce8 <line:793:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55e274cbfa08 <col:3> 'int' lvalue Var 0x55e274cb9a28 'z' 'int'
|   | `-ConditionalOperator 0x55e274cbfcb8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55e274cbfac8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55e274cbfa80 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55e274cbfa68 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55e274cbfa28 <col:7> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55e274cbfab0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55e274cbfa98 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55e274cbfa48 <col:25> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55e274cbfca0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e274cbfae8 <col:42> 'int' lvalue Var 0x55e274cba1a8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55e274cbfc80 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55e274cbfc50 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55e274cbfbc0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55e274cbfb78 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55e274cbfb60 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55e274cbfb08 <col:55> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55e274cbfba8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55e274cbfb90 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55e274cbfb28 <col:73> '_Bool' lvalue Var 0x55e274cba030 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55e274cbfc20 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55e274cbfbe0 <col:90> 'int' lvalue Var 0x55e274cba2a0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55e274cbfc38 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e274cbfc00 <col:102> 'int' lvalue Var 0x55e274cb9a28 'z' 'int'
|   |-BinaryOperator 0x55e274cbfef0 <line:794:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55e274cbfd08 <col:3> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e274cbfed8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e274cbfea8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55e274cbfdc8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55e274cbfd80 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55e274cbfd68 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55e274cbfd28 <col:20> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55e274cbfdb0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55e274cbfd98 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55e274cbfd48 <col:38> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55e274cbfe60 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e274cbfe18 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e274cbfde8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55e274cbfe90 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e274cbfe78 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e274cbfe40 <col:66> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55e274cc01d8 <line:795:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55e274cbff10 <col:3> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55e274cc01c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e274cc0190 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55e274cc00b0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55e274cbffd0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55e274cbff88 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55e274cbff70 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55e274cbff30 <col:20> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55e274cbffb8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55e274cbffa0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55e274cbff50 <col:38> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55e274cc0090 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55e274cc0048 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55e274cc0030 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55e274cbfff0 <col:56> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55e274cc0078 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55e274cc0060 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55e274cc0010 <col:74> '_Bool' lvalue Var 0x55e274cba030 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55e274cc0148 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e274cc0100 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e274cc00d0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55e274cc0178 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e274cc0160 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e274cc0128 <col:102> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55e274cc03e0 <line:796:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55e274cc01f8 <col:3> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55e274cc03c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e274cc0398 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55e274cc02b8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55e274cc0270 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55e274cc0258 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55e274cc0218 <col:20> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55e274cc02a0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55e274cc0288 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55e274cc0238 <col:38> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55e274cc0350 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e274cc0308 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e274cc02d8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55e274cc0380 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e274cc0368 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e274cc0330 <col:66> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55e274cc06c8 <line:797:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55e274cc0400 <col:3> '_Bool' lvalue Var 0x55e274cba030 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55e274cc06b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55e274cc0680 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55e274cc05a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55e274cc04c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55e274cc0478 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55e274cc0460 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55e274cc0420 <col:20> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55e274cc04a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55e274cc0490 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55e274cc0440 <col:38> '_Bool' lvalue Var 0x55e274cb9dd8 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55e274cc0580 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55e274cc0538 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55e274cc0520 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55e274cc04e0 <col:56> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55e274cc0568 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55e274cc0550 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55e274cc0500 <col:74> '_Bool' lvalue Var 0x55e274cba030 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55e274cc0638 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55e274cc05f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55e274cc05c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55e274cc0668 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55e274cc0650 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55e274cc0618 <col:102> '_Bool' lvalue Var 0x55e274cba030 'z$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x55e274cc0720 <line:798:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e274cc0708 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cc06e8 <col:3> 'void ()' Function 0x55e274c5ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55e274cc0778 <line:799:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55e274cc0760 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cc0740 <col:3> 'void ()' Function 0x55e274c5fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55e274cc0830 <line:800:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55e274cc0798 <col:3> 'int' lvalue Var 0x55e274cb9278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55e274cc0810 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55e274cc07f8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55e274cc07b8 <col:22> 'int' lvalue Var 0x55e274cb9278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55e274cc07d8 <col:41> 'int' 1
|   |-CallExpr 0x55e274cc0888 <line:801:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55e274cc0870 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55e274cc0850 <col:3> 'void ()' Function 0x55e274c5ff00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55e274cc0900 <line:802:3, col:36>
|     `-CallExpr 0x55e274cc08e0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55e274cc08c8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55e274cc08a8 <col:10> 'void *(void)' Function 0x55e274c5f958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55e274cc0a98 prev 0x55e274cb8fc0 <line:804:1, line:806:1> line:804:6 fence 'void ()'
| `-CompoundStmt 0x55e274cc0b38 <line:805:1, line:806:1>
|-FunctionDecl 0x55e274cc0b90 prev 0x55e274cb9080 <line:807:1, line:809:1> line:807:6 isync 'void ()'
| `-CompoundStmt 0x55e274cc0c30 <line:808:1, line:809:1>
|-FunctionDecl 0x55e274cc0c60 prev 0x55e274cb9140 <line:810:1, line:812:1> line:810:6 lwfence 'void ()'
| `-CompoundStmt 0x55e274cc0d00 <line:811:1, line:812:1>
`-FunctionDecl 0x55e274cc0d68 <line:813:1, line:852:1> line:813:5 main 'int ()'
  `-CompoundStmt 0x55e274cc56e0 <line:814:1, line:852:1>
    |-DeclStmt 0x55e274cc0e80 <line:815:3, col:17>
    | `-VarDecl 0x55e274cc0e18 <col:3, col:13> col:13 used t827 'pthread_t':'unsigned long'
    |-CallExpr 0x55e274cc1088 <line:816:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55e274cc1070 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e274cc0e98 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55e274ca0488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55e274cc0ed8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55e274cc0eb8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55e274cc0e18 't827' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55e274cc10c8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55e274cc0f50 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55e274cc0f28 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55e274cc0ef0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55e274cc10e0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e274cc0f70 <col:38> 'void *(void *)' Function 0x55e274cba520 'P0' 'void *(void *)'
    | `-ParenExpr 0x55e274cc0ff0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55e274cc0fc8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55e274cc0f90 <col:51> 'int' 0
    |-DeclStmt 0x55e274cc1170 <line:817:3, col:17>
    | `-VarDecl 0x55e274cc1108 <col:3, col:13> col:13 used t828 'pthread_t':'unsigned long'
    |-CallExpr 0x55e274cc1318 <line:818:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55e274cc1300 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e274cc1188 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55e274ca0488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55e274cc11c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55e274cc11a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55e274cc1108 't828' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55e274cc1358 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55e274cc1240 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55e274cc1218 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55e274cc11e0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55e274cc1370 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e274cc1260 <col:38> 'void *(void *)' Function 0x55e274cbac30 'P1' 'void *(void *)'
    | `-ParenExpr 0x55e274cc12e0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55e274cc12b8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55e274cc1280 <col:51> 'int' 0
    |-DeclStmt 0x55e274cc1400 <line:819:3, col:17>
    | `-VarDecl 0x55e274cc1398 <col:3, col:13> col:13 used t829 'pthread_t':'unsigned long'
    |-CallExpr 0x55e274cc15a8 <line:820:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55e274cc1590 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e274cc1418 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55e274ca0488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55e274cc1458 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55e274cc1438 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55e274cc1398 't829' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55e274cc15e8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55e274cc14d0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55e274cc14a8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55e274cc1470 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55e274cc1600 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e274cc14f0 <col:38> 'void *(void *)' Function 0x55e274cbb298 'P2' 'void *(void *)'
    | `-ParenExpr 0x55e274cc1570 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55e274cc1548 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55e274cc1510 <col:51> 'int' 0
    |-DeclStmt 0x55e274cc1690 <line:821:3, col:17>
    | `-VarDecl 0x55e274cc1628 <col:3, col:13> col:13 used t830 'pthread_t':'unsigned long'
    |-CallExpr 0x55e274cc1838 <line:822:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55e274cc1820 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e274cc16a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55e274ca0488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55e274cc16e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55e274cc16c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55e274cc1628 't830' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55e274cc1878 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55e274cc1760 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55e274cc1738 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55e274cc1700 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55e274cc1890 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e274cc1780 <col:38> 'void *(void *)' Function 0x55e274cbc608 'P3' 'void *(void *)'
    | `-ParenExpr 0x55e274cc1800 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55e274cc17d8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55e274cc17a0 <col:51> 'int' 0
    |-CallExpr 0x55e274cc18e0 <line:823:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55e274cc18c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e274cc18a8 <col:3> 'void ()' Function 0x55e274c5fe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55e274cc19b0 <line:824:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55e274cc1900 <col:3> '_Bool' lvalue Var 0x55e274cb9670 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55e274cc1998 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55e274cc1978 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55e274cc1960 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55e274cc1920 <col:21> 'int' lvalue Var 0x55e274cb9278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55e274cc1940 <col:41> 'int' 4
    |-CallExpr 0x55e274cc1a08 <line:825:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55e274cc19f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e274cc19d0 <col:3> 'void ()' Function 0x55e274c5ff00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55e274cc1a80 <line:826:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55e274cc1a68 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e274cc1a28 <col:3> 'void (int)' Function 0x55e274c5f790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55e274cc1ac0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55e274cc1aa8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55e274cc1a48 <col:21> '_Bool' lvalue Var 0x55e274cb9670 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55e274cc1b10 <line:827:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55e274cc1af8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e274cc1ad8 <col:3> 'void ()' Function 0x55e274c5fe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55e274cc1e08 <line:828:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55e274cc1b30 <col:3> 'int' lvalue Var 0x55e274cb9a28 'z' 'int'
    | `-ConditionalOperator 0x55e274cc1dd8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55e274cc1c00 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55e274cc1bb8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55e274cc1ba0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55e274cc1b50 <col:7> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55e274cc1be8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55e274cc1bd0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55e274cc1b80 <col:25> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55e274cc1dc0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55e274cc1c20 <col:42> 'int' lvalue Var 0x55e274cba1a8 'z$w_buff0' 'int'
    |   `-ParenExpr 0x55e274cc1da0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55e274cc1d70 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55e274cc1ce0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55e274cc1c98 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55e274cc1c80 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55e274cc1c40 <col:55> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55e274cc1cc8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55e274cc1cb0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55e274cc1c60 <col:73> '_Bool' lvalue Var 0x55e274cb9e50 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55e274cc1d40 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55e274cc1d00 <col:90> 'int' lvalue Var 0x55e274cba2a0 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55e274cc1d58 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55e274cc1d20 <col:102> 'int' lvalue Var 0x55e274cb9a28 'z' 'int'
    |-BinaryOperator 0x55e274cc2010 <line:829:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55e274cc1e28 <col:3> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55e274cc1ff8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e274cc1fc8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55e274cc1ee8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55e274cc1ea0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55e274cc1e88 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55e274cc1e48 <col:20> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55e274cc1ed0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55e274cc1eb8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55e274cc1e68 <col:38> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55e274cc1f80 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55e274cc1f38 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55e274cc1f08 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55e274cc1fb0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55e274cc1f98 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55e274cc1f60 <col:66> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55e274cc22f8 <line:830:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55e274cc2030 <col:3> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55e274cc22e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e274cc22b0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55e274cc21d0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55e274cc20f0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55e274cc20a8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55e274cc2090 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55e274cc2050 <col:20> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55e274cc20d8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55e274cc20c0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55e274cc2070 <col:38> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55e274cc21b0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55e274cc2168 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55e274cc2150 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55e274cc2110 <col:56> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55e274cc2198 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55e274cc2180 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55e274cc2130 <col:74> '_Bool' lvalue Var 0x55e274cb9e50 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55e274cc2268 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55e274cc2220 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55e274cc21f0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55e274cc2298 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55e274cc2280 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55e274cc2248 <col:102> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55e274cc2500 <line:831:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55e274cc2318 <col:3> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55e274cc24e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e274cc24b8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55e274cc23d8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55e274cc2390 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55e274cc2378 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55e274cc2338 <col:20> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55e274cc23c0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55e274cc23a8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55e274cc2358 <col:38> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55e274cc2470 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55e274cc2428 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55e274cc23f8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55e274cc24a0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55e274cc2488 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55e274cc2450 <col:66> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55e274cc27e8 <line:832:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55e274cc2520 <col:3> '_Bool' lvalue Var 0x55e274cb9e50 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55e274cc27d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e274cc27a0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55e274cc26c0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55e274cc25e0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55e274cc2598 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55e274cc2580 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55e274cc2540 <col:20> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55e274cc25c8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55e274cc25b0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55e274cc2560 <col:38> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55e274cc26a0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55e274cc2658 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55e274cc2640 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55e274cc2600 <col:56> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55e274cc2688 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55e274cc2670 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55e274cc2620 <col:74> '_Bool' lvalue Var 0x55e274cb9e50 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55e274cc2758 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55e274cc2710 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55e274cc26e0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55e274cc2788 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55e274cc2770 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55e274cc2738 <col:102> '_Bool' lvalue Var 0x55e274cb9e50 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55e274cc2840 <line:833:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55e274cc2828 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e274cc2808 <col:3> 'void ()' Function 0x55e274c5ff00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55e274cc2898 <line:834:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55e274cc2880 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e274cc2860 <col:3> 'void ()' Function 0x55e274c5fe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55e274cc2948 <line:835:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x55e274cc28b8 <col:3> '_Bool' lvalue Var 0x55e274cba390 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x55e274cc2930 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x55e274cc2910 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x55e274cc28f8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55e274cc28d8 <col:19> 'void *(void)' Function 0x55e274c5f958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x55e274cc29f8 <line:836:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x55e274cc2968 <col:3> '_Bool' lvalue Var 0x55e274cba408 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x55e274cc29e0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x55e274cc29c0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x55e274cc29a8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55e274cc2988 <col:19> 'void *(void)' Function 0x55e274c5f958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x55e274cc2a70 <line:837:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x55e274cc2a18 <col:3> '_Bool' lvalue Var 0x55e274cb9b00 'z$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x55e274cc2a58 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x55e274cc2a38 <col:21> '_Bool' lvalue Var 0x55e274cba408 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x55e274cc2ae8 <line:838:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55e274cc2a90 <col:3> 'int' lvalue Var 0x55e274cb9b80 'z$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x55e274cc2ad0 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55e274cc2ab0 <col:15> 'int' lvalue Var 0x55e274cb9a28 'z' 'int'
    |-BinaryOperator 0x55e274cc2f38 <line:839:3, col:162> 'int' '='
    | |-DeclRefExpr 0x55e274cc2b08 <col:3> 'int' lvalue Var 0x55e274cb9a28 'z' 'int'
    | `-ConditionalOperator 0x55e274cc2f08 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x55e274cc2d30 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x55e274cc2c50 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x55e274cc2b60 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x55e274cc2b48 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x55e274cc2b28 <col:8> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x55e274cc2c30 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x55e274cc2bc8 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x55e274cc2bb0 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x55e274cc2b90 <col:27> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x55e274cc2c18 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x55e274cc2c00 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x55e274cc2be0 <col:46> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x55e274cc2d10 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x55e274cc2ca8 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x55e274cc2c90 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55e274cc2c70 <col:65> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x55e274cc2cf8 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x55e274cc2ce0 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x55e274cc2cc0 <col:84> '_Bool' lvalue Var 0x55e274cb9e50 'z$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55e274cc2ef0 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55e274cc2d50 <col:101> 'int' lvalue Var 0x55e274cb9a28 'z' 'int'
    |   `-ParenExpr 0x55e274cc2ed0 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x55e274cc2ea0 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x55e274cc2e10 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55e274cc2dc8 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55e274cc2db0 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55e274cc2d70 <col:106> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55e274cc2df8 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55e274cc2de0 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55e274cc2d90 <col:124> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55e274cc2e70 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55e274cc2e30 <col:141> 'int' lvalue Var 0x55e274cba1a8 'z$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x55e274cc2e88 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55e274cc2e50 <col:153> 'int' lvalue Var 0x55e274cba2a0 'z$w_buff1' 'int'
    |-BinaryOperator 0x55e274cc3448 <line:840:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55e274cc2f58 <col:3> 'int' lvalue Var 0x55e274cba1a8 'z$w_buff0' 'int'
    | `-ConditionalOperator 0x55e274cc3418 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55e274cc33e8 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55e274cc33d0 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55e274cc2f78 <col:15> '_Bool' lvalue Var 0x55e274cba408 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55e274cc3400 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55e274cc2f98 <col:31> 'int' lvalue Var 0x55e274cba1a8 'z$w_buff0' 'int'
    |   `-ParenExpr 0x55e274cc33b0 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55e274cc3380 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55e274cc31a8 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55e274cc30c8 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55e274cc2ff0 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55e274cc2fd8 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55e274cc2fb8 <col:45> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55e274cc30a8 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55e274cc3040 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55e274cc3028 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55e274cc3008 <col:64> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55e274cc3090 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55e274cc3078 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55e274cc3058 <col:83> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55e274cc3188 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55e274cc3120 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55e274cc3108 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55e274cc30e8 <col:102> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55e274cc3170 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55e274cc3158 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55e274cc3138 <col:121> '_Bool' lvalue Var 0x55e274cb9e50 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55e274cc3368 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55e274cc31c8 <col:138> 'int' lvalue Var 0x55e274cba1a8 'z$w_buff0' 'int'
    |       `-ParenExpr 0x55e274cc3348 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55e274cc3318 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55e274cc3288 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55e274cc3240 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55e274cc3228 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55e274cc31e8 <col:151> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55e274cc3270 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55e274cc3258 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55e274cc3208 <col:169> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55e274cc32e8 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55e274cc32a8 <col:186> 'int' lvalue Var 0x55e274cba1a8 'z$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x55e274cc3300 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55e274cc32c8 <col:198> 'int' lvalue Var 0x55e274cba1a8 'z$w_buff0' 'int'
    |-BinaryOperator 0x55e274cc3958 <line:841:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55e274cc3468 <col:3> 'int' lvalue Var 0x55e274cba2a0 'z$w_buff1' 'int'
    | `-ConditionalOperator 0x55e274cc3928 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55e274cc38f8 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55e274cc38e0 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55e274cc3488 <col:15> '_Bool' lvalue Var 0x55e274cba408 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55e274cc3910 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55e274cc34a8 <col:31> 'int' lvalue Var 0x55e274cba2a0 'z$w_buff1' 'int'
    |   `-ParenExpr 0x55e274cc38c0 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55e274cc3890 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55e274cc36b8 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55e274cc35d8 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55e274cc3500 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55e274cc34e8 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55e274cc34c8 <col:45> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55e274cc35b8 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55e274cc3550 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55e274cc3538 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55e274cc3518 <col:64> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55e274cc35a0 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55e274cc3588 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55e274cc3568 <col:83> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55e274cc3698 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55e274cc3630 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55e274cc3618 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55e274cc35f8 <col:102> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55e274cc3680 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55e274cc3668 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55e274cc3648 <col:121> '_Bool' lvalue Var 0x55e274cb9e50 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55e274cc3878 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55e274cc36d8 <col:138> 'int' lvalue Var 0x55e274cba2a0 'z$w_buff1' 'int'
    |       `-ParenExpr 0x55e274cc3858 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55e274cc3828 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55e274cc3798 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55e274cc3750 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55e274cc3738 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55e274cc36f8 <col:151> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55e274cc3780 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55e274cc3768 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55e274cc3718 <col:169> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55e274cc37f8 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55e274cc37b8 <col:186> 'int' lvalue Var 0x55e274cba2a0 'z$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x55e274cc3810 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55e274cc37d8 <col:198> 'int' lvalue Var 0x55e274cba2a0 'z$w_buff1' 'int'
    |-BinaryOperator 0x55e274cc3f10 <line:842:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55e274cc3978 <col:3> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55e274cc3ef8 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e274cc3ec8 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55e274cc3e80 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55e274cc3e68 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55e274cc3998 <col:20> '_Bool' lvalue Var 0x55e274cba408 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55e274cc3eb0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55e274cc3e98 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55e274cc39b8 <col:36> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x55e274cc3e48 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55e274cc3e18 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55e274cc3bd8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55e274cc3ae8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55e274cc3a10 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55e274cc39f8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55e274cc39d8 <col:55> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55e274cc3ac8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55e274cc3a60 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55e274cc3a48 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55e274cc3a28 <col:74> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55e274cc3ab0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55e274cc3a98 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55e274cc3a78 <col:93> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55e274cc3bb8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55e274cc3b40 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55e274cc3b28 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55e274cc3b08 <col:112> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55e274cc3ba0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55e274cc3b78 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55e274cc3b58 <col:131> '_Bool' lvalue Var 0x55e274cb9e50 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55e274cc3e00 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55e274cc3de8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55e274cc3bf8 <col:148> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x55e274cc3dc8 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55e274cc3d98 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55e274cc3cb8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55e274cc3c70 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55e274cc3c58 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55e274cc3c18 <col:166> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55e274cc3ca0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55e274cc3c88 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55e274cc3c38 <col:184> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55e274cc3d50 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55e274cc3d08 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55e274cc3cd8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55e274cc3d80 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55e274cc3d68 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55e274cc3d30 <col:212> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55e274cc44d8 <line:843:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55e274cc3f30 <col:3> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55e274cc44c0 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e274cc4490 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55e274cc4448 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55e274cc4430 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55e274cc3f50 <col:20> '_Bool' lvalue Var 0x55e274cba408 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55e274cc4478 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55e274cc4460 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55e274cc3f70 <col:36> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x55e274cc4410 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55e274cc43e0 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55e274cc4180 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55e274cc40a0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55e274cc3fc8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55e274cc3fb0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55e274cc3f90 <col:55> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55e274cc4080 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55e274cc4018 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55e274cc4000 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55e274cc3fe0 <col:74> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55e274cc4068 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55e274cc4050 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55e274cc4030 <col:93> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55e274cc4160 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55e274cc40f8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55e274cc40e0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55e274cc40c0 <col:112> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55e274cc4148 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55e274cc4130 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55e274cc4110 <col:131> '_Bool' lvalue Var 0x55e274cb9e50 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55e274cc43c8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55e274cc43b0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55e274cc41a0 <col:148> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x55e274cc4390 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55e274cc4360 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55e274cc4260 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55e274cc4218 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55e274cc4200 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55e274cc41c0 <col:166> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55e274cc4248 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55e274cc4230 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55e274cc41e0 <col:184> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55e274cc4330 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55e274cc42b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55e274cc4280 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55e274cc4348 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55e274cc4308 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55e274cc42d8 <col:219> 'int' 0
    |-BinaryOperator 0x55e274cc4a80 <line:844:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55e274cc44f8 <col:3> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55e274cc4a68 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e274cc4a38 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55e274cc49f0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55e274cc49d8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55e274cc4518 <col:20> '_Bool' lvalue Var 0x55e274cba408 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55e274cc4a20 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55e274cc4a08 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55e274cc4538 <col:36> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x55e274cc49b8 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55e274cc4988 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55e274cc4748 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55e274cc4668 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55e274cc4590 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55e274cc4578 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55e274cc4558 <col:55> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55e274cc4648 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55e274cc45e0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55e274cc45c8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55e274cc45a8 <col:74> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55e274cc4630 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55e274cc4618 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55e274cc45f8 <col:93> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55e274cc4728 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55e274cc46c0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55e274cc46a8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55e274cc4688 <col:112> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55e274cc4710 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55e274cc46f8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55e274cc46d8 <col:131> '_Bool' lvalue Var 0x55e274cb9e50 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55e274cc4970 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55e274cc4958 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55e274cc4768 <col:148> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x55e274cc4938 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55e274cc4908 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55e274cc4828 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55e274cc47e0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55e274cc47c8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55e274cc4788 <col:166> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55e274cc4810 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55e274cc47f8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55e274cc47a8 <col:184> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55e274cc48c0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55e274cc4878 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55e274cc4848 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55e274cc48f0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55e274cc48d8 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55e274cc48a0 <col:212> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55e274cc5058 <line:845:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55e274cc4aa0 <col:3> '_Bool' lvalue Var 0x55e274cb9e50 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55e274cc5040 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55e274cc5010 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55e274cc4fc8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55e274cc4fb0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55e274cc4ac0 <col:20> '_Bool' lvalue Var 0x55e274cba408 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55e274cc4ff8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55e274cc4fe0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55e274cc4ae0 <col:36> '_Bool' lvalue Var 0x55e274cb9e50 'z$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x55e274cc4f90 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55e274cc4f60 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55e274cc4d00 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55e274cc4c20 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55e274cc4b38 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55e274cc4b20 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55e274cc4b00 <col:55> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55e274cc4c00 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55e274cc4b88 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55e274cc4b70 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55e274cc4b50 <col:74> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55e274cc4be8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55e274cc4bd0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55e274cc4bb0 <col:93> '_Bool' lvalue Var 0x55e274cba318 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55e274cc4ce0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55e274cc4c78 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55e274cc4c60 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55e274cc4c40 <col:112> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55e274cc4cc8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55e274cc4cb0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55e274cc4c90 <col:131> '_Bool' lvalue Var 0x55e274cb9e50 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55e274cc4f48 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55e274cc4f30 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55e274cc4d20 <col:148> '_Bool' lvalue Var 0x55e274cb9e50 'z$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x55e274cc4f10 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55e274cc4ee0 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55e274cc4de0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55e274cc4d98 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55e274cc4d80 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55e274cc4d40 <col:166> '_Bool' lvalue Var 0x55e274cba220 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55e274cc4dc8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55e274cc4db0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55e274cc4d60 <col:184> '_Bool' lvalue Var 0x55e274cb9bf8 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55e274cc4eb0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55e274cc4e30 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55e274cc4e00 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55e274cc4ec8 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55e274cc4e88 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55e274cc4e58 <col:219> 'int' 0
    |-BinaryOperator 0x55e274cc53c0 <line:846:3, col:105> '_Bool' '='
    | |-DeclRefExpr 0x55e274cc5078 <col:3> '_Bool' lvalue Var 0x55e274cb96e8 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55e274cc53a8 <col:21, col:105> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55e274cc5390 <col:21, col:105> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55e274cc5370 <col:22, col:105> 'int'
    |       `-BinaryOperator 0x55e274cc5350 <col:23, col:104> 'int' '&&'
    |         |-BinaryOperator 0x55e274cc52b8 <col:23, col:76> 'int' '&&'
    |         | |-BinaryOperator 0x55e274cc5220 <col:23, col:48> 'int' '&&'
    |         | | |-BinaryOperator 0x55e274cc5188 <col:23, col:38> 'int' '&&'
    |         | | | |-BinaryOperator 0x55e274cc50f0 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x55e274cc50d8 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x55e274cc5098 <col:23> 'int' lvalue Var 0x55e274cb97e8 'x' 'int'
    |         | | | | `-IntegerLiteral 0x55e274cc50b8 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x55e274cc5168 <col:33, col:38> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x55e274cc5150 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x55e274cc5110 <col:33> 'int' lvalue Var 0x55e274cb9908 'y' 'int'
    |         | | |   `-IntegerLiteral 0x55e274cc5130 <col:38> 'int' 2
    |         | | `-BinaryOperator 0x55e274cc5200 <col:43, col:48> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55e274cc51e8 <col:43> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55e274cc51a8 <col:43> 'int' lvalue Var 0x55e274cb9a28 'z' 'int'
    |         | |   `-IntegerLiteral 0x55e274cc51c8 <col:48> 'int' 2
    |         | `-BinaryOperator 0x55e274cc5298 <col:53, col:76> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55e274cc5280 <col:53> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55e274cc5240 <col:53> 'int' lvalue Var 0x55e274cb9398 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x55e274cc5260 <col:76> 'int' 2
    |         `-BinaryOperator 0x55e274cc5330 <col:81, col:104> 'int' '=='
    |           |-ImplicitCastExpr 0x55e274cc5318 <col:81> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55e274cc52d8 <col:81> 'int' lvalue Var 0x55e274cb94b8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x55e274cc52f8 <col:104> 'int' 0
    |-BinaryOperator 0x55e274cc54f0 <line:847:3, col:37> 'int' '='
    | |-DeclRefExpr 0x55e274cc53e0 <col:3> 'int' lvalue Var 0x55e274cb9a28 'z' 'int'
    | `-ConditionalOperator 0x55e274cc54c0 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x55e274cc5478 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55e274cc5460 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55e274cc5400 <col:7> '_Bool' lvalue Var 0x55e274cb9b00 'z$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x55e274cc5490 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55e274cc5420 <col:25> 'int' lvalue Var 0x55e274cb9b80 'z$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x55e274cc54a8 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55e274cc5440 <col:37> 'int' lvalue Var 0x55e274cb9a28 'z' 'int'
    |-BinaryOperator 0x55e274cc5588 <line:848:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x55e274cc5510 <col:3> '_Bool' lvalue Var 0x55e274cb9b00 'z$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x55e274cc5560 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x55e274cc5530 <col:28> 'int' 0
    |-CallExpr 0x55e274cc55e0 <line:849:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55e274cc55c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55e274cc55a8 <col:3> 'void ()' Function 0x55e274c5ff00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55e274cc5658 <line:850:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55e274cc5640 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55e274cc5600 <col:3> 'void (int)' Function 0x55e274c5fbc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55e274cc5698 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55e274cc5680 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55e274cc5620 <col:21> '_Bool' lvalue Var 0x55e274cb96e8 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55e274cc56d0 <line:851:3, col:10>
      `-IntegerLiteral 0x55e274cc56b0 <col:10> 'int' 0
